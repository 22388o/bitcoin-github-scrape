[
  {
    "sha": "bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYzY5ZjM0YjM1MzdhN2QzNGZiN2Y4OWI0YWNkNjE5NzQ5YmM2Y2My",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:23:37Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:24:00Z"
      },
      "message": "build: bump version to 0.14.0",
      "tree": {
        "sha": "f8200f305fbfc61b5612c8cc8a4e9fdd7d609bfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8200f305fbfc61b5612c8cc8a4e9fdd7d609bfa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYpyOiAAoJEHSBCwEjRsmm5xgIAKGWQDgjdXRxxf9JbreRc/LU\ni7bXDMG7oGLUtpTgBe/C0nx4AdWEFkxVMpKTjR+H+3AuARKFgPJKCwm1u9fdChcl\nbBqg6LioiFDO3mYHZhB0BwYbfQ15c+NDfB8/jeWAcvs1rsdFRTyCxkVRBOdLX6/l\n5WD8Xl4wS39JxFDuDfs7ZPcxIRulNeDD1WEVdyss8ZLMr0gL+Xsu/k/ZAkE7xwPr\nxY+zMMmH+QFyYf7gBBV5vXb8rkl06I5BKpxkZtSQevq9jH+G2CDImgUjYjnmWgXy\nihUrCVO9tj+863Lua/HW/dXojeGiDPtjWJRC2qaUyq5Vvfh/7PHPVles9E6Pcqo=\n=fAwK\n-----END PGP SIGNATURE-----",
        "payload": "tree f8200f305fbfc61b5612c8cc8a4e9fdd7d609bfa\nparent 9828f9a9962c1bee5c343847030b9cfd87a40a5e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487348617 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487348640 +0100\n\nbuild: bump version to 0.14.0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9828f9a9962c1bee5c343847030b9cfd87a40a5e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9828f9a9962c1bee5c343847030b9cfd87a40a5e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "2b2a001d5d38ebea28a8b314a373cc54e6706e3c",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "patch": "@@ -1,10 +1,10 @@\n dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 13)\n-define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_MINOR, 14)\n+define(_CLIENT_VERSION_REVISION, 0)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])"
      },
      {
        "sha": "a10e4a552cdc08d54b4159f96fd4dd85a67804b2",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "patch": "@@ -38,7 +38,7 @@ PROJECT_NAME           = \"Bitcoin Core\"\n # could be handy for archiving the generated documentation or if some version\n # control system is used.\n \n-PROJECT_NUMBER         = 0.13.99\n+PROJECT_NUMBER         = 0.14.0\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description\n # for a project that appears at the top of each page and should give viewer a"
      },
      {
        "sha": "fb2e0ee7d00cb7c8e5d76faee042aa19b4084b8c",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.13.99\n+Bitcoin Core 0.14.0\n =====================\n \n Setup"
      },
      {
        "sha": "67eb7873a174300bd011734efdf3d2bd2b095bdc",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.13.99\r\n+Bitcoin Core 0.14.0\r\n =====================\r\n \r\n Intro\r"
      },
      {
        "sha": "2b259fb9f02fe8f9fcfce76264ab53471ea14c38",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "patch": "@@ -15,12 +15,12 @@\n \n //! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n-#define CLIENT_VERSION_MINOR 13\n-#define CLIENT_VERSION_REVISION 99\n+#define CLIENT_VERSION_MINOR 14\n+#define CLIENT_VERSION_REVISION 0\n #define CLIENT_VERSION_BUILD 0\n \n //! Set to true for release, false for prerelease or test build\n-#define CLIENT_VERSION_IS_RELEASE false\n+#define CLIENT_VERSION_IS_RELEASE true\n \n /**\n  * Copyright year (2009-this)"
      }
    ]
  },
  {
    "sha": "f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNjhlNDQxNGQ3N2FlYjYwZDhkZWUxYjJlNTNhMTk1ZmYxNWIyYzQ4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:42:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:43:06Z"
      },
      "message": "qt: pre-rc1 translations update",
      "tree": {
        "sha": "6a199e1b0b6cc2d3e8e01852de088e4e3f4ffe54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a199e1b0b6cc2d3e8e01852de088e4e3f4ffe54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYpygdAAoJEHSBCwEjRsmmz2UH/je9VjO98yuwyLXx7D3iypvK\nMEm43xE7WdIM75WDKmwJmDJujRaMYuyngF4NVj12s2Qz+KfttTEPF9r05eEkRFVR\nH6nrwsV3PbUg3vNNKRGAcxvYSsbMNIjMBLhZB1tx/OIt3KX1Zt4W1FFWpEL9bkXM\n4AZa9QRY3mV8ZTlfFKIsiAMT20EoaD0QORuAtJfzi3nkUI9EHw2QEC9ciTy5sRVf\nC5kABfEKgVfX1KfGMBgo8HsXY0HdHOTLOrxxXSjphJxBCYOs480/DmrKKnWuC5PM\njgs6+GPHzlkTjAdcjXB9EBAo+BxwxXD4jPiE8DiQ6R4YR9kTrsgF5KfDKmwDHTs=\n=L1hV\n-----END PGP SIGNATURE-----",
        "payload": "tree 6a199e1b0b6cc2d3e8e01852de088e4e3f4ffe54\nparent bc69f34b3537a7d34fb7f89b4acd619749bc6cc2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487349732 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487349786 +0100\n\nqt: pre-rc1 translations update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2"
      }
    ],
    "stats": {
      "total": 1132,
      "additions": 1103,
      "deletions": 29
    },
    "files": [
      {
        "sha": "432e8c3faf8cd33ec9a8c76636b5c77d1c10b958",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -5,6 +5,10 @@\n         <source>Create a new address</source>\n         <translation>Skep 'n nuwe adres</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;Nuwe</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Maak 'n kopie van die huidige adres na die stelsel klipbord</translation>\n@@ -17,6 +21,14 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>Verwyder die huidiglik gekieste address van die lys</translation>\n     </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;Verwyder</translation>\n@@ -25,6 +37,42 @@\n         <source>Choose the address to send coins to</source>\n         <translation>Kies die address na wie die muntstukke gestuur moet word</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>K&amp;ies</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Stuur adresse</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ontvang adresse</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopie adres</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopie &amp;Etiket</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Wysig</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Voer adres lys uit</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -660,6 +708,10 @@\n         <source>Copy amount</source>\n         <translation>Kopieer bedrag</translation>\n     </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Datum</translation>\n@@ -680,6 +732,10 @@\n         <source>ID</source>\n         <translation>ID</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     <message>\n         <source>Range:</source>\n         <translation>Reeks:</translation>\n@@ -704,6 +760,14 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "a66fa55cfedbcabad8155674cbbaf654c1ebf333",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -849,7 +849,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>yes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1499,7 +1499,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+28\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1760,7 +1760,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+759\"/>\n+        <location line=\"+762\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>"
      },
      {
        "sha": "e23064b0fefd527a7b4e42067be1ac3dd82a9e1e",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -3747,6 +3747,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Starting network threads...</source>\n         <translation>Iniciando funciones de red...</translation>\n     </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Esta es la tarifa m\u00ednima de transacci\u00f3n que usted paga en cada transacci\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: %u)</translation>"
      },
      {
        "sha": "b8c89c51af0d51eac6053054b0340c676583107c",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 638,
        "deletions": 14,
        "changes": 652,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -562,11 +562,75 @@\n         <source>Confirmed</source>\n         <translation>Confermato</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copia indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copia l'ID transazione</translation>\n+    </message>\n+    <message>\n+        <source>Lock unspent</source>\n+        <translation>Bloccare non spesi</translation>\n+    </message>\n+    <message>\n+        <source>Unlock unspent</source>\n+        <translation>Sbloccare non spesi</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copia quantit\u00e0</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copia commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copia dopo commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copia byte</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copia trascurabile</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copia resto</translation>\n+    </message>\n+    <message>\n+        <source>(%1 locked)</source>\n+        <translation>(%1 bloccato)</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>s\u00ec</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>no</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(resto)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -702,6 +766,10 @@\n         <source>Error</source>\n         <translation>Errore</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>GB di spazio libero disponibile</numerusform><numerusform>%n GB di spazio disponibile</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>(of %n GB needed)</source>\n         <translation><numerusform>(di %nGB richiesti)</numerusform><numerusform>(%n GB richiesti)</numerusform></translation>\n@@ -713,6 +781,10 @@\n         <source>Form</source>\n         <translation>Modulo</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Sconosciuto...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Ora del blocco pi\u00f9 recente</translation>\n@@ -1054,6 +1126,14 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Richiesta di pagamento scaduta.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Richiesta di pagamento invalida</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -1065,7 +1145,11 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Node/Service</source>\n         <translation>Nodo/Servizio</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Ping</source>\n+        <translation>Ping</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject</name>\n     <message>\n@@ -1104,17 +1188,49 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>%1 ms</source>\n         <translation>%1 ms</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>%n secondo</numerusform><numerusform>%n secondi</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>%n minuto</numerusform><numerusform>%n minuti</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n ora</numerusform><numerusform>%n ore</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n giorno</numerusform><numerusform>%n giorni</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n settimana</numerusform><numerusform>%n settimane</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 e %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n anno</numerusform><numerusform>%n anni</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n-    </context>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Errore: %1</translation>\n+    </message>\n+</context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>Immagine PNG (*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n     <message>\n@@ -1464,7 +1580,23 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Remove</source>\n         <translation>Rimuovi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy URI</source>\n+        <translation>Copia URI</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>Copia il messaggio</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1483,26 +1615,58 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Salva Immagine...</translation>\n     </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Indirizzo</translation>\n     </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Importo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(nessun messaggio)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount requested)</source>\n+        <translation>(nessun importo richiesto)</translation>\n+    </message>\n+    <message>\n+        <source>Requested</source>\n+        <translation>Richiesto</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n@@ -1645,6 +1809,54 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>S&amp;end</source>\n         <translation>&amp;Invia</translation>\n     </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copia quantit\u00e0</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copia commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copia dopo commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copia byte</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copia trascurabile</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copia resto</translation>\n+    </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 a %2</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Richiesta di pagamento scaduta.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n block(s)</source>\n+        <translation><numerusform>%n blocco</numerusform><numerusform>%n blocchi</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Attenzione: Indirizzo Bitcoin non valido</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Unknown change address</source>\n+        <translation>Attenzione: Indirizzo per il resto sconosciuto</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n@@ -1731,7 +1943,11 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n     </context>\n <context>\n     <name>SendConfirmationDialog</name>\n-    </context>\n+    <message>\n+        <source>Yes</source>\n+        <translation>Si</translation>\n+    </message>\n+</context>\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n@@ -1829,7 +2045,55 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Reset all verify message fields</source>\n         <translation>Reimposta tutti i campi della verifica messaggio</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>L'indirizzo inserito non \u00e8 valido.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the address and try again.</source>\n+        <translation>Per favore controlla l'indirizzo e prova di nuovo.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address does not refer to a key.</source>\n+        <translation>L'indirizzo bitcoin inserito non \u00e8 associato a nessuna chiave.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock was cancelled.</source>\n+        <translation>Sblocco del portamonete annullato.</translation>\n+    </message>\n+    <message>\n+        <source>Private key for the entered address is not available.</source>\n+        <translation>La chiave privata per l'indirizzo inserito non \u00e8 disponibile.</translation>\n+    </message>\n+    <message>\n+        <source>Message signing failed.</source>\n+        <translation>Firma messaggio fallita.</translation>\n+    </message>\n+    <message>\n+        <source>Message signed.</source>\n+        <translation>Messaggio firmato.</translation>\n+    </message>\n+    <message>\n+        <source>The signature could not be decoded.</source>\n+        <translation>Non \u00e8 stato possibile decodificare la firma.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>Per favore controlla la firma e prova di nuovo.</translation>\n+    </message>\n+    <message>\n+        <source>The signature did not match the message digest.</source>\n+        <translation>La firma non corrisponde al digest del messaggio.</translation>\n+    </message>\n+    <message>\n+        <source>Message verification failed.</source>\n+        <translation>Verifica messaggio fallita.</translation>\n+    </message>\n+    <message>\n+        <source>Message verified.</source>\n+        <translation>Messaggio verificato.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SplashScreen</name>\n     <message>\n@@ -1846,7 +2110,123 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>TransactionDesc</name>\n-    </context>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1/offline</translation>\n+    </message>\n+    <message>\n+        <source>Status</source>\n+        <translation>Stato</translation>\n+    </message>\n+    <message>\n+        <source>, has not been successfully broadcast yet</source>\n+        <translation>, non \u00e8 ancora stata trasmessa con successo</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Sorgente</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>Generato</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>Da</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>sconosciuto</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>A</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>proprio indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Credito</translation>\n+    </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>non accettate</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>Debito</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Debito totale</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Credito totale</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Commissione transazione</translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Importo netto</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Commento</translation>\n+    </message>\n+    <message>\n+        <source>Transaction ID</source>\n+        <translation>ID della transazione</translation>\n+    </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>Commerciante</translation>\n+    </message>\n+    <message>\n+        <source>Debug information</source>\n+        <translation>Informazione di debug</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transazione</translation>\n+    </message>\n+    <message>\n+        <source>Inputs</source>\n+        <translation>Input</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Importo</translation>\n+    </message>\n+    <message>\n+        <source>true</source>\n+        <translation>vero</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>falso</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -1856,21 +2236,201 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Tipo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Offline</source>\n+        <translation>Offline</translation>\n+    </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>Non confermata</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Confermata (%1 conferme)</translation>\n+    </message>\n+    <message>\n+        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n+        <translation>Questo blocco non \u00e8 stato ricevuto da alcun altro nodo e probabilmente non sar\u00e0 accettato!</translation>\n+    </message>\n+    <message>\n+        <source>Generated but not accepted</source>\n+        <translation>Generati, ma non accettati</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Ricevuto tramite</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Inviato a</translation>\n+    </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Pagamento a te stesso</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ottenuto dal mining</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>(n/a)</source>\n+        <translation>(n/d)</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n+        <translation>Stato della transazione. Passare con il mouse su questo campo per visualizzare il numero di conferme.</translation>\n+    </message>\n+    <message>\n+        <source>Date and time that the transaction was received.</source>\n+        <translation>Data e ora in cui la transazione \u00e8 stata ricevuta.</translation>\n+    </message>\n+    <message>\n+        <source>Type of transaction.</source>\n+        <translation>Tipo di transazione.</translation>\n+    </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Indica se un indirizzo di sola lettura sia o meno coinvolto in questa transazione.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Intento/scopo della transazione definito dall'utente.</translation>\n+    </message>\n+    <message>\n+        <source>Amount removed from or added to balance.</source>\n+        <translation>Importo rimosso o aggiunto al saldo.</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>Tutti</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Oggi</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Questa settimana</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Questo mese</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Il mese scorso</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Quest'anno</translation>\n+    </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Intervallo...</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Ricevuto tramite</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Inviato a</translation>\n+    </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>A te stesso</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ottenuto dal mining</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>Altro</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Inserisci un indirizzo o un'etichetta da cercare</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Importo minimo</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copia indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copia l'ID transazione</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Copia la transazione raw</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>Modifica l'etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Show transaction details</source>\n+        <translation>Mostra i dettagli della transazione</translation>\n+    </message>\n+    <message>\n+        <source>Export Transaction History</source>\n+        <translation>Esporta lo storico delle transazioni</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Testo CSV (*.csv)</translation>\n     </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Confermato</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Tipo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n@@ -1879,11 +2439,35 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Address</source>\n         <translation>Indirizzo</translation>\n     </message>\n+    <message>\n+        <source>ID</source>\n+        <translation>ID</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>Esportazione Fallita</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Si \u00e8 verificato un errore durante il salvataggio dello storico delle transazioni in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>Esportazione Riuscita</translation>\n+    </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>Lo storico delle transazioni e' stato salvato con successo in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Intervallo:</translation>\n+    </message>\n+    <message>\n+        <source>to</source>\n+        <translation>a</translation>\n+    </message>\n+</context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n     <message>\n@@ -1893,13 +2477,53 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>Non \u00e8 stato caricato alcun portamonete.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n-    </context>\n+    <message>\n+        <source>Send Coins</source>\n+        <translation>Invia Bitcoin</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n-    </context>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Esporta</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Esporta su file i dati contenuti nella tabella corrente</translation>\n+    </message>\n+    <message>\n+        <source>Backup Wallet</source>\n+        <translation>Backup Portamonete</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Data (*.dat)</source>\n+        <translation>Dati Portamonete (*.dat)</translation>\n+    </message>\n+    <message>\n+        <source>Backup Failed</source>\n+        <translation>Backup Fallito</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Si \u00e8 verificato un errore durante il salvataggio dei dati del portamonete in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Backup Successful</source>\n+        <translation>Backup eseguito con successo</translation>\n+    </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>Il portamonete \u00e8 stato correttamente salvato in %1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>bitcoin-core</name>\n     <message>"
      },
      {
        "sha": "6d6d6718fa77db9281fe88e178d34c379dbc9cf9",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -419,7 +419,7 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n-        <translation><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform></translation>\n+        <translation><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform></translation>\n     </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n@@ -431,7 +431,7 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>Processed %n block(s) of transaction history.</source>\n-        <translation><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform></translation>\n+        <translation><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 behind</source>\n@@ -832,11 +832,11 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n GB of free space available</source>\n-        <translation><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform></translation>\n+        <translation><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>(of %n GB needed)</source>\n-        <translation><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform></translation>\n+        <translation><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform></translation>\n     </message>\n </context>\n <context>\n@@ -1325,11 +1325,11 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n second(s)</source>\n-        <translation><numerusform>%n sekunda</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform></translation>\n+        <translation><numerusform>%n sekunda</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n minute(s)</source>\n-        <translation><numerusform>%n minuta</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform></translation>\n+        <translation><numerusform>%n minuta</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 and %2</source>"
      },
      {
        "sha": "7d013416ff76b9f7087dcba43ef740b2753f7162",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -329,6 +329,10 @@\n         <source>Click to enable network activity again.</source>\n         <translation>\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0441\u043d\u043e\u0432\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0441\u0435\u0442\u0435\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c.</translation>\n     </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 (%1%)...</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>\u0418\u0434\u0451\u0442 \u043f\u0435\u0440\u0435\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435...</translation>\n@@ -3089,6 +3093,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435 (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 TxID)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>\u0425\u0440\u0430\u043d\u0438\u0442\u044c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0435\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>\u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a \u0432 \u0446\u0435\u043f\u0438, \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0435\u0433\u043e \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0431\u043b\u043e\u043a\u0438 \u0432\u0435\u0440\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 (0 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0441\u0435\u0445, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s, \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0435\u0442\u044c: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432. \u041b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432\u043f\u0435\u0440\u0435\u0434 \u0438\u043b\u0438 \u043d\u0430\u0437\u0430\u0434 \u043d\u0430 \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u \u0441\u0435\u043a\u0443\u043d\u0434)</translation>\n@@ -3105,6 +3117,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u043d\u0435\u0441\u0442\u0438 \u0441\u0432\u043e\u0439 \u0432\u043a\u043b\u0430\u0434, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0439\u0434\u0435\u0442\u0435 %s \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438. \u041f\u043e\u0441\u0435\u0442\u0438\u0442\u0435  %s \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u043c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0438.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0437\u0430 \u0441\u0447\u0451\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f (\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f) \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432. \u0411\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0451\u043d \u0432\u044b\u0437\u043e\u0432 RPC \u043c\u0435\u0442\u043e\u0434\u0430 pruneblockchain \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 \u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432 \u041c\u0431. \u042d\u0442\u043e\u0442 \u0440\u0435\u0436\u0438\u043c \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 -txindex \u0438 -rescan. \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043e\u043f\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0 = \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432, 1 = \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0440\u0443\u0447\u043d\u043e\u0435 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 RPC, &gt;%u = \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0440\u0435\u0437\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0431\u043b\u043e\u043a\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0432 \u041c\u0431)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u0443\u0440\u0441 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 (\u0432 %s/\u041a\u0431) \u0434\u043b\u044f  \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439\u0431 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u0432 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0439 \u0431\u043b\u043e\u043a. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 (\u043e\u0442 %u \u0434\u043e %d, 0=\u0430\u0432\u0442\u043e, &lt;0 = \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u044f\u0434\u0435\u0440 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u043c\u0438, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>"
      },
      {
        "sha": "2049715b856e04116ff6fe6d6a180467fb609377",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 368,
        "deletions": 6,
        "changes": 374,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "patch": "@@ -41,10 +41,70 @@\n         <source>&amp;Delete</source>\n         <translation>\u522a\u9664 &amp;D</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u9078\u64c7\u8981\u4ed8\u9322\u904e\u53bb\u7684\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u9078\u64c7\u8981\u6536\u9322\u7684\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u9078\u64c7 &amp;h</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u4ed8\u6b3e\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u6536\u6b3e\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>\u8907\u88fd\u5730\u5740 &amp;C</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>\u8907\u88fd\u6a19\u8a18 &amp;L</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>\u7de8\u8f2f &amp;E</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u532f\u51fa\u5730\u5740\u6e05\u55ae</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u9017\u865f\u5206\u9694\u6a94 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u532f\u51fa\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u5132\u5b58\u5730\u5740\u5217\u8868\u5230 %1 \u6642\u767c\u751f\u932f\u8aa4\u3002\u8acb\u518d\u8a66\u4e00\u6b21\u3002</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,7 +123,91 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u91cd\u8907\u65b0\u5bc6\u78bc</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>\u52a0\u5bc6\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>\u9019\u500b\u52d5\u4f5c\u9700\u8981\u4f60\u7684\u9322\u5305\u5bc6\u78bc\u4f86\u5c07\u9322\u5305\u89e3\u9396\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u89e3\u9396\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>\u9019\u500b\u52d5\u4f5c\u9700\u8981\u4f60\u7684\u9322\u5305\u5bc6\u78bc\u4f86\u5c07\u9322\u5305\u89e3\u5bc6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>\u89e3\u5bc6\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u66f4\u6539\u5bc6\u78bc</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u8f38\u5165\u820a\u5bc6\u78bc\u548c\u65b0\u5bc6\u78bc\u81f3\u9322\u5305\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>\u78ba\u8a8d\u9322\u5305\u52a0\u5bc6</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>\u8b66\u544a: \u5982\u679c\u4f60\u5c07\u9322\u5305\u52a0\u5bc6\u5f8c\u53c8\u5fd8\u8a18\u5bc6\u78bc\uff0c\u4f60\u5c31\u6703&lt;b&gt;\u5931\u53bb\u6240\u6709 Bitcoin \u4e86&lt;/b&gt;\uff01</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>\u4f60\u78ba\u5b9a\u8981\u628a\u9322\u5305\u52a0\u5bc6\u55ce\uff1f</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>\u9322\u5305\u5df2\u52a0\u5bc6</translation>\n+    </message>\n+    <message>\n+        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>%1 \u73fe\u5728\u8981\u95dc\u9589\u4f86\u5b8c\u6210\u52a0\u5bc6\u7a0b\u5e8f\u3002\u8acb\u8a18\u5f97\u5c07\u9322\u5305\u52a0\u5bc6\u4e0d\u80fd\u5b8c\u5168\u9632\u6b62\u4f60\u7684 Bitcoins \u7d93\u88ab\u5165\u4fb5\u96fb\u8166\u7684\u60e1\u610f\u7a0b\u5f0f\u5077\u53d6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u91cd\u8981: \u8acb\u6539\u7528\u65b0\u7522\u751f\u7684\u52a0\u5bc6\u9322\u5305\u6a94\uff0c\u4f86\u53d6\u4ee3\u6240\u4ee5\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u3002\u70ba\u5b89\u5168\u8a08\uff0c\u7576\u4f60\u958b\u59cb\u4f7f\u7528\u65b0\u7684\u52a0\u5bc6\u9322\u5305\u6a94\u5f8c\uff0c\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e86\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u9322\u5305\u52a0\u5bc6\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u56e0\u5167\u90e8\u932f\u8aa4\u5c0e\u81f4\u9322\u5305\u52a0\u5bc6\u5931\u6557\uff0c\u4f60\u7684\u9322\u5305\u5c1a\u672a\u52a0\u5bc6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u63d0\u4f9b\u7684\u5bc6\u78bc\u4e0d\u4e00\u81f4\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>\u9322\u5305\u89e3\u9396\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u7528\u4f86\u89e3\u5bc6\u9322\u5305\u7684\u5bc6\u78bc\u4e0d\u5c0d\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>\u9322\u5305\u89e3\u5bc6\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u9322\u5305\u5bc6\u78bc\u5df2\u6210\u529f\u66f4\u6539\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u8b66\u544a: Caps Lock \u5df2\u555f\u7528\uff01</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n     <message>\n@@ -113,6 +257,14 @@\n         <source>Quit application</source>\n         <translation>\u7d50\u675f\u61c9\u7528\u7a0b\u5f0f</translation>\n     </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>\u95dc\u65bc %1 &amp;A</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>\u986f\u793a %1 \u7684\u76f8\u95dc\u8cc7\u8a0a</translation>\n+    </message>\n     <message>\n         <source>About &amp;Qt</source>\n         <translation>\u95dc\u65bc Qt &amp;Q</translation>\n@@ -125,6 +277,10 @@\n         <source>&amp;Options...</source>\n         <translation>\u9078\u9805... &amp;O</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>\u4fee\u6b63 %1 \u7684\u8a2d\u5b9a\u9078\u9805</translation>\n+    </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation>\u52a0\u5bc6\u9322\u5305... &amp;E</translation>\n@@ -201,9 +357,51 @@\n         <source>Show or hide the main Window</source>\n         <translation>\u986f\u793a\u6216\u96b1\u85cf\u4e3b\u8996\u7a97</translation>\n     </message>\n+    <message>\n+        <source>&amp;File</source>\n+        <translation>\u6a94\u6848 &amp;F</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>\u8a2d\u5b9a &amp;S</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Help</source>\n+        <translation>\u8aaa\u660e &amp;H</translation>\n+    </message>\n+    <message>\n+        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n+        <translation>\u8981\u6c42\u4ed8\u6b3e (\u7522\u751fQR\u78bc bitcoin: URIs)</translation>\n+    </message>\n+    <message>\n+        <source>Indexing blocks on disk...</source>\n+        <translation>\u6b63\u5728\u70ba\u78c1\u789f\u5340\u584a\u5efa\u7acb\u7d22\u5f15...</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u8b66\u544a</translation>\n+    </message>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u8cc7\u8a0a</translation>\n+    </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u65e5\u671f: %1\n+</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -216,6 +414,10 @@\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n@@ -237,28 +439,144 @@\n     </context>\n <context>\n     <name>QObject</name>\n+    <message>\n+        <source>Enter a Bitcoin address (e.g. %1)</source>\n+        <translation>\u8f38\u5165\u4e00\u500b Bitcoin \u4f4d\u5740 (\u4f8b\u5982 %1)</translation>\n+    </message>\n+    <message>\n+        <source>%1 d</source>\n+        <translation>%1 \u65e5</translation>\n+    </message>\n+    <message>\n+        <source>%1 h</source>\n+        <translation>%1 \u5c0f\u6642</translation>\n+    </message>\n+    <message>\n+        <source>%1 m</source>\n+        <translation>%1 \u5206</translation>\n+    </message>\n+    <message>\n+        <source>%1 s</source>\n+        <translation>%1 \u79d2</translation>\n+    </message>\n+    <message>\n+        <source>None</source>\n+        <translation>\u6c92\u6709</translation>\n+    </message>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>%1 ms</source>\n+        <translation>%1 \u4eb3\u79d2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>%n \u79d2</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>%n \u5206\u9418</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n \u5c0f\u6642</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n \u65e5</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n \u661f\u671f</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>%1 and %2</source>\n+        <translation>%1 \u548c %2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n \u5e74</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>\u5132\u5b58 QR \u78bc</translation>\n+    </message>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>PNG \u5f71\u50cf(*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Information</source>\n+        <translation>\u8cc7\u8a0a &amp;I</translation>\n+    </message>\n+    <message>\n+        <source>Debug window</source>\n+        <translation>\u9664\u932f\u8996\u7a97</translation>\n+    </message>\n+    <message>\n+        <source>General</source>\n+        <translation>\u4e00\u822c</translation>\n+    </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>\u5df2\u63a5\u6536</translation>\n+    </message>\n+    <message>\n+        <source>Sent</source>\n+        <translation>\u5df2\u9001\u51fa</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>\u7248\u672c</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     </context>\n@@ -279,15 +597,47 @@\n     </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u958b\u653e\u81f3 %1</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u958b\u653e\u81f3 %1</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u9017\u865f\u5206\u9694\u6a94 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u532f\u51fa\u5931\u6557</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n@@ -303,5 +653,17 @@\n     </context>\n <context>\n     <name>bitcoin-core</name>\n-    </context>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u8cc7\u8a0a</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u8b66\u544a</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n+</context>\n </TS>\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYTAyZWNjNzNhZjRiNGFjMzZkYTFiZDA0ZjllN2VkZGY2NDBlNDhm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:47:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T16:48:30Z"
      },
      "message": "doc: Update release notes from wiki",
      "tree": {
        "sha": "33374ffdf93809bd6d962f410b2cc9a765b5aa32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33374ffdf93809bd6d962f410b2cc9a765b5aa32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYpylfAAoJEHSBCwEjRsmmFKIH/iufEwXRkoBzq/796JIQTh+A\nGLT98w6Z8AlN3I1IO/HjrEuxFvHrhJJO+/iwYWfaz63bj6c/NJzv+AHWqF3+YRQS\n0fsZg25eXCJWVpWBgRReBbMyqE7ZyLVrBzTXJ58WqckDK4pxyw+EnbI3TDMYiRpl\ns5qTMJD6Une8bVETctGQULNvzu1jNZGE8BnjO7V93j0sJBiRQ5q4H1Wffmvjr4J+\nACMXng2kwhPr75PgwNbhpKUdTA85c4CcM4YtqxEU/y9+OYXlEFr5EJgPeb/tnWZP\nQB3TFY4BTI9iDxZ9fFHcNDyKrVXt4eEetopmQkjfctWm3Y1DwyzIu31zcX8ph+4=\n=DoWJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 33374ffdf93809bd6d962f410b2cc9a765b5aa32\nparent f68e4414d77aeb60d8dee1b2e53a195ff15b2c48\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487350026 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487350110 +0100\n\ndoc: Update release notes from wiki\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f68e4414d77aeb60d8dee1b2e53a195ff15b2c48"
      }
    ],
    "stats": {
      "total": 278,
      "additions": 221,
      "deletions": 57
    },
    "files": [
      {
        "sha": "f83b0ce8fc9df5dc8abefbf87e622c3881e4fc44",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 221,
        "deletions": 57,
        "changes": 278,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
        "patch": "@@ -1,9 +1,9 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n \n-Bitcoin Core version *version* is now available from:\n+Bitcoin Core version 0.14.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-*version*/>\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n \n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n@@ -22,9 +22,9 @@ Compatibility\n Bitcoin Core is extensively tested on multiple operating systems using\n the Linux kernel, macOS 10.8+, and Windows Vista and later.\n \n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support).\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities.\n+can still do so at your own risk but be aware that there are known instabilities and issues.\n Please do not report issues about Windows XP to the issue tracker.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n@@ -33,26 +33,230 @@ frequently tested on them.\n Notable changes\n ===============\n \n+Manual Pruning\n+--------------\n+\n+Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n+the blockchain allows for significant storage space savings as the vast majority of\n+the downloaded data can be discarded after processing so very little of it remains\n+on the disk.\n+\n+Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n+the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n+specified height or timestamp.\n+\n+`getinfo` Deprecated\n+--------------------\n+\n+The `getinfo` RPC command has been deprecated. Each field in the RPC call\n+has been moved to another command's output with that command also giving\n+additional information that `getinfo` did not provide. The following table\n+shows where each field has been moved to:\n+\n+|`getinfo` field   | Moved to                                  |\n+|------------------|-------------------------------------------|\n+`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n+`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n+`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n+`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n+`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n+`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n+`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n+`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n+`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n+`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n+`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n+`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n+`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n+`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n+`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n+`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n+\n+ZMQ On Windows\n+--------------\n+\n+Previously the ZeroMQ notification system was unavailable on Windows\n+due to various issues with ZMQ. These have been fixed upstream and\n+now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n+help with using ZMQ in general.\n+\n+Nested RPC Commands in Debug Console\n+------------------------------------\n+\n+The ability to nest RPC commands has been added to the debug console. This\n+allows users to have the output of a command become the input to another\n+command without running the commands separately.\n+\n+The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n+be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n+done with square brackets where object values are accessed with either an \n+array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n+commas and spaces can be used to separate parameters in both the bracket syntax\n+and normal RPC command syntax.\n+\n+Network Activity Toggle\n+-----------------------\n+\n+A RPC command and GUI toggle have been added to enable or disable all p2p\n+network activity. The network status icon in the bottom right hand corner \n+is now the GUI toggle. Clicking the icon will either enable or disable all\n+p2p network activity. If network activity is disabled, the icon will \n+be grayed out with an X on top of it.\n+\n+Additionally the `setnetworkactive` RPC command has been added which does\n+the same thing as the GUI icon. The command takes one boolean parameter,\n+`true` enables networking and `false` disables it.\n+\n+Out-of-sync Modal Info Layer\n+----------------------------\n+\n+When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n+layer will be shown over top of the normal display. This layer contains\n+details about the current sync progress and estimates the amount of time\n+remaining to finish syncing. This layer can also be hidden and subsequently\n+unhidden by clicking on the progress bar at the bottom of the window.\n+\n+Support for JSON-RPC Named Arguments\n+------------------------------------\n+\n+Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n+can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n+for passing parameters by-name with an object.\n+\n+`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n+when the `-named` option is given.\n+\n+Some examples:\n+\n+    src/bitcoin-cli -named help command=\"help\"\n+    src/bitcoin-cli -named getblockhash height=0\n+    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n+\n+The order of arguments doesn't matter in this case. Named arguments are also\n+useful to leave out arguments that should stay at their default value. The\n+rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n+be left out. However, this is not yet implemented for many RPC calls, this is\n+expected to land in a later release.\n+\n+The RPC server remains fully backwards compatible with positional arguments.\n+\n+Opt into RBF When Sending\n+-------------------------\n+\n+A new startup option, `-walletrbf`, has been added to allow users to have all\n+transactions sent opt into RBF support. The default value for this option is\n+currently `false`, so transactions will not opt into RBF by default.\n+\n+Sensitive Data Is No Longer Stored In Debug Console History\n+-----------------------------------------------------------\n+\n+The debug console maintains a history of previously entered commands that can be\n+accessed by pressing the Up-arrow key so that users can easily reuse previously\n+entered commands. Commands which have sensitive information such as passphrases and\n+private keys will now have a `(...)` in place of the parameters when accessed through\n+the history.\n+\n+Retaining the Mempool Across Restarts\n+-------------------------------------\n+\n+The mempool will be saved to the data directory prior to shutdown\n+to a `mempool.dat` file. This file preserves the mempool so that when the node\n+restarts the mempool can be filled with transactions without waiting for new transactions\n+to be created. This will also preserve any changes made to a transaction through\n+commands such as `prioritisetransaction` so that those changes will not be lost.\n+\n+Final Alert\n+-----------\n+\n+The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n+To Alert System was retired with a maximum sequence final alert which causes any nodes\n+supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n+prevents any other alerts from overriding it. This final alert is hard-coded into this release\n+so that all old nodes receive the final alert.\n+\n+GUI Changes\n+-----------\n+\n+ - After resetting the options by clicking the `Reset Options` button \n+   in the options dialog or with the `-resetguioptions` startup option, \n+   the user will be prompted to choose the data directory again. This \n+   is to ensure that custom data directories will be kept after the \n+   option reset which clears the custom data directory set via the choose \n+   datadir dialog.\n+\n+ - Multiple peers can now be selected in the list of peers in the debug \n+   window. This allows for users to ban or disconnect multiple peers \n+   simultaneously instead of banning them one at a time.\n+\n+ - An indicator has been added to the bottom right hand corner of the main\n+   window to indicate whether the wallet being used is a HD wallet. This\n+   icon will be grayed out with an X on top of it if the wallet is not a\n+   HD wallet.\n+\n Low-level RPC changes\n ----------------------\n \n-- `importprunedfunds` only accepts two required arguments. Some versions accept\n-  an optional third arg, which was always ignored. Make sure to never pass more\n-  than two arguments.\n+ - `importprunedfunds` only accepts two required arguments. Some versions accept\n+   an optional third arg, which was always ignored. Make sure to never pass more\n+   than two arguments.\n+\n+ - The first boolean argument to `getaddednodeinfo` has been removed. This is \n+   an incompatible change.\n+\n+ - RPC command \"getmininginfo\" loses the \"testnet\" field in favor of the more\n+   generic \"chain\" (which has been present for years).\n+\n+ - A new RPC command `preciousblock` has been added which marks a block as\n+   precious. A precious block will be treated as if it were received earlier\n+   than a competing block.\n+\n+ - A new RPC command `importmulti` has been added which receives an array of \n+   JSON objects representing the intention of importing a public key, a \n+   private key, an address and script/p2sh\n+\n+ - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n+   outputs has been deprecated. For now this will still work, but in the future\n+   it may change to only be able to retrieve information about transactions in\n+   the mempool or if `txindex` is enabled.\n+\n+ - A new RPC command `getmemoryinfo` has been added which will return information\n+   about the memory usage of Bitcoin Core. This was added in conjunction with\n+   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n+   for more information.\n+\n+HTTP REST Changes\n+-----------------\n+\n+ - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n+   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n+   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n+   when requests contain invalid parameters.\n+\n+Minimum Fee Rate Policies\n+-------------------------\n+\n+Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n+- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n+- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n+- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n+\n+The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n \n Fee Estimation Changes\n ----------------------\n \n - Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n-  disabled. This is only a minor behavior change as there was often insufficient\n+  disabled. The fee slider will no longer be able to choose a target of 1 block.\n+  This is only a minor behavior change as there was often insufficient\n   data for this target anyway. `estimatefee 1` will now always return -1 and\n   `estimatesmartfee 1` will start searching at a target of 2.\n \n - The default target for fee estimation is changed to 6 blocks in both the GUI\n   (previously 25) and for RPC calls (previously 2).\n \n Removal of Priority Estimation\n--------------------------------\n+------------------------------\n \n - Estimation of \"priority\" needed for a transaction to be included within a target\n   number of blocks has been removed.  The rpc calls are deprecated and will either\n@@ -61,42 +265,20 @@ Removal of Priority Estimation\n   converted to the new format which is not readable by prior versions of the\n   software.\n \n-- The concept of \"priority\" (coin age) transactions is planned to be removed in\n-  the next major version. To prepare for this, the default for the rate limit of\n-  priority transactions (`-limitfreerelay`) has been set to `0` kB/minute. This\n-  is not to be confused with the `prioritisetransaction` RPC which will remain\n-  supported for adding fee deltas to transactions.\n+- Support for \"priority\" (coin age) transaction sorting for mining is\n+  considered deprecated in Core and will be removed in the next major version.\n+  This is not to be confused with the `prioritisetransaction` RPC which will remain\n+  supported by Core for adding fee deltas to transactions.\n \n P2P connection management\n --------------------------\n \n-- Peers manually added through the addnode option or addnode RPC now have their own\n+- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n   limit of eight connections which does not compete with other inbound or outbound\n-  connection usage and is not subject to the maxconnections limitation.\n-\n-- New connections to manually added peers are much faster.\n-\n-Introduction of assumed-valid blocks\n--------------------------------------\n+  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n+  option.\n \n-- A significant portion of the initial block download time is spent verifying\n-  scripts/signatures.  Although the verification must pass to ensure the security\n-  of the system, no other result from this verification is needed: If the node\n-  knew the history of a given block were valid it could skip checking scripts\n-  for its ancestors.\n-\n-- A new configuration option 'assumevalid' is provided to express this knowledge\n-  to the software.  Unlike the 'checkpoints' in the past this setting does not\n-  force the use of a particular chain: chains that are consistent with it are\n-  processed quicker, but other chains are still accepted if they'd otherwise\n-  be chosen as best. Also unlike 'checkpoints' the user can configure which\n-  block history is assumed true, this means that even outdated software can\n-  sync more quickly if the setting is updated by the user.\n-\n-- Because the validity of a chain history is a simple objective fact it is much\n-  easier to review this setting.  As a result the software ships with a default\n-  value adjusted to match the current chain shortly before release.  The use\n-  of this default value can be disabled by setting -assumevalid=0\n+- New connections to manually added peers are performed more quickly.\n \n 0.14.0 Change log\n =================\n@@ -108,14 +290,6 @@ git merge commit are mentioned.\n \n ### RPC and REST\n \n-UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>/.../<txid>-<n>.<bin|hex|json>`) responses\n-were changed to return status code HTTP_BAD_REQUEST (400) instead of HTTP_INTERNAL_SERVER_ERROR (500) when requests\n-contain invalid parameters.\n-\n-The first boolean argument to `getaddednodeinfo` has been removed. This is an incompatible change.\n-\n-Call \"getmininginfo\" loses the \"testnet\" field in favor of the more generic \"chain\" (which has been present for years).\n-\n ### Configuration and command-line options\n \n ### Block and transaction handling\n@@ -128,16 +302,6 @@ Call \"getmininginfo\" loses the \"testnet\" field in favor of the more generic \"cha\n \n ### Wallet\n \n-0.14.0 Fundrawtransaction change address reuse\n-==============================================\n-\n-Before 0.14, `fundrawtransaction` was by default wallet stateless. In almost all cases `fundrawtransaction` does add a change-output to the outputs of the funded transaction. Before 0.14, the used keypool key was never marked as change-address key and directly returned to the keypool (leading to address reuse).\n-Before 0.14, calling `getnewaddress` directly after `fundrawtransaction` did generate the same address as the change-output address.\n-\n-Since 0.14, fundrawtransaction does reserve the change-output-key from the keypool by default (optional by setting  `reserveChangeKey`, default = `true`)\n-\n-Users should also consider using `getrawchangeaddress()` in conjunction with `fundrawtransaction`'s `changeAddress` option.\n-\n ### GUI\n \n ### Tests"
      }
    ]
  },
  {
    "sha": "268c390d02d99a4a93a0a01221e273d2b9695ff7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjhjMzkwZDAyZDk5YTRhOTNhMGEwMTIyMWUyNzNkMmI5Njk1ZmY3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T17:21:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T17:21:51Z"
      },
      "message": "doc: Update manpages for 0.14.0",
      "tree": {
        "sha": "26ce482499290ca84b9da80a08322ee80bbd2c83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/26ce482499290ca84b9da80a08322ee80bbd2c83"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/268c390d02d99a4a93a0a01221e273d2b9695ff7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYpzExAAoJEHSBCwEjRsmm5MAH/1Ah/t6Bfdhz+Fg/4uPb31bo\nW0hGkSZtLmv+E824UDafCdJa4g3V5F+ZdSldDAcd+udzA+laU7BnTX77j80+x0+t\nYAg3S5PbK3+sT8U/QKH4ehwGXohIslMbKTdzmS1YrNDRNr5s0WMNnY+qfYzApe9d\nDzouPu4L4nqXGkKSNHCKGfsoxNuFTMbYK3sipLzNz/gyH5cpFZvRk7KbIZ+lt2A6\nMMx8safWonEbrkUlh8ZOhNYmcERI6ftNo/u+pO6/essQUDe+7+gnR+VZf12fHHoP\nTeGxbjjx6KkTCfmsjwIwOQ4K96XSTrzyS4xxKdmr4XsYEjZmNUa01P4/YYl/VsY=\n=BwD3\n-----END PGP SIGNATURE-----",
        "payload": "tree 26ce482499290ca84b9da80a08322ee80bbd2c83\nparent 1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487352078 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487352111 +0100\n\ndoc: Update manpages for 0.14.0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268c390d02d99a4a93a0a01221e273d2b9695ff7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/268c390d02d99a4a93a0a01221e273d2b9695ff7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268c390d02d99a4a93a0a01221e273d2b9695ff7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1a02ecc73af4b4ac36da1bd04f9e7eddf640e48f"
      }
    ],
    "stats": {
      "total": 279,
      "additions": 179,
      "deletions": 100
    },
    "files": [
      {
        "sha": "844ec40a48582f5dbf482bbe0f8972db26fad6a9",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 16,
        "deletions": 14,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "patch": "@@ -1,19 +1,17 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.5.\n-.TH BITCOIN-CLI \"1\" \"September 2016\" \"bitcoin-cli v0.13.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.13.0.0\n+bitcoin-cli \\- manual page for bitcoin-cli v0.14.0.0\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.13.0.0\n+Bitcoin Core RPC client version v0.14.0.0\\-dirty\n .SS \"Usage:\"\n .TP\n bitcoin\\-cli [options] <command> [params]\n Send command to Bitcoin Core\n-.TP\n-bitcoin\\-cli [options] help\n-List commands\n-.TP\n-bitcoin\\-cli [options] help <command>\n-Get help for a command\n+.IP\n+bitcoin\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Bitcoin Core (with named arguments)\n+bitcoin\\-cli [options] help                List commands\n+bitcoin\\-cli [options] help <command>      Get help for a command\n .SH OPTIONS\n .HP\n \\-?\n@@ -40,6 +38,10 @@ Enter regression test mode, which uses a special chain in which blocks\n can be solved instantly. This is intended for regression testing\n tools and app development.\n .HP\n+\\fB\\-named\\fR\n+.IP\n+Pass named instead of positional arguments (default: false)\n+.HP\n \\fB\\-rpcconnect=\\fR<ip>\n .IP\n Send commands to node running on <ip> (default: 127.0.0.1)\n@@ -69,16 +71,16 @@ Timeout during HTTP requests (default: 900)\n Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n (recommended for sensitive information such as passphrases)\n .SH COPYRIGHT\n-Copyright (C) 2009-2016 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n <https://bitcoincore.org> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n-or <http://www.opensource.org/licenses/mit-license.php>.\n+or <https://opensource.org/licenses/MIT>\n \n This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n-by Eric Young and UPnP software written by Thomas Bernard.\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "c1edae22b36016a9e5d2972e5ea3409667b3702a",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 69,
        "deletions": 38,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.5.\n-.TH BITCOIN-QT \"1\" \"September 2016\" \"bitcoin-qt v0.13.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.13.0.0\n+bitcoin-qt \\- manual page for bitcoin-qt v0.14.0.0\n .SH DESCRIPTION\n-Bitcoin Core version v0.13.0.0 (64\\-bit)\n+Bitcoin Core version v0.14.0.0\\-dirty (64\\-bit)\n Usage:\n .IP\n bitcoin\\-qt [command\\-line options]\n@@ -27,13 +27,14 @@ long fork (%s in cmd is replaced by message)\n Execute command when the best block changes (%s in cmd is replaced by\n block hash)\n .HP\n-\\fB\\-checkblocks=\\fR<n>\n+\\fB\\-assumevalid=\\fR<hex>\n .IP\n-How many blocks to check at startup (default: 288, 0 = all)\n-.HP\n-\\fB\\-checklevel=\\fR<n>\n-.IP\n-How thorough the block verification of \\fB\\-checkblocks\\fR is (0\\-4, default: 3)\n+If this block is in the chain assume that it and its ancestors are valid\n+and potentially skip their script verification (0 to verify all,\n+default:\n+00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+testnet:\n+00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n@@ -62,11 +63,16 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n \\fB\\-mempoolexpiry=\\fR<n>\n .IP\n Do not keep transactions in the mempool longer than <n> hours (default:\n-72)\n+336)\n+.HP\n+\\fB\\-blockreconstructionextratxn=\\fR<n>\n+.IP\n+Extra transactions to keep in memory for compact block reconstructions\n+(default: 100)\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n-Set the number of script verification threads (\\fB\\-4\\fR to 16, 0 = auto, <0 =\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n@@ -75,13 +81,15 @@ Specify pid file (default: bitcoind.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n-Reduce storage requirements by enabling pruning (deleting) of old blocks.\n-This allows the pruneblockchain RPC to be called to delete specific blocks,\n-and enables automatic pruning of old blocks if a target size in MiB is\n-provided. This mode is incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR.\n-Warning: Reverting this setting requires re\\-downloading the entire blockchain.\n-(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >550 =\n-automatically prune block files to stay under the specified target size in MiB)\n+Reduce storage requirements by enabling pruning (deleting) of old\n+blocks. This allows the pruneblockchain RPC to be called to\n+delete specific blocks, and enables automatic pruning of old\n+blocks if a target size in MiB is provided. This mode is\n+incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+setting requires re\\-downloading the entire blockchain. (default:\n+0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n+>550 = automatically prune block files to stay under the\n+specified target size in MiB)\n .HP\n \\fB\\-reindex\\-chainstate\\fR\n .IP\n@@ -123,7 +131,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s)\n+Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n+disable automatic connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -137,7 +146,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR)\n+unless \\fB\\-connect\\fR/\\-noconnect)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -149,7 +158,8 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n+\\fB\\-connect\\fR/\\-noconnect)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -204,6 +214,11 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -221,17 +236,22 @@ Tor control port to use if onion listening enabled (default:\n .IP\n Tor control port password (default: empty)\n .HP\n+\\fB\\-upnp\\fR\n+.IP\n+Use UPnP to map the listening port (default: 0)\n+.HP\n \\fB\\-whitebind=\\fR<addr>\n .IP\n Bind to given address and whitelist peers connecting to it. Use\n [host]:port notation for IPv6\n .HP\n-\\fB\\-whitelist=\\fR<netmask>\n+\\fB\\-whitelist=\\fR<IP address or network>\n .IP\n-Whitelist peers connecting from the given netmask or IP address. Can be\n-specified multiple times. Whitelisted peers cannot be DoS banned\n-and their transactions are always relayed, even if they are\n-already in the mempool, useful e.g. for a gateway\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n .HP\n \\fB\\-whitelistrelay\\fR\n .IP\n@@ -240,7 +260,7 @@ not relaying transactions (default: 1)\n .HP\n \\fB\\-whitelistforcerelay\\fR\n .IP\n-Force relay of transactions from whitelisted peers even they violate\n+Force relay of transactions from whitelisted peers even if they violate\n local relay policy (default: 1)\n .HP\n \\fB\\-maxuploadtarget=\\fR<n>\n@@ -287,13 +307,17 @@ Spend unconfirmed change when sending transactions (default: 1)\n \\fB\\-txconfirmtarget=\\fR<n>\n .IP\n If paytxfee is not set, include enough fee so transactions begin\n-confirmation on average within n blocks (default: 2)\n+confirmation on average within n blocks (default: 6)\n .HP\n \\fB\\-usehd\\fR\n .IP\n Use hierarchical deterministic key generation (HD) after BIP32. Only has\n effect during wallet creation/first start (default: 1)\n .HP\n+\\fB\\-walletrbf\\fR\n+.IP\n+Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n+.HP\n \\fB\\-upgradewallet\\fR\n .IP\n Upgrade wallet to latest format on startup\n@@ -347,9 +371,9 @@ Append comment to the user agent string\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information.<category> can be: addrman,\n-alert, bench, coindb, db, http, libevent, lock, mempool,\n-mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins,\n-tor, zmq, qt.\n+alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n+mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n+selectcoins, tor, zmq, qt.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -422,6 +446,11 @@ Set maximum block size in bytes (default: 750000)\n .IP\n Set maximum size of high\\-priority/low\\-fee transactions in bytes\n (default: 0)\n+.HP\n+\\fB\\-blockmintxfee=\\fR<amt>\n+.IP\n+Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+creation. (default: 0.00001)\n .PP\n RPC server options:\n .HP\n@@ -455,8 +484,10 @@ Password for JSON\\-RPC connections\n .IP\n Username and hashed password for JSON\\-RPC connections. The field\n <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n-canonical python script is included in share/rpcuser. This option\n-can be specified multiple times\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n@@ -500,16 +531,16 @@ Show splash screen on startup (default: 1)\n .IP\n Reset all settings changed in the GUI\n .SH COPYRIGHT\n-Copyright (C) 2009-2016 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n <https://bitcoincore.org> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n-or <http://www.opensource.org/licenses/mit-license.php>.\n+or <https://opensource.org/licenses/MIT>\n \n This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n-by Eric Young and UPnP software written by Thomas Bernard.\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "73d4e4b794253bb2e218107160c63aed9c504caf",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 25,
        "deletions": 10,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.5.\n-.TH BITCOIN-TX \"1\" \"September 2016\" \"bitcoin-tx v0.13.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.0.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.13.0.0\n+bitcoin-tx \\- manual page for bitcoin-tx v0.14.0.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.13.0.0\n+Bitcoin Core bitcoin\\-tx utility version v0.14.0.0\\-dirty\n .SS \"Usage:\"\n .TP\n bitcoin\\-tx [options] <hex\\-tx> [commands]\n@@ -67,13 +67,28 @@ outaddr=VALUE:ADDRESS\n .IP\n Add address\\-based output to TX\n .IP\n+outpubkey=VALUE:PUBKEY[:FLAGS]\n+.IP\n+Add pay\\-to\\-pubkey output to TX. Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-pubkey\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP\n outdata=[VALUE:]DATA\n .IP\n Add data\\-based output to TX\n .IP\n-outscript=VALUE:SCRIPT\n+outscript=VALUE:SCRIPT[:FLAGS]\n+.IP\n+Add raw script output to TX. Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n+.IP\n+outmultisig=VALUE:REQUIRED:PUBKEYS:PUBKEY1:PUBKEY2:....[:FLAGS]\n .IP\n-Add raw script output to TX\n+Add Pay To n\\-of\\-m Multi\\-sig output to TX. n = REQUIRED, m = PUBKEYS.\n+Optionally add the \"W\" flag to produce a\n+pay\\-to\\-witness\\-script\\-hash output. Optionally add the \"S\" flag to\n+wrap the output in a pay\\-to\\-script\\-hash.\n .IP\n sign=SIGHASH\\-FLAGS\n .IP\n@@ -92,16 +107,16 @@ set=NAME:JSON\\-STRING\n .IP\n Set register NAME to given JSON\\-STRING\n .SH COPYRIGHT\n-Copyright (C) 2009-2016 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n <https://bitcoincore.org> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n-or <http://www.opensource.org/licenses/mit-license.php>.\n+or <https://opensource.org/licenses/MIT>\n \n This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n-by Eric Young and UPnP software written by Thomas Bernard.\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      },
      {
        "sha": "e8c68c18edde60d8ee4aca961a5706808d8ae0fd",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 69,
        "deletions": 38,
        "changes": 107,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/268c390d02d99a4a93a0a01221e273d2b9695ff7/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.46.5.\n-.TH BITCOIND \"1\" \"September 2016\" \"bitcoind v0.13.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n+.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.0.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.13.0.0\n+bitcoind \\- manual page for bitcoind v0.14.0.0\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.13.0.0\n+Bitcoin Core Daemon version v0.14.0.0\\-dirty\n .SS \"Usage:\"\n .TP\n bitcoind [options]\n@@ -28,13 +28,14 @@ long fork (%s in cmd is replaced by message)\n Execute command when the best block changes (%s in cmd is replaced by\n block hash)\n .HP\n-\\fB\\-checkblocks=\\fR<n>\n+\\fB\\-assumevalid=\\fR<hex>\n .IP\n-How many blocks to check at startup (default: 288, 0 = all)\n-.HP\n-\\fB\\-checklevel=\\fR<n>\n-.IP\n-How thorough the block verification of \\fB\\-checkblocks\\fR is (0\\-4, default: 3)\n+If this block is in the chain assume that it and its ancestors are valid\n+and potentially skip their script verification (0 to verify all,\n+default:\n+00000000000000000013176bf8d7dfeab4e1db31dc93bc311b436e82ab226b90,\n+testnet:\n+00000000000128796ee387cf110ccb9d2f36cffaf7f73079c995377c65ac0dcc)\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n@@ -67,11 +68,16 @@ Keep the transaction memory pool below <n> megabytes (default: 300)\n \\fB\\-mempoolexpiry=\\fR<n>\n .IP\n Do not keep transactions in the mempool longer than <n> hours (default:\n-72)\n+336)\n+.HP\n+\\fB\\-blockreconstructionextratxn=\\fR<n>\n+.IP\n+Extra transactions to keep in memory for compact block reconstructions\n+(default: 100)\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n-Set the number of script verification threads (\\fB\\-4\\fR to 16, 0 = auto, <0 =\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n@@ -80,13 +86,15 @@ Specify pid file (default: bitcoind.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n-Reduce storage requirements by enabling pruning (deleting) of old blocks.\n-This allows the pruneblockchain RPC to be called to delete specific blocks,\n-and enables automatic pruning of old blocks if a target size in MiB is\n-provided. This mode is incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR.\n-Warning: Reverting this setting requires re\\-downloading the entire blockchain.\n-(default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, >550 =\n-automatically prune block files to stay under the specified target size in MiB)\n+Reduce storage requirements by enabling pruning (deleting) of old\n+blocks. This allows the pruneblockchain RPC to be called to\n+delete specific blocks, and enables automatic pruning of old\n+blocks if a target size in MiB is provided. This mode is\n+incompatible with \\fB\\-txindex\\fR and \\fB\\-rescan\\fR. Warning: Reverting this\n+setting requires re\\-downloading the entire blockchain. (default:\n+0 = disable pruning blocks, 1 = allow manual pruning via RPC,\n+>550 = automatically prune block files to stay under the\n+specified target size in MiB)\n .HP\n \\fB\\-reindex\\-chainstate\\fR\n .IP\n@@ -128,7 +136,8 @@ for IPv6\n .HP\n \\fB\\-connect=\\fR<ip>\n .IP\n-Connect only to the specified node(s)\n+Connect only to the specified node(s); \\fB\\-noconnect\\fR or \\fB\\-connect\\fR=\\fI\\,0\\/\\fR alone to\n+disable automatic connections\n .HP\n \\fB\\-discover\\fR\n .IP\n@@ -142,7 +151,7 @@ Allow DNS lookups for \\fB\\-addnode\\fR, \\fB\\-seednode\\fR and \\fB\\-connect\\fR (def\n \\fB\\-dnsseed\\fR\n .IP\n Query for peer addresses via DNS lookup, if low on addresses (default: 1\n-unless \\fB\\-connect\\fR)\n+unless \\fB\\-connect\\fR/\\-noconnect)\n .HP\n \\fB\\-externalip=\\fR<ip>\n .IP\n@@ -154,7 +163,8 @@ Always query for peer addresses via DNS lookup (default: 0)\n .HP\n \\fB\\-listen\\fR\n .IP\n-Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n+Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or\n+\\fB\\-connect\\fR/\\-noconnect)\n .HP\n \\fB\\-listenonion\\fR\n .IP\n@@ -209,6 +219,11 @@ Connect through SOCKS5 proxy\n Randomize credentials for every proxy connection. This enables Tor\n stream isolation (default: 1)\n .HP\n+\\fB\\-rpcserialversion\\fR\n+.IP\n+Sets the serialization of raw transaction or block hex returned in\n+non\\-verbose mode, non\\-segwit(0) or segwit(1) (default: 1)\n+.HP\n \\fB\\-seednode=\\fR<ip>\n .IP\n Connect to a node to retrieve peer addresses, and disconnect\n@@ -226,17 +241,22 @@ Tor control port to use if onion listening enabled (default:\n .IP\n Tor control port password (default: empty)\n .HP\n+\\fB\\-upnp\\fR\n+.IP\n+Use UPnP to map the listening port (default: 0)\n+.HP\n \\fB\\-whitebind=\\fR<addr>\n .IP\n Bind to given address and whitelist peers connecting to it. Use\n [host]:port notation for IPv6\n .HP\n-\\fB\\-whitelist=\\fR<netmask>\n+\\fB\\-whitelist=\\fR<IP address or network>\n .IP\n-Whitelist peers connecting from the given netmask or IP address. Can be\n-specified multiple times. Whitelisted peers cannot be DoS banned\n-and their transactions are always relayed, even if they are\n-already in the mempool, useful e.g. for a gateway\n+Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or\n+CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple\n+times. Whitelisted peers cannot be DoS banned and their\n+transactions are always relayed, even if they are already in the\n+mempool, useful e.g. for a gateway\n .HP\n \\fB\\-whitelistrelay\\fR\n .IP\n@@ -245,7 +265,7 @@ not relaying transactions (default: 1)\n .HP\n \\fB\\-whitelistforcerelay\\fR\n .IP\n-Force relay of transactions from whitelisted peers even they violate\n+Force relay of transactions from whitelisted peers even if they violate\n local relay policy (default: 1)\n .HP\n \\fB\\-maxuploadtarget=\\fR<n>\n@@ -292,13 +312,17 @@ Spend unconfirmed change when sending transactions (default: 1)\n \\fB\\-txconfirmtarget=\\fR<n>\n .IP\n If paytxfee is not set, include enough fee so transactions begin\n-confirmation on average within n blocks (default: 2)\n+confirmation on average within n blocks (default: 6)\n .HP\n \\fB\\-usehd\\fR\n .IP\n Use hierarchical deterministic key generation (HD) after BIP32. Only has\n effect during wallet creation/first start (default: 1)\n .HP\n+\\fB\\-walletrbf\\fR\n+.IP\n+Send transactions with full\\-RBF opt\\-in enabled (default: 0)\n+.HP\n \\fB\\-upgradewallet\\fR\n .IP\n Upgrade wallet to latest format on startup\n@@ -352,9 +376,9 @@ Append comment to the user agent string\n Output debugging information (default: 0, supplying <category> is\n optional). If <category> is not supplied or if <category> = 1,\n output all debugging information.<category> can be: addrman,\n-alert, bench, coindb, db, http, libevent, lock, mempool,\n-mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins,\n-tor, zmq.\n+alert, bench, cmpctblock, coindb, db, http, libevent, lock,\n+mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc,\n+selectcoins, tor, zmq.\n .HP\n \\fB\\-help\\-debug\\fR\n .IP\n@@ -427,6 +451,11 @@ Set maximum block size in bytes (default: 750000)\n .IP\n Set maximum size of high\\-priority/low\\-fee transactions in bytes\n (default: 0)\n+.HP\n+\\fB\\-blockmintxfee=\\fR<amt>\n+.IP\n+Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+creation. (default: 0.00001)\n .PP\n RPC server options:\n .HP\n@@ -460,8 +489,10 @@ Password for JSON\\-RPC connections\n .IP\n Username and hashed password for JSON\\-RPC connections. The field\n <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A\n-canonical python script is included in share/rpcuser. This option\n-can be specified multiple times\n+canonical python script is included in share/rpcuser. The client\n+then connects normally using the\n+rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This\n+option can be specified multiple times\n .HP\n \\fB\\-rpcport=\\fR<port>\n .IP\n@@ -479,16 +510,16 @@ option can be specified multiple times\n .IP\n Set the number of threads to service RPC calls (default: 4)\n .SH COPYRIGHT\n-Copyright (C) 2009-2016 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Bitcoin Core developers\n \n Please contribute if you find Bitcoin Core useful. Visit\n <https://bitcoincore.org> for further information about the software.\n The source code is available from <https://github.com/bitcoin/bitcoin>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING\n-or <http://www.opensource.org/licenses/mit-license.php>.\n+or <https://opensource.org/licenses/MIT>\n \n This product includes software developed by the OpenSSL Project for use in the\n-OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software written\n-by Eric Young and UPnP software written by Thomas Bernard.\n+OpenSSL Toolkit <https://www.openssl.org> and cryptographic software written by\n+Eric Young and UPnP software written by Thomas Bernard."
      }
    ]
  },
  {
    "sha": "42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MmY1ZjIxMjg3M2FjYWYyZThhZjQwZTgxY2Q1ZGMyNmJkMThmZjM0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-17T17:48:04Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-17T17:48:04Z"
      },
      "message": "release: bump gitian descriptors for a new 0.14 package cache",
      "tree": {
        "sha": "d6d2eb51b87cd58bdb411baa04e1c2710f8e4415",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6d2eb51b87cd58bdb411baa04e1c2710f8e4415"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bc69f34b3537a7d34fb7f89b4acd619749bc6cc2"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b126f83fee775779f98833be3bf5f14811727cec",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n+name: \"bitcoin-linux-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      },
      {
        "sha": "77381b861986cf7531e60a88a2a8dccdc531b454",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n+name: \"bitcoin-osx-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      },
      {
        "sha": "0bb4f23bfe3dd144fb5b076921468cb6b9a58fb9",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/42f5f212873acaf2e8af40e81cd5dc26bd18ff34/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.13\"\n+name: \"bitcoin-win-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      }
    ]
  },
  {
    "sha": "6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2ZDYxYTJiOGM1MWMwMTc2NTU5NGY5YzFjN2Q2NWVhYzUyODBhOWUw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T18:14:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T18:14:34Z"
      },
      "message": "Merge #9783: release: bump gitian descriptors for a new 0.14 package cache\n\n42f5f21 release: bump gitian descriptors for a new 0.14 package cache (Cory Fields)",
      "tree": {
        "sha": "ff098120f21b7337f4f057d77897cb024247da88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff098120f21b7337f4f057d77897cb024247da88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYpz2KAAoJEHSBCwEjRsmmcjEIAILH+mVBc4AmKKl1lP/AaovD\nh//iiCoXMPb1GH+N4b1z6gE2xwG/KozRk6Uedjs2YKsdJKn7iPWOBZXS5GebF3Z2\nCp3lwcSORhxx3xl6aEtSF5B7YTtfFe/RKE/U3Ivb9r8lUwDeckCuSn5P4a4Rh7RC\nsHllnSrjrhiXB53tKqnx94hIn7IyAgrdFQqycut+dz17GMsG1vnwbKOjV+dF5D12\nRQ7qhF+dNcttokb0XQC8RQn1YccWL+zXlPA8FKbUxWBoxGYuOh6pt3H/J8cr02Cy\n6SFwUVBYJDexQtehFf9P/2DS8Nu9EXFvdw3x/za1kO/BWL9FMNGSFCRKgnldtLs=\n=vPwM\n-----END PGP SIGNATURE-----",
        "payload": "tree ff098120f21b7337f4f057d77897cb024247da88\nparent 268c390d02d99a4a93a0a01221e273d2b9695ff7\nparent 42f5f212873acaf2e8af40e81cd5dc26bd18ff34\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487355263 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487355274 +0100\n\nMerge #9783: release: bump gitian descriptors for a new 0.14 package cache\n\n42f5f21 release: bump gitian descriptors for a new 0.14 package cache (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/268c390d02d99a4a93a0a01221e273d2b9695ff7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/268c390d02d99a4a93a0a01221e273d2b9695ff7"
      },
      {
        "sha": "42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42f5f212873acaf2e8af40e81cd5dc26bd18ff34",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42f5f212873acaf2e8af40e81cd5dc26bd18ff34"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "b126f83fee775779f98833be3bf5f14811727cec",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n+name: \"bitcoin-linux-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      },
      {
        "sha": "77381b861986cf7531e60a88a2a8dccdc531b454",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n+name: \"bitcoin-osx-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      },
      {
        "sha": "0bb4f23bfe3dd144fb5b076921468cb6b9a58fb9",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.13\"\n+name: \"bitcoin-win-0.14\"\n enable_cache: true\n suites:\n - \"trusty\""
      }
    ]
  },
  {
    "sha": "871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NzFlMTlhYzg0YWU3MWIzZDIyOTI4ZDVjYjNiYmY0ZjBmMDEzYjA3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T18:27:35Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T18:28:27Z"
      },
      "message": "doc: Add list of authors to release notes\n\nGenerated from git, so there may be duplicate authors\nif someone used multiple mail addresses.",
      "tree": {
        "sha": "9e40d6d83bc113d177a52b3afc631aeec81cde77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9e40d6d83bc113d177a52b3afc631aeec81cde77"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp0DcAAoJEHSBCwEjRsmmfeIIALiM+TrlzTB+nwmFjNyHoKi0\n6ZHbnevSpyTQLvmy4gSSGCRSZJCaM/xGj5XjHQ/rQ10nKhPGj8injocDuNbQmhtF\nFiAb//O7DH/ChkZlM7JI0/RbFFbW9jKrqFsY6JWofuJf9g7GFe61tXoWLgI0Zxc2\n/nLfO6As9wG01kSHr8f4FWJFy30THLVTESChu4XtrTtFzIndXrJtMI7AFRARdzsm\nheihgkEawaQGeudOsg+jwy0VPeepH96iFPxbQ1A/wBBetRutvyFETG3YrNCOSE7u\nWNVgs20EWfDV0wPeCzrCY/FHbObVoqzl26RowJrtGxbPh6F1I4B6Mr680IgjvvQ=\n=TJ+Z\n-----END PGP SIGNATURE-----",
        "payload": "tree 9e40d6d83bc113d177a52b3afc631aeec81cde77\nparent 6d61a2b8c51c01765594f9c1c7d65eac5280a9e0\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487356055 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487356107 +0100\n\ndoc: Add list of authors to release notes\n\nGenerated from git, so there may be duplicate authors\nif someone used multiple mail addresses.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6d61a2b8c51c01765594f9c1c7d65eac5280a9e0"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 100,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5d14c99dece294d1485de6c4b2c1a7a737469f32",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 100,
        "deletions": 0,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
        "patch": "@@ -313,5 +313,105 @@ Credits\n \n Thanks to everyone who directly contributed to this release:\n \n+- accraze\n+- adlawren\n+- Alex Morcos\n+- Alexey Vesnin\n+- Amir Abrams\n+- Anders \u00d8yvind Urke-S\u00e6tre\n+- Anditto Heristyo\n+- Andrew Chow\n+- anduck\n+- Anthony Towns\n+- Brian Deery\n+- BtcDrak\n+- Chris Moore\n+- Chris Stewart\n+- Christian Barcenas\n+- Christian Decker\n+- Cory Fields\n+- crowning-\n+- CryptAxe\n+- CryptoVote\n+- Dagur Valberg Johannsson\n+- Daniel Cousens\n+- Daniel Kraft\n+- Derek Miller\n+- djpnewton\n+- Don Patterson\n+- Doug\n+- Douglas Roark\n+- Ethan Heilman\n+- fsb4000\n+- Gaurav Rana\n+- Geoffrey Tsui\n+- Greg Walker\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Hampus Sj\u00f6berg\n+- instagibbs\n+- isle2983\n+- Ivo van der Sangen\n+- James White\n+- Jameson Lopp\n+- Jeremy Rubin\n+- Jiaxing Wang\n+- jnewbery\n+- John Newbery\n+- Johnson Lau\n+- Jon Lund Steffensen\n+- Jonas Schnelli\n+- jonnynewbs\n+- Jorge Tim\u00f3n\n+- Justin Camarena\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- Koki Takahashi\n+- Lauda\n+- leijurv\n+- lizhi\n+- Luke Dashjr\n+- maiiz\n+- MarcoFalke\n+- Marty Jones\n+- Masahiko Hyuga\n+- Matt Corallo\n+- Matthew King\n+- matthias\n+- Micha\n+- Michael Ford\n+- Michael Rotarius\n+- Mitchell Cash\n+- mrbandrews\n+- mruddy\n+- Nicolas DORIER\n+- NicolasDorier\n+- nomnombtc\n+- Patrick Strateman\n+- Pavel Jan\u00edk\n+- Pedro Branco\n+- Peter Todd\n+- Pieter Wuille\n+- poole\\_party\n+- practicalswift\n+- R E Broadley\n+- randy-waterhouse\n+- Richard Kiss\n+- Robert McLaughlin\n+- rodasmith\n+- Russell Yanofsky\n+- S. Matthew English\n+- Sev\n+- Spencer Lievens\n+- Stanislas Marion\n+- Steven\n+- Suhas Daftuar\n+- Thomas Snider\n+- UdjinM6\n+- unsystemizer\n+- whythat\n+- Will Binns\n+- Wladimir J. van der Laan\n+- wodry\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      }
    ]
  },
  {
    "sha": "1577f0731a7bf0b9486ccf757cae4e0d4f478279",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTc3ZjA3MzFhN2JmMGI5NDg2Y2NmNzU3Y2FlNGUwZDRmNDc4Mjc5",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-02-17T18:50:01Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-02-17T18:54:36Z"
      },
      "message": "Restore removed release notes.",
      "tree": {
        "sha": "cd261d82308bb11a5c6838938d606a93f425f6c6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd261d82308bb11a5c6838938d606a93f425f6c6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1577f0731a7bf0b9486ccf757cae4e0d4f478279",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1577f0731a7bf0b9486ccf757cae4e0d4f478279",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1577f0731a7bf0b9486ccf757cae4e0d4f478279",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1577f0731a7bf0b9486ccf757cae4e0d4f478279/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 40,
      "deletions": 0
    },
    "files": [
      {
        "sha": "c23f7ff0c1482792088d439738a9d5b16c282e22",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1577f0731a7bf0b9486ccf757cae4e0d4f478279/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1577f0731a7bf0b9486ccf757cae4e0d4f478279/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=1577f0731a7bf0b9486ccf757cae4e0d4f478279",
        "patch": "@@ -280,6 +280,46 @@ P2P connection management\n \n - New connections to manually added peers are performed more quickly.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A significant portion of the initial block download time is spent verifying\n+  scripts/signatures.  Although the verification must pass to ensure the security\n+  of the system, no other result from this verification is needed: If the node\n+  knew the history of a given block were valid it could skip checking scripts\n+  for its ancestors.\n+\n+- A new configuration option 'assumevalid' is provided to express this knowledge\n+  to the software.  Unlike the 'checkpoints' in the past this setting does not\n+  force the use of a particular chain: chains that are consistent with it are\n+  processed quicker, but other chains are still accepted if they'd otherwise\n+  be chosen as best. Also unlike 'checkpoints' the user can configure which\n+  block history is assumed true, this means that even outdated software can\n+  sync more quickly if the setting is updated by the user.\n+\n+- Because the validity of a chain history is a simple objective fact it is much\n+  easier to review this setting.  As a result the software ships with a default\n+  value adjusted to match the current chain shortly before release.  The use\n+  of this default value can be disabled by setting -assumevalid=0\n+\n+Fundrawtransaction change address reuse\n+----------------------------------------\n+\n+- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n+  almost all cases `fundrawtransaction` does add a change-output to the\n+  outputs of the funded transaction. Before 0.14, the used keypool key was\n+  never marked as change-address key and directly returned to the keypool\n+  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n+  directly after `fundrawtransaction` did generate the same address as\n+  the change-output address.\n+\n+- Since 0.14, fundrawtransaction does reserve the change-output-key from\n+  the keypool by default (optional by setting  `reserveChangeKey`, default =\n+  `true`)\n+\n+- Users should also consider using `getrawchangeaddress()` in conjunction\n+  with `fundrawtransaction`'s `changeAddress` option.\n+\n 0.14.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "618709141147f74771da0795cf0dccb47c606d24",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MTg3MDkxNDExNDdmNzQ3NzFkYTA3OTVjZjBkY2NiNDdjNjA2ZDI0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:44:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:44:05Z"
      },
      "message": "doc: Add changelog for 0.14.0 to release notes",
      "tree": {
        "sha": "6898c6fc966ec867396ec5e7f2ca7fb4e785f254",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6898c6fc966ec867396ec5e7f2ca7fb4e785f254"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/618709141147f74771da0795cf0dccb47c606d24",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp2CpAAoJEHSBCwEjRsmmj/0H/082a2W/g4h0TRK27+G9cfeo\nUDD9FQvREURygboszNKNS+bb5ci8AA/Iz4SJGS1zi6n4VQH9WHYWurEemfJhyzau\n8R2eX0NiCGu4cajrbOy65CL+9g2u2JdA0wjrU0E/qt/3EEpJV49A1UoExu0GUmdZ\npEy58KoLRQjPZXJkm5sEg75bkeOABzxYX1K9GXbrNSwiZOD8T1vETr9Tm6JEzTFH\nvJPjEO3FU0YIWV9kbg1SpQWhD98HIasuFYWb1TBe6pLckSCAMLwBwfDjoPaSET6F\nRZkiNsXNCHVn1fj77nmJ1Wm6OWQN/sHop/XsVYRnbBb1KcOcKRuT3bPDjmZ50gc=\n=V60K\n-----END PGP SIGNATURE-----",
        "payload": "tree 6898c6fc966ec867396ec5e7f2ca7fb4e785f254\nparent 871e19ac84ae71b3d22928d5cb3bbf4f0f013b07\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487364245 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487364245 +0100\n\ndoc: Add changelog for 0.14.0 to release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/618709141147f74771da0795cf0dccb47c606d24",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/618709141147f74771da0795cf0dccb47c606d24",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/618709141147f74771da0795cf0dccb47c606d24/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/871e19ac84ae71b3d22928d5cb3bbf4f0f013b07"
      }
    ],
    "stats": {
      "total": 386,
      "additions": 376,
      "deletions": 10
    },
    "files": [
      {
        "sha": "bae09c771488dd37d8c5bc882987154e97ae2c03",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 376,
        "deletions": 10,
        "changes": 386,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/618709141147f74771da0795cf0dccb47c606d24/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/618709141147f74771da0795cf0dccb47c606d24/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=618709141147f74771da0795cf0dccb47c606d24",
        "patch": "@@ -284,29 +284,395 @@ P2P connection management\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, refactors and string updates. For convenience in locating\n-the code changes and accompanying discussion, both the pull request and\n-git merge commit are mentioned.\n-\n-### RPC and REST\n-\n-### Configuration and command-line options\n+behavior, not code moves, minor refactors and string updates. For convenience\n+in locating the code changes and accompanying discussion, both the pull request\n+and git merge commit are mentioned.\n+\n+### RPC and other APIs\n+- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n+- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n+- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n+- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n+- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n+- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n+- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n+- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n+- #9087 `924de0b` Give more details when \"generate\" fails (jtimon)\n+- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n+- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n+- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n+- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n+- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n+- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n+- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n+- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n+- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n+- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n+- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n+- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n+- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n+- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n+- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n+- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n \n ### Block and transaction handling\n+- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n+- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n+- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n+- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n+- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n+- #7730 `3c03dc2` Remove priority estimation (morcos)\n+- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n+- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n+- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n+- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n+- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n+- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n+- #9346 `b99a093` Batch construct batches (sipa)\n+- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n+- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n+- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n+- #9107 `7dac1e5` Safer modify new coins (morcos)\n+- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n+- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n+- #9138 `f646275` Improve fee estimation (morcos)\n+- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n+- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n+- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n+- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n+- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n+- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n+- #9371 `4a1dc35` Notify on removal (morcos)\n+- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n+- #8606 `e2a1a1e` Fix some locks (sipa)\n+- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n+- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n+- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n+- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n+- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n+- #9240 `a1dcf2e` Remove txConflicted (morcos)\n+- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n+- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n+- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n+- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n+- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction\n \n ### P2P protocol and network code\n+- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n+- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n+- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n+- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n+- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n+- #8085 `6423116` Begin encapsulation (theuni)\n+- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n+- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n+- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n+- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n+- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n+- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n+- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n+- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n+- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n+- #8708 `c8c572f` have CConnman handle message sending (theuni)\n+- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n+- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n+- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n+- #8996 `ab914a6` Network activity toggle (luke-jr)\n+- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n+- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n+- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n+- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n+- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n+- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n+- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n+- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n+- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n+- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n+- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n+- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n+- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n+- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n+- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n+- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n+- #9609 `4966917` Fix remaining net assertions (theuni)\n+- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n+- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n+- #9698 `2447c10` Fix socket close race (theuni)\n+- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n+- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n+- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n+- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n+- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n+- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n+- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n \n ### Validation\n+- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n+- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n+- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n+- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n+- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n+- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n+- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n+- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n+- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n+- #8524 `19b0f33` Precompute sighashes (sipa)\n \n ### Build system\n-\n-### Wallet\n+- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n+- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n+- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n+- #8566 `7b98895` Easy to use gitian building script (achow101)\n+- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n+- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n+- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n+- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n+- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n+- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n+- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n+- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n+- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n+- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n+- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n+- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n+- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n+- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n+- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n+- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n+- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n+- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n+- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n+- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n+- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n+- #9513 `bbf193f` Fix qt distdir builds (theuni)\n+- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n+- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n+- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n+- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n+- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n+- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n+- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n+- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n+- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n \n ### GUI\n+- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n+- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n+- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n+- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n+- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n+- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n+- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n+- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n+- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n+- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n+- #8885 `b2fec4e` Fix ban from qt console (theuni)\n+- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n+- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n+- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n+- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n+- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n+- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n+- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n+- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n+- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n+- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n+- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n+- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n+- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n+- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n+- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n+- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n+- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n+- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n+- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n+- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n+- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n+- #9457 `123ea73` Select more files for translation (MarcoFalke)\n+- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n+- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n+- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n+- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n+- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n+- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n+- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n \n-### Tests\n+### Wallet\n+- #8367 `045106b` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n+- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n+- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n+- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n+- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n+- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n+- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n+- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n+- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n+- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n+- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n+- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem) (MarcoFalke)\n+- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n+- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n+- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n+- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n+- #8753 `f8723d2` Locked memory manager (laanwj)\n+- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n+- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n+- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n+- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n+- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n+- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n+- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n+- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n+- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n+- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n+- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n+- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n+- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n+- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n+- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n+- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n+- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n+- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n+- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n+- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n+\n+### Tests and QA\n+- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n+- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n+- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n+- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n+- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n+- #8680 `666eaf0` Address Travis spurious failures (theuni)\n+- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n+- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n+- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n+- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n+- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n+- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n+- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n+- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n+- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n+- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n+- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n+- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n+- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n+- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n+- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n+- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n+- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n+- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n+- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n+- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n+- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n+- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n+- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n+- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n+- #9276 `ea33f19` Some minor testing cleanups (morcos)\n+- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n+- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n+- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n+- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n+- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n+- #9390,#9416 travis: make distdir (MarcoFalke)\n+- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n+- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n+- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n+- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n+- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n+- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n+- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n+- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n+- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n+- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n+- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n+- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n+- #9707 `b860915` Fix RPC failure testing (jnewbery)\n+- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n+- #9269 `43e8150` Align struct COrphan definition (sipa)\n+\n+### Documentation\n+- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n+- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n+- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n+- #9407 `041331e` Added missing colons in when running help command (anditto)\n+- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n+- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n+- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n+- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n+- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n+- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n+- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n+- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n+- #8624 `89de153` build: Mention curl (MarcoFalke)\n+- #8786 `9da7366` Mandatory copyright agreement (achow101)\n+- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n+- #9433 `caa2f10` Update the Windows build notes (droark)\n+- #8879 `f928050` Rework docs (MarcoFalke)\n+- #8887 `61d191f` Improve GitHub issue template (fanquake)\n+- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n+- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n+- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n+- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n+- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n+- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n+- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n+- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n+- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n+- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n+- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n+- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n+- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n+- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n+- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n+- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n+- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n \n ### Miscellaneous\n+- #8274 `7a2d402` util: Update tinyformat (laanwj)\n+- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n+- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n+- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n+- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n+- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n+- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n+- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n+- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n+- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n+- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n+- #9303 `72bf1b3` Update comments in ctaes (sipa)\n+- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n+- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n+- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n+- #9531 `23281a4` Release notes for estimation changes  (morcos)\n+- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n+- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n+- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n+- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n+- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n+- #9070 `7b22e50` Lockedpool fixes (kazcw)\n+- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n+- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n+- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n+- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n+- #8613 `613bda4` LevelDB 1.19 (sipa)\n+- #9225 `5488514` Fix some benign races (TheBlueMatt)\n+- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n+- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n+- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n+- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n+- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n+- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n+- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n+- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n+- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n+- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n+- #9373,#9580 Various linearization script issues (droark)\n+- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n+- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n+- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n+- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n+- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n+- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n \n Credits\n ======="
      }
    ]
  },
  {
    "sha": "04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDM5NmJjYzA1OGVjN2UyYWVkNGIzNjRmMWJmNDNlYmU2YmMwMmQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:46:34Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:46:44Z"
      },
      "message": "Merge #9784: Restore removed release notes.\n\n1577f07 Restore removed release notes. (Gregory Maxwell)",
      "tree": {
        "sha": "61a71536022c98f52fcf1899a2e74d235b184c63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/61a71536022c98f52fcf1899a2e74d235b184c63"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp2E0AAoJEHSBCwEjRsmmKLYH/2SqZJWpLNdrELQykCnj8rbk\nOhZ+1fBQQ2nVGkrnjlei0bB5AkCDqSqGfvBFdSLlUjk2PMalnZD3tNCMkMmg9IoK\nto1oU7YaZXnKEhWh3rdf3/Z2Ihdxi2+BOdTvLvr6HaGw2eo1HQQTKn3CBjTjbyYS\ndg3Or6h9581bsQmpPpMhEXyml+5z150/BL9KugQ6du1pO+X0ImWax5ASUxwjCe7b\nXBjkuX9Gw82vKtHrZfK6diRcPkk0OxzZvtaIgeacnTRvXQWQmUUQTMmSOEj5UDsF\nUvlh7Zewmsgl/QcZ5g+ufoZlgRef91vfMJXqt1L8wlLKMzYuwdCrMWd63TCGKwE=\n=NA8s\n-----END PGP SIGNATURE-----",
        "payload": "tree 61a71536022c98f52fcf1899a2e74d235b184c63\nparent 618709141147f74771da0795cf0dccb47c606d24\nparent 1577f0731a7bf0b9486ccf757cae4e0d4f478279\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487364394 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487364404 +0100\n\nMerge #9784: Restore removed release notes.\n\n1577f07 Restore removed release notes. (Gregory Maxwell)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "618709141147f74771da0795cf0dccb47c606d24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/618709141147f74771da0795cf0dccb47c606d24",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/618709141147f74771da0795cf0dccb47c606d24"
      },
      {
        "sha": "1577f0731a7bf0b9486ccf757cae4e0d4f478279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1577f0731a7bf0b9486ccf757cae4e0d4f478279",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1577f0731a7bf0b9486ccf757cae4e0d4f478279"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 40,
      "deletions": 0
    },
    "files": [
      {
        "sha": "93cb9c3c70cbc57cef19af64f5cbd7073496ad54",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
        "patch": "@@ -280,6 +280,46 @@ P2P connection management\n \n - New connections to manually added peers are performed more quickly.\n \n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A significant portion of the initial block download time is spent verifying\n+  scripts/signatures.  Although the verification must pass to ensure the security\n+  of the system, no other result from this verification is needed: If the node\n+  knew the history of a given block were valid it could skip checking scripts\n+  for its ancestors.\n+\n+- A new configuration option 'assumevalid' is provided to express this knowledge\n+  to the software.  Unlike the 'checkpoints' in the past this setting does not\n+  force the use of a particular chain: chains that are consistent with it are\n+  processed quicker, but other chains are still accepted if they'd otherwise\n+  be chosen as best. Also unlike 'checkpoints' the user can configure which\n+  block history is assumed true, this means that even outdated software can\n+  sync more quickly if the setting is updated by the user.\n+\n+- Because the validity of a chain history is a simple objective fact it is much\n+  easier to review this setting.  As a result the software ships with a default\n+  value adjusted to match the current chain shortly before release.  The use\n+  of this default value can be disabled by setting -assumevalid=0\n+\n+Fundrawtransaction change address reuse\n+----------------------------------------\n+\n+- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n+  almost all cases `fundrawtransaction` does add a change-output to the\n+  outputs of the funded transaction. Before 0.14, the used keypool key was\n+  never marked as change-address key and directly returned to the keypool\n+  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n+  directly after `fundrawtransaction` did generate the same address as\n+  the change-output address.\n+\n+- Since 0.14, fundrawtransaction does reserve the change-output-key from\n+  the keypool by default (optional by setting  `reserveChangeKey`, default =\n+  `true`)\n+\n+- Users should also consider using `getrawchangeaddress()` in conjunction\n+  with `fundrawtransaction`'s `changeAddress` option.\n+\n 0.14.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "f873564231d694b47e6e7e5430f4e0785a036664",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmODczNTY0MjMxZDY5NGI0N2U2ZTdlNTQzMGY0ZTA3ODVhMDM2NjY0",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-17T19:41:45Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:50:14Z"
      },
      "message": "Make KEY_SIZE a compile-time constant\n\nGithub-Pull: #9785\nRebased-From: 914fad155d9fc76b42b3a0414dd14b5ebc36062f",
      "tree": {
        "sha": "e62c23ed3c4e179cbf96a5ff05d3780251c4a79a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e62c23ed3c4e179cbf96a5ff05d3780251c4a79a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f873564231d694b47e6e7e5430f4e0785a036664",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp2IIAAoJEHSBCwEjRsmm1HkIAMjITlP9DwZuiAZ4HA4aOI/O\nIVgLKQdZu4svwjyF1o6khaIdxK3zeIjWgvdqauOWveTU6x9RtZCV0hWtBtkWliyL\neqX3xfNRUSvYm/JqUXe4GKH5JHTPkCizjrW2rBCgt/ox2wYyjxEtSk9JI6LZD+Zs\nlL20g8hB6RNNMaPDnpcgBBNGWANzWMz4pviq9QGFX9GJ3x7iVO12sL5uBP78JDdu\ndxjbLCFqKWmPOO0prWBKsITADguR7kOY7F/ZiHRiFBO0IrU+n6YtBhrdt7LnKps8\n9fTq7Q3sShAYM6lljD9WjZAu1lQsNFfWgBMh7aMtB2S0YImfDZK0h4yzEvSVwlw=\n=atT6\n-----END PGP SIGNATURE-----",
        "payload": "tree e62c23ed3c4e179cbf96a5ff05d3780251c4a79a\nparent 04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1487360505 -0800\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487364614 +0100\n\nMake KEY_SIZE a compile-time constant\n\nGithub-Pull: #9785\nRebased-From: 914fad155d9fc76b42b3a0414dd14b5ebc36062f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f873564231d694b47e6e7e5430f4e0785a036664",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f873564231d694b47e6e7e5430f4e0785a036664",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f873564231d694b47e6e7e5430f4e0785a036664/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04396bcc058ec7e2aed4b364f1bf43ebe6bc02d5"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8ac6925acdac6ee044e5e7d2f8797980760b647e",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f873564231d694b47e6e7e5430f4e0785a036664/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f873564231d694b47e6e7e5430f4e0785a036664/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=f873564231d694b47e6e7e5430f4e0785a036664",
        "patch": "@@ -112,7 +112,7 @@ static bool multiUserAuthorized(std::string strUserPass)\n             std::string strSalt = vFields[1];\n             std::string strHash = vFields[2];\n \n-            unsigned int KEY_SIZE = 32;\n+            static const unsigned int KEY_SIZE = 32;\n             unsigned char out[KEY_SIZE];\n \n             CHMAC_SHA256(reinterpret_cast<const unsigned char*>(strSalt.c_str()), strSalt.size()).Write(reinterpret_cast<const unsigned char*>(strPass.c_str()), strPass.size()).Finalize(out);"
      }
    ]
  },
  {
    "sha": "973e345f7f71c7909e701afb35a8fd944dcc9970",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzNlMzQ1ZjdmNzFjNzkwOWU3MDFhZmIzNWE4ZmQ5NDRkY2M5OTcw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-17T19:54:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:50:22Z"
      },
      "message": "Move BIP70_MAX_PAYMENTREQUEST_SIZE to header\n\nGithub-Pull: #9785\nRebased-From: c801c82e253dc4956069b6110f65b43f538dd5a1",
      "tree": {
        "sha": "e191b23529144d4a06dcfd1bd4239974cbb14b48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e191b23529144d4a06dcfd1bd4239974cbb14b48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/973e345f7f71c7909e701afb35a8fd944dcc9970",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp2IPAAoJEHSBCwEjRsmm19EH/3poK4wlj4ZFU6LBVWIoMYpa\nTQ7BMdM/RSGEAtvC4N4Vai50ZkRTbR3JCpUfiSUuCexWM+2uvL4E+qlVzChSNRU2\nspm+aCqZWIr6M67P5G4923CfbeEsk6SRFyL5QS9vvFE+/k8sKY8W31dTjO5c96cQ\nFKf2qrvRYBwvxBgDLgggC5kmMU3Y5y8hJL8f9Jj0XsUuVRuu/glJZS773yA03RiI\ne2corm3jdU8C5JfoEW3RsNuHex0pGZBCpp4Hfj7siwpcH8z+1vdx+O3HtAHXJ+B+\nPwCRR3Ihch3sv/zt+e7cDslethPm5SwI62POJksKbm/51qC/B3rjGXLsqbj8qkY=\n=etrz\n-----END PGP SIGNATURE-----",
        "payload": "tree e191b23529144d4a06dcfd1bd4239974cbb14b48\nparent f873564231d694b47e6e7e5430f4e0785a036664\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1487361272 -0800\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487364622 +0100\n\nMove BIP70_MAX_PAYMENTREQUEST_SIZE to header\n\nGithub-Pull: #9785\nRebased-From: c801c82e253dc4956069b6110f65b43f538dd5a1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/973e345f7f71c7909e701afb35a8fd944dcc9970",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/973e345f7f71c7909e701afb35a8fd944dcc9970",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/973e345f7f71c7909e701afb35a8fd944dcc9970/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f873564231d694b47e6e7e5430f4e0785a036664",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f873564231d694b47e6e7e5430f4e0785a036664",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f873564231d694b47e6e7e5430f4e0785a036664"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 1,
      "deletions": 3
    },
    "files": [
      {
        "sha": "dd75f12076d9e78a7df3aa7c09196d9128d07e51",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/973e345f7f71c7909e701afb35a8fd944dcc9970/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/973e345f7f71c7909e701afb35a8fd944dcc9970/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=973e345f7f71c7909e701afb35a8fd944dcc9970",
        "patch": "@@ -55,8 +55,6 @@ const char* BIP70_MESSAGE_PAYMENTREQUEST = \"PaymentRequest\";\n const char* BIP71_MIMETYPE_PAYMENT = \"application/bitcoin-payment\";\n const char* BIP71_MIMETYPE_PAYMENTACK = \"application/bitcoin-paymentack\";\n const char* BIP71_MIMETYPE_PAYMENTREQUEST = \"application/bitcoin-paymentrequest\";\n-// BIP70 max payment request size in bytes (DoS protection)\n-const qint64 BIP70_MAX_PAYMENTREQUEST_SIZE = 50000;\n \n struct X509StoreDeleter {\n       void operator()(X509_STORE* b) {"
      },
      {
        "sha": "7c6d4507fe6ce0c7055c1c6e02869638fe703c59",
        "filename": "src/qt/paymentserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/973e345f7f71c7909e701afb35a8fd944dcc9970/src/qt/paymentserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/973e345f7f71c7909e701afb35a8fd944dcc9970/src/qt/paymentserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.h?ref=973e345f7f71c7909e701afb35a8fd944dcc9970",
        "patch": "@@ -53,7 +53,7 @@ class QUrl;\n QT_END_NAMESPACE\n \n // BIP70 max payment request size in bytes (DoS protection)\n-extern const qint64 BIP70_MAX_PAYMENTREQUEST_SIZE;\n+static const qint64 BIP70_MAX_PAYMENTREQUEST_SIZE = 50000;\n \n class PaymentServer : public QObject\n {"
      }
    ]
  },
  {
    "sha": "2afefeade6e668cab0643a5c22ff203ce1e509b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYWZlZmVhZGU2ZTY2OGNhYjA2NDNhNWMyMmZmMjAzY2UxZTUwOWIw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-17T20:04:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-17T20:50:30Z"
      },
      "message": "boost: remove iostreams includes\n\nThey're unused and produce nasty deprecation warnings\n\nGithub-Pull: #9786\nRebased-From: 3301587dc5c7937141282f3799592d1e398495fb",
      "tree": {
        "sha": "4c7879d6bb4764e227adc78c97007844fb0d29b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4c7879d6bb4764e227adc78c97007844fb0d29b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2afefeade6e668cab0643a5c22ff203ce1e509b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYp2IXAAoJEHSBCwEjRsmmW7oIAJdCs/JNYlAFmo9OyJ3eegmp\nqrxNwh8fQPk2mZNQ25RzxzgfS4XnMIRi0JJgJfeMxhScrhJr1Fvjd6dWcFm8Nueh\n63qudJKOPDvzybXQEnF70BZ/P6ICZ+L9agjBfC70bFzhkBUKaahCQlF4O1rKcrdd\nqggl5mjBE70pA1AXsqcE6HwcnOyWcngb2HxsEBuElpP/DAIH9+rnnAQEzPm3fR8/\nhX98r8Zzov6Whm15cD8Azcq+/T8Sdy4iyo9APR0lJdZbej4w3SPJ/pq1kldEa5Ln\nL22Z5J5iFuTq6HPkTKNrbTbYWy333PzhcCfkXqn4UvvkeJs4Gnqu9uvAPZPOTeU=\n=Nit1\n-----END PGP SIGNATURE-----",
        "payload": "tree 4c7879d6bb4764e227adc78c97007844fb0d29b4\nparent 973e345f7f71c7909e701afb35a8fd944dcc9970\nauthor Cory Fields <cory-nospam-@coryfields.com> 1487361870 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487364630 +0100\n\nboost: remove iostreams includes\n\nThey're unused and produce nasty deprecation warnings\n\nGithub-Pull: #9786\nRebased-From: 3301587dc5c7937141282f3799592d1e398495fb\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2afefeade6e668cab0643a5c22ff203ce1e509b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2afefeade6e668cab0643a5c22ff203ce1e509b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2afefeade6e668cab0643a5c22ff203ce1e509b0/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "973e345f7f71c7909e701afb35a8fd944dcc9970",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/973e345f7f71c7909e701afb35a8fd944dcc9970",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/973e345f7f71c7909e701afb35a8fd944dcc9970"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "0b763acd451d613f15cb1924799ee2219ed06988",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2afefeade6e668cab0643a5c22ff203ce1e509b0/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2afefeade6e668cab0643a5c22ff203ce1e509b0/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=2afefeade6e668cab0643a5c22ff203ce1e509b0",
        "patch": "@@ -18,8 +18,6 @@\n #include <boost/bind.hpp>\n #include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n-#include <boost/iostreams/concepts.hpp>\n-#include <boost/iostreams/stream.hpp>\n #include <boost/shared_ptr.hpp>\n #include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>"
      }
    ]
  },
  {
    "sha": "40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0MGM3NTRjYjM4Y2RjOGJjMjdjZmNmZTNhZjhiZTg2OWQ0ZWFiOTY5",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-14T14:38:29Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-20T16:30:26Z"
      },
      "message": "[wallet] Remove importmulti always-true check\n\nRemove \"nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()\" check from\nimportmulti, which is always true because nLowestTimestamp is set to the\nminimum of the most recent block time and all the imported key timestamps,\nwhich is necessarily lower than the maximum block time.\n\nGithub-Pull: #9760\nRebased-From: ec1267f13b7d0b9b5058c6821cf8dbf74e02d17c",
      "tree": {
        "sha": "b75967889845c9bc4338c7bb4f3d88e483bf4a7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b75967889845c9bc4338c7bb4f3d88e483bf4a7a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYqxmkAAoJEHSBCwEjRsmmo/0H/AoizxZuz1wVRrmjX/iAwBjD\nENX2/u9c5AevP9xqrQE681NhTbn0N3XbEMbiAH8h8TflKstnfnidBHDTkKQoYwXD\nuoAlqP8aA2i2/aQ0XAZ+rwApWyaLkczxTlAl15MpM+cy3eyn+58w8gWnwTfeFNil\nT+RXva1e2q1GgqS0EEqPFdlmzKrY353R7y/PF37N+wB8USkDMv3fgqdMaG1gx4fp\nvxpYcRZgtVUSIv6gUWl9XCS/FD30bvLYRg3PUwN86SEnodCBz9Yglzr1RNSwYopR\npcurl3Rl6IL51Ykxs1StuL8E351la31xlW14bex4gFLHiWzU0kEwGiw06EEmoFg=\n=vGEp\n-----END PGP SIGNATURE-----",
        "payload": "tree b75967889845c9bc4338c7bb4f3d88e483bf4a7a\nparent 2afefeade6e668cab0643a5c22ff203ce1e509b0\nauthor Russell Yanofsky <russ@yanofsky.org> 1487083109 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487608226 +0100\n\n[wallet] Remove importmulti always-true check\n\nRemove \"nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()\" check from\nimportmulti, which is always true because nLowestTimestamp is set to the\nminimum of the most recent block time and all the imported key timestamps,\nwhich is necessarily lower than the maximum block time.\n\nGithub-Pull: #9760\nRebased-From: ec1267f13b7d0b9b5058c6821cf8dbf74e02d17c\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40c754cb38cdc8bc27cfcfe3af8be869d4eab969/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2afefeade6e668cab0643a5c22ff203ce1e509b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2afefeade6e668cab0643a5c22ff203ce1e509b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2afefeade6e668cab0643a5c22ff203ce1e509b0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e95c71ac8a145e55e7490ea752edfc7b9b3f912c",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/40c754cb38cdc8bc27cfcfe3af8be869d4eab969/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/40c754cb38cdc8bc27cfcfe3af8be869d4eab969/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
        "patch": "@@ -1072,7 +1072,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n         }\n     }\n \n-    if (fRescan && fRunScan && requests.size() && nLowestTimestamp <= chainActive.Tip()->GetBlockTimeMax()) {\n+    if (fRescan && fRunScan && requests.size()) {\n         CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();\n \n         if (pindex) {"
      }
    ]
  },
  {
    "sha": "6552729f38eadefa1531aeee13d7a07427c0c076",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NTUyNzI5ZjM4ZWFkZWZhMTUzMWFlZWUxM2Q3YTA3NDI3YzBjMDc2",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-01-23T23:39:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-20T16:32:59Z"
      },
      "message": "Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates\n\nGithub-Pull: #9619\nRebased-From: 9fc7f0bce94f1cea0239b1543227f22a3f3b9274",
      "tree": {
        "sha": "038735c095b51ea652967923cc460e91cfce7ff4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/038735c095b51ea652967923cc460e91cfce7ff4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6552729f38eadefa1531aeee13d7a07427c0c076",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYqxo7AAoJEHSBCwEjRsmmVqQH/2n61thc5ax3nFfQNLO88G0N\ndK58taP//eJYrFGXsnfigg0OWa7GjpJ0jyc1VI59DtdvC1yvGjd/prvzf8NCCEo6\nf4vv3VCaISDisg7HS6kz2ZgNyvcT76FWZZNuCC23I3KFpLj7/MPHdqrpa6gS9Jke\nDqLkRNWwaMLyEQ+KmlW7nHhaxSHAClTvRUiQKHGBqe6SE5l0PpCsBj4Km6R4CV6x\nfy7mxK98XsHKgWX17zlhuD9mafVypiZ2z820SbomGU1hWwZ+jvTwduKvNt6t6dZq\njx95A5V7yY+i+uMz3Uj7DoXSE8LCOBdIV/BUI7tzvQERsyya2z5AkQm2OwbT8yA=\n=khdd\n-----END PGP SIGNATURE-----",
        "payload": "tree 038735c095b51ea652967923cc460e91cfce7ff4\nparent 40c754cb38cdc8bc27cfcfe3af8be869d4eab969\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1485214747 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487608379 +0100\n\nBugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates\n\nGithub-Pull: #9619\nRebased-From: 9fc7f0bce94f1cea0239b1543227f22a3f3b9274\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6552729f38eadefa1531aeee13d7a07427c0c076",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6552729f38eadefa1531aeee13d7a07427c0c076",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6552729f38eadefa1531aeee13d7a07427c0c076/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/40c754cb38cdc8bc27cfcfe3af8be869d4eab969",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/40c754cb38cdc8bc27cfcfe3af8be869d4eab969"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 6,
      "deletions": 2
    },
    "files": [
      {
        "sha": "77cd282a3da4ce78b61413c4cfb3b942b8097eb2",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6552729f38eadefa1531aeee13d7a07427c0c076/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6552729f38eadefa1531aeee13d7a07427c0c076/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=6552729f38eadefa1531aeee13d7a07427c0c076",
        "patch": "@@ -676,8 +676,12 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         nSigOpLimit /= WITNESS_SCALE_FACTOR;\n     }\n     result.push_back(Pair(\"sigoplimit\", nSigOpLimit));\n-    result.push_back(Pair(\"sizelimit\", (int64_t)MAX_BLOCK_SERIALIZED_SIZE));\n-    result.push_back(Pair(\"weightlimit\", (int64_t)MAX_BLOCK_WEIGHT));\n+    if (fPreSegWit) {\n+        result.push_back(Pair(\"sizelimit\", (int64_t)MAX_BLOCK_BASE_SIZE));\n+    } else {\n+        result.push_back(Pair(\"sizelimit\", (int64_t)MAX_BLOCK_SERIALIZED_SIZE));\n+        result.push_back(Pair(\"weightlimit\", (int64_t)MAX_BLOCK_WEIGHT));\n+    }\n     result.push_back(Pair(\"curtime\", pblock->GetBlockTime()));\n     result.push_back(Pair(\"bits\", strprintf(\"%08x\", pblock->nBits)));\n     result.push_back(Pair(\"height\", (int64_t)(pindexPrev->nHeight+1)));"
      }
    ]
  },
  {
    "sha": "861cb0c83db0571c2863f6b6276314e115c266ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjFjYjBjODNkYjA1NzFjMjg2M2Y2YjYyNzYzMTRlMTE1YzI2NmVl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-02T20:08:54Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-20T16:32:59Z"
      },
      "message": "QA: Test GBT size/weight limit values\n\nGithub-Pull: #9619\nRebased-From: 279f944e8d3b437d31210f3ba3e798e98a9334fc",
      "tree": {
        "sha": "bddd6dd55de35c4b303305a624d4d0420c063eaa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bddd6dd55de35c4b303305a624d4d0420c063eaa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/861cb0c83db0571c2863f6b6276314e115c266ee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYqxo7AAoJEHSBCwEjRsmm3I0H/18u7qvdBxqZVRXW1QHEsI16\nxxC7PlASfMMgPcBnzivLEEW6xkv66BBs+0fGiHYO/hC3pYvdQ23gV/3+ag/uiu6v\nqQv4wYqpz/Ag0s9h1D3+g1qJTBqxs4wcPJEieSxhlGK8Sz0V7sgq/qmPe8cSoT8f\nIHt8Y3vdVFjLSZngllKASZIRquuhy8zF91BcV0A1fm8lX7LL46AJr6VmyJL2SQUq\nYbPSZO/A3h5Ii4+nm8B5MpPbVsLdJnbaJ1JnzRSZiPnNUenrKtUsrp/J7JAozXtP\nfzogkxgBoAQC9Ps37U+IVUjKf2POUE9BAvd0iMlRWpioJ1/PjFP+Hw5iNafbmJ8=\n=vsFG\n-----END PGP SIGNATURE-----",
        "payload": "tree bddd6dd55de35c4b303305a624d4d0420c063eaa\nparent 6552729f38eadefa1531aeee13d7a07427c0c076\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1486066134 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487608379 +0100\n\nQA: Test GBT size/weight limit values\n\nGithub-Pull: #9619\nRebased-From: 279f944e8d3b437d31210f3ba3e798e98a9334fc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/861cb0c83db0571c2863f6b6276314e115c266ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/861cb0c83db0571c2863f6b6276314e115c266ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/861cb0c83db0571c2863f6b6276314e115c266ee/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6552729f38eadefa1531aeee13d7a07427c0c076",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6552729f38eadefa1531aeee13d7a07427c0c076",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6552729f38eadefa1531aeee13d7a07427c0c076"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 8,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d6831e00e36ad2ba7c353c7ccd78acb676244674",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/861cb0c83db0571c2863f6b6276314e115c266ee/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/861cb0c83db0571c2863f6b6276314e115c266ee/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=861cb0c83db0571c2863f6b6276314e115c266ee",
        "patch": "@@ -130,10 +130,14 @@ def run_test(self):\n         print(\"Verify sigops are counted in GBT with pre-BIP141 rules before the fork\")\n         txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n         tmpl = self.nodes[0].getblocktemplate({})\n+        assert(tmpl['sizelimit'] == 1000000)\n+        assert('weightlimit' not in tmpl)\n         assert(tmpl['sigoplimit'] == 20000)\n         assert(tmpl['transactions'][0]['hash'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 2)\n         tmpl = self.nodes[0].getblocktemplate({'rules':['segwit']})\n+        assert(tmpl['sizelimit'] == 1000000)\n+        assert('weightlimit' not in tmpl)\n         assert(tmpl['sigoplimit'] == 20000)\n         assert(tmpl['transactions'][0]['hash'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 2)\n@@ -241,6 +245,8 @@ def run_test(self):\n         print(\"Verify sigops are counted in GBT with BIP141 rules after the fork\")\n         txid = self.nodes[0].sendtoaddress(self.nodes[0].getnewaddress(), 1)\n         tmpl = self.nodes[0].getblocktemplate({'rules':['segwit']})\n+        assert(tmpl['sizelimit'] >= 3999577)  # actual maximum size is lower due to minimum mandatory non-witness data\n+        assert(tmpl['weightlimit'] == 4000000)\n         assert(tmpl['sigoplimit'] == 80000)\n         assert(tmpl['transactions'][0]['txid'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 8)\n@@ -250,6 +256,8 @@ def run_test(self):\n         try:\n             tmpl = self.nodes[0].getblocktemplate({})\n             assert(len(tmpl['transactions']) == 1)  # Doesn't include witness tx\n+            assert(tmpl['sizelimit'] == 1000000)\n+            assert('weightlimit' not in tmpl)\n             assert(tmpl['sigoplimit'] == 20000)\n             assert(tmpl['transactions'][0]['hash'] == txid)\n             assert(tmpl['transactions'][0]['sigops'] == 2)"
      }
    ]
  },
  {
    "sha": "3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTcyYThlZmIyZjhmZDcyN2NhMDQ1ZGNmODkxMDRjOWY4YTJmODQ2",
    "commit": {
      "author": {
        "name": "Pavel Jan\u00edk",
        "email": "Pavel@Janik.cz",
        "date": "2017-02-20T17:14:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-21T11:35:38Z"
      },
      "message": "Read/write mempool.dat as a binary.\n\nmempool.dat is a binary file and thus it should be read/written as such.\n\nFixes #9810.\n\nGithub-Pull: #9813\nRebased-From: 171fc91f061d4a980eedfa522e302b8598408cc5",
      "tree": {
        "sha": "c897ea44b506366a2e9bfb1bac32283535799736",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c897ea44b506366a2e9bfb1bac32283535799736"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrCYKAAoJEHSBCwEjRsmmod8H/jlqzm/RAjsYgFdsC9Tm1ucI\n+u22uhsOBqjn63/vcDSg57/komgYxjqOW79x1Uqh0rPGSqIFmRL+uj15iRRuHqZj\nV7/MSjyRvgK1ssjGe/qyIL1jEEkbbmBKv/GewHQ4flLbB9shw2762f8M1KbINQ2d\nskYts5C/4T3y8oNuYraL8SYPaLQV79DzPEkjMzhhkfcORdbO836ZvXRzQEBhMW11\nyW1zNYdkMi557Pqn7PEmfPRRYC2uv2H1RhClhKsY1ofy3+AVL61VtSt9ENoed23p\njbFW0B5W0zq0wQWtHH9FJlcO0mpOYTBLpplrF85GPwxkyA6m2IKYLk7wypk2Lm0=\n=8wcM\n-----END PGP SIGNATURE-----",
        "payload": "tree c897ea44b506366a2e9bfb1bac32283535799736\nparent 861cb0c83db0571c2863f6b6276314e115c266ee\nauthor Pavel Jan\u00edk <Pavel@Janik.cz> 1487610846 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487676938 +0100\n\nRead/write mempool.dat as a binary.\n\nmempool.dat is a binary file and thus it should be read/written as such.\n\nFixes #9810.\n\nGithub-Pull: #9813\nRebased-From: 171fc91f061d4a980eedfa522e302b8598408cc5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3972a8efb2f8fd727ca045dcf89104c9f8a2f846/comments",
    "author": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "861cb0c83db0571c2863f6b6276314e115c266ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/861cb0c83db0571c2863f6b6276314e115c266ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/861cb0c83db0571c2863f6b6276314e115c266ee"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "3e749c2df18cc95f339fa5d2d4a32e1900cfd908",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3972a8efb2f8fd727ca045dcf89104c9f8a2f846/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3972a8efb2f8fd727ca045dcf89104c9f8a2f846/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
        "patch": "@@ -4180,7 +4180,7 @@ static const uint64_t MEMPOOL_DUMP_VERSION = 1;\n bool LoadMempool(void)\n {\n     int64_t nExpiryTimeout = GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60;\n-    FILE* filestr = fopen((GetDataDir() / \"mempool.dat\").string().c_str(), \"r\");\n+    FILE* filestr = fopen((GetDataDir() / \"mempool.dat\").string().c_str(), \"rb\");\n     CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n     if (file.IsNull()) {\n         LogPrintf(\"Failed to open mempool file from disk. Continuing anyway.\\n\");\n@@ -4261,7 +4261,7 @@ void DumpMempool(void)\n     int64_t mid = GetTimeMicros();\n \n     try {\n-        FILE* filestr = fopen((GetDataDir() / \"mempool.dat.new\").string().c_str(), \"w\");\n+        FILE* filestr = fopen((GetDataDir() / \"mempool.dat.new\").string().c_str(), \"wb\");\n         if (!filestr) {\n             return;\n         }"
      }
    ]
  },
  {
    "sha": "ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZTFjNGUyNGE2NTEwYjJhY2U4MTllY2NiYjkyOGEzY2IwMDc0ZGFm",
    "commit": {
      "author": {
        "name": "Chris Moore",
        "email": "dooglus@gmail.com",
        "date": "2017-02-19T18:03:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-21T13:20:18Z"
      },
      "message": "Fix typo in release notes.",
      "tree": {
        "sha": "b119e00051639a3777a876a4debfa8a3a74f5881",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b119e00051639a3777a876a4debfa8a3a74f5881"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrD6TAAoJEHSBCwEjRsmmw18IAM5FXJh0mrJpT9yfO5N3sXbK\niZMYGl+GIrs77ZmYyjAwsT3lewH1kF1ubhcrmb05riMbpjKncjhGbw6vwwJ+HZCm\nv9toSK1TAroP7O40BVabPCE54f+mbuZf2265mFl2V1W4HbyPvN8jbkpVD+uAo9cE\nn7sGPHkfhv0WAsE3fOZXALUdOTLhuNlML9mjSplDOCWWC7eCVt6Q6pg/t/8J7cfO\n6ed1Kv7Pys3/+OJlHgon2og2QVEkedEX92S0vZvwdfWtny0zshCrl3Hf+Sxo8nh4\n639V5EVIdVFI8eV3FjjHrbDW5LwOlBGnNHeHHVFk2tss/45hNOJTJslhg0P/7qA=\n=6rkG\n-----END PGP SIGNATURE-----",
        "payload": "tree b119e00051639a3777a876a4debfa8a3a74f5881\nparent 3972a8efb2f8fd727ca045dcf89104c9f8a2f846\nauthor Chris Moore <dooglus@gmail.com> 1487527407 -0800\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487683218 +0100\n\nFix typo in release notes.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae1c4e24a6510b2ace819eccbb928a3cb0074daf/comments",
    "author": {
      "login": "dooglus",
      "id": 573356,
      "node_id": "MDQ6VXNlcjU3MzM1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/573356?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dooglus",
      "html_url": "https://github.com/dooglus",
      "followers_url": "https://api.github.com/users/dooglus/followers",
      "following_url": "https://api.github.com/users/dooglus/following{/other_user}",
      "gists_url": "https://api.github.com/users/dooglus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dooglus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dooglus/subscriptions",
      "organizations_url": "https://api.github.com/users/dooglus/orgs",
      "repos_url": "https://api.github.com/users/dooglus/repos",
      "events_url": "https://api.github.com/users/dooglus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dooglus/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3972a8efb2f8fd727ca045dcf89104c9f8a2f846",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3972a8efb2f8fd727ca045dcf89104c9f8a2f846"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "032f7147a3ad880ae0e2a6a5bf27a1097dde11a9",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ae1c4e24a6510b2ace819eccbb928a3cb0074daf/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ae1c4e24a6510b2ace819eccbb928a3cb0074daf/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
        "patch": "@@ -170,7 +170,7 @@ Final Alert\n -----------\n \n The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n-To Alert System was retired with a maximum sequence final alert which causes any nodes\n+The Alert System was retired with a maximum sequence final alert which causes any nodes\n supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n prevents any other alerts from overriding it. This final alert is hard-coded into this release\n so that all old nodes receive the final alert.\n@@ -204,7 +204,7 @@ Low-level RPC changes\n  - The first boolean argument to `getaddednodeinfo` has been removed. This is \n    an incompatible change.\n \n- - RPC command \"getmininginfo\" loses the \"testnet\" field in favor of the more\n+ - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n    generic \"chain\" (which has been present for years).\n \n  - A new RPC command `preciousblock` has been added which marks a block as\n@@ -259,7 +259,7 @@ Removal of Priority Estimation\n ------------------------------\n \n - Estimation of \"priority\" needed for a transaction to be included within a target\n-  number of blocks has been removed.  The rpc calls are deprecated and will either\n+  number of blocks has been removed.  The RPC calls are deprecated and will either\n   return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n   changed to no longer save these priority estimates. It will automatically be\n   converted to the new format which is not readable by prior versions of the\n@@ -755,7 +755,6 @@ Thanks to everyone who directly contributed to this release:\n - Gregory Maxwell\n - Gregory Sanders\n - Hampus Sj\u00f6berg\n-- instagibbs\n - isle2983\n - Ivo van der Sangen\n - James White\n@@ -791,7 +790,6 @@ Thanks to everyone who directly contributed to this release:\n - mrbandrews\n - mruddy\n - Nicolas DORIER\n-- NicolasDorier\n - nomnombtc\n - Patrick Strateman\n - Pavel Jan\u00edk\n@@ -819,5 +817,6 @@ Thanks to everyone who directly contributed to this release:\n - Will Binns\n - Wladimir J. van der Laan\n - wodry\n+- Zak Wilcox\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      }
    ]
  },
  {
    "sha": "e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjJjMDY3MWM3NGJjNGRiNzBiM2JhMDRkMDkzY2QxMTBmOWYyMmE3",
    "commit": {
      "author": {
        "name": "kirit93",
        "email": "kirit.thadaka@gmail.com",
        "date": "2017-02-19T06:35:02Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-21T13:33:34Z"
      },
      "message": "Fix for issue #9775. Added check for open() returning a NULL pointer.\n\nGithub-Pull: #9798\nRebased-From: 40f11f8872c3e9f380f8278f984dfdabffe77539",
      "tree": {
        "sha": "69debe38dc94d31db7998c57847b1423d621c689",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/69debe38dc94d31db7998c57847b1423d621c689"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrEGuAAoJEHSBCwEjRsmmI24IAK76oFFTaSl/nlZKZboquQpb\n3CY6T6jM4zSU/jaj5TbXMlPYZznkdnFjBE2E9wd/lJ+Uknm4A6f/A/2nX5Rqzl7U\nc+CsaZVn7FMOLU3+yZmH+1IxMiyxBjAzbhNgoHFHq2YtAoBcCynecYSiboTblqZG\nMP0Qow2hAtvS7j9SQ2phLIbhMicLv17cYLLt0TlQK4Ui4AVWhhAT+3oTZjAd2Bxc\n/iLgi8hvdQpas9ebWTidov4a0jf8BIH0hvlHQWJRfo8q46GhTLpBSXglJz9+hxLF\nf49dSOE67Br0KE4N+yoobc3chkyPNVKJu4sRn7E5rthemnWbcm7w4XgMEFbkq0Y=\n=8o3Q\n-----END PGP SIGNATURE-----",
        "payload": "tree 69debe38dc94d31db7998c57847b1423d621c689\nparent ae1c4e24a6510b2ace819eccbb928a3cb0074daf\nauthor kirit93 <kirit.thadaka@gmail.com> 1487486102 +0530\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487684014 +0100\n\nFix for issue #9775. Added check for open() returning a NULL pointer.\n\nGithub-Pull: #9798\nRebased-From: 40f11f8872c3e9f380f8278f984dfdabffe77539\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e22c0671c74bc4db70b3ba04d093cd110f9f22a7/comments",
    "author": {
      "login": "kirit93",
      "id": 8190572,
      "node_id": "MDQ6VXNlcjgxOTA1NzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8190572?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirit93",
      "html_url": "https://github.com/kirit93",
      "followers_url": "https://api.github.com/users/kirit93/followers",
      "following_url": "https://api.github.com/users/kirit93/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirit93/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirit93/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirit93/subscriptions",
      "organizations_url": "https://api.github.com/users/kirit93/orgs",
      "repos_url": "https://api.github.com/users/kirit93/repos",
      "events_url": "https://api.github.com/users/kirit93/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirit93/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ae1c4e24a6510b2ace819eccbb928a3cb0074daf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ae1c4e24a6510b2ace819eccbb928a3cb0074daf"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "78c353dfe521dabcf0050466810ee256026ae9fb",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 7,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e22c0671c74bc4db70b3ba04d093cd110f9f22a7/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e22c0671c74bc4db70b3ba04d093cd110f9f22a7/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
        "patch": "@@ -214,12 +214,13 @@ void OpenDebugLog()\n     assert(vMsgsBeforeOpenLog);\n     boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n     fileout = fopen(pathDebug.string().c_str(), \"a\");\n-    if (fileout) setbuf(fileout, NULL); // unbuffered\n-\n-    // dump buffered messages from before we opened the log\n-    while (!vMsgsBeforeOpenLog->empty()) {\n-        FileWriteStr(vMsgsBeforeOpenLog->front(), fileout);\n-        vMsgsBeforeOpenLog->pop_front();\n+    if (fileout) {\n+        setbuf(fileout, NULL); // unbuffered\n+        // dump buffered messages from before we opened the log\n+        while (!vMsgsBeforeOpenLog->empty()) {\n+            FileWriteStr(vMsgsBeforeOpenLog->front(), fileout);\n+            vMsgsBeforeOpenLog->pop_front();\n+        }\n     }\n \n     delete vMsgsBeforeOpenLog;\n@@ -838,4 +839,4 @@ std::string CopyrightHolders(const std::string& strPrefix)\n         strCopyrightHolders += \"\\n\" + strPrefix + \"The Bitcoin Core developers\";\n     }\n     return strCopyrightHolders;\n-}\n+}\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "7d75a5a93c161aa4de22ac862702ba0241e8faa2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZDc1YTVhOTNjMTYxYWE0ZGUyMmFjODYyNzAyYmEwMjQxZThmYWEy",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "dev@jonasschnelli.ch",
        "date": "2017-02-21T13:36:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-21T14:14:17Z"
      },
      "message": "Fix segfault crash when shutdown the GUI in disablewallet mode\n\nGithub-Pull: #9817\nRebased-From: 312c4f10574ccf6dfe0d4ecb3ce928733d3a1e52",
      "tree": {
        "sha": "1b43a2916931677f241872b349d083d87d45cb91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b43a2916931677f241872b349d083d87d45cb91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7d75a5a93c161aa4de22ac862702ba0241e8faa2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrEs5AAoJEHSBCwEjRsmmoVEIAK8xutOxozmS8EfoNw5lLxHA\nq5iiB32FAeCHxUhf1R9qGWRdET0UKAIfYYf+ME67i9ErboHyeXYpQe/oOXm1DDs4\ntZnzGCzPCPytAWKiMCZLJUYCD1jRAO1CnmStmHLzqtm/xy5F1TrUtD+PkAK9FsKa\njKlMcg1syuPhCSGM9wbSnSmd92Gv1C8DjohIJ3Y4xAU1cU04WpsshInHCV7GMWJg\nhCtlfU8Kk1qI6V7NDSh66z6Yw3niDnej734Ab3ejpVJhXAiqyVpNOMSyNWLJZkKg\nhnxJPDgOYu8J6n0Pc7HZh+pF9j3Hut4lNwW5QawE3jBBfuZASFbJsBJMJw9KbGI=\n=PQcZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 1b43a2916931677f241872b349d083d87d45cb91\nparent e22c0671c74bc4db70b3ba04d093cd110f9f22a7\nauthor Jonas Schnelli <dev@jonasschnelli.ch> 1487684196 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487686457 +0100\n\nFix segfault crash when shutdown the GUI in disablewallet mode\n\nGithub-Pull: #9817\nRebased-From: 312c4f10574ccf6dfe0d4ecb3ce928733d3a1e52\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d75a5a93c161aa4de22ac862702ba0241e8faa2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7d75a5a93c161aa4de22ac862702ba0241e8faa2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d75a5a93c161aa4de22ac862702ba0241e8faa2/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e22c0671c74bc4db70b3ba04d093cd110f9f22a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e22c0671c74bc4db70b3ba04d093cd110f9f22a7"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 4,
      "deletions": 1
    },
    "files": [
      {
        "sha": "be79a67990e5bb2ce248d0581f112c8a125b314c",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7d75a5a93c161aa4de22ac862702ba0241e8faa2/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7d75a5a93c161aa4de22ac862702ba0241e8faa2/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=7d75a5a93c161aa4de22ac862702ba0241e8faa2",
        "patch": "@@ -518,7 +518,10 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         // Propagate cleared model to child objects\n         rpcConsole->setClientModel(nullptr);\n #ifdef ENABLE_WALLET\n-        walletFrame->setClientModel(nullptr);\n+        if (walletFrame)\n+        {\n+            walletFrame->setClientModel(nullptr);\n+        }\n #endif // ENABLE_WALLET\n         unitDisplayControl->setOptionsModel(nullptr);\n     }"
      }
    ]
  },
  {
    "sha": "9072395e5fddb1f2590138a179ab0868646a38a0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MDcyMzk1ZTVmZGRiMWYyNTkwMTM4YTE3OWFiMDg2ODY0NmEzOGEw",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-16T15:49:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-22T11:45:43Z"
      },
      "message": "Return errors from importmulti if complete rescans are not successful\n\nGithub-Pull: #9773\nRebased-From: e2e2f4c856363bbb0e3b5ba4df225f3754c3db39",
      "tree": {
        "sha": "9006392bda89ee2458e29ffb345a5fd8c71f7c94",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9006392bda89ee2458e29ffb345a5fd8c71f7c94"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9072395e5fddb1f2590138a179ab0868646a38a0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrXnnAAoJEHSBCwEjRsmmjIkH/iORCx4Jvcfy9hl2HC9uvAeF\noNKJzbcHYCAse72bz9DOGeExWU7sp1fnCXDqVNxd1Jcq60iNM+Cn9PqyYVSugWcw\nk75OYOSvZw46xL6oa/AnJd5FZL8ordnhxR+k5Sfw9uAWLeyjU1IPyPOs55eERVDo\ntI26aOWHBn6bvR/0Az5YSzpG/WTmHj9mKoWvNqQocZCJu7xREojP+dRR1AqRgQTa\n/df4yJfHR+wsON+BJgviMCTVvRafsg8O/ZdNimhb7oG8cwsZyxs+0IY3EqUWjjY4\nxHVDnexsLzCa7k1+lw4YkQjcGXWJD2Vo/FqUyJaF8coYwid35DdIOc76NyW6YoU=\n=ZKKs\n-----END PGP SIGNATURE-----",
        "payload": "tree 9006392bda89ee2458e29ffb345a5fd8c71f7c94\nparent 7d75a5a93c161aa4de22ac862702ba0241e8faa2\nauthor Russell Yanofsky <russ@yanofsky.org> 1487260143 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487763943 +0100\n\nReturn errors from importmulti if complete rescans are not successful\n\nGithub-Pull: #9773\nRebased-From: e2e2f4c856363bbb0e3b5ba4df225f3754c3db39\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9072395e5fddb1f2590138a179ab0868646a38a0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9072395e5fddb1f2590138a179ab0868646a38a0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9072395e5fddb1f2590138a179ab0868646a38a0/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7d75a5a93c161aa4de22ac862702ba0241e8faa2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7d75a5a93c161aa4de22ac862702ba0241e8faa2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7d75a5a93c161aa4de22ac862702ba0241e8faa2"
      }
    ],
    "stats": {
      "total": 127,
      "additions": 114,
      "deletions": 13
    },
    "files": [
      {
        "sha": "e8a3736e5dd51524d154ec2f8f2dc35ad8c20267",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -3331,7 +3331,7 @@ void PruneOneBlockFile(const int fileNumber)\n }\n \n \n-void UnlinkPrunedFiles(std::set<int>& setFilesToPrune)\n+void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune)\n {\n     for (std::set<int>::iterator it = setFilesToPrune.begin(); it != setFilesToPrune.end(); ++it) {\n         CDiskBlockPos pos(*it, 0);\n@@ -4163,6 +4163,11 @@ std::string CBlockFileInfo::ToString() const\n     return strprintf(\"CBlockFileInfo(blocks=%u, size=%u, heights=%u...%u, time=%s...%s)\", nBlocks, nSize, nHeightFirst, nHeightLast, DateTimeStrFormat(\"%Y-%m-%d\", nTimeFirst), DateTimeStrFormat(\"%Y-%m-%d\", nTimeLast));\n }\n \n+CBlockFileInfo* GetBlockFileInfo(size_t n)\n+{\n+    return &vinfoBlockFile.at(n);\n+}\n+\n ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n {\n     LOCK(cs_main);"
      },
      {
        "sha": "9c606f2419409f7ec35bd50544bdd3d006e16e27",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -299,10 +299,15 @@ double GuessVerificationProgress(const ChainTxData& data, CBlockIndex* pindex);\n  */\n void FindFilesToPrune(std::set<int>& setFilesToPrune, uint64_t nPruneAfterHeight);\n \n+/**\n+ *  Mark one block file as pruned.\n+ */\n+void PruneOneBlockFile(const int fileNumber);\n+\n /**\n  *  Actually unlink the specified files\n  */\n-void UnlinkPrunedFiles(std::set<int>& setFilesToPrune);\n+void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Create a new block index entry for a given block hash */\n CBlockIndex * InsertBlockIndex(uint256 hash);\n@@ -562,6 +567,9 @@ static const unsigned int REJECT_ALREADY_KNOWN = 0x101;\n /** Transaction conflicts with a transaction already known */\n static const unsigned int REJECT_CONFLICT = 0x102;\n \n+/** Get block file info entry for one block file */\n+CBlockFileInfo* GetBlockFileInfo(size_t n);\n+\n /** Dump the mempool to disk. */\n void DumpMempool();\n "
      },
      {
        "sha": "8a9e7d1444ad18e932edf6d1730550a2ba4956a8",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 2,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -1074,11 +1074,32 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n \n     if (fRescan && fRunScan && requests.size()) {\n         CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();\n-\n+        CBlockIndex* scannedRange = nullptr;\n         if (pindex) {\n-            pwalletMain->ScanForWalletTransactions(pindex, true);\n+            scannedRange = pwalletMain->ScanForWalletTransactions(pindex, true);\n             pwalletMain->ReacceptWalletTransactions();\n         }\n+\n+        if (!scannedRange || scannedRange->nHeight > pindex->nHeight) {\n+            std::vector<UniValue> results = response.getValues();\n+            response.clear();\n+            response.setArray();\n+            size_t i = 0;\n+            for (const UniValue& request : requests.getValues()) {\n+                // If key creation date is within the successfully scanned\n+                // range, or if the import result already has an error set, let\n+                // the result stand unmodified. Otherwise replace the result\n+                // with an error message.\n+                if (GetImportTimestamp(request, now) - 7200 >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                    response.push_back(results.at(i));\n+                } else {\n+                    UniValue result = UniValue(UniValue::VOBJ);\n+                    result.pushKV(\"success\", UniValue(false));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    response.push_back(std::move(result));\n+                }\n+            }\n+        }\n     }\n \n     return response;"
      },
      {
        "sha": "d32e8ba06adb04c3e422c892060bd9afe5ec213e",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 60,
        "deletions": 0,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -9,10 +9,16 @@\n #include <utility>\n #include <vector>\n \n+#include \"rpc/server.h\"\n+#include \"test/test_bitcoin.h\"\n+#include \"validation.h\"\n #include \"wallet/test/wallet_test_fixture.h\"\n \n #include <boost/foreach.hpp>\n #include <boost/test/unit_test.hpp>\n+#include <univalue.h>\n+\n+extern UniValue importmulti(const JSONRPCRequest& request);\n \n // how many times to run all the tests to have a chance to catch errors that only show up with particular random shuffles\n #define RUN_TESTS 100\n@@ -355,4 +361,58 @@ BOOST_AUTO_TEST_CASE(ApproximateBestSubset)\n     empty_wallet();\n }\n \n+BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n+{\n+    LOCK(cs_main);\n+\n+    // Cap last block file size, and mine new block in a new block file.\n+    CBlockIndex* oldTip = chainActive.Tip();\n+    GetBlockFileInfo(oldTip->GetBlockPos().nFile)->nSize = MAX_BLOCKFILE_SIZE;\n+    CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey()));\n+    CBlockIndex* newTip = chainActive.Tip();\n+\n+    // Verify ScanForWalletTransactions picks up transactions in both the old\n+    // and new block files.\n+    {\n+        CWallet wallet;\n+        LOCK(wallet.cs_wallet);\n+        wallet.AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+        BOOST_CHECK_EQUAL(oldTip, wallet.ScanForWalletTransactions(oldTip));\n+        BOOST_CHECK_EQUAL(wallet.GetImmatureBalance(), 100 * COIN);\n+    }\n+\n+    // Prune the older block file.\n+    PruneOneBlockFile(oldTip->GetBlockPos().nFile);\n+    UnlinkPrunedFiles({oldTip->GetBlockPos().nFile});\n+\n+    // Verify ScanForWalletTransactions only picks transactions in the new block\n+    // file.\n+    {\n+        CWallet wallet;\n+        LOCK(wallet.cs_wallet);\n+        wallet.AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+        BOOST_CHECK_EQUAL(newTip, wallet.ScanForWalletTransactions(oldTip));\n+        BOOST_CHECK_EQUAL(wallet.GetImmatureBalance(), 50 * COIN);\n+    }\n+\n+    {\n+        CWallet wallet;\n+        ::pwalletMain = &wallet;\n+        UniValue key;\n+        key.setObject();\n+        key.pushKV(\"scriptPubKey\", HexStr(GetScriptForRawPubKey(coinbaseKey.GetPubKey())));\n+        key.pushKV(\"timestamp\", 0);\n+        key.pushKV(\"internal\", UniValue(true));\n+        UniValue keys;\n+        keys.setArray();\n+        keys.push_back(key);\n+        JSONRPCRequest request;\n+        request.params.setArray();\n+        request.params.push_back(keys);\n+\n+        UniValue response = importmulti(request);\n+        BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}}]\", newTip->GetBlockTimeMax()));\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "1b59c3cd80c15d764cf8a45c8ca20daa3b55c59f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -1545,10 +1545,14 @@ void CWalletTx::GetAccountAmounts(const string& strAccount, CAmount& nReceived,\n  * Scan the block chain (starting in pindexStart) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n+ *\n+ * Returns pointer to the first block in the last contiguous range that was\n+ * successfully scanned.\n+ *\n  */\n-int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n {\n-    int ret = 0;\n+    CBlockIndex* ret = nullptr;\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n@@ -1570,12 +1574,15 @@ int CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n \n             CBlock block;\n-            ReadBlockFromDisk(block, pindex, Params().GetConsensus());\n-            int posInBlock;\n-            for (posInBlock = 0; posInBlock < (int)block.vtx.size(); posInBlock++)\n-            {\n-                if (AddToWalletIfInvolvingMe(*block.vtx[posInBlock], pindex, posInBlock, fUpdate))\n-                    ret++;\n+            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n+                    AddToWalletIfInvolvingMe(*block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n+                }\n+                if (!ret) {\n+                    ret = pindex;\n+                }\n+            } else {\n+                ret = nullptr;\n             }\n             pindex = chainActive.Next(pindex);\n             if (GetTime() >= nNow + 60) {"
      },
      {
        "sha": "98e4fb87b91073381079b735fcda381ac5f0e4a8",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9072395e5fddb1f2590138a179ab0868646a38a0/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=9072395e5fddb1f2590138a179ab0868646a38a0",
        "patch": "@@ -788,7 +788,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     bool LoadToWallet(const CWalletTx& wtxIn);\n     void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock) override;\n     bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n-    int ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n+    CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;\n     std::vector<uint256> ResendWalletTransactionsBefore(int64_t nTime, CConnman* connman);"
      }
    ]
  },
  {
    "sha": "9d3f9d2a5991e6e561e323f488cb40a803408b6b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDNmOWQyYTU5OTFlNmU1NjFlMzIzZjQ4OGNiNDBhODAzNDA4YjZi",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-02-07T16:20:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-22T12:03:55Z"
      },
      "message": "[Trivial] Remove incorrect help message from gettxoutproof()\n\nGithub-Pull: #9711\nRebased-From: 9949ebfa6a548260858df429f4d0e716e0a26065",
      "tree": {
        "sha": "7e683f632578291f7bf8744c0641e1717b876fd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7e683f632578291f7bf8744c0641e1717b876fd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d3f9d2a5991e6e561e323f488cb40a803408b6b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrX4rAAoJEHSBCwEjRsmm8boH/2viIEG/ed9FRmflqRntDMTi\nf0Uk3DGQrRlACVBB1Yj/ZlxWnq9nzeWPybv8B8pXkrey3qQYKpXChJvcdNZ/BsV4\nYzw4258DHgZ+05DkKAaISRbAQTLgRYafjM9ePNg5kkMVIWpVCfpvqgS0UAWjT3xG\nYyXvt4OciOBlWbNonSZ4w5oWVLNEm5WyTMveafp/5MC7uw/NeianHxcaaVwIySN+\nMJsnqsT7AjA/lMprxAvCr5RcRxl+GpnowAarAFh2X3jo01Z5+IFWKHig6WHjmduV\nZuWV7FRocQOhwdQ7vvNFtRjruOJH0s0l8h/JR3hR+s+2e6OntrtFD9jUlCcWyQo=\n=JuGj\n-----END PGP SIGNATURE-----",
        "payload": "tree 7e683f632578291f7bf8744c0641e1717b876fd2\nparent 9072395e5fddb1f2590138a179ab0868646a38a0\nauthor John Newbery <john@johnnewbery.com> 1486484406 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487765035 +0100\n\n[Trivial] Remove incorrect help message from gettxoutproof()\n\nGithub-Pull: #9711\nRebased-From: 9949ebfa6a548260858df429f4d0e716e0a26065\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3f9d2a5991e6e561e323f488cb40a803408b6b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d3f9d2a5991e6e561e323f488cb40a803408b6b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3f9d2a5991e6e561e323f488cb40a803408b6b/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9072395e5fddb1f2590138a179ab0868646a38a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9072395e5fddb1f2590138a179ab0868646a38a0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9072395e5fddb1f2590138a179ab0868646a38a0"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "bf16f27498f8778dfa573568cdaf8f0c80a2ec2f",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d3f9d2a5991e6e561e323f488cb40a803408b6b/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d3f9d2a5991e6e561e323f488cb40a803408b6b/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=9d3f9d2a5991e6e561e323f488cb40a803408b6b",
        "patch": "@@ -245,7 +245,6 @@ UniValue gettxoutproof(const JSONRPCRequest& request)\n             \"unspent output in the utxo for this transaction. To make it always work,\\n\"\n             \"you need to maintain a transaction index, using the -txindex command line option or\\n\"\n             \"specify the block in which the transaction is included manually (by blockhash).\\n\"\n-            \"\\nReturn the raw transaction data.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"txids\\\"       (string) A json array of txids to filter\\n\"\n             \"    [\\n\""
      }
    ]
  },
  {
    "sha": "599c69abe3101512eeee13733c0f58eb3e363eae",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTljNjlhYmUzMTAxNTEyZWVlZTEzNzMzYzBmNThlYjNlMzYzZWFl",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-21T17:57:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T09:39:20Z"
      },
      "message": "Fix pruning test broken by 2 hour manual prune window\n\nRegression happened in 91fb506 Add two hour buffer to manual pruning.\n\nGithub-Pull: #9820\nRebased-From: 874c7363d794c18a3b46d3d2a03f19c88f3a20cf",
      "tree": {
        "sha": "847cd4a976c908ad1ddcc0278f6b5a91edd4391c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/847cd4a976c908ad1ddcc0278f6b5a91edd4391c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/599c69abe3101512eeee13733c0f58eb3e363eae",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrq3IAAoJEHSBCwEjRsmmN2kH/imNCF2AbAHUv35nIpsi1pAc\nJwKHERh7YMSbdAXr/+fle2gw6ed8k+nJynwkRiXvXoL6UI6MCJoWzFpyqEdOurk+\nOVBmpwQNzwHIafG0xaDbZsny+f4Ehfod2D1NlxslVpZIuCKCd6lg6nA3xOYmGIVs\nogZ2H2IqVYAq8LLsxJh5A1K9o/O0JqzuFJJzAVkShcWQ15SFqRUz/mVwrVJ4Fadg\nbUUH7zt3TQBNYOdtwbdsE6WGJk1V1ITdivPB00STfvHI4NGGrAK5YLU3UUzPxD84\ngDKOeio4cO0LP3xnyj6gybvt83YcPh91k774+2x9aM32rdHp5J487qmx4RSwyPk=\n=Lhv0\n-----END PGP SIGNATURE-----",
        "payload": "tree 847cd4a976c908ad1ddcc0278f6b5a91edd4391c\nparent 9d3f9d2a5991e6e561e323f488cb40a803408b6b\nauthor Russell Yanofsky <russ@yanofsky.org> 1487699850 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487842760 +0100\n\nFix pruning test broken by 2 hour manual prune window\n\nRegression happened in 91fb506 Add two hour buffer to manual pruning.\n\nGithub-Pull: #9820\nRebased-From: 874c7363d794c18a3b46d3d2a03f19c88f3a20cf\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c69abe3101512eeee13733c0f58eb3e363eae",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/599c69abe3101512eeee13733c0f58eb3e363eae",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c69abe3101512eeee13733c0f58eb3e363eae/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d3f9d2a5991e6e561e323f488cb40a803408b6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3f9d2a5991e6e561e323f488cb40a803408b6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d3f9d2a5991e6e561e323f488cb40a803408b6b"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 6,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1e6d4191869fa263e2b7b9f039fc45f40343dc57",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/599c69abe3101512eeee13733c0f58eb3e363eae/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/599c69abe3101512eeee13733c0f58eb3e363eae/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=599c69abe3101512eeee13733c0f58eb3e363eae",
        "patch": "@@ -18,6 +18,11 @@\n \n MIN_BLOCKS_TO_KEEP = 288\n \n+# Rescans start at the earliest block up to 2 hours before a key timestamp, so\n+# the manual prune RPC avoids pruning blocks in the same window to be\n+# compatible with pruning based on key creation time.\n+RESCAN_WINDOW = 2 * 60 * 60\n+\n \n def calc_usage(blockdir):\n     return sum(os.path.getsize(blockdir+f) for f in os.listdir(blockdir) if os.path.isfile(blockdir+f)) / (1024. * 1024.)\n@@ -239,7 +244,7 @@ def manual_test(self, node_number, use_timestamp):\n \n         def height(index):\n             if use_timestamp:\n-                return node.getblockheader(node.getblockhash(index))[\"time\"]\n+                return node.getblockheader(node.getblockhash(index))[\"time\"] + RESCAN_WINDOW\n             else:\n                 return index\n "
      }
    ]
  },
  {
    "sha": "260c71cbb857d12540a2f53372282d11f2b401a8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjBjNzFjYmI4NTdkMTI1NDBhMmY1MzM3MjI4MmQxMWYyYjQwMWE4",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-02-22T10:29:43Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T09:40:55Z"
      },
      "message": "qa: Check return code when stopping nodes\n\nThis includes work by jnewbery\n\nGithub-Pull: #9824\nRebased-From: fa4cd2e998e0ebebe283a6243f7f752123a105ab",
      "tree": {
        "sha": "d12ed95b477b54325e980daf8a8538297a5c7c21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d12ed95b477b54325e980daf8a8538297a5c7c21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/260c71cbb857d12540a2f53372282d11f2b401a8",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrq4nAAoJEHSBCwEjRsmmELQH/1GKoYVAXf3AkvkyCH1MAplu\nZHnHW9r3fNx41D3brYBpZkf96lL0gu/btREesTBjsXn9QSwB54P/fPYOh6HKai2y\n4zZ01PyGpCClUzvBVFagoByKQSyfKc1ERmFTRtE2ulHCh0MrwFhl1dZlG5TpFAb/\nw3/fZrCs1JxfbulC2ebrk7YHceyCshB/Se/1BqVnuHOvf0g7q0UiQ+OFLk0g2pbs\nIREk/nDOka6cMcJ03zHMjEAAITwmbeI8TyiGa9t6rdcjZZvKbdGDcfdXU6IhbLED\nPwEuh7/892OKhHNZVoTHxFhAiPE5Gjd2UucFUX3XToxH13ajWqtEUNfyMt8dN9U=\n=Hrqi\n-----END PGP SIGNATURE-----",
        "payload": "tree d12ed95b477b54325e980daf8a8538297a5c7c21\nparent 599c69abe3101512eeee13733c0f58eb3e363eae\nauthor MarcoFalke <falke.marco@gmail.com> 1487759383 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487842855 +0100\n\nqa: Check return code when stopping nodes\n\nThis includes work by jnewbery\n\nGithub-Pull: #9824\nRebased-From: fa4cd2e998e0ebebe283a6243f7f752123a105ab\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/260c71cbb857d12540a2f53372282d11f2b401a8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/260c71cbb857d12540a2f53372282d11f2b401a8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/260c71cbb857d12540a2f53372282d11f2b401a8/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "599c69abe3101512eeee13733c0f58eb3e363eae",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/599c69abe3101512eeee13733c0f58eb3e363eae",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/599c69abe3101512eeee13733c0f58eb3e363eae"
      }
    ],
    "stats": {
      "total": 42,
      "additions": 15,
      "deletions": 27
    },
    "files": [
      {
        "sha": "8d2bc73c0cce7a46aabe4d24766929f80afd4c53",
        "filename": "qa/rpc-tests/fundrawtransaction.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/fundrawtransaction.py?ref=260c71cbb857d12540a2f53372282d11f2b401a8",
        "patch": "@@ -469,7 +469,9 @@ def run_test(self):\n         # locked wallet test\n         self.nodes[1].encryptwallet(\"test\")\n         self.nodes.pop(1)\n-        stop_nodes(self.nodes)\n+        stop_node(self.nodes[0], 0)\n+        stop_node(self.nodes[1], 2)\n+        stop_node(self.nodes[2], 3)\n \n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir)\n         # This test is not meant to test fee estimation and we'd like"
      },
      {
        "sha": "1010c54aa5c224812c69f43f19df3975d8978e95",
        "filename": "qa/rpc-tests/rpcbind_test.py",
        "status": "modified",
        "additions": 7,
        "deletions": 12,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/rpcbind_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/rpcbind_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/rpcbind_test.py?ref=260c71cbb857d12540a2f53372282d11f2b401a8",
        "patch": "@@ -35,11 +35,9 @@ def run_bind_test(self, allow_ips, connect_to, addresses, expected):\n             base_args += ['-rpcallowip=' + x for x in allow_ips]\n         binds = ['-rpcbind='+addr for addr in addresses]\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [base_args + binds], connect_to)\n-        try:\n-            pid = bitcoind_processes[0].pid\n-            assert_equal(set(get_bind_addrs(pid)), set(expected))\n-        finally:\n-            stop_nodes(self.nodes)\n+        pid = bitcoind_processes[0].pid\n+        assert_equal(set(get_bind_addrs(pid)), set(expected))\n+        stop_nodes(self.nodes)\n \n     def run_allowip_test(self, allow_ips, rpchost, rpcport):\n         '''\n@@ -48,13 +46,10 @@ def run_allowip_test(self, allow_ips, rpchost, rpcport):\n         '''\n         base_args = ['-disablewallet', '-nolisten'] + ['-rpcallowip='+x for x in allow_ips]\n         self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [base_args])\n-        try:\n-            # connect to node through non-loopback interface\n-            node = get_rpc_proxy(rpc_url(0, \"%s:%d\" % (rpchost, rpcport)), 0)\n-            node.getnetworkinfo()\n-        finally:\n-            node = None # make sure connection will be garbage collected and closed\n-            stop_nodes(self.nodes)\n+        # connect to node through non-loopback interface\n+        node = get_rpc_proxy(rpc_url(0, \"%s:%d\" % (rpchost, rpcport)), 0)\n+        node.getnetworkinfo()\n+        stop_nodes(self.nodes)\n \n     def run_test(self):\n         # due to OS-specific network stats queries, this test works only on Linux"
      },
      {
        "sha": "ec151c2a65d2da592fa6677c68333a78840544e6",
        "filename": "qa/rpc-tests/test_framework/util.py",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/260c71cbb857d12540a2f53372282d11f2b401a8/qa/rpc-tests/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/util.py?ref=260c71cbb857d12540a2f53372282d11f2b401a8",
        "patch": "@@ -375,28 +375,19 @@ def stop_node(node, i):\n         node.stop()\n     except http.client.CannotSendRequest as e:\n         print(\"WARN: Unable to stop node: \" + repr(e))\n-    bitcoind_processes[i].wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n+    return_code = bitcoind_processes[i].wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n+    assert_equal(return_code, 0)\n     del bitcoind_processes[i]\n \n def stop_nodes(nodes):\n-    for node in nodes:\n-        try:\n-            node.stop()\n-        except http.client.CannotSendRequest as e:\n-            print(\"WARN: Unable to stop node: \" + repr(e))\n-    del nodes[:] # Emptying array closes connections as a side effect\n-    wait_bitcoinds()\n+    for i, node in enumerate(nodes):\n+        stop_node(node, i)\n+    assert not bitcoind_processes.values() # All connections must be gone now\n \n def set_node_times(nodes, t):\n     for node in nodes:\n         node.setmocktime(t)\n \n-def wait_bitcoinds():\n-    # Wait for all bitcoinds to cleanly exit\n-    for bitcoind in bitcoind_processes.values():\n-        bitcoind.wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n-    bitcoind_processes.clear()\n-\n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))\n     from_connection.addnode(ip_port, \"onetry\")"
      }
    ]
  },
  {
    "sha": "749fe95fdc979612f41b4b4ee0f58ac1bb425913",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NDlmZTk1ZmRjOTc5NjEyZjQxYjRiNGVlMGY1OGFjMWJiNDI1OTEz",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-21T16:56:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T09:49:07Z"
      },
      "message": "build: warn about variable length arrays\n\nGithub-Pull: #9789\nRebased-From: b602fe0f7372256bd2bc8c116d23dee3253882f9",
      "tree": {
        "sha": "2c80bd5782fb0f0c7b0d70eabeda876a59915e17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c80bd5782fb0f0c7b0d70eabeda876a59915e17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/749fe95fdc979612f41b4b4ee0f58ac1bb425913",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrrATAAoJEHSBCwEjRsmmK0IIAL12EqoUaoTwEuvrUXh3BsYr\nr0s1w/sm0ktL0LbTjxqqmp1bWa3GCpci4JlxhGsjoZ4619xCRX9QVhF68gUt5+4v\n3zkicPvG9LEsOWsuteZ/GQrjysFOlvitXbI7PWMW9XE5O4z839FNlHwE+9DUi1xE\nfPBgPpTo9QQ9lr2MEX1K4DMfgTwOiH2sSD8gsIZixfNFnEtppzQwPbzjAAjSMHwp\nph8uA5bpq7wUoWLuuZ7djK1vlzgvGVxIkSkMyvfx/H/MQaY2eFNqCM9Gmnf20O/E\nfMjO5KR0CTfe3BO6USmkr/2XBleaHmbX0C6KG7hx8ICPTwNHCexP536ASWrdR1o=\n=hKiP\n-----END PGP SIGNATURE-----",
        "payload": "tree 2c80bd5782fb0f0c7b0d70eabeda876a59915e17\nparent 260c71cbb857d12540a2f53372282d11f2b401a8\nauthor Cory Fields <cory-nospam-@coryfields.com> 1487696167 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487843347 +0100\n\nbuild: warn about variable length arrays\n\nGithub-Pull: #9789\nRebased-From: b602fe0f7372256bd2bc8c116d23dee3253882f9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749fe95fdc979612f41b4b4ee0f58ac1bb425913",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/749fe95fdc979612f41b4b4ee0f58ac1bb425913",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749fe95fdc979612f41b4b4ee0f58ac1bb425913/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "260c71cbb857d12540a2f53372282d11f2b401a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/260c71cbb857d12540a2f53372282d11f2b401a8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/260c71cbb857d12540a2f53372282d11f2b401a8"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e4f8f6f6eb2fbf18cfc427e3ba3d0432850f390d",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/749fe95fdc979612f41b4b4ee0f58ac1bb425913/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/749fe95fdc979612f41b4b4ee0f58ac1bb425913/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=749fe95fdc979612f41b4b4ee0f58ac1bb425913",
        "patch": "@@ -210,6 +210,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat],[CXXFLAGS=\"$CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wvla],[CXXFLAGS=\"$CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[CXXFLAGS=\"$CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n \n   ## Some compilers (gcc) ignore unknown -Wno-* options, but warn about all"
      }
    ]
  },
  {
    "sha": "05e906dbc68e3a88a358f2f08750c51b6e9d9856",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNWU5MDZkYmM2OGUzYTg4YTM1OGYyZjA4NzUwYzUxYjZlOWQ5ODU2",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-21T16:56:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T09:49:07Z"
      },
      "message": "build: add --enable-werror option\n\nThis turns some compiler warnings into errors. Useful for c-i.\n\nGithub-Pull: #9789\nRebased-From: 205830a37b7ffa4f8fa306e5c9eafcee3777fa68",
      "tree": {
        "sha": "a928d29884cabdde7431e168ccb17383605ccb92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a928d29884cabdde7431e168ccb17383605ccb92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/05e906dbc68e3a88a358f2f08750c51b6e9d9856",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrrATAAoJEHSBCwEjRsmm0isIALycrYx6L4d33cFyeHkfxxQI\ncsjbHeYDOneaKuFF5cscAgZGS84eqXGMUqhRju/xpJFB4jsxs69o5ZAo7mfy5TCR\nC8sKcjxirRUzGzyEjvKSlxP8i4965avN+MBwK7VjfQodbz1YgQq21DIU/Nar6XHv\nYzoJm7tWdSrbpUnfB0vO0g0TMyrGB3gqY6Q4vUVrFf2ORZOCzs15pk0MSC8iu9nI\n5kW4WLArNRUmSuuX1oh1vK/N8TUlmmXkH/qX8gLYzWWlr/MQIi+SsfQIj0BubyPv\niI2D50XyNNfTeJpXxXns1ASGmrCBCT1MDRY/a5ZKpkOXfZ/vZDttpG0ULaAZLrQ=\n=TaAk\n-----END PGP SIGNATURE-----",
        "payload": "tree a928d29884cabdde7431e168ccb17383605ccb92\nparent 749fe95fdc979612f41b4b4ee0f58ac1bb425913\nauthor Cory Fields <cory-nospam-@coryfields.com> 1487696186 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487843347 +0100\n\nbuild: add --enable-werror option\n\nThis turns some compiler warnings into errors. Useful for c-i.\n\nGithub-Pull: #9789\nRebased-From: 205830a37b7ffa4f8fa306e5c9eafcee3777fa68\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e906dbc68e3a88a358f2f08750c51b6e9d9856",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/05e906dbc68e3a88a358f2f08750c51b6e9d9856",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e906dbc68e3a88a358f2f08750c51b6e9d9856/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "749fe95fdc979612f41b4b4ee0f58ac1bb425913",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/749fe95fdc979612f41b4b4ee0f58ac1bb425913",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/749fe95fdc979612f41b4b4ee0f58ac1bb425913"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 18,
      "deletions": 1
    },
    "files": [
      {
        "sha": "95e85e6d0549e3e8bd733427a4fcd41c54d426e7",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e906dbc68e3a88a358f2f08750c51b6e9d9856/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e906dbc68e3a88a358f2f08750c51b6e9d9856/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=05e906dbc68e3a88a358f2f08750c51b6e9d9856",
        "patch": "@@ -192,6 +192,13 @@ AC_ARG_ENABLE([debug],\n     [enable_debug=$enableval],\n     [enable_debug=no])\n \n+# Turn warnings into errors\n+AC_ARG_ENABLE([werror],\n+    [AS_HELP_STRING([--enable-werror],\n+                    [Treat certain compiler warnings as errors (default is no)])],\n+    [enable_werror=$enableval],\n+    [enable_werror=no])\n+\n AC_LANG_PUSH([C++])\n AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n@@ -206,6 +213,14 @@ if test \"x$enable_debug\" = xyes; then\n     fi\n fi\n \n+ERROR_CXXFLAGS=\n+if test \"x$enable_werror\" = \"xyes\"; then\n+  if test \"x$CXXFLAG_WERROR\" = \"x\"; then\n+    AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\n+  fi\n+  AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n+fi\n+\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wall],[CXXFLAGS=\"$CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wextra],[CXXFLAGS=\"$CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n@@ -1067,6 +1082,7 @@ AC_SUBST(BITCOIN_CLI_NAME)\n AC_SUBST(BITCOIN_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n+AC_SUBST(ERROR_CXXFLAGS)\n AC_SUBST(HARDENED_CXXFLAGS)\n AC_SUBST(HARDENED_CPPFLAGS)\n AC_SUBST(HARDENED_LDFLAGS)\n@@ -1156,6 +1172,7 @@ echo \"  with test     = $use_tests\"\n echo \"  with bench    = $use_bench\"\n echo \"  with upnp     = $use_upnp\"\n echo \"  debug enabled = $enable_debug\"\n+echo \"  werror        = $enable_werror\"\n echo \n echo \"  target os     = $TARGET_OS\"\n echo \"  build os      = $BUILD_OS\""
      },
      {
        "sha": "e8d22313dca33d8ac6adff107e72f8cfd53325be",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/05e906dbc68e3a88a358f2f08750c51b6e9d9856/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/05e906dbc68e3a88a358f2f08750c51b6e9d9856/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=05e906dbc68e3a88a358f2f08750c51b6e9d9856",
        "patch": "@@ -5,7 +5,7 @@\n DIST_SUBDIRS = secp256k1 univalue\n \n AM_LDFLAGS = $(PTHREAD_CFLAGS) $(LIBTOOL_LDFLAGS) $(HARDENED_LDFLAGS)\n-AM_CXXFLAGS = $(HARDENED_CXXFLAGS)\n+AM_CXXFLAGS = $(HARDENED_CXXFLAGS) $(ERROR_CXXFLAGS)\n AM_CPPFLAGS = $(HARDENED_CPPFLAGS)\n EXTRA_LIBRARIES =\n "
      }
    ]
  },
  {
    "sha": "99fd85cb44fe9983c64cfa376299e67b18568304",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5OWZkODVjYjQ0ZmU5OTgzYzY0Y2ZhMzc2Mjk5ZTY3YjE4NTY4MzA0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-22T18:33:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T18:06:57Z"
      },
      "message": "build: force a c++ standard to be specified\n\nNewer compilers may switch to newer standards by default. For example, gcc6\nuses std=gnu++14 by default.\n\nGithub-Pull: #9831\nRebased-From: 9829c54de2725037ee0702306cbaa99fc9aa1826",
      "tree": {
        "sha": "3ab777b20692dea3fb85671d298a1cf8718ce960",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3ab777b20692dea3fb85671d298a1cf8718ce960"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/99fd85cb44fe9983c64cfa376299e67b18568304",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYryTBAAoJEHSBCwEjRsmmCm0IAJu5NhzKS91vB51I2iTkfHk5\nh+zxL57IOQqyU6YVxoKvTWlqwceSkC3WhV8g5d3w1g/A3CHpcJoiJ4KHgrzg9k+A\n05g9qD0GAqXu550n6cmgUVgrvG2kVGMe+rQdbT5r0YbTISORHPrgXGiqUsUqN+QS\nl9TLtHe1HJa3A/9Q3B1L9Wcb5BjD5vcEIjNKa7G/DBF6R9mEt0TPIvyHBu/DMoHJ\nIsyHw4htPbvMNT52gpChL2MbOJMstjDaNuMugP45IrM1Vf/jNUu9P1idzjn9X1w/\n5vjq07Dr4J1asM2TcfZfkEeIJxEaPK1RKEL9UiCGssMP+UqXDUCUA+QnUAPl4AI=\n=kna7\n-----END PGP SIGNATURE-----",
        "payload": "tree 3ab777b20692dea3fb85671d298a1cf8718ce960\nparent 05e906dbc68e3a88a358f2f08750c51b6e9d9856\nauthor Cory Fields <cory-nospam-@coryfields.com> 1487788402 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487873217 +0100\n\nbuild: force a c++ standard to be specified\n\nNewer compilers may switch to newer standards by default. For example, gcc6\nuses std=gnu++14 by default.\n\nGithub-Pull: #9831\nRebased-From: 9829c54de2725037ee0702306cbaa99fc9aa1826\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99fd85cb44fe9983c64cfa376299e67b18568304",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/99fd85cb44fe9983c64cfa376299e67b18568304",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99fd85cb44fe9983c64cfa376299e67b18568304/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "05e906dbc68e3a88a358f2f08750c51b6e9d9856",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/05e906dbc68e3a88a358f2f08750c51b6e9d9856",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/05e906dbc68e3a88a358f2f08750c51b6e9d9856"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "f147cee3b117f80b22544976385e267b26f46dd9",
        "filename": "build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99fd85cb44fe9983c64cfa376299e67b18568304/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99fd85cb44fe9983c64cfa376299e67b18568304/build-aux/m4/ax_cxx_compile_stdcxx.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_cxx_compile_stdcxx.m4?ref=99fd85cb44fe9983c64cfa376299e67b18568304",
        "patch": "@@ -57,16 +57,22 @@ AC_DEFUN([AX_CXX_COMPILE_STDCXX], [dnl\n         [$3], [mandatory], [ax_cxx_compile_cxx$1_required=true],\n         [$3], [optional], [ax_cxx_compile_cxx$1_required=false],\n         [m4_fatal([invalid third argument `$3' to AX_CXX_COMPILE_STDCXX])])\n+  m4_if([$4], [], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [default], [ax_cxx_compile_cxx$1_try_default=true],\n+        [$4], [nodefault], [ax_cxx_compile_cxx$1_try_default=false],\n+        [m4_fatal([invalid fourth argument `$4' to AX_CXX_COMPILE_STDCXX])])\n   AC_LANG_PUSH([C++])dnl\n   ac_success=no\n+\n+  m4_if([$4], [nodefault], [], [dnl\n   AC_CACHE_CHECK(whether $CXX supports C++$1 features by default,\n   ax_cv_cxx_compile_cxx$1,\n   [AC_COMPILE_IFELSE([AC_LANG_SOURCE([_AX_CXX_COMPILE_STDCXX_testbody_$1])],\n     [ax_cv_cxx_compile_cxx$1=yes],\n     [ax_cv_cxx_compile_cxx$1=no])])\n   if test x$ax_cv_cxx_compile_cxx$1 = xyes; then\n     ac_success=yes\n-  fi\n+  fi])\n \n   m4_if([$2], [noext], [], [dnl\n   if test x$ac_success = xno; then"
      },
      {
        "sha": "a2332578a63ba98604154e46f8aa69247fafc369",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/99fd85cb44fe9983c64cfa376299e67b18568304/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/99fd85cb44fe9983c64cfa376299e67b18568304/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=99fd85cb44fe9983c64cfa376299e67b18568304",
        "patch": "@@ -55,7 +55,7 @@ case $host in\n   ;;\n esac\n dnl Require C++11 compiler (no GNU extensions)\n-AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory])\n+AX_CXX_COMPILE_STDCXX([11], [noext], [mandatory], [nodefault])\n dnl Check if -latomic is required for <std::atomic>\n CHECK_ATOMIC\n "
      }
    ]
  },
  {
    "sha": "847e3753a6d6a6ab4dd081e2945cb200faf730d4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDdlMzc1M2E2ZDZhNmFiNGRkMDgxZTI5NDVjYjIwMGZhZjczMGQ0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T19:28:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T19:31:57Z"
      },
      "message": "qt: pre-rc2 translations update",
      "tree": {
        "sha": "e12057ee4b7d67361fb163d2b17bbfc67c48666c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e12057ee4b7d67361fb163d2b17bbfc67c48666c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/847e3753a6d6a6ab4dd081e2945cb200faf730d4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYrzivAAoJEHSBCwEjRsmmcCoIAMQDYTU1KGDqAbRJKU+F6KSu\n/7mp/eDrr9CyRcbcCwqBWFO5C0oKlhHdfQK6J062+nEbVYWLet80m8QXA9qk4k2J\n1zcyHc4o6opANqrccvu+xJ0d3UDndlZLtLuSoQyXu/HibojIlClHd/TlqSAsDv6S\nyCNKjmgfYesaVK+C3suQL2MPbVWLcI8+3aIU32SCe+QvcbtnktUaGyxUJPRtfxO0\nyqIL+DnOZ+7zsh6F17FbJjwWc080U1EiCYrImaxwTpteROdtcAaWwZC60UyADiu9\nufM4jThV/KJEMlPjmAQ74RV69gKFFacxJxAMpvkhNTkCDuCcHeV1qE9bZWWvsvo=\n=Vu3b\n-----END PGP SIGNATURE-----",
        "payload": "tree e12057ee4b7d67361fb163d2b17bbfc67c48666c\nparent 99fd85cb44fe9983c64cfa376299e67b18568304\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487878110 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487878317 +0100\n\nqt: pre-rc2 translations update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/847e3753a6d6a6ab4dd081e2945cb200faf730d4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/847e3753a6d6a6ab4dd081e2945cb200faf730d4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/847e3753a6d6a6ab4dd081e2945cb200faf730d4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99fd85cb44fe9983c64cfa376299e67b18568304",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99fd85cb44fe9983c64cfa376299e67b18568304",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99fd85cb44fe9983c64cfa376299e67b18568304"
      }
    ],
    "stats": {
      "total": 336,
      "additions": 322,
      "deletions": 14
    },
    "files": [
      {
        "sha": "e6a9c9228d336a586f440619f0f1c05829241cfd",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=847e3753a6d6a6ab4dd081e2945cb200faf730d4",
        "patch": "@@ -304,12 +304,12 @@\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+427\"/>\n+        <location line=\"+430\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-505\"/>\n+        <location line=\"-508\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n@@ -404,7 +404,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+357\"/>\n+        <location line=\"+360\"/>\n         <source>Click to disable network activity.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -429,7 +429,7 @@\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-508\"/>\n+        <location line=\"-511\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -459,12 +459,12 @@\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"+514\"/>\n+        <location line=\"+517\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-739\"/>\n+        <location line=\"-742\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n@@ -549,7 +549,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+354\"/>\n+        <location line=\"+357\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -610,12 +610,12 @@\n         <translation>Up to date</translation>\n     </message>\n     <message>\n-        <location line=\"-438\"/>\n+        <location line=\"-441\"/>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+200\"/>\n         <source>%1 client</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1601,7 +1601,7 @@\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+328\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+326\"/>\n         <location line=\"+216\"/>\n         <location line=\"+42\"/>\n         <location line=\"+113\"/>"
      },
      {
        "sha": "12cd54d405e8bec86d2304e22aee16a1f7b5c017",
        "filename": "src/qt/locale/bitcoin_fr_FR.ts",
        "status": "modified",
        "additions": 308,
        "deletions": 4,
        "changes": 312,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_fr_FR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_fr_FR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_FR.ts?ref=847e3753a6d6a6ab4dd081e2945cb200faf730d4",
        "patch": "@@ -41,10 +41,46 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Supprimer</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>C&amp;oisir</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Copier &amp;\u00c9tiquette </translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;\u00c9diter </translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Exporter la liste d'adresses</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u00c9chec de l'export</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,6 +99,22 @@\n         <source>Repeat new passphrase</source>\n         <translation>R\u00e9p\u00e9tez la phrase de passe</translation>\n     </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Chiffrer le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>D\u00e9verrouiller le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>D\u00e9crypter le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Porte-monnaie chiffr\u00e9</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -414,6 +466,42 @@\n         <source>Confirmed</source>\n         <translation>Confirm\u00e9e</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copier l'adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copier les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copier apr\u00e8s les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copier les octets</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>oui</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>non</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -797,6 +885,14 @@\n     </context>\n <context>\n     <name>QRImageWidget</name>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>&amp;Copier image</translation>\n+    </message>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>Sauvegarder QR code</translation>\n+    </message>\n     </context>\n <context>\n     <name>RPCConsole</name>\n@@ -1055,7 +1151,15 @@\n         <source>Remove</source>\n         <translation>Retirer</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1074,9 +1178,37 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Sauvegarder image</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1180,7 +1312,27 @@\n         <source>S&amp;end</source>\n         <translation>E&amp;voyer</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copier les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copier apr\u00e8s les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copier les octets</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1305,7 +1457,83 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n-    </context>\n+    <message>\n+        <source>Status</source>\n+        <translation>\u00c9tat</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Source</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>G\u00e9n\u00e9r\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>De</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>inconnu</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>\u00c1</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>Votre adresse</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Lecture uniquement</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>\u00c9tiquette </translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Cr\u00e9dit</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>D\u00e9bit</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>D\u00e9bit total</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Cr\u00e9dit total </translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Montant net</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Commentaire </translation>\n+    </message>\n+    <message>\n+        <source>true</source>\n+        <translation>vrai</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>faux</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -1315,9 +1543,85 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Lecture uniquement</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>Toutes</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Aujourd'hui</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Cette semaine</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Ce mois</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Mois dernier</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Cette ann\u00e9e</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>Autres</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copier l'adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u00c9chec de l'export</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "30e59d9260407ad3f05ecac84ee6108ec6560cd3",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/847e3753a6d6a6ab4dd081e2945cb200faf730d4/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=847e3753a6d6a6ab4dd081e2945cb200faf730d4",
        "patch": "@@ -3240,6 +3240,10 @@\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation>\u94b1\u5305 %s \u5728\u5916\u90e8\u7684\u6570\u636e\u76ee\u5f55 %s</translation>\n     </message>\n+    <message>\n+        <source>Wallet debugging/testing options:</source>\n+        <translation>\u94b1\u5305\u8c03\u8bd5/\u6d4b\u8bd5\u9009\u9879\uff1a</translation>\n+    </message>\n     <message>\n         <source>Wallet options:</source>\n         <translation>\u94b1\u5305\u9009\u9879:</translation>"
      }
    ]
  },
  {
    "sha": "3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjJmN2ZkY2FlYTM2YzhjNWM5M2IyMTAzMGQ0ZTIzMjdkMmI2ZThj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T20:38:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T20:38:29Z"
      },
      "message": "doc: Add authors and changes since rc1 to release notes",
      "tree": {
        "sha": "2d9737dd88844c829f578bf887f51fe573c5a74a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d9737dd88844c829f578bf887f51fe573c5a74a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYr0hGAAoJEHSBCwEjRsmmmmEH+gIFNIowvg4GSrCiGIY7S2gm\ngDYu1zUcR/gC7dQ5E7o9gQNCDE0k2z3euwDGLWyqmC6P09i0rfafQpsyDdN9I0I8\nTBYAhx3Idd7YWbx46ZBCxpwEJl54fEKFE6TkD+KZWe5G8tB1KRA1UZe/KQJtVIk3\njKnpD/oYw951xClqnzWQwl3H3R+Xx7EccysxlNxGSWqFP99XUBVWHnYvvmKaB5oR\n4hdvkR8Rq/Gy52cgDiw6BfzC9jH/n9dB6W6DuzoKPnAvik24k8E7iHwY1+8hEiWo\nvBXN6j/WmmttdP3sQuYS2J/5c1SHRvKyjtwQAtIymjZwocVor+UcCbyXriaHfGk=\n=6vO5\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d9737dd88844c829f578bf887f51fe573c5a74a\nparent 847e3753a6d6a6ab4dd081e2945cb200faf730d4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487882295 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487882309 +0100\n\ndoc: Add authors and changes since rc1 to release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "847e3753a6d6a6ab4dd081e2945cb200faf730d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/847e3753a6d6a6ab4dd081e2945cb200faf730d4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/847e3753a6d6a6ab4dd081e2945cb200faf730d4"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1f85dedb334604126d8c3fa9242a8b99f89befe9",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
        "patch": "@@ -354,6 +354,8 @@ and git merge commit are mentioned.\n - #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n - #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n - #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n+- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n+- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n \n ### Block and transaction handling\n - #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n@@ -396,6 +398,7 @@ and git merge commit are mentioned.\n - #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n - #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n - #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction\n+- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n \n ### P2P protocol and network code\n - #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n@@ -494,6 +497,8 @@ and git merge commit are mentioned.\n - #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n - #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n - #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n+- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n+- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n \n ### GUI\n - #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n@@ -536,6 +541,7 @@ and git merge commit are mentioned.\n - #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n - #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n - #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n+- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n \n ### Wallet\n - #8367 `045106b` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n@@ -575,6 +581,7 @@ and git merge commit are mentioned.\n - #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n - #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n - #9615 `d2c9e4d` Wallet incremental fee (morcos)\n+- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n \n ### Tests and QA\n - #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n@@ -629,6 +636,8 @@ and git merge commit are mentioned.\n - #9707 `b860915` Fix RPC failure testing (jnewbery)\n - #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n - #9269 `43e8150` Align struct COrphan definition (sipa)\n+- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n+- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n \n ### Documentation\n - #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n@@ -713,6 +722,7 @@ and git merge commit are mentioned.\n - #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n - #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n - #8863,#8807 univalue: Pull subtree (MarcoFalke)\n+- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n \n Credits\n =======\n@@ -771,6 +781,7 @@ Thanks to everyone who directly contributed to this release:\n - Justin Camarena\n - Karl-Johan Alm\n - Kaz Wesley\n+- kirit93\n - Koki Takahashi\n - Lauda\n - leijurv"
      }
    ]
  },
  {
    "sha": "95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NWU2OGRmZTM1YmIzNGU0MzdkNTZjMmM5N2NkZmU2ZmMwYTdiMzBi",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-17T20:37:18Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-23T20:45:42Z"
      },
      "message": "release: add a few performance-related notes",
      "tree": {
        "sha": "68e58da7447dc9ea441ceeedc0b71f3239751214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68e58da7447dc9ea441ceeedc0b71f3239751214"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d3f9d2a5991e6e561e323f488cb40a803408b6b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d3f9d2a5991e6e561e323f488cb40a803408b6b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d3f9d2a5991e6e561e323f488cb40a803408b6b"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "700fc1fe66324f196cf0064aa8dcbb4ef2d2a06a",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
        "patch": "@@ -33,6 +33,28 @@ frequently tested on them.\n Notable changes\n ===============\n \n+Performance Improvements\n+--------------\n+\n+Validation speed and network propagation performance have been greatly\n+improved, leading to much shorter sync and initial block download times.\n+\n+- The script signature cache has been reimplemented as a \"cuckoo cache\",\n+  allowing for more signatures to be cached and faster lookups.\n+- Assumed-valid blocks have been introduced which allows script validation to\n+  be skipped for ancestors of known-good blocks, without changing the security\n+  model. See below for more details.\n+- In some cases, compact blocks are now relayed before being fully validated as\n+  per BIP152.\n+- P2P networking has been refactored with a focus on concurrency and\n+  throughput. Network operations are no longer bottlenecked by validation. As a\n+  result, block fetching is several times faster than previous releases in many\n+  cases.\n+- The UTXO cache now claims unused mempool memory. This speeds up initial block\n+  download as UTXO lookups are a major bottleneck there, and there is no use for\n+  the mempool at that stage.\n+\n+\n Manual Pruning\n --------------\n "
      }
    ]
  },
  {
    "sha": "f00429666c60932b233dbee4d3a0618c9c63819f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMDA0Mjk2NjZjNjA5MzJiMjMzZGJlZTRkM2EwNjE4YzljNjM4MTlm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T20:47:26Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-23T20:47:32Z"
      },
      "message": "Merge #9787: release: add a few performance-related notes\n\n95e68df release: add a few performance-related notes (Cory Fields)",
      "tree": {
        "sha": "a258a849e7c892ec6ff5b30f0ba98d0b7d51b77f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a258a849e7c892ec6ff5b30f0ba98d0b7d51b77f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f00429666c60932b233dbee4d3a0618c9c63819f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYr0pkAAoJEHSBCwEjRsmmCuIIAMmuazuWXn9jK/ckMiUDn/bv\no9GR6PAZL+lFeHuOjnbZu9PoOTwHacJwUPvaRE1A8PtGzvRUGGIjanTJTukWz8UG\nPEucYSukF4KAORj477MzhyoRs9pweMuZTf8ocDtclCsMy/1aFpP5I1E65qmWhTiI\nv/RHIwULoBP0b6ttTEz5BxHiwsf8stOOe7vl4f3vlLDDE8Wp16b1WfPyFeSjoMWv\n0XXanlg3uIEr+WS72TSE/cLiYT9+luW3SSXOx2tkKanPlGAa2Q3syYOYPEi1h7uV\nImYKD2PvLWRIidMITdfJiGOI9J35IJbVjC6+a2+Tl03P2AkhrzhXGHSNIDZRyPI=\n=Av13\n-----END PGP SIGNATURE-----",
        "payload": "tree a258a849e7c892ec6ff5b30f0ba98d0b7d51b77f\nparent 3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c\nparent 95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487882846 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487882852 +0100\n\nMerge #9787: release: add a few performance-related notes\n\n95e68df release: add a few performance-related notes (Cory Fields)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00429666c60932b233dbee4d3a0618c9c63819f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f00429666c60932b233dbee4d3a0618c9c63819f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00429666c60932b233dbee4d3a0618c9c63819f/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3b2f7fdcaea36c8c5c93b21030d4e2327d2b6e8c"
      },
      {
        "sha": "95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95e68dfe35bb34e437d56c2c97cdfe6fc0a7b30b"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "33f5ed1f87ef1baa54d472880307d212f428fdee",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f00429666c60932b233dbee4d3a0618c9c63819f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f00429666c60932b233dbee4d3a0618c9c63819f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=f00429666c60932b233dbee4d3a0618c9c63819f",
        "patch": "@@ -33,6 +33,28 @@ frequently tested on them.\n Notable changes\n ===============\n \n+Performance Improvements\n+--------------\n+\n+Validation speed and network propagation performance have been greatly\n+improved, leading to much shorter sync and initial block download times.\n+\n+- The script signature cache has been reimplemented as a \"cuckoo cache\",\n+  allowing for more signatures to be cached and faster lookups.\n+- Assumed-valid blocks have been introduced which allows script validation to\n+  be skipped for ancestors of known-good blocks, without changing the security\n+  model. See below for more details.\n+- In some cases, compact blocks are now relayed before being fully validated as\n+  per BIP152.\n+- P2P networking has been refactored with a focus on concurrency and\n+  throughput. Network operations are no longer bottlenecked by validation. As a\n+  result, block fetching is several times faster than previous releases in many\n+  cases.\n+- The UTXO cache now claims unused mempool memory. This speeds up initial block\n+  download as UTXO lookups are a major bottleneck there, and there is no use for\n+  the mempool at that stage.\n+\n+\n Manual Pruning\n --------------\n "
      }
    ]
  },
  {
    "sha": "fa230fde648937f7d7f704a54d621c2366cfb4c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTIzMGZkZTY0ODkzN2Y3ZDdmNzA0YTU0ZDYyMWMyMzY2Y2ZiNGM0",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-02-24T00:36:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-02-24T00:35:58Z"
      },
      "message": "doc: Small release notes fixups in the list of pulls",
      "tree": {
        "sha": "da65c52d826e84b424a77cc7445b714f4877f978",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da65c52d826e84b424a77cc7445b714f4877f978"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa230fde648937f7d7f704a54d621c2366cfb4c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa230fde648937f7d7f704a54d621c2366cfb4c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa230fde648937f7d7f704a54d621c2366cfb4c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa230fde648937f7d7f704a54d621c2366cfb4c4/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f00429666c60932b233dbee4d3a0618c9c63819f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00429666c60932b233dbee4d3a0618c9c63819f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f00429666c60932b233dbee4d3a0618c9c63819f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "557f8985d062002ef3996cf20c28fe8e6aaba965",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa230fde648937f7d7f704a54d621c2366cfb4c4/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa230fde648937f7d7f704a54d621c2366cfb4c4/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fa230fde648937f7d7f704a54d621c2366cfb4c4",
        "patch": "@@ -359,7 +359,6 @@ and git merge commit are mentioned.\n - #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n - #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n - #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9087 `924de0b` Give more details when \"generate\" fails (jtimon)\n - #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n - #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n - #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n@@ -419,7 +418,7 @@ and git merge commit are mentioned.\n - #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n - #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n - #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction\n+- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n - #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n \n ### P2P protocol and network code\n@@ -566,7 +565,6 @@ and git merge commit are mentioned.\n - #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n \n ### Wallet\n-- #8367 `045106b` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n - #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n - #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n - #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n@@ -577,7 +575,7 @@ and git merge commit are mentioned.\n - #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n - #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n - #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem) (MarcoFalke)\n+- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n - #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n - #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n - #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n@@ -656,7 +654,6 @@ and git merge commit are mentioned.\n - #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n - #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n - #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n - #9269 `43e8150` Align struct COrphan definition (sipa)\n - #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n - #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n@@ -702,6 +699,7 @@ and git merge commit are mentioned.\n - #8274 `7a2d402` util: Update tinyformat (laanwj)\n - #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n - #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n+- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n - #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n - #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n - #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)"
      }
    ]
  },
  {
    "sha": "3584902eae2b4a547b221b98b6bfdbeb128923b7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTg0OTAyZWFlMmI0YTU0N2IyMjFiOThiNmJmZGJlYjEyODkyM2I3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-24T10:02:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-24T10:02:59Z"
      },
      "message": "Merge #9846: doc: Small release notes fixups in the list of pulls\n\nfa230fd doc: Small release notes fixups in the list of pulls (MarcoFalke)",
      "tree": {
        "sha": "da65c52d826e84b424a77cc7445b714f4877f978",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da65c52d826e84b424a77cc7445b714f4877f978"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3584902eae2b4a547b221b98b6bfdbeb128923b7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYsATTAAoJEHSBCwEjRsmmU7QIAJ466R7SKgsJow8Q5IByrF4r\nzA6fZfDkel1ca9LeTL87lWDd+wgmUjDML9EJXzCSOlvp8o1ZScdg0dI7kj6rqlac\njHjB5z5eqxISfWwD/TOGCjefbiFoRIG2E4SK7EGiHFnyNA7uzLnS3UfixkybVll0\nBPjFx0tAr7X4PF3wpAGLhlhu3BSfdK4Q85k+tYXRiW4r/IiW0jXgUl8eAa/pqwnd\nmboiNFruGg/FnRE/O8EREy4i7EpIssG9rmRFrppX3QyzS4wdjxC/oxQPcCI0C8xU\nMhM2IBWxtPtW9IDQZ808daf1BpDWHsNXiPj+6RSfyYIgEPBdPUTw9/dAi9N17QE=\n=Wtjs\n-----END PGP SIGNATURE-----",
        "payload": "tree da65c52d826e84b424a77cc7445b714f4877f978\nparent f00429666c60932b233dbee4d3a0618c9c63819f\nparent fa230fde648937f7d7f704a54d621c2366cfb4c4\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1487930558 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1487930579 +0100\n\nMerge #9846: doc: Small release notes fixups in the list of pulls\n\nfa230fd doc: Small release notes fixups in the list of pulls (MarcoFalke)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3584902eae2b4a547b221b98b6bfdbeb128923b7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3584902eae2b4a547b221b98b6bfdbeb128923b7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3584902eae2b4a547b221b98b6bfdbeb128923b7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f00429666c60932b233dbee4d3a0618c9c63819f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00429666c60932b233dbee4d3a0618c9c63819f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f00429666c60932b233dbee4d3a0618c9c63819f"
      },
      {
        "sha": "fa230fde648937f7d7f704a54d621c2366cfb4c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa230fde648937f7d7f704a54d621c2366cfb4c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa230fde648937f7d7f704a54d621c2366cfb4c4"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 3,
      "deletions": 5
    },
    "files": [
      {
        "sha": "557f8985d062002ef3996cf20c28fe8e6aaba965",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3584902eae2b4a547b221b98b6bfdbeb128923b7/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3584902eae2b4a547b221b98b6bfdbeb128923b7/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3584902eae2b4a547b221b98b6bfdbeb128923b7",
        "patch": "@@ -359,7 +359,6 @@ and git merge commit are mentioned.\n - #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n - #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n - #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9087 `924de0b` Give more details when \"generate\" fails (jtimon)\n - #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n - #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n - #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n@@ -419,7 +418,7 @@ and git merge commit are mentioned.\n - #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n - #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n - #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction\n+- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n - #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n \n ### P2P protocol and network code\n@@ -566,7 +565,6 @@ and git merge commit are mentioned.\n - #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n \n ### Wallet\n-- #8367 `045106b` Ensure <0.13 clients can't open HD wallets (jonasschnelli)\n - #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n - #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n - #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n@@ -577,7 +575,7 @@ and git merge commit are mentioned.\n - #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n - #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n - #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem) (MarcoFalke)\n+- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n - #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n - #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n - #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n@@ -656,7 +654,6 @@ and git merge commit are mentioned.\n - #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n - #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n - #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n - #9269 `43e8150` Align struct COrphan definition (sipa)\n - #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n - #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n@@ -702,6 +699,7 @@ and git merge commit are mentioned.\n - #8274 `7a2d402` util: Update tinyformat (laanwj)\n - #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n - #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n+- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n - #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n - #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n - #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)"
      }
    ]
  },
  {
    "sha": "eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGRhYTZiMzVkNDFhZWZlYWQxYTU3ZWE1NGU3ZTE1Y2UwNjlmNzlh",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-23T18:05:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-27T08:03:57Z"
      },
      "message": "[qa] Make import-rescan.py watchonly check reliable\n\nSend payments during the test from a different node than the node generating\nkeys to be imported, so the spending node doesn't create transactions that\ninadvertently involve (spend funds from) the imported keys.\n\nFixes #9826\n\nGithub-Pull: #9839\nRebased-From: 864890adf5fefcf969f82f70949199b68b36f165",
      "tree": {
        "sha": "67f77930c39d9b6c20870bf13db8f189f3b924d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67f77930c39d9b6c20870bf13db8f189f3b924d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYs91tAAoJEHSBCwEjRsmm3jIH/2R9cmXWoIc+fbDJMZ61IKG+\nxydkB7K88y+uiDVTu7IlHWDGg2pObH9ggdnGyGo6qjxKd3R8mDK3nTGXFas1oyV/\ncSK3cDEntOvDumNh01CTKpzKghQbkOC86Xmfa/MFj+kuCeCP4luRUsYKnovGCCtS\nDwtJZ9ku63q9mSOZW5QcPO+zk7kRtnwvWEGttRBZHsR29DsbnA/je64j0Or6X22o\n/joKyTcyAGjprFmjin+kJEJmHl5mlk7L6ubLR7aj9U9LNw3n7jmEdDMc1YUFqxL5\nzUqFthNAadr7s00MyBX9JcLkv/Q96YdnGZu1WeNxCKsjX/PlZKU6ywfpgZH31+k=\n=Yi23\n-----END PGP SIGNATURE-----",
        "payload": "tree 67f77930c39d9b6c20870bf13db8f189f3b924d7\nparent 3584902eae2b4a547b221b98b6bfdbeb128923b7\nauthor Russell Yanofsky <russ@yanofsky.org> 1487873140 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488182637 +0100\n\n[qa] Make import-rescan.py watchonly check reliable\n\nSend payments during the test from a different node than the node generating\nkeys to be imported, so the spending node doesn't create transactions that\ninadvertently involve (spend funds from) the imported keys.\n\nFixes #9826\n\nGithub-Pull: #9839\nRebased-From: 864890adf5fefcf969f82f70949199b68b36f165\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eddaa6b35d41aefead1a57ea54e7e15ce069f79a/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3584902eae2b4a547b221b98b6bfdbeb128923b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3584902eae2b4a547b221b98b6bfdbeb128923b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3584902eae2b4a547b221b98b6bfdbeb128923b7"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 18,
      "deletions": 12
    },
    "files": [
      {
        "sha": "7f2c321746c88c229c2680c6188e94061c13cb2c",
        "filename": "qa/rpc-tests/import-rescan.py",
        "status": "modified",
        "additions": 18,
        "deletions": 12,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eddaa6b35d41aefead1a57ea54e7e15ce069f79a/qa/rpc-tests/import-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eddaa6b35d41aefead1a57ea54e7e15ce069f79a/qa/rpc-tests/import-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/import-rescan.py?ref=eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
        "patch": "@@ -5,11 +5,11 @@\n \"\"\"Test rescan behavior of importaddress, importpubkey, importprivkey, and\n importmulti RPCs with different types of keys and rescan options.\n \n-In the first part of the test, node 0 creates an address for each type of\n-import RPC call and sends BTC to it. Then other nodes import the addresses,\n-and the test makes listtransactions and getbalance calls to confirm that the\n-importing node either did or did not execute rescans picking up the send\n-transactions.\n+In the first part of the test, node 1 creates an address for each type of\n+import RPC call and node 0 sends BTC to it. Then other nodes import the\n+addresses, and the test makes listtransactions and getbalance calls to confirm\n+that the importing node either did or did not execute rescans picking up the\n+send transactions.\n \n In the second part of the test, node 0 sends more BTC to each address, and the\n test makes more listtransactions and getbalance calls to confirm that the\n@@ -81,6 +81,12 @@ def check(self, txid=None, amount=None, confirmations=None):\n             assert_equal(tx[\"txid\"], txid)\n             assert_equal(tx[\"confirmations\"], confirmations)\n             assert_equal(\"trusted\" not in tx, True)\n+            # Verify the transaction is correctly marked watchonly depending on\n+            # whether the transaction pays to an imported public key or\n+            # imported private key. The test setup ensures that transaction\n+            # inputs will not be from watchonly keys (important because\n+            # involvesWatchonly will be true if either the transaction output\n+            # or inputs are watchonly).\n             if self.data != Data.priv:\n                 assert_equal(tx[\"involvesWatchonly\"], True)\n             else:\n@@ -106,11 +112,11 @@ def check(self, txid=None, amount=None, confirmations=None):\n class ImportRescanTest(BitcoinTestFramework):\n     def __init__(self):\n         super().__init__()\n-        self.num_nodes = 1 + len(IMPORT_NODES)\n+        self.num_nodes = 2 + len(IMPORT_NODES)\n \n     def setup_network(self):\n         extra_args = [[\"-debug=1\"] for _ in range(self.num_nodes)]\n-        for i, import_node in enumerate(IMPORT_NODES, 1):\n+        for i, import_node in enumerate(IMPORT_NODES, 2):\n             if import_node.prune:\n                 extra_args[i] += [\"-prune=1\"]\n \n@@ -123,9 +129,9 @@ def run_test(self):\n         # each possible type of wallet import RPC.\n         for i, variant in enumerate(IMPORT_VARIANTS):\n             variant.label = \"label {} {}\".format(i, variant)\n-            variant.address = self.nodes[0].validateaddress(self.nodes[0].getnewaddress(variant.label))\n-            variant.key = self.nodes[0].dumpprivkey(variant.address[\"address\"])\n-            variant.initial_amount = 25 - (i + 1) / 4.0\n+            variant.address = self.nodes[1].validateaddress(self.nodes[1].getnewaddress(variant.label))\n+            variant.key = self.nodes[1].dumpprivkey(variant.address[\"address\"])\n+            variant.initial_amount = 10 - (i + 1) / 4.0\n             variant.initial_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.initial_amount)\n \n         # Generate a block containing the initial transactions, then another\n@@ -142,7 +148,7 @@ def run_test(self):\n         for variant in IMPORT_VARIANTS:\n             variant.expect_disabled = variant.rescan == Rescan.yes and variant.prune and variant.call == Call.single\n             expect_rescan = variant.rescan == Rescan.yes and not variant.expect_disabled\n-            variant.node = self.nodes[1 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n+            variant.node = self.nodes[2 + IMPORT_NODES.index(ImportNode(variant.prune, expect_rescan))]\n             variant.do_import(timestamp)\n             if expect_rescan:\n                 variant.expected_balance = variant.initial_amount\n@@ -156,7 +162,7 @@ def run_test(self):\n         # Create new transactions sending to each address.\n         fee = self.nodes[0].getnetworkinfo()[\"relayfee\"]\n         for i, variant in enumerate(IMPORT_VARIANTS):\n-            variant.sent_amount = 25 - (2 * i + 1) / 8.0\n+            variant.sent_amount = 10 - (2 * i + 1) / 8.0\n             variant.sent_txid = self.nodes[0].sendtoaddress(variant.address[\"address\"], variant.sent_amount)\n \n         # Generate a block containing the new transactions."
      }
    ]
  },
  {
    "sha": "50ae5c711a35828e91bbf880c9508776703ec51e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MGFlNWM3MTFhMzU4MjhlOTFiYmY4ODBjOTUwODc3NjcwM2VjNTFl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-26T17:15:47Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-27T20:29:06Z"
      },
      "message": "Document increase in memory usage due to mempool/dbcache sharing",
      "tree": {
        "sha": "fcac39bcd8226e2c2542e5d8881dd8818ae3913b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fcac39bcd8226e2c2542e5d8881dd8818ae3913b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50ae5c711a35828e91bbf880c9508776703ec51e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50ae5c711a35828e91bbf880c9508776703ec51e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50ae5c711a35828e91bbf880c9508776703ec51e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50ae5c711a35828e91bbf880c9508776703ec51e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3584902eae2b4a547b221b98b6bfdbeb128923b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3584902eae2b4a547b221b98b6bfdbeb128923b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3584902eae2b4a547b221b98b6bfdbeb128923b7"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1bf9261c8d6519a7f9e5cf06aa729c5441f9fb8b",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50ae5c711a35828e91bbf880c9508776703ec51e/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50ae5c711a35828e91bbf880c9508776703ec51e/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=50ae5c711a35828e91bbf880c9508776703ec51e",
        "patch": "@@ -342,6 +342,16 @@ Fundrawtransaction change address reuse\n - Users should also consider using `getrawchangeaddress()` in conjunction\n   with `fundrawtransaction`'s `changeAddress` option.\n \n+Unused mempool memory used by coincache\n+----------------------------------------\n+\n+- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n+  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n+  (controlled with the `-dbcache` option) borrows memory from the mempool\n+  when there is extra memory available. This may result in an increase in\n+  memory usage during IBD for those previously relying on only the `-dbcache`\n+  option to limit memory during that time.\n+\n 0.14.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "29bae0c6c5a03890e3498f1ee194f5bef5426091",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOWJhZTBjNmM1YTAzODkwZTM0OThmMWVlMTk0ZjViZWY1NDI2MDkx",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-27T16:35:35Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-27T21:12:22Z"
      },
      "message": "Mention bumpfee in 0.14 release notes.",
      "tree": {
        "sha": "581788b338d26729a682268a1833af7edc506e33",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/581788b338d26729a682268a1833af7edc506e33"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29bae0c6c5a03890e3498f1ee194f5bef5426091",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bae0c6c5a03890e3498f1ee194f5bef5426091",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29bae0c6c5a03890e3498f1ee194f5bef5426091",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bae0c6c5a03890e3498f1ee194f5bef5426091/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f00429666c60932b233dbee4d3a0618c9c63819f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f00429666c60932b233dbee4d3a0618c9c63819f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f00429666c60932b233dbee4d3a0618c9c63819f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9c7064d0dcc8aba0fb8f39bdd1e81d4d097f46c8",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29bae0c6c5a03890e3498f1ee194f5bef5426091/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29bae0c6c5a03890e3498f1ee194f5bef5426091/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=29bae0c6c5a03890e3498f1ee194f5bef5426091",
        "patch": "@@ -168,7 +168,8 @@ Opt into RBF When Sending\n \n A new startup option, `-walletrbf`, has been added to allow users to have all\n transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default.\n+currently `false`, so transactions will not opt into RBF by default. The new\n+`bumpfee` RPC can be used to replace transactions that opt into RBF.\n \n Sensitive Data Is No Longer Stored In Debug Console History\n -----------------------------------------------------------\n@@ -247,6 +248,11 @@ Low-level RPC changes\n    optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n    for more information.\n \n+ - A new RPC command `bumpfee` has been added which allows replacing an\n+   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n+   startup option above) with a new transaction that pays a higher fee, and\n+   should be more likely to get confirmed quickly.\n+\n HTTP REST Changes\n -----------------\n "
      }
    ]
  },
  {
    "sha": "50953c2aadca85c8664eac612072b0df98fceee7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDk1M2MyYWFkY2E4NWM4NjY0ZWFjNjEyMDcyYjBkZjk4ZmNlZWU3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-27T12:15:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:40:50Z"
      },
      "message": "tests: Fix dangling pwalletMain pointer in wallet tests\n\nGithub-Pull: #9875\nRebased-From: 75a109338fbbe9a30c54d76010b538c8ac1080ac",
      "tree": {
        "sha": "24ca84f5d42274903dd5dd086fa32ba1307a8c84",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/24ca84f5d42274903dd5dd086fa32ba1307a8c84"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/50953c2aadca85c8664eac612072b0df98fceee7",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVOyAAoJEHSBCwEjRsmm0rUH/1dNgIrZXFuY7NksY4Ve2d+R\n7Ms1uysp66HMVXlcu4N/siyJvVWI/ExAE39qWJRYUcbOGBZ0i9iH84lJppL3LdvX\n4DRWfAB9lgj73HfkAdXinxJyVZfTqSlDT5sW30W6rVTdAoUnLv812w8KuNgCA8f8\ntl/XFpnhigde8mVgSGD2mgVmmVcacloD0C51JI8EV1Q0Z6SIQwmcIowIs9WjbBrb\nj6I8oRmYDvZGRMiQ4FHlkSykHSy7aTKdL+x5HBVH5qKz7HmXZCmvRd72/Gdk37qG\nNvmKmae392T7sdhybVreAvOgofv3kib/PXDceVc2LlWXj7KWeQhrbwTt8YJFIkU=\n=fwvx\n-----END PGP SIGNATURE-----",
        "payload": "tree 24ca84f5d42274903dd5dd086fa32ba1307a8c84\nparent eddaa6b35d41aefead1a57ea54e7e15ce069f79a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488197739 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278450 +0100\n\ntests: Fix dangling pwalletMain pointer in wallet tests\n\nGithub-Pull: #9875\nRebased-From: 75a109338fbbe9a30c54d76010b538c8ac1080ac\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50953c2aadca85c8664eac612072b0df98fceee7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/50953c2aadca85c8664eac612072b0df98fceee7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50953c2aadca85c8664eac612072b0df98fceee7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eddaa6b35d41aefead1a57ea54e7e15ce069f79a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eddaa6b35d41aefead1a57ea54e7e15ce069f79a"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "43d7e3c617d740ed047e2774c02b21872cb09f0b",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/50953c2aadca85c8664eac612072b0df98fceee7/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/50953c2aadca85c8664eac612072b0df98fceee7/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=50953c2aadca85c8664eac612072b0df98fceee7",
        "patch": "@@ -397,6 +397,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n \n     {\n         CWallet wallet;\n+        CWallet *backup = ::pwalletMain;\n         ::pwalletMain = &wallet;\n         UniValue key;\n         key.setObject();\n@@ -412,6 +413,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n \n         UniValue response = importmulti(request);\n         BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}}]\", newTip->GetBlockTimeMax()));\n+        ::pwalletMain = backup;\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "69832aaad53c9236062ad89c28ad5f28b359b448",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTgzMmFhYWQ1M2M5MjM2MDYyYWQ4OWMyOGFkNWYyOGIzNTliNDQ4",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-24T23:20:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:40:50Z"
      },
      "message": "don't throw std::bad_alloc when out of memory. Instead, terminate immediately\n\nGithub-Pull: #9856\nRebased-From: c5f008a4166bae4350881a74fc04a87d7a5c4ed5",
      "tree": {
        "sha": "2f9fa6f36ad07b17fde074bad71310208f62e889",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f9fa6f36ad07b17fde074bad71310208f62e889"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/69832aaad53c9236062ad89c28ad5f28b359b448",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVOyAAoJEHSBCwEjRsmmsb4IAJ99iw3+3IDTxwoFbE2Uyyq+\nFk04UrGuYNs3CmoH65Jhb4dO8cRsj2wXBQoO5gNC8wY9+BiEZMGsNeNSUY2ZY/Zx\niNzYVm9JZidPYTlzfIXq9+GTnFP41yR5xP1j9t5ZUQtH/wuxyIzYMJZLsFwELlLt\njBI6HWXYDTwrV44t2+voj3Wp/O4Yn9kx/9Ib0nLolVTGwHUXxLMfCJ6atnU4dT+L\nnvk4smeUXcDUtMInI37DV2EI2UzRxhjr72GNcl4rL/hWHqPPhjTIEgijJfAOzGbq\nm0SWQVm239ezhHQ+F3Wum14Pws8xxzWlDmD9Z5t1HusWCZeK1kiok72eiGDyr8g=\n=Jglf\n-----END PGP SIGNATURE-----",
        "payload": "tree 2f9fa6f36ad07b17fde074bad71310208f62e889\nparent 50953c2aadca85c8664eac612072b0df98fceee7\nauthor Cory Fields <cory-nospam-@coryfields.com> 1487978403 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278450 +0100\n\ndon't throw std::bad_alloc when out of memory. Instead, terminate immediately\n\nGithub-Pull: #9856\nRebased-From: c5f008a4166bae4350881a74fc04a87d7a5c4ed5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69832aaad53c9236062ad89c28ad5f28b359b448",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/69832aaad53c9236062ad89c28ad5f28b359b448",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69832aaad53c9236062ad89c28ad5f28b359b448/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50953c2aadca85c8664eac612072b0df98fceee7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50953c2aadca85c8664eac612072b0df98fceee7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50953c2aadca85c8664eac612072b0df98fceee7"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5820d8f57c357ec954490c41d5f1a376ebd3ba59",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/69832aaad53c9236062ad89c28ad5f28b359b448/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/69832aaad53c9236062ad89c28ad5f28b359b448/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=69832aaad53c9236062ad89c28ad5f28b359b448",
        "patch": "@@ -801,6 +801,19 @@ ServiceFlags nLocalServices = NODE_NETWORK;\n \n }\n \n+[[noreturn]] static void new_handler_terminate()\n+{\n+    // Rather than throwing std::bad-alloc if allocation fails, terminate\n+    // immediately to (try to) avoid chain corruption.\n+    // Since LogPrintf may itself allocate memory, set the handler directly\n+    // to terminate first.\n+    std::set_new_handler(std::terminate);\n+    LogPrintf(\"Error: Out of memory. Terminating.\\n\");\n+\n+    // The log was successful, terminate now.\n+    std::terminate();\n+};\n+\n bool AppInitBasicSetup()\n {\n     // ********************************************************* Step 1: setup\n@@ -853,6 +866,9 @@ bool AppInitBasicSetup()\n     // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n #endif\n+\n+    std::set_new_handler(new_handler_terminate);\n+\n     return true;\n }\n "
      }
    ]
  },
  {
    "sha": "775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzVjZjU0ZDBlMGFkOTdlMDQzZTQ2ZmQ4ODAxOGVkNmUwYmQyNjg0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-25T06:06:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:40:50Z"
      },
      "message": "prevector: assert successful allocation\n\nGithub-Pull: #9856\nRebased-From: d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4",
      "tree": {
        "sha": "ba6e9f8eac91bc7198bc7485300fb1f4f38cd6da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba6e9f8eac91bc7198bc7485300fb1f4f38cd6da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVOyAAoJEHSBCwEjRsmmU8gIAIDEN+yqWU6ztQRzJg6H1KcE\nQ1eU4vt41msprj0qIBQOSG+JQrjGJWHKjgloTDo75jqOYl8s5yJrZFK9v9RSJ1cP\n0qYnzmX/3fMug/xR4WIyYtb6VOMTKdN33LAx0LyukxUCLxIk+X4Odqe7tdCYCV7a\nkZOPpCAinEblFqbse11lzbNUyWmDlxyJrMnEhH0rQvHv/W93oidoBx+ET78hbbGM\nMa71RM2183CE3FO8WQIQRys9+6imd5p3MabwUjaoEvLGK8LFYfSzuST+1IVHx1z/\nSwTduYPOWUMauMHvnyJcbbJCp9halAlqQrfPJ2khHU+0SWPdvvl3xkQ9Onmrx90=\n=7OJY\n-----END PGP SIGNATURE-----",
        "payload": "tree ba6e9f8eac91bc7198bc7485300fb1f4f38cd6da\nparent 69832aaad53c9236062ad89c28ad5f28b359b448\nauthor Cory Fields <cory-nospam-@coryfields.com> 1488002785 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278450 +0100\n\nprevector: assert successful allocation\n\nGithub-Pull: #9856\nRebased-From: d4ee7baef729da5e18b5e5c3d6ddb5b97df8d4e4\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/775cf54d0e0ad97e043e46fd88018ed6e0bd2684/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69832aaad53c9236062ad89c28ad5f28b359b448",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69832aaad53c9236062ad89c28ad5f28b359b448",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69832aaad53c9236062ad89c28ad5f28b359b448"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cba2e30057afa39c2ea35aeccaadd54202d8b671",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/775cf54d0e0ad97e043e46fd88018ed6e0bd2684/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/775cf54d0e0ad97e043e46fd88018ed6e0bd2684/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef _BITCOIN_PREVECTOR_H_\n #define _BITCOIN_PREVECTOR_H_\n \n+#include <assert.h>\n #include <stdlib.h>\n #include <stdint.h>\n #include <string.h>\n@@ -170,10 +171,15 @@ class prevector {\n             }\n         } else {\n             if (!is_direct()) {\n+                /* FIXME: Because malloc/realloc here won't call new_handler if allocation fails, assert\n+                    success. These should instead use an allocator or new/delete so that handlers\n+                    are called as necessary, but performance would be slightly degraded by doing so. */\n                 _union.indirect = static_cast<char*>(realloc(_union.indirect, ((size_t)sizeof(T)) * new_capacity));\n+                assert(_union.indirect);\n                 _union.capacity = new_capacity;\n             } else {\n                 char* new_indirect = static_cast<char*>(malloc(((size_t)sizeof(T)) * new_capacity));\n+                assert(new_indirect);\n                 T* src = direct_ptr(0);\n                 T* dst = reinterpret_cast<T*>(new_indirect);\n                 memcpy(dst, src, size() * sizeof(T));"
      }
    ]
  },
  {
    "sha": "5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YWFhYzRkMDllN2VmMjgxN2JlOTIyYjk2NjFiYjVlMTVlMDdlNmE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:41:19Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:41:24Z"
      },
      "message": "Merge #9878: Mention bumpfee in 0.14 release notes.\n\n29bae0c Mention bumpfee in 0.14 release notes. (Russell Yanofsky)\n\nTree-SHA512: f16cdac3effbc6c4d69da2205931c782c272937c93c97bf22b49193fc905dd55a24d5e42568c7c7d8108b0b23f81f415655f9ebdf1f6ba04ef0ab3b125e8dcce",
      "tree": {
        "sha": "67c49b7b6fa218106543dff6efda0a022568e517",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67c49b7b6fa218106543dff6efda0a022568e517"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVPUAAoJEHSBCwEjRsmmtC8H+QHGST+r/wb2EmvV1JTZ/87N\n1KzMX1ZRKYWSg7doiyBsCfUf0UU6ujC9Ljj1MKQdeAsZcRVZ7SywuHaFhosJK8v7\n6T7851lx7w6r8+c7GfivK6VIMTcGT1l/vFivCO2sAONFCPbXREiIqGpeQjkQAXSH\n+q2ZkRmDwAjRzKFQI/hwR4DR6KJYBQRj6EKsL9n7khaLcqfYTC0tTpkdwwXquGIB\n+FrfkTR7WB+TjWjoASAShSmCTwnRgcC1iyCu2FKshrxUDHBeaRZagm3Iyok1MWvE\n306ykAzaTV3fAu5sEKEyuUJ1oeDVzGLvBjs5zrnPD7Tx4nzE07z1fKh88+txiHY=\n=3h8C\n-----END PGP SIGNATURE-----",
        "payload": "tree 67c49b7b6fa218106543dff6efda0a022568e517\nparent 775cf54d0e0ad97e043e46fd88018ed6e0bd2684\nparent 29bae0c6c5a03890e3498f1ee194f5bef5426091\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488278479 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278484 +0100\n\nMerge #9878: Mention bumpfee in 0.14 release notes.\n\n29bae0c Mention bumpfee in 0.14 release notes. (Russell Yanofsky)\n\nTree-SHA512: f16cdac3effbc6c4d69da2205931c782c272937c93c97bf22b49193fc905dd55a24d5e42568c7c7d8108b0b23f81f415655f9ebdf1f6ba04ef0ab3b125e8dcce\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/775cf54d0e0ad97e043e46fd88018ed6e0bd2684",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/775cf54d0e0ad97e043e46fd88018ed6e0bd2684"
      },
      {
        "sha": "29bae0c6c5a03890e3498f1ee194f5bef5426091",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29bae0c6c5a03890e3498f1ee194f5bef5426091",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29bae0c6c5a03890e3498f1ee194f5bef5426091"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "0f2ed893fa7da46ce810bebb8c0922efd9a99fb3",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
        "patch": "@@ -168,7 +168,8 @@ Opt into RBF When Sending\n \n A new startup option, `-walletrbf`, has been added to allow users to have all\n transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default.\n+currently `false`, so transactions will not opt into RBF by default. The new\n+`bumpfee` RPC can be used to replace transactions that opt into RBF.\n \n Sensitive Data Is No Longer Stored In Debug Console History\n -----------------------------------------------------------\n@@ -247,6 +248,11 @@ Low-level RPC changes\n    optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n    for more information.\n \n+ - A new RPC command `bumpfee` has been added which allows replacing an\n+   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n+   startup option above) with a new transaction that pays a higher fee, and\n+   should be more likely to get confirmed quickly.\n+\n HTTP REST Changes\n -----------------\n "
      }
    ]
  },
  {
    "sha": "08e0690f3f3b2f33040916200e8d4444298cf226",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOGUwNjkwZjNmM2IyZjMzMDQwOTE2MjAwZThkNDQ0NDI5OGNmMjI2",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-23T18:44:12Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:41:58Z"
      },
      "message": "Update sendfrom RPC help to correct coin selection misconception\n\nGithub-Pull: #9840\nRebased-From: f81f0d003079b96b8c33d3dfe76f90e50344bcd8",
      "tree": {
        "sha": "5e6dc09c71c9b7e6b6b842565ad4ef53befdd556",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5e6dc09c71c9b7e6b6b842565ad4ef53befdd556"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/08e0690f3f3b2f33040916200e8d4444298cf226",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVP2AAoJEHSBCwEjRsmmwSwH/2tsDmI+wTUIjj1q7urp/gYL\nUhPKCPLtyHcVhDbUnXHQgo8tdtXPAsf1Meh8A5lMBDdNWwD+yi5cO4kLF5ALWWQ8\nsbYDv/WA0eP3xVGBgpAPV8dKxq+5HKM713/VcTykheWKGZpnKLCw05E2QFUByMo6\ngomTr3iWdnPDLbyKXxSL6rVZ22u9ZStxxoX5gjzlTEpg77k3RUSg2MK/WQOZ+x4o\nSyrpIn7qqjy7AnOjgPuO8Do6A+DHEuw2O4k2+XLM7q2YJbok0v9GmahdtGX7FuL5\nieoD7VPJFY9R0M3p7oMIoL5UviwCglrfQlt63GPTG/FDZ8e0n4Lc7WY2DhGn1l8=\n=ZCzy\n-----END PGP SIGNATURE-----",
        "payload": "tree 5e6dc09c71c9b7e6b6b842565ad4ef53befdd556\nparent 5aaac4d09e7ef2817be922b9661bb5e15e07e6a9\nauthor Russell Yanofsky <russ@yanofsky.org> 1487875452 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278518 +0100\n\nUpdate sendfrom RPC help to correct coin selection misconception\n\nGithub-Pull: #9840\nRebased-From: f81f0d003079b96b8c33d3dfe76f90e50344bcd8\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e0690f3f3b2f33040916200e8d4444298cf226",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/08e0690f3f3b2f33040916200e8d4444298cf226",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e0690f3f3b2f33040916200e8d4444298cf226/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5aaac4d09e7ef2817be922b9661bb5e15e07e6a9"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "510b2d6ebcdd40193407d00c063dbb9ff74d7f99",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/08e0690f3f3b2f33040916200e8d4444298cf226/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/08e0690f3f3b2f33040916200e8d4444298cf226/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=08e0690f3f3b2f33040916200e8d4444298cf226",
        "patch": "@@ -819,6 +819,9 @@ UniValue sendfrom(const JSONRPCRequest& request)\n             + HelpRequiringPassphrase() + \"\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"fromaccount\\\"       (string, required) The name of the account to send funds from. May be the default account using \\\"\\\".\\n\"\n+            \"                       Specifying an account does not influence coin selection, but it does associate the newly created\\n\"\n+            \"                       transaction with the account, so the account's balance computation and transaction history can reflect\\n\"\n+            \"                       the spend.\\n\"\n             \"2. \\\"toaddress\\\"         (string, required) The bitcoin address to send funds to.\\n\"\n             \"3. amount                (numeric or string, required) The amount in \" + CURRENCY_UNIT + \" (transaction fee is added on top).\\n\"\n             \"4. minconf               (numeric, optional, default=1) Only use funds with at least this many confirmations.\\n\""
      }
    ]
  },
  {
    "sha": "a48b998ff377a827357732b8868b0de10768129d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDhiOTk4ZmYzNzdhODI3MzU3NzMyYjg4NjhiMGRlMTA3NjgxMjlk",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-02-27T17:14:14Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:44:23Z"
      },
      "message": "[doc] Update doc/bips.md for BIP90 implementation\n\nGithub-Pull: #9879\nRebased-From: fe71661ae16abe09dcf245ee2eb4c55c5655b219",
      "tree": {
        "sha": "a9a862ae354c49339e0ca1c9e4789e9b6456f2f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9a862ae354c49339e0ca1c9e4789e9b6456f2f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a48b998ff377a827357732b8868b0de10768129d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVSHAAoJEHSBCwEjRsmmfU0H/0vdKPn5QTMv4Nz5k+TYhdHz\nnqgZxfJQ0UVq9ytf2M1XqcWwfYMPz4BV7Wdxmdve2xMjgMS7KyDOX3RpN4lrnteV\nZjjYEezeWAKj9fNK3SE7TO0yIq6phOLL/QmyLa+q/NuyzkRffhUwDyxHh4VepuMn\nLnp2wPclqXbwAJFhC2LdH88/KL4Dez3hxhHu7HUMC5XVD8k2yG9T++1q7d310lgt\nHVKoMikCI24eIu9EsWHhFqFJ0u7M18sJnpBxBn4CnE7hfDVqAPHWb1dhWI6DyWlt\nrOlekk1uOCrn0xKqOcMI3UGpqFJbyfxpxQwBL6hC2dqKcLMQwy3xdvtGcqfCcTk=\n=GYAg\n-----END PGP SIGNATURE-----",
        "payload": "tree a9a862ae354c49339e0ca1c9e4789e9b6456f2f4\nparent 08e0690f3f3b2f33040916200e8d4444298cf226\nauthor Suhas Daftuar <sdaftuar@gmail.com> 1488215654 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278663 +0100\n\n[doc] Update doc/bips.md for BIP90 implementation\n\nGithub-Pull: #9879\nRebased-From: fe71661ae16abe09dcf245ee2eb4c55c5655b219\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48b998ff377a827357732b8868b0de10768129d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a48b998ff377a827357732b8868b0de10768129d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48b998ff377a827357732b8868b0de10768129d/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08e0690f3f3b2f33040916200e8d4444298cf226",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08e0690f3f3b2f33040916200e8d4444298cf226",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08e0690f3f3b2f33040916200e8d4444298cf226"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bc8dcb6fb3c33cbd1d9fda2535de703c9765fdab",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a48b998ff377a827357732b8868b0de10768129d/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a48b998ff377a827357732b8868b0de10768129d/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=a48b998ff377a827357732b8868b0de10768129d",
        "patch": "@@ -20,6 +20,7 @@ BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n * [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n * [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n * [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n+* [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n * [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n * [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n * [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*."
      }
    ]
  },
  {
    "sha": "1f83663bc2c83ce9cc267b359047cebff9acc4b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZjgzNjYzYmMyYzgzY2U5Y2MyNjdiMzU5MDQ3Y2ViZmY5YWNjNGIw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:47:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T10:47:25Z"
      },
      "message": "Merge #9866: Document increase in memory usage due to mempool/dbcache sharing\n\n50ae5c7 Document increase in memory usage due to mempool/dbcache sharing (Matt Corallo)\n\nTree-SHA512: e52a310a5ac1f94b30f367a7bf514b2cf0724530102953eef7f7c7e00a067db568b5e1b51129dfdb1a237e016c7a8b01cc6da8c06a24ab5b970c43d045adb204",
      "tree": {
        "sha": "c30645c4a4eab1dfe58be719bb06938662665cb0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c30645c4a4eab1dfe58be719bb06938662665cb0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1f83663bc2c83ce9cc267b359047cebff9acc4b0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVU9AAoJEHSBCwEjRsmmx6IH/3Ny1Mfi9G+pL6iz9pzEuYGC\nHTZloz9YPLUVPkhOg1PiJQgGYjVLIkYyIOo0AbEfZZYiNboF8nqtUf6jNf4g7pwn\nDlQosexSJKhJSmRPBu9+1vGEleNhgW3sGfjpRnVqSLKYAxk1ggKOF+YI7ZRS8aDV\nwAMm94wRxqM0GnCWJEdVgd/tQyrZyQOW4djPkOUeeGS+g6bEZinrswWNSh8hbzox\nyNXW7ePHEI/j3/uEG90e5kBBrAWhr5yGd8i8eIy0B04xsZ9iJ1pnkJ9N6aUHqbKz\noLJtFA/toK5W15F8B/UimF8uM7GZrfCzB9w862XJH0/tBCzgePPYzuOS3lqS800=\n=gQ0m\n-----END PGP SIGNATURE-----",
        "payload": "tree c30645c4a4eab1dfe58be719bb06938662665cb0\nparent a48b998ff377a827357732b8868b0de10768129d\nparent 50ae5c711a35828e91bbf880c9508776703ec51e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488278838 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488278845 +0100\n\nMerge #9866: Document increase in memory usage due to mempool/dbcache sharing\n\n50ae5c7 Document increase in memory usage due to mempool/dbcache sharing (Matt Corallo)\n\nTree-SHA512: e52a310a5ac1f94b30f367a7bf514b2cf0724530102953eef7f7c7e00a067db568b5e1b51129dfdb1a237e016c7a8b01cc6da8c06a24ab5b970c43d045adb204\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f83663bc2c83ce9cc267b359047cebff9acc4b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1f83663bc2c83ce9cc267b359047cebff9acc4b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f83663bc2c83ce9cc267b359047cebff9acc4b0/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a48b998ff377a827357732b8868b0de10768129d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a48b998ff377a827357732b8868b0de10768129d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a48b998ff377a827357732b8868b0de10768129d"
      },
      {
        "sha": "50ae5c711a35828e91bbf880c9508776703ec51e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50ae5c711a35828e91bbf880c9508776703ec51e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50ae5c711a35828e91bbf880c9508776703ec51e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "9d3c3e34feeb03e8ff2e2037c3090b06cfbdb857",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1f83663bc2c83ce9cc267b359047cebff9acc4b0/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1f83663bc2c83ce9cc267b359047cebff9acc4b0/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=1f83663bc2c83ce9cc267b359047cebff9acc4b0",
        "patch": "@@ -348,6 +348,16 @@ Fundrawtransaction change address reuse\n - Users should also consider using `getrawchangeaddress()` in conjunction\n   with `fundrawtransaction`'s `changeAddress` option.\n \n+Unused mempool memory used by coincache\n+----------------------------------------\n+\n+- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n+  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n+  (controlled with the `-dbcache` option) borrows memory from the mempool\n+  when there is extra memory available. This may result in an increase in\n+  memory usage during IBD for those previously relying on only the `-dbcache`\n+  option to limit memory during that time.\n+\n 0.14.0 Change log\n =================\n "
      }
    ]
  },
  {
    "sha": "289204fbe0c188b3cd145dd7b2e271f97a956ba3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyODkyMDRmYmUwYzE4OGIzY2QxNDVkZDdiMmUyNzFmOTdhOTU2YmEz",
    "commit": {
      "author": {
        "name": "Marijn Stollenga",
        "email": "m.stollenga@gmail.com",
        "date": "2017-02-26T13:01:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T11:01:06Z"
      },
      "message": "Change bitcoin address in RPC helpaddress to an invalid address, so people don't accidentally send coins there (like I did).\n\nGithub-Pull: #9865\nRebased-From: 83ac719d34f98cc1d3efa6ece2b95145bcde8775",
      "tree": {
        "sha": "89670212e2e5b4c21e8ae16fbf7aa30600ad7dc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/89670212e2e5b4c21e8ae16fbf7aa30600ad7dc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/289204fbe0c188b3cd145dd7b2e271f97a956ba3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtVhyAAoJEHSBCwEjRsmmuxkH/1AWzDofyOp6aLkpzMK8LdoM\nS541L7fuBO8jfuVaLenf6p+MzzrInBGpOMpbhwGeKvI+sXMCYPGFbiEgbe3K578V\nQDYYYlC3eE8VsvpfP9TnzPM8tXIGkR/eqJEvFrzJz6aWbG5pp8WPfK3UZnLp79tk\nZtoeMhRx81aoTx4E5gU0CQDKuXEGAekx3OKMyf2F6ZD9OM8hc1RT8aPf95439fU1\ncXzfO78etkVekLIr5NSFeljZ8kOZG8ZK/QMXeyPpORuRUZt0eh65KvGD8hd5R/5x\nkEz9eqJQVSBfIKCxs5mV0/tZNY7JVPTukAGB5YVAN0euNHdHj6XmckIBPwysw1I=\n=L3nV\n-----END PGP SIGNATURE-----",
        "payload": "tree 89670212e2e5b4c21e8ae16fbf7aa30600ad7dc0\nparent 1f83663bc2c83ce9cc267b359047cebff9acc4b0\nauthor Marijn Stollenga <m.stollenga@gmail.com> 1488114065 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488279666 +0100\n\nChange bitcoin address in RPC helpaddress to an invalid address, so people don't accidentally send coins there (like I did).\n\nGithub-Pull: #9865\nRebased-From: 83ac719d34f98cc1d3efa6ece2b95145bcde8775\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/289204fbe0c188b3cd145dd7b2e271f97a956ba3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/289204fbe0c188b3cd145dd7b2e271f97a956ba3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/289204fbe0c188b3cd145dd7b2e271f97a956ba3/comments",
    "author": {
      "login": "marijnfs",
      "id": 898011,
      "node_id": "MDQ6VXNlcjg5ODAxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/898011?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marijnfs",
      "html_url": "https://github.com/marijnfs",
      "followers_url": "https://api.github.com/users/marijnfs/followers",
      "following_url": "https://api.github.com/users/marijnfs/following{/other_user}",
      "gists_url": "https://api.github.com/users/marijnfs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marijnfs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marijnfs/subscriptions",
      "organizations_url": "https://api.github.com/users/marijnfs/orgs",
      "repos_url": "https://api.github.com/users/marijnfs/repos",
      "events_url": "https://api.github.com/users/marijnfs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marijnfs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1f83663bc2c83ce9cc267b359047cebff9acc4b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1f83663bc2c83ce9cc267b359047cebff9acc4b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1f83663bc2c83ce9cc267b359047cebff9acc4b0"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 19,
      "deletions": 19
    },
    "files": [
      {
        "sha": "0bcc2a97cc38871e2f5484d54d6b7520ac72bc28",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/289204fbe0c188b3cd145dd7b2e271f97a956ba3/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/289204fbe0c188b3cd145dd7b2e271f97a956ba3/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=289204fbe0c188b3cd145dd7b2e271f97a956ba3",
        "patch": "@@ -347,11 +347,11 @@ UniValue verifymessage(const JSONRPCRequest& request)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n     LOCK(cs_main);\n@@ -400,7 +400,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n             \"\\nCreate the signature\\n\"\n             + HelpExampleCli(\"signmessagewithprivkey\", \"\\\"privkey\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n             + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n         );"
      },
      {
        "sha": "5cf1592376f5af0354f55542e84a6e2d35c5b488",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/289204fbe0c188b3cd145dd7b2e271f97a956ba3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/289204fbe0c188b3cd145dd7b2e271f97a956ba3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=289204fbe0c188b3cd145dd7b2e271f97a956ba3",
        "patch": "@@ -236,8 +236,8 @@ UniValue setaccount(const JSONRPCRequest& request)\n             \"1. \\\"address\\\"         (string, required) The bitcoin address to be associated with an account.\\n\"\n             \"2. \\\"account\\\"         (string, required) The account to assign the address to.\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"tabby\\\"\")\n-            + HelpExampleRpc(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n+            + HelpExampleCli(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"tabby\\\"\")\n+            + HelpExampleRpc(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"tabby\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -283,8 +283,8 @@ UniValue getaccount(const JSONRPCRequest& request)\n             \"\\nResult:\\n\"\n             \"\\\"accountname\\\"        (string) the account address\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n-            + HelpExampleRpc(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n+            + HelpExampleCli(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\")\n+            + HelpExampleRpc(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -503,11 +503,11 @@ UniValue signmessage(const JSONRPCRequest& request)\n             \"\\nUnlock the wallet for 30 seconds\\n\"\n             + HelpExampleCli(\"walletpassphrase\", \"\\\"mypassphrase\\\" 30\") +\n             \"\\nCreate the signature\\n\"\n-            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"my message\\\"\") +\n             \"\\nVerify the signature\\n\"\n-            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" \\\"signature\\\" \\\"my message\\\"\") +\n+            + HelpExampleCli(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" \\\"signature\\\" \\\"my message\\\"\") +\n             \"\\nAs json rpc\\n\"\n-            + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"my message\\\"\")\n+            + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", \\\"my message\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -556,13 +556,13 @@ UniValue getreceivedbyaddress(const JSONRPCRequest& request)\n             \"amount   (numeric) The total amount in \" + CURRENCY_UNIT + \" received at this address.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nThe amount from transactions with at least 1 confirmation\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\"\") +\n             \"\\nThe amount including unconfirmed transactions, zero confirmations\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" 0\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" 0\") +\n             \"\\nThe amount with at least 6 confirmation, very safe\\n\"\n-            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\" 6\") +\n+            + HelpExampleCli(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\" 6\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", 6\")\n+            + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\", 6\")\n        );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);\n@@ -906,13 +906,13 @@ UniValue sendmany(const JSONRPCRequest& request)\n             \"                                    the number of addresses.\\n\"\n             \"\\nExamples:\\n\"\n             \"\\nSend two amounts to two different addresses:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\"\") +\n             \"\\nSend two amounts to two different addresses setting the confirmation and comment:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 6 \\\"testing\\\"\") +\n             \"\\nSend two amounts to two different addresses, subtract fee from amount:\\n\"\n-            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"[\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\",\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\"]\\\"\") +\n+            + HelpExampleCli(\"sendmany\", \"\\\"\\\" \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\" 1 \\\"\\\" \\\"[\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\",\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\"]\\\"\") +\n             \"\\nAs a json rpc call\\n\"\n-            + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n+            + HelpExampleRpc(\"sendmany\", \"\\\"\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XX\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n     LOCK2(cs_main, pwalletMain->cs_wallet);"
      }
    ]
  },
  {
    "sha": "1825a03f8144572eaf532b6b3b3acc1a09577d1f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxODI1YTAzZjgxNDQ1NzJlYWY1MzJiNmIzYjNhY2MxYTA5NTc3ZDFm",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-02-17T23:28:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T11:48:19Z"
      },
      "message": "Avoid VLA in hash.h\n\nGithub-Pull: #9791\nRebased-From: 5c8fd508112016c3821b71112270afe83e6949ac",
      "tree": {
        "sha": "292fbd5c361e44406110e0d044083fa6ef73137c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/292fbd5c361e44406110e0d044083fa6ef73137c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1825a03f8144572eaf532b6b3b3acc1a09577d1f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtWODAAoJEHSBCwEjRsmmXnoH/RtO8kxajjufVJS6DWxiiSTJ\nvJBYT+5uwNp7KDgvMrah75YsM2sZ/5kPQMFFc7RuAeBtGWg/87QICaLgzvhql7Eu\nmyAKtPG10NzcGrRU4yey/DR8VaQXM7FUn20IJukALU4wTEfbLkyxaExpCH5fhrs3\nR7Y13p00PjWOPqQ6Dn2/lkRGkV6CAr9mo1k9ON3lx6F5JmpQwg/WCTQ0CCFpQV0V\nDc+Xm5ybFXrxPgWSYCzxzjbBZKZuZudgc3J61eoTCbbfJbKau3TG0W6dO9yTL8eD\nnMuQ96YhJzT6hi9TtJdfnysy3s7rqmE3/p+NqFWpoB2hcdVElZxXeO4nDCTckAs=\n=L6QD\n-----END PGP SIGNATURE-----",
        "payload": "tree 292fbd5c361e44406110e0d044083fa6ef73137c\nparent 289204fbe0c188b3cd145dd7b2e271f97a956ba3\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1487374108 -0800\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488282499 +0100\n\nAvoid VLA in hash.h\n\nGithub-Pull: #9791\nRebased-From: 5c8fd508112016c3821b71112270afe83e6949ac\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1825a03f8144572eaf532b6b3b3acc1a09577d1f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1825a03f8144572eaf532b6b3b3acc1a09577d1f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1825a03f8144572eaf532b6b3b3acc1a09577d1f/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "289204fbe0c188b3cd145dd7b2e271f97a956ba3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/289204fbe0c188b3cd145dd7b2e271f97a956ba3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/289204fbe0c188b3cd145dd7b2e271f97a956ba3"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "eacb8f04fef378ab80a1b1df15689525e5d45895",
        "filename": "src/hash.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1825a03f8144572eaf532b6b3b3acc1a09577d1f/src/hash.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1825a03f8144572eaf532b6b3b3acc1a09577d1f/src/hash.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.h?ref=1825a03f8144572eaf532b6b3b3acc1a09577d1f",
        "patch": "@@ -25,9 +25,9 @@ class CHash256 {\n     static const size_t OUTPUT_SIZE = CSHA256::OUTPUT_SIZE;\n \n     void Finalize(unsigned char hash[OUTPUT_SIZE]) {\n-        unsigned char buf[sha.OUTPUT_SIZE];\n+        unsigned char buf[CSHA256::OUTPUT_SIZE];\n         sha.Finalize(buf);\n-        sha.Reset().Write(buf, sha.OUTPUT_SIZE).Finalize(hash);\n+        sha.Reset().Write(buf, CSHA256::OUTPUT_SIZE).Finalize(hash);\n     }\n \n     CHash256& Write(const unsigned char *data, size_t len) {\n@@ -49,9 +49,9 @@ class CHash160 {\n     static const size_t OUTPUT_SIZE = CRIPEMD160::OUTPUT_SIZE;\n \n     void Finalize(unsigned char hash[OUTPUT_SIZE]) {\n-        unsigned char buf[sha.OUTPUT_SIZE];\n+        unsigned char buf[CSHA256::OUTPUT_SIZE];\n         sha.Finalize(buf);\n-        CRIPEMD160().Write(buf, sha.OUTPUT_SIZE).Finalize(hash);\n+        CRIPEMD160().Write(buf, CSHA256::OUTPUT_SIZE).Finalize(hash);\n     }\n \n     CHash160& Write(const unsigned char *data, size_t len) {"
      }
    ]
  },
  {
    "sha": "8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDJkMDhlZmFhNWZiNmIyOTYzOGZlZjdmYjliZGYwNTFkYjg1ZjJl",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T11:48:40Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T11:49:29Z"
      },
      "message": "qt: pre-rc3 translations update",
      "tree": {
        "sha": "473cf93873ab6d2803264fa7791148c11c4fa177",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/473cf93873ab6d2803264fa7791148c11c4fa177"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtWPKAAoJEHSBCwEjRsmmjt0IALts1ZlsljbBDda5FrLgJA8E\n99QuRA9Kk5+gr1VSbeF5WB1habcNJfTjo8qyLpqwR3mz1Ax1l8MHvRY4FQPjd793\nW9NqZkBU7dl75/uB0ax0Ls3McFimUz1I1/O9c63Dm/n60wgOqCGq4m7rCTU7Ftti\niYHmjdl+IoPapG/rkDpbWK+IVhn5G1XNhD8BtHlzYM7ClRqffPPI0ceWzTE1wvfx\nOCggFkJeWhAmKFGjv1ucF9PQ+7+2bEoEHG7n32KQq++3nxaaH6I8QihaQENT+ZyZ\nyA0PelrPBTsrUFbmnK5RAVUQ1g2hl/x5I9Nt269XZ/l1PblN6WUrWXOizSiUmFs=\n=GvRJ\n-----END PGP SIGNATURE-----",
        "payload": "tree 473cf93873ab6d2803264fa7791148c11c4fa177\nparent 1825a03f8144572eaf532b6b3b3acc1a09577d1f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488282520 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488282569 +0100\n\nqt: pre-rc3 translations update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1825a03f8144572eaf532b6b3b3acc1a09577d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1825a03f8144572eaf532b6b3b3acc1a09577d1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1825a03f8144572eaf532b6b3b3acc1a09577d1f"
      }
    ],
    "stats": {
      "total": 690,
      "additions": 679,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6e220ea9605db063f5242a4e403107673dda837e",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 48,
        "deletions": 0,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
        "patch": "@@ -485,6 +485,10 @@\n         <source>%1 client</source>\n         <translation>%1 cliente</translation>\n     </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>Conectando a pares...</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>Actualizando...</translation>\n@@ -2473,6 +2477,10 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2517,6 +2525,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, no ha sido emitido con \u00e9xito a\u00fan</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, transmitir a trav\u00e9s de %n nodo</numerusform><numerusform>, transmitir a trav\u00e9s de %n nodos</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Fecha</translation>\n@@ -2557,6 +2569,10 @@\n         <source>Credit</source>\n         <translation>Credito</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>disponible en %n bloque m\u00e1s</numerusform><numerusform>disponible en %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>no aceptada</translation>\n@@ -2593,6 +2609,10 @@\n         <source>Transaction ID</source>\n         <translation>Identificador de transacci\u00f3n (ID)</translation>\n     </message>\n+    <message>\n+        <source>Transaction total size</source>\n+        <translation>Tama\u00f1o total de transacci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>Output index</source>\n         <translation>Indice de salida</translation>\n@@ -2655,6 +2675,10 @@\n         <source>Label</source>\n         <translation>Etiqueta</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2987,6 +3011,18 @@\n         <translation>Aceptar comandos consola y JSON-RPC\n </translation>\n     </message>\n+    <message>\n+        <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n+        <translation>Aceptar conexiones desde el exterior (predeterminado: 1 si no -proxy o -connect/-desconectar)</translation>\n+    </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Conectar s\u00f3lo al nodo(s) especificado; -no conectar or -conectar=solo 0 para deshabilitar conexiones autom\u00e1ticas</translation>\n+    </message>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n+        <translation>Distribuido bajo la licencia de software MIT, vea el archivo adjunto %s o %s</translation>\n+    </message>\n     <message>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation>Si &lt;category&gt; no es proporcionado o si &lt;category&gt; =1, muestra toda la informaci\u00f3n de depuraci\u00f3n.</translation>\n@@ -3064,6 +3100,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Transacciones extra a mantener en la memoria para reconstrucciones de bloque compacto (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Si este bloque est\u00e1 en la cadena asuma que sus predecesores y \u00e9l son v\u00e1lidos y potencialmente se saltan su script de verificaci\u00f3n (0 para verificar todo, predeterminado: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>Ajuste m\u00e1ximo permitido del tiempo offset medio de pares. La perspectiva local de tiempo se ver\u00e1 influenciada por los pares anteriores y posteriores a esta cantidad. (Por defecto: %u segundos)</translation>\n@@ -3679,6 +3723,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Direcci\u00f3n -proxy inv\u00e1lida: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Keypool se ha agotado, llame a keypoolrefill primero</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escuchar conexiones JSON-RPC en &lt;puerto&gt; (predeterminado: %u o testnet: %u)</translation>"
      },
      {
        "sha": "1bc26d55d66805759a55a2b0551893c2496b5274",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 631,
        "deletions": 11,
        "changes": 642,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
        "patch": "@@ -41,9 +41,61 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Zmaza\u0165</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Zvo\u013ete adresu kam posla\u0165 mince</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Zvo\u013ete adresu na ktor\u00fa chcete prija\u0165 mince</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Odosielaj\u00face adresy</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Prij\u00edmaj\u00face adresy</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Toto s\u00fa Va\u0161e Bitcoin adresy pre posielanie platieb. V\u017edy skontrolujte sumu a prij\u00edmaciu adresu pred poslan\u00edm minc\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Toto s\u00fa va\u0161e Bitcoin adresy pre prij\u00edmanie platieb. Odpor\u00fa\u010da sa pou\u017ei\u0165 v\u017edy nov\u00fa prij\u00edmaciu adresu pre ka\u017ed\u00fa transakciu.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kop\u00edrova\u0165 &amp;popis</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Upravi\u0165</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Exportova\u0165 zoznam adries</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Nastala chyba pri pokuse ulo\u017ei\u0165 zoznam adries do %1. Sk\u00faste znovu.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n@@ -67,6 +119,38 @@\n         <source>Repeat new passphrase</source>\n         <translation>Zopakujte nov\u00e9 heslo</translation>\n     </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Za\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>Odomkn\u00fa\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>De\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Zmena hesla</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>Potvr\u010fte za\u0161ifrovanie pe\u0148a\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Ste si ist\u00ed, \u017ee si \u017eel\u00e1te za\u0161ifrova\u0165 pe\u0148a\u017eenku?</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Pe\u0148a\u017eenka za\u0161ifrovan\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Odomykanie pe\u0148a\u017eenky zlyhalo</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -438,6 +522,26 @@\n         <source>Confirmed</source>\n         <translation>Potvrden\u00e9</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kop\u00edrova\u0165 prach</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n+        <translation>Tento popis s\u010dervenie ak ktor\u00fdko\u013evek pr\u00edjemca dostane sumu men\u0161iu ako s\u00fa\u010dasn\u00fd limit pre \"prach\".</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n@@ -465,6 +569,30 @@\n         <source>&amp;Address</source>\n         <translation>&amp;Adresa</translation>\n     </message>\n+    <message>\n+        <source>New receiving address</source>\n+        <translation>Nov\u00e1 adresa pre prij\u00edmanie</translation>\n+    </message>\n+    <message>\n+        <source>New sending address</source>\n+        <translation>Nov\u00e1 adresa pre odoslanie</translation>\n+    </message>\n+    <message>\n+        <source>Edit receiving address</source>\n+        <translation>Upravi\u0165 prij\u00edmaj\u00facu adresu</translation>\n+    </message>\n+    <message>\n+        <source>Edit sending address</source>\n+        <translation>Upravi\u0165 odosielaciu adresu</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n+        <translation>Vlo\u017een\u00e1 adresa \"%1\" nieje platnou adresou Bitcoin.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is already in the address book.</source>\n+        <translation>Vlo\u017een\u00e1 adresa \"%1\" sa u\u017e nach\u00e1dza v adres\u00e1ri.</translation>\n+    </message>\n     </context>\n <context>\n     <name>FreespaceChecker</name>\n@@ -597,6 +725,10 @@\n         <source>Last block time</source>\n         <translation>\u010cas posledn\u00e9ho bloku</translation>\n     </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Odhadovan\u00fd \u010das do ukon\u010denia synchroniz\u00e1cie</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Skry\u0165</translation>\n@@ -620,7 +752,11 @@\n         <source>Select payment request file</source>\n         <translation>Vyberte s\u00fabor s v\u00fdzvou k platbe</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Select payment request file to open</source>\n+        <translation>Vyberte ktor\u00fd s\u00fabor s v\u00fdzvou na platbu otvori\u0165</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -933,7 +1069,71 @@\n </context>\n <context>\n     <name>PaymentServer</name>\n-    </context>\n+    <message>\n+        <source>Payment request error</source>\n+        <translation>Chyba pri vy\u017eiadan\u00ed platby</translation>\n+    </message>\n+    <message>\n+        <source>Payment request fetch URL is invalid: %1</source>\n+        <translation>URL pre stiahnutie v\u00fdzvy na zaplatenie je neplatn\u00e9: %1</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment address %1</source>\n+        <translation>Neplatn\u00e1 adresa platby %1</translation>\n+    </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI sa ned\u00e1 analyzova\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 neplatnou Bitcoin adresou alebo zle nastaven\u00fdmi vlastnos\u0165ami URI.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file handling</source>\n+        <translation>Obsluha s\u00faboru s po\u017eiadavkou na platbu</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>S\u00fabor s v\u00fdzvou na zaplatenie sa ned\u00e1 \u010d\u00edta\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 aj neplatn\u00fdm s\u00faborom s v\u00fdzvou.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>Po\u017eiadavka na platbu zamietnut\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>Sie\u0165 po\u017eiadavky na platbu nie je zhodn\u00e1 so sie\u0165ou klienta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request is not initialized.</source>\n+        <translation>Po\u017eiadavka na platbu nie je inicializovan\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation>Program nepodporuje neoveren\u00e9 platobn\u00e9 po\u017eiadavky na vlastn\u00e9 skripty.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Chybn\u00e1 po\u017eiadavka na platbu.</translation>\n+    </message>\n+    <message>\n+        <source>Requested payment amount of %1 is too small (considered dust).</source>\n+        <translation>Po\u017eadovan\u00e1 suma platby %1 je pr\u00edli\u0161 n\u00edzka (pova\u017eovan\u00e1 za prach).</translation>\n+    </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>Po\u017eiadavka na platbu %1 je pr\u00edli\u0161 ve\u013ek\u00e1 (%2 bajtov, povolen\u00e9 je %3 bajtov).</translation>\n+    </message>\n+    <message>\n+        <source>Payment request cannot be parsed!</source>\n+        <translation>Po\u017eiadavka na platbu nem\u00f4\u017ee by\u0165 analyzovan\u00e1!</translation>\n+    </message>\n+    <message>\n+        <source>Payment acknowledged</source>\n+        <translation>Platba potvrden\u00e1</translation>\n+    </message>\n+</context>\n <context>\n     <name>PeerTableModel</name>\n     <message>\n@@ -983,10 +1183,18 @@\n         <source>%1 ms</source>\n         <translation>%1 ms</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n t\u00fd\u017ede\u0148</numerusform><numerusform>%n t\u00fd\u017edne</numerusform><numerusform>%n t\u00fd\u017ed\u0148ov</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation> %1 a  %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n rok</numerusform><numerusform>%n roky</numerusform><numerusform>%n rokov</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n@@ -1022,7 +1230,7 @@\n     </message>\n     <message>\n         <source>Datadir</source>\n-        <translation>Zlo\u017eka  s d\u00e1tami</translation>\n+        <translation>Prie\u010dinok s d\u00e1tami</translation>\n     </message>\n     <message>\n         <source>Startup time</source>\n@@ -1225,6 +1433,10 @@\n         <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n         <translation>Nap\u00ed\u0161 &lt;b&gt;help&lt;/b&gt; pre preh\u013ead dostupn\u00fdch pr\u00edkazov.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.</source>\n+        <translation>VAROVANIE: Podvodn\u00edci s\u00fa akt\u00edvni a m\u00f4\u017eu nab\u00e1da\u0165 pou\u017e\u00edvate\u013eov nap\u00edsa\u0165 sem pr\u00edkazy, pomocou ktor\u00fdch ukradn\u00fa ich obsah pe\u0148a\u017eenky. Nepou\u017e\u00edvajte t\u00fato konzolu ak nerozumiete presne \u00fa\u010dinkom pr\u00edkazov.</translation>\n+    </message>\n     <message>\n         <source>%1 B</source>\n         <translation>%1 B</translation>\n@@ -1344,7 +1556,19 @@\n         <source>Remove</source>\n         <translation>Odstr\u00e1ni\u0165</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>Kop\u00edrova\u0165 spr\u00e1vu</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1363,14 +1587,66 @@\n         <source>&amp;Save Image...</source>\n         <translation>Ulo\u017ei\u0165 obr\u00e1zok...</translation>\n     </message>\n+    <message>\n+        <source>Request payment to %1</source>\n+        <translation>Vy\u017eiada\u0165 platbu pre %1</translation>\n+    </message>\n+    <message>\n+        <source>Payment information</source>\n+        <translation>Inform\u00e1cia o platbe</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Suma</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Resulting URI too long, try to reduce the text for label / message.</source>\n+        <translation>V\u00fdsledn\u00e9 URI je pr\u00edli\u0161 dlh\u00e9, sk\u00faste skr\u00e1ti\u0165 text pre popis alebo spr\u00e1vu.</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(\u017eiadna spr\u00e1va)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount requested)</source>\n+        <translation>(nepo\u017eadovan\u00e1 \u017eiadna suma)</translation>\n+    </message>\n+    <message>\n+        <source>Requested</source>\n+        <translation>Po\u017eadovan\u00e9</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n@@ -1497,6 +1773,10 @@\n         <source>Dust:</source>\n         <translation>Prach:</translation>\n     </message>\n+    <message>\n+        <source>Confirmation time target:</source>\n+        <translation>Cie\u013eov\u00fd \u010das potvrdenia:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>&amp;Zmaza\u0165 v\u0161etko</translation>\n@@ -1513,10 +1793,62 @@\n         <source>S&amp;end</source>\n         <translation>&amp;Odosla\u0165</translation>\n     </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kop\u00edrova\u0165 prach</translation>\n+    </message>\n+    <message>\n+        <source>Total Amount %1</source>\n+        <translation>Celkov\u00e1 suma %1</translation>\n+    </message>\n     <message>\n         <source>or</source>\n         <translation>alebo</translation>\n     </message>\n+    <message>\n+        <source>Confirm send coins</source>\n+        <translation>Potvr\u010fte odoslanie minc\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Adresa pr\u00edjemcu je neplatn\u00e1. Pros\u00edm, overte ju.</translation>\n+    </message>\n+    <message>\n+        <source>The amount to pay must be larger than 0.</source>\n+        <translation>Suma na \u00fahradu mus\u00ed by\u0165 v\u00e4\u010d\u0161ia ako 0.</translation>\n+    </message>\n+    <message>\n+        <source>The amount exceeds your balance.</source>\n+        <translation>Suma je vy\u0161\u0161ia ako V\u00e1\u0161 zostatok.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Na\u0161la sa duplicitn\u00e1 adresa: ka\u017ed\u00e1 adresa by sa mala pou\u017ei\u0165 len raz.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n bloku.</numerusform><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n blokoch.</numerusform><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n blokoch.</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Varovanie: Neplatn\u00e1 Bitcoin adresa</translation>\n+    </message>\n+    <message>\n+        <source>Confirm custom change address</source>\n+        <translation>Potvr\u010fte zmenu adresy</translation>\n+    </message>\n+    <message>\n+        <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n+        <translation>Zadan\u00e1 adresa nie je s\u00fa\u010das\u0165ou tejto pe\u0148a\u017eenky. \u010cas\u0165 alebo v\u0161etky peniaze z pe\u0148a\u017eenky m\u00f4\u017eu by\u0165 odoslan\u00e9 na t\u00fato adresu. Ste si ist\u00fd?</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n@@ -1600,7 +1932,11 @@\n         <source>Memo:</source>\n         <translation>Pozn\u00e1mka:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Enter a label for this address to add it to your address book</source>\n+        <translation>Zadajte popis pre t\u00fato adresu pre pridanie do adres\u00e1ra</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendConfirmationDialog</name>\n     </context>\n@@ -1625,6 +1961,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Podp\u00edsa\u0165 Spr\u00e1vu</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>M\u00f4\u017eete podp\u00edsa\u0165 spr\u00e1vy svojou adresou a dok\u00e1za\u0165, \u017ee viete prij\u00edma\u0165 mince zaslan\u00e9 na t\u00fato adresu. Bu\u010fte v\u0161ak opatrn\u00ed a podp\u00ed\u0161te len podrobn\u00e9 prehl\u00e1senia, s ktor\u00fdmi plne s\u00fahlas\u00edte, nako\u013eko \u00fatoky typu \"phishing\" V\u00e1s m\u00f4\u017eu l\u00e1ka\u0165 k podp\u00edsaniu nejasn\u00fdch alebo pr\u00edli\u0161 v\u0161eobecn\u00fdch tvrden\u00ed \u010d\u00edm prevezm\u00fa va\u0161u identitu.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>Bitcoin adresa pre podp\u00edsanie spr\u00e1vy s</translation>\n@@ -1677,6 +2017,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>O&amp;veri\u0165 spr\u00e1vu...</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Vlo\u017ete adresu pr\u00edjemcu, spr\u00e1vu (uistite sa, \u017ee presne kop\u00edrujete ukon\u010denia riadkov, medzery, odr\u00e1\u017eky, at\u010f.) a podpis pre potvrdenie spr\u00e1vy. Bu\u010fte opatrn\u00ed a nedom\u00fd\u0161\u013eajte si viac ne\u017e je uveden\u00e9 v samotnej podp\u00edsanej spr\u00e1ve a m\u00f4\u017eete sa tak vyhn\u00fa\u0165 podvodu MITM \u00fatokom. Toto len potvrdzuje, \u017ee podpisuj\u00faca strana m\u00f4\u017ee prij\u00edma\u0165 na tejto adrese, nepotvrdzuje to vlastn\u00edctvo \u017eiadnej transakcie!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Adresa Bitcoin, ktorou bola podp\u00edsan\u00e1 spr\u00e1va</translation>\n@@ -1693,7 +2037,55 @@\n         <source>Reset all verify message fields</source>\n         <translation>Obnovi\u0165 v\u0161etky polia v overi\u0165 spr\u00e1vu</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Click \"Sign Message\" to generate signature</source>\n+        <translation>Kliknite \"Podp\u00edsa\u0165 spr\u00e1vu\" pre vytvorenie podpisu</translation>\n+    </message>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>Zadan\u00e1 adresa je neplatn\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the address and try again.</source>\n+        <translation>Pros\u00edm skontrolujte adresu a sk\u00faste znova.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address does not refer to a key.</source>\n+        <translation>Vlo\u017een\u00e1 adresa nezodpoved\u00e1 \u017eiadnemu k\u013e\u00fa\u010du.</translation>\n+    </message>\n+    <message>\n+        <source>Private key for the entered address is not available.</source>\n+        <translation>S\u00fakromn\u00fd k\u013e\u00fa\u010d pre zadan\u00fa adresu nieje k dispoz\u00edcii.</translation>\n+    </message>\n+    <message>\n+        <source>Message signing failed.</source>\n+        <translation>Podp\u00edsanie spr\u00e1vy zlyhalo.</translation>\n+    </message>\n+    <message>\n+        <source>Message signed.</source>\n+        <translation>Spr\u00e1va podp\u00edsan\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>The signature could not be decoded.</source>\n+        <translation>Podpis nie je mo\u017en\u00e9 dek\u00f3dova\u0165.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>Pros\u00edm skontrolujte podpis a sk\u00faste znova.</translation>\n+    </message>\n+    <message>\n+        <source>The signature did not match the message digest.</source>\n+        <translation>Podpis sa nezhoduje so zhrnut\u00edm spr\u00e1vy.</translation>\n+    </message>\n+    <message>\n+        <source>Message verification failed.</source>\n+        <translation>Overenie spr\u00e1vy zlyhalo.</translation>\n+    </message>\n+    <message>\n+        <source>Message verified.</source>\n+        <translation>Spr\u00e1va overen\u00e1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SplashScreen</name>\n     <message>\n@@ -1710,6 +2102,54 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>conflicted with a transaction with %1 confirmations</source>\n+        <translation>koliduje s transakciou s %1 potvrdeniami</translation>\n+    </message>\n+    <message>\n+        <source>0/unconfirmed, %1</source>\n+        <translation>0/nepotvrden\u00e9, %1</translation>\n+    </message>\n+    <message>\n+        <source>%1/unconfirmed</source>\n+        <translation>%1/nepotvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>%1 confirmations</source>\n+        <translation>%1 potvrden\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>vlastn\u00e1 adresa</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>popis</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Kredit</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Celkov\u00fd kredit</translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Suma netto</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Suma</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n@@ -1720,13 +2160,181 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>Nepotvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Confirming (%1 of %2 recommended confirmations)</source>\n+        <translation>Potvrdzujem (%1 z %2 odpor\u00fa\u010dan\u00fdch potvrden\u00ed)</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Potvrden\u00e9 (%1 potvrden\u00ed)</translation>\n+    </message>\n+    <message>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation>Nezrel\u00e9 (%1 potvrden\u00ed, bude dostupn\u00e9 po %2)</translation>\n+    </message>\n+    <message>\n+        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n+        <translation>Ten blok nebol prijat\u00fd \u017eiadnym in\u00fdm uzlom a pravdepodobne nebude akceptovan\u00fd!</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Prijat\u00e9 s</translation>\n+    </message>\n+    <message>\n+        <source>Received from</source>\n+        <translation>Prijat\u00e9 od</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odoslan\u00e9 na</translation>\n+    </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Platba sebe sam\u00e9mu</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n+        <translation>Stav transakcie. Prejdite ponad toto pole pre zobrazenie po\u010dtu potvrden\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>Date and time that the transaction was received.</source>\n+        <translation>D\u00e1tum a \u010das prijatia transakcie.</translation>\n+    </message>\n+    <message>\n+        <source>Type of transaction.</source>\n+        <translation>Typ transakcie.</translation>\n+    </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>\u010ci je v tejto transakcii adresy iba na sledovanie.</translation>\n+    </message>\n+    <message>\n+        <source>Amount removed from or added to balance.</source>\n+        <translation>Suma pridan\u00e1 alebo odobran\u00e1 k zostatku.</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>V\u0161etky</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Dnes</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Tento t\u00fd\u017ede\u0148</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Tento mesiac</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Minul\u00fd mesiac</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Tento rok</translation>\n+    </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Rozsah...</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Prijat\u00e9 s</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odoslan\u00e9 na</translation>\n+    </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>Ku mne</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>In\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Zadajte adresu alebo popis pre h\u013eadanie</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Minim\u00e1lna suma</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>Upravi\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Potvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Rozsah:</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n@@ -1796,12 +2404,16 @@\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Jadro Bitcoin</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>The %s developers</source>\n         <translation>V\u00fdvoj\u00e1ri %s</translation>\n     </message>\n+    <message>\n+        <source>Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)</source>\n+        <translation>Akceptova\u0165 post\u00fapen\u00e9 transakcie od povolen\u00fdch partnerov aj ke\u010f norm\u00e1lne nepostupujete transakcie (predvolen\u00e9: %d)</translation>\n+    </message>\n     <message>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Spoji\u0165 s danou adresou a v\u017edy na nej po\u010d\u00fava\u0165. Pou\u017eite z\u00e1pis [host]:port pre IPv6</translation>\n@@ -1964,7 +2576,7 @@\n     </message>\n     <message>\n         <source>Location of the auth cookie (default: data dir)</source>\n-        <translation>Poloha overovacieho cookie s\u00faboru (predvolen\u00e1: zlo\u017eka s d\u00e1tami)</translation>\n+        <translation>Umiestnenie overovacieho cookie s\u00faboru (predvolen\u00e1: Prie\u010dinok s d\u00e1tami)</translation>\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n@@ -2298,6 +2910,10 @@\n         <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varovanie: Pe\u0148a\u017eenka po\u0161koden\u00e1, d\u00e1ta boli zachr\u00e1nen\u00e9! Origin\u00e1lna %s ako %s v %s; ak v\u00e1\u0161 zostatok alebo transakcie s\u00fa nespr\u00e1vne, mali by ste obnovi\u0165 z\u00e1lohu.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n+        <translation>Povoli\u0165 partnerov prip\u00e1jaj\u00facich sa z danej IP adresy (napr. 1.2.3.4) alebo zo siete vo form\u00e1te CIDR (napr. 1.2.3.0/24). M\u00f4\u017ee by\u0165 zadan\u00e9 viackr\u00e1t.</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predvolen\u00e9: %s)</translation>\n@@ -2378,6 +2994,10 @@\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Hranica pre odp\u00e1janie zle sa spr\u00e1vaj\u00facim partnersk\u00fdm uzlom (predvolen\u00e9: %u)</translation>\n     </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Sumy transakci\u00ed nesm\u00fa by\u0165 z\u00e1porn\u00e9</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Nezn\u00e1ma sie\u0165 upresnen\u00e1 v -onlynet: '%s'</translation>"
      }
    ]
  },
  {
    "sha": "58800e3556aefbc002b9554b3af5167655fd7943",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODgwMGUzNTU2YWVmYmMwMDJiOTU1NGIzYWY1MTY3NjU1ZmQ3OTQz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T12:43:04Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T12:43:20Z"
      },
      "message": "doc: pre-rc3 changelog update",
      "tree": {
        "sha": "04d72a4f910cdd5ea93e3c04756822c1fb1dc467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04d72a4f910cdd5ea93e3c04756822c1fb1dc467"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/58800e3556aefbc002b9554b3af5167655fd7943",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtXBpAAoJEHSBCwEjRsmmWz8IALFk35SMAO2bb551L890sTSH\nxo0F/s74irx5lsuQqb2+6fkrZYYa9RLuQv/zWEX0JaAy99JWQNk8aqDiyAg26ZP+\nhxt0pPZ0LRbjlPbGNSApCy3PkOx6YoEs02Ca7DfJbNU0NOJQ+9vP3IJQKeuHrpxN\nxGdLOiVDc7nEa0hQVPQ/nsMERos83kF53p29D3pcSiVAIHwtvIU0/Sm9hyJNedvN\n2e+DJ+xmHz6RYNCsLm0tuUVu2Cwk7SdWLA/E99DN1zEu8+eDVKW62cHz+tzGgcs4\nNAQ2eFnPDy+Ohr6pFaq68pHMwN98TQUjFwXOLQEocLBBGuy8OBCwMt/asmETjyI=\n=vb/m\n-----END PGP SIGNATURE-----",
        "payload": "tree 04d72a4f910cdd5ea93e3c04756822c1fb1dc467\nparent 8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488285784 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488285800 +0100\n\ndoc: pre-rc3 changelog update\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58800e3556aefbc002b9554b3af5167655fd7943",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/58800e3556aefbc002b9554b3af5167655fd7943",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58800e3556aefbc002b9554b3af5167655fd7943/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8d2d08efaa5fb6b29638fef7fb9bdf051db85f2e"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "37e79958e88d0deb6660ae4853c6446615ae9293",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/58800e3556aefbc002b9554b3af5167655fd7943/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/58800e3556aefbc002b9554b3af5167655fd7943/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=58800e3556aefbc002b9554b3af5167655fd7943",
        "patch": "@@ -497,6 +497,7 @@ and git merge commit are mentioned.\n - #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n - #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n - #8524 `19b0f33` Precompute sighashes (sipa)\n+- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n \n ### Build system\n - #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n@@ -673,6 +674,8 @@ and git merge commit are mentioned.\n - #9269 `43e8150` Align struct COrphan definition (sipa)\n - #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n - #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n+- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n+- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n \n ### Documentation\n - #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n@@ -710,6 +713,8 @@ and git merge commit are mentioned.\n - #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n - #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n - #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n+- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n+- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n \n ### Miscellaneous\n - #8274 `7a2d402` util: Update tinyformat (laanwj)\n@@ -759,6 +764,7 @@ and git merge commit are mentioned.\n - #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n - #8863,#8807 univalue: Pull subtree (MarcoFalke)\n - #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n+- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n \n Credits\n =======\n@@ -825,6 +831,7 @@ Thanks to everyone who directly contributed to this release:\n - Luke Dashjr\n - maiiz\n - MarcoFalke\n+- Marijn Stollenga\n - Marty Jones\n - Masahiko Hyuga\n - Matt Corallo"
      }
    ]
  },
  {
    "sha": "ad24256a65aa4281831e14097a29ac1efe8b5c02",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDI0MjU2YTY1YWE0MjgxODMxZTE0MDk3YTI5YWMxZWZlOGI1YzAy",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-02-22T19:11:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T12:53:28Z"
      },
      "message": "Fix importmulti returning rescan errors for wrong keys\n\nBug was a missing ++i line in a new range for loop added in commit e2e2f4c\n\"Return errors from importmulti if complete rescans are not successful\"\n\nGithub-Pull: #9829\nRebased-From: 306bd72157f089b962b9c537bbacf710a4158647",
      "tree": {
        "sha": "7d3144673f3919e1a6fe8cb114991eb803c3b679",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d3144673f3919e1a6fe8cb114991eb803c3b679"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad24256a65aa4281831e14097a29ac1efe8b5c02",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtXLIAAoJEHSBCwEjRsmmNoAH/3xgmqYmiSXKkMo/iGVIOqMF\nrIrAZRXhJ7Eht2E6kXtZAJX8IO1ym3ufUqY7OgJKanCF/yJEUdRibV+bQoPze4ot\nLO6L9v4wkUTjkbw438tMu9KqmMwc4SmtewSUOhu9WWlJVjndsbAaJRcsp1z+Ff33\nNO3kR3UoOsxpY4IV+ocZoU7SRLrMHACeE3xNwPXD98AFMaDqgulTwYEQ1qbBPiJj\nXvAg3JucVCGVun2EaJiE+vaZjDTyzz12NyZc0/Cp/DBicI8isM4L06JASz6TyVOo\nldbGPPNCHnkQiCgmAs4w9oS5her+R7JbHVyja+PGW9UO7iUpsJZ7vR2onqeeal8=\n=tIMw\n-----END PGP SIGNATURE-----",
        "payload": "tree 7d3144673f3919e1a6fe8cb114991eb803c3b679\nparent 58800e3556aefbc002b9554b3af5167655fd7943\nauthor Russell Yanofsky <russ@yanofsky.org> 1487790704 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488286408 +0100\n\nFix importmulti returning rescan errors for wrong keys\n\nBug was a missing ++i line in a new range for loop added in commit e2e2f4c\n\"Return errors from importmulti if complete rescans are not successful\"\n\nGithub-Pull: #9829\nRebased-From: 306bd72157f089b962b9c537bbacf710a4158647\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad24256a65aa4281831e14097a29ac1efe8b5c02",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad24256a65aa4281831e14097a29ac1efe8b5c02",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad24256a65aa4281831e14097a29ac1efe8b5c02/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "58800e3556aefbc002b9554b3af5167655fd7943",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/58800e3556aefbc002b9554b3af5167655fd7943",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/58800e3556aefbc002b9554b3af5167655fd7943"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 15,
      "deletions": 3
    },
    "files": [
      {
        "sha": "20a3cbda1e78bcc0646082ba9d1c3001fca77c4e",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad24256a65aa4281831e14097a29ac1efe8b5c02/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad24256a65aa4281831e14097a29ac1efe8b5c02/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ad24256a65aa4281831e14097a29ac1efe8b5c02",
        "patch": "@@ -1098,6 +1098,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                     result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n                     response.push_back(std::move(result));\n                 }\n+                ++i;\n             }\n         }\n     }"
      },
      {
        "sha": "7ac2112dd29e707a4d723c37aea61224b2860265",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 3,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad24256a65aa4281831e14097a29ac1efe8b5c02/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad24256a65aa4281831e14097a29ac1efe8b5c02/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=ad24256a65aa4281831e14097a29ac1efe8b5c02",
        "patch": "@@ -395,24 +395,35 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n         BOOST_CHECK_EQUAL(wallet.GetImmatureBalance(), 50 * COIN);\n     }\n \n+    // Verify importmulti RPC returns failure for a key whose creation time is\n+    // before the missing block, and success for a key whose creation time is\n+    // after.\n     {\n         CWallet wallet;\n         CWallet *backup = ::pwalletMain;\n         ::pwalletMain = &wallet;\n+        UniValue keys;\n+        keys.setArray();\n         UniValue key;\n         key.setObject();\n         key.pushKV(\"scriptPubKey\", HexStr(GetScriptForRawPubKey(coinbaseKey.GetPubKey())));\n         key.pushKV(\"timestamp\", 0);\n         key.pushKV(\"internal\", UniValue(true));\n-        UniValue keys;\n-        keys.setArray();\n+        keys.push_back(key);\n+        key.clear();\n+        key.setObject();\n+        CKey futureKey;\n+        futureKey.MakeNewKey(true);\n+        key.pushKV(\"scriptPubKey\", HexStr(GetScriptForRawPubKey(futureKey.GetPubKey())));\n+        key.pushKV(\"timestamp\", newTip->GetBlockTimeMax() + 7200);\n+        key.pushKV(\"internal\", UniValue(true));\n         keys.push_back(key);\n         JSONRPCRequest request;\n         request.params.setArray();\n         request.params.push_back(keys);\n \n         UniValue response = importmulti(request);\n-        BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}}]\", newTip->GetBlockTimeMax()));\n+        BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}},{\\\"success\\\":true}]\", newTip->GetBlockTimeMax()));\n         ::pwalletMain = backup;\n     }\n }"
      }
    ]
  },
  {
    "sha": "5e709122343e1a336ee8ee21b003a298a65813f3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTcwOTEyMjM0M2UxYTMzNmVlOGVlMjFiMDAzYTI5OGE2NTgxM2Yz",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-02-28T01:23:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-02-28T15:45:01Z"
      },
      "message": "Add Pieter's old signed commits to revsig-commits\n\nGithub-Pull: #9884\nRebased-From: a4b02f4275c3f35492bbdde27e9295497b919a52",
      "tree": {
        "sha": "11cdab02b631f48702cfffeb5bf31d5bfd8979c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11cdab02b631f48702cfffeb5bf31d5bfd8979c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e709122343e1a336ee8ee21b003a298a65813f3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtZr9AAoJEHSBCwEjRsmmxzIIALacLsEKXehO/wITD/IjejJh\nXdI7jbwrvavyZIZT6P9q/393xoAQiM0kplL8lYx4KcFkVLTu3VFvxZfUIB785rqw\nh+ElD5kilcdgn6Y+xCGGif81ncKLhMXRYVyDFxqs1f3xc2TSiPdnLewf8LyiizB3\nxTwwKTfmLbDlQPlNOOviJoOGZnT499ZbBGiuCOX3QXqzrl6QD46E24+fQwLxE2hv\nSzgIJJcSAgh8fuXB3rNlQ05ZIapZnn2vqEotFUMgJjumCMLC7DvfUPEgw95b9QR8\nMj3KeXmoUbn0pThkRaBgdmB8tjTvHcjmQg1wXgDF47fGLzVtePFJ1Ayjk7rXHXQ=\n=0Y9k\n-----END PGP SIGNATURE-----",
        "payload": "tree 11cdab02b631f48702cfffeb5bf31d5bfd8979c4\nparent ad24256a65aa4281831e14097a29ac1efe8b5c02\nauthor Matt Corallo <git@bluematt.me> 1488245003 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488296701 +0100\n\nAdd Pieter's old signed commits to revsig-commits\n\nGithub-Pull: #9884\nRebased-From: a4b02f4275c3f35492bbdde27e9295497b919a52\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e709122343e1a336ee8ee21b003a298a65813f3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e709122343e1a336ee8ee21b003a298a65813f3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e709122343e1a336ee8ee21b003a298a65813f3/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad24256a65aa4281831e14097a29ac1efe8b5c02",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad24256a65aa4281831e14097a29ac1efe8b5c02",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad24256a65aa4281831e14097a29ac1efe8b5c02"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 104,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f0088cdca4af8e96c9c53ba6d68e6a8ea44df181",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "modified",
        "additions": 104,
        "deletions": 0,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e709122343e1a336ee8ee21b003a298a65813f3/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e709122343e1a336ee8ee21b003a298a65813f3/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=5e709122343e1a336ee8ee21b003a298a65813f3",
        "patch": "@@ -0,0 +1,104 @@\n+a06ede9a138d0fb86b0de17c42b936d9fe6e2158\n+923dc447eaa8e017985b2afbbb12dd1283fbea0e\n+71148b8947fe8b4d756822420a7f31c380159425\n+6696b4635ceb9b47aaa63244bff9032fa7b08354\n+812714fd80e96e28cd288c553c83838cecbfc2d9\n+8a445c5651edb9a1f51497055b7ddf4402be9188\n+e126d0c12ca66278d9e7b12187c5ff4fc02a7e6c\n+3908fc4728059719bed0e1c7b1c8b388c2d4a8da\n+8b66bf74e2a349e71eaa183af81fa63eaee76ad2\n+05950427d310654774031764a7141a1a4fd9c6e4\n+07fd147b9f12e9205afd66a624edce357977d615\n+12e31127948fa4bb01c3bddc1b8c85b432f7465b\n+8c87f175d335e9d9e93f987d871ae9f05f6a10a7\n+46b249e578e8a3dfbe85bc7253a12e82ef4b658b\n+a55716abe5662ec74c2f8af93023f1e7cca901fc\n+f646275b90b1de93bc62b4c4d045d75ac0b96eee\n+c252685aa5867631e9a5ef07ccae7c7c25cae8ff\n+a7d55c93385359952d85decd5037843ac70ba3d4\n+7dac1e5e9e887f5f6ff146e812a05bd3bf281eae\n+2a524b8e8fe69ef487fd8ea1b4f7a03f473ed201\n+ce5c1f4acae43477989cdf9a82ed33703919cda2\n+2db4cbcc437f51f5dac82cc4de46f383b92e6f11\n+7aa700424cbda387536373d8dfec88aee43f950e\n+b99a093afed880f23fb279c443cc6ae5e379cc43\n+b83264d9c7a8ddb79f64bd9540caddc8632ef31f\n+57e337d40e94ba33d8cd265c134d6ef857b32b59\n+a1dcf2e1087beaf3981739fd2bb74f35ecad630a\n+d38b0d7a6b6056cba26999b702815775e2437d87\n+815640ec6af9a38d6a2da4a4400056e2f4105080\n+09c4fd157c5b88df2d97fad4826c79b094db90c9\n+2efcfa5acfacb958973d9e8125e1d81f102e2dfd\n+dc6dee41f7cf2ba93fcd0fea7c157e4b2775d439\n+ad826b3df9f763b49f1e3e3d50c4efdd438c7547\n+c1a52276848d8caa9a9789dff176408c1aa6b1ed\n+3bf06e9bac57b5b5a746677b75e297a7b154bdbd\n+72ae6f8cf0224370e8121d6769b21e612ca15d6f\n+a143b88dbd4971ecfdd1d39a494489c8f2db0344\n+76fec09d878d6dbf214bdb6228d480bd9195db4c\n+93566e0c37c5ae104095474fea89f00dcb40f551\n+407d9232ef5cb1ebf6cff21f3d13e07ea4158eeb\n+9346f8429957e356d21c665bab59fe45bcf1f74e\n+6eeac6e30d65f9a972067c1ea8c49978c8e631ac\n+dc6b9406bdfab2af8c86cb080cb3e6cf8f2385d8\n+9f554e03ebe5701c1b75ff03b3d6152095c0cad3\n+05009935f9ac070197113954d680bc2c9150b9b3\n+508404de98a8a5435f52916cef8f328e82651961\n+ed0cc50afed146c27f6d8129c683c225fb940093\n+6429cfa8a70308241c576aeb92ffe3db5203b2ef\n+6898213409811b140843c3d89af43328c3b22fad\n+5b2ea29cf4fd298346437bb16a54407f8c1f9dca\n+e2a1a1ee895149c544d4ae295466611f0cec3094\n+e82fb872ff5cc8fd22d43327c1ee3e755f61c562\n+19b0f33de0efd9da788e8e4f3fdc2a9e159abdb1\n+89de1538ce1f8c00f80e8d11f43e1b77e24d7dea\n+de07fdcf77e97b8613091285e4d0a734f5de7492\n+01680195f8aa586c55c44767397380def3a23b54\n+05e1c85fb687c82ae477c72d4a7e2d6b0c692167\n+c072b8fd95cd4fa84f08189a0cd8b173ea2dbb8e\n+9a0ed08b40b15ae2b791aa8549b53e69934b4ea7\n+53f8f226bd1d627c4a6dec5862a1d4ea5a933e45\n+9d0f43b7ca7241d8a018fd35dd3bc01555235ec6\n+f12d2b5a8ac397e4bcaefcc19898f8ff5705dea5\n+8250de13587ed05ca45df3e12c5dc9bcb1500e2c\n+d727f77e390426e9e463336bda08d50c451c7086\n+484312bda2d43e3ea60047be076332299463adf8\n+c7e05b35ab0a791c7a8e2d863e716fdec6f3f671\n+b9c1cd81848da9de1baf9c2f29c19c50e549de13\n+8ea7d31e384975019733b5778feabbd9955c79d8\n+f798b891bcecea9548eedacae70eeb9906c1ddbf\n+ebefe7a00b46579cdd1e033a8c7fd8ce9aa578e4\n+ad087638ee4864d6244ec9381ff764bfa6ee5086\n+66db2d62d59817320c9182fc18e75a93b76828ea\n+7ce9ac5c83b1844a518ef2e12e87aae3cacdfe58\n+4286f43025149cf44207c3ad98e4a1f068520ada\n+cd0c5135ab2291aaa5410ac919bad3fc87249a4a\n+66ed450d771a8fc01c159a8402648ebd1c35eb4c\n+a82f03393a32842d49236e8666ee57805ca701f8\n+f972b04d63eb8af79ff3cec1dc561ed13dfa6053\n+ec45cc5e27668171b55271b0c735194c70e7da41\n+715e9fd7454f7a48d7adba7d42f662c20a3e3367\n+2e0a99037dcc35bc63ba0d54371bc678af737c8e\n+7fa8d758598407f3bf0beb0118dc122ea5340736\n+6a22373771edbc3c7513cacb9355f880c73c2cbf\n+b89ef131147f71a96152a7b5c4374266cdf539b2\n+01d8359983e2f77b5118fede3ffa947072c666c8\n+58f0c929a3d70a4bff79cc200f1c186f71ef1675\n+950be19727a581970591d8f8138dfe4725750382\n+425278d17bd0edf8a3a7cc81e55016f7fd8e7726\n+c028c7b7557da2baff7af8840108e8be4db8e0c6\n+47a7cfb0aa2498f6801026d258a59f9de48f60b0\n+f6b7df3155ddb4cedfbcf5d3eb3383d4614b3a85\n+d72098038f3b55a714ed8adb34fab547b15eb0d5\n+c49c825bd9f4764536b45df5a684d97173673fc7\n+33799afe83eec4200ff140e9bf5eae83701a4d7f\n+5c3f8ddcaa1164079105c452429fccf8127b01b6\n+1f01443567b03ac75a91c810f1733f5c21b5699d\n+b3e42b6d02e8d19658a9135e427ebceab5367779\n+69b3a6dd9d9a0adf5506c8b9fde42187356bd4a8\n+bafd075c5e6a1088ef0f1aa0b0b224e026a3d3e0\n+7daa3adb242d9c8728fdb15c6af6596aaad5502f\n+514993554c370f4cf30a109ac28d5d64893dbf0a\n+c8d2473e6cb042e7275a10c49d3f6a4a91bf0166\n+386f4385ab04b0b2c3d47bddc0dc0f2de7354964\n+9f33dba05c01ecc5c56eb1284ab7d64d42f55171"
      }
    ]
  },
  {
    "sha": "eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmY3ODNhMGZlN2I5ZWFhYmE5ZWVmNjUzOWJkZjBmNjJjZTlmMDdl",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-02-28T21:20:07Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-01T09:42:03Z"
      },
      "message": "depends: make osx output deterministic\n\nld64 is threaded, and uses a worker for each CPU to parse input files. But\nthere's a bug in the parser causing dependencies to be calculated differently\nbased on which files have already been parsed.\n\nAs a result, builders with more CPUs are more likely to see non-determinism.\n\nThis looks to have been fixed in a newer version of ld64, so just disable\nthreading for now. There's no noticible slowdown.\n\nGithub-Pull: #9891\nRebased-From: 9e4d842afc67c63448cbbe30e5cea906e9c87f7e",
      "tree": {
        "sha": "2ee603f2706c9b345677821aab56e2ddf57d6fb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2ee603f2706c9b345677821aab56e2ddf57d6fb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtpdrAAoJEHSBCwEjRsmmCngH/0A0nAbfs7X2s/M4jEoQOLZI\nWyHd2prp86rM3Lq5cshPGMc1KnM1rmFpWeLIvKtGXH+2tqmHeYZsOVsN7kaFHm6a\nHUDUGWlAyOfdevdfNQ8q136E93Y97pwzNTuN5lwWjBq4CzSa/O2aaJga1cPjDqRm\nUCNz7Uni29IlAiwvMPVsma/G0YX/UpiXa2doMnDyjwRc/axegzu72B4oLLQfump+\nwoXytE3Gy5L+62NgMQ7d8WFiL1DK/DD4EGGxIIb7jubLTiHHDZpl4nK00iI1tkbM\ngDD5M4lDBtcnLzVGfilJStuG9WaObscD77b90u02uVK8iXrjEAagKoFXErBCCds=\n=nWcT\n-----END PGP SIGNATURE-----",
        "payload": "tree 2ee603f2706c9b345677821aab56e2ddf57d6fb9\nparent 5e709122343e1a336ee8ee21b003a298a65813f3\nauthor Cory Fields <cory-nospam-@coryfields.com> 1488316807 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488361323 +0100\n\ndepends: make osx output deterministic\n\nld64 is threaded, and uses a worker for each CPU to parse input files. But\nthere's a bug in the parser causing dependencies to be calculated differently\nbased on which files have already been parsed.\n\nAs a result, builders with more CPUs are more likely to see non-determinism.\n\nThis looks to have been fixed in a newer version of ld64, so just disable\nthreading for now. There's no noticible slowdown.\n\nGithub-Pull: #9891\nRebased-From: 9e4d842afc67c63448cbbe30e5cea906e9c87f7e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e709122343e1a336ee8ee21b003a298a65813f3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e709122343e1a336ee8ee21b003a298a65813f3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e709122343e1a336ee8ee21b003a298a65813f3"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "44d238cc4c2a686231c167942c63ae4ec08154c1",
        "filename": "depends/packages/native_cctools.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
        "patch": "@@ -38,7 +38,8 @@ $(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n endef\n \n define $(package)_preprocess_cmds\n-  cd $($(package)_build_subdir); ./autogen.sh\n+  cd $($(package)_build_subdir); ./autogen.sh && \\\n+  sed -i.old \"/define HAVE_PTHREADS/d\" ld64/src/ld/InputFiles.h\n endef\n \n define $(package)_config_cmds"
      }
    ]
  },
  {
    "sha": "a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODBkYzk0NTU0ZTdlYzllYTgxMGNlMzQxYWM3YjVhZDNmZDY2YTg4",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-02-28T22:59:57Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-01T11:34:08Z"
      },
      "message": "Bugfix: Only install manpages for built programs\n\nGithub-Pull: #9892\nRebased-From: 8c156b7f70ecd46af2172e052c89510f032c5090",
      "tree": {
        "sha": "b981211f99c6f6edf6b93a34f5e0ab01d834b63b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b981211f99c6f6edf6b93a34f5e0ab01d834b63b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYtrGwAAoJEHSBCwEjRsmmIEQIALkJBwQesp8ZaTChTjJjDqBm\nrFZ7jT9z3Utrmc48tTxaIph6bf3HiBE+J4RvvNGBnZ24wr5XuaN/1xH9LjuFrV83\nlvDngoOfhmEabqUYkC3Lhzq35BJpcZSmbdJvC/olsbDrH9psuKxPMxX7Vbxb35Am\n9n43RtPO8puZJXRBhBT05dr+BFg3YANx4aARAB+hYH71NXh4yhrm94aYNLyLxvsd\nOsDERxlTg88m9qJqGzHfhrNkJv7hw9qK4ZO1rc1gtGp33yIcl8LqHohF6cOFjjYW\nt8efj5WY5ghc8+hTXBth5TcFGt0D7Ct7uzW1Y21wd9ODWxx/fCDZMv8SHiP33sE=\n=mQlB\n-----END PGP SIGNATURE-----",
        "payload": "tree b981211f99c6f6edf6b93a34f5e0ab01d834b63b\nparent eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e\nauthor Luke Dashjr <luke-jr+git@utopios.org> 1488322797 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488368048 +0100\n\nBugfix: Only install manpages for built programs\n\nGithub-Pull: #9892\nRebased-From: 8c156b7f70ecd46af2172e052c89510f032c5090\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eff783a0fe7b9eaaba9eef6539bdf0f62ce9f07e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 13,
      "deletions": 1
    },
    "files": [
      {
        "sha": "08ff4d6ac1d5cc1135ee6c38d54d17fcfd7252eb",
        "filename": "doc/man/Makefile.am",
        "status": "modified",
        "additions": 13,
        "deletions": 1,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
        "patch": "@@ -1 +1,13 @@\n-dist_man1_MANS=bitcoind.1 bitcoin-qt.1 bitcoin-cli.1 bitcoin-tx.1\n+dist_man1_MANS=\n+\n+if BUILD_BITCOIND\n+  dist_man1_MANS+=bitcoind.1\n+endif\n+\n+if ENABLE_QT\n+  dist_man1_MANS+=bitcoin-qt.1\n+endif\n+\n+if BUILD_BITCOIN_UTILS\n+  dist_man1_MANS+=bitcoin-cli.1 bitcoin-tx.1\n+endif"
      }
    ]
  },
  {
    "sha": "589cd63b303158b565d49d2ce26c9e46b0bba8bd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODljZDYzYjMwMzE1OGI1NjVkNDlkMmNlMjZjOWU0NmIwYmJhOGJk",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-04T00:02:23Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-05T01:07:23Z"
      },
      "message": "Allow any subkey in verify-commits",
      "tree": {
        "sha": "747233e59785128f3665118b2ea1adce58741862",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/747233e59785128f3665118b2ea1adce58741862"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/589cd63b303158b565d49d2ce26c9e46b0bba8bd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/589cd63b303158b565d49d2ce26c9e46b0bba8bd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/589cd63b303158b565d49d2ce26c9e46b0bba8bd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/589cd63b303158b565d49d2ce26c9e46b0bba8bd/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e19efba033167ee530d36e22f404b74b09f7955",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e19efba033167ee530d36e22f404b74b09f7955",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e19efba033167ee530d36e22f404b74b09f7955"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2944bb269d7bbe699b4f429f908caa6cceccd7c9",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/589cd63b303158b565d49d2ce26c9e46b0bba8bd/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/589cd63b303158b565d49d2ce26c9e46b0bba8bd/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=589cd63b303158b565d49d2ce26c9e46b0bba8bd",
        "patch": "@@ -12,7 +12,7 @@ for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n \tcase \"$LINE\" in\n \t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\t\t[ \"${LINE#?GNUPG:? VALIDSIG * * * * * * * * * }\" = \"$KEY\" ] && VALID=true\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)"
      },
      {
        "sha": "5610692616e1dd228252f4abc58f3d1a66cefaa0",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/589cd63b303158b565d49d2ce26c9e46b0bba8bd/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/589cd63b303158b565d49d2ce26c9e46b0bba8bd/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=589cd63b303158b565d49d2ce26c9e46b0bba8bd",
        "patch": "@@ -1,4 +1,4 @@\n 71A3B16735405025D447E8F274810B012346C9A6\n-3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+133EAC179436F14A5CF1B794860FEB804E669320\n 32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n-FE09B823E6D83A3BC7983EAA2D7F2372E50FE137\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B"
      }
    ]
  },
  {
    "sha": "ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2Y1ZTQzY2UwYTE5MTJkMDMyNGNmMTg5ZmUyOGNmMjJiOThhMDYx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-05T13:32:38Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-05T13:33:59Z"
      },
      "message": "Merge #9920: [0.14] Allow any subkey in verify-commits (BlueMatt)\n\n589cd63 Allow any subkey in verify-commits (Matt Corallo)\n\nTree-SHA512: e3175273c648ed2d990ac931efae5e4bf3bd5ddce7b591f5e64a6831f3c029b252bc5d241dd8d3874467747c3ded87aa1fa334ff53d940cde32c22e584a2c4d0",
      "tree": {
        "sha": "99b1e8d125eb1273e19f2db08e875ccd11a52936",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/99b1e8d125eb1273e19f2db08e875ccd11a52936"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYvBPHAAoJEHSBCwEjRsmmfLYIAK0pN2DLB0BkIfYBy9bLGuUn\ntgNveH3jowDVYC42fpbtAmfDD+t4tXQv870p/CXJIeizXS3P0ahglYqs2VH1mri3\nVuxKxzKM0PjEBdEPr91A7hKiKDlEjOAFzjc8HupDbsOQgthUjVleI33wyU3suh6m\nvEYKYqJmxB9BWFC5fLF6LhVIpEswyK80opmPNNWvqM3P+rCVZ/dp6Yw2Iyz1ob7c\nON98FZrZPDTfNwwMznUZlHBtzazebzICJRfF0hZfx1odBylqNHtAh18uZ9dDNzx4\nC5quCXkpGu+f8jVYOdzEW7al/73A3TCWqIAvDH9oyNcCGLJNCJduBdxJSrfvohg=\n=zZBW\n-----END PGP SIGNATURE-----",
        "payload": "tree 99b1e8d125eb1273e19f2db08e875ccd11a52936\nparent a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88\nparent 589cd63b303158b565d49d2ce26c9e46b0bba8bd\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1488720758 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488720839 +0100\n\nMerge #9920: [0.14] Allow any subkey in verify-commits (BlueMatt)\n\n589cd63 Allow any subkey in verify-commits (Matt Corallo)\n\nTree-SHA512: e3175273c648ed2d990ac931efae5e4bf3bd5ddce7b591f5e64a6831f3c029b252bc5d241dd8d3874467747c3ded87aa1fa334ff53d940cde32c22e584a2c4d0\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccf5e43ce0a1912d0324cf189fe28cf22b98a061/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a80dc94554e7ec9ea810ce341ac7b5ad3fd66a88"
      },
      {
        "sha": "589cd63b303158b565d49d2ce26c9e46b0bba8bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/589cd63b303158b565d49d2ce26c9e46b0bba8bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/589cd63b303158b565d49d2ce26c9e46b0bba8bd"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2944bb269d7bbe699b4f429f908caa6cceccd7c9",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccf5e43ce0a1912d0324cf189fe28cf22b98a061/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccf5e43ce0a1912d0324cf189fe28cf22b98a061/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
        "patch": "@@ -12,7 +12,7 @@ for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n \tcase \"$LINE\" in\n \t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n+\t\t\t[ \"${LINE#?GNUPG:? VALIDSIG * * * * * * * * * }\" = \"$KEY\" ] && VALID=true\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)"
      },
      {
        "sha": "5610692616e1dd228252f4abc58f3d1a66cefaa0",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccf5e43ce0a1912d0324cf189fe28cf22b98a061/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccf5e43ce0a1912d0324cf189fe28cf22b98a061/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
        "patch": "@@ -1,4 +1,4 @@\n 71A3B16735405025D447E8F274810B012346C9A6\n-3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n+133EAC179436F14A5CF1B794860FEB804E669320\n 32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC\n-FE09B823E6D83A3BC7983EAA2D7F2372E50FE137\n+B8B3F1C0E58C15DB6A81D30C3648A882F4316B9B"
      }
    ]
  },
  {
    "sha": "43a987c1cbcd04b9c59052606c3c31c56abc826e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0M2E5ODdjMWNiY2QwNGI5YzU5MDUyNjA2YzNjMzFjNTZhYmM4MjZl",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-05T16:19:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-05T18:09:49Z"
      },
      "message": "Fix regsig checking for subkey sigs in verify-commits\n\nRebased-From: bbd757940bcb0628df6f7a5bd1fb348cf2290502",
      "tree": {
        "sha": "d3c690f7e75f3dc9670ad4481124cc2ffe246314",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3c690f7e75f3dc9670ad4481124cc2ffe246314"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYvFRuAAoJEHSBCwEjRsmml7kH/iVseKnmB4CWbB+BdGOGl0V2\nUgdMLABPpSPvFRkzJTfFFPlBSJYpm3OVPqNUvVaIbaUli8nwmBELRJwqhiYxWkgp\nRuH+CgEQOlsMySqzR5k2T60+Yr7dp4IUadR64wOJms9/QRiab8mGQOlGGMnBIJTn\nSmanCAPFRL/7lLdQx1UigHpXEDUjOj3wPxR1E7grQ72k9QrJSeFC4HXo3cZKrLJN\nLDjyYXXaJWaxgZ1FTHhlGdSDzeCDzw5GCtVo37o5fNsaZNfFOs72k40MBK6x1vG5\nsCKOyFRSiCZpK0PC9feg3gz8iOk4TTcCf1gIAOi9k6SAk7Nwj7/Xo7lU8d/hwR4=\n=9sty\n-----END PGP SIGNATURE-----",
        "payload": "tree d3c690f7e75f3dc9670ad4481124cc2ffe246314\nparent ccf5e43ce0a1912d0324cf189fe28cf22b98a061\nauthor Matt Corallo <git@bluematt.me> 1488730757 -0500\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1488737389 +0100\n\nFix regsig checking for subkey sigs in verify-commits\n\nRebased-From: bbd757940bcb0628df6f7a5bd1fb348cf2290502\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43a987c1cbcd04b9c59052606c3c31c56abc826e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccf5e43ce0a1912d0324cf189fe28cf22b98a061",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccf5e43ce0a1912d0324cf189fe28cf22b98a061"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "4b2649eaaaa1d856299bc401253db6ee42a0fc50",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43a987c1cbcd04b9c59052606c3c31c56abc826e/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43a987c1cbcd04b9c59052606c3c31c56abc826e/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "patch": "@@ -17,12 +17,8 @@ for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n \t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY#????????????????????????} \"*)\n-\t\t\t\tREVSIG=true\n-\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY#????????????????????????} \"\n-\t\t\tesac\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n+\t\tREVSIG=true\n+\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;\n \tesac\n done"
      }
    ]
  },
  {
    "sha": "569596cc5148ef868350a9720013d38faf3e34ce",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Njk1OTZjYzUxNDhlZjg2ODM1MGE5NzIwMDEzZDM4ZmFmM2UzNGNl",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-08T20:56:59Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-16T14:43:54Z"
      },
      "message": "Don't require segwit in getblocktemplate for segwit signalling or mining\n\nSegwit's version bit will be signalled for all invocations of CreateNewBlock,\nand not specifying segwit only will cause CreateNewBlock to skip transactions\nwith witness from being selected.\n\nGithub-Pull: #9955\nRebased-From: abe7b3d3abe10e3554b770f40824174b3b217490",
      "tree": {
        "sha": "907377b3adb5cb56ae99a44c0ac425167a970bc4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/907377b3adb5cb56ae99a44c0ac425167a970bc4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/569596cc5148ef868350a9720013d38faf3e34ce",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569596cc5148ef868350a9720013d38faf3e34ce",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/569596cc5148ef868350a9720013d38faf3e34ce",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569596cc5148ef868350a9720013d38faf3e34ce/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43a987c1cbcd04b9c59052606c3c31c56abc826e"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 28,
      "deletions": 25
    },
    "files": [
      {
        "sha": "479f1c6796b7956ca76717811160ead3f77dc6d0",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -1701,9 +1701,11 @@ def test_getblocktemplate_before_lockin(self):\n         for node in [self.nodes[0], self.nodes[2]]:\n             gbt_results = node.getblocktemplate()\n             block_version = gbt_results['version']\n-            # If we're not indicating segwit support, we should not be signalling\n-            # for segwit activation, nor should we get a witness commitment.\n-            assert_equal(block_version & (1 << VB_WITNESS_BIT), 0)\n+            # If we're not indicating segwit support, we will still be\n+            # signalling for segwit activation.\n+            assert_equal((block_version & (1 << VB_WITNESS_BIT) != 0), node == self.nodes[0])\n+            # If we don't specify the segwit rule, then we won't get a default\n+            # commitment.\n             assert('default_witness_commitment' not in gbt_results)\n \n         # Workaround:"
      },
      {
        "sha": "5dfc7a2f06fb08882c329931d22cfdc01204c33f",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -251,20 +251,11 @@ def run_test(self):\n         assert(tmpl['transactions'][0]['txid'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 8)\n \n-        print(\"Verify non-segwit miners get a valid GBT response after the fork\")\n-        send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.998\"))\n-        try:\n-            tmpl = self.nodes[0].getblocktemplate({})\n-            assert(len(tmpl['transactions']) == 1)  # Doesn't include witness tx\n-            assert(tmpl['sizelimit'] == 1000000)\n-            assert('weightlimit' not in tmpl)\n-            assert(tmpl['sigoplimit'] == 20000)\n-            assert(tmpl['transactions'][0]['hash'] == txid)\n-            assert(tmpl['transactions'][0]['sigops'] == 2)\n-            assert(('!segwit' in tmpl['rules']) or ('segwit' not in tmpl['rules']))\n-        except JSONRPCException:\n-            # This is an acceptable outcome\n-            pass\n+        print(\"Non-segwit miners are able to use GBT response after activation.\")\n+        txid = send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.998\"))\n+        tmpl = self.nodes[0].getblocktemplate()\n+        # TODO: add a transaction with witness to mempool, and verify it's not\n+        # selected for mining.\n \n         print(\"Verify behaviour of importaddress, addwitnessaddress and listunspent\")\n "
      },
      {
        "sha": "7b3d94d0e4f391e50a413fd797bc1022a8f81f13",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -127,7 +127,7 @@ void BlockAssembler::resetBlock()\n     blockFinished = false;\n }\n \n-std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n+std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n {\n     resetBlock();\n \n@@ -165,7 +165,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     // -promiscuousmempoolflags is used.\n     // TODO: replace this with a call to main to assess validity of a mempool\n     // transaction (which in most cases can be a no-op).\n-    fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus());\n+    fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n     addPriorityTxs();\n     addPackageTxs();"
      },
      {
        "sha": "29013c3bcc1b66ca5f2187b5485360ec2d4a591e",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -165,7 +165,7 @@ class BlockAssembler\n public:\n     BlockAssembler(const CChainParams& chainparams);\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n-    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\n+    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx=true);\n \n private:\n     // utility functions"
      },
      {
        "sha": "38d7b1eb1e225b2385afeed921b857ca880725e8",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -519,12 +519,22 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // TODO: Maybe recheck connections/IBD and (if something wrong) send an expires-immediately template to stop miners?\n     }\n \n+    const struct BIP9DeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n+    // If the caller is indicating segwit support, then allow CreateNewBlock()\n+    // to select witness transactions, after segwit activates (otherwise\n+    // don't).\n+    bool fSupportsSegwit = setClientRules.find(segwit_info.name) != setClientRules.end();\n+\n     // Update block\n     static CBlockIndex* pindexPrev;\n     static int64_t nStart;\n     static std::unique_ptr<CBlockTemplate> pblocktemplate;\n+    // Cache whether the last invocation was with segwit support, to avoid returning\n+    // a segwit-block to a non-segwit caller.\n+    static bool fLastTemplateSupportsSegwit = true;\n     if (pindexPrev != chainActive.Tip() ||\n-        (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 5))\n+        (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 5) ||\n+        fLastTemplateSupportsSegwit != fSupportsSegwit)\n     {\n         // Clear pindexPrev so future calls make a new block, despite any failures from here on\n         pindexPrev = nullptr;\n@@ -533,10 +543,11 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         nTransactionsUpdatedLast = mempool.GetTransactionsUpdated();\n         CBlockIndex* pindexPrevNew = chainActive.Tip();\n         nStart = GetTime();\n+        fLastTemplateSupportsSegwit = fSupportsSegwit;\n \n         // Create new block\n         CScript scriptDummy = CScript() << OP_TRUE;\n-        pblocktemplate = BlockAssembler(Params()).CreateNewBlock(scriptDummy);\n+        pblocktemplate = BlockAssembler(Params()).CreateNewBlock(scriptDummy, fSupportsSegwit);\n         if (!pblocktemplate)\n             throw JSONRPCError(RPC_OUT_OF_MEMORY, \"Out of memory\");\n \n@@ -686,8 +697,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.push_back(Pair(\"bits\", strprintf(\"%08x\", pblock->nBits)));\n     result.push_back(Pair(\"height\", (int64_t)(pindexPrev->nHeight+1)));\n \n-    const struct BIP9DeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n-    if (!pblocktemplate->vchCoinbaseCommitment.empty() && setClientRules.find(segwit_info.name) != setClientRules.end()) {\n+    if (!pblocktemplate->vchCoinbaseCommitment.empty() && fSupportsSegwit) {\n         result.push_back(Pair(\"default_witness_commitment\", HexStr(pblocktemplate->vchCoinbaseCommitment.begin(), pblocktemplate->vchCoinbaseCommitment.end())));\n     }\n "
      },
      {
        "sha": "8a7cce7485659841bf8513a2fc58817ba3522d2f",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/569596cc5148ef868350a9720013d38faf3e34ce/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/569596cc5148ef868350a9720013d38faf3e34ce/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=569596cc5148ef868350a9720013d38faf3e34ce",
        "patch": "@@ -17,7 +17,7 @@ const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION\n     },\n     {\n         /*.name =*/ \"segwit\",\n-        /*.gbt_force =*/ false,\n+        /*.gbt_force =*/ true,\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "2cd2cd51f7ae954160d5422e105089ff1f598aa6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyY2QyY2Q1MWY3YWU5NTQxNjBkNTQyMmUxMDUwODlmZjFmNTk4YWE2",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-09T18:49:50Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-16T14:50:16Z"
      },
      "message": "Test transaction selection when gbt called without segwit support\n\nGithub-Pull: #9955\nRebased-From: c85ffe6d8d57132c1825c16a572d3847419030a6",
      "tree": {
        "sha": "242446cf8f699f6f177fcd271228f47e43353fcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/242446cf8f699f6f177fcd271228f47e43353fcb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2cd2cd51f7ae954160d5422e105089ff1f598aa6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd2cd51f7ae954160d5422e105089ff1f598aa6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2cd2cd51f7ae954160d5422e105089ff1f598aa6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd2cd51f7ae954160d5422e105089ff1f598aa6/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "569596cc5148ef868350a9720013d38faf3e34ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/569596cc5148ef868350a9720013d38faf3e34ce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/569596cc5148ef868350a9720013d38faf3e34ce"
      }
    ],
    "stats": {
      "total": 55,
      "additions": 49,
      "deletions": 6
    },
    "files": [
      {
        "sha": "c814399f922eb54479f0efb0fbb398f1ed2ad426",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 49,
        "deletions": 6,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2cd2cd51f7ae954160d5422e105089ff1f598aa6/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2cd2cd51f7ae954160d5422e105089ff1f598aa6/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=2cd2cd51f7ae954160d5422e105089ff1f598aa6",
        "patch": "@@ -11,9 +11,9 @@\n from test_framework.util import *\n from test_framework.mininode import sha256, ripemd160, CTransaction, CTxIn, COutPoint, CTxOut\n from test_framework.address import script_to_p2sh, key_to_p2pkh\n-from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG\n+from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG, OP_TRUE\n from io import BytesIO\n-from test_framework.mininode import FromHex\n+from test_framework.mininode import ToHex, FromHex, COIN\n \n NODE_0 = 0\n NODE_1 = 1\n@@ -251,11 +251,54 @@ def run_test(self):\n         assert(tmpl['transactions'][0]['txid'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 8)\n \n+        self.nodes[0].generate(1) # Mine a block to clear the gbt cache\n+\n         print(\"Non-segwit miners are able to use GBT response after activation.\")\n-        txid = send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.998\"))\n-        tmpl = self.nodes[0].getblocktemplate()\n-        # TODO: add a transaction with witness to mempool, and verify it's not\n-        # selected for mining.\n+        # Create a 3-tx chain: tx1 (non-segwit input, paying to a segwit output) ->\n+        #                      tx2 (segwit input, paying to a non-segwit output) ->\n+        #                      tx3 (non-segwit input, paying to a non-segwit output).\n+        # tx1 is allowed to appear in the block, but no others.\n+        txid1 = send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.996\"))\n+        hex_tx = self.nodes[0].gettransaction(txid)['hex']\n+        tx = FromHex(CTransaction(), hex_tx)\n+        assert(tx.wit.is_null()) # This should not be a segwit input\n+        assert(txid1 in self.nodes[0].getrawmempool())\n+\n+        # Now create tx2, which will spend from txid1.\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(txid1, 16), 0), b''))\n+        tx.vout.append(CTxOut(int(49.99*COIN), CScript([OP_TRUE])))\n+        tx2_hex = self.nodes[0].signrawtransaction(ToHex(tx))['hex']\n+        txid2 = self.nodes[0].sendrawtransaction(tx2_hex)\n+        tx = FromHex(CTransaction(), tx2_hex)\n+        assert(not tx.wit.is_null())\n+\n+        # Now create tx3, which will spend from txid2\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(txid2, 16), 0), b\"\"))\n+        tx.vout.append(CTxOut(int(49.95*COIN), CScript([OP_TRUE]))) # Huge fee\n+        tx.calc_sha256()\n+        txid3 = self.nodes[0].sendrawtransaction(ToHex(tx))\n+        assert(tx.wit.is_null())\n+        assert(txid3 in self.nodes[0].getrawmempool())\n+\n+        # Now try calling getblocktemplate() without segwit support.\n+        template = self.nodes[0].getblocktemplate()\n+\n+        # Check that tx1 is the only transaction of the 3 in the template.\n+        template_txids = [ t['txid'] for t in template['transactions'] ]\n+        assert(txid2 not in template_txids and txid3 not in template_txids)\n+        assert(txid1 in template_txids)\n+\n+        # Check that running with segwit support results in all 3 being included.\n+        template = self.nodes[0].getblocktemplate({\"rules\": [\"segwit\"]})\n+        template_txids = [ t['txid'] for t in template['transactions'] ]\n+        assert(txid1 in template_txids)\n+        assert(txid2 in template_txids)\n+        assert(txid3 in template_txids)\n+\n+        # Mine a block to clear the gbt cache again.\n+        self.nodes[0].generate(1)\n \n         print(\"Verify behaviour of importaddress, addwitnessaddress and listunspent\")\n "
      }
    ]
  },
  {
    "sha": "d2548a4f9704b1f475b4068d2d1686cf3780f742",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjU0OGE0Zjk3MDRiMWY0NzViNDA2OGQyZDE2ODZjZjM3ODBmNzQy",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-08T19:41:57Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-17T21:55:43Z"
      },
      "message": "Fix shutdown hang with >= 8 -addnodes set\n\nWe previously would block waiting for a CSemaphoreGrant in\nThreadOpenAddedConnections, when we did not need to. This would\nblock as the posts in CConnman shutdown were both to the wrong\nsemaphore and in the wrong location.\n\nGithub-Pull: #9953\nRebased-From: e007b243c4840e44857b5ccf686ed35899e44af0",
      "tree": {
        "sha": "67be6d9e3dff4be3eeae890e37d1d38500af4dcb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67be6d9e3dff4be3eeae890e37d1d38500af4dcb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2548a4f9704b1f475b4068d2d1686cf3780f742",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2548a4f9704b1f475b4068d2d1686cf3780f742",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2548a4f9704b1f475b4068d2d1686cf3780f742",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2548a4f9704b1f475b4068d2d1686cf3780f742/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43a987c1cbcd04b9c59052606c3c31c56abc826e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "e35a89e749856f5853aca686ad499c525341cf46",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2548a4f9704b1f475b4068d2d1686cf3780f742/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2548a4f9704b1f475b4068d2d1686cf3780f742/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d2548a4f9704b1f475b4068d2d1686cf3780f742",
        "patch": "@@ -2321,6 +2321,10 @@ void CConnman::Interrupt()\n     if (semOutbound)\n         for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++)\n             semOutbound->post();\n+\n+    if (semAddnode)\n+        for (int i=0; i<nMaxAddnode; i++)\n+            semAddnode->post();\n }\n \n void CConnman::Stop()\n@@ -2336,10 +2340,6 @@ void CConnman::Stop()\n     if (threadSocketHandler.joinable())\n         threadSocketHandler.join();\n \n-    if (semAddnode)\n-        for (int i=0; i<nMaxAddnode; i++)\n-            semOutbound->post();\n-\n     if (fAddressesInitialized)\n     {\n         DumpData();"
      }
    ]
  },
  {
    "sha": "4e2502bb512c00fa76c59ed8c758c2a6781a7425",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZTI1MDJiYjUxMmMwMGZhNzZjNTllZDhjNzU4YzJhNjc4MWE3NDI1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-08T19:55:28Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-03-17T21:56:57Z"
      },
      "message": "Add missing braces in semaphore posts in net\n\nGithub-Pull: #9953\nRebased-From: 819b513a5415d1669b5440e214862cda6c2261f8",
      "tree": {
        "sha": "a29e4079599fffbc1e83d0cf718b0b8451c02904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a29e4079599fffbc1e83d0cf718b0b8451c02904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4e2502bb512c00fa76c59ed8c758c2a6781a7425",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2502bb512c00fa76c59ed8c758c2a6781a7425",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2502bb512c00fa76c59ed8c758c2a6781a7425",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2502bb512c00fa76c59ed8c758c2a6781a7425/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2548a4f9704b1f475b4068d2d1686cf3780f742",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2548a4f9704b1f475b4068d2d1686cf3780f742",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2548a4f9704b1f475b4068d2d1686cf3780f742"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 8,
      "deletions": 4
    },
    "files": [
      {
        "sha": "03c8e5ecc495306375c42785e9dd61291da15596",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4e2502bb512c00fa76c59ed8c758c2a6781a7425/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4e2502bb512c00fa76c59ed8c758c2a6781a7425/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4e2502bb512c00fa76c59ed8c758c2a6781a7425",
        "patch": "@@ -2318,13 +2318,17 @@ void CConnman::Interrupt()\n     interruptNet();\n     InterruptSocks5(true);\n \n-    if (semOutbound)\n-        for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++)\n+    if (semOutbound) {\n+        for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++) {\n             semOutbound->post();\n+        }\n+    }\n \n-    if (semAddnode)\n-        for (int i=0; i<nMaxAddnode; i++)\n+    if (semAddnode) {\n+        for (int i=0; i<nMaxAddnode; i++) {\n             semAddnode->post();\n+        }\n+    }\n }\n \n void CConnman::Stop()"
      }
    ]
  },
  {
    "sha": "fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYThjNmRkYmVmNWU0ZDg5NTBiZTk1MDllMGFlYWMzNmMxZjY5YmJi",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-18T10:37:44Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-18T10:37:52Z"
      },
      "message": "Merge #10013: Fix shutdown hang with >= 8 -addnodes set (0.14 backport)\n\n4e2502b Add missing braces in semaphore posts in net (Matt Corallo)\nd2548a4 Fix shutdown hang with >= 8 -addnodes set (Matt Corallo)\n\nTree-SHA512: 0b157793a2c7fabbc2ed24f974d206fc01c816189d6b6aa5a61bab562a0034f72b643a19b1e7920061e479fb27eddd4abf1c40e772a9573346b221a08e7e5ed9",
      "tree": {
        "sha": "a29e4079599fffbc1e83d0cf718b0b8451c02904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a29e4079599fffbc1e83d0cf718b0b8451c02904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYzQ4AAAoJEHSBCwEjRsmmbOEIAKvIcxROFeBbNah+ZidmfwQ8\nZGf9OeMS9TPEniS3sKfqA1ImE29Ru0RoX8kxlJMapxu38ZGHGwiq1zyHv4oTAiqv\nwKoQ22Z0n7zReqCNv7r56vM7y+YqsjmRzBTpUNMaWv4gPz/Uf4SCngZolK/hrhgO\n0D44Rnv+0fH4hj1thwZgK7ju0P2wcBt0Lt0Zv0O3n8kCd1/f7dileUQcyhxqjkXy\nm9lSNzIivMBoib8gNIiTS/3C307PhkS/t7JhIXwGWJfSTTy9XFeKz8MYdOuBBpym\n5VvqdImBbSkSjt9m/92yoQvJOqlJHvYI6Bipqmi4WBcC8v7iQPgWOhS+SH13h5g=\n=lUYg\n-----END PGP SIGNATURE-----",
        "payload": "tree a29e4079599fffbc1e83d0cf718b0b8451c02904\nparent 43a987c1cbcd04b9c59052606c3c31c56abc826e\nparent 4e2502bb512c00fa76c59ed8c758c2a6781a7425\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1489833464 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1489833472 +0100\n\nMerge #10013: Fix shutdown hang with >= 8 -addnodes set (0.14 backport)\n\n4e2502b Add missing braces in semaphore posts in net (Matt Corallo)\nd2548a4 Fix shutdown hang with >= 8 -addnodes set (Matt Corallo)\n\nTree-SHA512: 0b157793a2c7fabbc2ed24f974d206fc01c816189d6b6aa5a61bab562a0034f72b643a19b1e7920061e479fb27eddd4abf1c40e772a9573346b221a08e7e5ed9\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43a987c1cbcd04b9c59052606c3c31c56abc826e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43a987c1cbcd04b9c59052606c3c31c56abc826e"
      },
      {
        "sha": "4e2502bb512c00fa76c59ed8c758c2a6781a7425",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e2502bb512c00fa76c59ed8c758c2a6781a7425",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e2502bb512c00fa76c59ed8c758c2a6781a7425"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 10,
      "deletions": 6
    },
    "files": [
      {
        "sha": "03c8e5ecc495306375c42785e9dd61291da15596",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
        "patch": "@@ -2318,9 +2318,17 @@ void CConnman::Interrupt()\n     interruptNet();\n     InterruptSocks5(true);\n \n-    if (semOutbound)\n-        for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++)\n+    if (semOutbound) {\n+        for (int i=0; i<(nMaxOutbound + nMaxFeeler); i++) {\n             semOutbound->post();\n+        }\n+    }\n+\n+    if (semAddnode) {\n+        for (int i=0; i<nMaxAddnode; i++) {\n+            semAddnode->post();\n+        }\n+    }\n }\n \n void CConnman::Stop()\n@@ -2336,10 +2344,6 @@ void CConnman::Stop()\n     if (threadSocketHandler.joinable())\n         threadSocketHandler.join();\n \n-    if (semAddnode)\n-        for (int i=0; i<nMaxAddnode; i++)\n-            semOutbound->post();\n-\n     if (fAddressesInitialized)\n     {\n         DumpData();"
      }
    ]
  },
  {
    "sha": "ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2I0N2JmODMwMzZmNjBkYmVmMDRmOTBhYTA2ZGQwZjljMTkxN2Fj",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-18T10:38:30Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-18T10:39:04Z"
      },
      "message": "Merge #10006: [0.14 backport] Don't require segwit in getblocktemplate for segwit signalling or mining\n\n2cd2cd5 Test transaction selection when gbt called without segwit support (Suhas Daftuar)\n569596c Don't require segwit in getblocktemplate for segwit signalling or mining (Suhas Daftuar)\n\nTree-SHA512: bf2672287713e5adc7e851791207e17490679f941d0b9ed38467ffede3aa3000d229151b8ae54323fc8037e0a8569b2fd910ec19f034fb85d9142289648793c3",
      "tree": {
        "sha": "016aa69f5c0d761787df1be69d1f60ae069bba1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/016aa69f5c0d761787df1be69d1f60ae069bba1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJYzQ5IAAoJEHSBCwEjRsmm+W4H/3J1UgHPW7NDCWwwJrKub9PT\nW8bo60e2y3L8CYIAl3KglhhBN2yfs1MDqOWILciN+5iDW9jxWAXFUEGmnCxaZkTU\nvmDEcK43IMKS5EjEexA5GpR4BNFZ3OG5tcGmlW14Kb0JRUupGjxkR1YH8yJWxt1v\nyl5Gy4SEpfjIsadB5YTeeFAtVPZq2BOKh6gws1JIeLlT7mEE3k0HCEzhNBcILzpf\nYj7Np+JiOIcoYPheBWn7bgzK+Wgzis3w7uUO8/yZnkrOkRfGJum9ZmB6RPhH+Q1P\nVnBIiJ0MKrntodr3xCdQmBYgNwYUrCOkhWja9a+k3zbOc+Y8wX22uHlsDntXo3Q=\n=papC\n-----END PGP SIGNATURE-----",
        "payload": "tree 016aa69f5c0d761787df1be69d1f60ae069bba1a\nparent fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb\nparent 2cd2cd51f7ae954160d5422e105089ff1f598aa6\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1489833510 +0100\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1489833544 +0100\n\nMerge #10006: [0.14 backport] Don't require segwit in getblocktemplate for segwit signalling or mining\n\n2cd2cd5 Test transaction selection when gbt called without segwit support (Suhas Daftuar)\n569596c Don't require segwit in getblocktemplate for segwit signalling or mining (Suhas Daftuar)\n\nTree-SHA512: bf2672287713e5adc7e851791207e17490679f941d0b9ed38467ffede3aa3000d229151b8ae54323fc8037e0a8569b2fd910ec19f034fb85d9142289648793c3\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa8c6ddbef5e4d8950be9509e0aeac36c1f69bbb"
      },
      {
        "sha": "2cd2cd51f7ae954160d5422e105089ff1f598aa6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2cd2cd51f7ae954160d5422e105089ff1f598aa6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2cd2cd51f7ae954160d5422e105089ff1f598aa6"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 73,
      "deletions": 27
    },
    "files": [
      {
        "sha": "479f1c6796b7956ca76717811160ead3f77dc6d0",
        "filename": "qa/rpc-tests/p2p-segwit.py",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/qa/rpc-tests/p2p-segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/qa/rpc-tests/p2p-segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-segwit.py?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -1701,9 +1701,11 @@ def test_getblocktemplate_before_lockin(self):\n         for node in [self.nodes[0], self.nodes[2]]:\n             gbt_results = node.getblocktemplate()\n             block_version = gbt_results['version']\n-            # If we're not indicating segwit support, we should not be signalling\n-            # for segwit activation, nor should we get a witness commitment.\n-            assert_equal(block_version & (1 << VB_WITNESS_BIT), 0)\n+            # If we're not indicating segwit support, we will still be\n+            # signalling for segwit activation.\n+            assert_equal((block_version & (1 << VB_WITNESS_BIT) != 0), node == self.nodes[0])\n+            # If we don't specify the segwit rule, then we won't get a default\n+            # commitment.\n             assert('default_witness_commitment' not in gbt_results)\n \n         # Workaround:"
      },
      {
        "sha": "c814399f922eb54479f0efb0fbb398f1ed2ad426",
        "filename": "qa/rpc-tests/segwit.py",
        "status": "modified",
        "additions": 50,
        "deletions": 16,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/qa/rpc-tests/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/qa/rpc-tests/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/segwit.py?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -11,9 +11,9 @@\n from test_framework.util import *\n from test_framework.mininode import sha256, ripemd160, CTransaction, CTxIn, COutPoint, CTxOut\n from test_framework.address import script_to_p2sh, key_to_p2pkh\n-from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG\n+from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG, OP_TRUE\n from io import BytesIO\n-from test_framework.mininode import FromHex\n+from test_framework.mininode import ToHex, FromHex, COIN\n \n NODE_0 = 0\n NODE_1 = 1\n@@ -251,20 +251,54 @@ def run_test(self):\n         assert(tmpl['transactions'][0]['txid'] == txid)\n         assert(tmpl['transactions'][0]['sigops'] == 8)\n \n-        print(\"Verify non-segwit miners get a valid GBT response after the fork\")\n-        send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.998\"))\n-        try:\n-            tmpl = self.nodes[0].getblocktemplate({})\n-            assert(len(tmpl['transactions']) == 1)  # Doesn't include witness tx\n-            assert(tmpl['sizelimit'] == 1000000)\n-            assert('weightlimit' not in tmpl)\n-            assert(tmpl['sigoplimit'] == 20000)\n-            assert(tmpl['transactions'][0]['hash'] == txid)\n-            assert(tmpl['transactions'][0]['sigops'] == 2)\n-            assert(('!segwit' in tmpl['rules']) or ('segwit' not in tmpl['rules']))\n-        except JSONRPCException:\n-            # This is an acceptable outcome\n-            pass\n+        self.nodes[0].generate(1) # Mine a block to clear the gbt cache\n+\n+        print(\"Non-segwit miners are able to use GBT response after activation.\")\n+        # Create a 3-tx chain: tx1 (non-segwit input, paying to a segwit output) ->\n+        #                      tx2 (segwit input, paying to a non-segwit output) ->\n+        #                      tx3 (non-segwit input, paying to a non-segwit output).\n+        # tx1 is allowed to appear in the block, but no others.\n+        txid1 = send_to_witness(1, self.nodes[0], find_unspent(self.nodes[0], 50), self.pubkey[0], False, Decimal(\"49.996\"))\n+        hex_tx = self.nodes[0].gettransaction(txid)['hex']\n+        tx = FromHex(CTransaction(), hex_tx)\n+        assert(tx.wit.is_null()) # This should not be a segwit input\n+        assert(txid1 in self.nodes[0].getrawmempool())\n+\n+        # Now create tx2, which will spend from txid1.\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(txid1, 16), 0), b''))\n+        tx.vout.append(CTxOut(int(49.99*COIN), CScript([OP_TRUE])))\n+        tx2_hex = self.nodes[0].signrawtransaction(ToHex(tx))['hex']\n+        txid2 = self.nodes[0].sendrawtransaction(tx2_hex)\n+        tx = FromHex(CTransaction(), tx2_hex)\n+        assert(not tx.wit.is_null())\n+\n+        # Now create tx3, which will spend from txid2\n+        tx = CTransaction()\n+        tx.vin.append(CTxIn(COutPoint(int(txid2, 16), 0), b\"\"))\n+        tx.vout.append(CTxOut(int(49.95*COIN), CScript([OP_TRUE]))) # Huge fee\n+        tx.calc_sha256()\n+        txid3 = self.nodes[0].sendrawtransaction(ToHex(tx))\n+        assert(tx.wit.is_null())\n+        assert(txid3 in self.nodes[0].getrawmempool())\n+\n+        # Now try calling getblocktemplate() without segwit support.\n+        template = self.nodes[0].getblocktemplate()\n+\n+        # Check that tx1 is the only transaction of the 3 in the template.\n+        template_txids = [ t['txid'] for t in template['transactions'] ]\n+        assert(txid2 not in template_txids and txid3 not in template_txids)\n+        assert(txid1 in template_txids)\n+\n+        # Check that running with segwit support results in all 3 being included.\n+        template = self.nodes[0].getblocktemplate({\"rules\": [\"segwit\"]})\n+        template_txids = [ t['txid'] for t in template['transactions'] ]\n+        assert(txid1 in template_txids)\n+        assert(txid2 in template_txids)\n+        assert(txid3 in template_txids)\n+\n+        # Mine a block to clear the gbt cache again.\n+        self.nodes[0].generate(1)\n \n         print(\"Verify behaviour of importaddress, addwitnessaddress and listunspent\")\n "
      },
      {
        "sha": "7b3d94d0e4f391e50a413fd797bc1022a8f81f13",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -127,7 +127,7 @@ void BlockAssembler::resetBlock()\n     blockFinished = false;\n }\n \n-std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn)\n+std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n {\n     resetBlock();\n \n@@ -165,7 +165,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     // -promiscuousmempoolflags is used.\n     // TODO: replace this with a call to main to assess validity of a mempool\n     // transaction (which in most cases can be a no-op).\n-    fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus());\n+    fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n     addPriorityTxs();\n     addPackageTxs();"
      },
      {
        "sha": "29013c3bcc1b66ca5f2187b5485360ec2d4a591e",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -165,7 +165,7 @@ class BlockAssembler\n public:\n     BlockAssembler(const CChainParams& chainparams);\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n-    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn);\n+    std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx=true);\n \n private:\n     // utility functions"
      },
      {
        "sha": "38d7b1eb1e225b2385afeed921b857ca880725e8",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 4,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -519,12 +519,22 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         // TODO: Maybe recheck connections/IBD and (if something wrong) send an expires-immediately template to stop miners?\n     }\n \n+    const struct BIP9DeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n+    // If the caller is indicating segwit support, then allow CreateNewBlock()\n+    // to select witness transactions, after segwit activates (otherwise\n+    // don't).\n+    bool fSupportsSegwit = setClientRules.find(segwit_info.name) != setClientRules.end();\n+\n     // Update block\n     static CBlockIndex* pindexPrev;\n     static int64_t nStart;\n     static std::unique_ptr<CBlockTemplate> pblocktemplate;\n+    // Cache whether the last invocation was with segwit support, to avoid returning\n+    // a segwit-block to a non-segwit caller.\n+    static bool fLastTemplateSupportsSegwit = true;\n     if (pindexPrev != chainActive.Tip() ||\n-        (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 5))\n+        (mempool.GetTransactionsUpdated() != nTransactionsUpdatedLast && GetTime() - nStart > 5) ||\n+        fLastTemplateSupportsSegwit != fSupportsSegwit)\n     {\n         // Clear pindexPrev so future calls make a new block, despite any failures from here on\n         pindexPrev = nullptr;\n@@ -533,10 +543,11 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n         nTransactionsUpdatedLast = mempool.GetTransactionsUpdated();\n         CBlockIndex* pindexPrevNew = chainActive.Tip();\n         nStart = GetTime();\n+        fLastTemplateSupportsSegwit = fSupportsSegwit;\n \n         // Create new block\n         CScript scriptDummy = CScript() << OP_TRUE;\n-        pblocktemplate = BlockAssembler(Params()).CreateNewBlock(scriptDummy);\n+        pblocktemplate = BlockAssembler(Params()).CreateNewBlock(scriptDummy, fSupportsSegwit);\n         if (!pblocktemplate)\n             throw JSONRPCError(RPC_OUT_OF_MEMORY, \"Out of memory\");\n \n@@ -686,8 +697,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.push_back(Pair(\"bits\", strprintf(\"%08x\", pblock->nBits)));\n     result.push_back(Pair(\"height\", (int64_t)(pindexPrev->nHeight+1)));\n \n-    const struct BIP9DeploymentInfo& segwit_info = VersionBitsDeploymentInfo[Consensus::DEPLOYMENT_SEGWIT];\n-    if (!pblocktemplate->vchCoinbaseCommitment.empty() && setClientRules.find(segwit_info.name) != setClientRules.end()) {\n+    if (!pblocktemplate->vchCoinbaseCommitment.empty() && fSupportsSegwit) {\n         result.push_back(Pair(\"default_witness_commitment\", HexStr(pblocktemplate->vchCoinbaseCommitment.begin(), pblocktemplate->vchCoinbaseCommitment.end())));\n     }\n "
      },
      {
        "sha": "8a7cce7485659841bf8513a2fc58817ba3522d2f",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "patch": "@@ -17,7 +17,7 @@ const struct BIP9DeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION\n     },\n     {\n         /*.name =*/ \"segwit\",\n-        /*.gbt_force =*/ false,\n+        /*.gbt_force =*/ true,\n     }\n };\n "
      }
    ]
  },
  {
    "sha": "eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWVlYWNkNjAwYTQ1YmI2YmZiM2QwMDk4ZGU4OWM1NGUzZjU2ZWVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T09:12:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T09:10:40Z"
      },
      "message": "0.14: Clear release notes",
      "tree": {
        "sha": "f216be627ecf3f3a681fd2aaedf35977db00df9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f216be627ecf3f3a681fd2aaedf35977db00df9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac"
      }
    ],
    "stats": {
      "total": 845,
      "additions": 13,
      "deletions": 832
    },
    "files": [
      {
        "sha": "7ade5b74400f645752571fd796bf99e2cb52a84d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 13,
        "deletions": 832,
        "changes": 845,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
        "patch": "@@ -1,12 +1,12 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n \n-Bitcoin Core version 0.14.0 is now available from:\n+Bitcoin Core version 0.14.x is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n \n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n@@ -33,844 +33,25 @@ frequently tested on them.\n Notable changes\n ===============\n \n-Performance Improvements\n---------------\n+Example item\n+-----------------------------------------------\n \n-Validation speed and network propagation performance have been greatly\n-improved, leading to much shorter sync and initial block download times.\n-\n-- The script signature cache has been reimplemented as a \"cuckoo cache\",\n-  allowing for more signatures to be cached and faster lookups.\n-- Assumed-valid blocks have been introduced which allows script validation to\n-  be skipped for ancestors of known-good blocks, without changing the security\n-  model. See below for more details.\n-- In some cases, compact blocks are now relayed before being fully validated as\n-  per BIP152.\n-- P2P networking has been refactored with a focus on concurrency and\n-  throughput. Network operations are no longer bottlenecked by validation. As a\n-  result, block fetching is several times faster than previous releases in many\n-  cases.\n-- The UTXO cache now claims unused mempool memory. This speeds up initial block\n-  download as UTXO lookups are a major bottleneck there, and there is no use for\n-  the mempool at that stage.\n-\n-\n-Manual Pruning\n---------------\n-\n-Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n-the blockchain allows for significant storage space savings as the vast majority of\n-the downloaded data can be discarded after processing so very little of it remains\n-on the disk.\n-\n-Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n-the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n-specified height or timestamp.\n-\n-`getinfo` Deprecated\n---------------------\n-\n-The `getinfo` RPC command has been deprecated. Each field in the RPC call\n-has been moved to another command's output with that command also giving\n-additional information that `getinfo` did not provide. The following table\n-shows where each field has been moved to:\n-\n-|`getinfo` field   | Moved to                                  |\n-|------------------|-------------------------------------------|\n-`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n-`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n-`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n-`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n-`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n-`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n-`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n-`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n-`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n-`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n-`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n-`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n-`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n-`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n-`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n-`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n-\n-ZMQ On Windows\n---------------\n-\n-Previously the ZeroMQ notification system was unavailable on Windows\n-due to various issues with ZMQ. These have been fixed upstream and\n-now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n-help with using ZMQ in general.\n-\n-Nested RPC Commands in Debug Console\n-------------------------------------\n-\n-The ability to nest RPC commands has been added to the debug console. This\n-allows users to have the output of a command become the input to another\n-command without running the commands separately.\n-\n-The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n-be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n-done with square brackets where object values are accessed with either an \n-array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n-commas and spaces can be used to separate parameters in both the bracket syntax\n-and normal RPC command syntax.\n-\n-Network Activity Toggle\n------------------------\n-\n-A RPC command and GUI toggle have been added to enable or disable all p2p\n-network activity. The network status icon in the bottom right hand corner \n-is now the GUI toggle. Clicking the icon will either enable or disable all\n-p2p network activity. If network activity is disabled, the icon will \n-be grayed out with an X on top of it.\n-\n-Additionally the `setnetworkactive` RPC command has been added which does\n-the same thing as the GUI icon. The command takes one boolean parameter,\n-`true` enables networking and `false` disables it.\n-\n-Out-of-sync Modal Info Layer\n-----------------------------\n-\n-When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n-layer will be shown over top of the normal display. This layer contains\n-details about the current sync progress and estimates the amount of time\n-remaining to finish syncing. This layer can also be hidden and subsequently\n-unhidden by clicking on the progress bar at the bottom of the window.\n-\n-Support for JSON-RPC Named Arguments\n-------------------------------------\n-\n-Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n-can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n-for passing parameters by-name with an object.\n-\n-`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n-when the `-named` option is given.\n-\n-Some examples:\n-\n-    src/bitcoin-cli -named help command=\"help\"\n-    src/bitcoin-cli -named getblockhash height=0\n-    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n-\n-The order of arguments doesn't matter in this case. Named arguments are also\n-useful to leave out arguments that should stay at their default value. The\n-rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n-be left out. However, this is not yet implemented for many RPC calls, this is\n-expected to land in a later release.\n-\n-The RPC server remains fully backwards compatible with positional arguments.\n-\n-Opt into RBF When Sending\n--------------------------\n-\n-A new startup option, `-walletrbf`, has been added to allow users to have all\n-transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default. The new\n-`bumpfee` RPC can be used to replace transactions that opt into RBF.\n-\n-Sensitive Data Is No Longer Stored In Debug Console History\n------------------------------------------------------------\n-\n-The debug console maintains a history of previously entered commands that can be\n-accessed by pressing the Up-arrow key so that users can easily reuse previously\n-entered commands. Commands which have sensitive information such as passphrases and\n-private keys will now have a `(...)` in place of the parameters when accessed through\n-the history.\n-\n-Retaining the Mempool Across Restarts\n--------------------------------------\n-\n-The mempool will be saved to the data directory prior to shutdown\n-to a `mempool.dat` file. This file preserves the mempool so that when the node\n-restarts the mempool can be filled with transactions without waiting for new transactions\n-to be created. This will also preserve any changes made to a transaction through\n-commands such as `prioritisetransaction` so that those changes will not be lost.\n-\n-Final Alert\n------------\n-\n-The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n-The Alert System was retired with a maximum sequence final alert which causes any nodes\n-supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n-prevents any other alerts from overriding it. This final alert is hard-coded into this release\n-so that all old nodes receive the final alert.\n-\n-GUI Changes\n------------\n-\n- - After resetting the options by clicking the `Reset Options` button \n-   in the options dialog or with the `-resetguioptions` startup option, \n-   the user will be prompted to choose the data directory again. This \n-   is to ensure that custom data directories will be kept after the \n-   option reset which clears the custom data directory set via the choose \n-   datadir dialog.\n-\n- - Multiple peers can now be selected in the list of peers in the debug \n-   window. This allows for users to ban or disconnect multiple peers \n-   simultaneously instead of banning them one at a time.\n-\n- - An indicator has been added to the bottom right hand corner of the main\n-   window to indicate whether the wallet being used is a HD wallet. This\n-   icon will be grayed out with an X on top of it if the wallet is not a\n-   HD wallet.\n-\n-Low-level RPC changes\n-----------------------\n-\n- - `importprunedfunds` only accepts two required arguments. Some versions accept\n-   an optional third arg, which was always ignored. Make sure to never pass more\n-   than two arguments.\n-\n- - The first boolean argument to `getaddednodeinfo` has been removed. This is \n-   an incompatible change.\n-\n- - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n-   generic \"chain\" (which has been present for years).\n-\n- - A new RPC command `preciousblock` has been added which marks a block as\n-   precious. A precious block will be treated as if it were received earlier\n-   than a competing block.\n-\n- - A new RPC command `importmulti` has been added which receives an array of \n-   JSON objects representing the intention of importing a public key, a \n-   private key, an address and script/p2sh\n-\n- - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n-   outputs has been deprecated. For now this will still work, but in the future\n-   it may change to only be able to retrieve information about transactions in\n-   the mempool or if `txindex` is enabled.\n-\n- - A new RPC command `getmemoryinfo` has been added which will return information\n-   about the memory usage of Bitcoin Core. This was added in conjunction with\n-   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n-   for more information.\n-\n- - A new RPC command `bumpfee` has been added which allows replacing an\n-   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n-   startup option above) with a new transaction that pays a higher fee, and\n-   should be more likely to get confirmed quickly.\n-\n-HTTP REST Changes\n------------------\n-\n- - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n-   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n-   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n-   when requests contain invalid parameters.\n-\n-Minimum Fee Rate Policies\n--------------------------\n-\n-Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n-- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n-- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n-- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n-\n-The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n-\n-Fee Estimation Changes\n-----------------------\n-\n-- Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n-  disabled. The fee slider will no longer be able to choose a target of 1 block.\n-  This is only a minor behavior change as there was often insufficient\n-  data for this target anyway. `estimatefee 1` will now always return -1 and\n-  `estimatesmartfee 1` will start searching at a target of 2.\n-\n-- The default target for fee estimation is changed to 6 blocks in both the GUI\n-  (previously 25) and for RPC calls (previously 2).\n-\n-Removal of Priority Estimation\n-------------------------------\n-\n-- Estimation of \"priority\" needed for a transaction to be included within a target\n-  number of blocks has been removed.  The RPC calls are deprecated and will either\n-  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n-  changed to no longer save these priority estimates. It will automatically be\n-  converted to the new format which is not readable by prior versions of the\n-  software.\n-\n-- Support for \"priority\" (coin age) transaction sorting for mining is\n-  considered deprecated in Core and will be removed in the next major version.\n-  This is not to be confused with the `prioritisetransaction` RPC which will remain\n-  supported by Core for adding fee deltas to transactions.\n-\n-P2P connection management\n---------------------------\n-\n-- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n-  limit of eight connections which does not compete with other inbound or outbound\n-  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n-  option.\n-\n-- New connections to manually added peers are performed more quickly.\n-\n-Introduction of assumed-valid blocks\n--------------------------------------\n-\n-- A significant portion of the initial block download time is spent verifying\n-  scripts/signatures.  Although the verification must pass to ensure the security\n-  of the system, no other result from this verification is needed: If the node\n-  knew the history of a given block were valid it could skip checking scripts\n-  for its ancestors.\n-\n-- A new configuration option 'assumevalid' is provided to express this knowledge\n-  to the software.  Unlike the 'checkpoints' in the past this setting does not\n-  force the use of a particular chain: chains that are consistent with it are\n-  processed quicker, but other chains are still accepted if they'd otherwise\n-  be chosen as best. Also unlike 'checkpoints' the user can configure which\n-  block history is assumed true, this means that even outdated software can\n-  sync more quickly if the setting is updated by the user.\n-\n-- Because the validity of a chain history is a simple objective fact it is much\n-  easier to review this setting.  As a result the software ships with a default\n-  value adjusted to match the current chain shortly before release.  The use\n-  of this default value can be disabled by setting -assumevalid=0\n-\n-Fundrawtransaction change address reuse\n-----------------------------------------\n-\n-- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n-  almost all cases `fundrawtransaction` does add a change-output to the\n-  outputs of the funded transaction. Before 0.14, the used keypool key was\n-  never marked as change-address key and directly returned to the keypool\n-  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n-  directly after `fundrawtransaction` did generate the same address as\n-  the change-output address.\n-\n-- Since 0.14, fundrawtransaction does reserve the change-output-key from\n-  the keypool by default (optional by setting  `reserveChangeKey`, default =\n-  `true`)\n-\n-- Users should also consider using `getrawchangeaddress()` in conjunction\n-  with `fundrawtransaction`'s `changeAddress` option.\n-\n-Unused mempool memory used by coincache\n-----------------------------------------\n-\n-- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n-  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n-  (controlled with the `-dbcache` option) borrows memory from the mempool\n-  when there is extra memory available. This may result in an increase in\n-  memory usage during IBD for those previously relying on only the `-dbcache`\n-  option to limit memory during that time.\n-\n-0.14.0 Change log\n+0.13.x Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, minor refactors and string updates. For convenience\n-in locating the code changes and accompanying discussion, both the pull request\n-and git merge commit are mentioned.\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n \n-### RPC and other APIs\n-- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n-- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n-- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n-- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n-- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n-- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n-- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n-- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n-- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n-- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n-- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n-- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n-- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n-- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n-- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n-- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n-- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n-- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n-- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n-- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n-- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n-- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n-- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n-- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n-- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n-\n-### Block and transaction handling\n-- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n-- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n-- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n-- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n-- #7730 `3c03dc2` Remove priority estimation (morcos)\n-- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n-- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n-- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n-- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n-- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n-- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n-- #9346 `b99a093` Batch construct batches (sipa)\n-- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n-- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n-- #9107 `7dac1e5` Safer modify new coins (morcos)\n-- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n-- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n-- #9138 `f646275` Improve fee estimation (morcos)\n-- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n-- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n-- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n-- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n-- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n-- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n-- #9371 `4a1dc35` Notify on removal (morcos)\n-- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n-- #8606 `e2a1a1e` Fix some locks (sipa)\n-- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n-- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n-- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n-- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n-- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n-- #9240 `a1dcf2e` Remove txConflicted (morcos)\n-- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n-- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n-- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n-- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n-- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n-\n-### P2P protocol and network code\n-- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n-- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n-- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n-- #8085 `6423116` Begin encapsulation (theuni)\n-- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n-- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n-- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n-- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n-- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n-- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n-- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n-- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n-- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n-- #8708 `c8c572f` have CConnman handle message sending (theuni)\n-- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n-- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n-- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n-- #8996 `ab914a6` Network activity toggle (luke-jr)\n-- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n-- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n-- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n-- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n-- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n-- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n-- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n-- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n-- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n-- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n-- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n-- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n-- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n-- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n-- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n-- #9609 `4966917` Fix remaining net assertions (theuni)\n-- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n-- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n-- #9698 `2447c10` Fix socket close race (theuni)\n-- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n-- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n-- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n-- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n-- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n-- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n-- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n-\n-### Validation\n-- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n-- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n-- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n-- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n-- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n-- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n-- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n-- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n-- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n-- #8524 `19b0f33` Precompute sighashes (sipa)\n-- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n-\n-### Build system\n-- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n-- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n-- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n-- #8566 `7b98895` Easy to use gitian building script (achow101)\n-- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n-- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n-- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n-- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n-- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n-- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n-- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n-- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n-- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n-- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n-- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n-- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n-- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n-- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n-- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n-- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n-- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n-- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n-- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n-- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n-- #9513 `bbf193f` Fix qt distdir builds (theuni)\n-- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n-- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n-- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n-- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n-- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n-- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n-- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n-- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n-- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n-- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n-- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n-\n-### GUI\n-- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n-- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n-- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n-- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n-- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n-- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n-- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n-- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n-- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n-- #8885 `b2fec4e` Fix ban from qt console (theuni)\n-- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n-- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n-- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n-- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n-- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n-- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n-- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n-- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n-- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n-- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n-- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n-- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n-- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n-- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n-- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n-- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n-- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n-- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n-- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n-- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n-- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n-- #9457 `123ea73` Select more files for translation (MarcoFalke)\n-- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n-- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n-- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n-- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n-- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n-- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n-- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n-- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n-\n-### Wallet\n-- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n-- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n-- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n-- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n-- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n-- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n-- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n-- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n-- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n-- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n-- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n-- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n-- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n-- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n-- #8753 `f8723d2` Locked memory manager (laanwj)\n-- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n-- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n-- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n-- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n-- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n-- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n-- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n-- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n-- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n-- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n-- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n-- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n-- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n-- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n-- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n-- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n-- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n-- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n-- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n-- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n-- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n-\n-### Tests and QA\n-- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n-- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n-- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n-- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n-- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n-- #8680 `666eaf0` Address Travis spurious failures (theuni)\n-- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n-- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n-- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n-- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n-- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n-- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n-- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n-- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n-- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n-- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n-- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n-- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n-- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n-- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n-- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n-- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n-- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n-- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n-- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n-- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n-- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n-- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n-- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n-- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n-- #9276 `ea33f19` Some minor testing cleanups (morcos)\n-- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n-- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n-- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n-- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n-- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n-- #9390,#9416 travis: make distdir (MarcoFalke)\n-- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n-- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n-- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n-- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n-- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n-- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n-- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n-- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n-- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n-- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n-- #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #9269 `43e8150` Align struct COrphan definition (sipa)\n-- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n-- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n-- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n-- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n-\n-### Documentation\n-- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n-- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n-- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n-- #9407 `041331e` Added missing colons in when running help command (anditto)\n-- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n-- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n-- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n-- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n-- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n-- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n-- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n-- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n-- #8624 `89de153` build: Mention curl (MarcoFalke)\n-- #8786 `9da7366` Mandatory copyright agreement (achow101)\n-- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n-- #9433 `caa2f10` Update the Windows build notes (droark)\n-- #8879 `f928050` Rework docs (MarcoFalke)\n-- #8887 `61d191f` Improve GitHub issue template (fanquake)\n-- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n-- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n-- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n-- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n-- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n-- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n-- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n-- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n-- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n-- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n-- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n-- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n-- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n-- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n-- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n-- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n-- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n-- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n-- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n-\n-### Miscellaneous\n-- #8274 `7a2d402` util: Update tinyformat (laanwj)\n-- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n-- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n-- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n-- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n-- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n-- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n-- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n-- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n-- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n-- #9303 `72bf1b3` Update comments in ctaes (sipa)\n-- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n-- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n-- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n-- #9531 `23281a4` Release notes for estimation changes  (morcos)\n-- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n-- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n-- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n-- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n-- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n-- #9070 `7b22e50` Lockedpool fixes (kazcw)\n-- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n-- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n-- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n-- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n-- #8613 `613bda4` LevelDB 1.19 (sipa)\n-- #9225 `5488514` Fix some benign races (TheBlueMatt)\n-- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n-- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n-- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n-- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n-- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n-- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n-- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n-- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n-- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n-- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n-- #9373,#9580 Various linearization script issues (droark)\n-- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n-- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n-- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n-- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n-- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n-- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n-- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n-- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n+[to be filled in at release]\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n-- accraze\n-- adlawren\n-- Alex Morcos\n-- Alexey Vesnin\n-- Amir Abrams\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Anditto Heristyo\n-- Andrew Chow\n-- anduck\n-- Anthony Towns\n-- Brian Deery\n-- BtcDrak\n-- Chris Moore\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- CryptAxe\n-- CryptoVote\n-- Dagur Valberg Johannsson\n-- Daniel Cousens\n-- Daniel Kraft\n-- Derek Miller\n-- djpnewton\n-- Don Patterson\n-- Doug\n-- Douglas Roark\n-- Ethan Heilman\n-- fsb4000\n-- Gaurav Rana\n-- Geoffrey Tsui\n-- Greg Walker\n-- Gregory Maxwell\n-- Gregory Sanders\n-- Hampus Sj\u00f6berg\n-- isle2983\n-- Ivo van der Sangen\n-- James White\n-- Jameson Lopp\n-- Jeremy Rubin\n-- Jiaxing Wang\n-- jnewbery\n-- John Newbery\n-- Johnson Lau\n-- Jon Lund Steffensen\n-- Jonas Schnelli\n-- jonnynewbs\n-- Jorge Tim\u00f3n\n-- Justin Camarena\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- kirit93\n-- Koki Takahashi\n-- Lauda\n-- leijurv\n-- lizhi\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Marijn Stollenga\n-- Marty Jones\n-- Masahiko Hyuga\n-- Matt Corallo\n-- Matthew King\n-- matthias\n-- Micha\n-- Michael Ford\n-- Michael Rotarius\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nicolas DORIER\n-- nomnombtc\n-- Patrick Strateman\n-- Pavel Jan\u00edk\n-- Pedro Branco\n-- Peter Todd\n-- Pieter Wuille\n-- poole\\_party\n-- practicalswift\n-- R E Broadley\n-- randy-waterhouse\n-- Richard Kiss\n-- Robert McLaughlin\n-- rodasmith\n-- Russell Yanofsky\n-- S. Matthew English\n-- Sev\n-- Spencer Lievens\n-- Stanislas Marion\n-- Steven\n-- Suhas Daftuar\n-- Thomas Snider\n-- UdjinM6\n-- unsystemizer\n-- whythat\n-- Will Binns\n-- Wladimir J. van der Laan\n-- wodry\n-- Zak Wilcox\n+[to be filled in at release]\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  },
  {
    "sha": "37bf0d5b381f95da833b3df8b76eca16a63a9010",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2JmMGQ1YjM4MWY5NWRhODMzYjNkZjhiNzZlY2ExNmE2M2E5MDEw",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T09:53:33Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-27T09:53:47Z"
      },
      "message": "Merge #10094: 0.14: Clear release notes\n\neeeeacd 0.14: Clear release notes (MarcoFalke)\n\nTree-SHA512: 9a5e2cc9ee43de36708e41361fd037a7ef98b4a17d0b9850b66e71fe8480648dafbcee8e0a109200208f58dbadf78298154c89ac492e43d6b19bccd0e4b14aa5",
      "tree": {
        "sha": "f216be627ecf3f3a681fd2aaedf35977db00df9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f216be627ecf3f3a681fd2aaedf35977db00df9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37bf0d5b381f95da833b3df8b76eca16a63a9010",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY2OErAAoJEHSBCwEjRsmmyKoH/3sffMM7Mhb4AE0wbUVJ+YDz\noKsxYw7f/z2LvYt5MUVACNHONQZ3nTauH4X5yKZ83upF+m8anoVSpyWfOcfVJTf5\ntjZLedV1VmCYJjRtx5u0RcJPg8NLTmijyxI1IpQUs0MF4A0+bbKGcQ0v6c9vica+\nOBIR7n87aR0Ol8BrW3Gm8B5EfJavydDucMr3ZIXoHDcaVB0OAnRgMM2D9S5WtiZr\n1eW/kwPIWEJ848t6fRdKiQJOtmDFDISZ8BynjM+EUlexRPUSY95WQDVHcsUFkEiI\nubdxTDmxyKPXSRddX5AE2xpXBRffN4TqlBI0DiPemAEDWTQbWt4spOkGvMAZXhI=\n=6PsQ\n-----END PGP SIGNATURE-----",
        "payload": "tree f216be627ecf3f3a681fd2aaedf35977db00df9d\nparent ccb47bf83036f60dbef04f90aa06dd0f9c1917ac\nparent eeeeacd600a45bb6bfb3d0098de89c54e3f56eef\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1490608413 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490608427 +0200\n\nMerge #10094: 0.14: Clear release notes\n\neeeeacd 0.14: Clear release notes (MarcoFalke)\n\nTree-SHA512: 9a5e2cc9ee43de36708e41361fd037a7ef98b4a17d0b9850b66e71fe8480648dafbcee8e0a109200208f58dbadf78298154c89ac492e43d6b19bccd0e4b14aa5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37bf0d5b381f95da833b3df8b76eca16a63a9010",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37bf0d5b381f95da833b3df8b76eca16a63a9010",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37bf0d5b381f95da833b3df8b76eca16a63a9010/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb47bf83036f60dbef04f90aa06dd0f9c1917ac"
      },
      {
        "sha": "eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eeeeacd600a45bb6bfb3d0098de89c54e3f56eef"
      }
    ],
    "stats": {
      "total": 845,
      "additions": 13,
      "deletions": 832
    },
    "files": [
      {
        "sha": "7ade5b74400f645752571fd796bf99e2cb52a84d",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 13,
        "deletions": 832,
        "changes": 845,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37bf0d5b381f95da833b3df8b76eca16a63a9010/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37bf0d5b381f95da833b3df8b76eca16a63a9010/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=37bf0d5b381f95da833b3df8b76eca16a63a9010",
        "patch": "@@ -1,12 +1,12 @@\n (note: this is a temporary file, to be added-to by anybody, and moved to\n release-notes at release time)\n \n-Bitcoin Core version 0.14.0 is now available from:\n+Bitcoin Core version 0.14.x is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n \n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n@@ -33,844 +33,25 @@ frequently tested on them.\n Notable changes\n ===============\n \n-Performance Improvements\n---------------\n+Example item\n+-----------------------------------------------\n \n-Validation speed and network propagation performance have been greatly\n-improved, leading to much shorter sync and initial block download times.\n-\n-- The script signature cache has been reimplemented as a \"cuckoo cache\",\n-  allowing for more signatures to be cached and faster lookups.\n-- Assumed-valid blocks have been introduced which allows script validation to\n-  be skipped for ancestors of known-good blocks, without changing the security\n-  model. See below for more details.\n-- In some cases, compact blocks are now relayed before being fully validated as\n-  per BIP152.\n-- P2P networking has been refactored with a focus on concurrency and\n-  throughput. Network operations are no longer bottlenecked by validation. As a\n-  result, block fetching is several times faster than previous releases in many\n-  cases.\n-- The UTXO cache now claims unused mempool memory. This speeds up initial block\n-  download as UTXO lookups are a major bottleneck there, and there is no use for\n-  the mempool at that stage.\n-\n-\n-Manual Pruning\n---------------\n-\n-Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n-the blockchain allows for significant storage space savings as the vast majority of\n-the downloaded data can be discarded after processing so very little of it remains\n-on the disk.\n-\n-Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n-the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n-specified height or timestamp.\n-\n-`getinfo` Deprecated\n---------------------\n-\n-The `getinfo` RPC command has been deprecated. Each field in the RPC call\n-has been moved to another command's output with that command also giving\n-additional information that `getinfo` did not provide. The following table\n-shows where each field has been moved to:\n-\n-|`getinfo` field   | Moved to                                  |\n-|------------------|-------------------------------------------|\n-`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n-`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n-`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n-`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n-`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n-`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n-`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n-`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n-`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n-`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n-`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n-`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n-`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n-`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n-`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n-`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n-\n-ZMQ On Windows\n---------------\n-\n-Previously the ZeroMQ notification system was unavailable on Windows\n-due to various issues with ZMQ. These have been fixed upstream and\n-now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n-help with using ZMQ in general.\n-\n-Nested RPC Commands in Debug Console\n-------------------------------------\n-\n-The ability to nest RPC commands has been added to the debug console. This\n-allows users to have the output of a command become the input to another\n-command without running the commands separately.\n-\n-The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n-be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n-done with square brackets where object values are accessed with either an \n-array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n-commas and spaces can be used to separate parameters in both the bracket syntax\n-and normal RPC command syntax.\n-\n-Network Activity Toggle\n------------------------\n-\n-A RPC command and GUI toggle have been added to enable or disable all p2p\n-network activity. The network status icon in the bottom right hand corner \n-is now the GUI toggle. Clicking the icon will either enable or disable all\n-p2p network activity. If network activity is disabled, the icon will \n-be grayed out with an X on top of it.\n-\n-Additionally the `setnetworkactive` RPC command has been added which does\n-the same thing as the GUI icon. The command takes one boolean parameter,\n-`true` enables networking and `false` disables it.\n-\n-Out-of-sync Modal Info Layer\n-----------------------------\n-\n-When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n-layer will be shown over top of the normal display. This layer contains\n-details about the current sync progress and estimates the amount of time\n-remaining to finish syncing. This layer can also be hidden and subsequently\n-unhidden by clicking on the progress bar at the bottom of the window.\n-\n-Support for JSON-RPC Named Arguments\n-------------------------------------\n-\n-Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n-can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n-for passing parameters by-name with an object.\n-\n-`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n-when the `-named` option is given.\n-\n-Some examples:\n-\n-    src/bitcoin-cli -named help command=\"help\"\n-    src/bitcoin-cli -named getblockhash height=0\n-    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n-\n-The order of arguments doesn't matter in this case. Named arguments are also\n-useful to leave out arguments that should stay at their default value. The\n-rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n-be left out. However, this is not yet implemented for many RPC calls, this is\n-expected to land in a later release.\n-\n-The RPC server remains fully backwards compatible with positional arguments.\n-\n-Opt into RBF When Sending\n--------------------------\n-\n-A new startup option, `-walletrbf`, has been added to allow users to have all\n-transactions sent opt into RBF support. The default value for this option is\n-currently `false`, so transactions will not opt into RBF by default. The new\n-`bumpfee` RPC can be used to replace transactions that opt into RBF.\n-\n-Sensitive Data Is No Longer Stored In Debug Console History\n------------------------------------------------------------\n-\n-The debug console maintains a history of previously entered commands that can be\n-accessed by pressing the Up-arrow key so that users can easily reuse previously\n-entered commands. Commands which have sensitive information such as passphrases and\n-private keys will now have a `(...)` in place of the parameters when accessed through\n-the history.\n-\n-Retaining the Mempool Across Restarts\n--------------------------------------\n-\n-The mempool will be saved to the data directory prior to shutdown\n-to a `mempool.dat` file. This file preserves the mempool so that when the node\n-restarts the mempool can be filled with transactions without waiting for new transactions\n-to be created. This will also preserve any changes made to a transaction through\n-commands such as `prioritisetransaction` so that those changes will not be lost.\n-\n-Final Alert\n------------\n-\n-The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n-The Alert System was retired with a maximum sequence final alert which causes any nodes\n-supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n-prevents any other alerts from overriding it. This final alert is hard-coded into this release\n-so that all old nodes receive the final alert.\n-\n-GUI Changes\n------------\n-\n- - After resetting the options by clicking the `Reset Options` button \n-   in the options dialog or with the `-resetguioptions` startup option, \n-   the user will be prompted to choose the data directory again. This \n-   is to ensure that custom data directories will be kept after the \n-   option reset which clears the custom data directory set via the choose \n-   datadir dialog.\n-\n- - Multiple peers can now be selected in the list of peers in the debug \n-   window. This allows for users to ban or disconnect multiple peers \n-   simultaneously instead of banning them one at a time.\n-\n- - An indicator has been added to the bottom right hand corner of the main\n-   window to indicate whether the wallet being used is a HD wallet. This\n-   icon will be grayed out with an X on top of it if the wallet is not a\n-   HD wallet.\n-\n-Low-level RPC changes\n-----------------------\n-\n- - `importprunedfunds` only accepts two required arguments. Some versions accept\n-   an optional third arg, which was always ignored. Make sure to never pass more\n-   than two arguments.\n-\n- - The first boolean argument to `getaddednodeinfo` has been removed. This is \n-   an incompatible change.\n-\n- - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n-   generic \"chain\" (which has been present for years).\n-\n- - A new RPC command `preciousblock` has been added which marks a block as\n-   precious. A precious block will be treated as if it were received earlier\n-   than a competing block.\n-\n- - A new RPC command `importmulti` has been added which receives an array of \n-   JSON objects representing the intention of importing a public key, a \n-   private key, an address and script/p2sh\n-\n- - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n-   outputs has been deprecated. For now this will still work, but in the future\n-   it may change to only be able to retrieve information about transactions in\n-   the mempool or if `txindex` is enabled.\n-\n- - A new RPC command `getmemoryinfo` has been added which will return information\n-   about the memory usage of Bitcoin Core. This was added in conjunction with\n-   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n-   for more information.\n-\n- - A new RPC command `bumpfee` has been added which allows replacing an\n-   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n-   startup option above) with a new transaction that pays a higher fee, and\n-   should be more likely to get confirmed quickly.\n-\n-HTTP REST Changes\n------------------\n-\n- - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n-   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n-   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n-   when requests contain invalid parameters.\n-\n-Minimum Fee Rate Policies\n--------------------------\n-\n-Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n-- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n-- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n-- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n-\n-The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n-\n-Fee Estimation Changes\n-----------------------\n-\n-- Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n-  disabled. The fee slider will no longer be able to choose a target of 1 block.\n-  This is only a minor behavior change as there was often insufficient\n-  data for this target anyway. `estimatefee 1` will now always return -1 and\n-  `estimatesmartfee 1` will start searching at a target of 2.\n-\n-- The default target for fee estimation is changed to 6 blocks in both the GUI\n-  (previously 25) and for RPC calls (previously 2).\n-\n-Removal of Priority Estimation\n-------------------------------\n-\n-- Estimation of \"priority\" needed for a transaction to be included within a target\n-  number of blocks has been removed.  The RPC calls are deprecated and will either\n-  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n-  changed to no longer save these priority estimates. It will automatically be\n-  converted to the new format which is not readable by prior versions of the\n-  software.\n-\n-- Support for \"priority\" (coin age) transaction sorting for mining is\n-  considered deprecated in Core and will be removed in the next major version.\n-  This is not to be confused with the `prioritisetransaction` RPC which will remain\n-  supported by Core for adding fee deltas to transactions.\n-\n-P2P connection management\n---------------------------\n-\n-- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n-  limit of eight connections which does not compete with other inbound or outbound\n-  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n-  option.\n-\n-- New connections to manually added peers are performed more quickly.\n-\n-Introduction of assumed-valid blocks\n--------------------------------------\n-\n-- A significant portion of the initial block download time is spent verifying\n-  scripts/signatures.  Although the verification must pass to ensure the security\n-  of the system, no other result from this verification is needed: If the node\n-  knew the history of a given block were valid it could skip checking scripts\n-  for its ancestors.\n-\n-- A new configuration option 'assumevalid' is provided to express this knowledge\n-  to the software.  Unlike the 'checkpoints' in the past this setting does not\n-  force the use of a particular chain: chains that are consistent with it are\n-  processed quicker, but other chains are still accepted if they'd otherwise\n-  be chosen as best. Also unlike 'checkpoints' the user can configure which\n-  block history is assumed true, this means that even outdated software can\n-  sync more quickly if the setting is updated by the user.\n-\n-- Because the validity of a chain history is a simple objective fact it is much\n-  easier to review this setting.  As a result the software ships with a default\n-  value adjusted to match the current chain shortly before release.  The use\n-  of this default value can be disabled by setting -assumevalid=0\n-\n-Fundrawtransaction change address reuse\n-----------------------------------------\n-\n-- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n-  almost all cases `fundrawtransaction` does add a change-output to the\n-  outputs of the funded transaction. Before 0.14, the used keypool key was\n-  never marked as change-address key and directly returned to the keypool\n-  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n-  directly after `fundrawtransaction` did generate the same address as\n-  the change-output address.\n-\n-- Since 0.14, fundrawtransaction does reserve the change-output-key from\n-  the keypool by default (optional by setting  `reserveChangeKey`, default =\n-  `true`)\n-\n-- Users should also consider using `getrawchangeaddress()` in conjunction\n-  with `fundrawtransaction`'s `changeAddress` option.\n-\n-Unused mempool memory used by coincache\n-----------------------------------------\n-\n-- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n-  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n-  (controlled with the `-dbcache` option) borrows memory from the mempool\n-  when there is extra memory available. This may result in an increase in\n-  memory usage during IBD for those previously relying on only the `-dbcache`\n-  option to limit memory during that time.\n-\n-0.14.0 Change log\n+0.13.x Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n-behavior, not code moves, minor refactors and string updates. For convenience\n-in locating the code changes and accompanying discussion, both the pull request\n-and git merge commit are mentioned.\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n \n-### RPC and other APIs\n-- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n-- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n-- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n-- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n-- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n-- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n-- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n-- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n-- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n-- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n-- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n-- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n-- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n-- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n-- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n-- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n-- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n-- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n-- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n-- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n-- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n-- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n-- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n-- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n-- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n-- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n-\n-### Block and transaction handling\n-- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n-- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n-- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n-- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n-- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n-- #7730 `3c03dc2` Remove priority estimation (morcos)\n-- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n-- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n-- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n-- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n-- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n-- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n-- #9346 `b99a093` Batch construct batches (sipa)\n-- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n-- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n-- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n-- #9107 `7dac1e5` Safer modify new coins (morcos)\n-- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n-- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n-- #9138 `f646275` Improve fee estimation (morcos)\n-- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n-- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n-- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n-- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n-- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n-- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n-- #9371 `4a1dc35` Notify on removal (morcos)\n-- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n-- #8606 `e2a1a1e` Fix some locks (sipa)\n-- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n-- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n-- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n-- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n-- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n-- #9240 `a1dcf2e` Remove txConflicted (morcos)\n-- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n-- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n-- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n-- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n-- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n-- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n-\n-### P2P protocol and network code\n-- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n-- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n-- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n-- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n-- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n-- #8085 `6423116` Begin encapsulation (theuni)\n-- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n-- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n-- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n-- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n-- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n-- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n-- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n-- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n-- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n-- #8708 `c8c572f` have CConnman handle message sending (theuni)\n-- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n-- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n-- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n-- #8996 `ab914a6` Network activity toggle (luke-jr)\n-- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n-- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n-- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n-- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n-- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n-- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n-- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n-- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n-- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n-- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n-- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n-- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n-- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n-- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n-- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n-- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n-- #9609 `4966917` Fix remaining net assertions (theuni)\n-- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n-- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n-- #9698 `2447c10` Fix socket close race (theuni)\n-- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n-- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n-- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n-- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n-- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n-- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n-- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n-\n-### Validation\n-- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n-- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n-- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n-- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n-- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n-- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n-- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n-- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n-- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n-- #8524 `19b0f33` Precompute sighashes (sipa)\n-- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n-\n-### Build system\n-- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n-- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n-- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n-- #8566 `7b98895` Easy to use gitian building script (achow101)\n-- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n-- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n-- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n-- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n-- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n-- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n-- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n-- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n-- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n-- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n-- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n-- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n-- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n-- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n-- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n-- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n-- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n-- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n-- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n-- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n-- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n-- #9513 `bbf193f` Fix qt distdir builds (theuni)\n-- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n-- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n-- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n-- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n-- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n-- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n-- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n-- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n-- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n-- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n-- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n-\n-### GUI\n-- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n-- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n-- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n-- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n-- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n-- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n-- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n-- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n-- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n-- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n-- #8885 `b2fec4e` Fix ban from qt console (theuni)\n-- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n-- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n-- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n-- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n-- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n-- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n-- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n-- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n-- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n-- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n-- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n-- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n-- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n-- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n-- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n-- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n-- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n-- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n-- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n-- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n-- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n-- #9457 `123ea73` Select more files for translation (MarcoFalke)\n-- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n-- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n-- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n-- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n-- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n-- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n-- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n-- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n-\n-### Wallet\n-- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n-- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n-- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n-- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n-- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n-- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n-- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n-- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n-- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n-- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n-- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n-- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n-- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n-- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n-- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n-- #8753 `f8723d2` Locked memory manager (laanwj)\n-- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n-- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n-- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n-- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n-- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n-- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n-- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n-- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n-- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n-- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n-- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n-- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n-- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n-- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n-- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n-- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n-- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n-- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n-- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n-- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n-- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n-\n-### Tests and QA\n-- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n-- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n-- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n-- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n-- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n-- #8680 `666eaf0` Address Travis spurious failures (theuni)\n-- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n-- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n-- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n-- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n-- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n-- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n-- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n-- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n-- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n-- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n-- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n-- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n-- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n-- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n-- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n-- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n-- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n-- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n-- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n-- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n-- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n-- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n-- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n-- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n-- #9276 `ea33f19` Some minor testing cleanups (morcos)\n-- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n-- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n-- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n-- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n-- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n-- #9390,#9416 travis: make distdir (MarcoFalke)\n-- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n-- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n-- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n-- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n-- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n-- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n-- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n-- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n-- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n-- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n-- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n-- #9707 `b860915` Fix RPC failure testing (jnewbery)\n-- #9269 `43e8150` Align struct COrphan definition (sipa)\n-- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n-- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n-- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n-- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n-\n-### Documentation\n-- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n-- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n-- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n-- #9407 `041331e` Added missing colons in when running help command (anditto)\n-- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n-- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n-- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n-- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n-- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n-- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n-- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n-- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n-- #8624 `89de153` build: Mention curl (MarcoFalke)\n-- #8786 `9da7366` Mandatory copyright agreement (achow101)\n-- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n-- #9433 `caa2f10` Update the Windows build notes (droark)\n-- #8879 `f928050` Rework docs (MarcoFalke)\n-- #8887 `61d191f` Improve GitHub issue template (fanquake)\n-- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n-- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n-- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n-- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n-- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n-- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n-- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n-- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n-- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n-- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n-- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n-- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n-- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n-- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n-- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n-- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n-- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n-- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n-- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n-\n-### Miscellaneous\n-- #8274 `7a2d402` util: Update tinyformat (laanwj)\n-- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n-- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n-- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n-- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n-- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n-- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n-- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n-- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n-- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n-- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n-- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n-- #9303 `72bf1b3` Update comments in ctaes (sipa)\n-- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n-- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n-- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n-- #9531 `23281a4` Release notes for estimation changes  (morcos)\n-- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n-- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n-- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n-- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n-- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n-- #9070 `7b22e50` Lockedpool fixes (kazcw)\n-- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n-- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n-- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n-- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n-- #8613 `613bda4` LevelDB 1.19 (sipa)\n-- #9225 `5488514` Fix some benign races (TheBlueMatt)\n-- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n-- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n-- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n-- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n-- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n-- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n-- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n-- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n-- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n-- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n-- #9373,#9580 Various linearization script issues (droark)\n-- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n-- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n-- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n-- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n-- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n-- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n-- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n-- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n+[to be filled in at release]\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n-- accraze\n-- adlawren\n-- Alex Morcos\n-- Alexey Vesnin\n-- Amir Abrams\n-- Anders \u00d8yvind Urke-S\u00e6tre\n-- Anditto Heristyo\n-- Andrew Chow\n-- anduck\n-- Anthony Towns\n-- Brian Deery\n-- BtcDrak\n-- Chris Moore\n-- Chris Stewart\n-- Christian Barcenas\n-- Christian Decker\n-- Cory Fields\n-- crowning-\n-- CryptAxe\n-- CryptoVote\n-- Dagur Valberg Johannsson\n-- Daniel Cousens\n-- Daniel Kraft\n-- Derek Miller\n-- djpnewton\n-- Don Patterson\n-- Doug\n-- Douglas Roark\n-- Ethan Heilman\n-- fsb4000\n-- Gaurav Rana\n-- Geoffrey Tsui\n-- Greg Walker\n-- Gregory Maxwell\n-- Gregory Sanders\n-- Hampus Sj\u00f6berg\n-- isle2983\n-- Ivo van der Sangen\n-- James White\n-- Jameson Lopp\n-- Jeremy Rubin\n-- Jiaxing Wang\n-- jnewbery\n-- John Newbery\n-- Johnson Lau\n-- Jon Lund Steffensen\n-- Jonas Schnelli\n-- jonnynewbs\n-- Jorge Tim\u00f3n\n-- Justin Camarena\n-- Karl-Johan Alm\n-- Kaz Wesley\n-- kirit93\n-- Koki Takahashi\n-- Lauda\n-- leijurv\n-- lizhi\n-- Luke Dashjr\n-- maiiz\n-- MarcoFalke\n-- Marijn Stollenga\n-- Marty Jones\n-- Masahiko Hyuga\n-- Matt Corallo\n-- Matthew King\n-- matthias\n-- Micha\n-- Michael Ford\n-- Michael Rotarius\n-- Mitchell Cash\n-- mrbandrews\n-- mruddy\n-- Nicolas DORIER\n-- nomnombtc\n-- Patrick Strateman\n-- Pavel Jan\u00edk\n-- Pedro Branco\n-- Peter Todd\n-- Pieter Wuille\n-- poole\\_party\n-- practicalswift\n-- R E Broadley\n-- randy-waterhouse\n-- Richard Kiss\n-- Robert McLaughlin\n-- rodasmith\n-- Russell Yanofsky\n-- S. Matthew English\n-- Sev\n-- Spencer Lievens\n-- Stanislas Marion\n-- Steven\n-- Suhas Daftuar\n-- Thomas Snider\n-- UdjinM6\n-- unsystemizer\n-- whythat\n-- Will Binns\n-- Wladimir J. van der Laan\n-- wodry\n-- Zak Wilcox\n+[to be filled in at release]\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  },
  {
    "sha": "4d8e66017f6d6498df53935bc9a754d4317a2293",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDhlNjYwMTdmNmQ2NDk4ZGY1MzkzNWJjOWE3NTRkNDMxN2EyMjkz",
    "commit": {
      "author": {
        "name": "James Evans",
        "email": "keystrike@users.noreply.github.com",
        "date": "2017-03-20T08:19:41Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:07:56Z"
      },
      "message": "Trivial: Fix typo in help getrawtransaction RPC\n\nGithub-Pull: #10037\nRebased-From: 05a9f22358be27c08f7e164d05eeeaf0386073cb",
      "tree": {
        "sha": "8672d3416d99be69cabcabfd5c598dccfcf7e90b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8672d3416d99be69cabcabfd5c598dccfcf7e90b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d8e66017f6d6498df53935bc9a754d4317a2293",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d8e66017f6d6498df53935bc9a754d4317a2293",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d8e66017f6d6498df53935bc9a754d4317a2293",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d8e66017f6d6498df53935bc9a754d4317a2293/comments",
    "author": {
      "login": "keystrike",
      "id": 2402779,
      "node_id": "MDQ6VXNlcjI0MDI3Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2402779?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keystrike",
      "html_url": "https://github.com/keystrike",
      "followers_url": "https://api.github.com/users/keystrike/followers",
      "following_url": "https://api.github.com/users/keystrike/following{/other_user}",
      "gists_url": "https://api.github.com/users/keystrike/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keystrike/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keystrike/subscriptions",
      "organizations_url": "https://api.github.com/users/keystrike/orgs",
      "repos_url": "https://api.github.com/users/keystrike/repos",
      "events_url": "https://api.github.com/users/keystrike/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keystrike/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37bf0d5b381f95da833b3df8b76eca16a63a9010",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37bf0d5b381f95da833b3df8b76eca16a63a9010",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37bf0d5b381f95da833b3df8b76eca16a63a9010"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9ddeddd71b53c44b33a5ab00be82b138c02d0656",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d8e66017f6d6498df53935bc9a754d4317a2293/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d8e66017f6d6498df53935bc9a754d4317a2293/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=4d8e66017f6d6498df53935bc9a754d4317a2293",
        "patch": "@@ -139,7 +139,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n-            \"2. verbose       (bool, optional, default=false) If true, return a string, other return a json object\\n\"\n+            \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\""
      }
    ]
  },
  {
    "sha": "ddc2dd16121b10da129d363530a365361435a849",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGMyZGQxNjEyMWIxMGRhMTI5ZDM2MzUzMGEzNjUzNjE0MzVhODQ5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-03-23T00:34:27Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:08:24Z"
      },
      "message": "Ensure an item exists on the rpcconsole stack before adding\n\nEnsures that there is an item on the rpcconsole stack before adding something to the current stack so that a segmentation fault does not occur.\n\nGithub-Pull: #10060\nRebased-From: 4df76e270caa9d828179cae1c7a8918d6f91ec21",
      "tree": {
        "sha": "b6e6c8ec1701830b7b79a6c8894b5e27f4d6de91",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6e6c8ec1701830b7b79a6c8894b5e27f4d6de91"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddc2dd16121b10da129d363530a365361435a849",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc2dd16121b10da129d363530a365361435a849",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc2dd16121b10da129d363530a365361435a849",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc2dd16121b10da129d363530a365361435a849/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4d8e66017f6d6498df53935bc9a754d4317a2293",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d8e66017f6d6498df53935bc9a754d4317a2293",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4d8e66017f6d6498df53935bc9a754d4317a2293"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "001f19926474bd6620671e6798b120cdbb2fea05",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddc2dd16121b10da129d363530a365361435a849/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddc2dd16121b10da129d363530a365361435a849/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ddc2dd16121b10da129d363530a365361435a849",
        "patch": "@@ -175,6 +175,10 @@ bool RPCConsole::RPCParseCommandLine(std::string &strResult, const std::string &\n             nDepthInsideSensitive = 1;\n             filter_begin_pos = chpos;\n         }\n+        // Make sure stack is not empty before adding something\n+        if (stack.empty()) {\n+            stack.push_back(std::vector<std::string>());\n+        }\n         stack.back().push_back(strArg);\n     };\n "
      }
    ]
  },
  {
    "sha": "e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTYxMWQxMGI2N2RkOTliYWU4M2IzMmRlZGM5NzY3YjRjMmU0NGQy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-03-10T21:53:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:44:03Z"
      },
      "message": "depends: fix zlib build on osx\n\nzlib is sneaky and expects ar to be libtool on darwin.\n\nGithub-Pull: #9973\nRebased-From: c62475329e5e4c4c3f9570546e2b843288f48c61",
      "tree": {
        "sha": "1a9e66e49ebc8360d8aea33275ae212d4af9039d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a9e66e49ebc8360d8aea33275ae212d4af9039d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9611d10b67dd99bae83b32dedc9767b4c2e44d2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddc2dd16121b10da129d363530a365361435a849",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddc2dd16121b10da129d363530a365361435a849",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddc2dd16121b10da129d363530a365361435a849"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "589490800f8bd894538aef4ce19366d0bf78d2ca",
        "filename": "depends/packages/zlib.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9611d10b67dd99bae83b32dedc9767b4c2e44d2/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9611d10b67dd99bae83b32dedc9767b4c2e44d2/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
        "patch": "@@ -7,8 +7,10 @@ $(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca11\n define $(package)_set_vars\n $(package)_build_opts= CC=\"$($(package)_cc)\"\n $(package)_build_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n-$(package)_build_opts+=AR=\"$($(package)_ar)\"\n $(package)_build_opts+=RANLIB=\"$($(package)_ranlib)\"\n+$(package)_build_opts+=AR=\"$($(package)_ar)\"\n+$(package)_build_opts_darwin+=AR=\"$($(package)_libtool)\"\n+$(package)_build_opts_darwin+=ARFLAGS=\"-o\"\n endef\n \n define $(package)_config_cmds"
      }
    ]
  },
  {
    "sha": "fc3d7db5800f1d821ac233909f38bd342e3fe503",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzNkN2RiNTgwMGYxZDgyMWFjMjMzOTA5ZjM4YmQzNDJlM2ZlNTAz",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-03T18:33:32Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:44:08Z"
      },
      "message": "Optimize GetWitnessHash() for non-segwit transactions\n\nGithub-Pull: #9912\nRebased-From: 02c57b521a9e7afd4416cd027a8b397f202b08a8",
      "tree": {
        "sha": "76713053108fdcbf854f74c9d514555dd84763bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/76713053108fdcbf854f74c9d514555dd84763bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc3d7db5800f1d821ac233909f38bd342e3fe503",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3d7db5800f1d821ac233909f38bd342e3fe503",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc3d7db5800f1d821ac233909f38bd342e3fe503",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3d7db5800f1d821ac233909f38bd342e3fe503/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9611d10b67dd99bae83b32dedc9767b4c2e44d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9611d10b67dd99bae83b32dedc9767b4c2e44d2"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "28ef1fb4640db4d84293a82b52697f964ec40162",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc3d7db5800f1d821ac233909f38bd342e3fe503/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc3d7db5800f1d821ac233909f38bd342e3fe503/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=fc3d7db5800f1d821ac233909f38bd342e3fe503",
        "patch": "@@ -69,6 +69,9 @@ uint256 CTransaction::ComputeHash() const\n \n uint256 CTransaction::GetWitnessHash() const\n {\n+    if (!HasWitness()) {\n+        return GetHash();\n+    }\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n "
      }
    ]
  },
  {
    "sha": "142fbb2fec76adee001ffdabfe25ebc462560696",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNDJmYmIyZmVjNzZhZGVlMDAxZmZkYWJmZTI1ZWJjNDYyNTYwNjk2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-26T10:08:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:44:08Z"
      },
      "message": "rpc: Rename first named arg of createrawtransaction\n\nGithub-Pull: #10084\nRebased-From: fa558532192ca0bb519f811ee14df6037413b89f",
      "tree": {
        "sha": "ead7fc7d2df28e7a027d5e0d3a85eea189ad5612",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ead7fc7d2df28e7a027d5e0d3a85eea189ad5612"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/142fbb2fec76adee001ffdabfe25ebc462560696",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/142fbb2fec76adee001ffdabfe25ebc462560696",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/142fbb2fec76adee001ffdabfe25ebc462560696",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/142fbb2fec76adee001ffdabfe25ebc462560696/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc3d7db5800f1d821ac233909f38bd342e3fe503",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc3d7db5800f1d821ac233909f38bd342e3fe503",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc3d7db5800f1d821ac233909f38bd342e3fe503"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "56d14959192fbd93c6e06b299ae35dc8f4634596",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/142fbb2fec76adee001ffdabfe25ebc462560696/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/142fbb2fec76adee001ffdabfe25ebc462560696/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=142fbb2fec76adee001ffdabfe25ebc462560696",
        "patch": "@@ -83,7 +83,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockheader\", 1, \"verbose\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n     { \"getrawtransaction\", 1, \"verbose\" },\n-    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 0, \"inputs\" },\n     { \"createrawtransaction\", 1, \"outputs\" },\n     { \"createrawtransaction\", 2, \"locktime\" },\n     { \"signrawtransaction\", 1, \"prevtxs\" },"
      },
      {
        "sha": "0fabb9f5a882d5840ad568d6b522d4c6250297ff",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/142fbb2fec76adee001ffdabfe25ebc462560696/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/142fbb2fec76adee001ffdabfe25ebc462560696/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=142fbb2fec76adee001ffdabfe25ebc462560696",
        "patch": "@@ -361,7 +361,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"it is not stored in the wallet or transmitted to the network.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"inputs\\\"                (string, required) A json array of json objects\\n\"\n+            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n             \"     [\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",    (string, required) The transaction id\\n\"\n@@ -370,7 +370,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"       } \\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n-            \"2. \\\"outputs\\\"               (string, required) a json object with outputs\\n\"\n+            \"2. \\\"outputs\\\"               (object, required) a json object with outputs\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\": x.xxx,    (numeric or string, required) The key is the bitcoin address, the numeric value (can be string) is the \" + CURRENCY_UNIT + \" amount\\n\"\n             \"      \\\"data\\\": \\\"hex\\\"      (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n@@ -932,7 +932,7 @@ static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"transactions\",\"outputs\",\"locktime\"} },\n+    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\"} },\n     { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     false, {\"hexstring\",\"allowhighfees\"} },"
      }
    ]
  },
  {
    "sha": "fa7555b16a4e279f8f04c06f76a315e4c194ad79",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTc1NTViMTZhNGUyNzlmOGYwNGMwNmY3NmEzMTVlNGMxOTRhZDc5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:45:03Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2017-03-27T21:44:33Z"
      },
      "message": "doc: Add release notes for RPC createraw break",
      "tree": {
        "sha": "9956aae990f0ca752413aeb93e2979b567138248",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9956aae990f0ca752413aeb93e2979b567138248"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7555b16a4e279f8f04c06f76a315e4c194ad79",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7555b16a4e279f8f04c06f76a315e4c194ad79",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7555b16a4e279f8f04c06f76a315e4c194ad79",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7555b16a4e279f8f04c06f76a315e4c194ad79/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "142fbb2fec76adee001ffdabfe25ebc462560696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/142fbb2fec76adee001ffdabfe25ebc462560696",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/142fbb2fec76adee001ffdabfe25ebc462560696"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 8,
      "deletions": 1
    },
    "files": [
      {
        "sha": "41fb500f164bf68926aa2d1ebcb87c66a006f338",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7555b16a4e279f8f04c06f76a315e4c194ad79/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7555b16a4e279f8f04c06f76a315e4c194ad79/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=fa7555b16a4e279f8f04c06f76a315e4c194ad79",
        "patch": "@@ -36,7 +36,14 @@ Notable changes\n Example item\n -----------------------------------------------\n \n-0.13.x Change log\n+RPC changes\n+-----------\n+\n+The first positional argument of `createrawtransaction` was renamed.\n+This interface change breaks compatibility with 0.14.0, when the named\n+arguments functionality, introduced in 0.14.0, is used.\n+\n+0.14.x Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect"
      }
    ]
  },
  {
    "sha": "b768202695a090a48b77ce9873267d5ec29b8845",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNzY4MjAyNjk1YTA5MGE0OGI3N2NlOTg3MzI2N2Q1ZWMyOWI4ODQ1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-29T08:45:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-29T08:45:54Z"
      },
      "message": "Merge #10101: [0.14] backports\n\nfa7555b doc: Add release notes for RPC createraw break (MarcoFalke)\n142fbb2 rpc: Rename first named arg of createrawtransaction (MarcoFalke)\nfc3d7db Optimize GetWitnessHash() for non-segwit transactions (Suhas Daftuar)\ne9611d1 depends: fix zlib build on osx (Cory Fields)\nddc2dd1 Ensure an item exists on the rpcconsole stack before adding (Andrew Chow)\n4d8e660 Trivial: Fix typo in help getrawtransaction RPC (James Evans)\n\nTree-SHA512: 4351b07a7477315aafbbbc632503a000fb5832d1b3617c7aff78603f4c53f581599a0c9b098d39d35adb8aa58769cf80298baf2eea278c32a662ec8c8fba3ceb",
      "tree": {
        "sha": "9956aae990f0ca752413aeb93e2979b567138248",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9956aae990f0ca752413aeb93e2979b567138248"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b768202695a090a48b77ce9873267d5ec29b8845",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY23RCAAoJEHSBCwEjRsmmuP4H/3O/KnH9T3W34VyFrP1PgO1Z\nxjYOdFIZeIERFo016oKMzTeMKQiA739Rlf/bNMRdtF2cSFJCzd+QfHqD5aHfiqVZ\nQMnfTiluX4MxmctITQbbrzrYaq5P46++Ghqh1HEvBNOZvAMP/6KFAOlXYhmIxba9\n2LHDH8Lfvv3vtB7FYfsNSpFnv8OCptMII4XZx6V6KHEUMBzYUrvEJ7S/jddY3dSB\n2koQsqxqd9rUwn8b0rPTmwwI/yk/JHCse0HpI9IRU5fdlJaWhpRCjGFfKYs05O1T\nfsZO8AYeYWO9WMeIOsERCoBXWB45qk0OzuFe3sIWbsFWsusH3bPRxxnlo5iXf44=\n=f8r8\n-----END PGP SIGNATURE-----",
        "payload": "tree 9956aae990f0ca752413aeb93e2979b567138248\nparent 37bf0d5b381f95da833b3df8b76eca16a63a9010\nparent fa7555b16a4e279f8f04c06f76a315e4c194ad79\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1490777127 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490777154 +0200\n\nMerge #10101: [0.14] backports\n\nfa7555b doc: Add release notes for RPC createraw break (MarcoFalke)\n142fbb2 rpc: Rename first named arg of createrawtransaction (MarcoFalke)\nfc3d7db Optimize GetWitnessHash() for non-segwit transactions (Suhas Daftuar)\ne9611d1 depends: fix zlib build on osx (Cory Fields)\nddc2dd1 Ensure an item exists on the rpcconsole stack before adding (Andrew Chow)\n4d8e660 Trivial: Fix typo in help getrawtransaction RPC (James Evans)\n\nTree-SHA512: 4351b07a7477315aafbbbc632503a000fb5832d1b3617c7aff78603f4c53f581599a0c9b098d39d35adb8aa58769cf80298baf2eea278c32a662ec8c8fba3ceb\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b768202695a090a48b77ce9873267d5ec29b8845",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b768202695a090a48b77ce9873267d5ec29b8845",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b768202695a090a48b77ce9873267d5ec29b8845/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37bf0d5b381f95da833b3df8b76eca16a63a9010",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37bf0d5b381f95da833b3df8b76eca16a63a9010",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37bf0d5b381f95da833b3df8b76eca16a63a9010"
      },
      {
        "sha": "fa7555b16a4e279f8f04c06f76a315e4c194ad79",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7555b16a4e279f8f04c06f76a315e4c194ad79",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7555b16a4e279f8f04c06f76a315e4c194ad79"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 23,
      "deletions": 7
    },
    "files": [
      {
        "sha": "589490800f8bd894538aef4ce19366d0bf78d2ca",
        "filename": "depends/packages/zlib.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/depends/packages/zlib.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/depends/packages/zlib.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zlib.mk?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -7,8 +7,10 @@ $(package)_sha256_hash=c3e5e9fdd5004dcb542feda5ee4f0ff0744628baf8ed2dd5d66f8ca11\n define $(package)_set_vars\n $(package)_build_opts= CC=\"$($(package)_cc)\"\n $(package)_build_opts+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags) -fPIC\"\n-$(package)_build_opts+=AR=\"$($(package)_ar)\"\n $(package)_build_opts+=RANLIB=\"$($(package)_ranlib)\"\n+$(package)_build_opts+=AR=\"$($(package)_ar)\"\n+$(package)_build_opts_darwin+=AR=\"$($(package)_libtool)\"\n+$(package)_build_opts_darwin+=ARFLAGS=\"-o\"\n endef\n \n define $(package)_config_cmds"
      },
      {
        "sha": "41fb500f164bf68926aa2d1ebcb87c66a006f338",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -36,7 +36,14 @@ Notable changes\n Example item\n -----------------------------------------------\n \n-0.13.x Change log\n+RPC changes\n+-----------\n+\n+The first positional argument of `createrawtransaction` was renamed.\n+This interface change breaks compatibility with 0.14.0, when the named\n+arguments functionality, introduced in 0.14.0, is used.\n+\n+0.14.x Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect"
      },
      {
        "sha": "28ef1fb4640db4d84293a82b52697f964ec40162",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -69,6 +69,9 @@ uint256 CTransaction::ComputeHash() const\n \n uint256 CTransaction::GetWitnessHash() const\n {\n+    if (!HasWitness()) {\n+        return GetHash();\n+    }\n     return SerializeHash(*this, SER_GETHASH, 0);\n }\n "
      },
      {
        "sha": "001f19926474bd6620671e6798b120cdbb2fea05",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -175,6 +175,10 @@ bool RPCConsole::RPCParseCommandLine(std::string &strResult, const std::string &\n             nDepthInsideSensitive = 1;\n             filter_begin_pos = chpos;\n         }\n+        // Make sure stack is not empty before adding something\n+        if (stack.empty()) {\n+            stack.push_back(std::vector<std::string>());\n+        }\n         stack.back().push_back(strArg);\n     };\n "
      },
      {
        "sha": "56d14959192fbd93c6e06b299ae35dc8f4634596",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -83,7 +83,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockheader\", 1, \"verbose\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n     { \"getrawtransaction\", 1, \"verbose\" },\n-    { \"createrawtransaction\", 0, \"transactions\" },\n+    { \"createrawtransaction\", 0, \"inputs\" },\n     { \"createrawtransaction\", 1, \"outputs\" },\n     { \"createrawtransaction\", 2, \"locktime\" },\n     { \"signrawtransaction\", 1, \"prevtxs\" },"
      },
      {
        "sha": "0fabb9f5a882d5840ad568d6b522d4c6250297ff",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b768202695a090a48b77ce9873267d5ec29b8845/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b768202695a090a48b77ce9873267d5ec29b8845/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=b768202695a090a48b77ce9873267d5ec29b8845",
        "patch": "@@ -139,7 +139,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n \n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"      (string, required) The transaction id\\n\"\n-            \"2. verbose       (bool, optional, default=false) If true, return a string, other return a json object\\n\"\n+            \"2. verbose       (bool, optional, default=false) If false, return a string, otherwise return a json object\\n\"\n \n             \"\\nResult (if verbose is not set or set to false):\\n\"\n             \"\\\"data\\\"      (string) The serialized, hex-encoded data for 'txid'\\n\"\n@@ -361,7 +361,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"it is not stored in the wallet or transmitted to the network.\\n\"\n \n             \"\\nArguments:\\n\"\n-            \"1. \\\"inputs\\\"                (string, required) A json array of json objects\\n\"\n+            \"1. \\\"inputs\\\"                (array, required) A json array of json objects\\n\"\n             \"     [\\n\"\n             \"       {\\n\"\n             \"         \\\"txid\\\":\\\"id\\\",    (string, required) The transaction id\\n\"\n@@ -370,7 +370,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n             \"       } \\n\"\n             \"       ,...\\n\"\n             \"     ]\\n\"\n-            \"2. \\\"outputs\\\"               (string, required) a json object with outputs\\n\"\n+            \"2. \\\"outputs\\\"               (object, required) a json object with outputs\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\": x.xxx,    (numeric or string, required) The key is the bitcoin address, the numeric value (can be string) is the \" + CURRENCY_UNIT + \" amount\\n\"\n             \"      \\\"data\\\": \\\"hex\\\"      (string, required) The key is \\\"data\\\", the value is hex encoded data\\n\"\n@@ -932,7 +932,7 @@ static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"rawtransactions\",    \"getrawtransaction\",      &getrawtransaction,      true,  {\"txid\",\"verbose\"} },\n-    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"transactions\",\"outputs\",\"locktime\"} },\n+    { \"rawtransactions\",    \"createrawtransaction\",   &createrawtransaction,   true,  {\"inputs\",\"outputs\",\"locktime\"} },\n     { \"rawtransactions\",    \"decoderawtransaction\",   &decoderawtransaction,   true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"decodescript\",           &decodescript,           true,  {\"hexstring\"} },\n     { \"rawtransactions\",    \"sendrawtransaction\",     &sendrawtransaction,     false, {\"hexstring\",\"allowhighfees\"} },"
      }
    ]
  },
  {
    "sha": "b5c3440b053217afda5f03ee97b3835f02fd5290",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNWMzNDQwYjA1MzIxN2FmZGE1ZjAzZWU5N2IzODM1ZjAyZmQ1Mjkw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-06T16:16:06Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:05:33Z"
      },
      "message": "Mining: return early when block is almost full\n\nGithub-Pull: #9959\nRebased-From: eed816af6c68c0c67f5fc05472a3927db62f8a18",
      "tree": {
        "sha": "e722f71ff6740e3262e812dfa027bda2a0813635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e722f71ff6740e3262e812dfa027bda2a0813635"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c3440b053217afda5f03ee97b3835f02fd5290",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b768202695a090a48b77ce9873267d5ec29b8845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b768202695a090a48b77ce9873267d5ec29b8845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b768202695a090a48b77ce9873267d5ec29b8845"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "54d66dadd222001bf7b90598a8a364fb297a9470",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b5c3440b053217afda5f03ee97b3835f02fd5290/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b5c3440b053217afda5f03ee97b3835f02fd5290/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=b5c3440b053217afda5f03ee97b3835f02fd5290",
        "patch": "@@ -416,6 +416,13 @@ void BlockAssembler::addPackageTxs()\n \n     CTxMemPool::indexed_transaction_set::index<ancestor_score>::type::iterator mi = mempool.mapTx.get<ancestor_score>().begin();\n     CTxMemPool::txiter iter;\n+\n+    // Limit the number of attempts to add transactions to the block when it is\n+    // close to full; this is just a simple heuristic to finish quickly if the\n+    // mempool has a lot of entries.\n+    const int64_t MAX_CONSECUTIVE_FAILURES = 1000;\n+    int64_t nConsecutiveFailed = 0;\n+\n     while (mi != mempool.mapTx.get<ancestor_score>().end() || !mapModifiedTx.empty())\n     {\n         // First try to find a new transaction in mapTx to evaluate.\n@@ -477,6 +484,14 @@ void BlockAssembler::addPackageTxs()\n                 mapModifiedTx.get<ancestor_score>().erase(modit);\n                 failedTx.insert(iter);\n             }\n+\n+            ++nConsecutiveFailed;\n+\n+            if (nConsecutiveFailed > MAX_CONSECUTIVE_FAILURES && nBlockWeight >\n+                    nBlockMaxWeight - 4000) {\n+                // Give up if we're close to full and haven't succeeded in a while\n+                break;\n+            }\n             continue;\n         }\n \n@@ -497,6 +512,9 @@ void BlockAssembler::addPackageTxs()\n             continue;\n         }\n \n+        // This transaction will make it in; reset the failed counter.\n+        nConsecutiveFailed = 0;\n+\n         // Package can be added. Sort the entries in a valid order.\n         std::vector<CTxMemPool::txiter> sortedEntries;\n         SortForBlock(ancestors, iter, sortedEntries);"
      }
    ]
  },
  {
    "sha": "10028fb5551a210c71e63b065c53cb2a3dddba00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDAyOGZiNTU1MWEyMTBjNzFlNjNiMDY1YzUzY2IyYTNkZGRiYTAw",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-08T15:17:58Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:06:14Z"
      },
      "message": "Add benchmarking for CreateNewBlock\n\nGithub-Pull: #9959\nRebased-From: 42cd8c890fb2d65274f26edf95b6d52ac41fcab8",
      "tree": {
        "sha": "f3ef9f53e56676ad8383fdeb75c70cdcfa19555e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3ef9f53e56676ad8383fdeb75c70cdcfa19555e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/10028fb5551a210c71e63b065c53cb2a3dddba00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b5c3440b053217afda5f03ee97b3835f02fd5290",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b5c3440b053217afda5f03ee97b3835f02fd5290",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b5c3440b053217afda5f03ee97b3835f02fd5290"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "89863d3ec2a9429a31c29357e28e573452f25556",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/10028fb5551a210c71e63b065c53cb2a3dddba00/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/10028fb5551a210c71e63b065c53cb2a3dddba00/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=10028fb5551a210c71e63b065c53cb2a3dddba00",
        "patch": "@@ -129,6 +129,8 @@ void BlockAssembler::resetBlock()\n \n std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n {\n+    int64_t nTimeStart = GetTimeMicros();\n+\n     resetBlock();\n \n     pblocktemplate.reset(new CBlockTemplate());\n@@ -170,6 +172,8 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     addPriorityTxs();\n     addPackageTxs();\n \n+    int64_t nTime1 = GetTimeMicros();\n+\n     nLastBlockTx = nBlockTx;\n     nLastBlockSize = nBlockSize;\n     nLastBlockWeight = nBlockWeight;\n@@ -200,6 +204,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n         throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, FormatStateMessage(state)));\n     }\n+    int64_t nTime2 = GetTimeMicros();\n+\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms, validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }"
      }
    ]
  },
  {
    "sha": "a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMjk2YzYwMDlmZmM2NGUwNDA5YWFkNzkxNDQ5ZjlmN2ZjN2JhNzk0",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-08T15:56:29Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-03-30T19:18:02Z"
      },
      "message": "Update benchmarking with package statistics\n\nGithub-Pull: #9959\nRebased-From: 011124a2b278c5a60bad5f1b0b4abbf7ebc95aa0",
      "tree": {
        "sha": "0bb27c64bb5488eb027676c7f18e6b7e0de33b42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bb27c64bb5488eb027676c7f18e6b7e0de33b42"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a296c6009ffc64e0409aad791449f9f7fc7ba794",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "10028fb5551a210c71e63b065c53cb2a3dddba00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/10028fb5551a210c71e63b065c53cb2a3dddba00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/10028fb5551a210c71e63b065c53cb2a3dddba00"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "a12dcec2ce7e3706815758cc8d987db3098a68f1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "patch": "@@ -170,7 +170,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n     addPriorityTxs();\n-    addPackageTxs();\n+    int nPackagesSelected = 0;\n+    int nDescendantsUpdated = 0;\n+    addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n \n     int64_t nTime1 = GetTimeMicros();\n \n@@ -206,7 +208,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     }\n     int64_t nTime2 = GetTimeMicros();\n \n-    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms, validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }\n@@ -347,16 +349,18 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     }\n }\n \n-void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n+int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n+    int nDescendantsUpdated = 0;\n     BOOST_FOREACH(const CTxMemPool::txiter it, alreadyAdded) {\n         CTxMemPool::setEntries descendants;\n         mempool.CalculateDescendants(it, descendants);\n         // Insert all descendants (not yet in block) into the modified set\n         BOOST_FOREACH(CTxMemPool::txiter desc, descendants) {\n             if (alreadyAdded.count(desc))\n                 continue;\n+            ++nDescendantsUpdated;\n             modtxiter mit = mapModifiedTx.find(desc);\n             if (mit == mapModifiedTx.end()) {\n                 CTxMemPoolModifiedEntry modEntry(desc);\n@@ -369,6 +373,7 @@ void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alread\n             }\n         }\n     }\n+    return nDescendantsUpdated;\n }\n \n // Skip entries in mapTx that are already in a block or are present\n@@ -409,7 +414,7 @@ void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, CTxMemP\n // Each time through the loop, we compare the best transaction in\n // mapModifiedTxs with the next transaction in the mempool to decide what\n // transaction package to work on next.\n-void BlockAssembler::addPackageTxs()\n+void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated)\n {\n     // mapModifiedTx will store sorted packages after they are modified\n     // because some of their txs are already in the block\n@@ -532,8 +537,10 @@ void BlockAssembler::addPackageTxs()\n             mapModifiedTx.erase(sortedEntries[i]);\n         }\n \n+        ++nPackagesSelected;\n+\n         // Update transactions that depend on each of these\n-        UpdatePackagesForAdded(ancestors, mapModifiedTx);\n+        nDescendantsUpdated += UpdatePackagesForAdded(ancestors, mapModifiedTx);\n     }\n }\n "
      },
      {
        "sha": "9ae2874927c610fa1ac86cdfb50a31e3437407f0",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a296c6009ffc64e0409aad791449f9f7fc7ba794/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "patch": "@@ -177,8 +177,10 @@ class BlockAssembler\n     // Methods for how to add transactions to a block.\n     /** Add transactions based on tx \"priority\" */\n     void addPriorityTxs();\n-    /** Add transactions based on feerate including unconfirmed ancestors */\n-    void addPackageTxs();\n+    /** Add transactions based on feerate including unconfirmed ancestors\n+      * Increments nPackagesSelected / nDescendantsUpdated with corresponding\n+      * statistics from the package selection (for logging statistics). */\n+    void addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated);\n \n     // helper function for addPriorityTxs\n     /** Test if tx will still \"fit\" in the block */\n@@ -202,8 +204,9 @@ class BlockAssembler\n     /** Sort the package in an order that is valid to appear in a block */\n     void SortForBlock(const CTxMemPool::setEntries& package, CTxMemPool::txiter entry, std::vector<CTxMemPool::txiter>& sortedEntries);\n     /** Add descendants of given transactions to mapModifiedTx with ancestor\n-      * state updated assuming given transactions are inBlock. */\n-    void UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n+      * state updated assuming given transactions are inBlock. Returns number\n+      * of updated descendants. */\n+    int UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n };\n \n /** Modify the extranonce in a block */"
      }
    ]
  },
  {
    "sha": "04c21afcdf0ed664c1fddff17d066cc2de552b54",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNGMyMWFmY2RmMGVkNjY0YzFmZGRmZjE3ZDA2NmNjMmRlNTUyYjU0",
    "commit": {
      "author": {
        "name": "Awemany",
        "email": "awemany@protonmail.com",
        "date": "2017-03-28T12:52:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T09:47:50Z"
      },
      "message": "bitcoin-tx: Fix missing range check\n\nThe number of arguments is not checked MutateTxAddOutAddr(..), meaning\nthat\n\n> ./bitcoin-tx -create outaddr=\n\naccessed the vStrInputParts vector beyond its bounds.\n\nThis also includes work by jnewbery to check the inputs for\nMutateTxAddPubKey()\n\nGithub-Pull: #10130\nRebased-From: eb66bf9bdd5ae20c546314eb2c494ac09929970f",
      "tree": {
        "sha": "8b07ab28f841dfc1329bae050620b92b67baccb5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8b07ab28f841dfc1329bae050620b92b67baccb5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04c21afcdf0ed664c1fddff17d066cc2de552b54",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY3iXGAAoJEHSBCwEjRsmm5b4H/1YTMiHHZKxZKDwTJ7ZhLoXM\n363f2Mp27Vo+/LqDovVV16vWJCIZopnDDfX5csNNLvRufx6k3Zqzc3/v4CSpGoh8\nQbF/XRzHoG+gSr1zQUp7B8yEqWU5J3wSTsCAx2NMyDZGk4hDFtv+nNkXgVBPo5DA\nt3UBHMuE2CsaOj02bwyM1n1IxEO/7exwk0R7P9Oz91LZFMmyVV8JayoqAhpge3wI\nMYPud2LnHweElV1hUK7kAMj07lp/eRn5FL7XjV/qhZcQy3qS9szftQxb4efsorQ1\nGsexu96HPpimOi93r66RRplO+HEEWO+jZ1YXgJml+6OAVIu2NyA2iNyiRwHkRQE=\n=mA3Q\n-----END PGP SIGNATURE-----",
        "payload": "tree 8b07ab28f841dfc1329bae050620b92b67baccb5\nparent b768202695a090a48b77ce9873267d5ec29b8845\nauthor Awemany <awemany@protonmail.com> 1490705579 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490953670 +0200\n\nbitcoin-tx: Fix missing range check\n\nThe number of arguments is not checked MutateTxAddOutAddr(..), meaning\nthat\n\n> ./bitcoin-tx -create outaddr=\n\naccessed the vStrInputParts vector beyond its bounds.\n\nThis also includes work by jnewbery to check the inputs for\nMutateTxAddPubKey()\n\nGithub-Pull: #10130\nRebased-From: eb66bf9bdd5ae20c546314eb2c494ac09929970f\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04c21afcdf0ed664c1fddff17d066cc2de552b54",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04c21afcdf0ed664c1fddff17d066cc2de552b54",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04c21afcdf0ed664c1fddff17d066cc2de552b54/comments",
    "author": {
      "login": "awemany",
      "id": 13838274,
      "node_id": "MDQ6VXNlcjEzODM4Mjc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/13838274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/awemany",
      "html_url": "https://github.com/awemany",
      "followers_url": "https://api.github.com/users/awemany/followers",
      "following_url": "https://api.github.com/users/awemany/following{/other_user}",
      "gists_url": "https://api.github.com/users/awemany/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/awemany/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/awemany/subscriptions",
      "organizations_url": "https://api.github.com/users/awemany/orgs",
      "repos_url": "https://api.github.com/users/awemany/repos",
      "events_url": "https://api.github.com/users/awemany/events{/privacy}",
      "received_events_url": "https://api.github.com/users/awemany/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b768202695a090a48b77ce9873267d5ec29b8845",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b768202695a090a48b77ce9873267d5ec29b8845",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b768202695a090a48b77ce9873267d5ec29b8845"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 6,
      "deletions": 0
    },
    "files": [
      {
        "sha": "43fa3fdfb969d267c3c0b42dcc92c9e77f9a426a",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04c21afcdf0ed664c1fddff17d066cc2de552b54/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04c21afcdf0ed664c1fddff17d066cc2de552b54/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=04c21afcdf0ed664c1fddff17d066cc2de552b54",
        "patch": "@@ -242,6 +242,9 @@ static void MutateTxAddOutAddr(CMutableTransaction& tx, const std::string& strIn\n     std::vector<std::string> vStrInputParts;\n     boost::split(vStrInputParts, strInput, boost::is_any_of(\":\"));\n \n+    if (vStrInputParts.size() != 2)\n+        throw std::runtime_error(\"TX output missing or too many separators\");\n+\n     // Extract and validate VALUE\n     CAmount value = ExtractAndValidateValue(vStrInputParts[0]);\n \n@@ -264,6 +267,9 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     std::vector<std::string> vStrInputParts;\n     boost::split(vStrInputParts, strInput, boost::is_any_of(\":\"));\n \n+    if (vStrInputParts.size() < 2 || vStrInputParts.size() > 3)\n+        throw std::runtime_error(\"TX output missing or too many separators\");\n+\n     // Extract and validate VALUE\n     CAmount value = ExtractAndValidateValue(vStrInputParts[0]);\n "
      }
    ]
  },
  {
    "sha": "ecc523288cc655089d83f168e81ae1f249a3ae88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplY2M1MjMyODhjYzY1NTA4OWQ4M2YxNjhlODFhZTFmMjQ5YTNhZTg4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-29T14:20:10Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T09:47:50Z"
      },
      "message": "Check stderr when testing bitcoin-tx\n\nGithub-Pull: #10130\nRebased-From: 21704f6334d2a4bd140c6e3260c4bfa3f3157bad",
      "tree": {
        "sha": "0362381a38e2d7e48e50a877501703eddc9fd8e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0362381a38e2d7e48e50a877501703eddc9fd8e1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ecc523288cc655089d83f168e81ae1f249a3ae88",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY3iXGAAoJEHSBCwEjRsmmF34IAIzAYWsAEgcrOkZNKz+9Unvf\nqx1DY+wuBGxGE6hH7nEswATssGyBf3dMFPEC5XiWtxUMpeDZkC4uXDKkSRgL20MQ\nOYCVjrAW5c9dbwA90IAHsRL6F5d4FoRMHCNyBty2aWvBQ7BxJu9c/MTjHs5Yp3Rw\nnXkLPlhY6mBLsTDTZk/XhO/MyM7ttvNrpSpMHEo2rWt0ChAU15xXexomP4wn8Hsy\nqoiFBUGQIo5k7d6Agl+tSeZn8nKFF/Ro8zE8lpcwui3ddK7/TylsAEVkJOJg10au\nT9Tcz2s35gDkk/+EFweJv8uWBqXH9R2QmopBBlcqzyFLpjadqmcjCJkY/jbwGn8=\n=Sgd2\n-----END PGP SIGNATURE-----",
        "payload": "tree 0362381a38e2d7e48e50a877501703eddc9fd8e1\nparent 04c21afcdf0ed664c1fddff17d066cc2de552b54\nauthor John Newbery <john@johnnewbery.com> 1490797210 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490953670 +0200\n\nCheck stderr when testing bitcoin-tx\n\nGithub-Pull: #10130\nRebased-From: 21704f6334d2a4bd140c6e3260c4bfa3f3157bad\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc523288cc655089d83f168e81ae1f249a3ae88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc523288cc655089d83f168e81ae1f249a3ae88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc523288cc655089d83f168e81ae1f249a3ae88/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04c21afcdf0ed664c1fddff17d066cc2de552b54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04c21afcdf0ed664c1fddff17d066cc2de552b54",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04c21afcdf0ed664c1fddff17d066cc2de552b54"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7ea15dfddcdda15b500823b255326613a6a018ef",
        "filename": "src/test/bctest.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecc523288cc655089d83f168e81ae1f249a3ae88/src/test/bctest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecc523288cc655089d83f168e81ae1f249a3ae88/src/test/bctest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bctest.py?ref=ecc523288cc655089d83f168e81ae1f249a3ae88",
        "patch": "@@ -98,6 +98,18 @@ def bctest(testDir, testObj, exeext):\n         logging.error(\"Return code mismatch for \" + outputFn)\n         raise Exception\n \n+    if \"error_txt\" in testObj:\n+        want_error = testObj[\"error_txt\"]\n+        # Compare error text\n+        # TODO: ideally, we'd compare the strings exactly and also assert\n+        # That stderr is empty if no errors are expected. However, bitcoin-tx\n+        # emits DISPLAY errors when running as a windows application on\n+        # linux through wine. Just assert that the expected error text appears\n+        # somewhere in stderr.\n+        if want_error not in outs[1]:\n+            logging.error(\"Error mismatch:\\n\" + \"Expected: \" + want_error + \"\\nReceived: \" + outs[1].rstrip())\n+            raise Exception\n+\n def bctester(testDir, input_basename, buildenv):\n     \"\"\" Loads and parses the input file, runs all tests and reports results\"\"\"\n     input_filename = testDir + \"/\" + input_basename"
      },
      {
        "sha": "2a0a8f1a99d8338977709e84e1cb0ca84b00a465",
        "filename": "src/test/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ecc523288cc655089d83f168e81ae1f249a3ae88/src/test/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ecc523288cc655089d83f168e81ae1f249a3ae88/src/test/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/bitcoin-util-test.json?ref=ecc523288cc655089d83f168e81ae1f249a3ae88",
        "patch": "@@ -42,6 +42,7 @@\n     \"args\": [\"-\", \"delin=31\"],\n     \"input\": \"tx394b54bb.hex\",\n     \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX input index '31'\",\n     \"description\": \"Attempts to delete an input with a bad index from a transaction. Expected to fail.\"\n   },\n   { \"exec\": \"./bitcoin-tx\",\n@@ -60,6 +61,7 @@\n     \"args\": [\"-\", \"delout=2\"],\n     \"input\": \"tx394b54bb.hex\",\n     \"return_code\": 1,\n+    \"error_txt\": \"error: Invalid TX output index '2'\",\n     \"description\": \"Attempts to delete an output with a bad index from a transaction. Expected to fail.\"\n   },\n   { \"exec\": \"./bitcoin-tx\",\n@@ -233,6 +235,7 @@\n      \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n      \"outdata=4:badhexdata\"],\n     \"return_code\": 1,\n+    \"error_txt\": \"error: invalid TX output data\",\n     \"description\": \"Attempts to create a new transaction with one input and an output with malformed hex data. Expected to fail\"\n   },\n   { \"exec\": \"./bitcoin-tx\",\n@@ -241,6 +244,7 @@\n      \"in=5897de6bd6027a475eadd57019d4e6872c396d0716c4875a5f1a6fcfdf385c1f:0\",\n      \"outdata=badhexdata\"],\n     \"return_code\": 1,\n+    \"error_txt\": \"error: invalid TX output data\",\n     \"description\": \"Attempts to create a new transaction with one input and an output with no value and malformed hex data. Expected to fail\"\n   },\n   { \"exec\": \"./bitcoin-tx\","
      }
    ]
  },
  {
    "sha": "f59e3dfc599ca9a30a1189e9a5bb033923498af2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNTllM2RmYzU5OWNhOWEzMGExMTg5ZTlhNWJiMDMzOTIzNDk4YWYy",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-03-29T14:53:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T09:47:50Z"
      },
      "message": "Add tests for bitcoin-tx input checking\n\nGithub-Pull: #10130\nRebased-From: 19ecd1e2e13514c8a92a2a4337c2568c3d5d13e5",
      "tree": {
        "sha": "6c9765a46d3995ef70e5088c2ce745958a155739",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c9765a46d3995ef70e5088c2ce745958a155739"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f59e3dfc599ca9a30a1189e9a5bb033923498af2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY3iXGAAoJEHSBCwEjRsmmen8IAJ69FTFD3zyBf9RQZs3lOuQJ\nVVkyLB8wdzzyEzqXSSGb0MOmbcVYLigHngy16tO4vLbFP3p0/aTDiuYyJI6Fxs/M\n55OKu41MGSyFGVrSN+ntVRxG/PKRCy7I2bRkV/Hn/vQavQ0sLVvQ9HXinE3Qgh34\nDipqWKi4wLsKCji1mwZO4V2yD3lkrbrAVYkpBzS5giHNcbKrw0i7nfDMvjJzvIW0\nk8pY3jshQ9TLNwo2rKUazWZqVmtx7zn6nD/xwfTg8nk3HEgEeg9X28x8w8sxjnR/\naCIXQnbcQ7SDyid/Lt6jBE4cmrTU3VuC9iNDzcmWWftZN9sCQiupiHYMRX+HcW8=\n=rB3h\n-----END PGP SIGNATURE-----",
        "payload": "tree 6c9765a46d3995ef70e5088c2ce745958a155739\nparent ecc523288cc655089d83f168e81ae1f249a3ae88\nauthor John Newbery <john@johnnewbery.com> 1490799191 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490953670 +0200\n\nAdd tests for bitcoin-tx input checking\n\nGithub-Pull: #10130\nRebased-From: 19ecd1e2e13514c8a92a2a4337c2568c3d5d13e5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f59e3dfc599ca9a30a1189e9a5bb033923498af2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f59e3dfc599ca9a30a1189e9a5bb033923498af2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f59e3dfc599ca9a30a1189e9a5bb033923498af2/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ecc523288cc655089d83f168e81ae1f249a3ae88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ecc523288cc655089d83f168e81ae1f249a3ae88",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ecc523288cc655089d83f168e81ae1f249a3ae88"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 32,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b61a4f7f8f9469d1c32c2a4fdfadd5012d3a8f01",
        "filename": "src/test/data/bitcoin-util-test.json",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f59e3dfc599ca9a30a1189e9a5bb033923498af2/src/test/data/bitcoin-util-test.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f59e3dfc599ca9a30a1189e9a5bb033923498af2/src/test/data/bitcoin-util-test.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/bitcoin-util-test.json?ref=f59e3dfc599ca9a30a1189e9a5bb033923498af2",
        "patch": "@@ -76,6 +76,38 @@\n     \"output_cmp\": \"tt-locktime317000-out.json\",\n     \"description\": \"Adds an nlocktime to a transaction (output in json)\"\n   },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"outaddr=1\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: TX output missing or too many separators\",\n+    \"description\": \"Malformed outaddr argument (no address specified). Expected to fail.\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"outaddr=1:13tuJJDR2RgArmgfv6JScSdreahzgc4T6o:garbage\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: TX output missing or too many separators\",\n+    \"description\": \"Malformed outaddr argument (too many separators). Expected to fail.\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"outpubkey=0\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: TX output missing or too many separators\",\n+    \"description\": \"Malformed outpubkey argument (no pubkey specified). Expected to fail.\"\n+  },\n+  { \"exec\": \"./bitcoin-tx\",\n+    \"args\":\n+    [\"-create\",\n+     \"outpubkey=0:02a5613bd857b7048924264d1e70e08fb2a7e6527d32b7ab1bb993ac59964ff397:W:non53nse\"],\n+    \"return_code\": 1,\n+    \"error_txt\": \"error: TX output missing or too many separators\",\n+    \"description\": \"Malformed outpubkey argument (too many separators). Expected to fail.\"\n+  },\n   { \"exec\": \"./bitcoin-tx\",\n     \"args\":\n     [\"-create\","
      }
    ]
  },
  {
    "sha": "e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGM5YTkwZmU5YWE3MDJkMmUxZjdkOTMyZmMyOWE5YzlmMjNmZDRh",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-30T07:37:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T09:48:59Z"
      },
      "message": "util: Work around (virtual) memory exhaustion on 32-bit w/ glibc\n\nglibc-specific: On 32-bit systems set the number of arenas to 1. By\ndefault, since glibc 2.10, the C library will create up to two heap\narenas per core. This is known to cause excessive virtual address space\nusage in our usage. Work around it by setting the maximum number of\narenas to 1.\n\nGithub-Pull: #10120\nRebased-From: 625488ace5c41ccba1b68323a72588000782f820",
      "tree": {
        "sha": "5f97709bfea79eb0c829cb7b77ae48d060cb8c89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5f97709bfea79eb0c829cb7b77ae48d060cb8c89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY3iYLAAoJEHSBCwEjRsmmImsIAKjV/l+3cKGbuhnIYvChTe5+\nGfJ5L8s+dGOOrrydbHg7eL2t2VdFCFPmQLnXAmrw8ghqzJuXON/5dKikt5s1hg9F\nRBPQqwADNkWPclqFlT6HqTMvhRVDVY3ti7Et4CgNPQ3hbJ2GlYK3wn5dFHKf/jh+\n1DhcBUEX9nslhkboDAuqZgsDFhQuMsnNzFBSsi6t7DKswRpJo/YRb8hQinjk50/T\nUDj+OIEYle7lyikX53SwdiF2EIx7v1eRN+BMbgAcADLm36WHU7WEWh5tyiYpKy2F\nLkizKC9RPYPDGcGlVFDcevUHJwpZRMc43n8X9v/9uUlsr+HblcS4odrI0tm/RFA=\n=gKz8\n-----END PGP SIGNATURE-----",
        "payload": "tree 5f97709bfea79eb0c829cb7b77ae48d060cb8c89\nparent f59e3dfc599ca9a30a1189e9a5bb033923498af2\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1490859467 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490953739 +0200\n\nutil: Work around (virtual) memory exhaustion on 32-bit w/ glibc\n\nglibc-specific: On 32-bit systems set the number of arenas to 1. By\ndefault, since glibc 2.10, the C library will create up to two heap\narenas per core. This is known to cause excessive virtual address space\nusage in our usage. Work around it by setting the maximum number of\narenas to 1.\n\nGithub-Pull: #10120\nRebased-From: 625488ace5c41ccba1b68323a72588000782f820\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f59e3dfc599ca9a30a1189e9a5bb033923498af2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f59e3dfc599ca9a30a1189e9a5bb033923498af2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f59e3dfc599ca9a30a1189e9a5bb033923498af2"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "da42a0a1603fb503a3960c55de721a07d7e6f0f6",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
        "patch": "@@ -557,6 +557,14 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n+AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ mallopt(M_ARENA_MAX, 1); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOPT_ARENA_MAX, 1,[Define this symbol if you have mallopt with M_ARENA_MAX]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n AC_MSG_CHECKING([for visibility attribute])\n AC_LINK_IFELSE([AC_LANG_SOURCE([\n   int foo_def( void ) __attribute__((visibility(\"default\")));"
      },
      {
        "sha": "6f812d9104e907c2e0672d2afaca7491464b21b2",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
        "patch": "@@ -72,6 +72,10 @@\n #include <sys/prctl.h>\n #endif\n \n+#ifdef HAVE_MALLOPT_ARENA_MAX\n+#include <malloc.h>\n+#endif\n+\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/join.hpp>\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n@@ -792,6 +796,16 @@ void RenameThread(const char* name)\n \n void SetupEnvironment()\n {\n+#ifdef HAVE_MALLOPT_ARENA_MAX\n+    // glibc-specific: On 32-bit systems set the number of arenas to 1.\n+    // By default, since glibc 2.10, the C library will create up to two heap\n+    // arenas per core. This is known to cause excessive virtual address space\n+    // usage in our usage. Work around it by setting the maximum number of\n+    // arenas to 1.\n+    if (sizeof(void*) == 4) {\n+        mallopt(M_ARENA_MAX, 1);\n+    }\n+#endif\n     // On most POSIX systems (e.g. Linux, but not BSD) the environment's locale\n     // may be invalid, in which case the \"C\" locale is used as fallback.\n #if !defined(WIN32) && !defined(MAC_OSX) && !defined(__FreeBSD__) && !defined(__OpenBSD__)"
      }
    ]
  },
  {
    "sha": "fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTZiNWZjMWNjZDUwYzAxYTc4N2FkYmMxNWY5YTRhZjYwZjE0NzM1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T10:06:36Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T10:06:56Z"
      },
      "message": "Merge #10127: [0.14 backport] Mining: Prevent slowdown in CreateNewBlock on large mempools\n\na296c60 Update benchmarking with package statistics (Suhas Daftuar)\n10028fb Add benchmarking for CreateNewBlock (Suhas Daftuar)\nb5c3440 Mining: return early when block is almost full (Suhas Daftuar)\n\nTree-SHA512: 7c39d03a778abe00412743958981a1a55d22fc1843c9a3aef7a56506622e6f5d6b8962c586a339b6031e1ee4815d6981351cf527e8fbe5b265824c81d6c7199d",
      "tree": {
        "sha": "ead53934f4e43716bee444b7e41fe03042fbdede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ead53934f4e43716bee444b7e41fe03042fbdede"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY3ipAAAoJEHSBCwEjRsmmEY4IALGYj/xXEzx4IuHWdc5JuaPw\nFRtp60Fcc1zPC0zTPioCusZol7Q1z058hAiadDkgaDUb7PttIE8NrTWIu4VpAJsR\nDO7H2sClhWkIb4ba/LGX3wnJ6E/C2i/msg16jCe9Ikh8HU0a8CEksFibvuq2FA1w\nVsxZaJHrfd9b5dc05Bkwbmc+oHH/gfXn7+bGfsXa3NV1TlxNIsL7KU+HbzyMtb3f\ns6QyQQmyov7fiM3BH+yjK5sYKRivB0yB4OZf94Z0eKNekEbBzzt4fqsJxOJhcKeP\ne3GlU4fxo2T0Rp9Go6TYhblBXv09uPcYJ9pnapEBEk++2oagOs2lg1AgzNKUS+E=\n=22+n\n-----END PGP SIGNATURE-----",
        "payload": "tree ead53934f4e43716bee444b7e41fe03042fbdede\nparent e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a\nparent a296c6009ffc64e0409aad791449f9f7fc7ba794\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1490954796 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490954816 +0200\n\nMerge #10127: [0.14 backport] Mining: Prevent slowdown in CreateNewBlock on large mempools\n\na296c60 Update benchmarking with package statistics (Suhas Daftuar)\n10028fb Add benchmarking for CreateNewBlock (Suhas Daftuar)\nb5c3440 Mining: return early when block is almost full (Suhas Daftuar)\n\nTree-SHA512: 7c39d03a778abe00412743958981a1a55d22fc1843c9a3aef7a56506622e6f5d6b8962c586a339b6031e1ee4815d6981351cf527e8fbe5b265824c81d6c7199d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4c9a90fe9aa702d2e1f7d932fc29a9c9f23fd4a"
      },
      {
        "sha": "a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a296c6009ffc64e0409aad791449f9f7fc7ba794",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a296c6009ffc64e0409aad791449f9f7fc7ba794"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 43,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a12dcec2ce7e3706815758cc8d987db3098a68f1",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 4,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
        "patch": "@@ -129,6 +129,8 @@ void BlockAssembler::resetBlock()\n \n std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n {\n+    int64_t nTimeStart = GetTimeMicros();\n+\n     resetBlock();\n \n     pblocktemplate.reset(new CBlockTemplate());\n@@ -168,7 +170,11 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n     addPriorityTxs();\n-    addPackageTxs();\n+    int nPackagesSelected = 0;\n+    int nDescendantsUpdated = 0;\n+    addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n+\n+    int64_t nTime1 = GetTimeMicros();\n \n     nLastBlockTx = nBlockTx;\n     nLastBlockSize = nBlockSize;\n@@ -200,6 +206,9 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     if (!TestBlockValidity(state, chainparams, *pblock, pindexPrev, false, false)) {\n         throw std::runtime_error(strprintf(\"%s: TestBlockValidity failed: %s\", __func__, FormatStateMessage(state)));\n     }\n+    int64_t nTime2 = GetTimeMicros();\n+\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }\n@@ -340,16 +349,18 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n     }\n }\n \n-void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n+int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded,\n         indexed_modified_transaction_set &mapModifiedTx)\n {\n+    int nDescendantsUpdated = 0;\n     BOOST_FOREACH(const CTxMemPool::txiter it, alreadyAdded) {\n         CTxMemPool::setEntries descendants;\n         mempool.CalculateDescendants(it, descendants);\n         // Insert all descendants (not yet in block) into the modified set\n         BOOST_FOREACH(CTxMemPool::txiter desc, descendants) {\n             if (alreadyAdded.count(desc))\n                 continue;\n+            ++nDescendantsUpdated;\n             modtxiter mit = mapModifiedTx.find(desc);\n             if (mit == mapModifiedTx.end()) {\n                 CTxMemPoolModifiedEntry modEntry(desc);\n@@ -362,6 +373,7 @@ void BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& alread\n             }\n         }\n     }\n+    return nDescendantsUpdated;\n }\n \n // Skip entries in mapTx that are already in a block or are present\n@@ -402,7 +414,7 @@ void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, CTxMemP\n // Each time through the loop, we compare the best transaction in\n // mapModifiedTxs with the next transaction in the mempool to decide what\n // transaction package to work on next.\n-void BlockAssembler::addPackageTxs()\n+void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated)\n {\n     // mapModifiedTx will store sorted packages after they are modified\n     // because some of their txs are already in the block\n@@ -416,6 +428,13 @@ void BlockAssembler::addPackageTxs()\n \n     CTxMemPool::indexed_transaction_set::index<ancestor_score>::type::iterator mi = mempool.mapTx.get<ancestor_score>().begin();\n     CTxMemPool::txiter iter;\n+\n+    // Limit the number of attempts to add transactions to the block when it is\n+    // close to full; this is just a simple heuristic to finish quickly if the\n+    // mempool has a lot of entries.\n+    const int64_t MAX_CONSECUTIVE_FAILURES = 1000;\n+    int64_t nConsecutiveFailed = 0;\n+\n     while (mi != mempool.mapTx.get<ancestor_score>().end() || !mapModifiedTx.empty())\n     {\n         // First try to find a new transaction in mapTx to evaluate.\n@@ -477,6 +496,14 @@ void BlockAssembler::addPackageTxs()\n                 mapModifiedTx.get<ancestor_score>().erase(modit);\n                 failedTx.insert(iter);\n             }\n+\n+            ++nConsecutiveFailed;\n+\n+            if (nConsecutiveFailed > MAX_CONSECUTIVE_FAILURES && nBlockWeight >\n+                    nBlockMaxWeight - 4000) {\n+                // Give up if we're close to full and haven't succeeded in a while\n+                break;\n+            }\n             continue;\n         }\n \n@@ -497,6 +524,9 @@ void BlockAssembler::addPackageTxs()\n             continue;\n         }\n \n+        // This transaction will make it in; reset the failed counter.\n+        nConsecutiveFailed = 0;\n+\n         // Package can be added. Sort the entries in a valid order.\n         std::vector<CTxMemPool::txiter> sortedEntries;\n         SortForBlock(ancestors, iter, sortedEntries);\n@@ -507,8 +537,10 @@ void BlockAssembler::addPackageTxs()\n             mapModifiedTx.erase(sortedEntries[i]);\n         }\n \n+        ++nPackagesSelected;\n+\n         // Update transactions that depend on each of these\n-        UpdatePackagesForAdded(ancestors, mapModifiedTx);\n+        nDescendantsUpdated += UpdatePackagesForAdded(ancestors, mapModifiedTx);\n     }\n }\n "
      },
      {
        "sha": "9ae2874927c610fa1ac86cdfb50a31e3437407f0",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
        "patch": "@@ -177,8 +177,10 @@ class BlockAssembler\n     // Methods for how to add transactions to a block.\n     /** Add transactions based on tx \"priority\" */\n     void addPriorityTxs();\n-    /** Add transactions based on feerate including unconfirmed ancestors */\n-    void addPackageTxs();\n+    /** Add transactions based on feerate including unconfirmed ancestors\n+      * Increments nPackagesSelected / nDescendantsUpdated with corresponding\n+      * statistics from the package selection (for logging statistics). */\n+    void addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated);\n \n     // helper function for addPriorityTxs\n     /** Test if tx will still \"fit\" in the block */\n@@ -202,8 +204,9 @@ class BlockAssembler\n     /** Sort the package in an order that is valid to appear in a block */\n     void SortForBlock(const CTxMemPool::setEntries& package, CTxMemPool::txiter entry, std::vector<CTxMemPool::txiter>& sortedEntries);\n     /** Add descendants of given transactions to mapModifiedTx with ancestor\n-      * state updated assuming given transactions are inBlock. */\n-    void UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n+      * state updated assuming given transactions are inBlock. Returns number\n+      * of updated descendants. */\n+    int UpdatePackagesForAdded(const CTxMemPool::setEntries& alreadyAdded, indexed_modified_transaction_set &mapModifiedTx);\n };\n \n /** Modify the extranonce in a block */"
      }
    ]
  },
  {
    "sha": "0b5e162b84ec95cb63903dd21e4003a3d4503421",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjVlMTYyYjg0ZWM5NWNiNjM5MDNkZDIxZTQwMDNhM2Q0NTAzNDIx",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2017-03-30T19:05:05Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-03-31T10:07:18Z"
      },
      "message": "Compensate for memory peak at flush time\n\nGithub-Pull: #10126\nRebased-From: 7228ce853de5670d559d752f04a7db79578990ea",
      "tree": {
        "sha": "df4b37b863592d5ed0424586021dd8f8e1292eb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df4b37b863592d5ed0424586021dd8f8e1292eb9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b5e162b84ec95cb63903dd21e4003a3d4503421",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEbBAABCgAGBQJY3ipWAAoJEHSBCwEjRsmmXj4H+O+OWjZfukVw1Von4CScBDoI\nOy8HQoonYuHxGkIvoYQn+Y5eYcLDnOhx7nlg1sNrlXulZPObii+OJEC+3gsxGr94\nDkZ8+qqEWVA03eUpYdlPyahT/J0Ggt30n7vhU7wBw3+nzwM26aruhBmxskABusUm\nPi49okAiadIIMhA4er+j0zHYu9M63XOCVJYo7utcCF7cbtYc/0YUW9sR+C+jNWfr\nmIOJgEbSj99lGX57zCSLPaP0syPeHqMcXroOIXGySnillmEhE7QfPhwWL4Ub6j+S\nRSa70zCHy9eWQ0iA+sdRpswFDAQ+TgjrX7OHX3S8HSoo5B30ixNiQTyBXLxZAg==\n=v7he\n-----END PGP SIGNATURE-----",
        "payload": "tree df4b37b863592d5ed0424586021dd8f8e1292eb9\nparent fa6b5fc1ccd50c01a787adbc15f9a4af60f14735\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1490900705 -0700\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1490954838 +0200\n\nCompensate for memory peak at flush time\n\nGithub-Pull: #10126\nRebased-From: 7228ce853de5670d559d752f04a7db79578990ea\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5e162b84ec95cb63903dd21e4003a3d4503421",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b5e162b84ec95cb63903dd21e4003a3d4503421",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5e162b84ec95cb63903dd21e4003a3d4503421/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa6b5fc1ccd50c01a787adbc15f9a4af60f14735"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5643d2ab59c16fe7a92a0e9d56217666932cb919",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b5e162b84ec95cb63903dd21e4003a3d4503421/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b5e162b84ec95cb63903dd21e4003a3d4503421/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0b5e162b84ec95cb63903dd21e4003a3d4503421",
        "patch": "@@ -2027,7 +2027,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode, int n\n         nLastSetChain = nNow;\n     }\n     int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n-    int64_t cacheSize = pcoinsTip->DynamicMemoryUsage();\n+    int64_t cacheSize = pcoinsTip->DynamicMemoryUsage() * 2; // Compensate for extra memory peak (x1.5-x1.9) at flush time.\n     int64_t nTotalSpace = nCoinCacheUsage + std::max<int64_t>(nMempoolSizeMax - nMempoolUsage, 0);\n     // The cache is large and we're within 10% and 100 MiB of the limit, but we have time now (not in the middle of a block processing).\n     bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::max((9 * nTotalSpace) / 10, nTotalSpace - 100 * 1024 * 1024);"
      }
    ]
  },
  {
    "sha": "f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTUyNjhkYjNiZjFhOGM0ZWE0MTBmNGY2M2M2MTg3YjQ1ZTA2ZGVk",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-03-28T06:20:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-03T06:54:53Z"
      },
      "message": "[rpc] Remove auth cookie on shutdown\n\nAccidentally removed in 40b556d3742a1f65d67e2d4c760d0b13fe8be5b7\n\nGithub-Pull: #10139\nRebased-From: 4b87973c32bcaa5fa7509793e4f0c4f4f981f21b",
      "tree": {
        "sha": "ab7009381b11ce6760b2ff80e6465677e61a41af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab7009381b11ce6760b2ff80e6465677e61a41af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY4fG9AAoJEHSBCwEjRsmmI08IAMwQGQ4CzDMotEeh3/xA7yvo\nNOQV/A7ay8LHxm/Q6LgdsBz+M9PgiVnDt+3PhWXVTkaA0fGJIXwV3UOJe4e2De8u\nAZF8sQoHi2HFD+ot0lVOP/iibyuCNUtykCYDfyerIYfUKTjgtSkEkLfG/NDSXO82\n9/Z7NSjXHkCX9/v29mitK9Ny4HCZRTDvf89rJcz0mF0a3VbMdpgKD4jqGo7/QB/R\n9ociTyRzBjMZ9/OE7Za5BxxUTbmFnmFCfpHumWgRCUZna4ST362wIrcngcyhg1mi\nFHP+9NmujGBREkiiqPDONARjQ9mrV0XWNybWi/wAKS8ucssFPxW8Gtt9LojDcWw=\n=x8Mz\n-----END PGP SIGNATURE-----",
        "payload": "tree ab7009381b11ce6760b2ff80e6465677e61a41af\nparent 0b5e162b84ec95cb63903dd21e4003a3d4503421\nauthor practicalswift <practicalswift@users.noreply.github.com> 1490682008 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491202493 +0200\n\n[rpc] Remove auth cookie on shutdown\n\nAccidentally removed in 40b556d3742a1f65d67e2d4c760d0b13fe8be5b7\n\nGithub-Pull: #10139\nRebased-From: 4b87973c32bcaa5fa7509793e4f0c4f4f981f21b\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15268db3bf1a8c4ea410f4f63c6187b45e06ded/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b5e162b84ec95cb63903dd21e4003a3d4503421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5e162b84ec95cb63903dd21e4003a3d4503421",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b5e162b84ec95cb63903dd21e4003a3d4503421"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "67fc825804f2b72b0f4d67256d1cb3152b4e8afb",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f15268db3bf1a8c4ea410f4f63c6187b45e06ded/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f15268db3bf1a8c4ea410f4f63c6187b45e06ded/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
        "patch": "@@ -331,6 +331,7 @@ void StopRPC()\n {\n     LogPrint(\"rpc\", \"Stopping RPC\\n\");\n     deadlineTimers.clear();\n+    DeleteAuthCookie();\n     g_rpcSignals.Stopped();\n }\n "
      }
    ]
  },
  {
    "sha": "2fea10ad03c22d3299c56a45370598501d7ee7cf",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyZmVhMTBhZDAzYzIyZDMyOTljNTZhNDUzNzA1OTg1MDFkN2VlN2Nm",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-04-02T21:28:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-04T07:01:03Z"
      },
      "message": "Make GetWitnessCommitmentIndex callable on blocks without a coinbase txn.\n\nThis isn't actually needed anywhere, but it's less brittle.\n\nGithub-Pull: #10146\nRebased-From: ada0caa165905b50db351a56ec124518c922085a",
      "tree": {
        "sha": "3dbcb8da10999f972feb98c719e21968e38ad722",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3dbcb8da10999f972feb98c719e21968e38ad722"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2fea10ad03c22d3299c56a45370598501d7ee7cf",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY40SvAAoJEHSBCwEjRsmmAAMIAJiyjMeXVYPaBp1+wxrX0iTz\n85RBOC3YayZp8zRO02FRC5cWFWWVpQWjdw3XyntEICpldrbhZyZ02RAZbLhgn5C/\nSntMPCn0zECS6jGCW64sup7oC/dMrkkAtK4Kx1Gd2k/I2nCu7muotsLSRwSm1LyL\nLEjDfwc7R9iNlczwvlojGmyt/ejKrupzTTpeWiT4dXneInIGEMsooD3gniL6K1xT\nMPEmtg+NL57Id1PP+ZknBEzzMB+WeNqRlszcIS/HBtb2V2KQ7B+lzzdtJ7bZb/Mq\nhAbbmzswIrs9dZMO9xAyvDCENYVD/Znvz72sE1WC95v0oYvOpRfOEOj1yY4lY7E=\n=/34W\n-----END PGP SIGNATURE-----",
        "payload": "tree 3dbcb8da10999f972feb98c719e21968e38ad722\nparent f15268db3bf1a8c4ea410f4f63c6187b45e06ded\nauthor Gregory Maxwell <greg@xiph.org> 1491168497 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491289263 +0200\n\nMake GetWitnessCommitmentIndex callable on blocks without a coinbase txn.\n\nThis isn't actually needed anywhere, but it's less brittle.\n\nGithub-Pull: #10146\nRebased-From: ada0caa165905b50db351a56ec124518c922085a\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fea10ad03c22d3299c56a45370598501d7ee7cf",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2fea10ad03c22d3299c56a45370598501d7ee7cf",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fea10ad03c22d3299c56a45370598501d7ee7cf/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f15268db3bf1a8c4ea410f4f63c6187b45e06ded",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f15268db3bf1a8c4ea410f4f63c6187b45e06ded"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "43ef8c88febfc4437882b4b3fa783d1c7377ce4d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2fea10ad03c22d3299c56a45370598501d7ee7cf/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2fea10ad03c22d3299c56a45370598501d7ee7cf/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2fea10ad03c22d3299c56a45370598501d7ee7cf",
        "patch": "@@ -2922,9 +2922,11 @@ bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& pa\n static int GetWitnessCommitmentIndex(const CBlock& block)\n {\n     int commitpos = -1;\n-    for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n-        if (block.vtx[0]->vout[o].scriptPubKey.size() >= 38 && block.vtx[0]->vout[o].scriptPubKey[0] == OP_RETURN && block.vtx[0]->vout[o].scriptPubKey[1] == 0x24 && block.vtx[0]->vout[o].scriptPubKey[2] == 0xaa && block.vtx[0]->vout[o].scriptPubKey[3] == 0x21 && block.vtx[0]->vout[o].scriptPubKey[4] == 0xa9 && block.vtx[0]->vout[o].scriptPubKey[5] == 0xed) {\n-            commitpos = o;\n+    if (!block.vtx.empty()) {\n+        for (size_t o = 0; o < block.vtx[0]->vout.size(); o++) {\n+            if (block.vtx[0]->vout[o].scriptPubKey.size() >= 38 && block.vtx[0]->vout[o].scriptPubKey[0] == OP_RETURN && block.vtx[0]->vout[o].scriptPubKey[1] == 0x24 && block.vtx[0]->vout[o].scriptPubKey[2] == 0xaa && block.vtx[0]->vout[o].scriptPubKey[3] == 0x21 && block.vtx[0]->vout[o].scriptPubKey[4] == 0xa9 && block.vtx[0]->vout[o].scriptPubKey[5] == 0xed) {\n+                commitpos = o;\n+            }\n         }\n     }\n     return commitpos;"
      }
    ]
  },
  {
    "sha": "a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDRhNmExNWY5NGE2MjIzYTcxNzkwYzVhNjVlYjJiOGE1YjM1ZGQy",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-04-02T21:39:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-04T07:01:03Z"
      },
      "message": "Check transaction count early in submitblock.\n\nThere is no point in even hashing a submitted block which doesn't have\n a coinbase transaction.\n\nThis also results in more useful error reporting on corrupted input.\n\nThanks to rawodb for the bug report.\n\nGithub-Pull: #10146\nRebased-From: 4f15ea102d15eb237b63464725508dc509e98819",
      "tree": {
        "sha": "805306e240f12da3627f82857d064c68aa813aba",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/805306e240f12da3627f82857d064c68aa813aba"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY40SvAAoJEHSBCwEjRsmm2P0IAJ8mer83xk02HciUiePfK1M2\nMc9wwXtQ1Y1lV3P+ti3H4pulGoJwxxYSfGFFLKSG7NG9+00o2AV/X59FzvdF8pGa\nPWw1Ny/J9u08Udl7Hbks4GbVLSF5dstQrBGz64nGhKgO6alpSfmIxqgRoEBrl02z\nLFoyEUM4wBOlWL1nh70CZ2MIk3mev1h+fWHUZTcW2MQg2KkYtPN0fBnurSE2lFUW\ne14KwXU4f9JJIUl9Ey1NicNmizxTs1I8DgKZYuVexThbh10h1+e5TaraCZfn0R2h\nrsLVVy80J2t7TOgx8LAc+zOwGbvbb1cpGtk9G82HmmkoJ+FF/LyyykSWbNBZVrU=\n=C51S\n-----END PGP SIGNATURE-----",
        "payload": "tree 805306e240f12da3627f82857d064c68aa813aba\nparent 2fea10ad03c22d3299c56a45370598501d7ee7cf\nauthor Gregory Maxwell <greg@xiph.org> 1491169172 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491289263 +0200\n\nCheck transaction count early in submitblock.\n\nThere is no point in even hashing a submitted block which doesn't have\n a coinbase transaction.\n\nThis also results in more useful error reporting on corrupted input.\n\nThanks to rawodb for the bug report.\n\nGithub-Pull: #10146\nRebased-From: 4f15ea102d15eb237b63464725508dc509e98819\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2fea10ad03c22d3299c56a45370598501d7ee7cf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2fea10ad03c22d3299c56a45370598501d7ee7cf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2fea10ad03c22d3299c56a45370598501d7ee7cf"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 4,
      "deletions": 0
    },
    "files": [
      {
        "sha": "33e234a95efbf145c99bdbf8c3767d5f49b14c25",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
        "patch": "@@ -748,6 +748,10 @@ UniValue submitblock(const JSONRPCRequest& request)\n     if (!DecodeHexBlk(block, request.params[0].get_str()))\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n \n+    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n+    }\n+\n     uint256 hash = block.GetHash();\n     bool fBlockPresent = false;\n     {"
      }
    ]
  },
  {
    "sha": "ab864d3e4943fc617853a64cf22fa3939f89fcd2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjg2NGQzZTQ5NDNmYzYxNzg1M2E2NGNmMjJmYTM5MzlmODlmY2Qy",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-03-31T14:17:13Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T06:23:01Z"
      },
      "message": "Make pcoinsTip memory calculations consistent\n\nSince we are more accurately measuring pcoinsTip peak usage at twice the current in dynamic usage, it makes sense to double the default (this will lead to the same effective usage and peak usage as previously).\nWe should also double the buffer used to avoid flushing if above 90% but still sufficient space remaining.\n\nGithub-Pull: #10133\nRebased-From: 5b95a190e8d7059039ce61e808d494dcf89ebb3b",
      "tree": {
        "sha": "85e0a5be0af8c86ff4ae9ba5325aeab61c9c52f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/85e0a5be0af8c86ff4ae9ba5325aeab61c9c52f4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab864d3e4943fc617853a64cf22fa3939f89fcd2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5I1FAAoJEHSBCwEjRsmmWYUH/RLDrqPAWMbhjPwoqcht3ENO\n+YaHlvV+yH1/Hhsxt7bk37czNNhVDMHnWhUwV0X/Y8ppBYPak4cZxf94IwGUizjQ\n1+5NZQOFCr03OaOAHuaEijFV2pzrYr9kBO7W837hh16wN2lL6FcDBpQZle3j1Ukd\nUD4J1KBjorUNmjR4Pid+dOyi+RGAz4vK6U+22bgA4iyec8HMBuebQUs8IDTp6J5t\nVSbgRvEAAoWKlYJvEURzPpDKSgshyjYQcsA5wEC8dH18TRV2kZ9uCywbEawJLD1n\nXMNf4xQrPt6NQ+7rgW66qnQKwU8T2nEAvzQhybcoskEba6uaeqqeA5/OV0OD8kY=\n=gmoI\n-----END PGP SIGNATURE-----",
        "payload": "tree 85e0a5be0af8c86ff4ae9ba5325aeab61c9c52f4\nparent a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2\nauthor Alex Morcos <morcos@chaincode.com> 1490969833 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491373381 +0200\n\nMake pcoinsTip memory calculations consistent\n\nSince we are more accurately measuring pcoinsTip peak usage at twice the current in dynamic usage, it makes sense to double the default (this will lead to the same effective usage and peak usage as previously).\nWe should also double the buffer used to avoid flushing if above 90% but still sufficient space remaining.\n\nGithub-Pull: #10133\nRebased-From: 5b95a190e8d7059039ce61e808d494dcf89ebb3b\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab864d3e4943fc617853a64cf22fa3939f89fcd2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab864d3e4943fc617853a64cf22fa3939f89fcd2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab864d3e4943fc617853a64cf22fa3939f89fcd2/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a44a6a15f94a6223a71790c5a65eb2b8a5b35dd2"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "963f1006eaab3d81ee690a43b2a89998e7fefc2e",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab864d3e4943fc617853a64cf22fa3939f89fcd2/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab864d3e4943fc617853a64cf22fa3939f89fcd2/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=ab864d3e4943fc617853a64cf22fa3939f89fcd2",
        "patch": "@@ -21,8 +21,12 @@ class CBlockIndex;\n class CCoinsViewDBCursor;\n class uint256;\n \n+//! Compensate for extra memory peak (x1.5-x1.9) at flush time.\n+static constexpr int DB_PEAK_USAGE_FACTOR = 2;\n+//! No need to flush if at least this much space still available.\n+static constexpr int MAX_BLOCK_COINSDB_USAGE = 100 * DB_PEAK_USAGE_FACTOR;\n //! -dbcache default (MiB)\n-static const int64_t nDefaultDbCache = 300;\n+static const int64_t nDefaultDbCache = 600;\n //! max. -dbcache (MiB)\n static const int64_t nMaxDbCache = sizeof(void*) > 4 ? 16384 : 1024;\n //! min. -dbcache (MiB)"
      },
      {
        "sha": "b8555507285b0ca6c61d22378b1f34a5a4016371",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab864d3e4943fc617853a64cf22fa3939f89fcd2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab864d3e4943fc617853a64cf22fa3939f89fcd2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ab864d3e4943fc617853a64cf22fa3939f89fcd2",
        "patch": "@@ -2027,10 +2027,10 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode, int n\n         nLastSetChain = nNow;\n     }\n     int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n-    int64_t cacheSize = pcoinsTip->DynamicMemoryUsage() * 2; // Compensate for extra memory peak (x1.5-x1.9) at flush time.\n+    int64_t cacheSize = pcoinsTip->DynamicMemoryUsage() * DB_PEAK_USAGE_FACTOR;\n     int64_t nTotalSpace = nCoinCacheUsage + std::max<int64_t>(nMempoolSizeMax - nMempoolUsage, 0);\n     // The cache is large and we're within 10% and 100 MiB of the limit, but we have time now (not in the middle of a block processing).\n-    bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::max((9 * nTotalSpace) / 10, nTotalSpace - 100 * 1024 * 1024);\n+    bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::max((9 * nTotalSpace) / 10, nTotalSpace - MAX_BLOCK_COINSDB_USAGE * 1024 * 1024);\n     // The cache is over the limit, we have to write now.\n     bool fCacheCritical = mode == FLUSH_STATE_IF_NEEDED && cacheSize > nTotalSpace;\n     // It's been a while since we wrote the block index to disk. Do this frequently, so we don't need to redownload after a crash."
      }
    ]
  },
  {
    "sha": "d6867689d187b72145bb36f4a204f4468e46ee7e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjg2NzY4OWQxODdiNzIxNDViYjM2ZjRhMjA0ZjQ0NjhlNDZlZTdl",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-03-31T14:25:39Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T06:23:01Z"
      },
      "message": "Lower default memory footprint slightly\n\nGithub-Pull: #10133\nRebased-From: f33afd3b2be1bcabeb10168a53835359c9ff4a3e",
      "tree": {
        "sha": "eabc9aa345ab971a819b326aba882b783ce6deda",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eabc9aa345ab971a819b326aba882b783ce6deda"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6867689d187b72145bb36f4a204f4468e46ee7e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5I1FAAoJEHSBCwEjRsmmWTEH/jN3WWdCB5V+2uxwhQuaak7Q\nR7IwwW8fadZh0d3dhe3oszPFlpBDhDfWg0jLiB4nckbJHsGmsp4t4Rel+p2p3H9w\neknSLfAp8/rRBQlADN3W/9427gKab3EuJETRjzLAPlqdMlCojqwbgumUClzMYC4J\nJzqYDBNJPYYtdZaKlCPKfEvRh5xI9ehI2Wd3pnUXtYtjEjN56i+TDK0Vvt31xX4V\nTh7d6iImoUAL5w3mQpmM7faEd9ZGipMCHR+PWisyebblEpElr08JLpCPKYlXIGnN\naPLXBtW9GjYnbugRSmZVfOxqOYzWqRUbYi7zqhlDrLJEu9tVAJbcB8bvz7x3AJ4=\n=WD5m\n-----END PGP SIGNATURE-----",
        "payload": "tree eabc9aa345ab971a819b326aba882b783ce6deda\nparent ab864d3e4943fc617853a64cf22fa3939f89fcd2\nauthor Alex Morcos <morcos@chaincode.com> 1490970339 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491373381 +0200\n\nLower default memory footprint slightly\n\nGithub-Pull: #10133\nRebased-From: f33afd3b2be1bcabeb10168a53835359c9ff4a3e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6867689d187b72145bb36f4a204f4468e46ee7e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6867689d187b72145bb36f4a204f4468e46ee7e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6867689d187b72145bb36f4a204f4468e46ee7e/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ab864d3e4943fc617853a64cf22fa3939f89fcd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab864d3e4943fc617853a64cf22fa3939f89fcd2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ab864d3e4943fc617853a64cf22fa3939f89fcd2"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "337942ffaf37258ea8b56ad9d90be2a0fa0e5908",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6867689d187b72145bb36f4a204f4468e46ee7e/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6867689d187b72145bb36f4a204f4468e46ee7e/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=d6867689d187b72145bb36f4a204f4468e46ee7e",
        "patch": "@@ -26,7 +26,7 @@ static constexpr int DB_PEAK_USAGE_FACTOR = 2;\n //! No need to flush if at least this much space still available.\n static constexpr int MAX_BLOCK_COINSDB_USAGE = 100 * DB_PEAK_USAGE_FACTOR;\n //! -dbcache default (MiB)\n-static const int64_t nDefaultDbCache = 600;\n+static const int64_t nDefaultDbCache = 450;\n //! max. -dbcache (MiB)\n static const int64_t nMaxDbCache = sizeof(void*) > 4 ? 16384 : 1024;\n //! min. -dbcache (MiB)"
      }
    ]
  },
  {
    "sha": "0e5133cb2ef8973951f1b576ead37792f9b37f83",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZTUxMzNjYjJlZjg5NzM5NTFmMWI1NzZlYWQzNzc5MmY5YjM3Zjgz",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-03-31T14:26:25Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T06:23:02Z"
      },
      "message": "Make threshold for flushing more conservative.\n\nAlways leave a reasonable buffer of 50MB for usage from newly connected block (once over 50%) and increase the high water mark buffer to 200MB.\n\nGithub-Pull: #10133\nRebased-From: 1b55e07b7a61a9e6c299cf4c40fde80fa715d440",
      "tree": {
        "sha": "3a16511c3690b94d03b4c785eeec894c135f6f75",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3a16511c3690b94d03b4c785eeec894c135f6f75"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0e5133cb2ef8973951f1b576ead37792f9b37f83",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5I1GAAoJEHSBCwEjRsmmfSMH/joUOnANeygEot/KbXVc7xCh\n31Bq/rHEPUcRoDzq+un18VRThmcCA3e3Limas5XCN5aNeFTEWB24/OvmkTSauobv\n7kulB4Srzq4EI8jd/HEDf2gdysUdEhUNMi4vMLnoEr04g7LZI1Po48efifmYjqjq\n2GtGMHnLqQeZHgkpzSUYBkAcdjr+efmVDcfwJZpKIHZqwjolCLInsM9bZassR/Zg\nZhV3Ag8vZGG1QBuZ+WbeAZSGnlZ4Mqn0OO5ep2zVpuNSZl8kG8ryiJtP7335GJtA\nTnV3HyC5RHAP9JchBPXwSbP0jeIPyHVQclqSv1adocS/pMHGt4xwBmCwjetLw5g=\n=hlBM\n-----END PGP SIGNATURE-----",
        "payload": "tree 3a16511c3690b94d03b4c785eeec894c135f6f75\nparent d6867689d187b72145bb36f4a204f4468e46ee7e\nauthor Alex Morcos <morcos@chaincode.com> 1490970385 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491373382 +0200\n\nMake threshold for flushing more conservative.\n\nAlways leave a reasonable buffer of 50MB for usage from newly connected block (once over 50%) and increase the high water mark buffer to 200MB.\n\nGithub-Pull: #10133\nRebased-From: 1b55e07b7a61a9e6c299cf4c40fde80fa715d440\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e5133cb2ef8973951f1b576ead37792f9b37f83",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0e5133cb2ef8973951f1b576ead37792f9b37f83",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e5133cb2ef8973951f1b576ead37792f9b37f83/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6867689d187b72145bb36f4a204f4468e46ee7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6867689d187b72145bb36f4a204f4468e46ee7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6867689d187b72145bb36f4a204f4468e46ee7e"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 7,
      "deletions": 4
    },
    "files": [
      {
        "sha": "d9214ba618546c100ed767b1d7e4ee6211f07045",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e5133cb2ef8973951f1b576ead37792f9b37f83/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e5133cb2ef8973951f1b576ead37792f9b37f83/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=0e5133cb2ef8973951f1b576ead37792f9b37f83",
        "patch": "@@ -23,8 +23,10 @@ class uint256;\n \n //! Compensate for extra memory peak (x1.5-x1.9) at flush time.\n static constexpr int DB_PEAK_USAGE_FACTOR = 2;\n-//! No need to flush if at least this much space still available.\n-static constexpr int MAX_BLOCK_COINSDB_USAGE = 100 * DB_PEAK_USAGE_FACTOR;\n+//! No need to periodic flush if at least this much space still available.\n+static constexpr int MAX_BLOCK_COINSDB_USAGE = 200 * DB_PEAK_USAGE_FACTOR;\n+//! Always periodic flush if less than this much space still available.\n+static constexpr int MIN_BLOCK_COINSDB_USAGE = 50 * DB_PEAK_USAGE_FACTOR;\n //! -dbcache default (MiB)\n static const int64_t nDefaultDbCache = 450;\n //! max. -dbcache (MiB)"
      },
      {
        "sha": "c9135c442b1a4f766af4a109aea89c7919b42d19",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0e5133cb2ef8973951f1b576ead37792f9b37f83/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0e5133cb2ef8973951f1b576ead37792f9b37f83/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=0e5133cb2ef8973951f1b576ead37792f9b37f83",
        "patch": "@@ -2029,8 +2029,9 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode, int n\n     int64_t nMempoolSizeMax = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n     int64_t cacheSize = pcoinsTip->DynamicMemoryUsage() * DB_PEAK_USAGE_FACTOR;\n     int64_t nTotalSpace = nCoinCacheUsage + std::max<int64_t>(nMempoolSizeMax - nMempoolUsage, 0);\n-    // The cache is large and we're within 10% and 100 MiB of the limit, but we have time now (not in the middle of a block processing).\n-    bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::max((9 * nTotalSpace) / 10, nTotalSpace - MAX_BLOCK_COINSDB_USAGE * 1024 * 1024);\n+    // The cache is large and we're within 10% and 200 MiB or 50% and 50MiB of the limit, but we have time now (not in the middle of a block processing).\n+    bool fCacheLarge = mode == FLUSH_STATE_PERIODIC && cacheSize > std::min(std::max(nTotalSpace / 2, nTotalSpace - MIN_BLOCK_COINSDB_USAGE * 1024 * 1024),\n+                                                                            std::max((9 * nTotalSpace) / 10, nTotalSpace - MAX_BLOCK_COINSDB_USAGE * 1024 * 1024));\n     // The cache is over the limit, we have to write now.\n     bool fCacheCritical = mode == FLUSH_STATE_IF_NEEDED && cacheSize > nTotalSpace;\n     // It's been a while since we wrote the block index to disk. Do this frequently, so we don't need to redownload after a crash."
      }
    ]
  },
  {
    "sha": "d947afc0f7868815dff248ad398c3680def5bf81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOTQ3YWZjMGY3ODY4ODE1ZGZmMjQ4YWQzOThjMzY4MGRlZjViZjgx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-04-03T19:48:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T06:37:12Z"
      },
      "message": "Test prioritisetransaction and ancestor fee state\n\nThere is already a similar test for descendant fee state.\n\nGithub-Pull: #10144\nRebased-From: ba7dd8bf6f41de647a8df0c4570df6ac20b08e48",
      "tree": {
        "sha": "a2350a6e4e4454e1650b93b2735ee64cf1c194a3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a2350a6e4e4454e1650b93b2735ee64cf1c194a3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d947afc0f7868815dff248ad398c3680def5bf81",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5JCYAAoJEHSBCwEjRsmmLeoH/0l7uAJTyhXjuaoYY+sTBPur\nXtk1MRrpHgrHB+EKuAmXQTxqKbPT7fvBOkv4VDqCPlpnZtWIkCySM2tiMVty3OlT\ngwVPqMiRRBQKrmfKOLH2NEEKZML/zBAx9nK+k8Td68IS6M2SGd2ZUMSJUTBndwXe\nfOHlDwQvU2rdpS5eCTdXF6qQci7kBTEpXE/sKEYQb1MaoOrJDwJLs8M73vl1rTkE\npbqI2lVeN/DvAKuMY25K9era7iAumkOfZesKslGkw+vOIZsMOeO01g/lSTP/BdGH\nzVtQNFCJwJL77+09sUye3lUfEb10EMRNDXLpeSY+0DXOcHxwo4y79p4W8nMRd/s=\n=yyOo\n-----END PGP SIGNATURE-----",
        "payload": "tree a2350a6e4e4454e1650b93b2735ee64cf1c194a3\nparent 0e5133cb2ef8973951f1b576ead37792f9b37f83\nauthor Suhas Daftuar <sdaftuar@gmail.com> 1491248935 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491374232 +0200\n\nTest prioritisetransaction and ancestor fee state\n\nThere is already a similar test for descendant fee state.\n\nGithub-Pull: #10144\nRebased-From: ba7dd8bf6f41de647a8df0c4570df6ac20b08e48\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d947afc0f7868815dff248ad398c3680def5bf81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d947afc0f7868815dff248ad398c3680def5bf81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d947afc0f7868815dff248ad398c3680def5bf81/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0e5133cb2ef8973951f1b576ead37792f9b37f83",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0e5133cb2ef8973951f1b576ead37792f9b37f83",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0e5133cb2ef8973951f1b576ead37792f9b37f83"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f53515d32e283861dbc3000158a16fb04c69f53c",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d947afc0f7868815dff248ad398c3680def5bf81/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d947afc0f7868815dff248ad398c3680def5bf81/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=d947afc0f7868815dff248ad398c3680def5bf81",
        "patch": "@@ -102,6 +102,18 @@ def run_test(self):\n             assert_equal(mempool[x], v_descendants[x])\n         assert(chain[0] not in v_descendants.keys())\n \n+        # Check that ancestor modified fees includes fee deltas from\n+        # prioritisetransaction\n+        self.nodes[0].prioritisetransaction(chain[0], 1000)\n+        mempool = self.nodes[0].getrawmempool(True)\n+        ancestor_fees = 0\n+        for x in chain:\n+            ancestor_fees += mempool[x]['fee']\n+            assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n+        \n+        # Undo the prioritisetransaction for later tests\n+        self.nodes[0].prioritisetransaction(chain[0], -1000)\n+\n         # Check that descendant modified fees includes fee deltas from\n         # prioritisetransaction\n         self.nodes[0].prioritisetransaction(chain[-1], 0, 1000)"
      }
    ]
  },
  {
    "sha": "ea060c7495b10394ecf6909bc0327e93a2a34a7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTA2MGM3NDk1YjEwMzk0ZWNmNjkwOWJjMDMyN2U5M2EyYTM0YTdm",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-04-03T19:50:15Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T06:37:12Z"
      },
      "message": "Bugfix: ancestor modifed fees were incorrect for descendants\n\nIf prioritisetransaction was called for a tx with in-mempool\ndescendants, the modified ancestor fee values for those descendants was\nincorrect.\n\nGithub-Pull: #10144\nRebased-From: 9bef02e36525d0eed4e2e31678b3ff04bbb0b8cb",
      "tree": {
        "sha": "0124bf14698d35bad8fe39729c1337b984fe4243",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0124bf14698d35bad8fe39729c1337b984fe4243"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea060c7495b10394ecf6909bc0327e93a2a34a7f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5JCYAAoJEHSBCwEjRsmmFowH/0N4VpIFMBQnjX8Z5gL5Zd/A\n5EfZPQcV6D1EhXQZoZLz97a5D3rEcgfu15+lySAdxkMu27WATqO/uRgIpEJHUmfU\nJDVHDv35559y4p3TT7IXtGjHcey2pbRZxMWPczHPNIIAuqimMZpbZKTnsZyreVVw\n1bkiqgZw/+Q2alqBLKtisWaQV8X8H5Z2+6P/DqEC3HXRaxtgVvAsJZzcPOAzhc4+\noADYMOzu+B0VDuxjWoie62bevbI12N6fNSsHHT6DbB58NYVm2cey7u5twhJUcgPj\nvmPREU9hz+tysoD035mXNnnpla7ilgB0zkBG9HVLKb2n72cdoGUhA9dyh8sQgAQ=\n=36WH\n-----END PGP SIGNATURE-----",
        "payload": "tree 0124bf14698d35bad8fe39729c1337b984fe4243\nparent d947afc0f7868815dff248ad398c3680def5bf81\nauthor Suhas Daftuar <sdaftuar@gmail.com> 1491249015 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491374232 +0200\n\nBugfix: ancestor modifed fees were incorrect for descendants\n\nIf prioritisetransaction was called for a tx with in-mempool\ndescendants, the modified ancestor fee values for those descendants was\nincorrect.\n\nGithub-Pull: #10144\nRebased-From: 9bef02e36525d0eed4e2e31678b3ff04bbb0b8cb\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea060c7495b10394ecf6909bc0327e93a2a34a7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea060c7495b10394ecf6909bc0327e93a2a34a7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea060c7495b10394ecf6909bc0327e93a2a34a7f/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d947afc0f7868815dff248ad398c3680def5bf81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d947afc0f7868815dff248ad398c3680def5bf81",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d947afc0f7868815dff248ad398c3680def5bf81"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "91040fb9b21a189265d30fe529865165cd09a0f0",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea060c7495b10394ecf6909bc0327e93a2a34a7f/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea060c7495b10394ecf6909bc0327e93a2a34a7f/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ea060c7495b10394ecf6909bc0327e93a2a34a7f",
        "patch": "@@ -938,6 +938,13 @@ void CTxMemPool::PrioritiseTransaction(const uint256 hash, const std::string str\n             BOOST_FOREACH(txiter ancestorIt, setAncestors) {\n                 mapTx.modify(ancestorIt, update_descendant_state(0, nFeeDelta, 0));\n             }\n+            // Now update all descendants' modified fees with ancestors\n+            setEntries setDescendants;\n+            CalculateDescendants(it, setDescendants);\n+            setDescendants.erase(it);\n+            BOOST_FOREACH(txiter descendantIt, setDescendants) {\n+                mapTx.modify(descendantIt, update_ancestor_state(0, nFeeDelta, 0, 0));\n+            }\n         }\n     }\n     LogPrintf(\"PrioritiseTransaction: %s priority += %f, fee += %d\\n\", strHash, dPriorityDelta, FormatMoney(nFeeDelta));"
      }
    ]
  },
  {
    "sha": "47d24c85b71b854939522238f8e44c891d8674af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2QyNGM4NWI3MWI4NTQ5Mzk1MjIyMzhmOGU0NGM4OTFkODY3NGFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T07:12:17Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T07:12:36Z"
      },
      "message": "Bump version to 0.14.1",
      "tree": {
        "sha": "2285d468047691539f567ed87450fd53af95da1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2285d468047691539f567ed87450fd53af95da1d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47d24c85b71b854939522238f8e44c891d8674af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5JjlAAoJEHSBCwEjRsmmW24H/1YCNJVkbyAOnrKLt+we9gTK\nzdHxpiNgY6JInvk+cAirbidEeTcNxLz9HFEZnFXaM+Aq2IXuvQdKoGt40U5EcqIv\nHZ/9YLSl/H/ksQ/mZc5LuDt0D5UATlG2oBipSJREKvVbmZqhWcKMuX+E4TkHaGOD\nvxtNcYSk5/4I7mZ88qWul7GzT2R8o70/tY6h++6FcJOF2JEh/2e25zPJtpvyguQZ\nXkfxY7R+TEVbDoYjKChrZt4DNvig4WSiGFpj0DLAFYLkql/a2I30E5hbJ+Tfiu//\nWE6U5iPusXoMkO9ZIHfdGFhLfPA6bK4L97Qx5h9VWSlM9SsafCBJeoryCOFeSms=\n=P18l\n-----END PGP SIGNATURE-----",
        "payload": "tree 2285d468047691539f567ed87450fd53af95da1d\nparent ea060c7495b10394ecf6909bc0327e93a2a34a7f\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1491376337 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491376356 +0200\n\nBump version to 0.14.1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47d24c85b71b854939522238f8e44c891d8674af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47d24c85b71b854939522238f8e44c891d8674af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47d24c85b71b854939522238f8e44c891d8674af/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea060c7495b10394ecf6909bc0327e93a2a34a7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea060c7495b10394ecf6909bc0327e93a2a34a7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea060c7495b10394ecf6909bc0327e93a2a34a7f"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a9156c348030e65236041c37b83aa50103fab336",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47d24c85b71b854939522238f8e44c891d8674af/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47d24c85b71b854939522238f8e44c891d8674af/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=47d24c85b71b854939522238f8e44c891d8674af",
        "patch": "@@ -2,7 +2,7 @@ dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 14)\n-define(_CLIENT_VERSION_REVISION, 0)\n+define(_CLIENT_VERSION_REVISION, 1)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)"
      },
      {
        "sha": "2146a00220626d070799a7cfedd8de0b317d2fcb",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47d24c85b71b854939522238f8e44c891d8674af/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47d24c85b71b854939522238f8e44c891d8674af/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=47d24c85b71b854939522238f8e44c891d8674af",
        "patch": "@@ -38,7 +38,7 @@ PROJECT_NAME           = \"Bitcoin Core\"\n # could be handy for archiving the generated documentation or if some version\n # control system is used.\n \n-PROJECT_NUMBER         = 0.14.0\n+PROJECT_NUMBER         = 0.14.1\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description\n # for a project that appears at the top of each page and should give viewer a"
      },
      {
        "sha": "52a4cc0bf680e07af2b906f4774ff8833dbfaf30",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47d24c85b71b854939522238f8e44c891d8674af/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47d24c85b71b854939522238f8e44c891d8674af/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=47d24c85b71b854939522238f8e44c891d8674af",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.14.0\n+Bitcoin Core 0.14.1\n =====================\n \n Setup"
      },
      {
        "sha": "5b9aaef57a4a0e33219632ffd2c02b0317e0a53b",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47d24c85b71b854939522238f8e44c891d8674af/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47d24c85b71b854939522238f8e44c891d8674af/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=47d24c85b71b854939522238f8e44c891d8674af",
        "patch": "@@ -1,4 +1,4 @@\n-Bitcoin Core 0.14.0\r\n+Bitcoin Core 0.14.1\r\n =====================\r\n \r\n Intro\r"
      },
      {
        "sha": "aa46955daee6130497ecf58f454490b09856a23d",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47d24c85b71b854939522238f8e44c891d8674af/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47d24c85b71b854939522238f8e44c891d8674af/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=47d24c85b71b854939522238f8e44c891d8674af",
        "patch": "@@ -16,7 +16,7 @@\n //! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 14\n-#define CLIENT_VERSION_REVISION 0\n+#define CLIENT_VERSION_REVISION 1\n #define CLIENT_VERSION_BUILD 0\n \n //! Set to true for release, false for prerelease or test build"
      }
    ]
  },
  {
    "sha": "920acbcca8240cb11a74055a81d5129c8a4c85af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MjBhY2JjY2E4MjQwY2IxMWE3NDA1NWE4MWQ1MTI5YzhhNGM4NWFm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T09:52:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T09:52:16Z"
      },
      "message": "doc: Update release notes for 0.14.1",
      "tree": {
        "sha": "05e2007cd0264dcb4e5aa2e96e4e819645ba0a17",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05e2007cd0264dcb4e5aa2e96e4e819645ba0a17"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/920acbcca8240cb11a74055a81d5129c8a4c85af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5L5ZAAoJEHSBCwEjRsmmG9AH/0SrYLcWTwqzdg6deYj+SCdV\nrbanNTdOjxUBO0OeFXjNeXUOHitHhX+ucGFibaVmuv+/gUi62KGPcNlC/dwmuCtr\n7wSsldA6kQI7AdN6Kurruqzj89X0bjwZK0JqhtSsMojlklVjQq1sgXooEyLobSGp\nSaDvY9U6OwX41Vx3ra6cvMFv2h5CwXfG9LRYnMquFbTCXuEsNDKc83huqCs45+xz\nDPmBQ0LQv8zw+olT4Avn8hLQ9d1R0qBznoS14TQQaeTMCd5Y+o7/YdM1tPq2NBry\nLvUCReDsSTcVoNA9BQxt9w9jRLZI/WnmwvxddtlFvoLKb7QUfd+wFY4QAckS8a4=\n=7pM/\n-----END PGP SIGNATURE-----",
        "payload": "tree 05e2007cd0264dcb4e5aa2e96e4e819645ba0a17\nparent 47d24c85b71b854939522238f8e44c891d8674af\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1491385936 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491385936 +0200\n\ndoc: Update release notes for 0.14.1\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920acbcca8240cb11a74055a81d5129c8a4c85af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/920acbcca8240cb11a74055a81d5129c8a4c85af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920acbcca8240cb11a74055a81d5129c8a4c85af/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47d24c85b71b854939522238f8e44c891d8674af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47d24c85b71b854939522238f8e44c891d8674af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47d24c85b71b854939522238f8e44c891d8674af"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 45,
      "deletions": 11
    },
    "files": [
      {
        "sha": "6b6b66728865a763d736f1a5031b790aa80fb408",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 45,
        "deletions": 11,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/920acbcca8240cb11a74055a81d5129c8a4c85af/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/920acbcca8240cb11a74055a81d5129c8a4c85af/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=920acbcca8240cb11a74055a81d5129c8a4c85af",
        "patch": "@@ -1,9 +1,6 @@\n-(note: this is a temporary file, to be added-to by anybody, and moved to\n-release-notes at release time)\n+Bitcoin Core version 0.14.1 is now available from:\n \n-Bitcoin Core version 0.14.x is now available from:\n-\n-  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n \n This is a new minor version release, including various bugfixes and\n performance improvements, as well as updated translations.\n@@ -33,32 +30,69 @@ frequently tested on them.\n Notable changes\n ===============\n \n-Example item\n------------------------------------------------\n-\n RPC changes\n -----------\n \n The first positional argument of `createrawtransaction` was renamed.\n This interface change breaks compatibility with 0.14.0, when the named\n arguments functionality, introduced in 0.14.0, is used.\n \n-0.14.x Change log\n+0.14.1 Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n behavior, not code moves, refactors and string updates. For convenience in locating\n the code changes and accompanying discussion, both the pull request and\n git merge commit are mentioned.\n \n-[to be filled in at release]\n+### RPC and other APIs\n+- #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n+- #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n+- #10146 `2fea10a` Better error handling for submitblock (gmaxwell)\n+- #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n+\n+### Block and transaction handling\n+- #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n+- #9912 `fc3d7db` Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)\n+- #10133 `ab864d3` Clean up calculations of pcoinsTip memory usage (morcos)\n+\n+### P2P protocol and network code\n+- #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n+\n+### Build system\n+- #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n+\n+### GUI\n+- #10060 `ddc2dd1` Ensure an item exists on the rpcconsole stack before adding (achow101)\n+\n+### Mining\n+- #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n+- #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n+\n+### Miscellaneous\n+- #10094 `37bf0d5` 0.14: Clear release notes (MarcoFalke)\n+- #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n+- #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n+- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n-[to be filled in at release]\n+- Alex Morcos\n+- Andrew Chow\n+- Awemany\n+- Cory Fields\n+- Gregory Maxwell\n+- James Evans\n+- John Newbery\n+- MarcoFalke\n+- Matt Corallo\n+- Pieter Wuille\n+- practicalswift\n+- Suhas Daftuar\n+- Wladimir J. van der Laan\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n "
      }
    ]
  },
  {
    "sha": "df82ea914f6f569e244ab59ca24e4eea898eb1a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZjgyZWE5MTRmNmY1NjllMjQ0YWI1OWNhMjRlNGVlYTg5OGViMWE5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T11:01:32Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-05T11:01:32Z"
      },
      "message": "doc: Remove release note about release notes",
      "tree": {
        "sha": "cfa39ec38ebe776797adef8c20fd4546e4b670ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfa39ec38ebe776797adef8c20fd4546e4b670ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/df82ea914f6f569e244ab59ca24e4eea898eb1a9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5M63AAoJEHSBCwEjRsmmwTEIAIxIz9fFT8LxV0QBlKTjQKfG\neQJhX0fNXxJeiSXtkQU2jCvRvHPtNvLHNTT0pgcqSajmbm8NOIlBEhxjtGxgIu7s\nfSHKQ05fwtlBKCeHn9AldFpIXJqP3rsLSKp8+klmnc4hXrAOyhiSWiAmjZxUUxw/\nESrc9TNQLcGYm6H4GTm0AdXhgdHENI3GF/CNLca0YvF3CQAxiW5K3geVCnIVDmPY\nCywyxzG0QTtGhFYJ7E6jQn2q8hkojoiLBWn5aABIqH5ttQNVWmzNStEpBd41yeeI\ntF50Qhd0aVcGAuaeqGSCmgX3dKi6KbeaCUMtcqF6335NpIIc8AGvF2C0faSwUjk=\n=+BDv\n-----END PGP SIGNATURE-----",
        "payload": "tree cfa39ec38ebe776797adef8c20fd4546e4b670ec\nparent 920acbcca8240cb11a74055a81d5129c8a4c85af\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1491390092 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491390092 +0200\n\ndoc: Remove release note about release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df82ea914f6f569e244ab59ca24e4eea898eb1a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/df82ea914f6f569e244ab59ca24e4eea898eb1a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df82ea914f6f569e244ab59ca24e4eea898eb1a9/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "920acbcca8240cb11a74055a81d5129c8a4c85af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/920acbcca8240cb11a74055a81d5129c8a4c85af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/920acbcca8240cb11a74055a81d5129c8a4c85af"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5eba44d950ca31b8c08683d24cbe43fb8a67b406",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/df82ea914f6f569e244ab59ca24e4eea898eb1a9/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/df82ea914f6f569e244ab59ca24e4eea898eb1a9/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=df82ea914f6f569e244ab59ca24e4eea898eb1a9",
        "patch": "@@ -70,7 +70,6 @@ git merge commit are mentioned.\n - #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n \n ### Miscellaneous\n-- #10094 `37bf0d5` 0.14: Clear release notes (MarcoFalke)\n - #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n - #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n - #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)"
      }
    ]
  },
  {
    "sha": "39febb8c6dbe286946773630d0484027307e5f42",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWZlYmI4YzZkYmUyODY5NDY3NzM2MzBkMDQ4NDAyNzMwN2U1ZjQy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-04-05T12:30:51Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2017-04-05T12:30:51Z"
      },
      "message": "[qa] Fix mempool_packages.py for the 0.14 branch\n\nThe backport in d947afc0f7868815dff248ad398c3680def5bf81 of this\ntest was incorrect due to an api change in prioritisetransaction.",
      "tree": {
        "sha": "22a03a536636293a972a147eb5a6d7fce15ea013",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/22a03a536636293a972a147eb5a6d7fce15ea013"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39febb8c6dbe286946773630d0484027307e5f42",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39febb8c6dbe286946773630d0484027307e5f42",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39febb8c6dbe286946773630d0484027307e5f42",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39febb8c6dbe286946773630d0484027307e5f42/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "47d24c85b71b854939522238f8e44c891d8674af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47d24c85b71b854939522238f8e44c891d8674af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47d24c85b71b854939522238f8e44c891d8674af"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "99e01534d69a2c3c4b93d37c7de8b42d23b4c599",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39febb8c6dbe286946773630d0484027307e5f42/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39febb8c6dbe286946773630d0484027307e5f42/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=39febb8c6dbe286946773630d0484027307e5f42",
        "patch": "@@ -104,15 +104,15 @@ def run_test(self):\n \n         # Check that ancestor modified fees includes fee deltas from\n         # prioritisetransaction\n-        self.nodes[0].prioritisetransaction(chain[0], 1000)\n+        self.nodes[0].prioritisetransaction(chain[0], 0, 1000)\n         mempool = self.nodes[0].getrawmempool(True)\n         ancestor_fees = 0\n         for x in chain:\n             ancestor_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n         \n         # Undo the prioritisetransaction for later tests\n-        self.nodes[0].prioritisetransaction(chain[0], -1000)\n+        self.nodes[0].prioritisetransaction(chain[0], 0, -1000)\n \n         # Check that descendant modified fees includes fee deltas from\n         # prioritisetransaction"
      }
    ]
  },
  {
    "sha": "226a9cb35d2951629abe978e74a1a137c5e26d1a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyMjZhOWNiMzVkMjk1MTYyOWFiZTk3OGU3NGExYTEzN2M1ZTI2ZDFh",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-04-05T17:23:43Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-04-05T17:25:28Z"
      },
      "message": "Add some more release notes for 0.14.1.\n\nThis adds a blurb for the segwit signaling and fixes up the attribution.",
      "tree": {
        "sha": "d39f731d9ee30ceecfe124dd5646cb370fd39111",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d39f731d9ee30ceecfe124dd5646cb370fd39111"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/226a9cb35d2951629abe978e74a1a137c5e26d1a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/226a9cb35d2951629abe978e74a1a137c5e26d1a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/226a9cb35d2951629abe978e74a1a137c5e26d1a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/226a9cb35d2951629abe978e74a1a137c5e26d1a/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df82ea914f6f569e244ab59ca24e4eea898eb1a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df82ea914f6f569e244ab59ca24e4eea898eb1a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df82ea914f6f569e244ab59ca24e4eea898eb1a9"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22452190aea70208cea139001e66546a682ec3b8",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/226a9cb35d2951629abe978e74a1a137c5e26d1a/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/226a9cb35d2951629abe978e74a1a137c5e26d1a/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=226a9cb35d2951629abe978e74a1a137c5e26d1a",
        "patch": "@@ -37,6 +37,20 @@ The first positional argument of `createrawtransaction` was renamed.\n This interface change breaks compatibility with 0.14.0, when the named\n arguments functionality, introduced in 0.14.0, is used.\n \n+\n+Mining\n+------\n+\n+Getblocktemplate sets the segwit version bit even when the downstream\n+client has not been updated to include the segwit commitment.  Ability\n+to enforce the rule is the only required criteria for safe activation,\n+but previously signaling was only requested if the miner could include\n+transactions in order to avoid a potential outcome where segwit would\n+activate at a time when no segwit transactions could be included.\n+Since many miners are now including the segwit commitment this concern\n+no longer applies.\n+\n+\n 0.14.1 Change log\n =================\n \n@@ -48,7 +62,7 @@ git merge commit are mentioned.\n ### RPC and other APIs\n - #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n - #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n-- #10146 `2fea10a` Better error handling for submitblock (gmaxwell)\n+- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n - #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n \n ### Block and transaction handling\n@@ -90,6 +104,7 @@ Thanks to everyone who directly contributed to this release:\n - Matt Corallo\n - Pieter Wuille\n - practicalswift\n+- rawodb\n - Suhas Daftuar\n - Wladimir J. van der Laan\n "
      }
    ]
  },
  {
    "sha": "24d74332c2281d398c8d9652aa8354d25e416a78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNGQ3NDMzMmMyMjgxZDM5OGM4ZDk2NTJhYTgzNTRkMjVlNDE2YTc4",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-06T07:35:08Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-06T07:35:13Z"
      },
      "message": "Merge #10158: Add some more release notes for 0.14.1.\n\n226a9cb Add some more release notes for 0.14.1. (Gregory Maxwell)\n\nTree-SHA512: ea74ae21f0a15556c877318833b998869a8a7378b40e168f84c80ee6c3433befa68ba52502d4d13ce2e5f14b8ad6b0a4075d67fea603d60ec94698f2a0606f6d",
      "tree": {
        "sha": "d39f731d9ee30ceecfe124dd5646cb370fd39111",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d39f731d9ee30ceecfe124dd5646cb370fd39111"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/24d74332c2281d398c8d9652aa8354d25e416a78",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5e+xAAoJEHSBCwEjRsmmvyYIAKJobq5ESwTcNzVbwAxCMtYz\nfM4Etf7pE9Pp5lsfRFLJz5yTehQkXU34QppJ+sGggUmTD6JCWCSFt+6shwlOQFM7\n4SBR1brI2HPL+40Bt2T3gg2vo1nB9X5I7yzTfiMG0b536DlQdNYV3wBvPRWZUbSN\nXpJBJabc/ZDcukSPWLSouoel5mkXAYQGGFB9BS2uIJ2ra0vl4kbcqvwbtD7en0pa\nVWe/8Dmaa8AnstAoC1iFZbq6RZ9szEuGXNSowM5EoJIgnWBdS5E9cxyy9nq4YlPB\nsyMXSuxwNdeYy3TbijcAUEQWBg2wEvmi/LhZUz2VEavjiY9HM4EQQq+n6plJm4s=\n=CTO9\n-----END PGP SIGNATURE-----",
        "payload": "tree d39f731d9ee30ceecfe124dd5646cb370fd39111\nparent df82ea914f6f569e244ab59ca24e4eea898eb1a9\nparent 226a9cb35d2951629abe978e74a1a137c5e26d1a\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1491464108 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491464113 +0200\n\nMerge #10158: Add some more release notes for 0.14.1.\n\n226a9cb Add some more release notes for 0.14.1. (Gregory Maxwell)\n\nTree-SHA512: ea74ae21f0a15556c877318833b998869a8a7378b40e168f84c80ee6c3433befa68ba52502d4d13ce2e5f14b8ad6b0a4075d67fea603d60ec94698f2a0606f6d\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24d74332c2281d398c8d9652aa8354d25e416a78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/24d74332c2281d398c8d9652aa8354d25e416a78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24d74332c2281d398c8d9652aa8354d25e416a78/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "df82ea914f6f569e244ab59ca24e4eea898eb1a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/df82ea914f6f569e244ab59ca24e4eea898eb1a9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/df82ea914f6f569e244ab59ca24e4eea898eb1a9"
      },
      {
        "sha": "226a9cb35d2951629abe978e74a1a137c5e26d1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/226a9cb35d2951629abe978e74a1a137c5e26d1a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/226a9cb35d2951629abe978e74a1a137c5e26d1a"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22452190aea70208cea139001e66546a682ec3b8",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/24d74332c2281d398c8d9652aa8354d25e416a78/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/24d74332c2281d398c8d9652aa8354d25e416a78/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=24d74332c2281d398c8d9652aa8354d25e416a78",
        "patch": "@@ -37,6 +37,20 @@ The first positional argument of `createrawtransaction` was renamed.\n This interface change breaks compatibility with 0.14.0, when the named\n arguments functionality, introduced in 0.14.0, is used.\n \n+\n+Mining\n+------\n+\n+Getblocktemplate sets the segwit version bit even when the downstream\n+client has not been updated to include the segwit commitment.  Ability\n+to enforce the rule is the only required criteria for safe activation,\n+but previously signaling was only requested if the miner could include\n+transactions in order to avoid a potential outcome where segwit would\n+activate at a time when no segwit transactions could be included.\n+Since many miners are now including the segwit commitment this concern\n+no longer applies.\n+\n+\n 0.14.1 Change log\n =================\n \n@@ -48,7 +62,7 @@ git merge commit are mentioned.\n ### RPC and other APIs\n - #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n - #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n-- #10146 `2fea10a` Better error handling for submitblock (gmaxwell)\n+- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n - #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n \n ### Block and transaction handling\n@@ -90,6 +104,7 @@ Thanks to everyone who directly contributed to this release:\n - Matt Corallo\n - Pieter Wuille\n - practicalswift\n+- rawodb\n - Suhas Daftuar\n - Wladimir J. van der Laan\n "
      }
    ]
  },
  {
    "sha": "55f641ca194b0090a7828b0cddd3ce829d80d9e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NWY2NDFjYTE5NGIwMDkwYTc4MjhiMGNkZGQzY2U4MjlkODBkOWU1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-06T07:35:41Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-06T07:35:50Z"
      },
      "message": "Merge #10157: [0.14] Fix the mempool_packages.py test\n\n39febb8 [qa] Fix mempool_packages.py for the 0.14 branch (Suhas Daftuar)\n\nTree-SHA512: 7b5f2627a76d79da5d7c9d30794219a87bec99296d5f74f66b347c7c8914244bfd07f0d48231adda7269678706fd9158b846d710f942b724c8c5748cc4a49c7e",
      "tree": {
        "sha": "a6e5f88ed29384071fc0b43587cf1595e3fbfd48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a6e5f88ed29384071fc0b43587cf1595e3fbfd48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/55f641ca194b0090a7828b0cddd3ce829d80d9e5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY5e/WAAoJEHSBCwEjRsmmh9EH/izjmVCXPKwD37C5Ikwfqjdy\n+bxQTnaBQ9HNxqUg9NLxpUqdBYbWOPWeajF1lgzMpDDFpzbX8xFl2XGKOxkFHGPn\nWja3xGTVWUY4NHLM2FYDBjo8XX01I7Khq2Z5KckEtMTTYT0+/ual+WbCPTLiBEpS\nAhQdIKhocJBz8KDLt1MAgk/WeHT1q4hZSX4yF/hEuGYgdnfVBCcSvHG3CaLHAkmK\nliSnaXdxFtnn226aJPwjhGRaG6T0Krh4/1udLL3rx5GTxVCaLfW4sXHpYFI1jKlI\nuduVdp34vAvhf92UrZzrSRXFIZ8S9NVcwANlu3wXJ+SMQFtvif37cN4Tb+ZuWaQ=\n=xHMs\n-----END PGP SIGNATURE-----",
        "payload": "tree a6e5f88ed29384071fc0b43587cf1595e3fbfd48\nparent 24d74332c2281d398c8d9652aa8354d25e416a78\nparent 39febb8c6dbe286946773630d0484027307e5f42\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1491464141 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1491464150 +0200\n\nMerge #10157: [0.14] Fix the mempool_packages.py test\n\n39febb8 [qa] Fix mempool_packages.py for the 0.14 branch (Suhas Daftuar)\n\nTree-SHA512: 7b5f2627a76d79da5d7c9d30794219a87bec99296d5f74f66b347c7c8914244bfd07f0d48231adda7269678706fd9158b846d710f942b724c8c5748cc4a49c7e\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55f641ca194b0090a7828b0cddd3ce829d80d9e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/55f641ca194b0090a7828b0cddd3ce829d80d9e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55f641ca194b0090a7828b0cddd3ce829d80d9e5/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "24d74332c2281d398c8d9652aa8354d25e416a78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/24d74332c2281d398c8d9652aa8354d25e416a78",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/24d74332c2281d398c8d9652aa8354d25e416a78"
      },
      {
        "sha": "39febb8c6dbe286946773630d0484027307e5f42",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39febb8c6dbe286946773630d0484027307e5f42",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39febb8c6dbe286946773630d0484027307e5f42"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "99e01534d69a2c3c4b93d37c7de8b42d23b4c599",
        "filename": "qa/rpc-tests/mempool_packages.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/55f641ca194b0090a7828b0cddd3ce829d80d9e5/qa/rpc-tests/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/55f641ca194b0090a7828b0cddd3ce829d80d9e5/qa/rpc-tests/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_packages.py?ref=55f641ca194b0090a7828b0cddd3ce829d80d9e5",
        "patch": "@@ -104,15 +104,15 @@ def run_test(self):\n \n         # Check that ancestor modified fees includes fee deltas from\n         # prioritisetransaction\n-        self.nodes[0].prioritisetransaction(chain[0], 1000)\n+        self.nodes[0].prioritisetransaction(chain[0], 0, 1000)\n         mempool = self.nodes[0].getrawmempool(True)\n         ancestor_fees = 0\n         for x in chain:\n             ancestor_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n         \n         # Undo the prioritisetransaction for later tests\n-        self.nodes[0].prioritisetransaction(chain[0], -1000)\n+        self.nodes[0].prioritisetransaction(chain[0], 0, -1000)\n \n         # Check that descendant modified fees includes fee deltas from\n         # prioritisetransaction"
      }
    ]
  },
  {
    "sha": "b7caa30c48eb60ef14f4746dd1617865187788b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2NhYTMwYzQ4ZWI2MGVmMTRmNDc0NmRkMTYxNzg2NTE4Nzc4OGIx",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-04-11T13:28:07Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@chaincode.com",
        "date": "2017-04-13T01:57:46Z"
      },
      "message": "Mention dbcache memory changes in 0.14.1 release notes",
      "tree": {
        "sha": "cd5afb9fada12fef84e85d8de065a177496277a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd5afb9fada12fef84e85d8de065a177496277a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7caa30c48eb60ef14f4746dd1617865187788b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7caa30c48eb60ef14f4746dd1617865187788b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7caa30c48eb60ef14f4746dd1617865187788b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7caa30c48eb60ef14f4746dd1617865187788b1/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55f641ca194b0090a7828b0cddd3ce829d80d9e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55f641ca194b0090a7828b0cddd3ce829d80d9e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55f641ca194b0090a7828b0cddd3ce829d80d9e5"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4479c1a456ac03306c59288337c6cb93c32bcab2",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7caa30c48eb60ef14f4746dd1617865187788b1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7caa30c48eb60ef14f4746dd1617865187788b1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=b7caa30c48eb60ef14f4746dd1617865187788b1",
        "patch": "@@ -50,6 +50,24 @@ activate at a time when no segwit transactions could be included.\n Since many miners are now including the segwit commitment this concern\n no longer applies.\n \n+UTXO memory accounting\n+----------------------\n+\n+Memory usage for the UTXO cache is being calculated more accurately, so that\n+the configured limit (`-dbcache`) will be respected when memory usage peaks\n+during cache flushes.  The memory accounting in prior releases is estimated to\n+only account for half the actual peak utilization.\n+\n+The default `-dbcache` has also been changed in this release to 450MiB.  Users\n+who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n+cached in memory) should consider increasing this setting in order to achieve\n+the same cache performance as prior releases.  Users on low-memory systems\n+(such as systems with 1GB or less) should consider specifying a lower value for\n+this parameter.\n+\n+Additional information relating to running on low-memory systems can be found\n+here:\n+[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n \n 0.14.1 Change log\n ================="
      }
    ]
  },
  {
    "sha": "06909df179e73a321963e85f53e270d297632409",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjkwOWRmMTc5ZTczYTMyMTk2M2U4NWY1M2UyNzBkMjk3NjMyNDA5",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-13T10:04:51Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-13T10:06:55Z"
      },
      "message": "Merge #10185: [0.14] Mention dbcache memory changes in release notes\n\nb7caa30 Mention dbcache memory changes in 0.14.1 release notes (Suhas Daftuar)\n\nTree-SHA512: cbc4bd55075c21c3cb1ea7857cf977ca60c6ae75b615512fbc9a42c4f329c40701fe31697634a47a17367e291c0969c2ad47266c8ef6d5bfd23e56614f515027",
      "tree": {
        "sha": "cd5afb9fada12fef84e85d8de065a177496277a8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cd5afb9fada12fef84e85d8de065a177496277a8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06909df179e73a321963e85f53e270d297632409",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY702/AAoJEHSBCwEjRsmmU18IAMwARSkvYwwz40qWOX2mGCzX\ndy42ueXVtLvGkU0p1BT2baIQK+ZMlBtBToMGNN1tCAOK9+HBJi8tjGR+J7/l055K\nrhoJIE1KUpfAtcCnmDuUkZdb3Vk9VbTl5fDe8gjRGO3mJXHD6jSOYYmqSw8M79ub\nguDPXAWF3XkQ0qJgGmXXysLDt7LejcyBk3ykMYKg3JhxsntF4zV4YTFK4IBbGUK/\nEOSVT+kvRSUkgnAx4ovOXX5q5Jg7xv7DdEWQqXbFCMEXdWETJSDeoqkvA2V2ua5M\nhJEN+ERxhJUBQEin74TN01kmA0cBq1vBc/d+fUHhircMohK9jLmSAF2RyLnT8yk=\n=BRoq\n-----END PGP SIGNATURE-----",
        "payload": "tree cd5afb9fada12fef84e85d8de065a177496277a8\nparent 55f641ca194b0090a7828b0cddd3ce829d80d9e5\nparent b7caa30c48eb60ef14f4746dd1617865187788b1\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1492077891 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492078015 +0200\n\nMerge #10185: [0.14] Mention dbcache memory changes in release notes\n\nb7caa30 Mention dbcache memory changes in 0.14.1 release notes (Suhas Daftuar)\n\nTree-SHA512: cbc4bd55075c21c3cb1ea7857cf977ca60c6ae75b615512fbc9a42c4f329c40701fe31697634a47a17367e291c0969c2ad47266c8ef6d5bfd23e56614f515027\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06909df179e73a321963e85f53e270d297632409",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06909df179e73a321963e85f53e270d297632409",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06909df179e73a321963e85f53e270d297632409/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55f641ca194b0090a7828b0cddd3ce829d80d9e5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55f641ca194b0090a7828b0cddd3ce829d80d9e5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55f641ca194b0090a7828b0cddd3ce829d80d9e5"
      },
      {
        "sha": "b7caa30c48eb60ef14f4746dd1617865187788b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7caa30c48eb60ef14f4746dd1617865187788b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7caa30c48eb60ef14f4746dd1617865187788b1"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 18,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4479c1a456ac03306c59288337c6cb93c32bcab2",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 18,
        "deletions": 0,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06909df179e73a321963e85f53e270d297632409/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06909df179e73a321963e85f53e270d297632409/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=06909df179e73a321963e85f53e270d297632409",
        "patch": "@@ -50,6 +50,24 @@ activate at a time when no segwit transactions could be included.\n Since many miners are now including the segwit commitment this concern\n no longer applies.\n \n+UTXO memory accounting\n+----------------------\n+\n+Memory usage for the UTXO cache is being calculated more accurately, so that\n+the configured limit (`-dbcache`) will be respected when memory usage peaks\n+during cache flushes.  The memory accounting in prior releases is estimated to\n+only account for half the actual peak utilization.\n+\n+The default `-dbcache` has also been changed in this release to 450MiB.  Users\n+who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n+cached in memory) should consider increasing this setting in order to achieve\n+the same cache performance as prior releases.  Users on low-memory systems\n+(such as systems with 1GB or less) should consider specifying a lower value for\n+this parameter.\n+\n+Additional information relating to running on low-memory systems can be found\n+here:\n+[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n \n 0.14.1 Change log\n ================="
      }
    ]
  },
  {
    "sha": "3c796026e56abddf1b37128c0478532a371b5f9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzc5NjAyNmU1NmFiZGRmMWIzNzEyOGMwNDc4NTMyYTM3MWI1Zjlm",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-04-13T19:38:59Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T08:19:06Z"
      },
      "message": "[rpc] rename disconnectnode argument\n\nGithub-Pull: #10204\nRebased-From: 883154cbcb306dcc6205fe349c7056ced1f6c5fc",
      "tree": {
        "sha": "908d178bb034394dbd030070456204857cad3c97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/908d178bb034394dbd030070456204857cad3c97"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c796026e56abddf1b37128c0478532a371b5f9f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY8IX6AAoJEHSBCwEjRsmm79oH+wRLozpqc5ccB5z1kLgKOtjP\nSULKAEe2fxQlykLhuGxJ8z9BK5/jI3UtvWwj5ap+yDseiuiVDSoTTE6kxU6bcJpu\nVRHTJ06G83Z3tcbY/JzCKU63slT2eHWO8mOeFqD6jrkmh3wXjEVV2x4w2N3N2NDS\nt/Nl6g7L08lMpiiZJ5fEmdWfWdM551nimW2WlCl6X7ZiLwCejUECKJVSUyIrHxlv\nGgmjwUXJykdDxM30Mg064eW0oyCaLyO1ZiR18zMtszZShK8b6R/ywwe3v/I5xaCK\n3zvQEI7oCsXmwfQGmyNtOGFyW85wWYv8CPXxdOfK4cT+mTgHvvg7Y/WFIvAsCLw=\n=7kcm\n-----END PGP SIGNATURE-----",
        "payload": "tree 908d178bb034394dbd030070456204857cad3c97\nparent 06909df179e73a321963e85f53e270d297632409\nauthor John Newbery <john@johnnewbery.com> 1492112339 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492157946 +0200\n\n[rpc] rename disconnectnode argument\n\nGithub-Pull: #10204\nRebased-From: 883154cbcb306dcc6205fe349c7056ced1f6c5fc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c796026e56abddf1b37128c0478532a371b5f9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c796026e56abddf1b37128c0478532a371b5f9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c796026e56abddf1b37128c0478532a371b5f9f/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06909df179e73a321963e85f53e270d297632409",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06909df179e73a321963e85f53e270d297632409",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06909df179e73a321963e85f53e270d297632409"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "8706b4295156b8a875b8be8a60a8889359619680",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c796026e56abddf1b37128c0478532a371b5f9f/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c796026e56abddf1b37128c0478532a371b5f9f/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=3c796026e56abddf1b37128c0478532a371b5f9f",
        "patch": "@@ -237,11 +237,11 @@ UniValue addnode(const JSONRPCRequest& request)\n UniValue disconnectnode(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n-            \"disconnectnode \\\"node\\\" \\n\"\n+        throw std::runtime_error(\n+            \"disconnectnode \\\"address\\\" \\n\"\n             \"\\nImmediately disconnects from the specified node.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"node\\\"     (string, required) The node (see getpeerinfo for nodes)\\n\"\n+            \"1. \\\"address\\\"     (string, required) The IP address/port of the node\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n             + HelpExampleRpc(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n@@ -609,7 +609,7 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"ping\",                   &ping,                   true,  {} },\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n     { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"node\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"address\"} },\n     { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n     { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n     { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },"
      }
    ]
  },
  {
    "sha": "30fa231011a63404a087420a9de7271af077affa",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMGZhMjMxMDExYTYzNDA0YTA4NzQyMGE5ZGU3MjcxYWYwNzdhZmZh",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2017-04-10T19:00:23Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T08:35:49Z"
      },
      "message": "net: define NodeId as an int64_t\n\nThis should make occurances of NodeId wrapping essentially impossible for\nreal-world usage.\n\nGithub-Pull: #10176\nRebased-From: c851be4b25905977ca471c42435dc590fd2ff2f5",
      "tree": {
        "sha": "c719ebdc883edf98ae982994b76104432e38e64e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c719ebdc883edf98ae982994b76104432e38e64e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/30fa231011a63404a087420a9de7271af077affa",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY8InmAAoJEHSBCwEjRsmmClgH/iIi2l+z7Hf6eDA7XXQu8RFX\n34Ez94c9YBM245zqrudJ0sIdXunqLpKiYQVWns3OgVXsm/yPOYH5Yi/PviGEMuXy\nfwZjad5Z+tdGrNLkV0DY9TbzqhHtmzs88uFQed7ihBsrVTUVbjoJ+DU/zeZIYdL7\nXuQb54tO9MEwOfmtfF33+xaLPdDHVWY4uCw8vEhDvjXDcWNkb4qcxQ2zc9pTLgoe\n+qjB+eFueVIX1Sr8Le03di174USuUjZkbkpDbHfFSUfuLNoKUS6DtQOSPfFxW/Jv\nmY+42XRUAc7CDuiIarpgte5zDHzkEObv0zfsi5QZSzYbP2xmAJXfNfAvZImyo6o=\n=cBUh\n-----END PGP SIGNATURE-----",
        "payload": "tree c719ebdc883edf98ae982994b76104432e38e64e\nparent 3c796026e56abddf1b37128c0478532a371b5f9f\nauthor Cory Fields <cory-nospam-@coryfields.com> 1491850823 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492158949 +0200\n\nnet: define NodeId as an int64_t\n\nThis should make occurances of NodeId wrapping essentially impossible for\nreal-world usage.\n\nGithub-Pull: #10176\nRebased-From: c851be4b25905977ca471c42435dc590fd2ff2f5\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fa231011a63404a087420a9de7271af077affa",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/30fa231011a63404a087420a9de7271af077affa",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fa231011a63404a087420a9de7271af077affa/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c796026e56abddf1b37128c0478532a371b5f9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c796026e56abddf1b37128c0478532a371b5f9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c796026e56abddf1b37128c0478532a371b5f9f"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "dc727152a3474b577c61d0fcc227d39080eb1401",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30fa231011a63404a087420a9de7271af077affa/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30fa231011a63404a087420a9de7271af077affa/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=30fa231011a63404a087420a9de7271af077affa",
        "patch": "@@ -92,7 +92,7 @@ static const ServiceFlags REQUIRED_SERVICES = NODE_NETWORK;\n // NOTE: When adjusting this, update rpcnet:setban's help (\"24h\")\n static const unsigned int DEFAULT_MISBEHAVING_BANTIME = 60 * 60 * 24;  // Default 24-hour ban\n \n-typedef int NodeId;\n+typedef int64_t NodeId;\n \n struct AddedNodeInfo\n {"
      },
      {
        "sha": "fff072fd4c8cff26b9024cd28d6244d98f0ad719",
        "filename": "src/qt/peertablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30fa231011a63404a087420a9de7271af077affa/src/qt/peertablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30fa231011a63404a087420a9de7271af077affa/src/qt/peertablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/peertablemodel.cpp?ref=30fa231011a63404a087420a9de7271af077affa",
        "patch": "@@ -166,7 +166,7 @@ QVariant PeerTableModel::data(const QModelIndex &index, int role) const\n         switch(index.column())\n         {\n         case NetNodeId:\n-            return rec->nodeStats.nodeid;\n+            return (qint64)rec->nodeStats.nodeid;\n         case Address:\n             return QString::fromStdString(rec->nodeStats.addrName);\n         case Subversion:"
      },
      {
        "sha": "77e5e03e6432fc6375bffd350c5b5d49a2c8d86f",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/30fa231011a63404a087420a9de7271af077affa/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/30fa231011a63404a087420a9de7271af077affa/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=30fa231011a63404a087420a9de7271af077affa",
        "patch": "@@ -1115,7 +1115,7 @@ void RPCConsole::disconnectSelectedNode()\n     for(int i = 0; i < nodes.count(); i++)\n     {\n         // Get currently selected peer address\n-        NodeId id = nodes.at(i).data().toInt();\n+        NodeId id = nodes.at(i).data().toLongLong();\n         // Find the node, disconnect it and clear the selected node\n         if(g_connman->DisconnectNode(id))\n             clearSelectedNode();\n@@ -1132,7 +1132,7 @@ void RPCConsole::banSelectedNode(int bantime)\n     for(int i = 0; i < nodes.count(); i++)\n     {\n         // Get currently selected peer address\n-        NodeId id = nodes.at(i).data().toInt();\n+        NodeId id = nodes.at(i).data().toLongLong();\n \n \t// Get currently selected peer address\n \tint detailNodeRow = clientModel->getPeerTableModel()->getRowByNodeId(id);"
      }
    ]
  },
  {
    "sha": "348a71701db4cb29a762c7d60aba34380ee1d403",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDhhNzE3MDFkYjRjYjI5YTc2MmM3ZDYwYWJhMzQzODBlZTFkNDAz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T10:25:11Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T10:25:51Z"
      },
      "message": "qt: translations update pre-rc2",
      "tree": {
        "sha": "953972af912c602ae0bd066bd126d91f25c645f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/953972af912c602ae0bd066bd126d91f25c645f0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/348a71701db4cb29a762c7d60aba34380ee1d403",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY8KOxAAoJEHSBCwEjRsmmD7MH/1Dz7MsQs4dPUOrtoedM6vvc\neNPODKOq7S3wmw3WNZpsxLJALYZOEof/QqfYnyC8QkGfLjsikd/zvYTi0fZ3WYiP\n7JfjZRx3leIVSkq2O774k6gDi/WqP387isP+wa5JD8a1qdyJkv+5o6BwGi1NsnUb\n+ECrbbwS/Nk7KIOKXW4q4YuTMgYvadun0QutoXHgOz/3c3mPrQ9YTBUS+9mFhbEr\nmgupipLTsjk3bcuSOr+0/CZm/TWf57Urn2SpCZXu0ACbs1fG2UxEfQP4rhSlYHKA\nyUH5idpNiD0/bA/n7sudvFNKd2Nrrfcx28MdxKn3gbOio199nThiPYnFdGJtoK0=\n=7mv1\n-----END PGP SIGNATURE-----",
        "payload": "tree 953972af912c602ae0bd066bd126d91f25c645f0\nparent 30fa231011a63404a087420a9de7271af077affa\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1492165511 +0000\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492165551 +0200\n\nqt: translations update pre-rc2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/348a71701db4cb29a762c7d60aba34380ee1d403",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/348a71701db4cb29a762c7d60aba34380ee1d403",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/348a71701db4cb29a762c7d60aba34380ee1d403/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "30fa231011a63404a087420a9de7271af077affa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/30fa231011a63404a087420a9de7271af077affa",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/30fa231011a63404a087420a9de7271af077affa"
      }
    ],
    "stats": {
      "total": 1406,
      "additions": 1369,
      "deletions": 37
    },
    "files": [
      {
        "sha": "235b48f853d5536dacbad03547234a1d4b1ee8c7",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rke</translation>\n+        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -604,7 +604,7 @@\n     </message>\n     <message>\n         <source>Received with label</source>\n-        <translation>Modtaget med m\u00e6rke</translation>\n+        <translation>Modtaget med m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Received with address</source>"
      },
      {
        "sha": "9bc94cc8ded33dfd60f9ada9d32f4e0bd3ee3f41",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 65,
        "deletions": 1,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -43,7 +43,7 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>W\u00e4hlen Sie die Adresse aus, an die Sie Bitcoins \u00fcberweisen m\u00f6chten</translation>\n+        <translation>W\u00e4hlen Sie die Adresse aus, an die Sie Bitcoins senden m\u00f6chten</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n@@ -885,6 +885,14 @@\n         <source>Form</source>\n         <translation>Formular</translation>\n     </message>\n+    <message>\n+        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n+        <translation>Neueste Transaktionen werden eventuell noch nicht angezeigt, daher k\u00f6nnte Ihr Kontostand veraltet sein. Er wird korrigiert, sobald Ihr Wallet die Synchronisation mit dem Bitcoin-Netzwerk erfolgreich abgeschlossen. Details dazu finden sich weiter unten.</translation>\n+    </message>\n+    <message>\n+        <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n+        <translation>Versuche, Bitcoins aus noch nicht angezeigten Transaktionen auszugeben, werden vom Netzwerk nicht akzeptiert.</translation>\n+    </message>\n     <message>\n         <source>Number of blocks left</source>\n         <translation>Anzahl verbleibender Bl\u00f6cke</translation>\n@@ -2200,6 +2208,10 @@\n         <source>Confirm custom change address</source>\n         <translation>Best\u00e4tige benutzerdefinierte Wechselgeld-Adresse</translation>\n     </message>\n+    <message>\n+        <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n+        <translation>Die ausgew\u00e4hlte Wechselgeld-Adresse ist nicht Bestandteil dieses Wallets. Einige oder alle Mittel aus Ihrem Wallet k\u00f6nnten an diese Adresse gesendet werden. Wollen Sie das wirklich?</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(keine Bezeichnung)</translation>\n@@ -2997,6 +3009,10 @@\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n         <translation>Eingehende Verbindungen annehmen (Standard: 1, wenn nicht -proxy oder -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Verbindungen nur zu spezifizierten Node(s); verwenden Sie -noconnect oder -connect=0 alleine um automatische Verbindungen zu deaktivieren</translation>\n+    </message>\n     <message>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation>Ver\u00f6ffentlicht unter der MIT-Softwarelizenz, siehe beiligende Datei %s oder %s.</translation>\n@@ -3073,6 +3089,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Befehl ausf\u00fchren wenn sich eine Wallet-Transaktion ver\u00e4ndert (%s im Befehl wird durch die Transaktions-ID ersetzt)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Zus\u00e4tzliche Transaktionen f\u00fcr kompakten Block-Nachbau im Speicher vorhalten (default: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Sofern dieser Block Bestandteil der Blockchain ist, nehme an das er und seine Vorg\u00e4nger g\u00fcltig sind und \u00fcberspringe ggf. dessen Skriptverifikation (0 um alle zu verifizieren, default: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</translation>\n@@ -3089,6 +3113,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Wenn sie %s n\u00fctzlich finden, sind Helfer sehr gern gesehen. Besuchen Sie %s um mehr \u00fcber das Softwareprojekt zu erfahren.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Speicherplatzanforderung durch K\u00fcrzen (Pruning) alter Bl\u00f6cke reduzieren. Dies erlaubt das Aufrufen des sogenannten Pruneblockchain RPC zum L\u00f6schen spezifischer Bl\u00f6cke und und aktiviert das automatische Pruning alter Bl\u00f6cke, sofern eine Zielgr\u00f6\u00dfe in MIB angegeben wird. Dieser Modus ist nicht mit -txindex und -resacan kompatibel. Warnung: Das R\u00fccksetzen dieser Einstellung erfordert das erneute Herunterladen der gesamten Blockchain. (Standard: 0 = deaktiviert das Pruning, 1 = erlaubt manuelles Pruning via RPC, &gt;%u = automatisches Pruning der Blockdateien, um angegebene Maximalgr\u00f6\u00dfe nicht zu \u00fcberschreiten)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Niedrigste Geb\u00fchr (in %s/kB) f\u00fcr Transaktionen einstellen, die bei der Blockerzeugung ber\u00fccksichtigt werden sollen. (default: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Maximale Anzahl an Skript-Verifizierungs-Threads festlegen (%u bis %d, 0 = automatisch, &lt;0 = so viele Kerne frei lassen, Standard: %d)</translation>\n@@ -3113,6 +3145,10 @@\n         <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n         <translation>Benutzername und gehashtes Passwort f\u00fcr JSON-RPC Verbindungen. Das Feld &lt;userpw&gt; kommt im Format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Ein kanonisches Pythonskript ist in share/rpcuser inbegriffen. Der client benutzt wie gehabt, die rpcuser/rpcpassword Parameter. Diese Option kann mehrere Male spezifiziert werden</translation>\n     </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>Das Wallet erzeugt keine Transaktionen, die das Mempool Chain Limit \u00fcberschreiten (Standardeinstellung: %u)</translation>\n+    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Warnung: Das Netzwerk scheint nicht vollst\u00e4ndig \u00fcbereinzustimmen! Einige Miner scheinen Probleme zu haben.</translation>\n@@ -3153,6 +3189,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>Kann Adresse in -%s nicht aufl\u00f6sen: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Chain Auswahloptionen:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Position des Wechselgelds au\u00dferhalb des Bereichs</translation>\n@@ -3645,6 +3685,10 @@\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n         <translation>Adressen von Gegenstellen via DNS-Namensaufl\u00f6sung finden, falls zu wenige Adressen verf\u00fcgbar sind (Standard: 1, au\u00dfer bei -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n+        <translation>Setzt die Serialisierung von Rohtransaktionen oder Block Hex-Daten auf non-verbose mode, nicht-Segwit(0) oder Segwit(1) (default: %d)</translation>\n+    </message>\n     <message>\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Unterst\u00fctze Bl\u00f6cke und Transaktionen mit  Bloomfiltern zu filtern (default: %u)</translation>\n@@ -3705,6 +3749,10 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ung\u00fcltige Adresse in -proxy: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Der Keypool ist ersch\u00f6pft. Bitte rufen Sie zun\u00e4chst keypoolrefill auf.</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; nach JSON-RPC-Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n@@ -3773,6 +3821,14 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Unbest\u00e4tigtes Wechselgeld darf beim Senden von Transaktionen ausgegeben werden (Standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Starting network threads...</source>\n+        <translation>Netzwerk-Threads werden gestartet...</translation>\n+    </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>Das Wallet verhindert Zahlungen, die die Mindesttransaktionsgeb\u00fchr nicht ber\u00fccksichtigen.</translation>\n+    </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>Dies ist die minimale Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n@@ -3789,6 +3845,14 @@\n         <source>Transaction amounts must not be negative</source>\n         <translation>Transaktionsbetr\u00e4ge d\u00fcrfen nicht negativ sein.</translation>\n     </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>Die Speicherpoolkette der Transaktion ist zu lang.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>Die Transaktion muss mindestens einen Empf\u00e4nger enthalten.</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Unbekannter Netztyp in -onlynet angegeben: '%s'</translation>"
      },
      {
        "sha": "21f308e80e442264fd795b4edc9b741f1e1152d6",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -41,6 +41,14 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae</translation>\n     </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ae\u03c8\u03b7\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -63,6 +71,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0395\u03c0\u03b1\u03bd\u03ad\u03bb\u03b1\u03b2\u03b5 \u03c4\u03bf\u03bd \u03bd\u03ad\u03bf \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2</translation>\n     </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u039e\u03b5\u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03c3\u03b5 \u03c4\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>"
      },
      {
        "sha": "a476b56596f6cc8fc3a9e434e7d009b1d2067f50",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -2030,7 +2030,7 @@\n     </message>\n     <message>\n         <location line=\"+60\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+456\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+460\"/>\n         <location line=\"+719\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>"
      },
      {
        "sha": "16c584c4b10faae31c3d6673d8a9ba79958c4784",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 119,
        "deletions": 3,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -41,10 +41,78 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Forigi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Elekti la adreson por sendi monerojn</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Elekti la adreson ricevi monerojn kun</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Elekti</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Sendaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ricevaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Jen viaj Bitmon-adresoj por sendi pagojn. Zorge kontrolu la sumon kaj la alsendan adreson anta\u016d ol sendi.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Jen viaj bitmonaj adresoj por ricevi pagojn. Estas konsilinde uzi apartan ricevan adreson por \u0109iu transakcio.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopii Adreson</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopii &amp;Etikedon</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Redakti</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporti Adresliston</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Okazis eraron dum konservo de adreslisto al %1. Bonvolu provi denove.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -386,6 +454,10 @@\n         <source>Confirmed</source>\n         <translation>Konfirmita</translation>\n     </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -934,9 +1006,25 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Konservi Bildon...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1016,7 +1104,11 @@\n         <source>S&amp;end</source>\n         <translation>\u015cendi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1179,9 +1271,33 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "1cac03951c61bc5d78f8060e7b1d970e06f2a44b",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 78,
        "deletions": 2,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -895,7 +895,7 @@\n     </message>\n     <message>\n         <source>Number of blocks left</source>\n-        <translation>N\u00famero de bloques dejados</translation>\n+        <translation>N\u00famero de bloques restantes</translation>\n     </message>\n     <message>\n         <source>Unknown...</source>\n@@ -1726,7 +1726,7 @@\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.</source>\n-        <translation>ADVERTENCIA: Los estafadores han sido activados, dici\u00e9ndoles a los usuarios que escriban comandos aqu\u00ed, robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n+        <translation>ADVERTENCIA: Hay estafadores activos diciendo a los usuarios que escriban comandos aqu\u00ed y robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n     </message>\n     <message>\n         <source>Network activity disabled</source>\n@@ -3124,6 +3124,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Contribuya si encuentra %s de utilidad. Visite %s para mas informaci\u00f3n acerca del programa.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Reducir los requerimientos de almacenamiento habilitando la poda (eliminaci\u00f3n) de los bloques viejos. Esto permite que la cadena de bloqueo RPC sea llamada para eliminar bloques espec\u00edficos, y habilita la poda autom\u00e1tica de bloques viejos si se provee el tama\u00f1o de un objetivo en MiB. Este modo es incompatible con -txindex and -rescan. Precauci\u00f3n: Revertir este ajuste requiere volver a descargar la cadena de bloqueo completa. (predefinido: 0 = deshabilita bloques de poda, 1 = permite la poda manual mediante RPC, &gt;%u = elimina autom\u00e1ticamente los archivos de bloqueo para permanecer bajo el tama\u00f1o del objetivo especificado en MiB)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Establecer la tasa m\u00e1s baja (en %s/kB) por transacciones para incluirse en la creaci\u00f3n de bloque. (predeterminado: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Establecer el n\u00famero de hilos (threads) de verificaci\u00f3n de scripts (entre %u y %d, 0 = autom\u00e1tico, &lt;0 = dejar libres ese n\u00famero de n\u00facleos; predeterminado: %d)</translation>\n@@ -3132,6 +3140,10 @@\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>La base de datos de bloques contiene un bloque que parece ser del futuro. Esto puede ser porque la fecha y hora de tu ordenador est\u00e1n mal ajustados. Reconstruye la base de datos de bloques solo si estas seguro de que la fecha y hora de tu ordenador estan ajustados correctamente.</translation>\n     </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Esta es una versi\u00f3n de prueba prelanzada - util\u00edcelo a su propio riesgo - no lo utilice para aplicaciones de miner\u00eda o comerciales</translation>\n+    </message>\n     <message>\n         <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n         <translation>No es posible reconstruir la base de datos a un estado anterior. Debe descargar de nuevo la cadena de bloques.</translation>\n@@ -3140,6 +3152,22 @@\n         <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n         <translation>Utiliza UPnP para asignar el puerto de escucha (predeterminado: 1 cuando esta escuchando sin -proxy)</translation>\n     </message>\n+    <message>\n+        <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n+        <translation>Nombre de usuario y contrase\u00f1a numerada para conexiones JSON-RPC. El campo &lt;userpw&gt; viene en el formato: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Un script can\u00f3nico de python est\u00e1 inclu\u00eddo en compartir/usuario rpc. Entonces el cliente se conecta normalmente utilizando la pareja de argumentos usuario rpc=&lt;USERNAME&gt;/contrase\u00f1a rpc=&lt;PASSWORD&gt;. Esta opci\u00f3n puede ser especificada m\u00faltiples veces</translation>\n+    </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>El monedero no crear\u00e1 transacciones que violen los l\u00edmites de la cadena mempool (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Advertencia: \u00a1La red no parece coincidir del todo! Algunos mineros parecen estar experimentando problemas.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Advertencia: \u00a1No parecemos estar del todo con nuestros pares! Puede que necesite actualizarse, o puede que otros nodos necesiten actualizarse.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex-chainstate to change -txindex</source>\n         <translation>Necesita reconstruir la base de datos usando -reindex-chainstate para cambiar -txindex</translation>\n@@ -3172,6 +3200,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>No se puede resolver -%s direccion: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Opciones de selecci\u00f3n en cadena:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Cambio de indice fuera de rango</translation>\n@@ -3368,6 +3400,10 @@\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Usar UPnP para asignar el puerto de escucha (predeterminado:: %u)</translation>\n     </message>\n+    <message>\n+        <source>Use the test chain</source>\n+        <translation>Utilice la cadena de prueba</translation>\n+    </message>\n     <message>\n         <source>User Agent comment (%s) contains unsafe characters.</source>\n         <translation>El comentario del Agente de Usuario (%s) contiene caracteres inseguros.</translation>\n@@ -3662,6 +3698,10 @@\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Mostrar depuraci\u00f3n (por defecto: %u, proporcionar &lt;category&gt; es opcional)</translation>\n     </message>\n+    <message>\n+        <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n+        <translation>Preguntar por direcciones pares al buscar DNS, si baja en las direcciones (predeterminado: 1 a menos que -connect/-noconnect)</translation>\n+    </message>\n     <message>\n         <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n         <translation>https://www.transifex.com/joyful-world/breaking-english/\n@@ -3671,6 +3711,14 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Admite filtrado de bloques, y transacciones con filtros Bloom. Reduce la carga de red. ( por defecto :%u)</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n+        <translation>Esta es la tarifa de cuota que debe pagar cuando las estimaciones de tarifas no est\u00e9n disponibles.</translation>\n+    </message>\n+    <message>\n+        <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n+        <translation>Este producto incluye software desarrollado por el Proyecto OpenSSL para utilizarlo en el juego de herramientas OpenSSL %s y software criptogr\u00e1fico escrito por Eric Young y software UPnP escrito por Thomas Bernard.</translation>\n+    </message>\n     <message>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>La longitud total de la cadena de versi\u00f3n de red ( %i ) supera la longitud m\u00e1xima ( %i ) . Reducir el n\u00famero o tama\u00f1o de uacomments .</translation>\n@@ -3703,6 +3751,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n         <translation>Los pares de listas blancas que se conectan desde la direcci\u00f3n IP dada (por ejemplo, 1.2.3.4) o la red marcada CIDR (por ejemplo, 1.2.3.0/24). Se puede especificar varias veces.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>\u00a1%s se establece muy alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3763,6 +3815,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transacciones con full-RBF opt-in habilitado (predeterminado: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>\n@@ -3795,14 +3851,34 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Starting network threads...</source>\n         <translation>Iniciando funciones de red...</translation>\n     </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>El monedero evitar\u00e1 pagar menos que la cuota de retransmisi\u00f3n m\u00ednima.</translation>\n+    </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>Esta es la tarifa m\u00ednima de transacci\u00f3n que usted paga en cada transacci\u00f3n.</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>Esta es la cuota de transacci\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: %u)</translation>\n     </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Las cantidades de transacci\u00f3n no deben ser negativa</translation>\n+    </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>La transacci\u00f3n tiene demasiado tiempo de una cadena de mempool</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>La transacci\u00f3n debe de tener al menos un receptor</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>La red especificada en -onlynet '%s' es desconocida</translation>"
      },
      {
        "sha": "c81723a7a4460b9745867d949c555117869b92c9",
        "filename": "src/qt/locale/bitcoin_es_ES.ts",
        "status": "modified",
        "additions": 75,
        "deletions": 3,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_es_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_es_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_ES.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -317,6 +317,22 @@\n         <source>Open &amp;URI...</source>\n         <translation>Abrir &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>Haz click para desactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>Actividad de red desactivada.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>Haz click para reactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>Sincronizando cabeceras (%1%)...</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Reindexando bloques en disco...</translation>\n@@ -519,7 +535,11 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>El monedero est\u00e1 &lt;b&gt;cifrado&lt;/b&gt; y actualmente &lt;b&gt;bloqueado&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Ha ocurrido un error fatal. Bitcoin no puede continuar de manera segura y se cerrar\u00e1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -853,15 +873,43 @@\n         <source>Form</source>\n         <translation>Formulario</translation>\n     </message>\n+    <message>\n+        <source>Number of blocks left</source>\n+        <translation>N\u00famero de bloques restantes</translation>\n+    </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Desconocido...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Hora del \u00faltimo bloque</translation>\n     </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>Progreso</translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>Incremento del progreso por hora</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>calculando...</translation>\n+    </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Tiempo estimado restante hasta sincronizaci\u00f3n completa</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Ocultar</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Unknown. Syncing Headers (%1)...</source>\n+        <translation>Desconocido. Sincronizando cabeceras (%1)...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -1296,6 +1344,10 @@\n         <source>Node/Service</source>\n         <translation>Nodo/Servicio</translation>\n     </message>\n+    <message>\n+        <source>NodeId</source>\n+        <translation>NodeId</translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject</name>\n@@ -1339,9 +1391,17 @@\n         <source>%1 and %2</source>\n         <translation>%1 y %2</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>%1 didn't yet exit safely...</source>\n+        <translation>%1 a\u00fan no ha salido de manera segura...</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject::QObject</name>\n+    <message>\n+        <source>Error: Specified data directory \"%1\" does not exist.</source>\n+        <translation>Error: directorio especificado \"%1\" no existe.</translation>\n+    </message>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n@@ -1936,6 +1996,10 @@\n         <source>Dust:</source>\n         <translation>Polvo:</translation>\n     </message>\n+    <message>\n+        <source>Confirmation time target:</source>\n+        <translation>Tiempo objetivo de confirmaci\u00f3n:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>Vaciar &amp;todo</translation>\n@@ -3482,6 +3546,10 @@\n         <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aviso: fichero de monedero corrupto, datos recuperados! Original %s guardado como %s en %s; si su balance de transacciones es incorrecto, debe restaurar desde una copia de seguridad.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>%s es demasiado alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3538,6 +3606,10 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transaciones con RBF-completo opt-in activado (default: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>"
      },
      {
        "sha": "9b0c908381581e7517e17c3a8ae69e5d9fbd6404",
        "filename": "src/qt/locale/bitcoin_et_EE.ts",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_et_EE.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_et_EE.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et_EE.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -87,6 +87,10 @@\n         <source>The supplied passphrases do not match.</source>\n         <translation>Sisestatud paroolid ei kattu.</translation>\n     </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Rahakoti lahtilukustamine eba\u00f5nnestus</translation>\n+    </message>\n     <message>\n         <source>Wallet decryption failed</source>\n         <translation>Rahakoti dekr\u00fcpteerimine eba\u00f5nnestus</translation>\n@@ -109,6 +113,14 @@\n         <source>&amp;Overview</source>\n         <translation>&amp;\u00dclevaade</translation>\n     </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>V\u00e4lju rakendusest</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>&amp;Valikud...</translation>\n+    </message>\n     <message>\n         <source>Open &amp;URI...</source>\n         <translation>Ava &amp;URI...</translation>\n@@ -125,14 +137,30 @@\n         <source>Wallet</source>\n         <translation>Rahakott</translation>\n     </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;Saada</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;N\u00e4ita / Peida</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;Fail</translation>\n     </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>&amp;Seaded</translation>\n+    </message>\n     <message>\n         <source>&amp;Help</source>\n         <translation>&amp;Abi</translation>\n     </message>\n+    <message>\n+        <source>&amp;Command-line options</source>\n+        <translation>&amp;K\u00e4surea valikud</translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 ajast maas</translation>\n@@ -203,6 +231,10 @@\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Aadress</translation>\n+    </message>\n     <message>\n         <source>New key generation failed.</source>\n         <translation>Uue v\u00f5tme genereerimine eba\u00f5nnestus.</translation>"
      },
      {
        "sha": "b83afb86180880315bf6440eda23e22be7412771",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -115,6 +115,10 @@\n         <source>Decrypt wallet</source>\n         <translation>\u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631 \u06af\u0630\u0631\u0648\u0627\u0698\u0647</translation>\n+    </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -506,6 +510,10 @@\n         <source>Confirmed</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n@@ -530,6 +538,10 @@\n         <source>Copy quantity</source>\n         <translation>\u06a9\u067e\u06cc \u062a\u0639\u062f\u0627\u062f</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n     <message>\n         <source>(%1 locked)</source>\n         <translation>(%1 \u0642\u0641\u0644 \u0634\u062f\u0647)</translation>\n@@ -697,6 +709,10 @@\n         <source>Form</source>\n         <translation>\u0641\u0631\u0645</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u0645\u0634\u062e\u0635 \u0646\u06cc\u0633\u062a</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u062e\u0631\u06cc\u0646 \u0628\u0644\u0648\u06a9</translation>\n@@ -1328,6 +1344,10 @@\n         <source>Copy amount</source>\n         <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n@@ -1514,6 +1534,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>"
      },
      {
        "sha": "883bb4f8da748ed4642cbf4f6cad60d41ebd1ef0",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -887,7 +887,7 @@\n     </message>\n     <message>\n         <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n-        <translation>Les transactions r\u00e9centes ne sont peut-\u00eatre pas encore visibles, et par cons\u00e9quent, le solde de votre porte-monnaie est peut-\u00eatre erron\u00e9. Cette information sera juste une fois que votre porte-monnaie aura fini de se synchroniser avec le r\u00e9seau Bitcoin, tel que d\u00e9crit ci-dessous. </translation>\n+        <translation>Les transactions r\u00e9centes ne sont peut-\u00eatre pas encore visibles, et par cons\u00e9quent, le solde de votre porte-monnaie est peut-\u00eatre erron\u00e9. Cette information sera juste une fois que votre porte-monnaie aura fini de se synchroniser avec le r\u00e9seau Bitcoin, comme d\u00e9crit ci-dessous. </translation>\n     </message>\n     <message>\n         <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>"
      },
      {
        "sha": "ebb30f13e4b62d1dd3a20716791b385b8a418125",
        "filename": "src/qt/locale/bitcoin_it_IT.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_it_IT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_it_IT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it_IT.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -41,9 +41,21 @@\n         <source>&amp;Delete</source>\n         <translation>Cancella</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Scegli l'indirizzo a cui inviare denaro</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>Scegli</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>AskPassphraseDialog</name>\n@@ -132,6 +144,10 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n@@ -168,6 +184,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "7844093e3bb645e0e7dd6726328157d2b6c5f4aa",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 333,
        "deletions": 5,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"ms_MY\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Klik-kanan untuk edit alamat ataupun label</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Cipta alamat baru</translation>\n@@ -17,6 +21,10 @@\n         <source>&amp;Copy</source>\n         <translation>&amp;Salin</translation>\n     </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>&amp;Tutup</translation>\n+    </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n         <translation>Padam alamat semasa yang dipilih dari senaraiyang dipilih dari senarai</translation>\n@@ -34,25 +42,301 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>&amp;Delete</source>\n         <translation>&amp;Padam</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Pilih alamat untuk hantar koin kepada</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Pilih alamat untuk menerima koin dengan</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Pilih</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>alamat-alamat penghantaran</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>alamat-alamat penerimaan</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Ini adalah alamat Bitcoin anda untuk pembayaran. Periksa jumlah dan alamat penerima sebelum membuat penghantaran koin sentiasa.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Ini adalah alamat Bitcoin anda untuk menerima pembayaraan.  Anda disyorkan untuk menguna alamat menerima untuk setiap transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Salin Aamat</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Salin &amp; Label</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Edit</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eskport Senarai Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Fail dibahagi oleh koma(*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Mengeksport Gagal</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Terdapat ralat semasa cubaan menyimpan senarai alamat kepada %1. Sila cuba lagi.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n-    </context>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>Dialog frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>Enter passphrase</source>\n+        <translation>memasukkan frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>New passphrase</source>\n+        <translation>Frasa laluan baru</translation>\n+    </message>\n+    <message>\n+        <source>Repeat new passphrase</source>\n+        <translation>Ulangi frasa laluan baru</translation>\n+    </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Memasukkan frasa laluan baru kepada dompet.&lt;br/&gt;Sila mengunakkan frasa laluan yang&lt;b&gt;mengandungi 10 atau lebih aksara rawak&lt;/b&gt;,ataupun&lt;b&gt;lapan atau lebih perkataan.&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Dompet encrypt</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>Operasi ini perlukan frasa laluan dompet anda untuk membuka kunci dompet.</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>Membuka kunci dompet</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>Operasi ini memerlukan frasa laluan dompet anda untuk menyahsulit dompet.</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>Menyahsulit dompet</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Menukar frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Memasukkan frasa laluan lama dan frasa laluan baru untuk.</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>Mengesahkan enkripsi dompet</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>Amaran: Jika anda enkripkan dompet anda dan hilangkan frasa laluan, anda akan &lt;b&gt;ANDA AKAN HILANGKAN SEMUA BITCOIN ANDA&lt;/b&gt;!</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Anda pasti untuk membuat enkripsi dompet anda?</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Dompet dienkripsi</translation>\n+    </message>\n+    <message>\n+        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>%1 akan tutup untuk menyelesaikan proses enkripsi. Ingat bahawa enkripsi tidak boleh melidungi sepenuhnya bitcoins anda daripada dicuri oleh malware yang menjangkiti komputer anda.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>PENTING: Apa-apa sandaran yang anda buat sebelum ini untuk fail dompet anda hendaklah digantikan dengan fail dompet enkripsi yang dijana baru. Untuk sebab-sebab keselamatan , sandaran fail dompet yang belum dibuat enkripsi sebelum ini akan menjadi tidak berguna secepat anda mula guna dompet enkripsi baru.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>Enkripsi dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>Enkripsi dompet gagal kerana ralat dalaman. Dompet anda tidak dienkripkan.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>Frasa laluan yang dibekalkan tidak sepadan.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Pembukaan kunci dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>Frasa laluan dimasukki untuk dekripsi dompet adalah tidak betul.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>Dekripsi dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>Frasa laluan dompet berjaya ditukar.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>Amaran: Kunci Caps Lock buka!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmask</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Diharamkan sehingga</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>Tandatangan &amp; mesej...</translation>\n+    </message>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>Penyegerakan dengan rangkaian...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Overview</source>\n+        <translation>&amp;Gambaran Keseluruhan</translation>\n+    </message>\n+    <message>\n+        <source>Node</source>\n+        <translation>Nod</translation>\n+    </message>\n+    <message>\n+        <source>Show general overview of wallet</source>\n+        <translation>Tunjuk gambaran keseluruhan umum dompet</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Transactions</source>\n+        <translation>&amp;Transaksi</translation>\n+    </message>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>Menyemak imbas sejarah transaksi </translation>\n+    </message>\n+    <message>\n+        <source>E&amp;xit</source>\n+        <translation>&amp;Keluar</translation>\n+    </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>Berhenti aplikasi</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>&amp;Mengenai%1</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>Menunjuk informasi mengenai%1</translation>\n+    </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>Mengenai &amp;Qt</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Qt</source>\n+        <translation>Menunjuk informasi megenai Qt</translation>\n+    </message>\n     <message>\n         <source>&amp;Options...</source>\n         <translation>Pilihan</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>Mengubah suai pilihan konfigurasi untuk %1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>&amp;Enkripsi Dompet</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Backup Wallet...</source>\n+        <translation>&amp;Dompet Sandaran...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>&amp;Menukar frasa-laluan</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Sending addresses...</source>\n+        <translation>&amp;Menghantar frasa-laluan</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation>&amp;Menerima frasa-laluan...</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>Buka &amp;URI...</translation>\n+    </message>\n+    <message>\n+        <source>Reindexing blocks on disk...</source>\n+        <translation>Reindexi blok pada cakera...</translation>\n+    </message>\n+    <message>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation>Menghantar koin kepada alamat Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Backup wallet to another location</source>\n+        <translation>Wallet sandaran ke lokasi lain</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -113,17 +397,37 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>Copy &amp;Address</source>\n         <translation>&amp;Salin Alamat</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <source>Balance:</source>\n         <translation>Baki</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     </context>\n@@ -150,9 +454,33 @@ Alihkan fail data ke dalam tab semasa</translation>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Fail dibahagi oleh koma(*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Mengeksport Gagal</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "d0f82b2d89cb0c87e36852d33865e9713759a5cf",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 135,
        "deletions": 3,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -41,10 +41,74 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Slett</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Velg adressen \u00e5 sende mynter til</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Velg adressen til \u00e5 motta mynter med</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Utsendingsadresser</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Mottaksadresser</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Dette er dine Bitcoin-adresser for sending av betalinger. Sjekk alltid bel\u00f8pet og mottakeradressen f\u00f8r sending av mynter.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Dette er dine Bitcoin-adresser for \u00e5 sende betalinger med. Det er anbefalt \u00e5 bruke en ny mottaksadresse for hver transaksjon.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopier Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopier &amp;Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Rediger</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporter adresseliste</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Kommaseparert fil (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportering feilet</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Det oppstod en feil under lagring av adresselisten til %1. Vennligst pr\u00f8v p\u00e5 nytt.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,6 +127,26 @@\n         <source>Repeat new passphrase</source>\n         <translation>Gjenta ny adgangsfrase</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Oppgi adgangsfrasen til lommeboken.&lt;br/&gt;Vennligst bruk en adgangsfrase med &lt;b&gt;ti eller flere tilfeldige tegn&lt;/b&gt;, eller &lt;b&gt;\u00e5tte eller flere ord&lt;/b&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Krypter lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>L\u00e5s opp lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>Dekrypter lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Endre adgangsfrase</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -422,6 +506,10 @@\n         <source>Confirmed</source>\n         <translation>Bekreftet</translation>\n     </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -1302,9 +1390,25 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Lagre Bilde...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1448,7 +1552,11 @@\n         <source>S&amp;end</source>\n         <translation>S&amp;end</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1651,9 +1759,33 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Kommaseparert fil (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportering feilet</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "3cd287d3add81a2ddf9c49fbbcbae188cfc7fc11",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 451,
        "deletions": 11,
        "changes": 462,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -49,6 +49,10 @@\n         <source>Choose the address to receive coins with</source>\n         <translation>Zvo\u013ete adresu na ktor\u00fa chcete prija\u0165 mince</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>Vybra\u0165</translation>\n+    </message>\n     <message>\n         <source>Sending addresses</source>\n         <translation>Odosielaj\u00face adresy</translation>\n@@ -81,6 +85,14 @@\n         <source>Export Address List</source>\n         <translation>Exportova\u0165 zoznam adries</translation>\n     </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u010ciarkou oddelovan\u00fd s\u00fabor (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Export zlyhal</translation>\n+    </message>\n     <message>\n         <source>There was an error trying to save the address list to %1. Please try again.</source>\n         <translation>Nastala chyba pri pokuse ulo\u017ei\u0165 zoznam adries do %1. Sk\u00faste znovu.</translation>\n@@ -119,14 +131,26 @@\n         <source>Repeat new passphrase</source>\n         <translation>Zopakujte nov\u00e9 heslo</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Zadajte nov\u00e9 heslo k pe\u0148a\u017eenke.&lt;br/&gt;Pros\u00edm pou\u017eite heslo s d\u013a\u017ekou &lt;b&gt;desa\u0165 alebo viac n\u00e1hodn\u00fdch znakov&lt;/b&gt;, pr\u00edpadne &lt;b&gt;osem alebo viac slov&lt;/b&gt;.</translation>\n+    </message>\n     <message>\n         <source>Encrypt wallet</source>\n         <translation>Za\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>T\u00e1to oper\u00e1cia potrebuje heslo k va\u0161ej pe\u0148a\u017eenke aby ju mohla odomkn\u00fa\u0165.</translation>\n+    </message>\n     <message>\n         <source>Unlock wallet</source>\n         <translation>Odomkn\u00fa\u0165 pe\u0148a\u017eenku</translation>\n     </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>T\u00e1to oper\u00e1cia potrebuje heslo k va\u0161ej pe\u0148a\u017eenke na de\u0161ifrovanie pe\u0148a\u017eenky.</translation>\n+    </message>\n     <message>\n         <source>Decrypt wallet</source>\n         <translation>De\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n@@ -135,6 +159,10 @@\n         <source>Change passphrase</source>\n         <translation>Zmena hesla</translation>\n     </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Zadajte star\u00e9 heslo a nov\u00e9 heslo k pe\u0148a\u017eenke.</translation>\n+    </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n         <translation>Potvr\u010fte za\u0161ifrovanie pe\u0148a\u017eenky</translation>\n@@ -147,11 +175,43 @@\n         <source>Wallet encrypted</source>\n         <translation>Pe\u0148a\u017eenka za\u0161ifrovan\u00e1</translation>\n     </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>D\u00d4LE\u017dIT\u00c9: V\u0161etky predch\u00e1dzaj\u00face z\u00e1lohy va\u0161ej pe\u0148a\u017eenky, ktor\u00e9 ste vykonali by mali by\u0165 nahraden\u00e9 novo vytvorenou, za\u0161ifrovanou pe\u0148a\u017eenkou. Z bezpe\u010dnostn\u00fdch d\u00f4vodov bude predch\u00e1dzaj\u00faca z\u00e1loha neza\u0161ifrovanej pe\u0148a\u017eenky k ni\u010domu, akon\u00e1hle za\u010dnete pou\u017e\u00edva\u0165 nov\u00fa, za\u0161ifrovan\u00fa pe\u0148a\u017eenku.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u0160ifrovanie pe\u0148a\u017eenky zlyhalo</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0160ifrovanie pe\u0148a\u017eenky zlyhalo k\u00f4li internej chybe. Va\u0161a pe\u0148a\u017eenka nebola za\u0161ifrovan\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>Zadan\u00e9 hesl\u00e1 nes\u00fahlasia.</translation>\n+    </message>\n     <message>\n         <source>Wallet unlock failed</source>\n         <translation>Odomykanie pe\u0148a\u017eenky zlyhalo</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>Zadan\u00e9 heslo pre de\u0161ifrovanie pe\u0148a\u017eenky bolo nespr\u00e1vne.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>Zlyhalo \u0161ifrovanie pe\u0148a\u017eenky.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>Heslo k pe\u0148a\u017eenke bolo \u00faspe\u0161ne zmenen\u00e9.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>Upozornenie: M\u00e1te zapnut\u00fd Caps Lock!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n     <message>\n@@ -534,10 +594,54 @@\n         <source>Copy amount</source>\n         <translation>Kop\u00edrova\u0165 sumu</translation>\n     </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kop\u00edrova\u0165 ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Lock unspent</source>\n+        <translation>Uzamkn\u00fa\u0165 neminut\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Unlock unspent</source>\n+        <translation>Odomkn\u00fa\u0165 neminut\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Kop\u00edrova\u0165 mno\u017estvo</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Kop\u00edrova\u0165 poplatok</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Kop\u00edrova\u0165 po poplatkoch</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Kop\u00edrova\u0165 bajty</translation>\n+    </message>\n     <message>\n         <source>Copy dust</source>\n         <translation>Kop\u00edrova\u0165 prach</translation>\n     </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Kop\u00edrova\u0165 zmenu</translation>\n+    </message>\n+    <message>\n+        <source>(%1 locked)</source>\n+        <translation>(%1 zamknut\u00fdch)</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>\u00e1no</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>nie</translation>\n+    </message>\n     <message>\n         <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n         <translation>Tento popis s\u010dervenie ak ktor\u00fdko\u013evek pr\u00edjemca dostane sumu men\u0161iu ako s\u00fa\u010dasn\u00fd limit pre \"prach\".</translation>\n@@ -546,7 +650,15 @@\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>change from %1 (%2)</source>\n+        <translation>zmena od %1 (%2)</translation>\n+    </message>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(zmena)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -593,7 +705,15 @@\n         <source>The entered address \"%1\" is already in the address book.</source>\n         <translation>Vlo\u017een\u00e1 adresa \"%1\" sa u\u017e nach\u00e1dza v adres\u00e1ri.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Nepodarilo sa odomkn\u00fa\u0165 pe\u0148a\u017eenku.</translation>\n+    </message>\n+    <message>\n+        <source>New key generation failed.</source>\n+        <translation>Generovanie nov\u00e9ho k\u013e\u00fa\u010da zlyhalo.</translation>\n+    </message>\n+</context>\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n@@ -1073,6 +1193,10 @@\n         <source>Payment request error</source>\n         <translation>Chyba pri vy\u017eiadan\u00ed platby</translation>\n     </message>\n+    <message>\n+        <source>URI handling</source>\n+        <translation>URI manipul\u00e1cia</translation>\n+    </message>\n     <message>\n         <source>Payment request fetch URL is invalid: %1</source>\n         <translation>URL pre stiahnutie v\u00fdzvy na zaplatenie je neplatn\u00e9: %1</translation>\n@@ -1121,14 +1245,30 @@\n         <source>Requested payment amount of %1 is too small (considered dust).</source>\n         <translation>Po\u017eadovan\u00e1 suma platby %1 je pr\u00edli\u0161 n\u00edzka (pova\u017eovan\u00e1 za prach).</translation>\n     </message>\n+    <message>\n+        <source>Refund from %1</source>\n+        <translation>Vr\u00e1tenie z  %1</translation>\n+    </message>\n     <message>\n         <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n         <translation>Po\u017eiadavka na platbu %1 je pr\u00edli\u0161 ve\u013ek\u00e1 (%2 bajtov, povolen\u00e9 je %3 bajtov).</translation>\n     </message>\n+    <message>\n+        <source>Error communicating with %1: %2</source>\n+        <translation>Chyba komunik\u00e1cie s %1: %2 </translation>\n+    </message>\n     <message>\n         <source>Payment request cannot be parsed!</source>\n         <translation>Po\u017eiadavka na platbu nem\u00f4\u017ee by\u0165 analyzovan\u00e1!</translation>\n     </message>\n+    <message>\n+        <source>Bad response from server %1</source>\n+        <translation>Zl\u00e1 odpove\u010f zo servera %1</translation>\n+    </message>\n+    <message>\n+        <source>Network request error</source>\n+        <translation>Chyba po\u017eiadavky siete</translation>\n+    </message>\n     <message>\n         <source>Payment acknowledged</source>\n         <translation>Platba potvrden\u00e1</translation>\n@@ -1201,7 +1341,23 @@\n     </context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>Ulo\u017ei\u0165 obr\u00e1zok...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>Kop\u00edrova\u0165 obr\u00e1zok</translation>\n+    </message>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>Ulo\u017ei\u0165 QR Code</translation>\n+    </message>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>PNG obr\u00e1zok (*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n     <message>\n@@ -1595,6 +1751,10 @@\n         <source>Payment information</source>\n         <translation>Inform\u00e1cia o platbe</translation>\n     </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Adresa</translation>\n@@ -1615,7 +1775,11 @@\n         <source>Resulting URI too long, try to reduce the text for label / message.</source>\n         <translation>V\u00fdsledn\u00e9 URI je pr\u00edli\u0161 dlh\u00e9, sk\u00faste skr\u00e1ti\u0165 text pre popis alebo spr\u00e1vu.</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Error encoding URI into QR Code.</source>\n+        <translation>Chyba k\u00f3dovania URI do QR Code.</translation>\n+    </message>\n+</context>\n <context>\n     <name>RecentRequestsTableModel</name>\n     <message>\n@@ -1793,14 +1957,42 @@\n         <source>S&amp;end</source>\n         <translation>&amp;Odosla\u0165</translation>\n     </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Kop\u00edrova\u0165 mno\u017estvo</translation>\n+    </message>\n     <message>\n         <source>Copy amount</source>\n         <translation>Kop\u00edrova\u0165 sumu</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Kop\u00edrova\u0165 poplatok</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Kop\u00edrova\u0165 po poplatkoch</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Kop\u00edrova\u0165 bajty</translation>\n+    </message>\n     <message>\n         <source>Copy dust</source>\n         <translation>Kop\u00edrova\u0165 prach</translation>\n     </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Kop\u00edrova\u0165 zmenu</translation>\n+    </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 do %2</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you want to send?</source>\n+        <translation>Ur\u010dite chcete odosla\u0165 transakciu?</translation>\n+    </message>\n     <message>\n         <source>Total Amount %1</source>\n         <translation>Celkov\u00e1 suma %1</translation>\n@@ -1825,10 +2017,18 @@\n         <source>The amount exceeds your balance.</source>\n         <translation>Suma je vy\u0161\u0161ia ako V\u00e1\u0161 zostatok.</translation>\n     </message>\n+    <message>\n+        <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n+        <translation>Celkov\u00e1 suma prevy\u0161uje V\u00e1\u0161 zostatok ak s\u00fa zapo\u010d\u00edtan\u00e9 aj transak\u010dn\u00e9 poplatky %1.</translation>\n+    </message>\n     <message>\n         <source>Duplicate address found: addresses should only be used once each.</source>\n         <translation>Na\u0161la sa duplicitn\u00e1 adresa: ka\u017ed\u00e1 adresa by sa mala pou\u017ei\u0165 len raz.</translation>\n     </message>\n+    <message>\n+        <source>Transaction creation failed!</source>\n+        <translation>Vytvorenie transakcie zlyhalo!</translation>\n+    </message>\n     <message>\n         <source>Payment request expired.</source>\n         <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n@@ -1841,6 +2041,10 @@\n         <source>Warning: Invalid Bitcoin address</source>\n         <translation>Varovanie: Neplatn\u00e1 Bitcoin adresa</translation>\n     </message>\n+    <message>\n+        <source>Warning: Unknown change address</source>\n+        <translation>UPOZORNENIE: Nezn\u00e1ma zmena adresy</translation>\n+    </message>\n     <message>\n         <source>Confirm custom change address</source>\n         <translation>Potvr\u010fte zmenu adresy</translation>\n@@ -1939,7 +2143,11 @@\n </context>\n <context>\n     <name>SendConfirmationDialog</name>\n-    </context>\n+    <message>\n+        <source>Yes</source>\n+        <translation>\u00e1no</translation>\n+    </message>\n+</context>\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n@@ -2053,6 +2261,10 @@\n         <source>The entered address does not refer to a key.</source>\n         <translation>Vlo\u017een\u00e1 adresa nezodpoved\u00e1 \u017eiadnemu k\u013e\u00fa\u010du.</translation>\n     </message>\n+    <message>\n+        <source>Wallet unlock was cancelled.</source>\n+        <translation>Odomknutie pe\u0148a\u017eenky bolo zru\u0161en\u00e9.</translation>\n+    </message>\n     <message>\n         <source>Private key for the entered address is not available.</source>\n         <translation>S\u00fakromn\u00fd k\u013e\u00fa\u010d pre zadan\u00fa adresu nieje k dispoz\u00edcii.</translation>\n@@ -2102,10 +2314,18 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>Otvoren\u00e9 do %1</translation>\n+    </message>\n     <message>\n         <source>conflicted with a transaction with %1 confirmations</source>\n         <translation>koliduje s transakciou s %1 potvrdeniami</translation>\n     </message>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1/offline</translation>\n+    </message>\n     <message>\n         <source>0/unconfirmed, %1</source>\n         <translation>0/nepotvrden\u00e9, %1</translation>\n@@ -2118,14 +2338,46 @@\n         <source>%1 confirmations</source>\n         <translation>%1 potvrden\u00ed</translation>\n     </message>\n+    <message>\n+        <source>Status</source>\n+        <translation>Stav</translation>\n+    </message>\n+    <message>\n+        <source>, has not been successfully broadcast yet</source>\n+        <translation>, e\u0161te nebola \u00faspe\u0161ne odoslan\u00e1</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>D\u00e1tum</translation>\n     </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Zdroj</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>Vygenerovan\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>Od</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>nezn\u00e1my</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>do</translation>\n+    </message>\n     <message>\n         <source>own address</source>\n         <translation>vlastn\u00e1 adresa</translation>\n     </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n     <message>\n         <source>label</source>\n         <translation>popis</translation>\n@@ -2134,10 +2386,26 @@\n         <source>Credit</source>\n         <translation>Kredit</translation>\n     </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>neprijat\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>Debet</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Celkov\u00fd debet</translation>\n+    </message>\n     <message>\n         <source>Total credit</source>\n         <translation>Celkov\u00fd kredit</translation>\n     </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Transak\u010dn\u00fd poplatok</translation>\n+    </message>\n     <message>\n         <source>Net amount</source>\n         <translation>Suma netto</translation>\n@@ -2146,11 +2414,47 @@\n         <source>Message</source>\n         <translation>Spr\u00e1va</translation>\n     </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Koment\u00e1r</translation>\n+    </message>\n+    <message>\n+        <source>Transaction ID</source>\n+        <translation>ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>Kupec</translation>\n+    </message>\n+    <message>\n+        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>Vytvoren\u00e9 coins musia dospie\u0165 %1 blokov k\u00fdm m\u00f4\u017eu by\u0165 minut\u00e9. Ke\u010f vytvor\u00edte tento blok, bude rozoslan\u00fd do siete aby bol akceptovan\u00fd do re\u0165aze blokov. Ak sa nedostane re\u0165aze, jeho stav sa zmen\u00ed na \"zamietnut\u00fd\" a nebude sa da\u0165 min\u00fa\u0165. Toto sa m\u00f4\u017ee ob\u010das sta\u0165 ak in\u00e1 n\u00f3da vytvor\u00ed blok pribli\u017ene v tom istom \u010dase.</translation>\n+    </message>\n+    <message>\n+        <source>Debug information</source>\n+        <translation>Ladiace inform\u00e1cie</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Inputs</source>\n+        <translation>Vstupy</translation>\n+    </message>\n     <message>\n         <source>Amount</source>\n         <translation>Suma</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>true</source>\n+        <translation>pravda</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>nepravda</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -2172,6 +2476,14 @@\n         <source>Label</source>\n         <translation>Popis</translation>\n     </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>Otvoren\u00e9 do %1</translation>\n+    </message>\n+    <message>\n+        <source>Offline</source>\n+        <translation>Offline</translation>\n+    </message>\n     <message>\n         <source>Unconfirmed</source>\n         <translation>Nepotvrden\u00e9</translation>\n@@ -2184,6 +2496,10 @@\n         <source>Confirmed (%1 confirmations)</source>\n         <translation>Potvrden\u00e9 (%1 potvrden\u00ed)</translation>\n     </message>\n+    <message>\n+        <source>Conflicted</source>\n+        <translation>V rozpore</translation>\n+    </message>\n     <message>\n         <source>Immature (%1 confirmations, will be available after %2)</source>\n         <translation>Nezrel\u00e9 (%1 potvrden\u00ed, bude dostupn\u00e9 po %2)</translation>\n@@ -2192,6 +2508,10 @@\n         <source>This block was not received by any other nodes and will probably not be accepted!</source>\n         <translation>Ten blok nebol prijat\u00fd \u017eiadnym in\u00fdm uzlom a pravdepodobne nebude akceptovan\u00fd!</translation>\n     </message>\n+    <message>\n+        <source>Generated but not accepted</source>\n+        <translation>Vypo\u010d\u00edtan\u00e9 ale neakceptovan\u00e9</translation>\n+    </message>\n     <message>\n         <source>Received with</source>\n         <translation>Prijat\u00e9 s</translation>\n@@ -2212,6 +2532,14 @@\n         <source>Mined</source>\n         <translation>Vy\u0165a\u017een\u00e9</translation>\n     </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n+    <message>\n+        <source>(n/a)</source>\n+        <translation>(n/a)</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n@@ -2307,14 +2635,38 @@\n         <source>Copy amount</source>\n         <translation>Kop\u00edrova\u0165 sumu</translation>\n     </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kop\u00edrova\u0165 ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Skop\u00edrova\u0165 neupraven\u00fa transakciu</translation>\n+    </message>\n     <message>\n         <source>Edit label</source>\n         <translation>Upravi\u0165 popis</translation>\n     </message>\n+    <message>\n+        <source>Show transaction details</source>\n+        <translation>Zobrazi\u0165 podrobnosti transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Export Transaction History</source>\n+        <translation>Exportova\u0165 hist\u00f3riu transakci\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u010ciarkou oddelovan\u00fd s\u00fabor (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Confirmed</source>\n         <translation>Potvrden\u00e9</translation>\n     </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>D\u00e1tum</translation>\n@@ -2331,11 +2683,35 @@\n         <source>Address</source>\n         <translation>Adresa</translation>\n     </message>\n+    <message>\n+        <source>ID</source>\n+        <translation>ID</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Export zlyhal</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Vyskytla sa chyba pri pokuse o ulo\u017eenie hist\u00f3rie transakci\u00ed do %1.</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>Export \u00faspe\u0161n\u00fd</translation>\n+    </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>Hist\u00f3ria transakci\u00e1 bola \u00faspe\u0161ne ulo\u017een\u00e1 do %1.</translation>\n+    </message>\n     <message>\n         <source>Range:</source>\n         <translation>Rozsah:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>to</source>\n+        <translation>do</translation>\n+    </message>\n+</context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n     <message>\n@@ -2345,13 +2721,53 @@\n </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>Nie je na\u010d\u00edtan\u00e1 pe\u0148a\u017eenka.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n-    </context>\n+    <message>\n+        <source>Send Coins</source>\n+        <translation>Posla\u0165 mince</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n-    </context>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Exportova\u0165...</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Exportova\u0165 d\u00e1ta v aktu\u00e1lnej karte do s\u00faboru</translation>\n+    </message>\n+    <message>\n+        <source>Backup Wallet</source>\n+        <translation>Z\u00e1lohovanie pe\u0148a\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Data (*.dat)</source>\n+        <translation>D\u00e1ta pe\u0148a\u017eenky (*.dat)</translation>\n+    </message>\n+    <message>\n+        <source>Backup Failed</source>\n+        <translation>Z\u00e1lohovanie zlyhalo</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Vyskytla sa chyba pri pokuse o ulo\u017eenie d\u00e1t pe\u0148a\u017eenky do %1.</translation>\n+    </message>\n+    <message>\n+        <source>Backup Successful</source>\n+        <translation>Z\u00e1loha \u00faspe\u0161n\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>D\u00e1ta pe\u0148a\u017eenky boli \u00faspe\u0161ne ulo\u017een\u00e9 do %1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n@@ -2450,6 +2866,22 @@\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>Datab\u00e1za blokov obsahuje blok, ktor\u00fd vyzer\u00e1 by\u0165 z bud\u00facnosti. Toto m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 nespr\u00e1vnym syst\u00e9mov\u00fdm \u010dasom v\u00e1\u0161ho po\u010d\u00edta\u010da. Obnovujte datab\u00e1zu blokov len ke\u010f ste si ist\u00fd, \u017ee syst\u00e9mov\u00fd \u010das je nastaven\u00fd spr\u00e1vne.</translation>\n     </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Toto je predbe\u017en\u00e1 testovacia zostava - pou\u017e\u00edvate na vlastn\u00e9 riziko - nepou\u017e\u00edvajte na \u0165a\u017eenie alebo obchodn\u00e9 aplik\u00e1cie</translation>\n+    </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>Sk\u00fasi\u0165 pou\u017ei\u0165 UPnP pre mapovanie po\u010d\u00favaj\u00faceho portu (predvolen\u00e9: 1 po\u010das po\u010d\u00favania a bez -proxy)</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Varovanie: Jav\u00ed sa \u017ee sie\u0165 sie\u0165 \u00faplne nes\u00fahlas\u00ed! Niektor\u00ed mineri zjavne maj\u00fa \u0165a\u017ekosti.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Varovanie: Zjavne sa \u00faplne nezhodujeme s na\u0161imi peer-mi! Mo\u017eno potrebujete prejs\u0165 na nov\u0161iu verziu alebo ostatn\u00e9 uzly potrebuj\u00fa vy\u0161\u0161iu verziu.</translation>\n+    </message>\n     <message>\n         <source>%s corrupt, salvage failed</source>\n         <translation>%s je po\u0161koden\u00fd, z\u00e1chrana zlyhala</translation>\n@@ -2698,6 +3130,10 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Vykona\u0165 pr\u00edkaz po prijat\u00ed patri\u010dn\u00e9ho varovania alebo uvid\u00edme ve\u013emi dlh\u00e9 rozdvojenie siete (%s v cmd je nahraden\u00e9 spr\u00e1vou)</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)</source>\n+        <translation>Poplatky (v %s/kB) men\u0161ie ako toto, s\u00fa pova\u017eovan\u00e9 za nulov\u00fd transak\u010dn\u00fd poplatok (predvolen\u00e9: %s)</translation>\n+    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Ak nie je nastaven\u00e9 paytxfee, prida\u0165 dostato\u010dn\u00fd poplatok aby sa transakcia za\u010dala potvrdzova\u0165 priemerne v r\u00e1mci bloku (predvolen\u00e9: %u)</translation>\n@@ -2866,6 +3302,10 @@\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = zachova\u0165 meta\u00fadaje tx napr. vlastn\u00edka \u00fa\u010dtu a inform\u00e1cie o platobn\u00fdch pr\u00edkazoch, 2 = zahodi\u0165 meta\u00fadaje tx)</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n+        <translation>Poplatky (v %s/kB) men\u0161ie ako toto, s\u00fa pova\u017eovan\u00e9 za nulov\u00fd transak\u010dn\u00fd poplatok (predvolen\u00e9: %s)</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Ako d\u00f4kladn\u00e9 je -checkblocks overenie blokov (0-4, predvolen\u00e9: %u)</translation>"
      },
      {
        "sha": "edd808c9b58489308019e88939472a456c666454",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -540,7 +540,11 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>Denna pl\u00e5nbok \u00e4r &lt;b&gt;krypterad&lt;/b&gt; och f\u00f6r n\u00e4rvarande &lt;b&gt;l\u00e5st&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Ett kritiskt fel uppstod. Bitcoin kan inte forts\u00e4tta att k\u00f6ra s\u00e4kert och kommer att avslutas.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -679,7 +683,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n-        <translation>Katalogen finns redan. L\u00e4ggtill %1 om du vill skapa en ny katalog h\u00e4r.</translation>\n+        <translation>Katalogen finns redan. L\u00e4gg till %1 om du vill skapa en ny katalog h\u00e4r.</translation>\n     </message>\n     <message>\n         <source>Path already exists, and is not a directory.</source>\n@@ -2099,6 +2103,18 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Ange en adress eller etikett att s\u00f6ka efter</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Minsta belopp</translation>\n+    </message>\n+    <message>\n+        <source>Abandon transaction</source>\n+        <translation>Avbryt transaktionen</translation>\n+    </message>\n     <message>\n         <source>Copy address</source>\n         <translation>Kopiera adress</translation>"
      },
      {
        "sha": "321effc7e136bb69e3a5b47f4078126cb36a29db",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/348a71701db4cb29a762c7d60aba34380ee1d403/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=348a71701db4cb29a762c7d60aba34380ee1d403",
        "patch": "@@ -295,15 +295,15 @@\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>C\u00fczdan\u0131 &amp;\u015eifrele...</translation>\n+        <translation>&amp;C\u00fczdan\u0131 \u015eifrele...</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>C\u00fczdan\u0131 &amp;Yedekle...</translation>\n+        <translation>&amp;C\u00fczdan\u0131 Yedekle...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>Parolay\u0131 &amp;De\u011fi\u015ftir...</translation>\n+        <translation>&amp;Parolay\u0131 De\u011fi\u015ftir...</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>"
      }
    ]
  },
  {
    "sha": "33fadc20bae4828788d6d82c582c457adc6941e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozM2ZhZGMyMGJhZTQ4Mjg3ODhkNmQ4MmM1ODJjNDU3YWRjNjk0MWUx",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T10:45:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-14T10:45:41Z"
      },
      "message": "doc: Update release notes pre-rc2",
      "tree": {
        "sha": "1bd6e4ef4efcae1e594a5ac52a2e0d3e140779ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1bd6e4ef4efcae1e594a5ac52a2e0d3e140779ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/33fadc20bae4828788d6d82c582c457adc6941e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY8KhWAAoJEHSBCwEjRsmmW98H/Ra/FRDM6CXvvSfsES/oLWtY\noc86B1qse3eVEQvLxcKgdnrSwgWL8Gh/YuReyaQSg+AAlouGrMjdgOTGP6nNO0q6\nOg0fcXormPidZUWsG/+g1tciplJvfsDFNv7lyHaOTq9fIbCzvTGTh0pkJu62l2ld\nNXKlOvC/X1IabU50CTxNUEEHKtc7n+FpMTCkOz4d9ae3ifUDlZ3DV94IHG3TwY9b\niF8o4JXhrQscNACInwj+qLufvI5hA5yorgg4ZLkzM8IguYu+WWObyBjg3PZtcgea\nSYJAPi7OSxn0rrCtal2H/e+o34G4ZFC7fXNXE7YzvvBNXZOHP83dQzcPBy9Y45o=\n=3aTK\n-----END PGP SIGNATURE-----",
        "payload": "tree 1bd6e4ef4efcae1e594a5ac52a2e0d3e140779ab\nparent 348a71701db4cb29a762c7d60aba34380ee1d403\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1492166728 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492166741 +0200\n\ndoc: Update release notes pre-rc2\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33fadc20bae4828788d6d82c582c457adc6941e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/33fadc20bae4828788d6d82c582c457adc6941e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33fadc20bae4828788d6d82c582c457adc6941e1/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "348a71701db4cb29a762c7d60aba34380ee1d403",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/348a71701db4cb29a762c7d60aba34380ee1d403",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/348a71701db4cb29a762c7d60aba34380ee1d403"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4b5e3c56ed600c28a45d73a9cc27116577d6848b",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 12,
        "deletions": 3,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/33fadc20bae4828788d6d82c582c457adc6941e1/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/33fadc20bae4828788d6d82c582c457adc6941e1/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=33fadc20bae4828788d6d82c582c457adc6941e1",
        "patch": "@@ -33,10 +33,14 @@ Notable changes\n RPC changes\n -----------\n \n-The first positional argument of `createrawtransaction` was renamed.\n-This interface change breaks compatibility with 0.14.0, when the named\n-arguments functionality, introduced in 0.14.0, is used.\n+- The first positional argument of `createrawtransaction` was renamed from\n+  `transactions` to `inputs`.\n \n+- The argument of `disconnectnode` was renamed from `node` to `address`.\n+\n+These interface changes break compatibility with 0.14.0, when the named\n+arguments functionality, introduced in 0.14.0, is used. Client software\n+using these calls with named arguments needs to be updated.\n \n Mining\n ------\n@@ -82,6 +86,7 @@ git merge commit are mentioned.\n - #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n - #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n - #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n+- #10204 `3c79602` Rename disconnectnode argument (jnewbery)\n \n ### Block and transaction handling\n - #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n@@ -90,6 +95,7 @@ git merge commit are mentioned.\n \n ### P2P protocol and network code\n - #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n+- #10176 `30fa231` net: gracefully handle NodeId wrapping (theuni)\n \n ### Build system\n - #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n@@ -101,6 +107,9 @@ git merge commit are mentioned.\n - #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n - #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n \n+### Tests and QA\n+- #10157 `55f641c` Fix the `mempool_packages.py` test (sdaftuar)\n+\n ### Miscellaneous\n - #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n - #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)"
      }
    ]
  },
  {
    "sha": "38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGFiMGE3NDY1OTQyYzEzODA1MWZhZDhmYzI3MGNkMmY4ZTNlNGE1",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-04-19T16:45:38Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2017-04-19T16:45:38Z"
      },
      "message": "release-notes: Accurately explain getblocktemplate improvements",
      "tree": {
        "sha": "cc79976f9cb6b40fa6aab891c648a75b3e6f0bc2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc79976f9cb6b40fa6aab891c648a75b3e6f0bc2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ab0a7465942c138051fad8fc270cd2f8e3e4a5/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33fadc20bae4828788d6d82c582c457adc6941e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33fadc20bae4828788d6d82c582c457adc6941e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33fadc20bae4828788d6d82c582c457adc6941e1"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38ab0a7465942c138051fad8fc270cd2f8e3e4a5/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38ab0a7465942c138051fad8fc270cd2f8e3e4a5/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
        "patch": "@@ -45,14 +45,18 @@ using these calls with named arguments needs to be updated.\n Mining\n ------\n \n-Getblocktemplate sets the segwit version bit even when the downstream\n-client has not been updated to include the segwit commitment.  Ability\n-to enforce the rule is the only required criteria for safe activation,\n-but previously signaling was only requested if the miner could include\n-transactions in order to avoid a potential outcome where segwit would\n-activate at a time when no segwit transactions could be included.\n-Since many miners are now including the segwit commitment this concern\n-no longer applies.\n+In previous versions, getblocktemplate required segwit support from downstream\n+clients/miners once the feature activated on the network. In this version, it\n+now supports non-segwit clients even after activation, by removing all segwit\n+transactions from the returned block template. This allows non-segwit miners to\n+continue functioning correctly even after segwit has activated.\n+\n+Due to the limitations in previous versions, getblocktemplate also recommended\n+non-segwit clients to not signal for the segwit version-bit. Since this is no\n+longer an issue, getblocktemplate now always recommends signalling segwit for\n+all miners. This is safe because ability to enforce the rule is the only\n+required criteria for safe activation, not actually producing segwit-enabled\n+blocks.\n \n UTXO memory accounting\n ----------------------"
      }
    ]
  },
  {
    "sha": "51c787dfb4963d2a59dc8944f45e065be0a06613",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWM3ODdkZmI0OTYzZDJhNTlkYzg5NDRmNDVlMDY1YmUwYTA2NjEz",
    "commit": {
      "author": {
        "name": "Warren Togami",
        "email": "wtogami@gmail.com",
        "date": "2017-04-14T03:11:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-20T06:18:50Z"
      },
      "message": "Clarify importprivkey help text with example of blank label without rescan\n\nOccasionally I waste a lot of time not remembering that the second parameter to importprivkey must be blank if you intend to stop rescan with \"false\" as the third parameter.\n\nGithub-Pull: #10207\nRebased-From: c9e31c36ffacedb85d4d9ce75a92e011a3e7d4b4",
      "tree": {
        "sha": "1184248f3bf1ec7210818ceeca537ac659c79bec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1184248f3bf1ec7210818ceeca537ac659c79bec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51c787dfb4963d2a59dc8944f45e065be0a06613",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY+FLLAAoJEHSBCwEjRsmmI2gIAJkY9wQE4gelvgbrPUDWvPop\nk9WmEjo7y7lsPUsjCDY5dD1w85ud5eZHqxFYbBSQdb0CVCK6++G/7zJXt7dITbAT\n9aMJE2ztTnXuWZsUxh5kuSqw8F1opa/BbK17sWMitOF/2JTcHlN2tF3sKvRSfwkY\nttp6T6e35/o8+6w++d68CshXS60xDjvSa2DBhoyKujBa/eSBiBhGxLkpGAwr9/nF\nshiYucoSCbHBzuumoE1HYKljII0bzbhHbo3c59iiZ7IBj1a8ZRINOADF4Otc9R3Y\nAtqUrAEFcpVjScHLhsISSfnRU6LkJDHJ/ZkaezWQo0qNpat6vl3CpcmbZEI+AhM=\n=dUWx\n-----END PGP SIGNATURE-----",
        "payload": "tree 1184248f3bf1ec7210818ceeca537ac659c79bec\nparent 33fadc20bae4828788d6d82c582c457adc6941e1\nauthor Warren Togami <wtogami@gmail.com> 1492139502 -0700\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492669130 +0200\n\nClarify importprivkey help text with example of blank label without rescan\n\nOccasionally I waste a lot of time not remembering that the second parameter to importprivkey must be blank if you intend to stop rescan with \"false\" as the third parameter.\n\nGithub-Pull: #10207\nRebased-From: c9e31c36ffacedb85d4d9ce75a92e011a3e7d4b4\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51c787dfb4963d2a59dc8944f45e065be0a06613",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51c787dfb4963d2a59dc8944f45e065be0a06613",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51c787dfb4963d2a59dc8944f45e065be0a06613/comments",
    "author": {
      "login": "wtogami",
      "id": 93665,
      "node_id": "MDQ6VXNlcjkzNjY1",
      "avatar_url": "https://avatars.githubusercontent.com/u/93665?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wtogami",
      "html_url": "https://github.com/wtogami",
      "followers_url": "https://api.github.com/users/wtogami/followers",
      "following_url": "https://api.github.com/users/wtogami/following{/other_user}",
      "gists_url": "https://api.github.com/users/wtogami/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wtogami/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wtogami/subscriptions",
      "organizations_url": "https://api.github.com/users/wtogami/orgs",
      "repos_url": "https://api.github.com/users/wtogami/repos",
      "events_url": "https://api.github.com/users/wtogami/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wtogami/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "33fadc20bae4828788d6d82c582c457adc6941e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/33fadc20bae4828788d6d82c582c457adc6941e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/33fadc20bae4828788d6d82c582c457adc6941e1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cfb53af497c89486e80d04eea5a58ec76a03ddfb",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51c787dfb4963d2a59dc8944f45e065be0a06613/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51c787dfb4963d2a59dc8944f45e065be0a06613/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=51c787dfb4963d2a59dc8944f45e065be0a06613",
        "patch": "@@ -96,6 +96,8 @@ UniValue importprivkey(const JSONRPCRequest& request)\n             + HelpExampleCli(\"importprivkey\", \"\\\"mykey\\\"\") +\n             \"\\nImport using a label and without rescan\\n\"\n             + HelpExampleCli(\"importprivkey\", \"\\\"mykey\\\" \\\"testing\\\" false\") +\n+            \"\\nImport using default blank label and without rescan\\n\"\n+            + HelpExampleCli(\"importprivkey\", \"\\\"mykey\\\" \\\"\\\" false\") +\n             \"\\nAs a JSON-RPC call\\n\"\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );"
      }
    ]
  },
  {
    "sha": "964a185cc83af34587194a6ecda3ed9cf6b49263",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NjRhMTg1Y2M4M2FmMzQ1ODcxOTRhNmVjZGEzZWQ5Y2Y2YjQ5MjYz",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-20T09:28:18Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-20T09:28:25Z"
      },
      "message": "Merge #10232: [0.14] release-notes: Accurately explain getblocktemplate improvements\n\n38ab0a7 release-notes: Accurately explain getblocktemplate improvements (Luke Dashjr)\n\nTree-SHA512: b519431d5009c5bdb7511e46c9dec05370ba62d70f5f6a9d00b82d190581b937e34d29c32c3795f4f219288d40695091cfe60ec93b3c40c01ab72d9232064c04",
      "tree": {
        "sha": "3e1e311f87bbaa4043fcfb9c4ee08099d9c93492",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e1e311f87bbaa4043fcfb9c4ee08099d9c93492"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/964a185cc83af34587194a6ecda3ed9cf6b49263",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY+H85AAoJEHSBCwEjRsmmqnwIAI9nExIQ0DvkMN1ukJZpLn51\naArCFNUqM2Jkc0UZwID2gusBhS6kZw7MHJatWbTGod/3Lp82BUzdGEA92KPCw2Is\nuCKnghZuEdCLUBaRRa2dwLL4b/jYWCiiijw+UjRyjzocY5FyeGm32xRIHsUZJgLY\nzNfCYpBc2actkvNXZV7Sm2FOZg4JYQLHdBnsCFyKhF8PrIyv2/NxVgxB0yTISJva\nYFGYrcJ1kltOAl5MKqyYV4E6kDjl5ksDFnRyWcWLtLQCNlNSO0B9bakVB1UI2Uqg\nX6tTGBe5nLwMSiNaxYF5A8Nvzbja4QHR191Bn4/pf0tAo8AfHgCXISFJaMSpzoM=\n=9sW7\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e1e311f87bbaa4043fcfb9c4ee08099d9c93492\nparent 51c787dfb4963d2a59dc8944f45e065be0a06613\nparent 38ab0a7465942c138051fad8fc270cd2f8e3e4a5\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1492680498 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492680505 +0200\n\nMerge #10232: [0.14] release-notes: Accurately explain getblocktemplate improvements\n\n38ab0a7 release-notes: Accurately explain getblocktemplate improvements (Luke Dashjr)\n\nTree-SHA512: b519431d5009c5bdb7511e46c9dec05370ba62d70f5f6a9d00b82d190581b937e34d29c32c3795f4f219288d40695091cfe60ec93b3c40c01ab72d9232064c04\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/964a185cc83af34587194a6ecda3ed9cf6b49263",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/964a185cc83af34587194a6ecda3ed9cf6b49263",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/964a185cc83af34587194a6ecda3ed9cf6b49263/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51c787dfb4963d2a59dc8944f45e065be0a06613",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51c787dfb4963d2a59dc8944f45e065be0a06613",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51c787dfb4963d2a59dc8944f45e065be0a06613"
      },
      {
        "sha": "38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38ab0a7465942c138051fad8fc270cd2f8e3e4a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38ab0a7465942c138051fad8fc270cd2f8e3e4a5"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 12,
        "deletions": 8,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/964a185cc83af34587194a6ecda3ed9cf6b49263/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/964a185cc83af34587194a6ecda3ed9cf6b49263/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=964a185cc83af34587194a6ecda3ed9cf6b49263",
        "patch": "@@ -45,14 +45,18 @@ using these calls with named arguments needs to be updated.\n Mining\n ------\n \n-Getblocktemplate sets the segwit version bit even when the downstream\n-client has not been updated to include the segwit commitment.  Ability\n-to enforce the rule is the only required criteria for safe activation,\n-but previously signaling was only requested if the miner could include\n-transactions in order to avoid a potential outcome where segwit would\n-activate at a time when no segwit transactions could be included.\n-Since many miners are now including the segwit commitment this concern\n-no longer applies.\n+In previous versions, getblocktemplate required segwit support from downstream\n+clients/miners once the feature activated on the network. In this version, it\n+now supports non-segwit clients even after activation, by removing all segwit\n+transactions from the returned block template. This allows non-segwit miners to\n+continue functioning correctly even after segwit has activated.\n+\n+Due to the limitations in previous versions, getblocktemplate also recommended\n+non-segwit clients to not signal for the segwit version-bit. Since this is no\n+longer an issue, getblocktemplate now always recommends signalling segwit for\n+all miners. This is safe because ability to enforce the rule is the only\n+required criteria for safe activation, not actually producing segwit-enabled\n+blocks.\n \n UTXO memory accounting\n ----------------------"
      }
    ]
  },
  {
    "sha": "f2a96e7d0289682eb87877a3528cb6a170f8b786",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMmE5NmU3ZDAyODk2ODJlYjg3ODc3YTM1MjhjYjZhMTcwZjhiNzg2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-22T14:21:47Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-04-22T14:22:09Z"
      },
      "message": "doc: clean out release notes",
      "tree": {
        "sha": "1296ced8e3f6b63baaeacd4730ca2c6176a40186",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1296ced8e3f6b63baaeacd4730ca2c6176a40186"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f2a96e7d0289682eb87877a3528cb6a170f8b786",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABCgAGBQJY+2cSAAoJEHSBCwEjRsmmVfUH/3KCY/G3ew0yHfUx2jcWBxzz\n/U6M8VJJWBCQQzfrLQFLunSAD93bJwhtFbiOCfBpre+iBY1gqJC+gsElFoH8IAtn\nTznlGboSFZIrU96e4lJeXdQ4uj+IkI/YYsuzL5LldNZKlQ/z0vFW2PYAOCJiJUj9\nZdv+RzE+AnmE1r0JTIbrn0RQpMI9EWtwZa6jtdk2ckAJqkSDEOKh2neW/2NJ5JQt\nnQUqqBXWKj5npbicjn85jOJZOaarrLzvlAZXXibUSpqihoklXSPbhR3a4AsasWoy\nupQv3nWOlbN0l9W/WcEwApyPxLLow4rDA6oDYmGrv9Vvmt2TT8nzEtHyNqpvuyY=\n=22+R\n-----END PGP SIGNATURE-----",
        "payload": "tree 1296ced8e3f6b63baaeacd4730ca2c6176a40186\nparent 964a185cc83af34587194a6ecda3ed9cf6b49263\nauthor Wladimir J. van der Laan <laanwj@gmail.com> 1492870907 +0200\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1492870929 +0200\n\ndoc: clean out release notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2a96e7d0289682eb87877a3528cb6a170f8b786",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f2a96e7d0289682eb87877a3528cb6a170f8b786",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2a96e7d0289682eb87877a3528cb6a170f8b786/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "964a185cc83af34587194a6ecda3ed9cf6b49263",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/964a185cc83af34587194a6ecda3ed9cf6b49263",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/964a185cc83af34587194a6ecda3ed9cf6b49263"
      }
    ],
    "stats": {
      "total": 243,
      "additions": 148,
      "deletions": 95
    },
    "files": [
      {
        "sha": "49cbdb55d04585c329a9074dfd3969604939d200",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 5,
        "deletions": 95,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2a96e7d0289682eb87877a3528cb6a170f8b786/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2a96e7d0289682eb87877a3528cb6a170f8b786/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=f2a96e7d0289682eb87877a3528cb6a170f8b786",
        "patch": "@@ -1,6 +1,6 @@\n-Bitcoin Core version 0.14.1 is now available from:\n+Bitcoin Core version 0.14.x is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n \n This is a new minor version release, including various bugfixes and\n performance improvements, as well as updated translations.\n@@ -30,114 +30,24 @@ frequently tested on them.\n Notable changes\n ===============\n \n-RPC changes\n------------\n+Example item\n+------------\n \n-- The first positional argument of `createrawtransaction` was renamed from\n-  `transactions` to `inputs`.\n \n-- The argument of `disconnectnode` was renamed from `node` to `address`.\n-\n-These interface changes break compatibility with 0.14.0, when the named\n-arguments functionality, introduced in 0.14.0, is used. Client software\n-using these calls with named arguments needs to be updated.\n-\n-Mining\n-------\n-\n-In previous versions, getblocktemplate required segwit support from downstream\n-clients/miners once the feature activated on the network. In this version, it\n-now supports non-segwit clients even after activation, by removing all segwit\n-transactions from the returned block template. This allows non-segwit miners to\n-continue functioning correctly even after segwit has activated.\n-\n-Due to the limitations in previous versions, getblocktemplate also recommended\n-non-segwit clients to not signal for the segwit version-bit. Since this is no\n-longer an issue, getblocktemplate now always recommends signalling segwit for\n-all miners. This is safe because ability to enforce the rule is the only\n-required criteria for safe activation, not actually producing segwit-enabled\n-blocks.\n-\n-UTXO memory accounting\n-----------------------\n-\n-Memory usage for the UTXO cache is being calculated more accurately, so that\n-the configured limit (`-dbcache`) will be respected when memory usage peaks\n-during cache flushes.  The memory accounting in prior releases is estimated to\n-only account for half the actual peak utilization.\n-\n-The default `-dbcache` has also been changed in this release to 450MiB.  Users\n-who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n-cached in memory) should consider increasing this setting in order to achieve\n-the same cache performance as prior releases.  Users on low-memory systems\n-(such as systems with 1GB or less) should consider specifying a lower value for\n-this parameter.\n-\n-Additional information relating to running on low-memory systems can be found\n-here:\n-[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n-\n-0.14.1 Change log\n+0.14.x Change log\n =================\n \n Detailed release notes follow. This overview includes changes that affect\n behavior, not code moves, refactors and string updates. For convenience in locating\n the code changes and accompanying discussion, both the pull request and\n git merge commit are mentioned.\n \n-### RPC and other APIs\n-- #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n-- #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n-- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n-- #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n-- #10204 `3c79602` Rename disconnectnode argument (jnewbery)\n-\n-### Block and transaction handling\n-- #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n-- #9912 `fc3d7db` Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)\n-- #10133 `ab864d3` Clean up calculations of pcoinsTip memory usage (morcos)\n-\n-### P2P protocol and network code\n-- #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n-- #10176 `30fa231` net: gracefully handle NodeId wrapping (theuni)\n-\n-### Build system\n-- #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n-\n-### GUI\n-- #10060 `ddc2dd1` Ensure an item exists on the rpcconsole stack before adding (achow101)\n-\n-### Mining\n-- #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n-- #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n-\n-### Tests and QA\n-- #10157 `55f641c` Fix the `mempool_packages.py` test (sdaftuar)\n-\n-### Miscellaneous\n-- #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n-- #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n-- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n \n Credits\n =======\n \n Thanks to everyone who directly contributed to this release:\n \n-- Alex Morcos\n-- Andrew Chow\n-- Awemany\n-- Cory Fields\n-- Gregory Maxwell\n-- James Evans\n-- John Newbery\n-- MarcoFalke\n-- Matt Corallo\n-- Pieter Wuille\n-- practicalswift\n-- rawodb\n-- Suhas Daftuar\n-- Wladimir J. van der Laan\n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n "
      },
      {
        "sha": "ef072afd4d7fb94d29007038e587eacb40358a98",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "added",
        "additions": 143,
        "deletions": 0,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f2a96e7d0289682eb87877a3528cb6a170f8b786/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f2a96e7d0289682eb87877a3528cb6a170f8b786/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=f2a96e7d0289682eb87877a3528cb6a170f8b786",
        "patch": "@@ -0,0 +1,143 @@\n+Bitcoin Core version 0.14.1 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n+\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later.\n+\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n+No attempt is made to prevent installing or running the software on Windows XP, you\n+can still do so at your own risk but be aware that there are known instabilities and issues.\n+Please do not report issues about Windows XP to the issue tracker.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+RPC changes\n+-----------\n+\n+- The first positional argument of `createrawtransaction` was renamed from\n+  `transactions` to `inputs`.\n+\n+- The argument of `disconnectnode` was renamed from `node` to `address`.\n+\n+These interface changes break compatibility with 0.14.0, when the named\n+arguments functionality, introduced in 0.14.0, is used. Client software\n+using these calls with named arguments needs to be updated.\n+\n+Mining\n+------\n+\n+In previous versions, getblocktemplate required segwit support from downstream\n+clients/miners once the feature activated on the network. In this version, it\n+now supports non-segwit clients even after activation, by removing all segwit\n+transactions from the returned block template. This allows non-segwit miners to\n+continue functioning correctly even after segwit has activated.\n+\n+Due to the limitations in previous versions, getblocktemplate also recommended\n+non-segwit clients to not signal for the segwit version-bit. Since this is no\n+longer an issue, getblocktemplate now always recommends signalling segwit for\n+all miners. This is safe because ability to enforce the rule is the only\n+required criteria for safe activation, not actually producing segwit-enabled\n+blocks.\n+\n+UTXO memory accounting\n+----------------------\n+\n+Memory usage for the UTXO cache is being calculated more accurately, so that\n+the configured limit (`-dbcache`) will be respected when memory usage peaks\n+during cache flushes.  The memory accounting in prior releases is estimated to\n+only account for half the actual peak utilization.\n+\n+The default `-dbcache` has also been changed in this release to 450MiB.  Users\n+who currently set `-dbcache` to a high value (e.g. to keep the UTXO more fully\n+cached in memory) should consider increasing this setting in order to achieve\n+the same cache performance as prior releases.  Users on low-memory systems\n+(such as systems with 1GB or less) should consider specifying a lower value for\n+this parameter.\n+\n+Additional information relating to running on low-memory systems can be found\n+here:\n+[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n+\n+0.14.1 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n+### RPC and other APIs\n+- #10084 `142fbb2` Rename first named arg of createrawtransaction (MarcoFalke)\n+- #10139 `f15268d` Remove auth cookie on shutdown (practicalswift)\n+- #10146 `2fea10a` Better error handling for submitblock (rawodb, gmaxwell)\n+- #10144 `d947afc` Prioritisetransaction wasn't always updating ancestor fee (sdaftuar)\n+- #10204 `3c79602` Rename disconnectnode argument (jnewbery)\n+\n+### Block and transaction handling\n+- #10126 `0b5e162` Compensate for memory peak at flush time (sipa)\n+- #9912 `fc3d7db` Optimize GetWitnessHash() for non-segwit transactions (sdaftuar)\n+- #10133 `ab864d3` Clean up calculations of pcoinsTip memory usage (morcos)\n+\n+### P2P protocol and network code\n+- #9953/#10013 `d2548a4` Fix shutdown hang with >= 8 -addnodes set (TheBlueMatt)\n+- #10176 `30fa231` net: gracefully handle NodeId wrapping (theuni)\n+\n+### Build system\n+- #9973 `e9611d1` depends: fix zlib build on osx (theuni)\n+\n+### GUI\n+- #10060 `ddc2dd1` Ensure an item exists on the rpcconsole stack before adding (achow101)\n+\n+### Mining\n+- #9955/#10006 `569596c` Don't require segwit in getblocktemplate for segwit signalling or mining (sdaftuar)\n+- #9959/#10127 `b5c3440` Prevent slowdown in CreateNewBlock on large mempools (sdaftuar)\n+\n+### Tests and QA\n+- #10157 `55f641c` Fix the `mempool_packages.py` test (sdaftuar)\n+\n+### Miscellaneous\n+- #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n+- #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n+- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- Alex Morcos\n+- Andrew Chow\n+- Awemany\n+- Cory Fields\n+- Gregory Maxwell\n+- James Evans\n+- John Newbery\n+- MarcoFalke\n+- Matt Corallo\n+- Pieter Wuille\n+- practicalswift\n+- rawodb\n+- Suhas Daftuar\n+- Wladimir J. van der Laan\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+"
      }
    ]
  },
  {
    "sha": "ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZmIwYzRiMDM1YTdjMWZkMWU3MTRkOTRmOTIzNzBiMDVlY2I3OTVi",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-05-17T09:41:52Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-05-17T18:58:56Z"
      },
      "message": "[depends] miniupnpc 2.0.20170509\n\nGithub-Pull: #10414\nRebased-From: af5d48c9a03182fdf121623bd98136b66d0fcb27",
      "tree": {
        "sha": "dfc428c6f08a31886483e242cba416e7567ee4a9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dfc428c6f08a31886483e242cba416e7567ee4a9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCgAGBQJZHJ1wAAoJEB5K7WKYbNJd3ooH/A3/xkDoK6vrViEGxQy78efq\n8WAFYsOl04qiokrBlWNl0pd/2+AedM3LCDsY7xfd5BdZo5Fk1CgneWqlEJl59upe\n6x4Ty2gGEnEUBlthF5xLDpeYnu3/+3naCTeq/tbgTJRz/ZbIVqpLlpRxqwlsFlL8\n+HuGKTYnMVMr2EBHTZ12E9cVOyUXctMOGycih7VZo46ASqsutmCruYvj0nspJjgm\nupxaSRtbGApwn0A4TRp9prT8xJdYDXbmf7TIFx92/wlIRsRyEN8qb09Nv13DhsYq\n7Rau05G90Qvht3XdgDZL/Kfi5HZYndNJvycQAZ0+EDwMDEewcCzVrr0oCd5QEWg=\n=ex5s\n-----END PGP SIGNATURE-----",
        "payload": "tree dfc428c6f08a31886483e242cba416e7567ee4a9\nparent f2a96e7d0289682eb87877a3528cb6a170f8b786\nauthor fanquake <fanquake@gmail.com> 1495014112 +0800\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1495047536 +0200\n\n[depends] miniupnpc 2.0.20170509\n\nGithub-Pull: #10414\nRebased-From: af5d48c9a03182fdf121623bd98136b66d0fcb27\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f2a96e7d0289682eb87877a3528cb6a170f8b786",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f2a96e7d0289682eb87877a3528cb6a170f8b786",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f2a96e7d0289682eb87877a3528cb6a170f8b786"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1bb8cb5d2664746b943756a9efa0db8d8a9d385d",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
        "patch": "@@ -1,8 +1,8 @@\n package=miniupnpc\n-$(package)_version=2.0\n+$(package)_version=2.0.20170509\n $(package)_download_path=http://miniupnp.free.fr/files\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=d434ceb8986efbe199c5ca53f90ed53eab290b1e6d0530b717eb6fa49d61f93b\n+$(package)_sha256_hash=d3c368627f5cdfb66d3ebd64ca39ba54d6ff14a61966dbecb8dd296b7039f16a\n \n define $(package)_set_vars\n $(package)_build_opts=CC=\"$($(package)_cc)\""
      }
    ]
  },
  {
    "sha": "37a8fc54d480788a06ff17415128d815ac55eaed",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozN2E4ZmM1NGQ0ODA3ODhhMDZmZjE3NDE1MTI4ZDgxNWFjNTVlYWVk",
    "commit": {
      "author": {
        "name": "Alex Morcos",
        "email": "morcos@chaincode.com",
        "date": "2017-05-18T20:57:53Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-05-22T10:56:13Z"
      },
      "message": "Populate services in GetLocalAddress\n\nPreviously if we didn't have any local addresses, GetLocalAddress would return\n0.0.0.0 and then we'd swap in a peer's notion of our address in AdvertiseLocal,\nbut then nServices would never get set.\n\nGithub-Pull: #10424\nRebased-From: 307013469f9a3b8f13d3eb9dbeea419a55148493",
      "tree": {
        "sha": "8009b4a1cb479ff3e32aa6bc94636e9ea2ab32dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8009b4a1cb479ff3e32aa6bc94636e9ea2ab32dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/37a8fc54d480788a06ff17415128d815ac55eaed",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCgAGBQJZIsPNAAoJEB5K7WKYbNJdm30IAKxeYgB5vcFhjCRG/hPfSF7H\nly1rKmn1WrB0jJG+rPGeCnBRJWxMCsFOmLP/0FmecG6xNX/WGvGVDefBRqoj7WK3\nB8ztuC/aB2ADLBJT84izCTD3jAyc8Nk3LPUXOFCpPHQNbca1zaMFSqp3pjHK07rW\nzIl60jhEygOWjPOPF7MpCX2vj7yaGVZfnyS/gGjndBO8F30HCcEiUPb5ClFi3bsZ\nilab8lQ+kvzd1DuGVfY3E10aD4+kiOOyeOsL6qMOWS7bbtTp+OqLHAlTSGtKmgwm\nPWWUxvr7CtiJ5eD/d6n7Chs9iQXhDD/driEkoaELnd3Z8M430ojGP+JLvT6t1ow=\n=9NV9\n-----END PGP SIGNATURE-----",
        "payload": "tree 8009b4a1cb479ff3e32aa6bc94636e9ea2ab32dd\nparent ffb0c4b035a7c1fd1e714d94f92370b05ecb795b\nauthor Alex Morcos <morcos@chaincode.com> 1495141073 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1495450573 +0200\n\nPopulate services in GetLocalAddress\n\nPreviously if we didn't have any local addresses, GetLocalAddress would return\n0.0.0.0 and then we'd swap in a peer's notion of our address in AdvertiseLocal,\nbut then nServices would never get set.\n\nGithub-Pull: #10424\nRebased-From: 307013469f9a3b8f13d3eb9dbeea419a55148493\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37a8fc54d480788a06ff17415128d815ac55eaed",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/37a8fc54d480788a06ff17415128d815ac55eaed",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37a8fc54d480788a06ff17415128d815ac55eaed/comments",
    "author": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ffb0c4b035a7c1fd1e714d94f92370b05ecb795b"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "5593f81eff03e37f468360c7f1008edff49735ec",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/37a8fc54d480788a06ff17415128d815ac55eaed/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/37a8fc54d480788a06ff17415128d815ac55eaed/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=37a8fc54d480788a06ff17415128d815ac55eaed",
        "patch": "@@ -143,7 +143,7 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\n // one by discovery.\n CAddress GetLocalAddress(const CNetAddr *paddrPeer, ServiceFlags nLocalServices)\n {\n-    CAddress ret(CService(CNetAddr(),GetListenPort()), NODE_NONE);\n+    CAddress ret(CService(CNetAddr(),GetListenPort()), nLocalServices);\n     CService addr;\n     if (GetLocal(addr, paddrPeer))\n     {"
      }
    ]
  },
  {
    "sha": "321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMjE0MTliYzA2ZmRjMTllMzcxM2IyYmNmYzEwYzNjOWJiYmI4YjYy",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2017-05-16T15:34:28Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2017-05-23T15:09:42Z"
      },
      "message": "Fix importwallet edge case rescan bug\n\nStart importwallet rescans at the first block with timestamp greater or equal\nto the wallet birthday instead of the last block with timestamp less or equal.\nThis fixes an edge case bug where importwallet could fail to start the rescan\nearly enough if there are blocks with decreasing timestamps or multiple blocks\nwith the same timestamp.\n\nGithub-Pull: #10410\nRebased-From: 2a8e35a11d4bd4828631654fc7b8b8fe8f0a2460",
      "tree": {
        "sha": "18144663278653e9d1038b0f37d97ef1b76eed30",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/18144663278653e9d1038b0f37d97ef1b76eed30"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCgAGBQJZJFC2AAoJEB5K7WKYbNJdMcEIAMeVRGsto3Vg3hGG5PuFRdxt\nH34PjNRXzlY/WA+ZqEMCdVUKo9f+PpceShbzk3GsYNX+PL49ajknu8mjmIhlpXQ3\nHdCY+iqmsR7w+Svi9oy4WWFCzJn0PIu45V6LtPPgtNkcTOYb4Od4kgzQN0tmf/cB\nW0DocOUFOxMKU6qorhieUDxHOYgRnG4zmNN5pwGA2Trz6PKADNIlKLvqmM/R/SGf\nZybwtS8uzxot76Mq4T0o1vSL/ieQIgAr05rtRAWZ2B0Cg580aBONPwWUVS1vZV9G\naiWlO0eGdN2I8FerUcP7+VOiW97Hdq6zKCVYYeqBjV6EDXm6GBFbfcbOTqRUB3E=\n=LcQh\n-----END PGP SIGNATURE-----",
        "payload": "tree 18144663278653e9d1038b0f37d97ef1b76eed30\nparent 37a8fc54d480788a06ff17415128d815ac55eaed\nauthor Russell Yanofsky <russ@yanofsky.org> 1494948868 -0400\ncommitter Wladimir J. van der Laan <laanwj@gmail.com> 1495552182 +0200\n\nFix importwallet edge case rescan bug\n\nStart importwallet rescans at the first block with timestamp greater or equal\nto the wallet birthday instead of the last block with timestamp less or equal.\nThis fixes an edge case bug where importwallet could fail to start the rescan\nearly enough if there are blocks with decreasing timestamps or multiple blocks\nwith the same timestamp.\n\nGithub-Pull: #10410\nRebased-From: 2a8e35a11d4bd4828631654fc7b8b8fe8f0a2460\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "37a8fc54d480788a06ff17415128d815ac55eaed",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/37a8fc54d480788a06ff17415128d815ac55eaed",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/37a8fc54d480788a06ff17415128d815ac55eaed"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 65,
      "deletions": 6
    },
    "files": [
      {
        "sha": "cd6ec207f90efe159bc39c8bca88f085797cf8d9",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -497,14 +497,11 @@ UniValue importwallet(const JSONRPCRequest& request)\n     }\n     file.close();\n     pwalletMain->ShowProgress(\"\", 100); // hide progress dialog in GUI\n-\n-    CBlockIndex *pindex = chainActive.Tip();\n-    while (pindex && pindex->pprev && pindex->GetBlockTime() > nTimeBegin - 7200)\n-        pindex = pindex->pprev;\n-\n     pwalletMain->UpdateTimeFirstKey(nTimeBegin);\n \n-    LogPrintf(\"Rescanning last %i blocks\\n\", chainActive.Height() - pindex->nHeight + 1);\n+    CBlockIndex *pindex = chainActive.FindEarliestAtLeast(nTimeBegin - 7200);\n+\n+    LogPrintf(\"Rescanning last %i blocks\\n\", pindex ? chainActive.Height() - pindex->nHeight + 1 : 0);\n     pwalletMain->ScanForWalletTransactions(pindex);\n     pwalletMain->MarkDirty();\n "
      },
      {
        "sha": "083ff0afc3d21d5941f942ca57dcfae6cc0339d6",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 62,
        "deletions": 0,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -19,6 +19,8 @@\n #include <univalue.h>\n \n extern UniValue importmulti(const JSONRPCRequest& request);\n+extern UniValue dumpwallet(const JSONRPCRequest& request);\n+extern UniValue importwallet(const JSONRPCRequest& request);\n \n // how many times to run all the tests to have a chance to catch errors that only show up with particular random shuffles\n #define RUN_TESTS 100\n@@ -428,4 +430,64 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n     }\n }\n \n+// Verify importwallet RPC starts rescan at earliest block with timestamp\n+// greater or equal than key birthday. Previously there was a bug where\n+// importwallet RPC would start the scan at the latest block with timestamp less\n+// than or equal to key birthday.\n+BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n+{\n+    CWallet *pwalletMainBackup = ::pwalletMain;\n+    LOCK(cs_main);\n+\n+    // Create two blocks with same timestamp to verify that importwallet rescan\n+    // will pick up both blocks, not just the first.\n+    const int64_t BLOCK_TIME = chainActive.Tip()->GetBlockTimeMax() + 5;\n+    SetMockTime(BLOCK_TIME);\n+    coinbaseTxns.emplace_back(*CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+    coinbaseTxns.emplace_back(*CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+\n+    // Set key birthday to block time increased by the timestamp window, so\n+    // rescan will start at the block time.\n+    const int64_t KEY_TIME = BLOCK_TIME + 7200;\n+    SetMockTime(KEY_TIME);\n+    coinbaseTxns.emplace_back(*CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n+\n+    // Import key into wallet and call dumpwallet to create backup file.\n+    {\n+        CWallet wallet;\n+        LOCK(wallet.cs_wallet);\n+        wallet.mapKeyMetadata[coinbaseKey.GetPubKey().GetID()].nCreateTime = KEY_TIME;\n+        wallet.AddKeyPubKey(coinbaseKey, coinbaseKey.GetPubKey());\n+\n+        JSONRPCRequest request;\n+        request.params.setArray();\n+        request.params.push_back(\"wallet.backup\");\n+        ::pwalletMain = &wallet;\n+        ::dumpwallet(request);\n+    }\n+\n+    // Call importwallet RPC and verify all blocks with timestamps >= BLOCK_TIME\n+    // were scanned, and no prior blocks were scanned.\n+    {\n+        CWallet wallet;\n+\n+        JSONRPCRequest request;\n+        request.params.setArray();\n+        request.params.push_back(\"wallet.backup\");\n+        ::pwalletMain = &wallet;\n+        ::importwallet(request);\n+\n+        BOOST_CHECK_EQUAL(wallet.mapWallet.size(), 3);\n+        BOOST_CHECK_EQUAL(coinbaseTxns.size(), 103);\n+        for (size_t i = 0; i < coinbaseTxns.size(); ++i) {\n+            bool found = wallet.GetWalletTx(coinbaseTxns[i].GetHash());\n+            bool expected = i >= 100;\n+            BOOST_CHECK_EQUAL(found, expected);\n+        }\n+    }\n+\n+    SetMockTime(0);\n+    ::pwalletMain = pwalletMainBackup;\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "ef16e3e73d76e9217118b7168f6831de615e86b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjE2ZTNlNzNkNzZlOTIxNzExOGI3MTY4ZjY4MzFkZTYxNWU4NmIy",
    "commit": {
      "author": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T11:40:00Z"
      },
      "committer": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T11:40:00Z"
      },
      "message": "Merge",
      "tree": {
        "sha": "4010af91de774e0c682e67601c35bdb54ce8a9b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4010af91de774e0c682e67601c35bdb54ce8a9b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef16e3e73d76e9217118b7168f6831de615e86b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef16e3e73d76e9217118b7168f6831de615e86b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef16e3e73d76e9217118b7168f6831de615e86b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef16e3e73d76e9217118b7168f6831de615e86b2/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62"
      },
      {
        "sha": "4314544d46e8e46c3c9da60f1d18297f52f58418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4314544d46e8e46c3c9da60f1d18297f52f58418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4314544d46e8e46c3c9da60f1d18297f52f58418"
      }
    ],
    "stats": {
      "total": 24232,
      "additions": 14934,
      "deletions": 9298
    },
    "files": [
      {
        "sha": "f1e9ca20c16370309b87a93ea48717a641ac2e25",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -101,8 +101,9 @@ coverage_percent.txt\n linux-coverage-build\n linux-build\n win32-build\n-qa/pull-tester/tests_config.py\n-qa/cache/*\n+test/functional/config.ini\n+test/util/buildenv.py\n+test/cache/*\n \n !src/leveldb*/Makefile\n "
      },
      {
        "sha": "97bb475e4babf692a556b98db8f50caef7104f41",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -32,28 +32,30 @@ env:\n # bitcoind\n     - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n # No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3 xvfb\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n     - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n-    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n     - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"pull_request\" ]; then contrib/devtools/commit-script-check.sh $TRAVIS_COMMIT_RANGE; fi\n     - unset CC; unset CXX\n     - if [ \"$CHECK_DOC\" = 1 ]; then contrib/devtools/check-doc.py; fi\n     - mkdir -p depends/SDKs depends/sdk-sources\n     - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n     - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n+    # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n+    - if [ \"$RUN_TESTS\" = \"true\" -a \"${DEP_OPTS#*NO_QT=1}\" = \"$DEP_OPTS\" ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n script:\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n@@ -68,7 +70,8 @@ script:\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n+    - if [ \"$TRAVIS_EVENT_TYPE\" = \"cron\" ]; then extended=\"--extended --exclude pruning\"; fi\n+    - if [ \"$RUN_TESTS\" = \"true\" ]; then test/functional/test_runner.py --coverage --quiet ${extended}; fi\n after_script:\n     - echo $TRAVIS_COMMIT_RANGE\n     - echo $TRAVIS_COMMIT_LOG"
      },
      {
        "sha": "f5d63517b134d0bc206957fb8b4b7a714851c01d",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 36,
        "deletions": 5,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -37,8 +37,8 @@ fixes or code moves with actual code changes.\n \n Commit messages should be verbose by default consisting of a short subject line\n (50 chars max), a blank line and detailed explanatory text as separate\n-paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo\n-in init.cpp\") then a single title line is sufficient. Commit messages should be\n+paragraph(s), unless the title alone is self-explanatory (like \"Corrected typo\n+in init.cpp\") in which case a single title line is sufficient. Commit messages should be\n helpful to people reading your code in the future, so explain the reasoning for\n your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n \n@@ -130,7 +130,7 @@ pull requests which attempt to do too much, are overly large, or overly complex\n as this makes review difficult.\n \n \n-###Features\n+### Features\n \n When adding a new feature, thought must be given to the long term technical debt\n and maintenance that feature may require after inclusion. Before proposing a new\n@@ -139,7 +139,7 @@ maintain it (including bug fixing). If features get orphaned with no maintainer\n in the future, they may be removed by the Repository Maintainer.\n \n \n-###Refactoring\n+### Refactoring\n \n Refactoring is a necessary part of any software project's evolution. The\n following guidelines cover refactoring pull requests for the project.\n@@ -187,7 +187,7 @@ other kinds of patches because of increased peer review and consensus building\n requirements.\n \n \n-###Peer Review\n+### Peer Review\n \n Anyone may participate in peer review which is expressed by comments in the pull\n request. Typically reviewers will review the code for obvious errors, as well as\n@@ -225,6 +225,37 @@ discussed extensively on the mailing list and IRC, be accompanied by a widely\n discussed BIP and have a generally widely perceived technical consensus of being\n a worthwhile change based on the judgement of the maintainers.\n \n+### Finding Reviewers\n+\n+As most reviewers are themselves developers with their own projects, the review\n+process can be quite lengthy, and some amount of patience is required. If you find\n+that you've been waiting for a pull request to be given attention for several\n+months, there may be a number of reasons for this, some of which you can do something\n+about:\n+\n+  - It may be because of a feature freeze due to an upcoming release. During this time,\n+    only bug fixes are taken into consideration. If your pull request is a new feature,\n+    it will not be prioritized until the release is over. Wait for release.\n+  - It may be because the changes you are suggesting do not appeal to people. Rather than\n+    nits and critique, which require effort and means they care enough to spend time on your\n+    contribution, thundering silence is a good sign of widespread (mild) dislike of a given change\n+    (because people don't assume *others* won't actually like the proposal). Don't take\n+    that personally, though! Instead, take another critical look at what you are suggesting\n+    and see if it: changes too much, is too broad, doesn't adhere to the\n+    [developer notes](doc/developer-notes.md), is dangerous or insecure, is messily written, etc.\n+    Identify and address any of the issues you find. Then ask e.g. on IRC if someone could give\n+    their opinion on the concept itself.\n+  - It may be because your code is too complex for all but a few people. And those people\n+    may not have realized your pull request even exists. A great way to find people who\n+    are qualified and care about the code you are touching is the\n+    [Git Blame feature](https://help.github.com/articles/tracing-changes-in-a-file/). Simply\n+    find the person touching the code you are touching before you and see if you can find\n+    them and give them a nudge. Don't be incessant about the nudging though.\n+  - Finally, if all else fails, ask on IRC or elsewhere for someone to give your pull request\n+    a look. If you think you've been waiting an unreasonably long amount of time (month+) for\n+    no particular reason (few lines changed, etc), this is totally fine. Try to return the favor\n+    when someone else is asking for feedback on their code, and universe balances out.\n+\n \n Release Policy\n --------------"
      },
      {
        "sha": "3a56eea0c0516a164968c5bfc531d9d6e72b81c6",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 64,
        "deletions": 14,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -61,7 +61,7 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n   leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info rpc_test.info rpc_test_filtered.info \\\n+  baseline_filtered.info functional_test.info functional_test_filtered.info \\\n   leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n \n dist-hook:\n@@ -76,9 +76,6 @@ $(BITCOIN_WIN_INSTALLER): all-recursive\n \t  echo error: could not build $@\n \t@echo built $@\n \n-$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n-\t$(MAKE) -C src $(patsubst src/%,%,$@)\n-\n $(OSX_APP)/Contents/PkgInfo:\n \t$(MKDIR_P) $(@D)\n \t@echo \"APPL????\" > $@\n@@ -194,20 +191,20 @@ test_bitcoin.info: baseline_filtered_combined.info\n test_bitcoin_filtered.info: test_bitcoin.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-rpc_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n+functional_test.info: test_bitcoin_filtered.info\n+\t-@TIMEOUT=15 python test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n+\t$(LCOV) -c -d $(abs_builddir)/src --t functional-tests -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n-rpc_test_filtered.info: rpc_test.info\n+functional_test_filtered.info: functional_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n \t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n \n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n@@ -223,17 +220,70 @@ endif\n \n dist_noinst_SCRIPTS = autogen.sh\n \n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test/functional $(DIST_CONTRIB) $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n+\n+EXTRA_DIST += \\\n+    test/util/bctest.py \\\n+    test/util/bitcoin-util-test.py \\\n+    test/util/data/bitcoin-util-test.json \\\n+    test/util/data/blanktxv1.hex \\\n+    test/util/data/blanktxv1.json \\\n+    test/util/data/blanktxv2.hex \\\n+    test/util/data/blanktxv2.json \\\n+    test/util/data/tt-delin1-out.hex \\\n+    test/util/data/tt-delin1-out.json \\\n+    test/util/data/tt-delout1-out.hex \\\n+    test/util/data/tt-delout1-out.json \\\n+    test/util/data/tt-locktime317000-out.hex \\\n+    test/util/data/tt-locktime317000-out.json \\\n+    test/util/data/tx394b54bb.hex \\\n+    test/util/data/txcreate1.hex \\\n+    test/util/data/txcreate1.json \\\n+    test/util/data/txcreate2.hex \\\n+    test/util/data/txcreate2.json \\\n+    test/util/data/txcreatedata1.hex \\\n+    test/util/data/txcreatedata1.json \\\n+    test/util/data/txcreatedata2.hex \\\n+    test/util/data/txcreatedata2.json \\\n+    test/util/data/txcreatedata_seq0.hex \\\n+    test/util/data/txcreatedata_seq0.json \\\n+    test/util/data/txcreatedata_seq1.hex \\\n+    test/util/data/txcreatedata_seq1.json \\\n+    test/util/data/txcreatemultisig1.hex \\\n+    test/util/data/txcreatemultisig1.json \\\n+    test/util/data/txcreatemultisig2.hex \\\n+    test/util/data/txcreatemultisig2.json \\\n+    test/util/data/txcreatemultisig3.hex \\\n+    test/util/data/txcreatemultisig3.json \\\n+    test/util/data/txcreatemultisig4.hex \\\n+    test/util/data/txcreatemultisig4.json \\\n+    test/util/data/txcreateoutpubkey1.hex \\\n+    test/util/data/txcreateoutpubkey1.json \\\n+    test/util/data/txcreateoutpubkey2.hex \\\n+    test/util/data/txcreateoutpubkey2.json \\\n+    test/util/data/txcreateoutpubkey3.hex \\\n+    test/util/data/txcreateoutpubkey3.json \\\n+    test/util/data/txcreatescript1.hex \\\n+    test/util/data/txcreatescript1.json \\\n+    test/util/data/txcreatescript2.hex \\\n+    test/util/data/txcreatescript2.json \\\n+    test/util/data/txcreatescript3.hex \\\n+    test/util/data/txcreatescript3.json \\\n+    test/util/data/txcreatescript4.hex \\\n+    test/util/data/txcreatescript4.json \\\n+    test/util/data/txcreatesignv1.hex \\\n+    test/util/data/txcreatesignv1.json \\\n+    test/util/data/txcreatesignv2.hex\n \n CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n \n # This file is problematic for out-of-tree builds if it exists.\n-DISTCLEANFILES = qa/pull-tester/tests_config.pyc\n+DISTCLEANFILES = test/util/buildenv.pyc\n \n .INTERMEDIATE: $(COVERAGE_INFO)\n \n DISTCHECK_CONFIGURE_FLAGS = --enable-man\n \n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)\n-\trm -rf qa/pull-tester/__pycache__\n+\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf test/functional/__pycache__"
      },
      {
        "sha": "5db9fc99282a9ca51c75ce14822b106b132de141",
        "filename": "README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -54,9 +54,9 @@ submit new unit tests for old code. Unit tests can be compiled and run\n (assuming they weren't disabled in configure) with: `make check`. Further details on running\n and extending unit tests can be found in [/src/test/README.md](/src/test/README.md).\n \n-There are also [regression and integration tests](/qa) of the RPC interface, written\n+There are also [regression and integration tests](/test), written\n in Python, that are run automatically on the build server.\n-These tests can be run (if the [test dependencies](/qa) are installed) with: `qa/pull-tester/rpc-tests.py`\n+These tests can be run (if the [test dependencies](/test) are installed) with: `test/functional/test_runner.py`\n \n The Travis CI system makes sure that every pull request is built for Windows, Linux, and OS X, and that unit/sanity tests are run automatically.\n "
      },
      {
        "sha": "1b339559fc1a46ace208c24245ab95aad46d5347",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -130,6 +130,8 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n+      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n       if test x$TARGET_OS = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])"
      },
      {
        "sha": "5367386ff66cea9e926619ce2c11eb42436c2a60",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 67,
        "deletions": 12,
        "changes": 79,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,7 +2,7 @@ dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n AC_PREREQ([2.60])\n define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 14)\n-define(_CLIENT_VERSION_REVISION, 1)\n+define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n@@ -124,10 +124,10 @@ AC_ARG_ENABLE(bench,\n     [use_bench=$enableval],\n     [use_bench=yes])\n \n-AC_ARG_ENABLE([extended-rpc-tests],\n-    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n-    [use_extended_rpc_tests=$enableval],\n-    [use_extended_rpc_tests=no])\n+AC_ARG_ENABLE([extended-functional-tests],\n+    AS_HELP_STRING([--enable-extended-functional-tests],[enable expensive functional tests when using lcov (default no)]),\n+    [use_extended_functional_tests=$enableval],\n+    [use_extended_functional_tests=no])\n \n AC_ARG_WITH([qrencode],\n   [AS_HELP_STRING([--with-qrencode],\n@@ -413,8 +413,8 @@ if test x$use_pkgconfig = xyes; then\n   ])\n fi\n \n-if test x$use_extended_rpc_tests != xno; then\n-  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n+if test x$use_extended_functional_tests != xno; then\n+  AC_SUBST(EXTENDED_FUNCTIONAL_TESTS, --extended)\n fi\n \n if test x$use_lcov = xyes; then\n@@ -549,6 +549,8 @@ AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n                  #include <byteswap.h>\n                  #endif])\n \n+AC_CHECK_DECLS([__builtin_clz, __builtin_clzl, __builtin_clzll])\n+\n dnl Check for MSG_NOSIGNAL\n AC_MSG_CHECKING(for MSG_NOSIGNAL)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n@@ -557,6 +559,25 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+<<<<<<< HEAD\n+=======\n+dnl Check for MSG_DONTWAIT\n+AC_MSG_CHECKING(for MSG_DONTWAIT)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n+ [[ int f = MSG_DONTWAIT; ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_DONTWAIT, 1,[Define this symbol if you have MSG_DONTWAIT]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for malloc_info (for memory statistics information in getmemoryinfo)\n+AC_MSG_CHECKING(for getmemoryinfo)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n+ [[ int f = malloc_info(0, NULL); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MALLOC_INFO, 1,[Define this symbol if you have malloc_info]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+>>>>>>> master\n dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n@@ -582,6 +603,33 @@ AC_LINK_IFELSE([AC_LANG_SOURCE([\n   ]\n )\n \n+# Check for different ways of gathering OS randomness\n+AC_MSG_CHECKING(for Linux getrandom syscall)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>\n+  #include <sys/syscall.h>\n+  #include <linux/random.h>]],\n+ [[ syscall(SYS_getrandom, nullptr, 32, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYS_GETRANDOM, 1,[Define this symbol if the Linux getrandom system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for getentropy)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <unistd.h>]],\n+ [[ getentropy(nullptr, 32) ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_GETENTROPY, 1,[Define this symbol if the BSD getentropy system call is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+AC_MSG_CHECKING(for sysctl KERN_ARND)\n+AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n+  #include <sys/sysctl.h>]],\n+ [[ static const int name[2] = {CTL_KERN, KERN_ARND};\n+    sysctl(name, 2, nullptr, nullptr, nullptr, 0); ]])],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_SYSCTL_ARND, 1,[Define this symbol if the BSD sysctl(KERN_ARND) is available]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+# Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n   [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n@@ -633,6 +681,10 @@ AX_BOOST_PROGRAM_OPTIONS\n AX_BOOST_THREAD\n AX_BOOST_CHRONO\n \n+dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n \n if test x$use_reduce_exports = xyes; then\n   AC_MSG_CHECKING([for working boost reduced exports])\n@@ -1111,10 +1163,13 @@ AC_SUBST(EVENT_PTHREADS_LIBS)\n AC_SUBST(ZMQ_LIBS)\n AC_SUBST(PROTOBUF_LIBS)\n AC_SUBST(QR_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n+AC_CONFIG_FILES([Makefile src/Makefile doc/man/Makefile share/setup.nsi share/qt/Info.plist test/functional/config.ini])\n+AC_CONFIG_FILES([test/util/buildenv.py],[chmod +x test/util/buildenv.py])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n-AC_CONFIG_LINKS([qa/pull-tester/rpc-tests.py:qa/pull-tester/rpc-tests.py])\n+AC_CONFIG_FILES([doc/Doxyfile])\n+AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n+AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/bctest.py:test/util/bctest.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n dnl result, they leak into secp256k1's configure and crazy things happen.\n@@ -1162,8 +1217,8 @@ esac\n dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n case ${OS} in\n    *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n-     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n+     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  test/functional/config.ini > test/functional/config-2.ini\n+     mv test/functional/config-2.ini test/functional/config.ini\n    ;;\n esac\n "
      },
      {
        "sha": "33dab9b6388890a5ba10e47fcd3b833bb0875dc4",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 122,
        "deletions": 3,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,3 +1,122 @@\n+bitcoin (0.14.1-trusty4) trusty; urgency=medium\n+\n+  * Re-enable UPnP support.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n+\n+bitcoin (0.14.1-trusty3) trusty; urgency=medium\n+\n+  * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n+\n+bitcoin (0.14.1-trusty2) trusty; urgency=medium\n+\n+  * Bump minimum boost version in deps.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n+\n+bitcoin (0.14.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n+\n+bitcoin (0.14.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n+\n+bitcoin (0.13.2-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n+\n+bitcoin (0.13.1-trusty2) trusty; urgency=medium\n+\n+  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n+\n+bitcoin (0.13.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+  * Backport updated bitcoin-qt.desktop from upstream master\n+  * Add zmq dependency\n+  * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n+\n+bitcoin (0.13.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n+\n+bitcoin (0.12.1-trusty1) trusty; urgency=medium\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n+\n+bitcoin (0.12.0-trusty6) trusty; urgency=medium\n+\n+  * Fix program-options dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n+\n+bitcoin (0.12.0-trusty5) trusty; urgency=medium\n+\n+  * Test explicit --with-gui\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty4) trusty; urgency=medium\n+\n+  * Fix libevent-dev dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n+\n+bitcoin (0.12.0-trusty3) trusty; urgency=medium\n+\n+  * Fix precise boost dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n+\n+bitcoin (0.12.0-trusty2) trusty; urgency=medium\n+\n+  * Fix libevent dep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n+\n+bitcoin (0.12.0-trusty1) trusty; urgency=medium\n+\n+  * New upstream release\n+  * Various updates to contrib/debian were merged, a few were not\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n+\n+bitcoin (0.11.2-trusty1) trusty; urgency=low\n+\n+  * New upstream release.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n+\n+bitcoin (0.11.1-trusty2) trusty; urgency=low\n+\n+  * Remove minupnpc builddep.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n+\n+bitcoin (0.11.1-trusty1) trusty; urgency=high\n+\n+  * New upstream release.\n+  * Disable all UPnP support.\n+\n+ -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n+\n bitcoin (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n@@ -179,7 +298,7 @@ bitcoin (0.5.3-natty0) natty; urgency=low\n bitcoin (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n+    These should never have been there, bitcoin isnt anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n@@ -220,7 +339,7 @@ bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n \n   * Add test_bitcoin to build test\n   * Fix clean\n-  * Remove unnecessary build-dependancies\n+  * Remove uneccessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n@@ -380,7 +499,7 @@ bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n \n bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n-  * Fix override aggressive optimizations.\n+  * Fix override agressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n     + Add fallback build-dependency on libdb4.6++-dev.\n     + Tighten unversioned Boost build-dependencies to recent versions,"
      },
      {
        "sha": "0d6ad25e249fe9b7b89a738aba89c2ca1d495587",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 29,
        "deletions": 26,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,27 +1,30 @@\n Source: bitcoin\n Section: utils\n Priority: optional\n-Maintainer: Jonas Smedegaard <dr@jones.dk>\n-Uploaders: Micah Anderson <micah@debian.org>\n+Maintainer: Matt Corallo <matt@mattcorallo.com>\n+Uploaders: Matt Corallo <matt@mattcorallo.com>\n Build-Depends: debhelper,\n  devscripts,\n  automake,\n  libtool,\n  bash-completion,\n- libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n- libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n- libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n- libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n- libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n- qt4-qmake,\n- libqt4-dev,\n+ libevent-dev,\n+ libboost-system1.48-dev | libboost-system-dev (>> 1.47),\n+ libboost-filesystem1.48-dev | libboost-filesystem-dev (>> 1.47),\n+ libboost-program-options1.48-dev | libboost-program-options-dev (>> 1.47),\n+ libboost-thread1.48-dev | libboost-thread-dev (>> 1.47),\n+ libboost-test1.48-dev | libboost-test-dev (>> 1.47),\n+ libboost-chrono1.48-dev | libboost-chrono-dev (>> 1.47),\n+ libminiupnpc8-dev | libminiupnpc-dev,\n+ qt4-qmake, libqt4-dev,\n+ qttools5-dev-tools, qttools5-dev,\n  libqrencode-dev,\n  libprotobuf-dev, protobuf-compiler,\n- python\n+ python,\n+ libzmq3-dev\n Standards-Version: 3.9.2\n Homepage: https://bitcoincore.org/\n Vcs-Git: git://github.com/bitcoin/bitcoin.git\n@@ -31,11 +34,11 @@ Package: bitcoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides the daemon, bitcoind, and the CLI tool\n  bitcoin-cli to interact with the daemon.\n@@ -44,23 +47,23 @@ Package: bitcoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n \n Package: bitcoin-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Bitcoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n  This package provides bitcoin-tx, a command-line transaction creation\n  tool which can be used without a bitcoin daemon.  Some means of"
      },
      {
        "sha": "1029a51073e88b44b76b8a3246bc74ad9795781d",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 8,
        "deletions": 6,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -116,12 +116,7 @@\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n-# Transaction Fee Changes in 0.10.0\n-\n-# Send transactions as zero-fee transactions if possible (default: 0)\n-#sendfreetransactions=0\n-\n-# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n+# Create transactions that have enough fees so they are likely to begin confirmation within n blocks (default: 6).\n # This setting is over-ridden by the -paytxfee option.\n #txconfirmtarget=n\n \n@@ -136,6 +131,13 @@\n # be validated sooner.\n #paytxfee=0.00\n \n+# Enable pruning to reduce storage requirements by deleting old blocks. \n+# This mode is incompatible with -txindex and -rescan.\n+# 0 = default (no pruning).\n+# 1 = allows manual pruning via RPC.\n+# >=550 = target to stay under in MiB. \n+#prune=550\n+\n # User interface options\n \n # Start Bitcoin minimized"
      },
      {
        "sha": "6885e3852126f17e910cbe4236b4f773a1fd8de6",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -12,10 +12,12 @@ override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n \trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n+QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n+\n # Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n \t./autogen.sh\n-\t./configure\n+\t./configure --with-gui=$(QT)\n \n override_dh_auto_test:\n \tmake check"
      },
      {
        "sha": "445175ec2bbaff0758f74f55f5c3f4d36919b04c",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -21,7 +21,7 @@\n REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n # list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize'])\n+SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay', '-prematurewitness', '-walletprematurewitness', '-promiscuousmempoolflags', '-blockminsize', '-sendfreetransactions'])\n \n def main():\n   used = check_output(CMD_GREP_ARGS, shell=True)"
      },
      {
        "sha": "add4bb4883d41b495109672df6d44ebe9691e1d1",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "added",
        "additions": 39,
        "deletions": 0,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,39 @@\n+#!/bin/sh\n+# Copyright (c) 2017 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+# This simple script checks for commits beginning with: scripted-diff:\n+# If found, looks for a script between the lines -BEGIN VERIFY SCRIPT- and\n+# -END VERIFY SCRIPT-. If no ending is found, it reads until the end of the\n+# commit message.\n+\n+# The resulting script should exactly transform the previous commit into the current\n+# one. Any remaining diff signals an error.\n+\n+if test \"x$1\" = \"x\"; then\n+    echo \"Usage: $0 <commit>...\"\n+    exit 1\n+fi\n+\n+RET=0\n+PREV_BRANCH=`git name-rev --name-only HEAD`\n+PREV_HEAD=`git rev-parse HEAD`\n+for i in `git rev-list --reverse $1`; do\n+    git rev-list -n 1 --pretty=\"%s\" $i | grep -q \"^scripted-diff:\" || continue\n+    git checkout --quiet $i^ || exit\n+    SCRIPT=\"`git rev-list --format=%b -n1 $i | sed '/^-BEGIN VERIFY SCRIPT-$/,/^-END VERIFY SCRIPT-$/{//!b};d'`\"\n+    if test \"x$SCRIPT\" = \"x\"; then\n+        echo \"Error: missing script for: $i\"\n+        echo \"Failed\"\n+        RET=1\n+    else\n+        echo \"Running script for: $i\"\n+        echo \"$SCRIPT\"\n+        eval \"$SCRIPT\"\n+        git --no-pager diff --exit-code $i && echo \"OK\" || (echo \"Failed\"; false) || RET=1\n+    fi\n+    git reset --quiet --hard HEAD\n+done\n+git checkout --quiet $PREV_BRANCH 2>/dev/null || git checkout --quiet $PREV_HEAD\n+exit $RET"
      },
      {
        "sha": "6d801d3ac7905cfe745d5390ed4747cf90c7f7e3",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -32,7 +32,7 @@\n     'src/tinyformat.h',\n     'src/leveldb/util/env_win.cc',\n     'src/crypto/ctaes/bench.c',\n-    'qa/rpc-tests/test_framework/bignum.py',\n+    'test/functional/test_framework/bignum.py',\n     # python init:\n     '*__init__.py',\n ]"
      },
      {
        "sha": "8fce648fc2a2a84108f1c9e28c20b6aad98d6627",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 112,
        "deletions": 31,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016-2017 Bitcoin Core Developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,6 +18,7 @@\n import os\n from sys import stdin,stdout,stderr\n import argparse\n+import hashlib\n import subprocess\n import json,codecs\n try:\n@@ -69,6 +70,67 @@ def ask_prompt(text):\n     print(\"\",file=stderr)\n     return reply\n \n+def get_symlink_files():\n+    files = sorted(subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', 'HEAD']).splitlines())\n+    ret = []\n+    for f in files:\n+        if (int(f.decode('utf-8').split(\" \")[0], 8) & 0o170000) == 0o120000:\n+            ret.append(f.decode('utf-8').split(\"\\t\")[1])\n+    return ret\n+\n+def tree_sha512sum(commit='HEAD'):\n+    # request metadata for entire tree, recursively\n+    files = []\n+    blob_by_name = {}\n+    for line in subprocess.check_output([GIT, 'ls-tree', '--full-tree', '-r', commit]).splitlines():\n+        name_sep = line.index(b'\\t')\n+        metadata = line[:name_sep].split() # perms, 'blob', blobid\n+        assert(metadata[1] == b'blob')\n+        name = line[name_sep+1:]\n+        files.append(name)\n+        blob_by_name[name] = metadata[2]\n+\n+    files.sort()\n+    # open connection to git-cat-file in batch mode to request data for all blobs\n+    # this is much faster than launching it per file\n+    p = subprocess.Popen([GIT, 'cat-file', '--batch'], stdout=subprocess.PIPE, stdin=subprocess.PIPE)\n+    overall = hashlib.sha512()\n+    for f in files:\n+        blob = blob_by_name[f]\n+        # request blob\n+        p.stdin.write(blob + b'\\n')\n+        p.stdin.flush()\n+        # read header: blob, \"blob\", size\n+        reply = p.stdout.readline().split()\n+        assert(reply[0] == blob and reply[1] == b'blob')\n+        size = int(reply[2])\n+        # hash the blob data\n+        intern = hashlib.sha512()\n+        ptr = 0\n+        while ptr < size:\n+            bs = min(65536, size - ptr)\n+            piece = p.stdout.read(bs)\n+            if len(piece) == bs:\n+                intern.update(piece)\n+            else:\n+                raise IOError('Premature EOF reading git cat-file output')\n+            ptr += bs\n+        dig = intern.hexdigest()\n+        assert(p.stdout.read(1) == b'\\n') # ignore LF that follows blob data\n+        # update overall hash with file hash\n+        overall.update(dig.encode(\"utf-8\"))\n+        overall.update(\"  \".encode(\"utf-8\"))\n+        overall.update(f)\n+        overall.update(\"\\n\".encode(\"utf-8\"))\n+    p.stdin.close()\n+    if p.wait():\n+        raise IOError('Non-zero return value executing git cat-file')\n+    return overall.hexdigest()\n+\n+def print_merge_details(pull, title, branch, base_branch, head_branch):\n+    print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n+    subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+\n def parse_arguments():\n     epilog = '''\n         In addition, you can set the following git configuration variables:\n@@ -112,7 +174,7 @@ def main():\n     info = retrieve_pr_info(repo,pull)\n     if info is None:\n         exit(1)\n-    title = info['title']\n+    title = info['title'].strip()\n     # precedence order for destination branch argument:\n     #   - command line argument\n     #   - githubmerge.branch setting\n@@ -157,6 +219,9 @@ def main():\n     subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n \n     try:\n+        # Go up to the repository's root.\n+        toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n+        os.chdir(toplevel)\n         # Create unsigned merge commit.\n         if title:\n             firstline = 'Merge #%s: %s' % (pull,title)\n@@ -175,14 +240,30 @@ def main():\n             print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n             exit(4)\n \n-        print('%s#%s%s %s %sinto %s%s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title,ATTR_RESET+ATTR_PR,branch,ATTR_RESET))\n-        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n+        symlink_files = get_symlink_files()\n+        for f in symlink_files:\n+            print(\"ERROR: File %s was a symlink\" % f)\n+        if len(symlink_files) > 0:\n+            exit(4)\n+\n+        # Put tree SHA512 into the message\n+        try:\n+            first_sha512 = tree_sha512sum()\n+            message += '\\n\\nTree-SHA512: ' + first_sha512\n+        except subprocess.CalledProcessError as e:\n+            printf(\"ERROR: Unable to compute tree hash\")\n+            exit(4)\n+        try:\n+            subprocess.check_call([GIT,'commit','--amend','-m',message.encode('utf-8')])\n+        except subprocess.CalledProcessError as e:\n+            printf(\"ERROR: Cannot update message.\",file=stderr)\n+            exit(4)\n+\n+        print_merge_details(pull, title, branch, base_branch, head_branch)\n         print()\n+\n         # Run test command if configured.\n         if testcmd:\n-            # Go up to the repository's root.\n-            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-            os.chdir(toplevel)\n             if subprocess.call(testcmd,shell=True):\n                 print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n                 exit(5)\n@@ -197,12 +278,6 @@ def main():\n                     print(\"Difference with github ignored.\",file=stderr)\n                 else:\n                     exit(6)\n-            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n-            if reply.lower() == 'd':\n-                print(\"Diff accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Diff rejected.\",file=stderr)\n-                exit(6)\n         else:\n             # Verify the result manually.\n             print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n@@ -211,24 +286,26 @@ def main():\n             if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n                 os.putenv('debian_chroot',pull)\n             subprocess.call([BASH,'-i'])\n-            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n-            if reply.lower() == 'm':\n-                print(\"Merge accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Merge rejected.\",file=stderr)\n-                exit(7)\n+\n+        second_sha512 = tree_sha512sum()\n+        if first_sha512 != second_sha512:\n+            print(\"ERROR: Tree hash changed unexpectedly\",file=stderr)\n+            exit(8)\n \n         # Sign the merge commit.\n-        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n-        if reply == 's':\n-            try:\n-                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-            except subprocess.CalledProcessError as e:\n-                print(\"Error signing, exiting.\",file=stderr)\n+        print_merge_details(pull, title, branch, base_branch, head_branch)\n+        while True:\n+            reply = ask_prompt(\"Type 's' to sign off on the above merge, or 'x' to reject and exit.\").lower()\n+            if reply == 's':\n+                try:\n+                    subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n+                    break\n+                except subprocess.CalledProcessError as e:\n+                    print(\"Error signing, exiting.\",file=stderr)\n+                    exit(1)\n+            elif reply == 'x':\n+                print(\"Not signing off on merge, exiting.\",file=stderr)\n                 exit(1)\n-        else:\n-            print(\"Not signing off on merge, exiting.\",file=stderr)\n-            exit(1)\n \n         # Put the result in branch.\n         subprocess.check_call([GIT,'checkout','-q',branch])\n@@ -242,9 +319,13 @@ def main():\n         subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n \n     # Push the result.\n-    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n-    if reply.lower() == 'push':\n-        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+    while True:\n+        reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s, or 'x' to exit without pushing.\" % (host_repo,branch)).lower()\n+        if reply == 'push':\n+            subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n+            break\n+        elif reply == 'x':\n+            exit(1)\n \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "3da8510cfbd70132954e678ee80f07f9c9e16234",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.14\"\n+name: \"bitcoin-linux-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -132,6 +132,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist"
      },
      {
        "sha": "206db7c19e751d414d51d4aaeb2e7bf6bff6288b",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.14\"\n+name: \"bitcoin-osx-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -101,6 +101,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist"
      },
      {
        "sha": "1d4d70494b0cc403649235133c72cbbbc8b2fba0",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.14\"\n+name: \"bitcoin-win-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -116,6 +116,7 @@ script: |\n   export PATH=${WRAP_DIR}:${PATH}\n \n   # Create the release tarball using (arbitrarily) the first host\n+  export GIT_DIR=\"$PWD/.git\"\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n@@ -146,6 +147,7 @@ script: |\n     make ${MAKEOPTS} -C src check-security\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n+    rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n     cp -f bitcoin-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n@@ -159,9 +161,11 @@ script: |\n     cd ../../\n     rm -rf distsrc-${i}\n   done\n-  cd $OUTDIR\n-  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n+  cp -rf contrib/windeploy $BUILD_DIR\n+  cd $BUILD_DIR/windeploy\n+  mkdir unsigned\n+  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip"
      },
      {
        "sha": "1a949f3c078bec11afeb991ccc28dac640481082",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,12 +1,12 @@\n Sample configuration files for:\n-\n+```\n SystemD: bitcoind.service\n Upstart: bitcoind.conf\n OpenRC:  bitcoind.openrc\n          bitcoind.openrcconf\n CentOS:  bitcoind.init\n OS X:    org.bitcoin.bitcoind.plist\n-\n+```\n have been made available to assist packagers in creating node packages here.\n \n See doc/init.md for more information."
      },
      {
        "sha": "f2a2ab2768af4af6fe9f83d175864b327b093be7",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,7 +7,8 @@ run using Python 3 but are compatible with Python 2.\n     $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n \n Required configuration file settings for linearize-hashes:\n-* RPC: `rpcuser`, `rpcpassword`\n+* RPC: `datadir` (Required if `rpcuser` and `rpcpassword` are not specified)\n+* RPC: `rpcuser`, `rpcpassword` (Required if `datadir` is not specified)\n \n Optional config file setting for linearize-hashes:\n * RPC: `host`  (Default: `127.0.0.1`)"
      },
      {
        "sha": "d019b06b6c0afd7de90e078fa96cabea055b4ddc",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,6 +1,7 @@\n # bitcoind RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n+#datadir=~/.bitcoin\n host=127.0.0.1\n port=8332\n #port=18332"
      },
      {
        "sha": "db8eb7021e160259d798fd6a76a7d970b0a74bf1",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -16,6 +16,8 @@\n import re\n import base64\n import sys\n+import os\n+import os.path\n \n settings = {}\n \n@@ -93,6 +95,14 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \n \t\theight += num_blocks\n \n+def get_rpc_cookie():\n+\t# Open the cookie file\n+\twith open(os.path.join(os.path.expanduser(settings['datadir']), '.cookie'), 'r') as f:\n+\t\tcombined = f.readline()\n+\t\tcombined_split = combined.split(\":\")\n+\t\tsettings['rpcuser'] = combined_split[0]\n+\t\tsettings['rpcpassword'] = combined_split[1]\n+\n if __name__ == '__main__':\n \tif len(sys.argv) != 2:\n \t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n@@ -122,8 +132,15 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t\tsettings['max_height'] = 313000\n \tif 'rev_hash_bytes' not in settings:\n \t\tsettings['rev_hash_bytes'] = 'false'\n+\n+\tuse_userpass = True\n+\tuse_datadir = False\n \tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n+\t\tuse_userpass = False\n+\tif 'datadir' in settings and not use_userpass:\n+\t\tuse_datadir = True\n+\tif not use_userpass and not use_datadir:\n+\t\tprint(\"Missing datadir or username and/or password in cfg file\", file=stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])\n@@ -133,4 +150,8 @@ def get_block_hashes(settings, max_blocks_per_call=10000):\n \t# Force hash byte format setting to be lowercase to make comparisons easier.\n \tsettings['rev_hash_bytes'] = settings['rev_hash_bytes'].lower()\n \n+\t# Get the rpc user and pass from the cookie if the datadir is set\n+\tif use_datadir:\n+\t\tget_rpc_cookie()\n+\n \tget_block_hashes(settings)"
      },
      {
        "sha": "7f017bb4f1c961714837b27424aa3f31ecf19964",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -10,7 +10,7 @@ BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature.tar.gz\n+OUT=signature-osx.tar.gz\n OUTROOT=osx\n \n if [ ! -n \"$1\" ]; then"
      },
      {
        "sha": "23a568ad13aeb91d79e51de4283b0959c4baf027",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -302,7 +302,6 @@ def copyFramework(framework, path, verbose):\n         if os.path.exists(fromContentsDir):\n             toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n             shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n             if verbose >= 3:\n                 print(\"Copied Contents:\", fromContentsDir)\n                 print(\" to:\", toContentsDir)\n@@ -675,9 +674,8 @@ else:\n if verbose >= 2:\n     print(\"+ Installing qt.conf +\")\n \n-f = open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\")\n-f.write(qt_conf.encode())\n-f.close()\n+with open(os.path.join(applicationBundle.resourcesPath, \"qt.conf\"), \"wb\") as f:\n+    f.write(qt_conf.encode())\n \n # ------------------------------------------------\n "
      },
      {
        "sha": "cc54fcaf3d10df458a65ae2c62df77bb7aa53620",
        "filename": "contrib/rpm/bitcoin.spec",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/rpm/bitcoin.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/rpm/bitcoin.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.spec?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -311,10 +311,8 @@ rm -f %{buildroot}%{_bindir}/test_*\n \n %check\n make check\n-pushd src\n-srcdir=. test/bitcoin-util-test.py\n-popd\n-qa/pull-tester/rpc-tests.py -extended\n+srcdir=src test/bitcoin-util-test.py\n+test/functional/test_runner.py --extended\n \n %post libs -p /sbin/ldconfig\n "
      },
      {
        "sha": "86366eb8e352278e7cfd46c028fe4cdff8d8da84",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -13,7 +13,7 @@\n # Released under MIT License\n import os\n from itertools import islice\n-from base58 import b58encode, b58decode, b58encode_chk, b58decode_chk, b58chars\n+from base58 import b58encode_chk, b58decode_chk, b58chars\n import random\n from binascii import b2a_hex\n "
      },
      {
        "sha": "b01e2a6d39e5a30d30eca515844b4ac75af2ecca",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 28,
        "deletions": 2,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,7 +8,33 @@ VALID=false\n REVSIG=false\n IFS='\n '\n-for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n+if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n+\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+else\n+\t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n+\t# signatures - including selfsigs - that use SHA1. While you might think that\n+\t# collision attacks shouldn't be an issue as they'd be an attack on yourself,\n+\t# in fact because what's being signed is a commit object that's\n+\t# semi-deterministically generated by untrusted input (the pull-req) in theory\n+\t# an attacker could construct a pull-req that results in a commit object that\n+\t# they've created a collision for. Not the most likely attack, but preventing\n+\t# it is pretty easy so we do so as a \"belt-and-suspenders\" measure.\n+\tGPG_RES=\"\"\n+\tfor LINE in \"$(gpg --version)\"; do\n+\t\tcase \"$LINE\" in\n+\t\t\t\"gpg (GnuPG) 1.4.1\"*|\"gpg (GnuPG) 2.0.\"*)\n+\t\t\t\techo \"Please upgrade to at least gpg 2.1.10 to check for weak signatures\" > /dev/stderr\n+\t\t\t\tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n+\t\t\t\t;;\n+\t\t\t# We assume if you're running 2.1+, you're probably running 2.1.10+\n+\t\t\t# gpg will fail otherwise\n+\t\t\t# We assume if you're running 1.X, it is either 1.4.1X or 1.4.20+\n+\t\t\t# gpg will fail otherwise\n+\t\tesac\n+\tdone\n+\t[ \"$GPG_RES\" = \"\" ] && GPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always --weak-digest sha1 \"$@\" 2>/dev/null)\"\n+fi\n+for LINE in $(echo \"$GPG_RES\"); do\n \tcase \"$LINE\" in\n \t\"[GNUPG:] VALIDSIG \"*)\n \t\twhile read KEY; do\n@@ -26,7 +52,7 @@ if ! $VALID; then\n \texit 1\n fi\n if $VALID && $REVSIG; then\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n+\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\"\n \techo \"$GOODREVSIG\"\n else\n \techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null"
      },
      {
        "sha": "7d41f90ad70ef87caa0ce40bee269ff9d61d9c05",
        "filename": "contrib/verify-commits/trusted-sha512-root-commit",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/trusted-sha512-root-commit",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/trusted-sha512-root-commit",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-sha512-root-commit?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1 @@\n+309bf16257b2395ce502017be627186b749ee749"
      },
      {
        "sha": "74b7f38375ac371571466e1b1af44522b41fbcf2",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 109,
        "deletions": 40,
        "changes": 149,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,61 +3,130 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-# Not technically POSIX-compliant due to use of \"local\", but almost every\n-# shell anyone uses today supports it, so its probably fine\n-\n DIR=$(dirname \"$0\")\n [ \"/${DIR#/}\" != \"$DIR\" ] && DIR=$(dirname \"$(pwd)/$0\")\n \n+echo \"Using verify-commits data from ${DIR}\"\n+\n VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n+VERIFIED_SHA512_ROOT=$(cat \"${DIR}/trusted-sha512-root-commit\")\n REVSIG_ALLOWED=$(cat \"${DIR}/allow-revsig-commits\")\n \n HAVE_FAILED=false\n-IS_SIGNED () {\n-\tif [ $1 = $VERIFIED_ROOT ]; then\n-\t\treturn 0;\n+\n+HAVE_GNU_SHA512=1\n+[ ! -x \"$(which sha512sum)\" ] && HAVE_GNU_SHA512=0\n+\n+if [ x\"$1\" = \"x\" ]; then\n+\tCURRENT_COMMIT=\"HEAD\"\n+else\n+\tCURRENT_COMMIT=\"$1\"\n+fi\n+\n+if [ \"${CURRENT_COMMIT#* }\" != \"$CURRENT_COMMIT\" ]; then\n+\techo \"Commit must not contain spaces?\" > /dev/stderr\n+\texit 1\n+fi\n+\n+VERIFY_TREE=0\n+if [ x\"$2\" = \"x--tree-checks\" ]; then\n+\tVERIFY_TREE=1\n+fi\n+\n+NO_SHA1=1\n+PREV_COMMIT=\"\"\n+\n+while true; do\n+\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_ROOT ]; then\n+\t\techo \"There is a valid path from \"$CURRENT_COMMIT\" to $VERIFIED_ROOT where all commits are signed!\"\n+\t\texit 0;\n+\tfi\n+\n+\tif [ \"$CURRENT_COMMIT\" = $VERIFIED_SHA512_ROOT ]; then\n+\t\tif [ \"$VERIFY_TREE\" = \"1\" ]; then\n+\t\t\techo \"All Tree-SHA512s matched up to $VERIFIED_SHA512_ROOT\" > /dev/stderr\n+\t\tfi\n+\t\tVERIFY_TREE=0\n+\t\tNO_SHA1=0\n \tfi\n-\tif [ \"${REVSIG_ALLOWED#*$1}\" != \"$REVSIG_ALLOWED\" ]; then\n+\n+\tif [ \"$NO_SHA1\" = \"1\" ]; then\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n+\telse\n+\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n+\tfi\n+\n+\tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n \t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n \t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n-\t\treturn 1;\n-\tfi\n-\tlocal PARENTS\n-\tPARENTS=$(git show -s --format=format:%P $1)\n-\tfor PARENT in $PARENTS; do\n-\t\tif IS_SIGNED $PARENT; then\n-\t\t\treturn 0;\n+\n+\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then\n+\t\tif [ \"$PREV_COMMIT\" != \"\" ]; then\n+\t\t\techo \"No parent of $PREV_COMMIT was signed with a trusted key!\" > /dev/stderr\n+\t\t\techo \"Parents are:\" > /dev/stderr\n+\t\t\tPARENTS=$(git show -s --format=format:%P $PREV_COMMIT)\n+\t\t\tfor PARENT in $PARENTS; do\n+\t\t\t\tgit show -s $PARENT > /dev/stderr\n+\t\t\tdone\n+\t\telse\n+\t\t\techo \"$CURRENT_COMMIT was not signed with a trusted key!\" > /dev/stderr\n \t\tfi\n-\t\tbreak\n-\tdone\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n-\t\techo \"Parents are:\" > /dev/stderr\n-\t\tfor PARENT in $PARENTS; do\n-\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\tdone\n-\t\tHAVE_FAILED=true\n+\t\texit 1\n \tfi\n-\treturn 1;\n-}\n \n-if [ x\"$1\" = \"x\" ]; then\n-\tTEST_COMMIT=\"HEAD\"\n-else\n-\tTEST_COMMIT=\"$1\"\n-fi\n+\t# We always verify the top of the tree\n+\tif [ \"$VERIFY_TREE\" = 1 -o \"$PREV_COMMIT\" = \"\" ]; then\n+\t\tIFS_CACHE=\"$IFS\"\n+\t\tIFS='\n+'\n+\t\tfor LINE in $(git ls-tree --full-tree -r \"$CURRENT_COMMIT\"); do\n+\t\t\tcase \"$LINE\" in\n+\t\t\t\t\"12\"*)\n+\t\t\t\t\techo \"Repo contains symlinks\" > /dev/stderr\n+\t\t\t\t\tIFS=\"$IFS_CACHE\"\n+\t\t\t\t\texit 1\n+\t\t\t\t\t;;\n+\t\t\tesac\n+\t\tdone\n+\t\tIFS=\"$IFS_CACHE\"\n+\n+\t\tFILE_HASHES=\"\"\n+\t\tfor FILE in $(git ls-tree --full-tree -r --name-only \"$CURRENT_COMMIT\" | LC_ALL=C sort); do\n+\t\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | sha512sum | { read FIRST OTHER; echo $FIRST; } )\n+\t\t\telse\n+\t\t\t\tHASH=$(git cat-file blob \"$CURRENT_COMMIT\":\"$FILE\" | shasum -a 512 | { read FIRST OTHER; echo $FIRST; } )\n+\t\t\tfi\n+\t\t\t[ \"$FILE_HASHES\" != \"\" ] && FILE_HASHES=\"$FILE_HASHES\"'\n+'\n+\t\t\tFILE_HASHES=\"$FILE_HASHES$HASH  $FILE\"\n+\t\tdone\n+\n+\t\tif [ \"$HAVE_GNU_SHA512\" = 1 ]; then\n+\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | sha512sum)\"\n+\t\telse\n+\t\t\tTREE_HASH=\"$(echo \"$FILE_HASHES\" | shasum -a 512)\"\n+\t\tfi\n+\t\tHASH_MATCHES=0\n+\t\tMSG=\"$(git show -s --format=format:%B \"$CURRENT_COMMIT\" | tail -n1)\"\n \n-IS_SIGNED \"$TEST_COMMIT\"\n-RES=$?\n-if [ \"$RES\" = 1 ]; then\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n+\t\tcase \"$MSG  -\" in\n+\t\t\t\"Tree-SHA512: $TREE_HASH\")\n+\t\t\t\tHASH_MATCHES=1;;\n+\t\tesac\n+\n+\t\tif [ \"$HASH_MATCHES\" = \"0\" ]; then\n+\t\t\techo \"Tree-SHA512 did not match for commit $CURRENT_COMMIT\" > /dev/stderr\n+\t\t\texit 1\n+\t\tfi\n \tfi\n-else\n-\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n-fi\n \n-exit $RES\n+\tPARENTS=$(git show -s --format=format:%P \"$CURRENT_COMMIT\")\n+\tfor PARENT in $PARENTS; do\n+\t\tPREV_COMMIT=\"$CURRENT_COMMIT\"\n+\t\tCURRENT_COMMIT=\"$PARENT\"\n+\t\tbreak\n+\tdone\n+done"
      },
      {
        "sha": "bf4978d1430149b4ed3572a484c01e6bb40f22c0",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "added",
        "additions": 34,
        "deletions": 0,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,34 @@\n+#!/bin/sh\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+if [ -z \"$OSSLSIGNCODE\" ]; then\n+  OSSLSIGNCODE=osslsigncode\n+fi\n+\n+if [ ! -n \"$1\" ]; then\n+  echo \"usage: $0 <osslcodesign args>\"\n+  echo \"example: $0 -key codesign.key\"\n+  exit 1\n+fi\n+\n+OUT=signature-win.tar.gz\n+SRCDIR=unsigned\n+WORKDIR=./.tmp\n+OUTDIR=\"${WORKDIR}/out\"\n+OUTSUBDIR=\"${OUTDIR}/win\"\n+TIMESERVER=http://timestamp.comodoca.com\n+CERTFILE=\"win-codesign.cert\"\n+\n+mkdir -p \"${OUTSUBDIR}\"\n+basename -a `ls -1 \"${SRCDIR}\"/*-unsigned.exe` | while read UNSIGNED; do\n+  echo Signing \"${UNSIGNED}\"\n+  \"${OSSLSIGNCODE}\" sign -certs \"${CERTFILE}\" -t \"${TIMESERVER}\" -in \"${SRCDIR}/${UNSIGNED}\" -out \"${WORKDIR}/${UNSIGNED}\" \"$@\"\n+  \"${OSSLSIGNCODE}\" extract-signature -pem -in \"${WORKDIR}/${UNSIGNED}\" -out \"${OUTSUBDIR}/${UNSIGNED}.pem\" && rm \"${WORKDIR}/${UNSIGNED}\"\n+done\n+\n+rm -f \"${OUT}\"\n+tar -C \"${OUTDIR}\" -czf \"${OUT}\" .\n+rm -rf \"${WORKDIR}\"\n+echo \"Created ${OUT}\""
      },
      {
        "sha": "200b30a3f0d2fd4c537d97baac79f22e81dd8a65",
        "filename": "contrib/windeploy/win-codesign.cert",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/windeploy/win-codesign.cert",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/windeploy/win-codesign.cert",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/win-codesign.cert?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,99 @@\n+-----BEGIN CERTIFICATE-----\n+MIIFTTCCBDWgAwIBAgIRALlW05RLwG2hMQMX5d/o5J8wDQYJKoZIhvcNAQELBQAw\n+fTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxIzAhBgNV\n+BAMTGkNPTU9ETyBSU0EgQ29kZSBTaWduaW5nIENBMB4XDTE2MDIwMzAwMDAwMFoX\n+DTE5MDMwNTIzNTk1OVowgbUxCzAJBgNVBAYTAlVTMQ4wDAYDVQQRDAU5ODEwNDEL\n+MAkGA1UECAwCV0ExEDAOBgNVBAcMB1NlYXR0bGUxEDAOBgNVBAkMB1N0ZSAzMDAx\n+FzAVBgNVBAkMDjcxIENvbHVtYmlhIFN0MSUwIwYDVQQKDBxUaGUgQml0Y29pbiBG\n+b3VuZGF0aW9uLCBJbmMuMSUwIwYDVQQDDBxUaGUgQml0Y29pbiBGb3VuZGF0aW9u\n+LCBJbmMuMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw37Vrv9Gbku0\n++kuV0t89TuyxtAcmT7QE4GcwESKKjmkxfzD9a0qlhqk8GfQ+fw4DHNN+nLKNv7xB\n+bk6aS7J2v2DcXkOjrP99P9jqgTkp7MC04VtG3OqVRGB+gum0pptRovYZUQXIdkY7\n+GJOok/NDagwKiiUe2V2meZ7UctsZNvYeilQdTgKIIhrMB9NowCOhT8ocVL4Ki55/\n+l7hukJn3fueCM3fHTwY2/1gaGsOHoCkFRsD7vokjAVpiY+8rUgvHjb0gxgojiVGd\n+6a6/F5XJwKJacvUyN4Hfc2K5lRMQjTTmo4aWNWIa0iJ3TK9BHpdSLJBqerMPvmnM\n+kkapS+ZTNQIDAQABo4IBjTCCAYkwHwYDVR0jBBgwFoAUKZFg/4pN+uv5pmq4z/nm\n+S71JzhIwHQYDVR0OBBYEFONpQ+cV82URVe+V8G57377KxxexMA4GA1UdDwEB/wQE\n+AwIHgDAMBgNVHRMBAf8EAjAAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMBEGCWCGSAGG\n++EIBAQQEAwIEEDBGBgNVHSAEPzA9MDsGDCsGAQQBsjEBAgEDAjArMCkGCCsGAQUF\n+BwIBFh1odHRwczovL3NlY3VyZS5jb21vZG8ubmV0L0NQUzBDBgNVHR8EPDA6MDig\n+NqA0hjJodHRwOi8vY3JsLmNvbW9kb2NhLmNvbS9DT01PRE9SU0FDb2RlU2lnbmlu\n+Z0NBLmNybDB0BggrBgEFBQcBAQRoMGYwPgYIKwYBBQUHMAKGMmh0dHA6Ly9jcnQu\n+Y29tb2RvY2EuY29tL0NPTU9ET1JTQUNvZGVTaWduaW5nQ0EuY3J0MCQGCCsGAQUF\n+BzABhhhodHRwOi8vb2NzcC5jb21vZG9jYS5jb20wDQYJKoZIhvcNAQELBQADggEB\n+AGnBSi9K/9rgTAyKFKrfGWSfNOwAghmsnsvpZSQ7QyoGWBFKSgCs/70kErl18oHA\n+g7Y8loQB1yukZmJaCa3OvGud7smn45TCh0TMf4EpP20Wxf4rMQTxwAatasHL3+vi\n+I+Nl5bsRZ09kWjvayqLII5upjS/yq0JfpmyGl5k2C/fIpztq0iOLvqWlXcL4+51r\n+cMUAfX6E6EaZQm//ikp+w2+7MEXTKguOuV3gwsrTy0DsvkZl4YDgx/FA4ImzXopv\n+d+3KJPLvO+OSBqUD3JPwXHnuJqGAbLBFyyCa/feGUjLlR8cxcNWLWdp4qxtoIUPG\n+3wTsC9YgrglS0F7FKMXlNRY=\n+-----END CERTIFICATE-----\n+-----BEGIN CERTIFICATE-----\n+MIIF4DCCA8igAwIBAgIQLnyHzA6TSlL+lP0ct800rzANBgkqhkiG9w0BAQwFADCB\n+hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n+BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTMwNTA5\n+MDAwMDAwWhcNMjgwNTA4MjM1OTU5WjB9MQswCQYDVQQGEwJHQjEbMBkGA1UECBMS\n+R3JlYXRlciBNYW5jaGVzdGVyMRAwDgYDVQQHEwdTYWxmb3JkMRowGAYDVQQKExFD\n+T01PRE8gQ0EgTGltaXRlZDEjMCEGA1UEAxMaQ09NT0RPIFJTQSBDb2RlIFNpZ25p\n+bmcgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCmmJBjd5E0f4rR\n+3elnMRHrzB79MR2zuWJXP5O8W+OfHiQyESdrvFGRp8+eniWzX4GoGA8dHiAwDvth\n+e4YJs+P9omidHCydv3Lj5HWg5TUjjsmK7hoMZMfYQqF7tVIDSzqwjiNLS2PgIpQ3\n+e9V5kAoUGFEs5v7BEvAcP2FhCoyi3PbDMKrNKBh1SMF5WgjNu4xVjPfUdpA6M0ZQ\n+c5hc9IVKaw+A3V7Wvf2pL8Al9fl4141fEMJEVTyQPDFGy3CuB6kK46/BAW+QGiPi\n+XzjbxghdR7ODQfAuADcUuRKqeZJSzYcPe9hiKaR+ML0btYxytEjy4+gh+V5MYnmL\n+Agaff9ULAgMBAAGjggFRMIIBTTAfBgNVHSMEGDAWgBS7r34CPfqm8TyEjq3uOJjs\n+2TIy1DAdBgNVHQ4EFgQUKZFg/4pN+uv5pmq4z/nmS71JzhIwDgYDVR0PAQH/BAQD\n+AgGGMBIGA1UdEwEB/wQIMAYBAf8CAQAwEwYDVR0lBAwwCgYIKwYBBQUHAwMwEQYD\n+VR0gBAowCDAGBgRVHSAAMEwGA1UdHwRFMEMwQaA/oD2GO2h0dHA6Ly9jcmwuY29t\n+b2RvY2EuY29tL0NPTU9ET1JTQUNlcnRpZmljYXRpb25BdXRob3JpdHkuY3JsMHEG\n+CCsGAQUFBwEBBGUwYzA7BggrBgEFBQcwAoYvaHR0cDovL2NydC5jb21vZG9jYS5j\n+b20vQ09NT0RPUlNBQWRkVHJ1c3RDQS5jcnQwJAYIKwYBBQUHMAGGGGh0dHA6Ly9v\n+Y3NwLmNvbW9kb2NhLmNvbTANBgkqhkiG9w0BAQwFAAOCAgEAAj8COcPu+Mo7id4M\n+bU2x8U6ST6/COCwEzMVjEasJY6+rotcCP8xvGcM91hoIlP8l2KmIpysQGuCbsQci\n+GlEcOtTh6Qm/5iR0rx57FjFuI+9UUS1SAuJ1CAVM8bdR4VEAxof2bO4QRHZXavHf\n+WGshqknUfDdOvf+2dVRAGDZXZxHNTwLk/vPa/HUX2+y392UJI0kfQ1eD6n4gd2HI\n+TfK7ZU2o94VFB696aSdlkClAi997OlE5jKgfcHmtbUIgos8MbAOMTM1zB5TnWo46\n+BLqioXwfy2M6FafUFRunUkcyqfS/ZEfRqh9TTjIwc8Jvt3iCnVz/RrtrIh2IC/gb\n+qjSm/Iz13X9ljIwxVzHQNuxHoc/Li6jvHBhYxQZ3ykubUa9MCEp6j+KjUuKOjswm\n+5LLY5TjCqO3GgZw1a6lYYUoKl7RLQrZVnb6Z53BtWfhtKgx/GWBfDJqIbDCsUgmQ\n+Fhv/K53b0CDKieoofjKOGd97SDMe12X4rsn4gxSTdn1k0I7OvjV9/3IxTZ+evR5s\n+L6iPDAZQ+4wns3bJ9ObXwzTijIchhmH+v1V04SF3AwpobLvkyanmz1kl63zsRQ55\n+ZmjoIs2475iFTZYRPAmK0H+8KCgT+2rKVI2SXM3CZZgGns5IW9S1N5NGQXwH3c/6\n+Q++6Z2H/fUnguzB9XIDj5hY5S6c=\n+-----END CERTIFICATE-----\n+-----BEGIN CERTIFICATE-----\n+MIIF2DCCA8CgAwIBAgIQTKr5yttjb+Af907YWwOGnTANBgkqhkiG9w0BAQwFADCB\n+hTELMAkGA1UEBhMCR0IxGzAZBgNVBAgTEkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4G\n+A1UEBxMHU2FsZm9yZDEaMBgGA1UEChMRQ09NT0RPIENBIExpbWl0ZWQxKzApBgNV\n+BAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTAwMTE5\n+MDAwMDAwWhcNMzgwMTE4MjM1OTU5WjCBhTELMAkGA1UEBhMCR0IxGzAZBgNVBAgT\n+EkdyZWF0ZXIgTWFuY2hlc3RlcjEQMA4GA1UEBxMHU2FsZm9yZDEaMBgGA1UEChMR\n+Q09NT0RPIENBIExpbWl0ZWQxKzApBgNVBAMTIkNPTU9ETyBSU0EgQ2VydGlmaWNh\n+dGlvbiBBdXRob3JpdHkwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQCR\n+6FSS0gpWsawNJN3Fz0RndJkrN6N9I3AAcbxT38T6KhKPS38QVr2fcHK3YX/JSw8X\n+pz3jsARh7v8Rl8f0hj4K+j5c+ZPmNHrZFGvnnLOFoIJ6dq9xkNfs/Q36nGz637CC\n+9BR++b7Epi9Pf5l/tfxnQ3K9DADWietrLNPtj5gcFKt+5eNu/Nio5JIk2kNrYrhV\n+/erBvGy2i/MOjZrkm2xpmfh4SDBF1a3hDTxFYPwyllEnvGfDyi62a+pGx8cgoLEf\n+Zd5ICLqkTqnyg0Y3hOvozIFIQ2dOciqbXL1MGyiKXCJ7tKuY2e7gUYPDCUZObT6Z\n++pUX2nwzV0E8jVHtC7ZcryxjGt9XyD+86V3Em69FmeKjWiS0uqlWPc9vqv9JWL7w\n+qP/0uK3pN/u6uPQLOvnoQ0IeidiEyxPx2bvhiWC4jChWrBQdnArncevPDt09qZah\n+SL0896+1DSJMwBGB7FY79tOi4lu3sgQiUpWAk2nojkxl8ZEDLXB0AuqLZxUpaVIC\n+u9ffUGpVRr+goyhhf3DQw6KqLCGqR84onAZFdr+CGCe01a60y1Dma/RMhnEw6abf\n+Fobg2P9A3fvQQoh/ozM6LlweQRGBY84YcWsr7KaKtzFcOmpH4MN5WdYgGq/yapiq\n+crxXStJLnbsQ/LBMQeXtHT1eKJ2czL+zUdqnR+WEUwIDAQABo0IwQDAdBgNVHQ4E\n+FgQUu69+Aj36pvE8hI6t7jiY7NkyMtQwDgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB\n+/wQFMAMBAf8wDQYJKoZIhvcNAQEMBQADggIBAArx1UaEt65Ru2yyTUEUAJNMnMvl\n+wFTPoCWOAvn9sKIN9SCYPBMtrFaisNZ+EZLpLrqeLppysb0ZRGxhNaKatBYSaVqM\n+4dc+pBroLwP0rmEdEBsqpIt6xf4FpuHA1sj+nq6PK7o9mfjYcwlYRm6mnPTXJ9OV\n+2jeDchzTc+CiR5kDOF3VSXkAKRzH7JsgHAckaVd4sjn8OoSgtZx8jb8uk2Intzna\n+FxiuvTwJaP+EmzzV1gsD41eeFPfR60/IvYcjt7ZJQ3mFXLrrkguhxuhoqEwWsRqZ\n+CuhTLJK7oQkYdQxlqHvLI7cawiiFwxv/0Cti76R7CZGYZ4wUAc1oBmpjIXUDgIiK\n+boHGhfKppC3n9KUkEEeDys30jXlYsQab5xoq2Z0B15R97QNKyvDb6KkBPvVWmcke\n+jkk9u+UJueBPSZI9FoJAzMxZxuY67RIuaTxslbH9qh17f4a+Hg4yRvv7E491f0yL\n+S0Zj/gA0QHDBw7mh3aZw4gSzQbzpgJHqZJx64SIDqZxubw5lT2yHh17zbqD5daWb\n+QOhTsiedSrnAdyGN/4fy3ryM7xfft0kL0fJuMAsaDk527RH89elWsn2/x20Kk4yl\n+0MC2Hb46TpSi125sC8KKfPog88Tk5c0NqMuRkrF8hey1FGlmDoLnzc7ILaZRfyHB\n+NVOFBkpdn627G190\n+-----END CERTIFICATE-----"
      },
      {
        "sha": "ea398a27eacd78001244023534e77a325a6e1d13",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 69,
        "deletions": 28,
        "changes": 97,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,43 +1,84 @@\n-#!/usr/bin/env python2\n+#!/usr/bin/env python3\n # Copyright (c) 2014-2016 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+\"\"\"\n+    ZMQ example using python3's asyncio\n+\n+    Bitcoin should be started with the command line arguments:\n+        bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332\n+\n+    We use the asyncio library here.  `self.handle()` installs itself as a\n+    future at the end of the function.  Since it never returns with the event\n+    loop having an empty stack of futures, this creates an infinite loop.  An\n+    alternative is to wrap the contents of `handle` inside `while True`.\n+\n+    A blocking example using python 2.7 can be obtained from the git history:\n+    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+\"\"\"\n+\n import binascii\n+import asyncio\n import zmq\n+import zmq.asyncio\n+import signal\n import struct\n+import sys\n+\n+if not (sys.version_info.major >= 3 and sys.version_info.minor >= 5):\n+    print(\"This example only works with Python 3.5 and greater\")\n+    exit(1)\n \n port = 28332\n \n-zmqContext = zmq.Context()\n-zmqSubSocket = zmqContext.socket(zmq.SUB)\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n-zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-try:\n-    while True:\n-        msg = zmqSubSocket.recv_multipart()\n-        topic = str(msg[0])\n+class ZMQHandler():\n+    def __init__(self):\n+        self.loop = zmq.asyncio.install()\n+        self.zmqContext = zmq.asyncio.Context()\n+\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+    async def handle(self) :\n+        msg = await self.zmqSubSocket.recv_multipart()\n+        topic = msg[0]\n         body = msg[1]\n         sequence = \"Unknown\"\n         if len(msg[-1]) == 4:\n           msgSequence = struct.unpack('<I', msg[-1])[-1]\n           sequence = str(msgSequence)\n-        if topic == \"hashblock\":\n-            print '- HASH BLOCK ('+sequence+') -'\n-            print binascii.hexlify(body)\n-        elif topic == \"hashtx\":\n-            print '- HASH TX  ('+sequence+') -'\n-            print binascii.hexlify(body)\n-        elif topic == \"rawblock\":\n-            print '- RAW BLOCK HEADER ('+sequence+') -'\n-            print binascii.hexlify(body[:80])\n-        elif topic == \"rawtx\":\n-            print '- RAW TX ('+sequence+') -'\n-            print binascii.hexlify(body)\n-\n-except KeyboardInterrupt:\n-    zmqContext.destroy()\n+        if topic == b\"hashblock\":\n+            print('- HASH BLOCK ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"hashtx\":\n+            print('- HASH TX  ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"rawblock\":\n+            print('- RAW BLOCK HEADER ('+sequence+') -')\n+            print(binascii.hexlify(body[:80]))\n+        elif topic == b\"rawtx\":\n+            print('- RAW TX ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        # schedule ourselves to receive the next message\n+        asyncio.ensure_future(self.handle())\n+\n+    def start(self):\n+        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n+        self.loop.create_task(self.handle())\n+        self.loop.run_forever()\n+\n+    def stop(self):\n+        self.loop.stop()\n+        self.zmqContext.destroy()\n+\n+daemon = ZMQHandler()\n+daemon.start()"
      },
      {
        "sha": "1cb7eec0c08660d1c2fa7deac45393292f549ea5",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "added",
        "additions": 89,
        "deletions": 0,
        "changes": 89,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,89 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+\"\"\"\n+    ZMQ example using python3's asyncio\n+\n+    Bitcoin should be started with the command line arguments:\n+        bitcoind -testnet -daemon \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n+                -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+                -zmqpubhashblock=tcp://127.0.0.1:28332\n+\n+    We use the asyncio library here.  `self.handle()` installs itself as a\n+    future at the end of the function.  Since it never returns with the event\n+    loop having an empty stack of futures, this creates an infinite loop.  An\n+    alternative is to wrap the contents of `handle` inside `while True`.\n+\n+    The `@asyncio.coroutine` decorator and the `yield from` syntax found here\n+    was introduced in python 3.4 and has been deprecated in favor of the `async`\n+    and `await` keywords respectively.\n+\n+    A blocking example using python 2.7 can be obtained from the git history:\n+    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+\"\"\"\n+\n+import binascii\n+import asyncio\n+import zmq\n+import zmq.asyncio\n+import signal\n+import struct\n+import sys\n+\n+if not (sys.version_info.major >= 3 and sys.version_info.minor >= 4):\n+    print(\"This example only works with Python 3.4 and greater\")\n+    exit(1)\n+\n+port = 28332\n+\n+class ZMQHandler():\n+    def __init__(self):\n+        self.loop = zmq.asyncio.install()\n+        self.zmqContext = zmq.asyncio.Context()\n+\n+        self.zmqSubSocket = self.zmqContext.socket(zmq.SUB)\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"hashtx\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawblock\")\n+        self.zmqSubSocket.setsockopt_string(zmq.SUBSCRIBE, \"rawtx\")\n+        self.zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n+\n+    @asyncio.coroutine\n+    def handle(self) :\n+        msg = yield from self.zmqSubSocket.recv_multipart()\n+        topic = msg[0]\n+        body = msg[1]\n+        sequence = \"Unknown\"\n+        if len(msg[-1]) == 4:\n+          msgSequence = struct.unpack('<I', msg[-1])[-1]\n+          sequence = str(msgSequence)\n+        if topic == b\"hashblock\":\n+            print('- HASH BLOCK ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"hashtx\":\n+            print('- HASH TX  ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        elif topic == b\"rawblock\":\n+            print('- RAW BLOCK HEADER ('+sequence+') -')\n+            print(binascii.hexlify(body[:80]))\n+        elif topic == b\"rawtx\":\n+            print('- RAW TX ('+sequence+') -')\n+            print(binascii.hexlify(body))\n+        # schedule ourselves to receive the next message\n+        asyncio.ensure_future(self.handle())\n+\n+    def start(self):\n+        self.loop.add_signal_handler(signal.SIGINT, self.stop)\n+        self.loop.create_task(self.handle())\n+        self.loop.run_forever()\n+\n+    def stop(self):\n+        self.loop.stop()\n+        self.zmqContext.destroy()\n+\n+daemon = ZMQHandler()\n+daemon.start()"
      },
      {
        "sha": "69ed3e573bb3fa14476b0b539805850159eb23e0",
        "filename": "depends/config.guess",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,7 +2,7 @@\n # Attempt to guess a canonical system name.\n #   Copyright 1992-2017 Free Software Foundation, Inc.\n \n-timestamp='2017-01-01'\n+timestamp='2017-03-05'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -837,10 +837,11 @@ EOF\n \tUNAME_PROCESSOR=`/usr/bin/uname -p`\n \tcase ${UNAME_PROCESSOR} in\n \t    amd64)\n-\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n-\t    *)\n-\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n+\t\tUNAME_PROCESSOR=x86_64 ;;\n+\t    i386)\n+\t\tUNAME_PROCESSOR=i586 ;;\n \tesac\n+\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n \texit ;;\n     i*:CYGWIN*:*)\n \techo ${UNAME_MACHINE}-pc-cygwin\n@@ -1343,6 +1344,9 @@ EOF\n     NSR-?:NONSTOP_KERNEL:*:*)\n \techo nsr-tandem-nsk${UNAME_RELEASE}\n \texit ;;\n+    NSX-?:NONSTOP_KERNEL:*:*)\n+\techo nsx-tandem-nsk${UNAME_RELEASE}\n+\texit ;;\n     *:NonStop-UX:*:*)\n \techo mips-compaq-nonstopux\n \texit ;;"
      },
      {
        "sha": "40ea5dfe1152f0fc5160879bb71bfe1fae2595f6",
        "filename": "depends/config.sub",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,7 +2,7 @@\n # Configuration validation subroutine script.\n #   Copyright 1992-2017 Free Software Foundation, Inc.\n \n-timestamp='2017-01-01'\n+timestamp='2017-04-02'\n \n # This file is free software; you can redistribute it and/or modify it\n # under the terms of the GNU General Public License as published by\n@@ -263,7 +263,7 @@ case $basic_machine in\n \t| fido | fr30 | frv | ft32 \\\n \t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n \t| hexagon \\\n-\t| i370 | i860 | i960 | ia64 \\\n+\t| i370 | i860 | i960 | ia16 | ia64 \\\n \t| ip2k | iq2000 \\\n \t| k1om \\\n \t| le32 | le64 \\\n@@ -315,6 +315,7 @@ case $basic_machine in\n \t| ubicom32 \\\n \t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n \t| visium \\\n+\t| wasm32 \\\n \t| we32k \\\n \t| x86 | xc16x | xstormy16 | xtensa \\\n \t| z8k | z80)\n@@ -388,7 +389,7 @@ case $basic_machine in\n \t| h8300-* | h8500-* \\\n \t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n \t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia64-* \\\n+\t| i*86-* | i860-* | i960-* | ia16-* | ia64-* \\\n \t| ip2k-* | iq2000-* \\\n \t| k1om-* \\\n \t| le32-* | le64-* \\\n@@ -446,6 +447,7 @@ case $basic_machine in\n \t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n \t| vax-* \\\n \t| visium-* \\\n+\t| wasm32-* \\\n \t| we32k-* \\\n \t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n \t| xstormy16-* | xtensa*-* \\\n@@ -948,6 +950,9 @@ case $basic_machine in\n \tnsr-tandem)\n \t\tbasic_machine=nsr-tandem\n \t\t;;\n+\tnsx-tandem)\n+\t\tbasic_machine=nsx-tandem\n+\t\t;;\n \top50n-* | op60c-*)\n \t\tbasic_machine=hppa1.1-oki\n \t\tos=-proelf\n@@ -1243,6 +1248,9 @@ case $basic_machine in\n \t\tbasic_machine=a29k-wrs\n \t\tos=-vxworks\n \t\t;;\n+\twasm32)\n+\t\tbasic_machine=wasm32-unknown\n+\t\t;;\n \tw65*)\n \t\tbasic_machine=w65-wdc\n \t\tos=-none"
      },
      {
        "sha": "bf773ccd147d43228815200029dbddd9920fa09d",
        "filename": "depends/packages/boost.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,8 +1,8 @@\n package=boost\n-$(package)_version=1_63_0\n-$(package)_download_path=https://sourceforge.net/projects/boost/files/boost/1.63.0\n+$(package)_version=1_64_0\n+$(package)_download_path=https://dl.bintray.com/boostorg/release/1.64.0/source/\n $(package)_file_name=$(package)_$($(package)_version).tar.bz2\n-$(package)_sha256_hash=beae2529f759f6b3bf3f4969a19c2e9d6f0c503edcb2de4a61d1428519fcb3b0\n+$(package)_sha256_hash=7bcc5caace97baa948931d712ea5f37038dbb1c5d89b43ad4def4ed7cb683332\n \n define $(package)_set_vars\n $(package)_config_opts_release=variant=release"
      },
      {
        "sha": "bbe03754099f53b6fe404876af8cbc68722fc216",
        "filename": "depends/packages/dbus.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,8 +1,8 @@\n package=dbus\n-$(package)_version=1.10.14\n-$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n+$(package)_version=1.10.18\n+$(package)_download_path=https://dbus.freedesktop.org/releases/dbus\n $(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=23238f70353e38ce5ca183ebc9525c0d97ac00ef640ad29cf794782af6e6a083\n+$(package)_sha256_hash=6049ddd5f3f3e2618f615f1faeda0a115104423a7996b7aa73e2f36e38cc514a\n $(package)_dependencies=expat\n \n define $(package)_set_vars"
      },
      {
        "sha": "00231d75d5f2f297b798b652c2e85ca865fc2e02",
        "filename": "depends/packages/libevent.mk",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,8 +1,8 @@\n package=libevent\n-$(package)_version=2.1.7\n+$(package)_version=2.1.8-stable\n $(package)_download_path=https://github.com/libevent/libevent/archive/\n-$(package)_file_name=release-$($(package)_version)-rc.tar.gz\n-$(package)_sha256_hash=548362d202e22fe24d4c3fad38287b4f6d683e6c21503341373b89785fa6f991\n+$(package)_file_name=release-$($(package)_version).tar.gz\n+$(package)_sha256_hash=316ddb401745ac5d222d7c529ef1eada12f58f6376a66c1118eee803cb70f83d\n \n define $(package)_preprocess_cmds\n   ./autogen.sh"
      },
      {
        "sha": "966804ce8bbf677fae5446219420532b86fdb800",
        "filename": "depends/packages/native_ccache.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,8 +1,8 @@\n package=native_ccache\n-$(package)_version=3.3.3\n+$(package)_version=3.3.4\n $(package)_download_path=https://samba.org/ftp/ccache\n $(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=2985bc5e32ebe38d2958d508eb54ddcad39eed909489c0c2988035214597ca54\n+$(package)_sha256_hash=fa9d7f38367431bc86b19ad107d709ca7ecf1574fdacca01698bdf0a47cd8567\n \n define $(package)_set_vars\n $(package)_config_opts="
      },
      {
        "sha": "44fdf1c2952b6188b25ddfe56d2b4f1c71d1c07f",
        "filename": "depends/packages/qrencode.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,7 +1,7 @@\n package=qrencode\n $(package)_version=3.4.4\n $(package)_download_path=https://fukuchi.org/works/qrencode/\n-$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n+$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n $(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n \n define $(package)_set_vars"
      },
      {
        "sha": "38498103bb1704a3f13979c1359649a786d50aef",
        "filename": "doc/.gitignore",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/.gitignore?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1 @@\n+Doxyfile"
      },
      {
        "sha": "58c65fb7e25514043bef4caad82a668aabca4914",
        "filename": "doc/Doxyfile.in",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -38,7 +38,7 @@ PROJECT_NAME           = \"Bitcoin Core\"\n # could be handy for archiving the generated documentation or if some version\n # control system is used.\n \n-PROJECT_NUMBER         = 0.14.1\n+PROJECT_NUMBER         = @PACKAGE_VERSION@\n \n # Using the PROJECT_BRIEF tag one can provide an optional one line description\n # for a project that appears at the top of each page and should give viewer a",
        "previous_filename": "doc/Doxyfile"
      },
      {
        "sha": "275ae67e54daaa03c451dffbcdedf04e89388698",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,9 +1,9 @@\n-Bitcoin Core 0.14.1\n-=====================\n+Bitcoin Core\n+=============\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. However, it downloads and stores the entire history of Bitcoin transactions (which is currently several GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n "
      },
      {
        "sha": "07d61b3bda13acb5ac4775db4d23a97586aed646",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,5 +1,5 @@\n-Bitcoin Core 0.14.1\r\n-=====================\r\n+Bitcoin Core\r\n+=============\r\n \r\n Intro\r\n -----\r"
      },
      {
        "sha": "32d7dbd69e7d694f4b27c151343c815c1708eed9",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,14 +11,14 @@ Install the OS X command line tools:\n \n When the popup appears, click `Install`.\n \n-Then install [Homebrew](http://brew.sh).\n+Then install [Homebrew](https://brew.sh).\n \n Dependencies\n ----------------------\n \n-    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf --c++11 qt5 libevent\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf qt libevent\n \n-In case you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n+If you want to build the disk image with `make deploy` (.dmg / optional), you need RSVG\n \n     brew install librsvg\n "
      },
      {
        "sha": "b7eae2a630ad1acca937121b4def7e382256f283",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -321,8 +321,10 @@ Clang is installed by default as `cc` compiler, this makes it easier to get\n started than on [OpenBSD](build-openbsd.md). Installing dependencies:\n \n     pkg install autoconf automake libtool pkgconf\n-    pkg install boost-libs openssl libevent2\n+    pkg install boost-libs openssl libevent\n+    pkg install gmake\n \n+You need to use GNU make (`gmake`) instead of `make`.\n (`libressl` instead of `openssl` will also work)\n \n For the wallet (optional):\n@@ -338,7 +340,7 @@ Then build using:\n \n     ./autogen.sh\n     ./configure --with-incompatible-bdb BDB_CFLAGS=\"-I/usr/local/include/db5\" BDB_LIBS=\"-L/usr/local/lib -ldb_cxx-5\"\n-    make\n+    gmake\n \n *Note on debugging*: The version of `gdb` installed by default is [ancient and considered harmful](https://wiki.freebsd.org/GdbRetirement).\n It is not suitable for debugging a multi-threaded C++ program, not even for getting backtraces. Please install the package `gdb` and"
      },
      {
        "sha": "cf860a1bf271207f2f62ea53dbd7524916ef5cf8",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 78,
        "deletions": 6,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -132,7 +132,7 @@ Run with the -testnet option to run with \"play bitcoins\" on the test network, if\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n-In regression test mode, blocks can be created on-demand; see qa/rpc-tests/ for tests\n+In regression test mode, blocks can be created on-demand; see test/functional/ for tests\n that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n@@ -252,7 +252,7 @@ Wallet\n \n   - *Rationale*: In RPC code that conditionally uses the wallet (such as\n     `validateaddress`) it is easy to forget that global pointer `pwalletMain`\n-    can be NULL. See `qa/rpc-tests/disablewallet.py` for functional tests\n+    can be NULL. See `test/functional/disablewallet.py` for functional tests\n     exercising the API with `-disablewallet`\n \n - Include `db_cxx.h` (BerkeleyDB header) only when `ENABLE_WALLET` is set\n@@ -343,10 +343,9 @@ Strings and formatting\n Variable names\n --------------\n \n-The shadowing warning (`-Wshadow`) is enabled by default. It prevents issues rising\n-from using a different variable with the same name.\n-\n-Please name variables so that their names do not shadow variables defined in the source code.\n+Although the shadowing warning (`-Wshadow`) is not enabled by default (it prevents issues rising\n+from using a different variable with the same name),\n+please name variables so that their names do not shadow variables defined in the source code.\n \n E.g. in member initializers, prepend `_` to the argument name shadowing the\n member name:\n@@ -495,3 +494,76 @@ Git and GitHub tips\n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n   `git checkout` and anywhere a commit id would be acceptable to see the changes from pull request NUMBER.\n+\n+RPC interface guidelines\n+--------------------------\n+\n+A few guidelines for introducing and reviewing new RPC interfaces:\n+\n+- Method naming: use consecutive lower-case names such as `getrawtransaction` and `submitblock`\n+\n+  - *Rationale*: Consistency with existing interface.\n+\n+- Argument naming: use snake case `fee_delta` (and not, e.g. camel case `feeDelta`)\n+\n+  - *Rationale*: Consistency with existing interface.\n+\n+- Use the JSON parser for parsing, don't manually parse integers or strings from\n+  arguments unless absolutely necessary.\n+\n+  - *Rationale*: Introduces hand-rolled string manipulation code at both the caller and callee sites,\n+    which is error prone, and it is easy to get things such as escaping wrong.\n+    JSON already supports nested data structures, no need to re-invent the wheel.\n+\n+  - *Exception*: AmountToValue can parse amounts as string. This was introduced because many JSON\n+    parsers and formatters hard-code handling decimal numbers as floating point\n+    values, resulting in potential loss of precision. This is unacceptable for\n+    monetary values. **Always** use `AmountToValue` and `ValueToAmount` when\n+    inputting or outputting monetary values. The only exceptions to this are\n+    `prioritisetransaction` and `getblocktemplate` because their interface\n+    is specified as-is in BIP22.\n+\n+- Missing arguments and 'null' should be treated the same: as default values. If there is no\n+  default value, both cases should fail in the same way.\n+\n+  - *Rationale*: Avoids surprises when switching to name-based arguments. Missing name-based arguments\n+  are passed as 'null'.\n+\n+  - *Exception*: Many legacy exceptions to this exist, one of the worst ones is\n+    `getbalance` which follows a completely different code path based on the\n+    number of arguments. We are still in the process of cleaning these up. Do not introduce\n+    new ones.\n+\n+- Try not to overload methods on argument type. E.g. don't make `getblock(true)` and `getblock(\"hash\")`\n+  do different things.\n+\n+  - *Rationale*: This is impossible to use with `bitcoin-cli`, and can be surprising to users.\n+\n+  - *Exception*: Some RPC calls can take both an `int` and `bool`, most notably when a bool was switched\n+    to a multi-value, or due to other historical reasons. **Always** have false map to 0 and\n+    true to 1 in this case.\n+\n+- Don't forget to fill in the argument names correctly in the RPC command table.\n+\n+  - *Rationale*: If not, the call can not be used with name-based arguments.\n+\n+- Set okSafeMode in the RPC command table to a sensible value: safe mode is when the\n+  blockchain is regarded to be in a confused state, and the client deems it unsafe to\n+  do anything irreversible such as send. Anything that just queries should be permitted.\n+\n+  - *Rationale*: Troubleshooting a node in safe mode is difficult if half the\n+    RPCs don't work.\n+\n+- Add every non-string RPC argument `(method, idx, name)` to the table `vRPCConvertParams` in `rpc/client.cpp`.\n+\n+  - *Rationale*: `bitcoin-cli` and the GUI debug console use this table to determine how to\n+    convert a plaintext command line to JSON. If the types don't match, the method can be unusable\n+    from there.\n+\n+- A RPC method must either be a wallet method or a non-wallet method. Do not\n+  introduce new methods such as `getinfo` and `signrawtransaction` that differ\n+  in behavior based on presence of a wallet.\n+\n+  - *Rationale*: as well as complicating the implementation and interfering\n+    with the introduction of multi-wallet, wallet and non-wallet code should be\n+    separated to avoid introducing circular dependencies between code units."
      },
      {
        "sha": "5dedcb51c895e612c6953b99ca3bb532899cb4aa",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -32,6 +32,13 @@ We disable ccache because we don't want to pollute the ccache with instrumented\n objects, and similarly don't want to use non-instrumented cached objects linked\n in.\n \n+The fuzzing can be sped up significantly (~200x) by using `afl-clang-fast` and\n+`afl-clang-fast++` in place of `afl-gcc` and `afl-g++` when compiling. When\n+compiling using `afl-clang-fast`/`afl-clang-fast++` the resulting\n+`test_bitcoin_fuzzy` binary will be instrumented in such a way that the AFL\n+features \"persistent mode\" and \"deferred forkserver\" can be used. See\n+https://github.com/mcarpenter/afl/tree/master/llvm_mode for details.\n+\n Preparing fuzzing\n ------------------\n \n@@ -63,4 +70,3 @@ $AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_bitcoin_fuzzy\n \n You may have to change a few kernel parameters to test optimally - `afl-fuzz`\n will print an error and suggestion if so.\n-"
      },
      {
        "sha": "c2f55b57969f4361b090a6eff53e7f4fd2859ebd",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -336,7 +336,7 @@ There will be a lot of warnings printed during the build of the image. These can\n Getting and building the inputs\n --------------------------------\n \n-At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-building.sh -b signer 0.13.0\"). Otherwise ignore this.\n+At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-build.sh -b signer 0.13.0\"). Otherwise ignore this.\n \n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n in the bitcoin repository under 'Fetch and create inputs' to install sources which require"
      },
      {
        "sha": "0493241b1e07e90db2ac06eacaaa12ff3a6cd1e9",
        "filename": "doc/man/bitcoin-cli.1",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-cli.1?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n-.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.14.0.0\n+bitcoin-cli \\- manual page for bitcoin-cli v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.14.0.0\\-dirty\n+Bitcoin Core RPC client version v0.14.99.0\n .SS \"Usage:\"\n .TP\n bitcoin\\-cli [options] <command> [params]"
      },
      {
        "sha": "f9ce2dfc50344cdaa84aef8cf135da88e361279e",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n-.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.14.0.0\n+bitcoin-qt \\- manual page for bitcoin-qt v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core version v0.14.0.0\\-dirty (64\\-bit)\n+Bitcoin Core version v0.14.99.0 (64\\-bit)\n Usage:\n .IP\n bitcoin\\-qt [command\\-line options]\n@@ -72,7 +72,11 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n+<<<<<<< HEAD\n Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+=======\n+Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+>>>>>>> master\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>"
      },
      {
        "sha": "98adf2f5b1e5d7445326a0782ddd081a3e079b99",
        "filename": "doc/man/bitcoin-tx.1",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoin-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-tx.1?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n-.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.14.0.0\n+bitcoin-tx \\- manual page for bitcoin-tx v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.14.0.0\\-dirty\n+Bitcoin Core bitcoin\\-tx utility version v0.14.99.0\n .SS \"Usage:\"\n .TP\n bitcoin\\-tx [options] <hex\\-tx> [commands]"
      },
      {
        "sha": "852da878ccc59b26b466b5d35570f95da5cb6bb2",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 8,
        "deletions": 4,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,9 +1,9 @@\n-.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.3.\n-.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.0.0\" \"User Commands\"\n+.\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n+.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.14.0.0\n+bitcoind \\- manual page for bitcoind v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.14.0.0\\-dirty\n+Bitcoin Core Daemon version v0.14.99.0\n .SS \"Usage:\"\n .TP\n bitcoind [options]\n@@ -77,7 +77,11 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n+<<<<<<< HEAD\n Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+=======\n+Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+>>>>>>> master\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>"
      },
      {
        "sha": "264e8e641c7748e87a0e07b6302f407ed6e42b64",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -50,4 +50,3 @@ Thanks to everyone who directly contributed to this release:\n \n \n As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n-"
      },
      {
        "sha": "c41f22979b581f3ba6af58b73b578c8d138fa966",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "added",
        "additions": 873,
        "deletions": 0,
        "changes": 873,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,873 @@\n+Bitcoin Core version 0.14.0 is now available from:\n+\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n+\n+This is a new major version release, including new features, various bugfixes\n+and performance improvements, as well as updated translations.\n+\n+Please report bugs using the issue tracker at github:\n+\n+  <https://github.com/bitcoin/bitcoin/issues>\n+\n+To receive security and update notifications, please subscribe to:\n+\n+  <https://bitcoincore.org/en/list/announcements/join/>\n+\n+Compatibility\n+==============\n+\n+Bitcoin Core is extensively tested on multiple operating systems using\n+the Linux kernel, macOS 10.8+, and Windows Vista and later.\n+\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n+No attempt is made to prevent installing or running the software on Windows XP, you\n+can still do so at your own risk but be aware that there are known instabilities and issues.\n+Please do not report issues about Windows XP to the issue tracker.\n+\n+Bitcoin Core should also work on most other Unix-like systems but is not\n+frequently tested on them.\n+\n+Notable changes\n+===============\n+\n+Performance Improvements\n+--------------\n+\n+Validation speed and network propagation performance have been greatly\n+improved, leading to much shorter sync and initial block download times.\n+\n+- The script signature cache has been reimplemented as a \"cuckoo cache\",\n+  allowing for more signatures to be cached and faster lookups.\n+- Assumed-valid blocks have been introduced which allows script validation to\n+  be skipped for ancestors of known-good blocks, without changing the security\n+  model. See below for more details.\n+- In some cases, compact blocks are now relayed before being fully validated as\n+  per BIP152.\n+- P2P networking has been refactored with a focus on concurrency and\n+  throughput. Network operations are no longer bottlenecked by validation. As a\n+  result, block fetching is several times faster than previous releases in many\n+  cases.\n+- The UTXO cache now claims unused mempool memory. This speeds up initial block\n+  download as UTXO lookups are a major bottleneck there, and there is no use for\n+  the mempool at that stage.\n+\n+\n+Manual Pruning\n+--------------\n+\n+Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n+the blockchain allows for significant storage space savings as the vast majority of\n+the downloaded data can be discarded after processing so very little of it remains\n+on the disk.\n+\n+Manual block pruning can now be enabled by setting `-prune=1`. Once that is set,\n+the RPC command `pruneblockchain` can be used to prune the blockchain up to the\n+specified height or timestamp.\n+\n+`getinfo` Deprecated\n+--------------------\n+\n+The `getinfo` RPC command has been deprecated. Each field in the RPC call\n+has been moved to another command's output with that command also giving\n+additional information that `getinfo` did not provide. The following table\n+shows where each field has been moved to:\n+\n+|`getinfo` field   | Moved to                                  |\n+|------------------|-------------------------------------------|\n+`\"version\"`\t   | `getnetworkinfo()[\"version\"]`\n+`\"protocolversion\"`| `getnetworkinfo()[\"protocolversion\"]`\n+`\"walletversion\"`  | `getwalletinfo()[\"walletversion\"]`\n+`\"balance\"`\t   | `getwalletinfo()[\"balance\"]`\n+`\"blocks\"`\t   | `getblockchaininfo()[\"blocks\"]`\n+`\"timeoffset\"`\t   | `getnetworkinfo()[\"timeoffset\"]`\n+`\"connections\"`\t   | `getnetworkinfo()[\"connections\"]`\n+`\"proxy\"`\t   | `getnetworkinfo()[\"networks\"][0][\"proxy\"]`\n+`\"difficulty\"`\t   | `getblockchaininfo()[\"difficulty\"]`\n+`\"testnet\"`\t   | `getblockchaininfo()[\"chain\"] == \"test\"`\n+`\"keypoololdest\"`  | `getwalletinfo()[\"keypoololdest\"]`\n+`\"keypoolsize\"`\t   | `getwalletinfo()[\"keypoolsize\"]`\n+`\"unlocked_until\"` | `getwalletinfo()[\"unlocked_until\"]`\n+`\"paytxfee\"`\t   | `getwalletinfo()[\"paytxfee\"]`\n+`\"relayfee\"`\t   | `getnetworkinfo()[\"relayfee\"]`\n+`\"errors\"`\t   | `getnetworkinfo()[\"warnings\"]`\n+\n+ZMQ On Windows\n+--------------\n+\n+Previously the ZeroMQ notification system was unavailable on Windows\n+due to various issues with ZMQ. These have been fixed upstream and\n+now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n+help with using ZMQ in general.\n+\n+Nested RPC Commands in Debug Console\n+------------------------------------\n+\n+The ability to nest RPC commands has been added to the debug console. This\n+allows users to have the output of a command become the input to another\n+command without running the commands separately.\n+\n+The nested RPC commands use bracket syntax (i.e. `getwalletinfo()`) and can\n+be nested (i.e. `getblock(getblockhash(1))`). Simple queries can be\n+done with square brackets where object values are accessed with either an \n+array index or a non-quoted string (i.e. `listunspent()[0][txid]`). Both\n+commas and spaces can be used to separate parameters in both the bracket syntax\n+and normal RPC command syntax.\n+\n+Network Activity Toggle\n+-----------------------\n+\n+A RPC command and GUI toggle have been added to enable or disable all p2p\n+network activity. The network status icon in the bottom right hand corner \n+is now the GUI toggle. Clicking the icon will either enable or disable all\n+p2p network activity. If network activity is disabled, the icon will \n+be grayed out with an X on top of it.\n+\n+Additionally the `setnetworkactive` RPC command has been added which does\n+the same thing as the GUI icon. The command takes one boolean parameter,\n+`true` enables networking and `false` disables it.\n+\n+Out-of-sync Modal Info Layer\n+----------------------------\n+\n+When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n+layer will be shown over top of the normal display. This layer contains\n+details about the current sync progress and estimates the amount of time\n+remaining to finish syncing. This layer can also be hidden and subsequently\n+unhidden by clicking on the progress bar at the bottom of the window.\n+\n+Support for JSON-RPC Named Arguments\n+------------------------------------\n+\n+Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n+can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n+for passing parameters by-name with an object.\n+\n+`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n+when the `-named` option is given.\n+\n+Some examples:\n+\n+    src/bitcoin-cli -named help command=\"help\"\n+    src/bitcoin-cli -named getblockhash height=0\n+    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n+\n+The order of arguments doesn't matter in this case. Named arguments are also\n+useful to leave out arguments that should stay at their default value. The\n+rarely-used arguments `comment` and `comment_to` to `sendtoaddress`, for example, can\n+be left out. However, this is not yet implemented for many RPC calls, this is\n+expected to land in a later release.\n+\n+The RPC server remains fully backwards compatible with positional arguments.\n+\n+Opt into RBF When Sending\n+-------------------------\n+\n+A new startup option, `-walletrbf`, has been added to allow users to have all\n+transactions sent opt into RBF support. The default value for this option is\n+currently `false`, so transactions will not opt into RBF by default. The new\n+`bumpfee` RPC can be used to replace transactions that opt into RBF.\n+\n+Sensitive Data Is No Longer Stored In Debug Console History\n+-----------------------------------------------------------\n+\n+The debug console maintains a history of previously entered commands that can be\n+accessed by pressing the Up-arrow key so that users can easily reuse previously\n+entered commands. Commands which have sensitive information such as passphrases and\n+private keys will now have a `(...)` in place of the parameters when accessed through\n+the history.\n+\n+Retaining the Mempool Across Restarts\n+-------------------------------------\n+\n+The mempool will be saved to the data directory prior to shutdown\n+to a `mempool.dat` file. This file preserves the mempool so that when the node\n+restarts the mempool can be filled with transactions without waiting for new transactions\n+to be created. This will also preserve any changes made to a transaction through\n+commands such as `prioritisetransaction` so that those changes will not be lost.\n+\n+Final Alert\n+-----------\n+\n+The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n+The Alert System was retired with a maximum sequence final alert which causes any nodes\n+supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n+prevents any other alerts from overriding it. This final alert is hard-coded into this release\n+so that all old nodes receive the final alert.\n+\n+GUI Changes\n+-----------\n+\n+ - After resetting the options by clicking the `Reset Options` button \n+   in the options dialog or with the `-resetguioptions` startup option, \n+   the user will be prompted to choose the data directory again. This \n+   is to ensure that custom data directories will be kept after the \n+   option reset which clears the custom data directory set via the choose \n+   datadir dialog.\n+\n+ - Multiple peers can now be selected in the list of peers in the debug \n+   window. This allows for users to ban or disconnect multiple peers \n+   simultaneously instead of banning them one at a time.\n+\n+ - An indicator has been added to the bottom right hand corner of the main\n+   window to indicate whether the wallet being used is a HD wallet. This\n+   icon will be grayed out with an X on top of it if the wallet is not a\n+   HD wallet.\n+\n+Low-level RPC changes\n+----------------------\n+\n+ - `importprunedfunds` only accepts two required arguments. Some versions accept\n+   an optional third arg, which was always ignored. Make sure to never pass more\n+   than two arguments.\n+\n+ - The first boolean argument to `getaddednodeinfo` has been removed. This is \n+   an incompatible change.\n+\n+ - RPC command `getmininginfo` loses the \"testnet\" field in favor of the more\n+   generic \"chain\" (which has been present for years).\n+\n+ - A new RPC command `preciousblock` has been added which marks a block as\n+   precious. A precious block will be treated as if it were received earlier\n+   than a competing block.\n+\n+ - A new RPC command `importmulti` has been added which receives an array of \n+   JSON objects representing the intention of importing a public key, a \n+   private key, an address and script/p2sh\n+\n+ - Use of `getrawtransaction` for retrieving confirmed transactions with unspent\n+   outputs has been deprecated. For now this will still work, but in the future\n+   it may change to only be able to retrieve information about transactions in\n+   the mempool or if `txindex` is enabled.\n+\n+ - A new RPC command `getmemoryinfo` has been added which will return information\n+   about the memory usage of Bitcoin Core. This was added in conjunction with\n+   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n+   for more information.\n+\n+ - A new RPC command `bumpfee` has been added which allows replacing an\n+   unconfirmed wallet transaction that signaled RBF (see the `-walletrbf`\n+   startup option above) with a new transaction that pays a higher fee, and\n+   should be more likely to get confirmed quickly.\n+\n+HTTP REST Changes\n+-----------------\n+\n+ - UTXO set query (`GET /rest/getutxos/<checkmempool>/<txid>-<n>/<txid>-<n>\n+   /.../<txid>-<n>.<bin|hex|json>`) responses were changed to return status \n+   code `HTTP_BAD_REQUEST` (400) instead of `HTTP_INTERNAL_SERVER_ERROR` (500)\n+   when requests contain invalid parameters.\n+\n+Minimum Fee Rate Policies\n+-------------------------\n+\n+Since the changes in 0.12 to automatically limit the size of the mempool and improve the performance of block creation in mining code it has not been important for relay nodes or miners to set `-minrelaytxfee`. With this release the following concepts that were tied to this option have been separated out:\n+- incremental relay fee used for calculating BIP 125 replacement and mempool limiting. (1000 satoshis/kB)\n+- calculation of threshold for a dust output. (effectively 3 * 1000 satoshis/kB)\n+- minimum fee rate of a package of transactions to be included in a block created by the mining code. If miners wish to set this minimum they can use the new `-blockmintxfee` option.  (defaults to 1000 satoshis/kB)\n+\n+The `-minrelaytxfee` option continues to exist but is recommended to be left unset.\n+\n+Fee Estimation Changes\n+----------------------\n+\n+- Since 0.13.2 fee estimation for a confirmation target of 1 block has been\n+  disabled. The fee slider will no longer be able to choose a target of 1 block.\n+  This is only a minor behavior change as there was often insufficient\n+  data for this target anyway. `estimatefee 1` will now always return -1 and\n+  `estimatesmartfee 1` will start searching at a target of 2.\n+\n+- The default target for fee estimation is changed to 6 blocks in both the GUI\n+  (previously 25) and for RPC calls (previously 2).\n+\n+Removal of Priority Estimation\n+------------------------------\n+\n+- Estimation of \"priority\" needed for a transaction to be included within a target\n+  number of blocks has been removed.  The RPC calls are deprecated and will either\n+  return -1 or 1e24 appropriately. The format for `fee_estimates.dat` has also\n+  changed to no longer save these priority estimates. It will automatically be\n+  converted to the new format which is not readable by prior versions of the\n+  software.\n+\n+- Support for \"priority\" (coin age) transaction sorting for mining is\n+  considered deprecated in Core and will be removed in the next major version.\n+  This is not to be confused with the `prioritisetransaction` RPC which will remain\n+  supported by Core for adding fee deltas to transactions.\n+\n+P2P connection management\n+--------------------------\n+\n+- Peers manually added through the `-addnode` option or `addnode` RPC now have their own\n+  limit of eight connections which does not compete with other inbound or outbound\n+  connection usage and is not subject to the limitation imposed by the `-maxconnections`\n+  option.\n+\n+- New connections to manually added peers are performed more quickly.\n+\n+Introduction of assumed-valid blocks\n+-------------------------------------\n+\n+- A significant portion of the initial block download time is spent verifying\n+  scripts/signatures.  Although the verification must pass to ensure the security\n+  of the system, no other result from this verification is needed: If the node\n+  knew the history of a given block were valid it could skip checking scripts\n+  for its ancestors.\n+\n+- A new configuration option 'assumevalid' is provided to express this knowledge\n+  to the software.  Unlike the 'checkpoints' in the past this setting does not\n+  force the use of a particular chain: chains that are consistent with it are\n+  processed quicker, but other chains are still accepted if they'd otherwise\n+  be chosen as best. Also unlike 'checkpoints' the user can configure which\n+  block history is assumed true, this means that even outdated software can\n+  sync more quickly if the setting is updated by the user.\n+\n+- Because the validity of a chain history is a simple objective fact it is much\n+  easier to review this setting.  As a result the software ships with a default\n+  value adjusted to match the current chain shortly before release.  The use\n+  of this default value can be disabled by setting -assumevalid=0\n+\n+Fundrawtransaction change address reuse\n+----------------------------------------\n+\n+- Before 0.14, `fundrawtransaction` was by default wallet stateless. In\n+  almost all cases `fundrawtransaction` does add a change-output to the\n+  outputs of the funded transaction. Before 0.14, the used keypool key was\n+  never marked as change-address key and directly returned to the keypool\n+  (leading to address reuse).  Before 0.14, calling `getnewaddress`\n+  directly after `fundrawtransaction` did generate the same address as\n+  the change-output address.\n+\n+- Since 0.14, fundrawtransaction does reserve the change-output-key from\n+  the keypool by default (optional by setting  `reserveChangeKey`, default =\n+  `true`)\n+\n+- Users should also consider using `getrawchangeaddress()` in conjunction\n+  with `fundrawtransaction`'s `changeAddress` option.\n+\n+Unused mempool memory used by coincache\n+----------------------------------------\n+\n+- Before 0.14, memory reserved for mempool (using the `-maxmempool` option)\n+  went unused during initial block download, or IBD. In 0.14, the UTXO DB cache\n+  (controlled with the `-dbcache` option) borrows memory from the mempool\n+  when there is extra memory available. This may result in an increase in\n+  memory usage during IBD for those previously relying on only the `-dbcache`\n+  option to limit memory during that time.\n+\n+0.14.0 Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, minor refactors and string updates. For convenience\n+in locating the code changes and accompanying discussion, both the pull request\n+and git merge commit are mentioned.\n+\n+### RPC and other APIs\n+- #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n+- #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n+- #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n+- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n+- #6996 `7f71a3c` Add preciousblock RPC (sipa)\n+- #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n+- #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n+- #8980 `0e22855` importmulti: Avoid using boost::variant::operator!=, which is only in newer boost versions (luke-jr)\n+- #9025 `4d8558a` Getrawtransaction should take a bool for verbose (jnewbery)\n+- #8811 `5754e03` Add support for JSON-RPC named arguments (laanwj)\n+- #9520 `2456a83` Deprecate non-txindex getrawtransaction and better warning (sipa)\n+- #9518 `a65ced1` Return height of last block pruned by pruneblockchain RPC (ryanofsky)\n+- #9222 `7cb024e` Add 'subtractFeeFromAmount' option to 'fundrawtransaction' (dooglus)\n+- #8456 `2ef52d3` Simplified `bumpfee` command (mrbandrews)\n+- #9516 `727a798` Bug-fix: listsinceblock: use fork point as reference for blocks in reorg'd chains (kallewoof)\n+- #9640 `7bfb770` Bumpfee: bugfixes for error handling and feerate calculation (sdaftuar)\n+- #9673 `8d6447e` Set correct metadata on bumpfee wallet transactions (ryanofsky)\n+- #9650 `40f7e27` Better handle invalid parameters to signrawtransaction (TheBlueMatt)\n+- #9682 `edc9e63` Require timestamps for importmulti keys (ryanofsky)\n+- #9108 `d8e8b06` Use importmulti timestamp when importing watch only keys (on top of #9682) (ryanofsky)\n+- #9756 `7a93af8` Return error when importmulti called with invalid address (ryanofsky)\n+- #9778 `ad168ef` Add two hour buffer to manual pruning (morcos)\n+- #9761 `9828f9a` Use 2 hour grace period for key timestamps in importmulti rescans (ryanofsky)\n+- #9474 `48d7e0d` Mark the minconf parameter to move as ignored (sipa)\n+- #9619 `861cb0c` Bugfix: RPC/Mining: GBT should return 1 MB sizelimit before segwit activates (luke-jr)\n+- #9773 `9072395` Return errors from importmulti if complete rescans are not successful (ryanofsky)\n+\n+### Block and transaction handling\n+- #8391 `37d83bb` Consensus: Remove ISM (NicolasDorier)\n+- #8365 `618c9dd` Treat high-sigop transactions as larger rather than rejecting them (sipa)\n+- #8814 `14b7b3f` wallet, policy: ParameterInteraction: Don't allow 0 fee (MarcoFalke)\n+- #8515 `9bdf526` A few mempool removal optimizations (sipa)\n+- #8448 `101c642` Store mempool and prioritization data to disk (sipa)\n+- #7730 `3c03dc2` Remove priority estimation (morcos)\n+- #9111 `fb15610` Remove unused variable `UNLIKELY_PCT` from fees.h (fanquake)\n+- #9133 `434e683` Unset fImporting for loading mempool (morcos)\n+- #9179 `b9a87b4` Set `DEFAULT_LIMITFREERELAY` = 0 kB/minute (MarcoFalke)\n+- #9239 `3fbf079` Disable fee estimates for 1-block target (morcos)\n+- #7562 `1eef038` Bump transaction version default to 2 (btcdrak)\n+- #9313,#9367 If we don't allow free txs, always send a fee filter (morcos)\n+- #9346 `b99a093` Batch construct batches (sipa)\n+- #9262 `5a70572` Prefer coins that have fewer ancestors, sanity check txn before ATMP (instagibbs)\n+- #9288 `1ce7ede` Fix a bug if the min fee is 0 for FeeFilterRounder (morcos)\n+- #9395 `0fc1c31` Add test for `-walletrejectlongchains` (morcos)\n+- #9107 `7dac1e5` Safer modify new coins (morcos)\n+- #9312 `a72f76c` Increase mempool expiry time to 2 weeks (morcos)\n+- #8610 `c252685` Share unused mempool memory with coincache (sipa)\n+- #9138 `f646275` Improve fee estimation (morcos)\n+- #9408 `46b249e` Allow shutdown during LoadMempool, dump only when necessary (jonasschnelli)\n+- #9310 `8c87f17` Assert FRESH validity in CCoinsViewCache::BatchWrite (ryanofsky)\n+- #7871 `e2e624d` Manual block file pruning (mrbandrews)\n+- #9507 `0595042` Fix use-after-free in CTxMemPool::removeConflicts() (sdaftuar)\n+- #9380 `dd98f04` Separate different uses of minimum fees (morcos)\n+- #9596 `71148b8` bugfix save feeDelta instead of priorityDelta in DumpMempool (morcos)\n+- #9371 `4a1dc35` Notify on removal (morcos)\n+- #9519 `9b4d267` Exclude RBF replacement txs from fee estimation (morcos)\n+- #8606 `e2a1a1e` Fix some locks (sipa)\n+- #8681 `6898213` Performance Regression Fix: Pre-Allocate txChanged vector (JeremyRubin)\n+- #8223 `744d265` c++11: Use std::unique\\_ptr for block creation (domob1812)\n+- #9125 `7490ae8` Make CBlock a vector of shared\\_ptr of CTransactions (sipa)\n+- #8930 `93566e0` Move orphan processing to ActivateBestChain (TheBlueMatt)\n+- #8580 `46904ee` Make CTransaction actually immutable (sipa)\n+- #9240 `a1dcf2e` Remove txConflicted (morcos)\n+- #8589 `e8cfe1e` Inline CTxInWitness inside CTxIn (sipa)\n+- #9349 `2db4cbc` Make CScript (and prevector) c++11 movable (sipa)\n+- #9252 `ce5c1f4` Release cs\\_main before calling ProcessNewBlock, or processing headers (cmpctblock handling) (sdaftuar)\n+- #9283 `869781c` A few more CTransactionRef optimizations (sipa)\n+- #9499 `9c9af5a` Use recent-rejects, orphans, and recently-replaced txn for compact-block-reconstruction (TheBlueMatt)\n+- #9813 `3972a8e` Read/write mempool.dat as a binary (paveljanik)\n+\n+### P2P protocol and network code\n+- #8128 `1030fa7` Turn net structures into dumb storage classes (theuni)\n+- #8282 `026c6ed` Feeler connections to increase online addrs in the tried table (EthanHeilman)\n+- #8462 `53f8f22` Move AdvertiseLocal debug output to net category (Mirobit)\n+- #8612 `84decb5` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n+- #8594 `5b2ea29` Do not add random inbound peers to addrman (gmaxwell)\n+- #8085 `6423116` Begin encapsulation (theuni)\n+- #8715 `881d7ea` only delete CConnman if it's been created (theuni)\n+- #8707 `f07424a` Fix maxuploadtarget setting (theuni)\n+- #8661 `d2e4655` Do not set an addr time penalty when a peer advertises itself (gmaxwell)\n+- #8822 `9bc6a6b` Consistent checksum handling (laanwj)\n+- #8936 `1230890` Report NodeId in misbehaving debug (rebroad)\n+- #8968 `3cf496d` Don't hold cs\\_main when calling ProcessNewBlock from a cmpctblock (TheBlueMatt)\n+- #9002 `e1d1f57` Make connect=0 disable automatic outbound connections (gmaxwell)\n+- #9050 `fcf61b8` Make a few values immutable, and use deterministic randomness for the localnonce (theuni)\n+- #8969 `3665483` Decouple peer-processing-logic from block-connection-logic (#2) (TheBlueMatt)\n+- #8708 `c8c572f` have CConnman handle message sending (theuni)\n+- #8709 `1e50d22` Allow filterclear messages for enabling TX relay only (rebroad)\n+- #9045 `9f554e0` Hash P2P messages as they are received instead of at process-time (TheBlueMatt)\n+- #9026 `dc6b940` Fix handling of invalid compact blocks (sdaftuar)\n+- #8996 `ab914a6` Network activity toggle (luke-jr)\n+- #9131 `62af164` fNetworkActive is not protected by a lock, use an atomic (jonasschnelli)\n+- #8872 `0c577f2` Remove block-request logic from INV message processing (TheBlueMatt)\n+- #8690 `791b58d` Do not fully sort all nodes for addr relay (sipa)\n+- #9128 `76fec09` Decouple CConnman and message serialization (theuni)\n+- #9226 `3bf06e9` Remove fNetworkNode and pnodeLocalHost (gmaxwell)\n+- #9352 `a7f7651` Attempt reconstruction from all compact block announcements (sdaftuar)\n+- #9319 `a55716a` Break addnode out from the outbound connection limits (gmaxwell)\n+- #9261 `2742568` Add unstored orphans with rejected parents to recentRejects (morcos)\n+- #9441 `8b66bf7` Massive speedup. Net locks overhaul (theuni)\n+- #9375 `3908fc4` Relay compact block messages prior to full block connection (TheBlueMatt)\n+- #9400 `8a445c5` Set peers as HB peers upon full block validation (instagibbs)\n+- #9561 `6696b46` Wake message handling thread when we receive a new block (TheBlueMatt)\n+- #9535 `82274c0` Split CNode::cs\\_vSend: message processing and message sending (TheBlueMatt)\n+- #9606 `3f9f962` Consistently use GetTimeMicros() for inactivity checks (sdaftuar)\n+- #9594 `fd70211` Send final alert message to older peers after connecting (gmaxwell)\n+- #9626 `36966a1` Clean up a few CConnman cs\\_vNodes/CNode things (TheBlueMatt)\n+- #9609 `4966917` Fix remaining net assertions (theuni)\n+- #9671 `7821db3` Fix super-unlikely race introduced in 236618061a445d2cb11e72 (TheBlueMatt)\n+- #9730 `33f3b21` Remove bitseed.xf2.org form the dns seed list (jonasschnelli)\n+- #9698 `2447c10` Fix socket close race (theuni)\n+- #9708 `a06ede9` Clean up all known races/platform-specific UB at the time PR was opened (TheBlueMatt)\n+- #9715 `b08656e` Disconnect peers which we do not receive VERACKs from within 60 sec (TheBlueMatt)\n+- #9720 `e87ce95` Fix banning and disallow sending messages before receiving verack (theuni)\n+- #9268 `09c4fd1` Fix rounding privacy leak introduced in #9260 (TheBlueMatt)\n+- #9075 `9346f84` Decouple peer-processing-logic from block-connection-logic (#3) (TheBlueMatt)\n+- #8688 `047ded0` Move static global randomizer seeds into CConnman (sipa)\n+- #9289 `d9ae1ce` net: drop boost::thread\\_group (theuni)\n+\n+### Validation\n+- #9014 `d04aeba` Fix block-connection performance regression (TheBlueMatt)\n+- #9299 `d52ce89` Remove no longer needed check for premature v2 txs (morcos)\n+- #9273 `b68685a` Remove unused `CDiskBlockPos*` argument from ProcessNewBlock (TheBlueMatt)\n+- #8895 `b83264d` Better SigCache Implementation (JeremyRubin)\n+- #9490 `e126d0c` Replace FindLatestBefore used by importmulti with FindEarliestAtLeast (gmaxwell)\n+- #9484 `812714f` Introduce assumevalid setting to skip validation presumed valid scripts (gmaxwell)\n+- #9511 `7884956` Don't overwrite validation state with corruption check (morcos)\n+- #9765 `1e92e04` Harden against mistakes handling invalid blocks (sdaftuar)\n+- #9779 `3c02b95` Update nMinimumChainWork and defaultAssumeValid (gmaxwell)\n+- #8524 `19b0f33` Precompute sighashes (sipa)\n+- #9791 `1825a03` Avoid VLA in hash.h (sipa)\n+\n+### Build system\n+- #8238 `6caf3ee` ZeroMQ 4.1.5 && ZMQ on Windows (fanquake)\n+- #8520 `b40e19c` Remove check for `openssl/ec.h` (laanwj)\n+- #8617 `de07fdc` Include instructions to extract Mac OS X SDK on Linux using 7zip and SleuthKit (luke-jr)\n+- #8566 `7b98895` Easy to use gitian building script (achow101)\n+- #8604 `f256843` build,doc: Update for 0.13.0+ and OpenBSD 5.9 (laanwj)\n+- #8640 `2663e51` depends: Remove Qt46 package (fanquake)\n+- #8645 `8ea4440` Remove unused Qt 4.6 patch (droark)\n+- #8608 `7e9ab95` Install manpages via make install, also add some autogenerated manpages (nomnombtc)\n+- #8781 `ca69ef4` contrib: delete `qt_translations.py` (MarcoFalke)\n+- #8783 `64dc645` share: remove qt/protobuf.pri (MarcoFalke)\n+- #8423 `3166dff` depends: expat 2.2.0, ccache 3.3.1, fontconfig 2.12.1 (fanquake)\n+- #8791 `b694b0d` travis: cross-mac: explicitly enable gui (MarcoFalke)\n+- #8820 `dc64141` depends: Fix Qt compilation with Xcode 8 (fanquake)\n+- #8730 `489a6ab` depends: Add libevent compatibility patch for windows (laanwj)\n+- #8819 `c841816` depends: Boost 1.61.0 (fanquake)\n+- #8826 `f560d95` Do not include `env_win.cc` on non-Windows systems (paveljanik)\n+- #8948 `e077e00` Reorder Windows gitian build order to match Linux (Michagogo)\n+- #8568 `078900d` new var `DIST_CONTRIB` adds useful things for packagers from contrib (nomnombtc)\n+- #9114 `21e6c6b` depends: Set `OSX_MIN_VERSION` to 10.8 (fanquake)\n+- #9140 `018a4eb` Bugfix: Correctly replace generated headers and fail cleanly (luke-jr)\n+- #9156 `a8b2a82` Add compile and link options echo to configure (jonasschnelli)\n+- #9393 `03d85f6` Include cuckoocache header in Makefile (MarcoFalke)\n+- #9420 `bebe369` Fix linker error when configured with --enable-lcov (droark)\n+- #9412 `53442af` Fix 'make deploy' for OSX (jonasschnelli)\n+- #9475 `7014506` Let autoconf detect presence of `EVP_MD_CTX_new` (luke-jr)\n+- #9513 `bbf193f` Fix qt distdir builds (theuni)\n+- #9471 `ca615e6` depends: libevent 2.1.7rc (fanquake)\n+- #9468 `f9117f2` depends: Dependency updates for 0.14.0 (fanquake)\n+- #9469 `01c4576` depends: Qt 5.7.1 (fanquake)\n+- #9574 `5ac6687` depends: Fix QT build on OSX (fanquake)\n+- #9646 `720b579` depends: Fix cross build for qt5.7 (theuni)\n+- #9705 `6a55515` Add options to override BDB cflags/libs (laanwj)\n+- #8249 `4e1567a` Enable (and check for) 64-bit ASLR on Windows (laanwj)\n+- #9758 `476cc47` Selectively suppress deprecation warnings (jonasschnelli)\n+- #9783 `6d61a2b` release: bump gitian descriptors for a new 0.14 package cache (theuni)\n+- #9789 `749fe95` build: add --enable-werror and warn on vla's (theuni)\n+- #9831 `99fd85c` build: force a c++ standard to be specified (theuni)\n+\n+### GUI\n+- #8192 `c503863` Remove URLs from About dialog translations (fanquake)\n+- #8540 `36404ae` Fix random segfault when closing \"Choose data directory\" dialog (laanwj)\n+- #8517 `2468292` Show wallet HD state in statusbar (jonasschnelli)\n+- #8463 `62a5a8a` Remove Priority from coincontrol dialog (MarcoFalke)\n+- #7579 `0606f95` Show network/chain errors in the GUI (jonasschnelli)\n+- #8583 `c19f8a4` Show XTHIN in GUI (rebroad)\n+- #7783 `4335d5a` RPC-Console: support nested commands and simple value queries (jonasschnelli)\n+- #8672 `6052d50` Show transaction size in transaction details window (Cocosoft)\n+- #8777 `fec6af7` WalletModel: Expose disablewallet (MarcoFalke)\n+- #8371 `24f72e9` Add out-of-sync modal info layer (jonasschnelli)\n+- #8885 `b2fec4e` Fix ban from qt console (theuni)\n+- #8821 `bf8e68a` sync-overlay: Don't block during reindex (MarcoFalke)\n+- #8906 `088d1f4` sync-overlay: Don't show progress twice (MarcoFalke)\n+- #8918 `47ace42` Add \"Copy URI\" to payment request context menu (luke-jr)\n+- #8925 `f628d9a` Display minimum ping in debug window (rebroad)\n+- #8774 `3e942a7` Qt refactors to better abstract wallet access (luke-jr)\n+- #8985 `7b1bfa3` Use pindexBestHeader instead of setBlockIndexCandidates for NotifyHeaderTip() (jonasschnelli)\n+- #8989 `d2143dc` Overhaul smart-fee slider, adjust default confirmation target (jonasschnelli)\n+- #9043 `273bde3` Return useful error message on ATMP failure (MarcoFalke)\n+- #9088 `4e57824` Reduce ambiguity of warning message (rebroad)\n+- #8874 `e984730` Multiple Selection for peer and ban tables (achow101)\n+- #9145 `924745d` Make network disabled icon 50% opaque (MarcoFalke)\n+- #9130 `ac489b2` Mention the new network toggle functionality in the tooltip (paveljanik)\n+- #9218 `4d955fc` Show progress overlay when clicking spinner icon (laanwj)\n+- #9280 `e15660c` Show ModalOverlay by pressing the progress bar, allow hiding (jonasschnelli)\n+- #9296 `fde7d99` Fix missed change to WalletTx structure (morcos)\n+- #9266 `2044e37` Bugfix: Qt/RPCConsole: Put column enum in the right places (luke-jr)\n+- #9255 `9851a84` layoutAboutToChange signal is called layoutAboutToBeChanged (laanwj)\n+- #9330 `47e6a19` Console: add security warning (jonasschnelli)\n+- #9329 `db45ad8` Console: allow empty arguments (jonasschnelli)\n+- #8877 `6dc4c43` Qt RPC console: history sensitive-data filter, and saving input line when browsing history (luke-jr)\n+- #9462 `649cf5f` Do not translate tilde character (MarcoFalke)\n+- #9457 `123ea73` Select more files for translation (MarcoFalke)\n+- #9413 `fd7d8c7` CoinControl: Allow non-wallet owned change addresses (jonasschnelli)\n+- #9461 `b250686` Improve progress display during headers-sync and peer-finding (jonasschnelli)\n+- #9588 `5086452` Use nPowTargetSpacing constant (MarcoFalke)\n+- #9637 `d9e4d1d` Fix transaction details output-index to reflect vout index (jonasschnelli)\n+- #9718 `36f9d3a` Qt/Intro: Various fixes (luke-jr)\n+- #9735 `ec66d06` devtools: Handle Qt formatting characters edge-case in update-translations.py (laanwj)\n+- #9755 `a441db0` Bugfix: Qt/Options: Restore persistent \"restart required\" notice (luke-jr)\n+- #9817 `7d75a5a` Fix segfault crash when shutdown the GUI in disablewallet mode (jonasschnelli)\n+\n+### Wallet\n+- #8152 `b9c1cd8` Remove `CWalletDB*` parameter from CWallet::AddToWallet (pstratem)\n+- #8432 `c7e05b3` Make CWallet::fFileBacked private (pstratem)\n+- #8445 `f916700` Move CWallet::setKeyPool to private section of CWallet (pstratem)\n+- #8564 `0168019` Remove unused code/conditions in ReadAtCursor (jonasschnelli)\n+- #8601 `37ac678` Add option to opt into full-RBF when sending funds (rebase, original by petertodd) (laanwj)\n+- #8494 `a5b20ed` init, wallet: ParameterInteraction() iff wallet enabled (MarcoFalke)\n+- #8760 `02ac669` init: Get rid of some `ENABLE_WALLET` (MarcoFalke)\n+- #8696 `a1f8d3e` Wallet: Remove last external reference to CWalletDB (pstratem)\n+- #8768 `886e8c9` init: Get rid of fDisableWallet (MarcoFalke)\n+- #8486 `ab0b411` Add high transaction fee warnings (MarcoFalke)\n+- #8851 `940748b` Move key derivation logic from GenerateNewKey to DeriveNewChildKey (pstratem)\n+- #8287 `e10af96` Set fLimitFree = true (MarcoFalke)\n+- #8928 `c587577` Fix init segfault where InitLoadWallet() calls ATMP before genesis (TheBlueMatt)\n+- #7551 `f2d7056` Add importmulti RPC call (pedrobranco)\n+- #9016 `0dcb888` Return useful error message on ATMP failure (instagibbs)\n+- #8753 `f8723d2` Locked memory manager (laanwj)\n+- #8828 `a4fd8df` Move CWalletDB::ReorderTransactions to CWallet (pstratem)\n+- #8977 `6a1343f` Refactor wallet/init interaction (Reaccept wtx, flush thread) (jonasschnelli)\n+- #9036 `ed0cc50` Change default confirm target from 2 to 6 (laanwj)\n+- #9071 `d1871da` Declare wallet.h functions inline (sipa)\n+- #9132 `f54e460` Make strWalletFile const (jonasschnelli)\n+- #9141 `5ea5e04` Remove unnecessary calls to CheckFinalTx (jonasschnelli)\n+- #9165 `c01f16a` SendMoney: use already-calculated balance (instagibbs)\n+- #9311 `a336d13` Flush wallet after abandontransaction (morcos)\n+- #8717 `38e4887` Addition of ImmatureCreditCached to MarkDirty() (spencerlievens)\n+- #9446 `510c0d9` SetMerkleBranch: remove unused code, remove cs\\_main lock requirement (jonasschnelli)\n+- #8776 `2a524b8` Wallet refactoring leading up to multiwallet (luke-jr)\n+- #9465 `a7d55c9` Do not perform ECDSA signing in the fee calculation inner loop (gmaxwell)\n+- #9404 `12e3112` Smarter coordination of change and fee in CreateTransaction (morcos)\n+- #9377 `fb75cd0` fundrawtransaction: Keep change-output keys by default, make it optional (jonasschnelli)\n+- #9578 `923dc44` Add missing mempool lock for CalculateMemPoolAncestors (TheBlueMatt)\n+- #9227 `02464da` Make nWalletDBUpdated atomic to avoid a potential race (pstratem)\n+- #9764 `f8af89a` Prevent \"overrides a member function but is not marked 'override'\" warnings (laanwj)\n+- #9771 `e43a585` Add missing cs\\_wallet lock that triggers new lock held assertion (ryanofsky)\n+- #9316 `3097ea4` Disable free transactions when relay is disabled (MarcoFalke)\n+- #9615 `d2c9e4d` Wallet incremental fee (morcos)\n+- #9760 `40c754c` Remove importmulti always-true check (ryanofsky)\n+\n+### Tests and QA\n+- #8270 `6e5e5ab` Tests: Use portable #! in python scripts (/usr/bin/env) (ChoHag)\n+- #8534,#8504 Remove java comparison tool (laanwj,MarcoFalke)\n+- #8482 `740cff5` Use single cache dir for chains (MarcoFalke)\n+- #8450 `21857d2` Replace `rpc_wallet_tests.cpp` with python RPC unit tests (pstratem)\n+- #8671 `ddc3080` Minimal fix to slow prevector tests as stopgap measure (JeremyRubin)\n+- #8680 `666eaf0` Address Travis spurious failures (theuni)\n+- #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n+- #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n+- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n+- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n+- #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n+- #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n+- #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n+- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n+- #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n+- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n+- #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n+- #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n+- #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n+- #9049 `71bc39e` Remove duplicatable duplicate-input check from CheckTransaction (TheBlueMatt)\n+- #9136 `b422913` sync\\_blocks cleanup (ryanofsky)\n+- #9151 `4333b1c` proxy\\_test: Calculate hardcoded port numbers (MarcoFalke)\n+- #9206 `e662d28` Make test constant consistent with consensus.h (btcdrak)\n+- #9139 `0de7fd3` Change sync\\_blocks to pick smarter maxheight (on top of #9196) (ryanofsky)\n+- #9100 `97ec6e5` tx\\_valid: re-order inputs to how they are encoded (dcousens)\n+- #9202 `e56cf67` bench: Add support for measuring CPU cycles (laanwj)\n+- #9223 `5412c08` unification of Bloom filter representation (s-matthew-english)\n+- #9257 `d7ba4a2` Dump debug logs on travis failures (sdaftuar)\n+- #9221 `9e4bb31` Get rid of duplicate code (MarcoFalke)\n+- #9274 `919db03` Use cached utxo set to fix performance regression (MarcoFalke)\n+- #9276 `ea33f19` Some minor testing cleanups (morcos)\n+- #9291 `8601784` Remove mapOrphanTransactionsByPrev from DoS\\_tests (sipa)\n+- #9309 `76fcd9d` Wallet needs to stay unlocked for whole test (morcos)\n+- #9172 `5bc209c` Resurrect pstratem's \"Simple fuzzing framework\" (laanwj)\n+- #9331 `c6fd923` Add test for rescan feature of wallet key import RPCs (ryanofsky)\n+- #9354 `b416095` Make fuzzer actually test CTxOutCompressor (sipa)\n+- #9390,#9416 travis: make distdir (MarcoFalke)\n+- #9308 `0698639` test: Add CCoinsViewCache Access/Modify/Write tests (ryanofsky)\n+- #9406 `0f921e6` Re-enable a blank v1 Tx JSON test (droark)\n+- #9435 `dbc8a8c` Removed unused variable in test, fixing warning (ryanofsky)\n+- #9436 `dce853e` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n+- #9525 `02e5308` test: Include tx data in `EXTRA_DIST` (MarcoFalke)\n+- #9498 `054d664` Basic CCheckQueue Benchmarks (JeremyRubin)\n+- #9554 `0b96abc` test: Avoid potential NULL pointer dereference in `addrman_tests.cpp` (practicalswift)\n+- #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n+- #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n+- #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n+- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n+- #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n+- #9707 `b860915` Fix RPC failure testing (jnewbery)\n+- #9269 `43e8150` Align struct COrphan definition (sipa)\n+- #9820 `599c69a` Fix pruning test broken by 2 hour manual prune window (ryanofsky)\n+- #9824 `260c71c` qa: Check return code when stopping nodes (MarcoFalke)\n+- #9875 `50953c2` tests: Fix dangling pwalletMain pointer in wallet tests (laanwj)\n+- #9839 `eddaa6b` [qa] Make import-rescan.py watchonly check reliable (ryanofsky)\n+\n+### Documentation\n+- #8332 `806b9e7` Clarify witness branches in transaction.h serialization (dcousens)\n+- #8935 `0306978` Documentation: Building on Windows with WSL (pooleja)\n+- #9144 `c98f6b3` Correct waitforblockheight example help text (fanquake)\n+- #9407 `041331e` Added missing colons in when running help command (anditto)\n+- #9378 `870cd2b` Add documentation for CWalletTx::fFromMe member (ryanofsky)\n+- #9297 `0b73807` Various RPC help outputs updated (Mirobit)\n+- #9613 `07421cf` Clarify getbalance help string to explain interaction with bumpfee (ryanofsky)\n+- #9663 `e30d928` Clarify listunspent amount description (instagibbs)\n+- #9396 `d65a13b` Updated listsinceblock rpc documentation (accraze)\n+- #8747 `ce43630` rpc: Fix transaction size comments and RPC help text (jnewbery)\n+- #8058 `bbd9740` Doc: Add issue template (AmirAbrams)\n+- #8567 `85d4e21` Add default port numbers to REST doc (djpnewton)\n+- #8624 `89de153` build: Mention curl (MarcoFalke)\n+- #8786 `9da7366` Mandatory copyright agreement (achow101)\n+- #8823 `7b05af6` Add privacy recommendation when running hidden service (laanwj)\n+- #9433 `caa2f10` Update the Windows build notes (droark)\n+- #8879 `f928050` Rework docs (MarcoFalke)\n+- #8887 `61d191f` Improve GitHub issue template (fanquake)\n+- #8787 `279bbad` Add missing autogen to example builds (AmirAbrams)\n+- #8892 `d270c30` Add build instructions for FreeBSD (laanwj)\n+- #8890 `c71a654` Update Doxygen configuration file (fanquake)\n+- #9207 `fa1f944` Move comments above bash command in build-unix (AmirAbrams)\n+- #9219 `c4522e7` Improve windows build instructions using Linux subsystem (laanwj)\n+- #8954 `932d02a` contrib: Add README for pgp keys (MarcoFalke)\n+- #9093 `2fae5b9` release-process: Mention GitHub release and archived release notes (MarcoFalke)\n+- #8743 `bae178f` Remove old manpages from contrib/debian in favour of doc/man (fanquake)\n+- #9550 `4105cb6` Trim down the XP notice and say more about what we support (gmaxwell)\n+- #9246 `9851498` Developer docs about existing subtrees (gmaxwell)\n+- #9401 `c2ea1e6` Make rpcauth help message clearer, add example in example .conf (instagibbs)\n+- #9022,#9033 Document dropping OS X 10.7 support (fanquake, MarcoFalke)\n+- #8771 `bc9e3ab` contributing: Mention not to open several pulls (luke-jr)\n+- #8852 `7b784cc` Mention Gitian building script in doc (Laudaa) (laanwj)\n+- #8915 `03dd707` Add copyright/patent issues to possible NACK reasons (petertodd)\n+- #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n+- #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n+- #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n+- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n+\n+### Miscellaneous\n+- #8274 `7a2d402` util: Update tinyformat (laanwj)\n+- #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n+- #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n+- #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n+- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n+- #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n+- #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n+- #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n+- #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n+- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n+- #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n+- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n+- #9303 `72bf1b3` Update comments in ctaes (sipa)\n+- #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n+- #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n+- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n+- #9531 `23281a4` Release notes for estimation changes  (morcos)\n+- #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n+- #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n+- #9542 `e9e7993` Docs: Update CONTRIBUTING.md (jnewbery)\n+- #9649 `53ab12d` Remove unused clang format dev script (MarcoFalke)\n+- #9625 `77bd8c4` Increase minimum debug.log size to 10MB after shrink (morcos)\n+- #9070 `7b22e50` Lockedpool fixes (kazcw)\n+- #8779 `7008e28` contrib: Delete spendfrom (MarcoFalke)\n+- #9587,#8793,#9496,#8191,#8109,#8655,#8472,#8677,#8981,#9124  Avoid shadowing of variables (paveljanik)\n+- #9063 `f2a6e82` Use deprecated `MAP_ANON` if `MAP_ANONYMOUS` is not defined (paveljanik)\n+- #9060 `1107653` Fix bloom filter init to isEmpty = true (robmcl4)\n+- #8613 `613bda4` LevelDB 1.19 (sipa)\n+- #9225 `5488514` Fix some benign races (TheBlueMatt)\n+- #8736 `5fa7b07` base58: Improve DecodeBase58 performance (wjx)\n+- #9039 `e81df49` Various serialization simplifcations and optimizations (sipa)\n+- #9010 `a143b88` Split up AppInit2 into multiple phases, daemonize after datadir lock errors (laanwj)\n+- #9230 `c79e52a` Fix some benign races in timestamp logging (TheBlueMatt)\n+- #9183,#9260 Mrs Peacock in The Library with The Candlestick (killed main.{h,cpp}) (TheBlueMatt)\n+- #9236 `7f72568` Fix races for strMiscWarning and `fLargeWork*Found`, make QT runawayException use GetWarnings (gmaxwell)\n+- #9243 `7aa7004` Clean up mapArgs and mapMultiArgs Usage (TheBlueMatt)\n+- #9387 `cfe41d7` RAII of libevent stuff using unique ptrs with deleters (kallewoof)\n+- #9472 `fac0f30` Disentangle progress estimation from checkpoints and update it (sipa)\n+- #9512 `6012967` Fix various things -fsanitize complains about (sipa)\n+- #9373,#9580 Various linearization script issues (droark)\n+- #9674 `dd163f5` Lock debugging: Always enforce strict lock ordering (try or not) (TheBlueMatt)\n+- #8453,#9334  Update to latest libsecp256k1 (laanwj,sipa)\n+- #9656 `7c93952` Check verify-commits on pushes to master (TheBlueMatt)\n+- #9679 `a351162` Access WorkQueue::running only within the cs lock (TheBlueMatt)\n+- #9777 `8dee822` Handle unusual maxsigcachesize gracefully (jnewbery)\n+- #8863,#8807 univalue: Pull subtree (MarcoFalke)\n+- #9798 `e22c067` Fix Issue #9775 (Check returned value of fopen) (kirit93)\n+- #9856 `69832aa` Terminate immediately when allocation fails (theuni)\n+\n+Credits\n+=======\n+\n+Thanks to everyone who directly contributed to this release:\n+\n+- accraze\n+- adlawren\n+- Alex Morcos\n+- Alexey Vesnin\n+- Amir Abrams\n+- Anders \u00d8yvind Urke-S\u00e6tre\n+- Anditto Heristyo\n+- Andrew Chow\n+- anduck\n+- Anthony Towns\n+- Brian Deery\n+- BtcDrak\n+- Chris Moore\n+- Chris Stewart\n+- Christian Barcenas\n+- Christian Decker\n+- Cory Fields\n+- crowning-\n+- CryptAxe\n+- CryptoVote\n+- Dagur Valberg Johannsson\n+- Daniel Cousens\n+- Daniel Kraft\n+- Derek Miller\n+- djpnewton\n+- Don Patterson\n+- Doug\n+- Douglas Roark\n+- Ethan Heilman\n+- fsb4000\n+- Gaurav Rana\n+- Geoffrey Tsui\n+- Greg Walker\n+- Gregory Maxwell\n+- Gregory Sanders\n+- Hampus Sj\u00f6berg\n+- isle2983\n+- Ivo van der Sangen\n+- James White\n+- Jameson Lopp\n+- Jeremy Rubin\n+- Jiaxing Wang\n+- jnewbery\n+- John Newbery\n+- Johnson Lau\n+- Jon Lund Steffensen\n+- Jonas Schnelli\n+- jonnynewbs\n+- Jorge Tim\u00f3n\n+- Justin Camarena\n+- Karl-Johan Alm\n+- Kaz Wesley\n+- kirit93\n+- Koki Takahashi\n+- Lauda\n+- leijurv\n+- lizhi\n+- Luke Dashjr\n+- maiiz\n+- MarcoFalke\n+- Marijn Stollenga\n+- Marty Jones\n+- Masahiko Hyuga\n+- Matt Corallo\n+- Matthew King\n+- matthias\n+- Micha\n+- Michael Ford\n+- Michael Rotarius\n+- Mitchell Cash\n+- mrbandrews\n+- mruddy\n+- Nicolas DORIER\n+- nomnombtc\n+- Patrick Strateman\n+- Pavel Jan\u00edk\n+- Pedro Branco\n+- Peter Todd\n+- Pieter Wuille\n+- poole\\_party\n+- practicalswift\n+- R E Broadley\n+- randy-waterhouse\n+- Richard Kiss\n+- Robert McLaughlin\n+- rodasmith\n+- Russell Yanofsky\n+- S. Matthew English\n+- Sev\n+- Spencer Lievens\n+- Stanislas Marion\n+- Steven\n+- Suhas Daftuar\n+- Thomas Snider\n+- UdjinM6\n+- unsystemizer\n+- whythat\n+- Will Binns\n+- Wladimir J. van der Laan\n+- wodry\n+- Zak Wilcox\n+\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/)."
      },
      {
        "sha": "5a99b726f1281424b1f1fda842137de2e36856b8",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 36,
        "deletions": 19,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -10,7 +10,7 @@ Before every release candidate:\n Before every minor and major release:\n \n * Update [bips.md](bips.md) to account for changes since the last release.\n-* Update version in sources (see below)\n+* Update version in `configure.ac` (don't forget to set `CLIENT_VERSION_IS_RELEASE` to `true`)\n * Write release notes (see below)\n * Update `src/chainparams.cpp` nMinimumChainWork with information from the getblockchaininfo rpc.\n * Update `src/chainparams.cpp` defaultAssumeValid  with information from the getblockhash rpc.\n@@ -23,6 +23,8 @@ Before every major release:\n \n * Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n * Update [`BLOCK_CHAIN_SIZE`](/src/qt/intro.cpp) to the current size plus some overhead.\n+* Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate.\n+* Update version of `contrib/gitian-descriptors/*.yml`: usually one'd want to do this on master after branching off the release - but be sure to at least do it before a new major release\n \n ### First time / New builders\n \n@@ -36,23 +38,7 @@ Check out the source code in the following directory hierarchy.\n     git clone https://github.com/devrandom/gitian-builder.git\n     git clone https://github.com/bitcoin/bitcoin.git\n \n-### Bitcoin maintainers/release engineers, update version in sources\n-\n-Update the following:\n-\n-- `configure.ac`:\n-    - `_CLIENT_VERSION_MAJOR`\n-    - `_CLIENT_VERSION_MINOR`\n-    - `_CLIENT_VERSION_REVISION`\n-    - Don't forget to set `_CLIENT_VERSION_IS_RELEASE` to `true`\n-- `src/clientversion.h`: (this mirrors `configure.ac` - see issue #3539)\n-    - `CLIENT_VERSION_MAJOR`\n-    - `CLIENT_VERSION_MINOR`\n-    - `CLIENT_VERSION_REVISION`\n-    - Don't forget to set `CLIENT_VERSION_IS_RELEASE` to `true`\n-- `doc/README.md` and `doc/README_windows.txt`\n-- `doc/Doxyfile`: `PROJECT_NUMBER` contains the full version\n-- `contrib/gitian-descriptors/*.yml`: usually one'd want to do this on master after branching off the release - but be sure to at least do it before a new major release\n+### Bitcoin maintainers/release engineers, suggestion for writing release notes\n \n Write release notes. git shortlog helps a lot, for example:\n \n@@ -175,7 +161,38 @@ Commit your signature to gitian.sigs:\n     git push  # Assuming you can push to the gitian.sigs tree\n     popd\n \n-Wait for Windows/OS X detached signatures:\n+Codesigner only: Create Windows/OS X detached signatures:\n+- Only one person handles codesigning. Everyone else should skip to the next step.\n+- Only once the Windows/OS X builds each have 3 matching signatures may they be signed with their respective release keys.\n+\n+Codesigner only: Sign the osx binary:\n+\n+    transfer bitcoin-osx-unsigned.tar.gz to osx for signing\n+    tar xf bitcoin-osx-unsigned.tar.gz\n+    ./detached-sig-create.sh -s \"Key ID\"\n+    Enter the keychain password and authorize the signature\n+    Move signature-osx.tar.gz back to the gitian host\n+\n+Codesigner only: Sign the windows binaries:\n+\n+    tar xf bitcoin-win-unsigned.tar.gz\n+    ./detached-sig-create.sh -key /path/to/codesign.key\n+    Enter the passphrase for the key when prompted\n+    signature-win.tar.gz will be created\n+\n+Codesigner only: Commit the detached codesign payloads:\n+\n+    cd ~/bitcoin-detached-sigs\n+    checkout the appropriate branch for this release series\n+    rm -rf *\n+    tar xf signature-osx.tar.gz\n+    tar xf signature-win.tar.gz\n+    git add -a\n+    git commit -m \"point to ${VERSION}\"\n+    git tag -s v${VERSION} HEAD\n+    git push the current branch and new tag\n+\n+Non-codesigners: wait for Windows/OS X detached signatures:\n \n - Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n - Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries."
      },
      {
        "sha": "225207cc1cebffabe86ed043acf2b7d4272ab216",
        "filename": "qa/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 87,
        "changes": 87,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/README.md?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,87 +0,0 @@\n-The [pull-tester](/qa/pull-tester/) folder contains a script to call\n-multiple tests from the [rpc-tests](/qa/rpc-tests/) folder.\n-\n-Every pull request to the bitcoin repository is built and run through\n-the regression test suite. You can also run all or only individual\n-tests locally.\n-\n-Test dependencies\n-=================\n-Before running the tests, the following must be installed.\n-\n-Unix\n-----\n-The python3-zmq library is required. On Ubuntu or Debian it can be installed via:\n-```\n-sudo apt-get install python3-zmq\n-```\n-\n-OS X\n-------\n-```\n-pip3 install pyzmq\n-```\n-\n-Running tests\n-=============\n-\n-You can run any single test by calling\n-\n-    qa/pull-tester/rpc-tests.py <testname>\n-\n-Or you can run any combination of tests by calling\n-\n-    qa/pull-tester/rpc-tests.py <testname1> <testname2> <testname3> ...\n-\n-Run the regression test suite with\n-\n-    qa/pull-tester/rpc-tests.py\n-\n-Run all possible tests with\n-\n-    qa/pull-tester/rpc-tests.py -extended\n-\n-By default, tests will be run in parallel. To specify how many jobs to run,\n-append `-parallel=n` (default n=4).\n-\n-If you want to create a basic coverage report for the rpc test suite, append `--coverage`.\n-\n-Possible options, which apply to each individual test run:\n-\n-```\n-  -h, --help            show this help message and exit\n-  --nocleanup           Leave bitcoinds and test.* datadir on exit or error\n-  --noshutdown          Don't stop bitcoinds after the test execution\n-  --srcdir=SRCDIR       Source directory containing bitcoind/bitcoin-cli\n-                        (default: ../../src)\n-  --tmpdir=TMPDIR       Root directory for datadirs\n-  --tracerpc            Print out all RPC calls as they are made\n-  --coveragedir=COVERAGEDIR\n-                        Write tested RPC commands into this directory\n-```\n-\n-If you set the environment variable `PYTHON_DEBUG=1` you will get some debug\n-output (example: `PYTHON_DEBUG=1 qa/pull-tester/rpc-tests.py wallet`).\n-\n-A 200-block -regtest blockchain and wallets for four nodes\n-is created the first time a regression test is run and\n-is stored in the cache/ directory. Each node has 25 mature\n-blocks (25*50=1250 BTC) in its wallet.\n-\n-After the first run, the cache/ blockchain and wallets are\n-copied into a temporary directory and used as the initial\n-test state.\n-\n-If you get into a bad state, you should be able\n-to recover with:\n-\n-```bash\n-rm -rf cache\n-killall bitcoind\n-```\n-\n-Writing tests\n-=============\n-You are encouraged to write tests for new or existing features.\n-Further information about the test framework and individual rpc\n-tests is found in [qa/rpc-tests](/qa/rpc-tests)."
      },
      {
        "sha": "20ab0fdd1de300632402b430b82b98626b15c3dc",
        "filename": "qa/pull-tester/rpc-tests.py",
        "status": "removed",
        "additions": 0,
        "deletions": 372,
        "changes": 372,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/pull-tester/rpc-tests.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/pull-tester/rpc-tests.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,372 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-\"\"\"\n-Run Regression Test Suite\n-\n-This module calls down into individual test cases via subprocess. It will\n-forward all unrecognized arguments onto the individual test scripts, other\n-than:\n-\n-    - `-extended`: run the \"extended\" test suite in addition to the basic one.\n-    - `-win`: signal that this is running in a Windows environment, and we\n-      should run the tests.\n-    - `--coverage`: this generates a basic coverage report for the RPC\n-      interface.\n-\n-For a description of arguments recognized by test scripts, see\n-`qa/pull-tester/test_framework/test_framework.py:BitcoinTestFramework.main`.\n-\n-\"\"\"\n-\n-import os\n-import time\n-import shutil\n-import sys\n-import subprocess\n-import tempfile\n-import re\n-\n-sys.path.append(\"qa/pull-tester/\")\n-from tests_config import *\n-\n-BOLD = (\"\",\"\")\n-if os.name == 'posix':\n-    # primitive formatting on supported\n-    # terminal via ANSI escape sequences:\n-    BOLD = ('\\033[0m', '\\033[1m')\n-\n-RPC_TESTS_DIR = SRCDIR + '/qa/rpc-tests/'\n-\n-#If imported values are not defined then set to zero (or disabled)\n-if 'ENABLE_WALLET' not in vars():\n-    ENABLE_WALLET=0\n-if 'ENABLE_BITCOIND' not in vars():\n-    ENABLE_BITCOIND=0\n-if 'ENABLE_UTILS' not in vars():\n-    ENABLE_UTILS=0\n-if 'ENABLE_ZMQ' not in vars():\n-    ENABLE_ZMQ=0\n-\n-ENABLE_COVERAGE=0\n-\n-#Create a set to store arguments and create the passon string\n-opts = set()\n-passon_args = []\n-PASSON_REGEX = re.compile(\"^--\")\n-PARALLEL_REGEX = re.compile('^-parallel=')\n-\n-print_help = False\n-run_parallel = 4\n-\n-for arg in sys.argv[1:]:\n-    if arg == \"--help\" or arg == \"-h\" or arg == \"-?\":\n-        print_help = True\n-        break\n-    if arg == '--coverage':\n-        ENABLE_COVERAGE = 1\n-    elif PASSON_REGEX.match(arg):\n-        passon_args.append(arg)\n-    elif PARALLEL_REGEX.match(arg):\n-        run_parallel = int(arg.split(sep='=', maxsplit=1)[1])\n-    else:\n-        opts.add(arg)\n-\n-#Set env vars\n-if \"BITCOIND\" not in os.environ:\n-    os.environ[\"BITCOIND\"] = BUILDDIR + '/src/bitcoind' + EXEEXT\n-\n-if EXEEXT == \".exe\" and \"-win\" not in opts:\n-    # https://github.com/bitcoin/bitcoin/commit/d52802551752140cf41f0d9a225a43e84404d3e9\n-    # https://github.com/bitcoin/bitcoin/pull/5677#issuecomment-136646964\n-    print(\"Win tests currently disabled by default.  Use -win option to enable\")\n-    sys.exit(0)\n-\n-if not (ENABLE_WALLET == 1 and ENABLE_UTILS == 1 and ENABLE_BITCOIND == 1):\n-    print(\"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\")\n-    sys.exit(0)\n-\n-# python3-zmq may not be installed. Handle this gracefully and with some helpful info\n-if ENABLE_ZMQ:\n-    try:\n-        import zmq\n-    except ImportError:\n-        print(\"ERROR: \\\"import zmq\\\" failed. Set ENABLE_ZMQ=0 or \"\n-              \"to run zmq tests, see dependency info in /qa/README.md.\")\n-        # ENABLE_ZMQ=0\n-        raise\n-\n-testScripts = [\n-    # longest test should go first, to favor running tests in parallel\n-    'wallet-hd.py',\n-    'walletbackup.py',\n-    # vv Tests less than 5m vv\n-    'p2p-fullblocktest.py',\n-    'fundrawtransaction.py',\n-    'p2p-compactblocks.py',\n-    'segwit.py',\n-    # vv Tests less than 2m vv\n-    'wallet.py',\n-    'wallet-accounts.py',\n-    'p2p-segwit.py',\n-    'wallet-dump.py',\n-    'listtransactions.py',\n-    # vv Tests less than 60s vv\n-    'sendheaders.py',\n-    'zapwallettxes.py',\n-    'importmulti.py',\n-    'mempool_limit.py',\n-    'merkle_blocks.py',\n-    'receivedby.py',\n-    'abandonconflict.py',\n-    'bip68-112-113-p2p.py',\n-    'rawtransactions.py',\n-    'reindex.py',\n-    # vv Tests less than 30s vv\n-    'mempool_resurrect_test.py',\n-    'txn_doublespend.py --mineblock',\n-    'txn_clone.py',\n-    'getchaintips.py',\n-    'rest.py',\n-    'mempool_spendcoinbase.py',\n-    'mempool_reorg.py',\n-    'httpbasics.py',\n-    'multi_rpc.py',\n-    'proxy_test.py',\n-    'signrawtransactions.py',\n-    'nodehandling.py',\n-    'decodescript.py',\n-    'blockchain.py',\n-    'disablewallet.py',\n-    'keypool.py',\n-    'p2p-mempool.py',\n-    'prioritise_transaction.py',\n-    'invalidblockrequest.py',\n-    'invalidtxrequest.py',\n-    'p2p-versionbits-warning.py',\n-    'preciousblock.py',\n-    'importprunedfunds.py',\n-    'signmessages.py',\n-    'nulldummy.py',\n-    'import-rescan.py',\n-    'bumpfee.py',\n-    'rpcnamedargs.py',\n-    'listsinceblock.py',\n-    'p2p-leaktests.py',\n-]\n-if ENABLE_ZMQ:\n-    testScripts.append('zmq_test.py')\n-\n-testScriptsExt = [\n-    'pruning.py',\n-    # vv Tests less than 20m vv\n-    'smartfees.py',\n-    # vv Tests less than 5m vv\n-    'maxuploadtarget.py',\n-    'mempool_packages.py',\n-    # vv Tests less than 2m vv\n-    'bip68-sequence.py',\n-    'getblocktemplate_longpoll.py',\n-    'p2p-timeouts.py',\n-    # vv Tests less than 60s vv\n-    'bip9-softforks.py',\n-    'p2p-feefilter.py',\n-    'rpcbind_test.py',\n-    # vv Tests less than 30s vv\n-    'bip65-cltv.py',\n-    'bip65-cltv-p2p.py',\n-    'bipdersig-p2p.py',\n-    'bipdersig.py',\n-    'getblocktemplate_proposals.py',\n-    'txn_doublespend.py',\n-    'txn_clone.py --mineblock',\n-    'forknotify.py',\n-    'invalidateblock.py',\n-    'maxblocksinflight.py',\n-    'p2p-acceptblock.py',\n-    'replace-by-fee.py',\n-]\n-\n-\n-def runtests():\n-    test_list = []\n-    if '-extended' in opts:\n-        test_list = testScripts + testScriptsExt\n-    elif len(opts) == 0 or (len(opts) == 1 and \"-win\" in opts):\n-        test_list = testScripts\n-    else:\n-        for t in testScripts + testScriptsExt:\n-            if t in opts or re.sub(\".py$\", \"\", t) in opts:\n-                test_list.append(t)\n-\n-    if print_help:\n-        # Only print help of the first script and exit\n-        subprocess.check_call((RPC_TESTS_DIR + test_list[0]).split() + ['-h'])\n-        sys.exit(0)\n-\n-    coverage = None\n-\n-    if ENABLE_COVERAGE:\n-        coverage = RPCCoverage()\n-        print(\"Initializing coverage directory at %s\\n\" % coverage.dir)\n-    flags = [\"--srcdir=%s/src\" % BUILDDIR] + passon_args\n-    flags.append(\"--cachedir=%s/qa/cache\" % BUILDDIR)\n-    if coverage:\n-        flags.append(coverage.flag)\n-\n-    if len(test_list) > 1 and run_parallel > 1:\n-        # Populate cache\n-        subprocess.check_output([RPC_TESTS_DIR + 'create_cache.py'] + flags)\n-\n-    #Run Tests\n-    max_len_name = len(max(test_list, key=len))\n-    time_sum = 0\n-    time0 = time.time()\n-    job_queue = RPCTestHandler(run_parallel, test_list, flags)\n-    results = BOLD[1] + \"%s | %s | %s\\n\\n\" % (\"TEST\".ljust(max_len_name), \"PASSED\", \"DURATION\") + BOLD[0]\n-    all_passed = True\n-    for _ in range(len(test_list)):\n-        (name, stdout, stderr, passed, duration) = job_queue.get_next()\n-        all_passed = all_passed and passed\n-        time_sum += duration\n-\n-        print('\\n' + BOLD[1] + name + BOLD[0] + \":\")\n-        print('' if passed else stdout + '\\n', end='')\n-        print('' if stderr == '' else 'stderr:\\n' + stderr + '\\n', end='')\n-        results += \"%s | %s | %s s\\n\" % (name.ljust(max_len_name), str(passed).ljust(6), duration)\n-        print(\"Pass: %s%s%s, Duration: %s s\\n\" % (BOLD[1], passed, BOLD[0], duration))\n-    results += BOLD[1] + \"\\n%s | %s | %s s (accumulated)\" % (\"ALL\".ljust(max_len_name), str(all_passed).ljust(6), time_sum) + BOLD[0]\n-    print(results)\n-    print(\"\\nRuntime: %s s\" % (int(time.time() - time0)))\n-\n-    if coverage:\n-        coverage.report_rpc_coverage()\n-\n-        print(\"Cleaning up coverage data\")\n-        coverage.cleanup()\n-\n-    sys.exit(not all_passed)\n-\n-\n-class RPCTestHandler:\n-    \"\"\"\n-    Trigger the testscrips passed in via the list.\n-    \"\"\"\n-\n-    def __init__(self, num_tests_parallel, test_list=None, flags=None):\n-        assert(num_tests_parallel >= 1)\n-        self.num_jobs = num_tests_parallel\n-        self.test_list = test_list\n-        self.flags = flags\n-        self.num_running = 0\n-        # In case there is a graveyard of zombie bitcoinds, we can apply a\n-        # pseudorandom offset to hopefully jump over them.\n-        # (625 is PORT_RANGE/MAX_NODES)\n-        self.portseed_offset = int(time.time() * 1000) % 625\n-        self.jobs = []\n-\n-    def get_next(self):\n-        while self.num_running < self.num_jobs and self.test_list:\n-            # Add tests\n-            self.num_running += 1\n-            t = self.test_list.pop(0)\n-            port_seed = [\"--portseed={}\".format(len(self.test_list) + self.portseed_offset)]\n-            log_stdout = tempfile.SpooledTemporaryFile(max_size=2**16)\n-            log_stderr = tempfile.SpooledTemporaryFile(max_size=2**16)\n-            self.jobs.append((t,\n-                              time.time(),\n-                              subprocess.Popen((RPC_TESTS_DIR + t).split() + self.flags + port_seed,\n-                                               universal_newlines=True,\n-                                               stdout=log_stdout,\n-                                               stderr=log_stderr),\n-                              log_stdout,\n-                              log_stderr))\n-        if not self.jobs:\n-            raise IndexError('pop from empty list')\n-        while True:\n-            # Return first proc that finishes\n-            time.sleep(.5)\n-            for j in self.jobs:\n-                (name, time0, proc, log_out, log_err) = j\n-                if proc.poll() is not None:\n-                    log_out.seek(0), log_err.seek(0)\n-                    [stdout, stderr] = [l.read().decode('utf-8') for l in (log_out, log_err)]\n-                    log_out.close(), log_err.close()\n-                    passed = stderr == \"\" and proc.returncode == 0\n-                    self.num_running -= 1\n-                    self.jobs.remove(j)\n-                    return name, stdout, stderr, passed, int(time.time() - time0)\n-            print('.', end='', flush=True)\n-\n-\n-class RPCCoverage(object):\n-    \"\"\"\n-    Coverage reporting utilities for pull-tester.\n-\n-    Coverage calculation works by having each test script subprocess write\n-    coverage files into a particular directory. These files contain the RPC\n-    commands invoked during testing, as well as a complete listing of RPC\n-    commands per `bitcoin-cli help` (`rpc_interface.txt`).\n-\n-    After all tests complete, the commands run are combined and diff'd against\n-    the complete list to calculate uncovered RPC commands.\n-\n-    See also: qa/rpc-tests/test_framework/coverage.py\n-\n-    \"\"\"\n-    def __init__(self):\n-        self.dir = tempfile.mkdtemp(prefix=\"coverage\")\n-        self.flag = '--coveragedir=%s' % self.dir\n-\n-    def report_rpc_coverage(self):\n-        \"\"\"\n-        Print out RPC commands that were unexercised by tests.\n-\n-        \"\"\"\n-        uncovered = self._get_uncovered_rpc_commands()\n-\n-        if uncovered:\n-            print(\"Uncovered RPC commands:\")\n-            print(\"\".join((\"  - %s\\n\" % i) for i in sorted(uncovered)))\n-        else:\n-            print(\"All RPC commands covered.\")\n-\n-    def cleanup(self):\n-        return shutil.rmtree(self.dir)\n-\n-    def _get_uncovered_rpc_commands(self):\n-        \"\"\"\n-        Return a set of currently untested RPC commands.\n-\n-        \"\"\"\n-        # This is shared from `qa/rpc-tests/test-framework/coverage.py`\n-        REFERENCE_FILENAME = 'rpc_interface.txt'\n-        COVERAGE_FILE_PREFIX = 'coverage.'\n-\n-        coverage_ref_filename = os.path.join(self.dir, REFERENCE_FILENAME)\n-        coverage_filenames = set()\n-        all_cmds = set()\n-        covered_cmds = set()\n-\n-        if not os.path.isfile(coverage_ref_filename):\n-            raise RuntimeError(\"No coverage reference found\")\n-\n-        with open(coverage_ref_filename, 'r') as f:\n-            all_cmds.update([i.strip() for i in f.readlines()])\n-\n-        for root, dirs, files in os.walk(self.dir):\n-            for filename in files:\n-                if filename.startswith(COVERAGE_FILE_PREFIX):\n-                    coverage_filenames.add(os.path.join(root, filename))\n-\n-        for filename in coverage_filenames:\n-            with open(filename, 'r') as f:\n-                covered_cmds.update([i.strip() for i in f.readlines()])\n-\n-        return all_cmds - covered_cmds\n-\n-\n-if __name__ == '__main__':\n-    runtests()"
      },
      {
        "sha": "a0d0a3d98a86becd64c699fa8bb67bb2ae79629c",
        "filename": "qa/pull-tester/tests_config.py.in",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/pull-tester/tests_config.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/pull-tester/tests_config.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/tests_config.py.in?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,14 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-SRCDIR=\"@abs_top_srcdir@\"\n-BUILDDIR=\"@abs_top_builddir@\"\n-EXEEXT=\"@EXEEXT@\"\n-\n-# These will turn into comments if they were disabled when configuring.\n-@ENABLE_WALLET_TRUE@ENABLE_WALLET=1\n-@BUILD_BITCOIN_UTILS_TRUE@ENABLE_UTILS=1\n-@BUILD_BITCOIND_TRUE@ENABLE_BITCOIND=1\n-@ENABLE_ZMQ_TRUE@ENABLE_ZMQ=1"
      },
      {
        "sha": "36c147edad3a6f9c94c16e744432ba337e654ce0",
        "filename": "qa/rpc-tests/disablewallet.py",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/disablewallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/disablewallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/disablewallet.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,48 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Exercise API with -disablewallet.\n-#\n-\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n-\n-class DisableWalletTest (BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.setup_clean_chain = True\n-        self.num_nodes = 1\n-\n-    def setup_network(self, split=False):\n-        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir, [['-disablewallet']])\n-        self.is_network_split = False\n-        self.sync_all()\n-\n-    def run_test (self):\n-        # Check regression: https://github.com/bitcoin/bitcoin/issues/6963#issuecomment-154548880\n-        x = self.nodes[0].validateaddress('3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n-        assert(x['isvalid'] == False)\n-        x = self.nodes[0].validateaddress('mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')\n-        assert(x['isvalid'] == True)\n-\n-        # Checking mining to an address without a wallet\n-        try:\n-            self.nodes[0].generatetoaddress(1, 'mneYUmWYsuk7kySiURxCi3AGxrAqZxLgPZ')\n-        except JSONRPCException as e:\n-            assert(\"Invalid address\" not in e.error['message'])\n-            assert(\"ProcessNewBlock, block not accepted\" not in e.error['message'])\n-            assert(\"Couldn't create new block\" not in e.error['message'])\n-\n-        try:\n-            self.nodes[0].generatetoaddress(1, '3J98t1WpEZ73CNmQviecrnyiWrnqRhWNLy')\n-            raise AssertionError(\"Must not mine to invalid address!\")\n-        except JSONRPCException as e:\n-            assert(\"Invalid address\" in e.error['message'])\n-\n-if __name__ == '__main__':\n-    DisableWalletTest ().main ()"
      },
      {
        "sha": "1df1c484bea1205ac3f8ec51f5c87830bc505a94",
        "filename": "qa/rpc-tests/maxblocksinflight.py",
        "status": "removed",
        "additions": 0,
        "deletions": 96,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/maxblocksinflight.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/maxblocksinflight.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/maxblocksinflight.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,96 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-import logging\n-\n-'''\n-In this test we connect to one node over p2p, send it numerous inv's, and\n-compare the resulting number of getdata requests to a max allowed value.  We\n-test for exceeding 128 blocks in flight, which was the limit an 0.9 client will\n-reach. [0.10 clients shouldn't request more than 16 from a single peer.]\n-'''\n-MAX_REQUESTS = 128\n-\n-class TestManager(NodeConnCB):\n-    # set up NodeConnCB callbacks, overriding base class\n-    def on_getdata(self, conn, message):\n-        self.log.debug(\"got getdata %s\" % repr(message))\n-        # Log the requests\n-        for inv in message.inv:\n-            if inv.hash not in self.blockReqCounts:\n-                self.blockReqCounts[inv.hash] = 0\n-            self.blockReqCounts[inv.hash] += 1\n-\n-    def on_close(self, conn):\n-        if not self.disconnectOkay:\n-            raise EarlyDisconnectError(0)\n-\n-    def __init__(self):\n-        NodeConnCB.__init__(self)\n-        self.log = logging.getLogger(\"BlockRelayTest\")\n-\n-    def add_new_connection(self, connection):\n-        self.connection = connection\n-        self.blockReqCounts = {}\n-        self.disconnectOkay = False\n-\n-    def run(self):\n-        self.connection.rpc.generate(1)  # Leave IBD\n-\n-        numBlocksToGenerate = [8, 16, 128, 1024]\n-        for count in range(len(numBlocksToGenerate)):\n-            current_invs = []\n-            for i in range(numBlocksToGenerate[count]):\n-                current_invs.append(CInv(2, random.randrange(0, 1 << 256)))\n-                if len(current_invs) >= 50000:\n-                    self.connection.send_message(msg_inv(current_invs))\n-                    current_invs = []\n-            if len(current_invs) > 0:\n-                self.connection.send_message(msg_inv(current_invs))\n-\n-            # Wait and see how many blocks were requested\n-            time.sleep(2)\n-\n-            total_requests = 0\n-            with mininode_lock:\n-                for key in self.blockReqCounts:\n-                    total_requests += self.blockReqCounts[key]\n-                    if self.blockReqCounts[key] > 1:\n-                        raise AssertionError(\"Error, test failed: block %064x requested more than once\" % key)\n-            if total_requests > MAX_REQUESTS:\n-                raise AssertionError(\"Error, too many blocks (%d) requested\" % total_requests)\n-            print(\"Round %d: success (total requests: %d)\" % (count, total_requests))\n-\n-        self.disconnectOkay = True\n-        self.connection.disconnect_node()\n-\n-\n-class MaxBlocksInFlightTest(BitcoinTestFramework):\n-    def add_options(self, parser):\n-        parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"Binary to test max block requests behavior\")\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.setup_clean_chain = True\n-        self.num_nodes = 1\n-\n-    def setup_network(self):\n-        self.nodes = start_nodes(self.num_nodes, self.options.tmpdir,\n-                                 extra_args=[['-debug', '-whitelist=127.0.0.1']],\n-                                 binary=[self.options.testbinary])\n-\n-    def run_test(self):\n-        test = TestManager()\n-        test.add_new_connection(NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], test))\n-        NetworkThread().start()  # Start up network handling in another thread\n-        test.run()\n-\n-if __name__ == '__main__':\n-    MaxBlocksInFlightTest().main()"
      },
      {
        "sha": "7313c79b54fa1e55309bca0d5fbabe7a38093270",
        "filename": "qa/rpc-tests/nodehandling.py",
        "status": "removed",
        "additions": 0,
        "deletions": 85,
        "changes": 85,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/nodehandling.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/nodehandling.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/nodehandling.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,85 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-#\n-# Test node handling\n-#\n-\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n-import urllib.parse\n-\n-class NodeHandlingTest (BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.num_nodes = 4\n-        self.setup_clean_chain = False\n-\n-    def run_test(self):\n-        ###########################\n-        # setban/listbanned tests #\n-        ###########################\n-        assert_equal(len(self.nodes[2].getpeerinfo()), 4) #we should have 4 nodes at this point\n-        self.nodes[2].setban(\"127.0.0.1\", \"add\")\n-        time.sleep(3) #wait till the nodes are disconected\n-        assert_equal(len(self.nodes[2].getpeerinfo()), 0) #all nodes must be disconnected at this point\n-        assert_equal(len(self.nodes[2].listbanned()), 1)\n-        self.nodes[2].clearbanned()\n-        assert_equal(len(self.nodes[2].listbanned()), 0)\n-        self.nodes[2].setban(\"127.0.0.0/24\", \"add\")\n-        assert_equal(len(self.nodes[2].listbanned()), 1)\n-        try:\n-            self.nodes[2].setban(\"127.0.0.1\", \"add\") #throws exception because 127.0.0.1 is within range 127.0.0.0/24\n-        except:\n-            pass\n-        assert_equal(len(self.nodes[2].listbanned()), 1) #still only one banned ip because 127.0.0.1 is within the range of 127.0.0.0/24\n-        try:\n-            self.nodes[2].setban(\"127.0.0.1\", \"remove\")\n-        except:\n-            pass\n-        assert_equal(len(self.nodes[2].listbanned()), 1)\n-        self.nodes[2].setban(\"127.0.0.0/24\", \"remove\")\n-        assert_equal(len(self.nodes[2].listbanned()), 0)\n-        self.nodes[2].clearbanned()\n-        assert_equal(len(self.nodes[2].listbanned()), 0)\n-\n-        ##test persisted banlist\n-        self.nodes[2].setban(\"127.0.0.0/32\", \"add\")\n-        self.nodes[2].setban(\"127.0.0.0/24\", \"add\")\n-        self.nodes[2].setban(\"192.168.0.1\", \"add\", 1) #ban for 1 seconds\n-        self.nodes[2].setban(\"2001:4d48:ac57:400:cacf:e9ff:fe1d:9c63/19\", \"add\", 1000) #ban for 1000 seconds\n-        listBeforeShutdown = self.nodes[2].listbanned()\n-        assert_equal(\"192.168.0.1/32\", listBeforeShutdown[2]['address']) #must be here\n-        time.sleep(2) #make 100% sure we expired 192.168.0.1 node time\n-\n-        #stop node\n-        stop_node(self.nodes[2], 2)\n-\n-        self.nodes[2] = start_node(2, self.options.tmpdir)\n-        listAfterShutdown = self.nodes[2].listbanned()\n-        assert_equal(\"127.0.0.0/24\", listAfterShutdown[0]['address'])\n-        assert_equal(\"127.0.0.0/32\", listAfterShutdown[1]['address'])\n-        assert_equal(\"/19\" in listAfterShutdown[2]['address'], True)\n-\n-        ###########################\n-        # RPC disconnectnode test #\n-        ###########################\n-        url = urllib.parse.urlparse(self.nodes[1].url)\n-        self.nodes[0].disconnectnode(url.hostname+\":\"+str(p2p_port(1)))\n-        time.sleep(2) #disconnecting a node needs a little bit of time\n-        for node in self.nodes[0].getpeerinfo():\n-            assert(node['addr'] != url.hostname+\":\"+str(p2p_port(1)))\n-\n-        connect_nodes_bi(self.nodes,0,1) #reconnect the node\n-        found = False\n-        for node in self.nodes[0].getpeerinfo():\n-            if node['addr'] == url.hostname+\":\"+str(p2p_port(1)):\n-                found = True\n-        assert(found)\n-\n-if __name__ == '__main__':\n-    NodeHandlingTest ().main ()"
      },
      {
        "sha": "1fd125fdcdd87a232f804a76daf8620e86c81767",
        "filename": "qa/rpc-tests/p2p-mempool.py",
        "status": "removed",
        "additions": 0,
        "deletions": 101,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/p2p-mempool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/p2p-mempool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/p2p-mempool.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,101 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-from test_framework.mininode import *\n-from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import *\n-\n-class TestNode(NodeConnCB):\n-    def __init__(self):\n-        NodeConnCB.__init__(self)\n-        self.connection = None\n-        self.ping_counter = 1\n-        self.last_pong = msg_pong()\n-        self.block_receive_map = {}\n-\n-    def add_connection(self, conn):\n-        self.connection = conn\n-        self.peer_disconnected = False\n-\n-    def on_inv(self, conn, message):\n-        pass\n-\n-    # Track the last getdata message we receive (used in the test)\n-    def on_getdata(self, conn, message):\n-        self.last_getdata = message\n-\n-    def on_block(self, conn, message):\n-        message.block.calc_sha256()\n-        try:\n-            self.block_receive_map[message.block.sha256] += 1\n-        except KeyError as e:\n-            self.block_receive_map[message.block.sha256] = 1\n-\n-    # Spin until verack message is received from the node.\n-    # We use this to signal that our test can begin. This\n-    # is called from the testing thread, so it needs to acquire\n-    # the global lock.\n-    def wait_for_verack(self):\n-        def veracked():\n-            return self.verack_received\n-        return wait_until(veracked, timeout=10)\n-\n-    def wait_for_disconnect(self):\n-        def disconnected():\n-            return self.peer_disconnected\n-        return wait_until(disconnected, timeout=10)\n-\n-    # Wrapper for the NodeConn's send_message function\n-    def send_message(self, message):\n-        self.connection.send_message(message)\n-\n-    def on_pong(self, conn, message):\n-        self.last_pong = message\n-\n-    def on_close(self, conn):\n-        self.peer_disconnected = True\n-\n-    # Sync up with the node after delivery of a block\n-    def sync_with_ping(self, timeout=30):\n-        def received_pong():\n-            return (self.last_pong.nonce == self.ping_counter)\n-        self.connection.send_message(msg_ping(nonce=self.ping_counter))\n-        success = wait_until(received_pong, timeout=timeout)\n-        self.ping_counter += 1\n-        return success\n-\n-    def send_mempool(self):\n-        self.lastInv = []\n-        self.send_message(msg_mempool())\n-\n-class P2PMempoolTests(BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.setup_clean_chain = True\n-        self.num_nodes = 2\n-\n-    def setup_network(self):\n-        # Start a node with maxuploadtarget of 200 MB (/24h)\n-        self.nodes = []\n-        self.nodes.append(start_node(0, self.options.tmpdir, [\"-debug\", \"-peerbloomfilters=0\"]))\n-\n-    def run_test(self):\n-        #connect a mininode\n-        aTestNode = TestNode()\n-        node = NodeConn('127.0.0.1', p2p_port(0), self.nodes[0], aTestNode)\n-        aTestNode.add_connection(node)\n-        NetworkThread().start()\n-        aTestNode.wait_for_verack()\n-\n-        #request mempool\n-        aTestNode.send_mempool()\n-        aTestNode.wait_for_disconnect()\n-\n-        #mininode must be disconnected at this point\n-        assert_equal(len(self.nodes[0].getpeerinfo()), 0)\n-    \n-if __name__ == '__main__':\n-    P2PMempoolTests().main()"
      },
      {
        "sha": "98c4f6070be8070e1e5101ac0789a1ae41620e1a",
        "filename": "qa/rpc-tests/test_framework/test_framework.py",
        "status": "removed",
        "additions": 0,
        "deletions": 219,
        "changes": 219,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/qa/rpc-tests/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/test_framework.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,219 +0,0 @@\n-#!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# Base class for RPC testing\n-\n-import logging\n-import optparse\n-import os\n-import sys\n-import shutil\n-import tempfile\n-import traceback\n-\n-from .util import (\n-    initialize_chain,\n-    start_nodes,\n-    connect_nodes_bi,\n-    sync_blocks,\n-    sync_mempools,\n-    stop_nodes,\n-    stop_node,\n-    enable_coverage,\n-    check_json_precision,\n-    initialize_chain_clean,\n-    PortSeed,\n-)\n-from .authproxy import JSONRPCException\n-\n-\n-class BitcoinTestFramework(object):\n-\n-    def __init__(self):\n-        self.num_nodes = 4\n-        self.setup_clean_chain = False\n-        self.nodes = None\n-\n-    def run_test(self):\n-        raise NotImplementedError\n-\n-    def add_options(self, parser):\n-        pass\n-\n-    def setup_chain(self):\n-        print(\"Initializing test directory \"+self.options.tmpdir)\n-        if self.setup_clean_chain:\n-            initialize_chain_clean(self.options.tmpdir, self.num_nodes)\n-        else:\n-            initialize_chain(self.options.tmpdir, self.num_nodes, self.options.cachedir)\n-\n-    def stop_node(self, num_node):\n-        stop_node(self.nodes[num_node], num_node)\n-\n-    def setup_nodes(self):\n-        return start_nodes(self.num_nodes, self.options.tmpdir)\n-\n-    def setup_network(self, split = False):\n-        self.nodes = self.setup_nodes()\n-\n-        # Connect the nodes as a \"chain\".  This allows us\n-        # to split the network between nodes 1 and 2 to get\n-        # two halves that can work on competing chains.\n-\n-        # If we joined network halves, connect the nodes from the joint\n-        # on outward.  This ensures that chains are properly reorganised.\n-        if not split:\n-            connect_nodes_bi(self.nodes, 1, 2)\n-            sync_blocks(self.nodes[1:3])\n-            sync_mempools(self.nodes[1:3])\n-\n-        connect_nodes_bi(self.nodes, 0, 1)\n-        connect_nodes_bi(self.nodes, 2, 3)\n-        self.is_network_split = split\n-        self.sync_all()\n-\n-    def split_network(self):\n-        \"\"\"\n-        Split the network of four nodes into nodes 0/1 and 2/3.\n-        \"\"\"\n-        assert not self.is_network_split\n-        stop_nodes(self.nodes)\n-        self.setup_network(True)\n-\n-    def sync_all(self):\n-        if self.is_network_split:\n-            sync_blocks(self.nodes[:2])\n-            sync_blocks(self.nodes[2:])\n-            sync_mempools(self.nodes[:2])\n-            sync_mempools(self.nodes[2:])\n-        else:\n-            sync_blocks(self.nodes)\n-            sync_mempools(self.nodes)\n-\n-    def join_network(self):\n-        \"\"\"\n-        Join the (previously split) network halves together.\n-        \"\"\"\n-        assert self.is_network_split\n-        stop_nodes(self.nodes)\n-        self.setup_network(False)\n-\n-    def main(self):\n-\n-        parser = optparse.OptionParser(usage=\"%prog [options]\")\n-        parser.add_option(\"--nocleanup\", dest=\"nocleanup\", default=False, action=\"store_true\",\n-                          help=\"Leave bitcoinds and test.* datadir on exit or error\")\n-        parser.add_option(\"--noshutdown\", dest=\"noshutdown\", default=False, action=\"store_true\",\n-                          help=\"Don't stop bitcoinds after the test execution\")\n-        parser.add_option(\"--srcdir\", dest=\"srcdir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../../src\"),\n-                          help=\"Source directory containing bitcoind/bitcoin-cli (default: %default)\")\n-        parser.add_option(\"--cachedir\", dest=\"cachedir\", default=os.path.normpath(os.path.dirname(os.path.realpath(__file__))+\"/../../cache\"),\n-                          help=\"Directory for caching pregenerated datadirs\")\n-        parser.add_option(\"--tmpdir\", dest=\"tmpdir\", default=tempfile.mkdtemp(prefix=\"test\"),\n-                          help=\"Root directory for datadirs\")\n-        parser.add_option(\"--tracerpc\", dest=\"trace_rpc\", default=False, action=\"store_true\",\n-                          help=\"Print out all RPC calls as they are made\")\n-        parser.add_option(\"--portseed\", dest=\"port_seed\", default=os.getpid(), type='int',\n-                          help=\"The seed to use for assigning port numbers (default: current process id)\")\n-        parser.add_option(\"--coveragedir\", dest=\"coveragedir\",\n-                          help=\"Write tested RPC commands into this directory\")\n-        self.add_options(parser)\n-        (self.options, self.args) = parser.parse_args()\n-\n-        # backup dir variable for removal at cleanup\n-        self.options.root, self.options.tmpdir = self.options.tmpdir, self.options.tmpdir + '/' + str(self.options.port_seed)\n-\n-        if self.options.trace_rpc:\n-            logging.basicConfig(level=logging.DEBUG, stream=sys.stdout)\n-\n-        if self.options.coveragedir:\n-            enable_coverage(self.options.coveragedir)\n-\n-        PortSeed.n = self.options.port_seed\n-\n-        os.environ['PATH'] = self.options.srcdir+\":\"+self.options.srcdir+\"/qt:\"+os.environ['PATH']\n-\n-        check_json_precision()\n-\n-        success = False\n-        try:\n-            os.makedirs(self.options.tmpdir, exist_ok=False)\n-            self.setup_chain()\n-            self.setup_network()\n-            self.run_test()\n-            success = True\n-        except JSONRPCException as e:\n-            print(\"JSONRPC error: \"+e.error['message'])\n-            traceback.print_tb(sys.exc_info()[2])\n-        except AssertionError as e:\n-            print(\"Assertion failed: \" + str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n-        except KeyError as e:\n-            print(\"key not found: \"+ str(e))\n-            traceback.print_tb(sys.exc_info()[2])\n-        except Exception as e:\n-            print(\"Unexpected exception caught during testing: \" + repr(e))\n-            traceback.print_tb(sys.exc_info()[2])\n-        except KeyboardInterrupt as e:\n-            print(\"Exiting after \" + repr(e))\n-\n-        if not self.options.noshutdown:\n-            print(\"Stopping nodes\")\n-            stop_nodes(self.nodes)\n-        else:\n-            print(\"Note: bitcoinds were not stopped and may still be running\")\n-\n-        if not self.options.nocleanup and not self.options.noshutdown and success:\n-            print(\"Cleaning up\")\n-            shutil.rmtree(self.options.tmpdir)\n-            if not os.listdir(self.options.root):\n-                os.rmdir(self.options.root)\n-        else:\n-            print(\"Not cleaning up dir %s\" % self.options.tmpdir)\n-            if os.getenv(\"PYTHON_DEBUG\", \"\"):\n-                # Dump the end of the debug logs, to aid in debugging rare\n-                # travis failures.\n-                import glob\n-                filenames = glob.glob(self.options.tmpdir + \"/node*/regtest/debug.log\")\n-                MAX_LINES_TO_PRINT = 1000\n-                for f in filenames:\n-                    print(\"From\" , f, \":\")\n-                    from collections import deque\n-                    print(\"\".join(deque(open(f), MAX_LINES_TO_PRINT)))\n-        if success:\n-            print(\"Tests successful\")\n-            sys.exit(0)\n-        else:\n-            print(\"Failed\")\n-            sys.exit(1)\n-\n-\n-# Test framework for doing p2p comparison testing, which sets up some bitcoind\n-# binaries:\n-# 1 binary: test binary\n-# 2 binaries: 1 test binary, 1 ref binary\n-# n>2 binaries: 1 test binary, n-1 ref binaries\n-\n-class ComparisonTestFramework(BitcoinTestFramework):\n-\n-    def __init__(self):\n-        super().__init__()\n-        self.num_nodes = 2\n-        self.setup_clean_chain = True\n-\n-    def add_options(self, parser):\n-        parser.add_option(\"--testbinary\", dest=\"testbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to test\")\n-        parser.add_option(\"--refbinary\", dest=\"refbinary\",\n-                          default=os.getenv(\"BITCOIND\", \"bitcoind\"),\n-                          help=\"bitcoind binary to use for reference nodes (if any)\")\n-\n-    def setup_network(self):\n-        self.nodes = start_nodes(\n-            self.num_nodes, self.options.tmpdir,\n-            extra_args=[['-debug', '-whitelist=127.0.0.1']] * self.num_nodes,\n-            binary=[self.options.testbinary] +\n-            [self.options.refbinary]*(self.num_nodes-1))"
      },
      {
        "sha": "32ef2a5755aa4e93d3da541f78f576a846b53db0",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -17,9 +17,13 @@ else\n     exit 1\n fi\n \n+git_check_in_repo() {\n+    ! { git status --porcelain -uall --ignored \"$@\" 2>/dev/null || echo '??'; } | grep -q '?'\n+}\n+\n DESC=\"\"\n SUFFIX=\"\"\n-if [ -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ]; then\n+if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      },
      {
        "sha": "ae2eb29c943ad447349eaa685d749b02ee16933f",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 22,
        "deletions": 4,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -95,9 +95,11 @@ BITCOIN_CORE_H = \\\n   compat/sanity.h \\\n   compressor.h \\\n   consensus/consensus.h \\\n+  consensus/tx_verify.h \\\n   core_io.h \\\n   core_memusage.h \\\n   cuckoocache.h \\\n+  fs.h \\\n   httprpc.h \\\n   httpserver.h \\\n   indirectmap.h \\\n@@ -115,13 +117,15 @@ BITCOIN_CORE_H = \\\n   netbase.h \\\n   netmessagemaker.h \\\n   noui.h \\\n+  policy/feerate.h \\\n   policy/fees.h \\\n   policy/policy.h \\\n   policy/rbf.h \\\n   pow.h \\\n   protocol.h \\\n   random.h \\\n   reverselock.h \\\n+  rpc/blockchain.h \\\n   rpc/client.h \\\n   rpc/protocol.h \\\n   rpc/server.h \\\n@@ -155,6 +159,7 @@ BITCOIN_CORE_H = \\\n   wallet/coincontrol.h \\\n   wallet/crypter.h \\\n   wallet/db.h \\\n+  wallet/feebumper.h \\\n   wallet/rpcwallet.h \\\n   wallet/wallet.h \\\n   wallet/walletdb.h \\\n@@ -167,20 +172,21 @@ BITCOIN_CORE_H = \\\n \n obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n-\t@$(top_srcdir)/share/genbuild.sh $(abs_top_builddir)/src/obj/build.h \\\n-\t  $(abs_top_srcdir)\n+\t@$(top_srcdir)/share/genbuild.sh \"$(abs_top_builddir)/src/obj/build.h\" \\\n+\t  \"$(abs_top_srcdir)\"\n libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n \n # server: shared between bitcoind and bitcoin-qt\n libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_server_a_SOURCES = \\\n-  addrman.cpp \\\n   addrdb.cpp \\\n+  addrman.cpp \\\n   bloom.cpp \\\n   blockencodings.cpp \\\n   chain.cpp \\\n   checkpoints.cpp \\\n+  consensus/tx_verify.cpp \\\n   httprpc.cpp \\\n   httpserver.cpp \\\n   init.cpp \\\n@@ -229,6 +235,7 @@ libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n+  wallet/feebumper.cpp \\\n   wallet/rpcdump.cpp \\\n   wallet/rpcwallet.cpp \\\n   wallet/wallet.cpp \\\n@@ -242,6 +249,8 @@ crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n   crypto/aes.h \\\n+  crypto/chacha20.h \\\n+  crypto/chacha20.cpp \\\n   crypto/common.h \\\n   crypto/hmac_sha256.cpp \\\n   crypto/hmac_sha256.h \\\n@@ -295,7 +304,6 @@ libbitcoin_consensus_a_SOURCES = \\\n libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libbitcoin_common_a_SOURCES = \\\n-  amount.cpp \\\n   base58.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n@@ -306,6 +314,7 @@ libbitcoin_common_a_SOURCES = \\\n   keystore.cpp \\\n   netaddress.cpp \\\n   netbase.cpp \\\n+  policy/feerate.cpp \\\n   protocol.cpp \\\n   scheduler.cpp \\\n   script/sign.cpp \\\n@@ -325,6 +334,7 @@ libbitcoin_util_a_SOURCES = \\\n   compat/glibc_sanity.cpp \\\n   compat/glibcxx_sanity.cpp \\\n   compat/strnlen.cpp \\\n+  fs.cpp \\\n   random.cpp \\\n   rpc/protocol.cpp \\\n   support/cleanse.cpp \\\n@@ -457,6 +467,14 @@ DISTCLEANFILES = obj/build.h\n \n EXTRA_DIST = $(CTAES_DIST)\n \n+\n+config/bitcoin-config.h: config/stamp-h1\n+\t@$(MAKE) -C $(top_builddir) $(subdir)/$(@)\n+config/stamp-h1: $(top_srcdir)/$(subdir)/config/bitcoin-config.h.in $(top_builddir)/config.status\n+\t$(AM_V_at)$(MAKE) -C $(top_builddir) $(subdir)/$(@)\n+$(top_srcdir)/$(subdir)/config/bitcoin-config.h.in:  $(am__configure_deps)\n+\t$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/bitcoin-config.h.in\n+\n clean-local:\n \t-$(MAKE) -C secp256k1 clean\n \t-$(MAKE) -C univalue clean"
      },
      {
        "sha": "3bcecab596ba6688a7769f0cba2934965c57d6a5",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -25,7 +25,8 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/base58.cpp \\\n   bench/lockedpool.cpp \\\n   bench/perf.cpp \\\n-  bench/perf.h\n+  bench/perf.h \\\n+  bench/prevector_destructor.cpp\n \n nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n "
      },
      {
        "sha": "48411f29ecb9b10071a62b447f67227e7be8fcde",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -122,6 +122,7 @@ QT_MOC_CPP = \\\n   qt/moc_bitcoinamountfield.cpp \\\n   qt/moc_bitcoingui.cpp \\\n   qt/moc_bitcoinunits.cpp \\\n+  qt/moc_callback.cpp \\\n   qt/moc_clientmodel.cpp \\\n   qt/moc_coincontroldialog.cpp \\\n   qt/moc_coincontroltreewidget.cpp \\\n@@ -167,6 +168,7 @@ BITCOIN_MM = \\\n QT_MOC = \\\n   qt/bitcoin.moc \\\n   qt/bitcoinamountfield.moc \\\n+  qt/callback.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n   qt/rpcconsole.moc\n@@ -189,6 +191,7 @@ BITCOIN_QT_H = \\\n   qt/bitcoinamountfield.h \\\n   qt/bitcoingui.h \\\n   qt/bitcoinunits.h \\\n+  qt/callback.h \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n   qt/coincontroltreewidget.h \\"
      },
      {
        "sha": "391b9ebdf6947f272f342ad7a83a3e8c99883121",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 19,
        "deletions": 4,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,15 +11,26 @@ TEST_QT_MOC_CPP = \\\n   qt/test/moc_uritests.cpp\n \n if ENABLE_WALLET\n-TEST_QT_MOC_CPP += qt/test/moc_paymentservertests.cpp\n+TEST_QT_MOC_CPP += \\\n+  qt/test/moc_paymentservertests.cpp \\\n+  qt/test/moc_wallettests.cpp\n endif\n \n TEST_QT_H = \\\n   qt/test/compattests.h \\\n   qt/test/rpcnestedtests.h \\\n   qt/test/uritests.h \\\n   qt/test/paymentrequestdata.h \\\n-  qt/test/paymentservertests.h\n+  qt/test/paymentservertests.h \\\n+  qt/test/wallettests.h\n+\n+TEST_BITCOIN_CPP = \\\n+  test/test_bitcoin.cpp \\\n+  test/testutil.cpp\n+\n+TEST_BITCOIN_H = \\\n+  test/test_bitcoin.h \\\n+  test/testutil.h\n \n qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n@@ -29,10 +40,14 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n-  $(TEST_QT_H)\n+  $(TEST_QT_H) \\\n+  $(TEST_BITCOIN_CPP) \\\n+  $(TEST_BITCOIN_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n-  qt/test/paymentservertests.cpp\n+  qt/test/paymentservertests.cpp \\\n+  qt/test/wallettests.cpp \\\n+  wallet/test/wallet_test_fixture.cpp\n endif\n \n nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)"
      },
      {
        "sha": "ee1c11ff1f621b68d4c046c27ee8300c98fd936e",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 60,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,60 +8,6 @@ noinst_PROGRAMS += test/test_bitcoin_fuzzy\n TEST_SRCDIR = test\n TEST_BINARY=test/test_bitcoin$(EXEEXT)\n \n-\n-EXTRA_DIST += \\\n-\ttest/bctest.py \\\n-\ttest/bitcoin-util-test.py \\\n-\ttest/data/bitcoin-util-test.json \\\n-\ttest/data/blanktxv1.hex \\\n-\ttest/data/blanktxv1.json \\\n-\ttest/data/blanktxv2.hex \\\n-\ttest/data/blanktxv2.json \\\n-\ttest/data/tt-delin1-out.hex \\\n-\ttest/data/tt-delin1-out.json \\\n-\ttest/data/tt-delout1-out.hex \\\n-\ttest/data/tt-delout1-out.json \\\n-\ttest/data/tt-locktime317000-out.hex \\\n-\ttest/data/tt-locktime317000-out.json \\\n-\ttest/data/tx394b54bb.hex \\\n-\ttest/data/txcreate1.hex \\\n-\ttest/data/txcreate1.json \\\n-\ttest/data/txcreate2.hex \\\n-\ttest/data/txcreate2.json \\\n-\ttest/data/txcreatedata1.hex \\\n-\ttest/data/txcreatedata1.json \\\n-\ttest/data/txcreatedata2.hex \\\n-\ttest/data/txcreatedata2.json \\\n-\ttest/data/txcreatedata_seq0.hex \\\n-\ttest/data/txcreatedata_seq0.json \\\n-\ttest/data/txcreatedata_seq1.hex \\\n-\ttest/data/txcreatedata_seq1.json \\\n-\ttest/data/txcreatemultisig1.hex \\\n-\ttest/data/txcreatemultisig1.json \\\n-\ttest/data/txcreatemultisig2.hex \\\n-\ttest/data/txcreatemultisig2.json \\\n-\ttest/data/txcreatemultisig3.hex \\\n-\ttest/data/txcreatemultisig3.json \\\n-\ttest/data/txcreatemultisig4.hex \\\n-\ttest/data/txcreatemultisig4.json \\\n-\ttest/data/txcreateoutpubkey1.hex \\\n-\ttest/data/txcreateoutpubkey1.json \\\n-\ttest/data/txcreateoutpubkey2.hex \\\n-\ttest/data/txcreateoutpubkey2.json \\\n-\ttest/data/txcreateoutpubkey3.hex \\\n-\ttest/data/txcreateoutpubkey3.json \\\n-\ttest/data/txcreatescript1.hex \\\n-\ttest/data/txcreatescript1.json \\\n-\ttest/data/txcreatescript2.hex \\\n-\ttest/data/txcreatescript2.json \\\n-\ttest/data/txcreatescript3.hex \\\n-\ttest/data/txcreatescript3.json \\\n-\ttest/data/txcreatescript4.hex \\\n-\ttest/data/txcreatescript4.json \\\n-\ttest/data/txcreatesignv1.hex \\\n-\ttest/data/txcreatesignv1.json \\\n-\ttest/data/txcreatesignv2.hex\n-\n JSON_TEST_FILES = \\\n   test/data/script_tests.json \\\n   test/data/base58_keys_valid.json \\\n@@ -89,6 +35,7 @@ BITCOIN_TESTS =\\\n   test/blockencodings_tests.cpp \\\n   test/bloom_tests.cpp \\\n   test/bswap_tests.cpp \\\n+  test/checkqueue_tests.cpp \\\n   test/coins_tests.cpp \\\n   test/compress_tests.cpp \\\n   test/crypto_tests.cpp \\\n@@ -111,6 +58,7 @@ BITCOIN_TESTS =\\\n   test/pow_tests.cpp \\\n   test/prevector_tests.cpp \\\n   test/raii_event_tests.cpp \\\n+  test/random_tests.cpp \\\n   test/reverselock_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n@@ -125,10 +73,12 @@ BITCOIN_TESTS =\\\n   test/streams_tests.cpp \\\n   test/test_bitcoin.cpp \\\n   test/test_bitcoin.h \\\n+  test/test_bitcoin_main.cpp \\\n   test/test_random.h \\\n   test/testutil.cpp \\\n   test/testutil.h \\\n   test/timedata_tests.cpp \\\n+  test/torcontrol_tests.cpp \\\n   test/transaction_tests.cpp \\\n   test/txvalidationcache_tests.cpp \\\n   test/versionbits_tests.cpp \\\n@@ -148,7 +98,7 @@ endif\n test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n-  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS)\n+  $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n@@ -188,9 +138,6 @@ CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n \n CLEANFILES += $(CLEAN_BITCOIN_TEST)\n \n-# This file is problematic for out-of-tree builds if it exists.\n-DISTCLEANFILES += test/buildenv.pyc\n-\n bitcoin_test: $(TEST_BINARY)\n \n bitcoin_test_check: $(TEST_BINARY) FORCE\n@@ -200,8 +147,8 @@ bitcoin_test_clean : FORCE\n \trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n \n check-local:\n-\t@echo \"Running test/bitcoin-util-test.py...\"\n-\t$(AM_V_at)srcdir=$(srcdir) PYTHONPATH=$(builddir)/test $(PYTHON) $(srcdir)/test/bitcoin-util-test.py\n+\t@echo \"Running test/util/bitcoin-util-test.py...\"\n+\t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "a3743cd0d4dee3fb069e952bd847e2d59c46d607",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,13 +8,13 @@\n #include \"addrman.h\"\n #include \"chainparams.h\"\n #include \"clientversion.h\"\n+#include \"fs.h\"\n #include \"hash.h\"\n #include \"random.h\"\n #include \"streams.h\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n \n-#include <boost/filesystem.hpp>\n \n CBanDB::CBanDB()\n {\n@@ -36,8 +36,8 @@ bool CBanDB::Write(const banmap_t& banSet)\n     ssBanlist << hash;\n \n     // open temp output file, and associate with CAutoFile\n-    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n-    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n+    fs::path pathTmp = GetDataDir() / tmpfn;\n+    FILE *file = fsbridge::fopen(pathTmp, \"wb\");\n     CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n     if (fileout.IsNull())\n         return error(\"%s: Failed to open file %s\", __func__, pathTmp.string());\n@@ -62,13 +62,13 @@ bool CBanDB::Write(const banmap_t& banSet)\n bool CBanDB::Read(banmap_t& banSet)\n {\n     // open input file, and associate with CAutoFile\n-    FILE *file = fopen(pathBanlist.string().c_str(), \"rb\");\n+    FILE *file = fsbridge::fopen(pathBanlist, \"rb\");\n     CAutoFile filein(file, SER_DISK, CLIENT_VERSION);\n     if (filein.IsNull())\n         return error(\"%s: Failed to open file %s\", __func__, pathBanlist.string());\n \n     // use file size to size memory buffer\n-    uint64_t fileSize = boost::filesystem::file_size(pathBanlist);\n+    uint64_t fileSize = fs::file_size(pathBanlist);\n     uint64_t dataSize = 0;\n     // Don't try to resize to a negative number if file is small\n     if (fileSize >= sizeof(uint256))\n@@ -133,8 +133,8 @@ bool CAddrDB::Write(const CAddrMan& addr)\n     ssPeers << hash;\n \n     // open temp output file, and associate with CAutoFile\n-    boost::filesystem::path pathTmp = GetDataDir() / tmpfn;\n-    FILE *file = fopen(pathTmp.string().c_str(), \"wb\");\n+    fs::path pathTmp = GetDataDir() / tmpfn;\n+    FILE *file = fsbridge::fopen(pathTmp, \"wb\");\n     CAutoFile fileout(file, SER_DISK, CLIENT_VERSION);\n     if (fileout.IsNull())\n         return error(\"%s: Failed to open file %s\", __func__, pathTmp.string());\n@@ -159,13 +159,13 @@ bool CAddrDB::Write(const CAddrMan& addr)\n bool CAddrDB::Read(CAddrMan& addr)\n {\n     // open input file, and associate with CAutoFile\n-    FILE *file = fopen(pathAddr.string().c_str(), \"rb\");\n+    FILE *file = fsbridge::fopen(pathAddr, \"rb\");\n     CAutoFile filein(file, SER_DISK, CLIENT_VERSION);\n     if (filein.IsNull())\n         return error(\"%s: Failed to open file %s\", __func__, pathAddr.string());\n \n     // use file size to size memory buffer\n-    uint64_t fileSize = boost::filesystem::file_size(pathAddr);\n+    uint64_t fileSize = fs::file_size(pathAddr);\n     uint64_t dataSize = 0;\n     // Don't try to resize to a negative number if file is small\n     if (fileSize >= sizeof(uint256))"
      },
      {
        "sha": "c3d509bd3a7a653353d00b0c9c7a5eb776fbd9dc",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,11 +6,11 @@\n #ifndef BITCOIN_ADDRDB_H\n #define BITCOIN_ADDRDB_H\n \n+#include \"fs.h\"\n #include \"serialize.h\"\n \n #include <string>\n #include <map>\n-#include <boost/filesystem/path.hpp>\n \n class CSubNet;\n class CAddrMan;\n@@ -80,7 +80,7 @@ typedef std::map<CSubNet, CBanEntry> banmap_t;\n class CAddrDB\n {\n private:\n-    boost::filesystem::path pathAddr;\n+    fs::path pathAddr;\n public:\n     CAddrDB();\n     bool Write(const CAddrMan& addr);\n@@ -92,7 +92,7 @@ class CAddrDB\n class CBanDB\n {\n private:\n-    boost::filesystem::path pathBanlist;\n+    fs::path pathBanlist;\n public:\n     CBanDB();\n     bool Write(const banmap_t& banSet);"
      },
      {
        "sha": "4a408b9beb1913e06cc9fc570319431838e86533",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -233,7 +233,7 @@ void CAddrMan::Good_(const CService& addr, int64_t nTime)\n     if (nUBucket == -1)\n         return;\n \n-    LogPrint(\"addrman\", \"Moving %s to tried\\n\", addr.ToString());\n+    LogPrint(BCLog::ADDRMAN, \"Moving %s to tried\\n\", addr.ToString());\n \n     // move nId to the tried tables\n     MakeTried(info, nId);\n@@ -351,8 +351,8 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n             int nKBucket = RandomInt(ADDRMAN_TRIED_BUCKET_COUNT);\n             int nKBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvTried[nKBucket][nKBucketPos] == -1) {\n-                nKBucket = (nKBucket + insecure_rand.rand32()) % ADDRMAN_TRIED_BUCKET_COUNT;\n-                nKBucketPos = (nKBucketPos + insecure_rand.rand32()) % ADDRMAN_BUCKET_SIZE;\n+                nKBucket = (nKBucket + insecure_rand.randbits(ADDRMAN_TRIED_BUCKET_COUNT_LOG2)) % ADDRMAN_TRIED_BUCKET_COUNT;\n+                nKBucketPos = (nKBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvTried[nKBucket][nKBucketPos];\n             assert(mapInfo.count(nId) == 1);\n@@ -368,8 +368,8 @@ CAddrInfo CAddrMan::Select_(bool newOnly)\n             int nUBucket = RandomInt(ADDRMAN_NEW_BUCKET_COUNT);\n             int nUBucketPos = RandomInt(ADDRMAN_BUCKET_SIZE);\n             while (vvNew[nUBucket][nUBucketPos] == -1) {\n-                nUBucket = (nUBucket + insecure_rand.rand32()) % ADDRMAN_NEW_BUCKET_COUNT;\n-                nUBucketPos = (nUBucketPos + insecure_rand.rand32()) % ADDRMAN_BUCKET_SIZE;\n+                nUBucket = (nUBucket + insecure_rand.randbits(ADDRMAN_NEW_BUCKET_COUNT_LOG2)) % ADDRMAN_NEW_BUCKET_COUNT;\n+                nUBucketPos = (nUBucketPos + insecure_rand.randbits(ADDRMAN_BUCKET_SIZE_LOG2)) % ADDRMAN_BUCKET_SIZE;\n             }\n             int nId = vvNew[nUBucket][nUBucketPos];\n             assert(mapInfo.count(nId) == 1);"
      },
      {
        "sha": "70d907488f3d92bdf432d5091aa68e7714887193",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 15,
        "deletions": 8,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -136,13 +136,13 @@ class CAddrInfo : public CAddress\n  */\n \n //! total number of buckets for tried addresses\n-#define ADDRMAN_TRIED_BUCKET_COUNT 256\n+#define ADDRMAN_TRIED_BUCKET_COUNT_LOG2 8\n \n //! total number of buckets for new addresses\n-#define ADDRMAN_NEW_BUCKET_COUNT 1024\n+#define ADDRMAN_NEW_BUCKET_COUNT_LOG2 10\n \n //! maximum allowed number of entries in buckets for new and tried addresses\n-#define ADDRMAN_BUCKET_SIZE 64\n+#define ADDRMAN_BUCKET_SIZE_LOG2 6\n \n //! over how many buckets entries with tried addresses from a single group (/16 for IPv4) are spread\n #define ADDRMAN_TRIED_BUCKETS_PER_GROUP 8\n@@ -171,6 +171,11 @@ class CAddrInfo : public CAddress\n //! the maximum number of nodes to return in a getaddr call\n #define ADDRMAN_GETADDR_MAX 2500\n \n+//! Convenience\n+#define ADDRMAN_TRIED_BUCKET_COUNT (1 << ADDRMAN_TRIED_BUCKET_COUNT_LOG2)\n+#define ADDRMAN_NEW_BUCKET_COUNT (1 << ADDRMAN_NEW_BUCKET_COUNT_LOG2)\n+#define ADDRMAN_BUCKET_SIZE (1 << ADDRMAN_BUCKET_SIZE_LOG2)\n+\n /** \n  * Stochastical (IP) address manager \n  */\n@@ -442,7 +447,7 @@ class CAddrMan\n             }\n         }\n         if (nLost + nLostUnk > 0) {\n-            LogPrint(\"addrman\", \"addrman lost %i new and %i tried addresses due to collisions\\n\", nLostUnk, nLost);\n+            LogPrint(BCLog::ADDRMAN, \"addrman lost %i new and %i tried addresses due to collisions\\n\", nLostUnk, nLost);\n         }\n \n         Check();\n@@ -507,8 +512,9 @@ class CAddrMan\n         Check();\n         fRet |= Add_(addr, source, nTimePenalty);\n         Check();\n-        if (fRet)\n-            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort(), source.ToString(), nTried, nNew);\n+        if (fRet) {\n+            LogPrint(BCLog::ADDRMAN, \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort(), source.ToString(), nTried, nNew);\n+        }\n         return fRet;\n     }\n \n@@ -521,8 +527,9 @@ class CAddrMan\n         for (std::vector<CAddress>::const_iterator it = vAddr.begin(); it != vAddr.end(); it++)\n             nAdd += Add_(*it, source, nTimePenalty) ? 1 : 0;\n         Check();\n-        if (nAdd)\n-            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n+        if (nAdd) {\n+            LogPrint(BCLog::ADDRMAN, \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString(), nTried, nNew);\n+        }\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "2bd367cba29fa5e802635786607272b8c718a553",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 1,
        "deletions": 44,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,19 +6,14 @@\n #ifndef BITCOIN_AMOUNT_H\n #define BITCOIN_AMOUNT_H\n \n-#include \"serialize.h\"\n-\n-#include <stdlib.h>\n-#include <string>\n+#include <stdint.h>\n \n /** Amount in satoshis (Can be negative) */\n typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n static const CAmount CENT = 1000000;\n \n-extern const std::string CURRENCY_UNIT;\n-\n /** No amount larger than this (in satoshi) is valid.\n  *\n  * Note that this constant is *not* the total money supply, which in Bitcoin\n@@ -31,42 +26,4 @@ extern const std::string CURRENCY_UNIT;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n-/**\n- * Fee rate in satoshis per kilobyte: CAmount / kB\n- */\n-class CFeeRate\n-{\n-private:\n-    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n-public:\n-    /** Fee rate of 0 satoshis per kB */\n-    CFeeRate() : nSatoshisPerK(0) { }\n-    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n-    /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n-    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n-    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n-    /**\n-     * Return the fee in satoshis for the given size in bytes.\n-     */\n-    CAmount GetFee(size_t nBytes) const;\n-    /**\n-     * Return the fee in satoshis for a size of 1000 bytes\n-     */\n-    CAmount GetFeePerK() const { return GetFee(1000); }\n-    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n-    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n-    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n-    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n-    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n-    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n-    std::string ToString() const;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        READWRITE(nSatoshisPerK);\n-    }\n-};\n-\n #endif //  BITCOIN_AMOUNT_H"
      },
      {
        "sha": "dd34a313b79b860f750772036b88b9385db728ce",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -173,9 +173,9 @@ unsigned int base_uint<BITS>::bits() const\n {\n     for (int pos = WIDTH - 1; pos >= 0; pos--) {\n         if (pn[pos]) {\n-            for (int bits = 31; bits > 0; bits--) {\n-                if (pn[pos] & 1 << bits)\n-                    return 32 * pos + bits + 1;\n+            for (int nbits = 31; nbits > 0; nbits--) {\n+                if (pn[pos] & 1 << nbits)\n+                    return 32 * pos + nbits + 1;\n             }\n             return 32 * pos + 1;\n         }"
      },
      {
        "sha": "36b3523692bfc124981b4d0d525628544f7afe56",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -134,7 +134,7 @@ bool DecodeBase58Check(const char* psz, std::vector<unsigned char>& vchRet)\n         vchRet.clear();\n         return false;\n     }\n-    // re-calculate the checksum, insure it matches the included 4-byte checksum\n+    // re-calculate the checksum, ensure it matches the included 4-byte checksum\n     uint256 hash = Hash(vchRet.begin(), vchRet.end() - 4);\n     if (memcmp(&hash, &vchRet.end()[-4], 4) != 0) {\n         vchRet.clear();"
      },
      {
        "sha": "33631d2d150545196a1a559e5b40a140b8f00c9e",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -5,6 +5,7 @@\n #include \"bench.h\"\n #include \"perf.h\"\n \n+#include <assert.h>\n #include <iostream>\n #include <iomanip>\n #include <sys/time.h>\n@@ -92,6 +93,8 @@ bool benchmark::State::KeepRunning()\n \n     --count;\n \n+    assert(count != 0 && \"count == 0 => (now == 0 && beginTime == 0) => return above\");\n+\n     // Output results\n     double average = (now-beginTime)/count;\n     int64_t averageCycles = (nowCycles-beginCycles)/count;"
      },
      {
        "sha": "1f36f2a4bca1b07e2577aebb8392463aabe0a2b4",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -5,16 +5,17 @@\n #ifndef BITCOIN_BENCH_BENCH_H\n #define BITCOIN_BENCH_BENCH_H\n \n+#include <functional>\n+#include <limits>\n #include <map>\n #include <string>\n \n-#include <boost/function.hpp>\n #include <boost/preprocessor/cat.hpp>\n #include <boost/preprocessor/stringize.hpp>\n \n // Simple micro-benchmarking framework; API mostly matches a subset of the Google Benchmark\n // framework (see https://github.com/google/benchmark)\n-// Wny not use the Google Benchmark framework? Because adding Yet Another Dependency\n+// Why not use the Google Benchmark framework? Because adding Yet Another Dependency\n // (that uses cmake as its build system and has lots of features we don't need) isn't\n // worth it.\n \n@@ -59,7 +60,7 @@ namespace benchmark {\n         bool KeepRunning();\n     };\n \n-    typedef boost::function<void(State&)> BenchFunction;\n+    typedef std::function<void(State&)> BenchFunction;\n \n     class BenchRunner\n     {"
      },
      {
        "sha": "195388839eaacb5dc1bf91b77eebb0e6d9f19e33",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -22,7 +22,7 @@ static void DeserializeBlockTest(benchmark::State& state)\n     CDataStream stream((const char*)block_bench::block413567,\n             (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n             SER_NETWORK, PROTOCOL_VERSION);\n-    char a;\n+    char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n \n     while (state.KeepRunning()) {\n@@ -37,18 +37,18 @@ static void DeserializeAndCheckBlockTest(benchmark::State& state)\n     CDataStream stream((const char*)block_bench::block413567,\n             (const char*)&block_bench::block413567[sizeof(block_bench::block413567)],\n             SER_NETWORK, PROTOCOL_VERSION);\n-    char a;\n+    char a = '\\0';\n     stream.write(&a, 1); // Prevent compaction\n \n-    Consensus::Params params = Params(CBaseChainParams::MAIN).GetConsensus();\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n \n     while (state.KeepRunning()) {\n         CBlock block; // Note that CBlock caches its checked state, so we need to recreate it here\n         stream >> block;\n         assert(stream.Rewind(sizeof(block_bench::block413567)));\n \n         CValidationState validationState;\n-        assert(CheckBlock(block, validationState, params));\n+        assert(CheckBlock(block, validationState, chainParams->GetConsensus()));\n     }\n }\n "
      },
      {
        "sha": "88a2a570f93d2a83aae94700ea7b854426f54c9e",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -68,7 +68,7 @@ static void CCheckQueueSpeedPrevectorJob(benchmark::State& state)\n         PrevectorJob(){\n         }\n         PrevectorJob(FastRandomContext& insecure_rand){\n-            p.resize(insecure_rand.rand32() % (PREVECTOR_SIZE*2));\n+            p.resize(insecure_rand.randrange(PREVECTOR_SIZE*2));\n         }\n         bool operator()()\n         {"
      },
      {
        "sha": "42891f345b7c8e7cb57800427891b51e1844c81e",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -20,7 +20,7 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<CO\n     CWalletTx* wtx = new CWalletTx(&wallet, MakeTransactionRef(std::move(tx)));\n \n     int nAge = 6 * 24;\n-    COutput output(wtx, nInput, nAge, true, true);\n+    COutput output(wtx, nInput, nAge, true /* spendable */, true /* solvable */, true /* safe */);\n     vCoins.push_back(output);\n }\n \n@@ -48,7 +48,7 @@ static void CoinSelection(benchmark::State& state)\n             addCoin(1000 * COIN, wallet, vCoins);\n         addCoin(3 * COIN, wallet, vCoins);\n \n-        std::set<std::pair<const CWalletTx*, unsigned int> > setCoinsRet;\n+        std::set<CInputCoin> setCoinsRet;\n         CAmount nValueRet;\n         bool success = wallet.SelectCoinsMinConf(1003 * COIN, 1, 6, 0, vCoins, setCoinsRet, nValueRet);\n         assert(success);"
      },
      {
        "sha": "2914a36c7b92ade59e0fa9c2208647155c762cb5",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,6 +7,7 @@\n #include \"bench.h\"\n #include \"bloom.h\"\n #include \"hash.h\"\n+#include \"random.h\"\n #include \"uint256.h\"\n #include \"utiltime.h\"\n #include \"crypto/ripemd160.h\"\n@@ -69,10 +70,34 @@ static void SipHash_32b(benchmark::State& state)\n     }\n }\n \n+static void FastRandom_32bit(benchmark::State& state)\n+{\n+    FastRandomContext rng(true);\n+    uint32_t x = 0;\n+    while (state.KeepRunning()) {\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.rand32();\n+        }\n+    }\n+}\n+\n+static void FastRandom_1bit(benchmark::State& state)\n+{\n+    FastRandomContext rng(true);\n+    uint32_t x = 0;\n+    while (state.KeepRunning()) {\n+        for (int i = 0; i < 1000000; i++) {\n+            x += rng.randbool();\n+        }\n+    }\n+}\n+\n BENCHMARK(RIPEMD160);\n BENCHMARK(SHA1);\n BENCHMARK(SHA256);\n BENCHMARK(SHA512);\n \n BENCHMARK(SHA256_32b);\n BENCHMARK(SipHash_32b);\n+BENCHMARK(FastRandom_32bit);\n+BENCHMARK(FastRandom_1bit);"
      },
      {
        "sha": "43a1422795434fd763629d17d98eb1ed88f9d808",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -13,7 +13,7 @@\n #define BITER 5000\n #define MSIZE 2048\n \n-static void LockedPool(benchmark::State& state)\n+static void BenchLockedPool(benchmark::State& state)\n {\n     void *synth_base = reinterpret_cast<void*>(0x08000000);\n     const size_t synth_size = 1024*1024;\n@@ -43,5 +43,5 @@ static void LockedPool(benchmark::State& state)\n     addr.clear();\n }\n \n-BENCHMARK(LockedPool);\n+BENCHMARK(BenchLockedPool);\n "
      },
      {
        "sha": "073bbde01659b08447da9eed8b5bb50017ac3e30",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -12,14 +12,13 @@\n static void AddTx(const CTransaction& tx, const CAmount& nFee, CTxMemPool& pool)\n {\n     int64_t nTime = 0;\n-    double dPriority = 10.0;\n     unsigned int nHeight = 1;\n     bool spendsCoinbase = false;\n     unsigned int sigOpCost = 4;\n     LockPoints lp;\n     pool.addUnchecked(tx.GetHash(), CTxMemPoolEntry(\n-                                        MakeTransactionRef(tx), nFee, nTime, dPriority, nHeight,\n-                                        tx.GetValueOut(), spendsCoinbase, sigOpCost, lp));\n+                                        MakeTransactionRef(tx), nFee, nTime, nHeight,\n+                                        spendsCoinbase, sigOpCost, lp));\n }\n \n // Right now this is only testing eviction performance in an extremely small\n@@ -97,7 +96,7 @@ static void MempoolEviction(benchmark::State& state)\n     tx7.vout[1].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n     tx7.vout[1].nValue = 10 * COIN;\n \n-    CTxMemPool pool(CFeeRate(1000));\n+    CTxMemPool pool;\n \n     while (state.KeepRunning()) {\n         AddTx(tx1, 10000LL, pool);"
      },
      {
        "sha": "55af3de4fe756ae007b000d247eb4558ae5352f9",
        "filename": "src/bench/prevector_destructor.cpp",
        "status": "added",
        "additions": 36,
        "deletions": 0,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/prevector_destructor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bench/prevector_destructor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector_destructor.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,36 @@\n+// Copyright (c) 2015-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"bench.h\"\n+#include \"prevector.h\"\n+\n+static void PrevectorDestructor(benchmark::State& state)\n+{\n+    while (state.KeepRunning()) {\n+        for (auto x = 0; x < 1000; ++x) {\n+            prevector<28, unsigned char> t0;\n+            prevector<28, unsigned char> t1;\n+            t0.resize(28);\n+            t1.resize(29);\n+        }\n+    }\n+}\n+\n+static void PrevectorClear(benchmark::State& state)\n+{\n+\n+    while (state.KeepRunning()) {\n+        for (auto x = 0; x < 1000; ++x) {\n+            prevector<28, unsigned char> t0;\n+            prevector<28, unsigned char> t1;\n+            t0.resize(28);\n+            t0.clear();\n+            t1.resize(29);\n+            t0.clear();\n+        }\n+    }\n+}\n+\n+BENCHMARK(PrevectorDestructor);\n+BENCHMARK(PrevectorClear);"
      },
      {
        "sha": "885b787b4da09815fd6ba79038608f0b9e8c0281",
        "filename": "src/bitcoin-cli.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoin-cli.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoin-cli.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-cli.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -9,12 +9,12 @@\n \n #include \"chainparamsbase.h\"\n #include \"clientversion.h\"\n+#include \"fs.h\"\n #include \"rpc/client.h\"\n #include \"rpc/protocol.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n-#include <boost/filesystem/operations.hpp>\n #include <stdio.h>\n \n #include <event2/buffer.h>\n@@ -30,6 +30,8 @@ static const int CONTINUE_EXECUTION=-1;\n \n std::string HelpMessageCli()\n {\n+    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n+    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n     std::string strUsage;\n     strUsage += HelpMessageGroup(_(\"Options:\"));\n     strUsage += HelpMessageOpt(\"-?\", _(\"This help message\"));\n@@ -38,11 +40,11 @@ std::string HelpMessageCli()\n     AppendParamsHelpMessages(strUsage);\n     strUsage += HelpMessageOpt(\"-named\", strprintf(_(\"Pass named instead of positional arguments (default: %s)\"), DEFAULT_NAMED));\n     strUsage += HelpMessageOpt(\"-rpcconnect=<ip>\", strprintf(_(\"Send commands to node running on <ip> (default: %s)\"), DEFAULT_RPCCONNECT));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Connect to JSON-RPC on <port> (default: %u or testnet: %u)\"), defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcwait\", _(\"Wait for RPC server to start\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n-    strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout during HTTP requests (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n+    strUsage += HelpMessageOpt(\"-rpcclienttimeout=<n>\", strprintf(_(\"Timeout in seconds during HTTP requests, or 0 for no timeout. (default: %d)\"), DEFAULT_HTTP_CLIENT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-stdin\", _(\"Read extra arguments from standard input, one per line until EOF/Ctrl-D (recommended for sensitive information such as passphrases)\"));\n \n     return strUsage;\n@@ -96,7 +98,7 @@ static int AppInitRPC(int argc, char* argv[])\n         }\n         return EXIT_SUCCESS;\n     }\n-    if (!boost::filesystem::is_directory(GetDataDir(false))) {\n+    if (!fs::is_directory(GetDataDir(false))) {\n         fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", GetArg(\"-datadir\", \"\").c_str());\n         return EXIT_FAILURE;\n     }"
      },
      {
        "sha": "45738b5df83f60be4bd7aa5914e349d0f9e11768",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 19,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -489,22 +489,6 @@ static bool findSighashFlags(int& flags, const std::string& flagStr)\n     return false;\n }\n \n-uint256 ParseHashUO(std::map<std::string,UniValue>& o, std::string strKey)\n-{\n-    if (!o.count(strKey))\n-        return uint256();\n-    return ParseHashUV(o[strKey], strKey);\n-}\n-\n-std::vector<unsigned char> ParseHexUO(std::map<std::string,UniValue>& o, std::string strKey)\n-{\n-    if (!o.count(strKey)) {\n-        std::vector<unsigned char> emptyVec;\n-        return emptyVec;\n-    }\n-    return ParseHexUV(o[strKey], strKey);\n-}\n-\n static CAmount AmountFromValue(const UniValue& value)\n {\n     if (!value.isNum() && !value.isStr())\n@@ -673,11 +657,13 @@ static void MutateTx(CMutableTransaction& tx, const std::string& command,\n         MutateTxDelOutput(tx, commandVal);\n     else if (command == \"outaddr\")\n         MutateTxAddOutAddr(tx, commandVal);\n-    else if (command == \"outpubkey\")\n+    else if (command == \"outpubkey\") {\n+        if (!ecc) { ecc.reset(new Secp256k1Init()); }\n         MutateTxAddOutPubKey(tx, commandVal);\n-    else if (command == \"outmultisig\")\n+    } else if (command == \"outmultisig\") {\n+        if (!ecc) { ecc.reset(new Secp256k1Init()); }\n         MutateTxAddOutMultiSig(tx, commandVal);\n-    else if (command == \"outscript\")\n+    } else if (command == \"outscript\")\n         MutateTxAddOutScript(tx, commandVal);\n     else if (command == \"outdata\")\n         MutateTxAddOutData(tx, commandVal);"
      },
      {
        "sha": "31680a8ec765ca85916f66df1e97ba567aaca72f",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -10,6 +10,7 @@\n #include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"compat.h\"\n+#include \"fs.h\"\n #include \"rpc/server.h\"\n #include \"init.h\"\n #include \"noui.h\"\n@@ -20,7 +21,6 @@\n #include \"utilstrencodings.h\"\n \n #include <boost/algorithm/string/predicate.hpp>\n-#include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n #include <stdio.h>\n@@ -97,7 +97,7 @@ bool AppInit(int argc, char* argv[])\n \n     try\n     {\n-        if (!boost::filesystem::is_directory(GetDataDir(false)))\n+        if (!fs::is_directory(GetDataDir(false)))\n         {\n             fprintf(stderr, \"Error: Specified data directory \\\"%s\\\" does not exist.\\n\", GetArg(\"-datadir\", \"\").c_str());\n             return false;\n@@ -136,17 +136,17 @@ bool AppInit(int argc, char* argv[])\n         if (!AppInitBasicSetup())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            exit(1);\n+            exit(EXIT_FAILURE);\n         }\n         if (!AppInitParameterInteraction())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            exit(1);\n+            exit(EXIT_FAILURE);\n         }\n         if (!AppInitSanityChecks())\n         {\n             // InitError will have been called with detailed error, which ends up on console\n-            exit(1);\n+            exit(EXIT_FAILURE);\n         }\n         if (GetBoolArg(\"-daemon\", false))\n         {"
      },
      {
        "sha": "ee2c65498070ced771dcbe454eeb68fd10fe5aaa",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -147,7 +147,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n                 // request it.\n                 // This should be rare enough that the extra bandwidth doesn't matter,\n                 // but eating a round-trip due to FillBlock failure would be annoying\n-                // Note that we dont want duplication between extra_txn and mempool to\n+                // Note that we don't want duplication between extra_txn and mempool to\n                 // trigger this case, so we compare witness hashes first\n                 if (txn_available[idit->second] &&\n                         txn_available[idit->second]->GetWitnessHash() != extra_txn[i].second->GetWitnessHash()) {\n@@ -164,7 +164,7 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n             break;\n     }\n \n-    LogPrint(\"cmpctblock\", \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock, SER_NETWORK, PROTOCOL_VERSION));\n+    LogPrint(BCLog::CMPCTBLOCK, \"Initialized PartiallyDownloadedBlock for block %s using a cmpctblock of size %lu\\n\", cmpctblock.header.GetHash().ToString(), GetSerializeSize(cmpctblock, SER_NETWORK, PROTOCOL_VERSION));\n \n     return READ_STATUS_OK;\n }\n@@ -209,10 +209,11 @@ ReadStatus PartiallyDownloadedBlock::FillBlock(CBlock& block, const std::vector<\n         return READ_STATUS_CHECKBLOCK_FAILED;\n     }\n \n-    LogPrint(\"cmpctblock\", \"Successfully reconstructed block %s with %lu txn prefilled, %lu txn from mempool (incl at least %lu from extra pool) and %lu txn requested\\n\", hash.ToString(), prefilled_count, mempool_count, extra_count, vtx_missing.size());\n+    LogPrint(BCLog::CMPCTBLOCK, \"Successfully reconstructed block %s with %lu txn prefilled, %lu txn from mempool (incl at least %lu from extra pool) and %lu txn requested\\n\", hash.ToString(), prefilled_count, mempool_count, extra_count, vtx_missing.size());\n     if (vtx_missing.size() < 5) {\n-        for (const auto& tx : vtx_missing)\n-            LogPrint(\"cmpctblock\", \"Reconstructed block %s required tx %s\\n\", hash.ToString(), tx->GetHash().ToString());\n+        for (const auto& tx : vtx_missing) {\n+            LogPrint(BCLog::CMPCTBLOCK, \"Reconstructed block %s required tx %s\\n\", hash.ToString(), tx->GetHash().ToString());\n+        }\n     }\n \n     return READ_STATUS_OK;"
      },
      {
        "sha": "7ed982c984ce906f53cda4ac39855265dc838080",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -19,7 +19,7 @@\n #define LN2SQUARED 0.4804530139182014246671025263266649717305529515945455\n #define LN2 0.6931471805599453094172321214581765680755001343602552\n \n-CBloomFilter::CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweakIn, unsigned char nFlagsIn) :\n+CBloomFilter::CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweakIn, unsigned char nFlagsIn) :\n     /**\n      * The ideal size for a bloom filter with a given number of elements and false positive rate is:\n      * - nElements * log(fp rate) / ln(2)^2\n@@ -40,7 +40,7 @@ CBloomFilter::CBloomFilter(unsigned int nElements, double nFPRate, unsigned int\n }\n \n // Private constructor used by CRollingBloomFilter\n-CBloomFilter::CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweakIn) :\n+CBloomFilter::CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweakIn) :\n     vData((unsigned int)(-1  / LN2SQUARED * nElements * log(nFPRate)) / 8),\n     isFull(false),\n     isEmpty(true),\n@@ -120,7 +120,7 @@ void CBloomFilter::clear()\n     isEmpty = true;\n }\n \n-void CBloomFilter::reset(unsigned int nNewTweak)\n+void CBloomFilter::reset(const unsigned int nNewTweak)\n {\n     clear();\n     nTweak = nNewTweak;\n@@ -214,7 +214,7 @@ void CBloomFilter::UpdateEmptyFull()\n     isEmpty = empty;\n }\n \n-CRollingBloomFilter::CRollingBloomFilter(unsigned int nElements, double fpRate)\n+CRollingBloomFilter::CRollingBloomFilter(const unsigned int nElements, const double fpRate)\n {\n     double logFpRate = log(fpRate);\n     /* The optimal number of hash functions is log(fpRate) / log(0.5), but\n@@ -254,8 +254,8 @@ void CRollingBloomFilter::insert(const std::vector<unsigned char>& vKey)\n         if (nGeneration == 4) {\n             nGeneration = 1;\n         }\n-        uint64_t nGenerationMask1 = -(uint64_t)(nGeneration & 1);\n-        uint64_t nGenerationMask2 = -(uint64_t)(nGeneration >> 1);\n+        uint64_t nGenerationMask1 = 0 - (uint64_t)(nGeneration & 1);\n+        uint64_t nGenerationMask2 = 0 - (uint64_t)(nGeneration >> 1);\n         /* Wipe old entries that used this generation number. */\n         for (uint32_t p = 0; p < data.size(); p += 2) {\n             uint64_t p1 = data[p], p2 = data[p + 1];"
      },
      {
        "sha": "7ca96822396b909ec076e7f2f562b7d0f1766133",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -54,7 +54,7 @@ class CBloomFilter\n     unsigned int Hash(unsigned int nHashNum, const std::vector<unsigned char>& vDataToHash) const;\n \n     // Private constructor for CRollingBloomFilter, no restrictions on size\n-    CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweak);\n+    CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak);\n     friend class CRollingBloomFilter;\n \n public:\n@@ -67,7 +67,7 @@ class CBloomFilter\n      * It should generally always be a random value (and is largely only exposed for unit testing)\n      * nFlags should be one of the BLOOM_UPDATE_* enums (not _MASK)\n      */\n-    CBloomFilter(unsigned int nElements, double nFPRate, unsigned int nTweak, unsigned char nFlagsIn);\n+    CBloomFilter(const unsigned int nElements, const double nFPRate, const unsigned int nTweak, unsigned char nFlagsIn);\n     CBloomFilter() : isFull(true), isEmpty(false), nHashFuncs(0), nTweak(0), nFlags(0) {}\n \n     ADD_SERIALIZE_METHODS;\n@@ -89,7 +89,7 @@ class CBloomFilter\n     bool contains(const uint256& hash) const;\n \n     void clear();\n-    void reset(unsigned int nNewTweak);\n+    void reset(const unsigned int nNewTweak);\n \n     //! True if the size is <= MAX_BLOOM_FILTER_SIZE and the number of hash functions is <= MAX_HASH_FUNCS\n     //! (catch a filter which was just deserialized which was too big)\n@@ -122,7 +122,7 @@ class CRollingBloomFilter\n     // A random bloom filter calls GetRand() at creation time.\n     // Don't create global CRollingBloomFilter objects, as they may be\n     // constructed before the randomizer is properly initialized.\n-    CRollingBloomFilter(unsigned int nElements, double nFPRate);\n+    CRollingBloomFilter(const unsigned int nElements, const double nFPRate);\n \n     void insert(const std::vector<unsigned char>& vKey);\n     void insert(const uint256& hash);"
      },
      {
        "sha": "de120d2d75d1a1b2127f5f221d9922327683848f",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 16,
        "deletions": 2,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -14,6 +14,20 @@\n \n #include <vector>\n \n+/**\n+ * Maximum amount of time that a block timestamp is allowed to exceed the\n+ * current network-adjusted time before the block will be accepted.\n+ */\n+static const int64_t MAX_FUTURE_BLOCK_TIME = 2 * 60 * 60;\n+\n+/**\n+ * Timestamp window used as a grace period by code that compares external\n+ * timestamps (such as timestamps passed to RPCs, or wallet key creation times)\n+ * to block timestamps. This should be set at least as high as\n+ * MAX_FUTURE_BLOCK_TIME.\n+ */\n+static const int64_t TIMESTAMP_WINDOW = MAX_FUTURE_BLOCK_TIME;\n+\n class CBlockFileInfo\n {\n public:\n@@ -367,9 +381,9 @@ class CDiskBlockIndex : public CBlockIndex\n \n     template <typename Stream, typename Operation>\n     inline void SerializationOp(Stream& s, Operation ser_action) {\n-        int nVersion = s.GetVersion();\n+        int _nVersion = s.GetVersion();\n         if (!(s.GetType() & SER_GETHASH))\n-            READWRITE(VARINT(nVersion));\n+            READWRITE(VARINT(_nVersion));\n \n         READWRITE(VARINT(nHeight));\n         READWRITE(VARINT(nStatus));"
      },
      {
        "sha": "5055fb3e0a33aabac38d7e48111202cac40b97f2",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 24,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -55,6 +55,12 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n+void CChainParams::UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+{\n+    consensus.vDeployments[d].nStartTime = nStartTime;\n+    consensus.vDeployments[d].nTimeout = nTimeout;\n+}\n+\n /**\n  * Main network\n  */\n@@ -125,6 +131,7 @@ class CMainParams : public CChainParams {\n         vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\")); // Luke Dashjr\n         vSeeds.push_back(CDNSSeedData(\"bitcoinstats.com\", \"seed.bitcoinstats.com\", true)); // Christian Decker, supports x1 - xf\n         vSeeds.push_back(CDNSSeedData(\"bitcoin.jonasschnelli.ch\", \"seed.bitcoin.jonasschnelli.ch\", true)); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.push_back(CDNSSeedData(\"petertodd.org\", \"seed.btc.petertodd.org\", true)); // Peter Todd, only supports x1, x5, x9, and xd\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n@@ -134,7 +141,6 @@ class CMainParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_main, pnSeed6_main + ARRAYLEN(pnSeed6_main));\n \n-        fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = true;\n         fMineBlocksOnDemand = false;\n@@ -165,7 +171,6 @@ class CMainParams : public CChainParams {\n         };\n     }\n };\n-static CMainParams mainParams;\n \n /**\n  * Testnet (v3)\n@@ -234,7 +239,6 @@ class CTestNetParams : public CChainParams {\n \n         vFixedSeeds = std::vector<SeedSpec6>(pnSeed6_test, pnSeed6_test + ARRAYLEN(pnSeed6_test));\n \n-        fMiningRequiresPeers = true;\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = false;\n@@ -254,7 +258,6 @@ class CTestNetParams : public CChainParams {\n \n     }\n };\n-static CTestNetParams testNetParams;\n \n /**\n  * Regression test\n@@ -306,7 +309,6 @@ class CRegTestParams : public CChainParams {\n         vFixedSeeds.clear(); //!< Regtest mode doesn't have any fixed seeds.\n         vSeeds.clear();      //!< Regtest mode doesn't have any DNS seeds.\n \n-        fMiningRequiresPeers = false;\n         fDefaultConsistencyChecks = true;\n         fRequireStandard = false;\n         fMineBlocksOnDemand = true;\n@@ -328,42 +330,34 @@ class CRegTestParams : public CChainParams {\n         base58Prefixes[EXT_PUBLIC_KEY] = boost::assign::list_of(0x04)(0x35)(0x87)(0xCF).convert_to_container<std::vector<unsigned char> >();\n         base58Prefixes[EXT_SECRET_KEY] = boost::assign::list_of(0x04)(0x35)(0x83)(0x94).convert_to_container<std::vector<unsigned char> >();\n     }\n-\n-    void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n-    {\n-        consensus.vDeployments[d].nStartTime = nStartTime;\n-        consensus.vDeployments[d].nTimeout = nTimeout;\n-    }\n };\n-static CRegTestParams regTestParams;\n \n-static CChainParams *pCurrentParams = 0;\n+static std::unique_ptr<CChainParams> globalChainParams;\n \n const CChainParams &Params() {\n-    assert(pCurrentParams);\n-    return *pCurrentParams;\n+    assert(globalChainParams);\n+    return *globalChainParams;\n }\n \n-CChainParams& Params(const std::string& chain)\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-            return mainParams;\n+        return std::unique_ptr<CChainParams>(new CMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n-            return testNetParams;\n+        return std::unique_ptr<CChainParams>(new CTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-            return regTestParams;\n-    else\n-        throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n+        return std::unique_ptr<CChainParams>(new CRegTestParams());\n+    throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n void SelectParams(const std::string& network)\n {\n     SelectBaseParams(network);\n-    pCurrentParams = &Params(network);\n+    globalChainParams = CreateChainParams(network);\n }\n \n-void UpdateRegtestBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n+void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout)\n {\n-    regTestParams.UpdateBIP9Parameters(d, nStartTime, nTimeout);\n+    globalChainParams->UpdateBIP9Parameters(d, nStartTime, nTimeout);\n }\n  "
      },
      {
        "sha": "e5312d1080b3ce183a7ad2799a39e206ec5abf72",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 10,
        "deletions": 9,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,6 +11,7 @@\n #include \"primitives/block.h\"\n #include \"protocol.h\"\n \n+#include <memory>\n #include <vector>\n \n struct CDNSSeedData {\n@@ -61,8 +62,6 @@ class CChainParams\n     int GetDefaultPort() const { return nDefaultPort; }\n \n     const CBlock& GenesisBlock() const { return genesis; }\n-    /** Make miner wait to have peers to avoid wasting work */\n-    bool MiningRequiresPeers() const { return fMiningRequiresPeers; }\n     /** Default value for -checkmempool and -checkblockindex argument */\n     bool DefaultConsistencyChecks() const { return fDefaultConsistencyChecks; }\n     /** Policy: Filter transactions that do not match well-defined patterns */\n@@ -77,6 +76,7 @@ class CChainParams\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n     const CCheckpointData& Checkpoints() const { return checkpointData; }\n     const ChainTxData& TxData() const { return chainTxData; }\n+    void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n protected:\n     CChainParams() {}\n \n@@ -89,7 +89,6 @@ class CChainParams\n     std::string strNetworkID;\n     CBlock genesis;\n     std::vector<SeedSpec6> vFixedSeeds;\n-    bool fMiningRequiresPeers;\n     bool fDefaultConsistencyChecks;\n     bool fRequireStandard;\n     bool fMineBlocksOnDemand;\n@@ -98,15 +97,17 @@ class CChainParams\n };\n \n /**\n- * Return the currently selected parameters. This won't change after app\n- * startup, except for unit tests.\n+ * Creates and returns a std::unique_ptr<CChainParams> of the chosen chain.\n+ * @returns a CChainParams* of the chosen chain.\n+ * @throws a std::runtime_error if the chain is not supported.\n  */\n-const CChainParams &Params();\n+std::unique_ptr<CChainParams> CreateChainParams(const std::string& chain);\n \n /**\n- * @returns CChainParams for the given BIP70 chain name.\n+ * Return the currently selected parameters. This won't change after app\n+ * startup, except for unit tests.\n  */\n-CChainParams& Params(const std::string& chain);\n+const CChainParams &Params();\n \n /**\n  * Sets the params returned by Params() to those for the given BIP70 chain name.\n@@ -117,6 +118,6 @@ void SelectParams(const std::string& chain);\n /**\n  * Allows modifying the BIP9 regtest parameters.\n  */\n-void UpdateRegtestBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n+void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n \n #endif // BITCOIN_CHAINPARAMS_H"
      },
      {
        "sha": "43c9a13c5468b8e01e1f25f5d9b91d6aa8d8a392",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 16,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -35,7 +35,6 @@ class CBaseMainParams : public CBaseChainParams\n         nRPCPort = 8332;\n     }\n };\n-static CBaseMainParams mainParams;\n \n /**\n  * Testnet (v3)\n@@ -49,7 +48,6 @@ class CBaseTestNetParams : public CBaseChainParams\n         strDataDir = \"testnet3\";\n     }\n };\n-static CBaseTestNetParams testNetParams;\n \n /*\n  * Regression test\n@@ -63,31 +61,30 @@ class CBaseRegTestParams : public CBaseChainParams\n         strDataDir = \"regtest\";\n     }\n };\n-static CBaseRegTestParams regTestParams;\n \n-static CBaseChainParams* pCurrentBaseParams = 0;\n+static std::unique_ptr<CBaseChainParams> globalChainBaseParams;\n \n const CBaseChainParams& BaseParams()\n {\n-    assert(pCurrentBaseParams);\n-    return *pCurrentBaseParams;\n+    assert(globalChainBaseParams);\n+    return *globalChainBaseParams;\n }\n \n-CBaseChainParams& BaseParams(const std::string& chain)\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain)\n {\n     if (chain == CBaseChainParams::MAIN)\n-        return mainParams;\n+        return std::unique_ptr<CBaseChainParams>(new CBaseMainParams());\n     else if (chain == CBaseChainParams::TESTNET)\n-        return testNetParams;\n+        return std::unique_ptr<CBaseChainParams>(new CBaseTestNetParams());\n     else if (chain == CBaseChainParams::REGTEST)\n-        return regTestParams;\n+        return std::unique_ptr<CBaseChainParams>(new CBaseRegTestParams());\n     else\n         throw std::runtime_error(strprintf(\"%s: Unknown chain %s.\", __func__, chain));\n }\n \n void SelectBaseParams(const std::string& chain)\n {\n-    pCurrentBaseParams = &BaseParams(chain);\n+    globalChainBaseParams = CreateBaseChainParams(chain);\n }\n \n std::string ChainNameFromCommandLine()\n@@ -103,8 +100,3 @@ std::string ChainNameFromCommandLine()\n         return CBaseChainParams::TESTNET;\n     return CBaseChainParams::MAIN;\n }\n-\n-bool AreBaseParamsConfigured()\n-{\n-    return pCurrentBaseParams != NULL;\n-}"
      },
      {
        "sha": "fc101f5b774c23a483c26dab115ac2675514ec11",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_CHAINPARAMSBASE_H\n #define BITCOIN_CHAINPARAMSBASE_H\n \n+#include <memory>\n #include <string>\n #include <vector>\n \n@@ -30,6 +31,13 @@ class CBaseChainParams\n     std::string strDataDir;\n };\n \n+/**\n+ * Creates and returns a std::unique_ptr<CBaseChainParams> of the chosen chain.\n+ * @returns a CBaseChainParams* of the chosen chain.\n+ * @throws a std::runtime_error if the chain is not supported.\n+ */\n+std::unique_ptr<CBaseChainParams> CreateBaseChainParams(const std::string& chain);\n+\n /**\n  * Append the help messages for the chainparams options to the\n  * parameter string.\n@@ -42,8 +50,6 @@ void AppendParamsHelpMessages(std::string& strUsage, bool debugHelp=true);\n  */\n const CBaseChainParams& BaseParams();\n \n-CBaseChainParams& BaseParams(const std::string& chain);\n-\n /** Sets the params returned by Params() to those for the given network. */\n void SelectBaseParams(const std::string& chain);\n \n@@ -53,10 +59,4 @@ void SelectBaseParams(const std::string& chain);\n  */\n std::string ChainNameFromCommandLine();\n \n-/**\n- * Return true if SelectBaseParamsFromCommandLine() has been called to select\n- * a network.\n- */\n-bool AreBaseParamsConfigured();\n-\n #endif // BITCOIN_CHAINPARAMSBASE_H"
      },
      {
        "sha": "63c104c02a114a4fa350de9ce6a58675a8b224db",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 14,
        "deletions": 10,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -5,6 +5,8 @@\n #ifndef BITCOIN_CHECKQUEUE_H\n #define BITCOIN_CHECKQUEUE_H\n \n+#include \"sync.h\"\n+\n #include <algorithm>\n #include <vector>\n \n@@ -127,6 +129,9 @@ class CCheckQueue\n     }\n \n public:\n+    //! Mutex to ensure only one concurrent CCheckQueueControl\n+    boost::mutex ControlMutex;\n+\n     //! Create a new check queue\n     CCheckQueue(unsigned int nBatchSizeIn) : nIdle(0), nTotal(0), fAllOk(true), nTodo(0), fQuit(false), nBatchSize(nBatchSizeIn) {}\n \n@@ -161,12 +166,6 @@ class CCheckQueue\n     {\n     }\n \n-    bool IsIdle()\n-    {\n-        boost::unique_lock<boost::mutex> lock(mutex);\n-        return (nTotal == nIdle && nTodo == 0 && fAllOk == true);\n-    }\n-\n };\n \n /** \n@@ -177,16 +176,18 @@ template <typename T>\n class CCheckQueueControl\n {\n private:\n-    CCheckQueue<T>* pqueue;\n+    CCheckQueue<T> * const pqueue;\n     bool fDone;\n \n public:\n-    CCheckQueueControl(CCheckQueue<T>* pqueueIn) : pqueue(pqueueIn), fDone(false)\n+    CCheckQueueControl() = delete;\n+    CCheckQueueControl(const CCheckQueueControl&) = delete;\n+    CCheckQueueControl& operator=(const CCheckQueueControl&) = delete;\n+    explicit CCheckQueueControl(CCheckQueue<T> * const pqueueIn) : pqueue(pqueueIn), fDone(false)\n     {\n         // passed queue is supposed to be unused, or NULL\n         if (pqueue != NULL) {\n-            bool isIdle = pqueue->IsIdle();\n-            assert(isIdle);\n+            ENTER_CRITICAL_SECTION(pqueue->ControlMutex);\n         }\n     }\n \n@@ -209,6 +210,9 @@ class CCheckQueueControl\n     {\n         if (!fDone)\n             Wait();\n+        if (pqueue != NULL) {\n+            LEAVE_CRITICAL_SECTION(pqueue->ControlMutex);\n+        }\n     }\n };\n "
      },
      {
        "sha": "b2e33abf33ba5f71efe95068e6bbbce63562dac9",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -295,25 +295,6 @@ bool CCoinsViewCache::HaveInputs(const CTransaction& tx) const\n     return true;\n }\n \n-double CCoinsViewCache::GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const\n-{\n-    inChainInputValue = 0;\n-    if (tx.IsCoinBase())\n-        return 0.0;\n-    double dResult = 0.0;\n-    BOOST_FOREACH(const CTxIn& txin, tx.vin)\n-    {\n-        const CCoins* coins = AccessCoins(txin.prevout.hash);\n-        assert(coins);\n-        if (!coins->IsAvailable(txin.prevout.n)) continue;\n-        if (coins->nHeight <= nHeight) {\n-            dResult += (double)(coins->vout[txin.prevout.n].nValue) * (nHeight-coins->nHeight);\n-            inChainInputValue += coins->vout[txin.prevout.n].nValue;\n-        }\n-    }\n-    return tx.ComputePriority(dResult);\n-}\n-\n CCoinsModifier::CCoinsModifier(CCoinsViewCache& cache_, CCoinsMap::iterator it_, size_t usage) : cache(cache_), it(it_), cachedCoinUsage(usage) {\n     assert(!cache.hasModifier);\n     cache.hasModifier = true;"
      },
      {
        "sha": "065bae56e9e47ec1eba7c8911a6b4402610e470e",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,7 @@\n #ifndef BITCOIN_COINS_H\n #define BITCOIN_COINS_H\n \n+#include \"primitives/transaction.h\"\n #include \"compressor.h\"\n #include \"core_memusage.h\"\n #include \"hash.h\"\n@@ -17,7 +18,7 @@\n #include <stdint.h>\n \n #include <boost/foreach.hpp>\n-#include <boost/unordered_map.hpp>\n+#include <unordered_map>\n \n /** \n  * Pruned version of CTransaction: only retains metadata and unspent transaction outputs\n@@ -279,7 +280,7 @@ struct CCoinsCacheEntry\n     CCoinsCacheEntry() : coins(), flags(0) {}\n };\n \n-typedef boost::unordered_map<uint256, CCoinsCacheEntry, SaltedTxidHasher> CCoinsMap;\n+typedef std::unordered_map<uint256, CCoinsCacheEntry, SaltedTxidHasher> CCoinsMap;\n \n /** Cursor for iterating over CoinsView state */\n class CCoinsViewCursor\n@@ -290,7 +291,6 @@ class CCoinsViewCursor\n \n     virtual bool GetKey(uint256 &key) const = 0;\n     virtual bool GetValue(CCoins &coins) const = 0;\n-    /* Don't care about GetKeySize here */\n     virtual unsigned int GetValueSize() const = 0;\n \n     virtual bool Valid() const = 0;\n@@ -460,13 +460,6 @@ class CCoinsViewCache : public CCoinsViewBacked\n     //! Check whether all prevouts of the transaction are present in the UTXO set represented by this view\n     bool HaveInputs(const CTransaction& tx) const;\n \n-    /**\n-     * Return priority of tx at height nHeight. Also calculate the sum of the values of the inputs\n-     * that are already in the chain.  These are the inputs that will age and increase priority as\n-     * new blocks are added to the chain.\n-     */\n-    double GetPriority(const CTransaction &tx, int nHeight, CAmount &inChainInputValue) const;\n-\n     const CTxOut &GetOutputFor(const CTxIn& input) const;\n \n     friend class CCoinsModifier;"
      },
      {
        "sha": "e76ab94c82bc18e02f7c76729187668d7f1ed885",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 2,
        "deletions": 9,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -47,10 +47,8 @@\n #include <unistd.h>\n #endif\n \n-#ifdef WIN32\n-#define MSG_DONTWAIT        0\n-#else\n-typedef u_int SOCKET;\n+#ifndef WIN32\n+typedef unsigned int SOCKET;\n #include \"errno.h\"\n #define WSAGetLastError()   errno\n #define WSAEINVAL           EINVAL\n@@ -74,11 +72,6 @@ typedef u_int SOCKET;\n #define MAX_PATH            1024\n #endif\n \n-// As Solaris does not have the MSG_NOSIGNAL flag for send(2) syscall, it is defined as 0\n-#if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n-#define MSG_NOSIGNAL 0\n-#endif\n-\n #if HAVE_DECL_STRNLEN == 0\n size_t strnlen( const char *start, size_t max_len);\n #endif // HAVE_DECL_STRNLEN"
      },
      {
        "sha": "043f4cf95c2619c992519529af4799471eeeda94",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "added",
        "additions": 246,
        "deletions": 0,
        "changes": 246,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,246 @@\n+// Copyright (c) 2017-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"tx_verify.h\"\n+\n+#include \"consensus.h\"\n+#include \"primitives/transaction.h\"\n+#include \"script/interpreter.h\"\n+#include \"validation.h\"\n+\n+// TODO remove the following dependencies\n+#include \"chain.h\"\n+#include \"coins.h\"\n+#include \"utilmoneystr.h\"\n+ \n+bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime)\n+{\n+    if (tx.nLockTime == 0)\n+        return true;\n+    if ((int64_t)tx.nLockTime < ((int64_t)tx.nLockTime < LOCKTIME_THRESHOLD ? (int64_t)nBlockHeight : nBlockTime))\n+        return true;\n+    for (const auto& txin : tx.vin) {\n+        if (!(txin.nSequence == CTxIn::SEQUENCE_FINAL))\n+            return false;\n+    }\n+    return true;\n+}\n+\n+std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\n+{\n+    assert(prevHeights->size() == tx.vin.size());\n+\n+    // Will be set to the equivalent height- and time-based nLockTime\n+    // values that would be necessary to satisfy all relative lock-\n+    // time constraints given our view of block chain history.\n+    // The semantics of nLockTime are the last invalid height/time, so\n+    // use -1 to have the effect of any height or time being valid.\n+    int nMinHeight = -1;\n+    int64_t nMinTime = -1;\n+\n+    // tx.nVersion is signed integer so requires cast to unsigned otherwise\n+    // we would be doing a signed comparison and half the range of nVersion\n+    // wouldn't support BIP 68.\n+    bool fEnforceBIP68 = static_cast<uint32_t>(tx.nVersion) >= 2\n+                      && flags & LOCKTIME_VERIFY_SEQUENCE;\n+\n+    // Do not enforce sequence numbers as a relative lock time\n+    // unless we have been instructed to\n+    if (!fEnforceBIP68) {\n+        return std::make_pair(nMinHeight, nMinTime);\n+    }\n+\n+    for (size_t txinIndex = 0; txinIndex < tx.vin.size(); txinIndex++) {\n+        const CTxIn& txin = tx.vin[txinIndex];\n+\n+        // Sequence numbers with the most significant bit set are not\n+        // treated as relative lock-times, nor are they given any\n+        // consensus-enforced meaning at this point.\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_DISABLE_FLAG) {\n+            // The height of this input is not relevant for sequence locks\n+            (*prevHeights)[txinIndex] = 0;\n+            continue;\n+        }\n+\n+        int nCoinHeight = (*prevHeights)[txinIndex];\n+\n+        if (txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG) {\n+            int64_t nCoinTime = block.GetAncestor(std::max(nCoinHeight-1, 0))->GetMedianTimePast();\n+            // NOTE: Subtract 1 to maintain nLockTime semantics\n+            // BIP 68 relative lock times have the semantics of calculating\n+            // the first block or time at which the transaction would be\n+            // valid. When calculating the effective block time or height\n+            // for the entire transaction, we switch to using the\n+            // semantics of nLockTime which is the last invalid block\n+            // time or height.  Thus we subtract 1 from the calculated\n+            // time or height.\n+\n+            // Time-based relative lock-times are measured from the\n+            // smallest allowed timestamp of the block containing the\n+            // txout being spent, which is the median time past of the\n+            // block prior.\n+            nMinTime = std::max(nMinTime, nCoinTime + (int64_t)((txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) << CTxIn::SEQUENCE_LOCKTIME_GRANULARITY) - 1);\n+        } else {\n+            nMinHeight = std::max(nMinHeight, nCoinHeight + (int)(txin.nSequence & CTxIn::SEQUENCE_LOCKTIME_MASK) - 1);\n+        }\n+    }\n+\n+    return std::make_pair(nMinHeight, nMinTime);\n+}\n+\n+bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair)\n+{\n+    assert(block.pprev);\n+    int64_t nBlockTime = block.pprev->GetMedianTimePast();\n+    if (lockPair.first >= block.nHeight || lockPair.second >= nBlockTime)\n+        return false;\n+\n+    return true;\n+}\n+\n+bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block)\n+{\n+    return EvaluateSequenceLocks(block, CalculateSequenceLocks(tx, flags, prevHeights, block));\n+}\n+\n+unsigned int GetLegacySigOpCount(const CTransaction& tx)\n+{\n+    unsigned int nSigOps = 0;\n+    for (const auto& txin : tx.vin)\n+    {\n+        nSigOps += txin.scriptSig.GetSigOpCount(false);\n+    }\n+    for (const auto& txout : tx.vout)\n+    {\n+        nSigOps += txout.scriptPubKey.GetSigOpCount(false);\n+    }\n+    return nSigOps;\n+}\n+\n+unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& inputs)\n+{\n+    if (tx.IsCoinBase())\n+        return 0;\n+\n+    unsigned int nSigOps = 0;\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut &prevout = inputs.GetOutputFor(tx.vin[i]);\n+        if (prevout.scriptPubKey.IsPayToScriptHash())\n+            nSigOps += prevout.scriptPubKey.GetSigOpCount(tx.vin[i].scriptSig);\n+    }\n+    return nSigOps;\n+}\n+\n+int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, int flags)\n+{\n+    int64_t nSigOps = GetLegacySigOpCount(tx) * WITNESS_SCALE_FACTOR;\n+\n+    if (tx.IsCoinBase())\n+        return nSigOps;\n+\n+    if (flags & SCRIPT_VERIFY_P2SH) {\n+        nSigOps += GetP2SHSigOpCount(tx, inputs) * WITNESS_SCALE_FACTOR;\n+    }\n+\n+    for (unsigned int i = 0; i < tx.vin.size(); i++)\n+    {\n+        const CTxOut &prevout = inputs.GetOutputFor(tx.vin[i]);\n+        nSigOps += CountWitnessSigOps(tx.vin[i].scriptSig, prevout.scriptPubKey, &tx.vin[i].scriptWitness, flags);\n+    }\n+    return nSigOps;\n+}\n+\n+bool CheckTransaction(const CTransaction& tx, CValidationState &state, bool fCheckDuplicateInputs)\n+{\n+    // Basic checks that don't depend on any context\n+    if (tx.vin.empty())\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vin-empty\");\n+    if (tx.vout.empty())\n+        return state.DoS(10, false, REJECT_INVALID, \"bad-txns-vout-empty\");\n+    // Size limits (this doesn't take the witness into account, as that hasn't been checked for malleability)\n+    if (::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION | SERIALIZE_TRANSACTION_NO_WITNESS) > MAX_BLOCK_BASE_SIZE)\n+        return state.DoS(100, false, REJECT_INVALID, \"bad-txns-oversize\");\n+\n+    // Check for negative or overflow output values\n+    CAmount nValueOut = 0;\n+    for (const auto& txout : tx.vout)\n+    {\n+        if (txout.nValue < 0)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-negative\");\n+        if (txout.nValue > MAX_MONEY)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-vout-toolarge\");\n+        nValueOut += txout.nValue;\n+        if (!MoneyRange(nValueOut))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-txouttotal-toolarge\");\n+    }\n+\n+    // Check for duplicate inputs - note that this check is slow so we skip it in CheckBlock\n+    if (fCheckDuplicateInputs) {\n+        std::set<COutPoint> vInOutPoints;\n+        for (const auto& txin : tx.vin)\n+        {\n+            if (!vInOutPoints.insert(txin.prevout).second)\n+                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputs-duplicate\");\n+        }\n+    }\n+\n+    if (tx.IsCoinBase())\n+    {\n+        if (tx.vin[0].scriptSig.size() < 2 || tx.vin[0].scriptSig.size() > 100)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-cb-length\");\n+    }\n+    else\n+    {\n+        for (const auto& txin : tx.vin)\n+            if (txin.prevout.IsNull())\n+                return state.DoS(10, false, REJECT_INVALID, \"bad-txns-prevout-null\");\n+    }\n+\n+    return true;\n+}\n+\n+bool Consensus::CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight)\n+{\n+        // This doesn't trigger the DoS code on purpose; if it did, it would make it easier\n+        // for an attacker to attempt to split the network.\n+        if (!inputs.HaveInputs(tx))\n+            return state.Invalid(false, 0, \"\", \"Inputs unavailable\");\n+\n+        CAmount nValueIn = 0;\n+        CAmount nFees = 0;\n+        for (unsigned int i = 0; i < tx.vin.size(); i++)\n+        {\n+            const COutPoint &prevout = tx.vin[i].prevout;\n+            const CCoins *coins = inputs.AccessCoins(prevout.hash);\n+            assert(coins);\n+\n+            // If prev is coinbase, check that it's matured\n+            if (coins->IsCoinBase()) {\n+                if (nSpendHeight - coins->nHeight < COINBASE_MATURITY)\n+                    return state.Invalid(false,\n+                        REJECT_INVALID, \"bad-txns-premature-spend-of-coinbase\",\n+                        strprintf(\"tried to spend coinbase at depth %d\", nSpendHeight - coins->nHeight));\n+            }\n+\n+            // Check for negative or overflow input values\n+            nValueIn += coins->vout[prevout.n].nValue;\n+            if (!MoneyRange(coins->vout[prevout.n].nValue) || !MoneyRange(nValueIn))\n+                return state.DoS(100, false, REJECT_INVALID, \"bad-txns-inputvalues-outofrange\");\n+\n+        }\n+\n+        if (nValueIn < tx.GetValueOut())\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-in-belowout\", false,\n+                strprintf(\"value in (%s) < value out (%s)\", FormatMoney(nValueIn), FormatMoney(tx.GetValueOut())));\n+\n+        // Tally transaction fees\n+        CAmount nTxFee = nValueIn - tx.GetValueOut();\n+        if (nTxFee < 0)\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-negative\");\n+        nFees += nTxFee;\n+        if (!MoneyRange(nFees))\n+            return state.DoS(100, false, REJECT_INVALID, \"bad-txns-fee-outofrange\");\n+    return true;\n+}"
      },
      {
        "sha": "d46d3294ca25039e8ebdaf1d0cd4d73abebb3597",
        "filename": "src/consensus/tx_verify.h",
        "status": "added",
        "additions": 78,
        "deletions": 0,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,78 @@\n+// Copyright (c) 2017-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_TX_VERIFY_H\n+#define BITCOIN_CONSENSUS_TX_VERIFY_H\n+\n+#include <stdint.h>\n+#include <vector>\n+\n+class CBlockIndex;\n+class CCoinsViewCache;\n+class CTransaction;\n+class CValidationState;\n+\n+/** Transaction validation functions */\n+\n+/** Context-independent validity checks */\n+bool CheckTransaction(const CTransaction& tx, CValidationState& state, bool fCheckDuplicateInputs=true);\n+\n+namespace Consensus {\n+/**\n+ * Check whether all inputs of this transaction are valid (no double spends and amounts)\n+ * This does not modify the UTXO set. This does not check scripts and sigs.\n+ * Preconditions: tx.IsCoinBase() is false.\n+ */\n+bool CheckTxInputs(const CTransaction& tx, CValidationState& state, const CCoinsViewCache& inputs, int nSpendHeight);\n+} // namespace Consensus\n+\n+/** Auxiliary functions for transaction validation (ideally should not be exposed) */\n+\n+/**\n+ * Count ECDSA signature operations the old-fashioned (pre-0.6) way\n+ * @return number of sigops this transaction's outputs will produce when spent\n+ * @see CTransaction::FetchInputs\n+ */\n+unsigned int GetLegacySigOpCount(const CTransaction& tx);\n+\n+/**\n+ * Count ECDSA signature operations in pay-to-script-hash inputs.\n+ * \n+ * @param[in] mapInputs Map of previous transactions that have outputs we're spending\n+ * @return maximum number of sigops required to validate this transaction's inputs\n+ * @see CTransaction::FetchInputs\n+ */\n+unsigned int GetP2SHSigOpCount(const CTransaction& tx, const CCoinsViewCache& mapInputs);\n+\n+/**\n+ * Compute total signature operation cost of a transaction.\n+ * @param[in] tx     Transaction for which we are computing the cost\n+ * @param[in] inputs Map of previous transactions that have outputs we're spending\n+ * @param[out] flags Script verification flags\n+ * @return Total signature operation cost of tx\n+ */\n+int64_t GetTransactionSigOpCost(const CTransaction& tx, const CCoinsViewCache& inputs, int flags);\n+\n+/**\n+ * Check if transaction is final and can be included in a block with the\n+ * specified height and time. Consensus critical.\n+ */\n+bool IsFinalTx(const CTransaction &tx, int nBlockHeight, int64_t nBlockTime);\n+\n+/**\n+ * Calculates the block height and previous block's median time past at\n+ * which the transaction will be considered final in the context of BIP 68.\n+ * Also removes from the vector of input heights any entries which did not\n+ * correspond to sequence locked inputs as they do not affect the calculation.\n+ */\n+std::pair<int, int64_t> CalculateSequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block);\n+\n+bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> lockPair);\n+/**\n+ * Check if transaction is final per BIP 68 sequence numbers and can be included in a block.\n+ * Consensus critical. Takes as input a list of heights at which tx's inputs (in order) confirmed.\n+ */\n+bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block);\n+\n+#endif // BITCOIN_CONSENSUS_TX_VERIFY_H"
      },
      {
        "sha": "d116e617eea1833112778fb322c3db8098ebb42f",
        "filename": "src/core_write.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/core_write.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/core_write.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_write.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -114,9 +114,9 @@ std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDeco\n     return str;\n }\n \n-std::string EncodeHexTx(const CTransaction& tx, const int serialFlags)\n+std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags)\n {\n-    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | serialFlags);\n+    CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION | serializeFlags);\n     ssTx << tx;\n     return HexStr(ssTx.begin(), ssTx.end());\n }\n@@ -151,6 +151,8 @@ void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry)\n     entry.pushKV(\"txid\", tx.GetHash().GetHex());\n     entry.pushKV(\"hash\", tx.GetWitnessHash().GetHex());\n     entry.pushKV(\"version\", tx.nVersion);\n+    entry.pushKV(\"size\", (int)::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION));\n+    entry.pushKV(\"vsize\", (GetTransactionWeight(tx) + WITNESS_SCALE_FACTOR - 1) / WITNESS_SCALE_FACTOR);\n     entry.pushKV(\"locktime\", (int64_t)tx.nLockTime);\n \n     UniValue vin(UniValue::VARR);"
      },
      {
        "sha": "816ae870e138aa54621b2cebd62052b36bf55c2f",
        "filename": "src/crypto/chacha20.cpp",
        "status": "added",
        "additions": 180,
        "deletions": 0,
        "changes": 180,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/chacha20.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/chacha20.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,180 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+// Based on the public domain implementation 'merged' by D. J. Bernstein\n+// See https://cr.yp.to/chacha.html.\n+\n+#include \"crypto/common.h\"\n+#include \"crypto/chacha20.h\"\n+\n+#include <string.h>\n+\n+constexpr static inline uint32_t rotl32(uint32_t v, int c) { return (v << c) | (v >> (32 - c)); }\n+\n+#define QUARTERROUND(a,b,c,d) \\\n+  a += b; d = rotl32(d ^ a, 16); \\\n+  c += d; b = rotl32(b ^ c, 12); \\\n+  a += b; d = rotl32(d ^ a, 8); \\\n+  c += d; b = rotl32(b ^ c, 7);\n+\n+static const unsigned char sigma[] = \"expand 32-byte k\";\n+static const unsigned char tau[] = \"expand 16-byte k\";\n+\n+void ChaCha20::SetKey(const unsigned char* k, size_t keylen)\n+{\n+    const unsigned char *constants;\n+\n+    input[4] = ReadLE32(k + 0);\n+    input[5] = ReadLE32(k + 4);\n+    input[6] = ReadLE32(k + 8);\n+    input[7] = ReadLE32(k + 12);\n+    if (keylen == 32) { /* recommended */\n+        k += 16;\n+        constants = sigma;\n+    } else { /* keylen == 16 */\n+        constants = tau;\n+    }\n+    input[8] = ReadLE32(k + 0);\n+    input[9] = ReadLE32(k + 4);\n+    input[10] = ReadLE32(k + 8);\n+    input[11] = ReadLE32(k + 12);\n+    input[0] = ReadLE32(constants + 0);\n+    input[1] = ReadLE32(constants + 4);\n+    input[2] = ReadLE32(constants + 8);\n+    input[3] = ReadLE32(constants + 12);\n+    input[12] = 0;\n+    input[13] = 0;\n+    input[14] = 0;\n+    input[15] = 0;\n+}\n+\n+ChaCha20::ChaCha20()\n+{\n+    memset(input, 0, sizeof(input));\n+}\n+\n+ChaCha20::ChaCha20(const unsigned char* k, size_t keylen)\n+{\n+    SetKey(k, keylen);\n+}\n+\n+void ChaCha20::SetIV(uint64_t iv)\n+{\n+    input[14] = iv;\n+    input[15] = iv >> 32;\n+}\n+\n+void ChaCha20::Seek(uint64_t pos)\n+{\n+    input[12] = pos;\n+    input[13] = pos >> 32;\n+}\n+\n+void ChaCha20::Output(unsigned char* c, size_t bytes)\n+{\n+    uint32_t x0, x1, x2, x3, x4, x5, x6, x7, x8, x9, x10, x11, x12, x13, x14, x15;\n+    uint32_t j0, j1, j2, j3, j4, j5, j6, j7, j8, j9, j10, j11, j12, j13, j14, j15;\n+    unsigned char *ctarget = NULL;\n+    unsigned char tmp[64];\n+    unsigned int i;\n+\n+    if (!bytes) return;\n+\n+    j0 = input[0];\n+    j1 = input[1];\n+    j2 = input[2];\n+    j3 = input[3];\n+    j4 = input[4];\n+    j5 = input[5];\n+    j6 = input[6];\n+    j7 = input[7];\n+    j8 = input[8];\n+    j9 = input[9];\n+    j10 = input[10];\n+    j11 = input[11];\n+    j12 = input[12];\n+    j13 = input[13];\n+    j14 = input[14];\n+    j15 = input[15];\n+\n+    for (;;) {\n+        if (bytes < 64) {\n+            ctarget = c;\n+            c = tmp;\n+        }\n+        x0 = j0;\n+        x1 = j1;\n+        x2 = j2;\n+        x3 = j3;\n+        x4 = j4;\n+        x5 = j5;\n+        x6 = j6;\n+        x7 = j7;\n+        x8 = j8;\n+        x9 = j9;\n+        x10 = j10;\n+        x11 = j11;\n+        x12 = j12;\n+        x13 = j13;\n+        x14 = j14;\n+        x15 = j15;\n+        for (i = 20;i > 0;i -= 2) {\n+            QUARTERROUND( x0, x4, x8,x12)\n+            QUARTERROUND( x1, x5, x9,x13)\n+            QUARTERROUND( x2, x6,x10,x14)\n+            QUARTERROUND( x3, x7,x11,x15)\n+            QUARTERROUND( x0, x5,x10,x15)\n+            QUARTERROUND( x1, x6,x11,x12)\n+            QUARTERROUND( x2, x7, x8,x13)\n+            QUARTERROUND( x3, x4, x9,x14)\n+        }\n+        x0 += j0;\n+        x1 += j1;\n+        x2 += j2;\n+        x3 += j3;\n+        x4 += j4;\n+        x5 += j5;\n+        x6 += j6;\n+        x7 += j7;\n+        x8 += j8;\n+        x9 += j9;\n+        x10 += j10;\n+        x11 += j11;\n+        x12 += j12;\n+        x13 += j13;\n+        x14 += j14;\n+        x15 += j15;\n+\n+        ++j12;\n+        if (!j12) ++j13;\n+\n+        WriteLE32(c + 0, x0);\n+        WriteLE32(c + 4, x1);\n+        WriteLE32(c + 8, x2);\n+        WriteLE32(c + 12, x3);\n+        WriteLE32(c + 16, x4);\n+        WriteLE32(c + 20, x5);\n+        WriteLE32(c + 24, x6);\n+        WriteLE32(c + 28, x7);\n+        WriteLE32(c + 32, x8);\n+        WriteLE32(c + 36, x9);\n+        WriteLE32(c + 40, x10);\n+        WriteLE32(c + 44, x11);\n+        WriteLE32(c + 48, x12);\n+        WriteLE32(c + 52, x13);\n+        WriteLE32(c + 56, x14);\n+        WriteLE32(c + 60, x15);\n+\n+        if (bytes <= 64) {\n+            if (bytes < 64) {\n+                for (i = 0;i < bytes;++i) ctarget[i] = c[i];\n+            }\n+            input[12] = j12;\n+            input[13] = j13;\n+            return;\n+        }\n+        bytes -= 64;\n+        c += 64;\n+    }\n+}"
      },
      {
        "sha": "a305977bcd5f4027cbb83b27a16622bab6f0c4c3",
        "filename": "src/crypto/chacha20.h",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/chacha20.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/chacha20.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/chacha20.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CRYPTO_CHACHA20_H\n+#define BITCOIN_CRYPTO_CHACHA20_H\n+\n+#include <stdint.h>\n+#include <stdlib.h>\n+\n+/** A PRNG class for ChaCha20. */\n+class ChaCha20\n+{\n+private:\n+    uint32_t input[16];\n+\n+public:\n+    ChaCha20();\n+    ChaCha20(const unsigned char* key, size_t keylen);\n+    void SetKey(const unsigned char* key, size_t keylen);\n+    void SetIV(uint64_t iv);\n+    void Seek(uint64_t pos);\n+    void Output(unsigned char* output, size_t bytes);\n+};\n+\n+#endif // BITCOIN_CRYPTO_CHACHA20_H"
      },
      {
        "sha": "bcca3d30ea7d686b4244049a3d63f28f50ca8d7c",
        "filename": "src/crypto/common.h",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/crypto/common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/crypto/common.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -79,4 +79,25 @@ void static inline WriteBE64(unsigned char* ptr, uint64_t x)\n     memcpy(ptr, (char*)&v, 8);\n }\n \n+/** Return the smallest number n such that (x >> n) == 0 (or 64 if the highest bit in x is set. */\n+uint64_t static inline CountBits(uint64_t x)\n+{\n+#ifdef HAVE_DECL___BUILTIN_CLZL\n+    if (sizeof(unsigned long) >= sizeof(uint64_t)) {\n+        return x ? 8 * sizeof(unsigned long) - __builtin_clzl(x) : 0;\n+    }\n+#endif\n+#ifdef HAVE_DECL___BUILTIN_CLZLL\n+    if (sizeof(unsigned long long) >= sizeof(uint64_t)) {\n+        return x ? 8 * sizeof(unsigned long long) - __builtin_clzll(x) : 0;\n+    }\n+#endif\n+    int ret = 0;\n+    while (x) {\n+        x >>= 1;\n+        ++ret;\n+    }\n+    return ret;\n+}\n+\n #endif // BITCOIN_CRYPTO_COMMON_H"
      },
      {
        "sha": "58375494555ec88d737f3aeea91bef3d151eba24",
        "filename": "src/cuckoocache.h",
        "status": "modified",
        "additions": 11,
        "deletions": 18,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/cuckoocache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/cuckoocache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/cuckoocache.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -154,7 +154,7 @@ class bit_packed_atomic_flags\n  * @tparam Element should be a movable and copyable type\n  * @tparam Hash should be a function/callable which takes a template parameter\n  * hash_select and an Element and extracts a hash from it. Should return\n- * high-entropy hashes for `Hash h; h<0>(e) ... h<7>(e)`.\n+ * high-entropy uint32_t hashes for `Hash h; h<0>(e) ... h<7>(e)`.\n  */\n template <typename Element, typename Hash>\n class cache\n@@ -193,12 +193,6 @@ class cache\n      */\n     uint32_t epoch_size;\n \n-    /** hash_mask should be set to appropriately mask out a hash such that every\n-     * masked hash is [0,size), eg, if floor(log2(size)) == 20, then hash_mask\n-     * should be (1<<20)-1\n-     */\n-    uint32_t hash_mask;\n-\n     /** depth_limit determines how many elements insert should try to replace.\n      * Should be set to log2(n)*/\n     uint8_t depth_limit;\n@@ -217,14 +211,14 @@ class cache\n      */\n     inline std::array<uint32_t, 8> compute_hashes(const Element& e) const\n     {\n-        return {{hash_function.template operator()<0>(e) & hash_mask,\n-                 hash_function.template operator()<1>(e) & hash_mask,\n-                 hash_function.template operator()<2>(e) & hash_mask,\n-                 hash_function.template operator()<3>(e) & hash_mask,\n-                 hash_function.template operator()<4>(e) & hash_mask,\n-                 hash_function.template operator()<5>(e) & hash_mask,\n-                 hash_function.template operator()<6>(e) & hash_mask,\n-                 hash_function.template operator()<7>(e) & hash_mask}};\n+        return {{(uint32_t)((hash_function.template operator()<0>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<1>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<2>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<3>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<4>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<5>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<6>(e) * (uint64_t)size) >> 32),\n+                 (uint32_t)((hash_function.template operator()<7>(e) * (uint64_t)size) >> 32)}};\n     }\n \n     /* end\n@@ -305,7 +299,7 @@ class cache\n     }\n \n     /** setup initializes the container to store no more than new_size\n-     * elements. setup rounds down to a power of two size.\n+     * elements.\n      *\n      * setup should only be called once.\n      *\n@@ -316,8 +310,7 @@ class cache\n     {\n         // depth_limit must be at least one otherwise errors can occur.\n         depth_limit = static_cast<uint8_t>(std::log2(static_cast<float>(std::max((uint32_t)2, new_size))));\n-        size = 1 << depth_limit;\n-        hash_mask = size-1;\n+        size = std::max<uint32_t>(2, new_size);\n         table.resize(size);\n         collection_flags.setup(size);\n         epoch_flags.resize(size);"
      },
      {
        "sha": "3d2098c05927cceb8c41184536f77ab87cbe1230",
        "filename": "src/dbwrapper.cpp",
        "status": "modified",
        "additions": 64,
        "deletions": 3,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/dbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/dbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -4,16 +4,74 @@\n \n #include \"dbwrapper.h\"\n \n+#include \"fs.h\"\n #include \"util.h\"\n #include \"random.h\"\n \n-#include <boost/filesystem.hpp>\n-\n #include <leveldb/cache.h>\n #include <leveldb/env.h>\n #include <leveldb/filter_policy.h>\n #include <memenv.h>\n #include <stdint.h>\n+#include <algorithm>\n+\n+class CBitcoinLevelDBLogger : public leveldb::Logger {\n+public:\n+    // This code is adapted from posix_logger.h, which is why it is using vsprintf.\n+    // Please do not do this in normal code\n+    virtual void Logv(const char * format, va_list ap) override {\n+            if (!LogAcceptCategory(BCLog::LEVELDB)) {\n+                return;\n+            }\n+            char buffer[500];\n+            for (int iter = 0; iter < 2; iter++) {\n+                char* base;\n+                int bufsize;\n+                if (iter == 0) {\n+                    bufsize = sizeof(buffer);\n+                    base = buffer;\n+                }\n+                else {\n+                    bufsize = 30000;\n+                    base = new char[bufsize];\n+                }\n+                char* p = base;\n+                char* limit = base + bufsize;\n+\n+                // Print the message\n+                if (p < limit) {\n+                    va_list backup_ap;\n+                    va_copy(backup_ap, ap);\n+                    // Do not use vsnprintf elsewhere in bitcoin source code, see above.\n+                    p += vsnprintf(p, limit - p, format, backup_ap);\n+                    va_end(backup_ap);\n+                }\n+\n+                // Truncate to available space if necessary\n+                if (p >= limit) {\n+                    if (iter == 0) {\n+                        continue;       // Try again with larger buffer\n+                    }\n+                    else {\n+                        p = limit - 1;\n+                    }\n+                }\n+\n+                // Add newline if necessary\n+                if (p == base || p[-1] != '\\n') {\n+                    *p++ = '\\n';\n+                }\n+\n+                assert(p <= limit);\n+                base[std::min(bufsize - 1, (int)(p - base))] = '\\0';\n+                LogPrintStr(base);\n+                if (base != buffer) {\n+                    delete[] base;\n+                }\n+                break;\n+            }\n+    }\n+};\n \n static leveldb::Options GetOptions(size_t nCacheSize)\n {\n@@ -23,6 +81,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     options.filter_policy = leveldb::NewBloomFilterPolicy(10);\n     options.compression = leveldb::kNoCompression;\n     options.max_open_files = 64;\n+    options.info_log = new CBitcoinLevelDBLogger();\n     if (leveldb::kMajorVersion > 1 || (leveldb::kMajorVersion == 1 && leveldb::kMinorVersion >= 16)) {\n         // LevelDB versions before 1.16 consider short writes to be corruption. Only trigger error\n         // on corruption in later versions.\n@@ -31,7 +90,7 @@ static leveldb::Options GetOptions(size_t nCacheSize)\n     return options;\n }\n \n-CDBWrapper::CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n+CDBWrapper::CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory, bool fWipe, bool obfuscate)\n {\n     penv = NULL;\n     readoptions.verify_checksums = true;\n@@ -82,6 +141,8 @@ CDBWrapper::~CDBWrapper()\n     pdb = NULL;\n     delete options.filter_policy;\n     options.filter_policy = NULL;\n+    delete options.info_log;\n+    options.info_log = NULL;\n     delete options.block_cache;\n     options.block_cache = NULL;\n     delete penv;"
      },
      {
        "sha": "b13e98b7a4b5cbbcdf90abc869e2f1305785127a",
        "filename": "src/dbwrapper.h",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/dbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/dbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/dbwrapper.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,14 +6,13 @@\n #define BITCOIN_DBWRAPPER_H\n \n #include \"clientversion.h\"\n+#include \"fs.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #include \"version.h\"\n \n-#include <boost/filesystem/path.hpp>\n-\n #include <leveldb/db.h>\n #include <leveldb/write_batch.h>\n \n@@ -132,10 +131,6 @@ class CDBIterator\n         return true;\n     }\n \n-    unsigned int GetKeySize() {\n-        return piter->key().size();\n-    }\n-\n     template<typename V> bool GetValue(V& value) {\n         leveldb::Slice slValue = piter->value();\n         try {\n@@ -199,7 +194,7 @@ class CDBWrapper\n      * @param[in] obfuscate   If true, store data obfuscated via simple XOR. If false, XOR\n      *                        with a zero'd byte array.\n      */\n-    CDBWrapper(const boost::filesystem::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n+    CDBWrapper(const fs::path& path, size_t nCacheSize, bool fMemory = false, bool fWipe = false, bool obfuscate = false);\n     ~CDBWrapper();\n \n     template <typename K, typename V>"
      },
      {
        "sha": "6f2b768de322f4c1de51ae8ada66955fcec5faad",
        "filename": "src/fs.cpp",
        "status": "added",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/fs.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/fs.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,17 @@\n+#include \"fs.h\"\n+\n+#include <boost/filesystem.hpp>\n+\n+namespace fsbridge {\n+\n+FILE *fopen(const fs::path& p, const char *mode)\n+{\n+    return ::fopen(p.string().c_str(), mode);\n+}\n+\n+FILE *freopen(const fs::path& p, const char *mode, FILE *stream)\n+{\n+    return ::freopen(p.string().c_str(), mode, stream);\n+}\n+\n+} // fsbridge"
      },
      {
        "sha": "abb4be254b8fa00f76a43fcaf99b54f310cc3254",
        "filename": "src/fs.h",
        "status": "added",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/fs.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/fs.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/fs.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,24 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_FS_H\n+#define BITCOIN_FS_H\n+\n+#include <stdio.h>\n+#include <string>\n+\n+#include <boost/filesystem.hpp>\n+#include <boost/filesystem/fstream.hpp>\n+#include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n+\n+/** Filesystem operations and types */\n+namespace fs = boost::filesystem;\n+\n+/** Bridge operations to C stdio */\n+namespace fsbridge {\n+    FILE *fopen(const fs::path& p, const char *mode);\n+    FILE *freopen(const fs::path& p, const char *mode, FILE *stream);\n+};\n+\n+#endif // BITCOIN_FS_H"
      },
      {
        "sha": "5ab6d8d73268bf79ae2bca44df99e5cffce613e0",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -30,7 +30,7 @@ static const char* WWW_AUTH_HEADER_DATA = \"Basic realm=\\\"jsonrpc\\\"\";\n class HTTPRPCTimer : public RPCTimerBase\n {\n public:\n-    HTTPRPCTimer(struct event_base* eventBase, boost::function<void(void)>& func, int64_t millis) :\n+    HTTPRPCTimer(struct event_base* eventBase, std::function<void(void)>& func, int64_t millis) :\n         ev(eventBase, false, func)\n     {\n         struct timeval tv;\n@@ -52,7 +52,7 @@ class HTTPRPCTimerInterface : public RPCTimerInterface\n     {\n         return \"HTTP\";\n     }\n-    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n+    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis)\n     {\n         return new HTTPRPCTimer(base, func, millis);\n     }\n@@ -93,9 +93,9 @@ static bool multiUserAuthorized(std::string strUserPass)\n     std::string strUser = strUserPass.substr(0, strUserPass.find(\":\"));\n     std::string strPass = strUserPass.substr(strUserPass.find(\":\") + 1);\n \n-    if (mapMultiArgs.count(\"-rpcauth\") > 0) {\n+    if (gArgs.IsArgSet(\"-rpcauth\")) {\n         //Search for multi-user login/pass \"rpcauth\" from config\n-        BOOST_FOREACH(std::string strRPCAuth, mapMultiArgs.at(\"-rpcauth\"))\n+        BOOST_FOREACH(std::string strRPCAuth, gArgs.GetArgs(\"-rpcauth\"))\n         {\n             std::vector<std::string> vFields;\n             boost::split(vFields, strRPCAuth, boost::is_any_of(\":$\"));\n@@ -233,7 +233,7 @@ static bool InitRPCAuthentication()\n \n bool StartHTTPRPC()\n {\n-    LogPrint(\"rpc\", \"Starting HTTP RPC server\\n\");\n+    LogPrint(BCLog::RPC, \"Starting HTTP RPC server\\n\");\n     if (!InitRPCAuthentication())\n         return false;\n \n@@ -247,12 +247,12 @@ bool StartHTTPRPC()\n \n void InterruptHTTPRPC()\n {\n-    LogPrint(\"rpc\", \"Interrupting HTTP RPC server\\n\");\n+    LogPrint(BCLog::RPC, \"Interrupting HTTP RPC server\\n\");\n }\n \n void StopHTTPRPC()\n {\n-    LogPrint(\"rpc\", \"Stopping HTTP RPC server\\n\");\n+    LogPrint(BCLog::RPC, \"Stopping HTTP RPC server\\n\");\n     UnregisterHTTPHandler(\"/\", true);\n     if (httpRPCTimerInterface) {\n         RPCUnsetTimerInterface(httpRPCTimerInterface);"
      },
      {
        "sha": "0d1cba3fd2bddb728475cfedc873c09b7a8655f2",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 38,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -146,13 +146,6 @@ class WorkQueue\n         while (numThreads > 0)\n             cond.wait(lock);\n     }\n-\n-    /** Return current depth of queue */\n-    size_t Depth()\n-    {\n-        std::unique_lock<std::mutex> lock(cs);\n-        return queue.size();\n-    }\n };\n \n struct HTTPPathHandler\n@@ -203,9 +196,8 @@ static bool InitHTTPAllowList()\n     LookupHost(\"::1\", localv6, false);\n     rpc_allow_subnets.push_back(CSubNet(localv4, 8));      // always allow IPv4 local subnet\n     rpc_allow_subnets.push_back(CSubNet(localv6));         // always allow IPv6 localhost\n-    if (mapMultiArgs.count(\"-rpcallowip\")) {\n-        const std::vector<std::string>& vAllow = mapMultiArgs.at(\"-rpcallowip\");\n-        for (std::string strAllow : vAllow) {\n+    if (gArgs.IsArgSet(\"-rpcallowip\")) {\n+        for (const std::string& strAllow : gArgs.GetArgs(\"-rpcallowip\")) {\n             CSubNet subnet;\n             LookupSubNet(strAllow.c_str(), subnet);\n             if (!subnet.IsValid()) {\n@@ -220,7 +212,7 @@ static bool InitHTTPAllowList()\n     std::string strAllowed;\n     for (const CSubNet& subnet : rpc_allow_subnets)\n         strAllowed += subnet.ToString() + \" \";\n-    LogPrint(\"http\", \"Allowing HTTP connections from: %s\\n\", strAllowed);\n+    LogPrint(BCLog::HTTP, \"Allowing HTTP connections from: %s\\n\", strAllowed);\n     return true;\n }\n \n@@ -250,7 +242,7 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n {\n     std::unique_ptr<HTTPRequest> hreq(new HTTPRequest(req));\n \n-    LogPrint(\"http\", \"Received a %s request for %s from %s\\n\",\n+    LogPrint(BCLog::HTTP, \"Received a %s request for %s from %s\\n\",\n              RequestMethodString(hreq->GetRequestMethod()), hreq->GetURI(), hreq->GetPeer().ToString());\n \n     // Early address-based allow check\n@@ -300,18 +292,18 @@ static void http_request_cb(struct evhttp_request* req, void* arg)\n /** Callback to reject HTTP requests after shutdown. */\n static void http_reject_request_cb(struct evhttp_request* req, void*)\n {\n-    LogPrint(\"http\", \"Rejecting request while shutting down\\n\");\n+    LogPrint(BCLog::HTTP, \"Rejecting request while shutting down\\n\");\n     evhttp_send_error(req, HTTP_SERVUNAVAIL, NULL);\n }\n \n /** Event dispatcher thread */\n static bool ThreadHTTP(struct event_base* base, struct evhttp* http)\n {\n     RenameThread(\"bitcoin-http\");\n-    LogPrint(\"http\", \"Entering http event loop\\n\");\n+    LogPrint(BCLog::HTTP, \"Entering http event loop\\n\");\n     event_base_dispatch(base);\n     // Event loop will be interrupted by InterruptHTTPServer()\n-    LogPrint(\"http\", \"Exited http event loop\\n\");\n+    LogPrint(BCLog::HTTP, \"Exited http event loop\\n\");\n     return event_base_got_break(base) == 0;\n }\n \n@@ -328,12 +320,11 @@ static bool HTTPBindAddresses(struct evhttp* http)\n         if (IsArgSet(\"-rpcbind\")) {\n             LogPrintf(\"WARNING: option -rpcbind was ignored because -rpcallowip was not specified, refusing to allow everyone to connect\\n\");\n         }\n-    } else if (mapMultiArgs.count(\"-rpcbind\")) { // Specific bind address\n-        const std::vector<std::string>& vbind = mapMultiArgs.at(\"-rpcbind\");\n-        for (std::vector<std::string>::const_iterator i = vbind.begin(); i != vbind.end(); ++i) {\n+    } else if (gArgs.IsArgSet(\"-rpcbind\")) { // Specific bind address\n+        for (const std::string& strRPCBind : gArgs.GetArgs(\"-rpcbind\")) {\n             int port = defaultPort;\n             std::string host;\n-            SplitHostPort(*i, port, host);\n+            SplitHostPort(strRPCBind, port, host);\n             endpoints.push_back(std::make_pair(host, port));\n         }\n     } else { // No specific bind address specified, bind to any\n@@ -343,7 +334,7 @@ static bool HTTPBindAddresses(struct evhttp* http)\n \n     // Bind addresses\n     for (std::vector<std::pair<std::string, uint16_t> >::iterator i = endpoints.begin(); i != endpoints.end(); ++i) {\n-        LogPrint(\"http\", \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n+        LogPrint(BCLog::HTTP, \"Binding RPC on address %s port %i\\n\", i->first, i->second);\n         evhttp_bound_socket *bind_handle = evhttp_bind_socket_with_handle(http, i->first.empty() ? NULL : i->first.c_str(), i->second);\n         if (bind_handle) {\n             boundSockets.push_back(bind_handle);\n@@ -371,7 +362,7 @@ static void libevent_log_cb(int severity, const char *msg)\n     if (severity >= EVENT_LOG_WARN) // Log warn messages and higher without debug category\n         LogPrintf(\"libevent: %s\\n\", msg);\n     else\n-        LogPrint(\"libevent\", \"libevent: %s\\n\", msg);\n+        LogPrint(BCLog::LIBEVENT, \"libevent: %s\\n\", msg);\n }\n \n bool InitHTTPServer()\n@@ -391,14 +382,13 @@ bool InitHTTPServer()\n \n     // Redirect libevent's logging to our own log\n     event_set_log_callback(&libevent_log_cb);\n-#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n-    // If -debug=libevent, set full libevent debugging.\n-    // Otherwise, disable all libevent debugging.\n-    if (LogAcceptCategory(\"libevent\"))\n-        event_enable_debug_logging(EVENT_DBG_ALL);\n-    else\n-        event_enable_debug_logging(EVENT_DBG_NONE);\n-#endif\n+    // Update libevent's log handling. Returns false if our version of\n+    // libevent doesn't support debug logging, in which case we should\n+    // clear the BCLog::LIBEVENT flag.\n+    if (!UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT)) {\n+        logCategories &= ~BCLog::LIBEVENT;\n+    }\n+\n #ifdef WIN32\n     evthread_use_windows_threads();\n #else\n@@ -431,7 +421,7 @@ bool InitHTTPServer()\n         return false;\n     }\n \n-    LogPrint(\"http\", \"Initialized HTTP server\\n\");\n+    LogPrint(BCLog::HTTP, \"Initialized HTTP server\\n\");\n     int workQueueDepth = std::max((long)GetArg(\"-rpcworkqueue\", DEFAULT_HTTP_WORKQUEUE), 1L);\n     LogPrintf(\"HTTP: creating work queue of depth %d\\n\", workQueueDepth);\n \n@@ -441,12 +431,26 @@ bool InitHTTPServer()\n     return true;\n }\n \n+bool UpdateHTTPServerLogging(bool enable) {\n+#if LIBEVENT_VERSION_NUMBER >= 0x02010100\n+    if (enable) {\n+        event_enable_debug_logging(EVENT_DBG_ALL);\n+    } else {\n+        event_enable_debug_logging(EVENT_DBG_NONE);\n+    }\n+    return true;\n+#else\n+    // Can't update libevent logging if version < 02010100\n+    return false;\n+#endif\n+}\n+\n std::thread threadHTTP;\n std::future<bool> threadResult;\n \n bool StartHTTPServer()\n {\n-    LogPrint(\"http\", \"Starting HTTP server\\n\");\n+    LogPrint(BCLog::HTTP, \"Starting HTTP server\\n\");\n     int rpcThreads = std::max((long)GetArg(\"-rpcthreads\", DEFAULT_HTTP_THREADS), 1L);\n     LogPrintf(\"HTTP: starting %d worker threads\\n\", rpcThreads);\n     std::packaged_task<bool(event_base*, evhttp*)> task(ThreadHTTP);\n@@ -462,7 +466,7 @@ bool StartHTTPServer()\n \n void InterruptHTTPServer()\n {\n-    LogPrint(\"http\", \"Interrupting HTTP server\\n\");\n+    LogPrint(BCLog::HTTP, \"Interrupting HTTP server\\n\");\n     if (eventHTTP) {\n         // Unlisten sockets\n         for (evhttp_bound_socket *socket : boundSockets) {\n@@ -477,14 +481,15 @@ void InterruptHTTPServer()\n \n void StopHTTPServer()\n {\n-    LogPrint(\"http\", \"Stopping HTTP server\\n\");\n+    LogPrint(BCLog::HTTP, \"Stopping HTTP server\\n\");\n     if (workQueue) {\n-        LogPrint(\"http\", \"Waiting for HTTP worker threads to exit\\n\");\n+        LogPrint(BCLog::HTTP, \"Waiting for HTTP worker threads to exit\\n\");\n         workQueue->WaitExit();\n         delete workQueue;\n+        workQueue = nullptr;\n     }\n     if (eventBase) {\n-        LogPrint(\"http\", \"Waiting for HTTP event thread to exit\\n\");\n+        LogPrint(BCLog::HTTP, \"Waiting for HTTP event thread to exit\\n\");\n         // Give event loop a few seconds to exit (to send back last RPC responses), then break it\n         // Before this was solved with event_base_loopexit, but that didn't work as expected in\n         // at least libevent 2.0.21 and always introduced a delay. In libevent\n@@ -505,7 +510,7 @@ void StopHTTPServer()\n         event_base_free(eventBase);\n         eventBase = 0;\n     }\n-    LogPrint(\"http\", \"Stopped HTTP server\\n\");\n+    LogPrint(BCLog::HTTP, \"Stopped HTTP server\\n\");\n }\n \n struct event_base* EventBase()\n@@ -652,7 +657,7 @@ HTTPRequest::RequestMethod HTTPRequest::GetRequestMethod()\n \n void RegisterHTTPHandler(const std::string &prefix, bool exactMatch, const HTTPRequestHandler &handler)\n {\n-    LogPrint(\"http\", \"Registering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n+    LogPrint(BCLog::HTTP, \"Registering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n     pathHandlers.push_back(HTTPPathHandler(prefix, exactMatch, handler));\n }\n \n@@ -665,7 +670,7 @@ void UnregisterHTTPHandler(const std::string &prefix, bool exactMatch)\n             break;\n     if (i != iend)\n     {\n-        LogPrint(\"http\", \"Unregistering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n+        LogPrint(BCLog::HTTP, \"Unregistering HTTP handler for %s (exactmatch %d)\\n\", prefix, exactMatch);\n         pathHandlers.erase(i);\n     }\n }"
      },
      {
        "sha": "6be9950682034d6a4b7fb37be7c3163c1864dedb",
        "filename": "src/httpserver.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httpserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/httpserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -32,6 +32,10 @@ void InterruptHTTPServer();\n /** Stop HTTP server */\n void StopHTTPServer();\n \n+/** Change logging level for libevent. Removes BCLog::LIBEVENT from logCategories if\n+ * libevent doesn't support debug logging.*/\n+bool UpdateHTTPServerLogging(bool enable);\n+\n /** Handler for requests to a certain HTTP path */\n typedef std::function<bool(HTTPRequest* req, const std::string &)> HTTPRequestHandler;\n /** Register handler for prefix."
      },
      {
        "sha": "3bbdb16c3bb58eeeb67ad330eacb3941a24a55fb",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 160,
        "deletions": 144,
        "changes": 304,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -16,6 +16,7 @@\n #include \"checkpoints.h\"\n #include \"compat/sanity.h\"\n #include \"consensus/validation.h\"\n+#include \"fs.h\"\n #include \"httpserver.h\"\n #include \"httprpc.h\"\n #include \"key.h\"\n@@ -24,9 +25,12 @@\n #include \"netbase.h\"\n #include \"net.h\"\n #include \"net_processing.h\"\n+#include \"policy/feerate.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"rpc/server.h\"\n #include \"rpc/register.h\"\n+#include \"rpc/blockchain.h\"\n #include \"script/standard.h\"\n #include \"script/sigcache.h\"\n #include \"scheduler.h\"\n@@ -55,8 +59,6 @@\n #include <boost/algorithm/string/replace.hpp>\n #include <boost/algorithm/string/split.hpp>\n #include <boost/bind.hpp>\n-#include <boost/filesystem.hpp>\n-#include <boost/function.hpp>\n #include <boost/interprocess/sync/file_lock.hpp>\n #include <boost/thread.hpp>\n #include <openssl/crypto.h>\n@@ -118,10 +120,6 @@ static const char* FEE_ESTIMATES_FILENAME=\"fee_estimates.dat\";\n // threads that should only be stopped after the main network-processing\n // threads have exited.\n //\n-// Note that if running -daemon the parent process returns from AppInit2\n-// before adding any threads to the threadGroup, so .join_all() returns\n-// immediately and the parent exits from main().\n-//\n // Shutdown for Qt is very similar, only it uses a QTimer to detect\n // fRequestShutdown getting set, and then does the normal Qt\n // shutdown thing.\n@@ -188,7 +186,7 @@ void Shutdown()\n     if (!lockShutdown)\n         return;\n \n-    /// Note: Shutdown() must be able to handle cases in which AppInit2() failed part of the way,\n+    /// Note: Shutdown() must be able to handle cases in which initialization failed part of the way,\n     /// for example if the data directory was found to be locked.\n     /// Be sure that anything that writes files or flushes caches only does this if the respective\n     /// module was initialized.\n@@ -210,15 +208,17 @@ void Shutdown()\n \n     StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n-    if (fDumpMempoolLater)\n+    if (fDumpMempoolLater && GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool();\n+    }\n \n     if (fFeeEstimatesInitialized)\n     {\n-        boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n-        CAutoFile est_fileout(fopen(est_path.string().c_str(), \"wb\"), SER_DISK, CLIENT_VERSION);\n+        ::feeEstimator.FlushUnconfirmed(::mempool);\n+        fs::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+        CAutoFile est_fileout(fsbridge::fopen(est_path, \"wb\"), SER_DISK, CLIENT_VERSION);\n         if (!est_fileout.IsNull())\n-            mempool.WriteFeeEstimates(est_fileout);\n+            ::feeEstimator.Write(est_fileout);\n         else\n             LogPrintf(\"%s: Failed to write fee estimates to %s\\n\", __func__, est_path.string());\n         fFeeEstimatesInitialized = false;\n@@ -253,8 +253,8 @@ void Shutdown()\n \n #ifndef WIN32\n     try {\n-        boost::filesystem::remove(GetPidFile());\n-    } catch (const boost::filesystem::filesystem_error& e) {\n+        fs::remove(GetPidFile());\n+    } catch (const fs::filesystem_error& e) {\n         LogPrintf(\"%s: Unable to remove pidfile: %s\\n\", __func__, e.what());\n     }\n #endif\n@@ -269,18 +269,31 @@ void Shutdown()\n }\n \n /**\n- * Signal handlers are very limited in what they are allowed to do, so:\n+ * Signal handlers are very limited in what they are allowed to do.\n+ * The execution context the handler is invoked in is not guaranteed,\n+ * so we restrict handler operations to just touching variables:\n  */\n-void HandleSIGTERM(int)\n+static void HandleSIGTERM(int)\n {\n     fRequestShutdown = true;\n }\n \n-void HandleSIGHUP(int)\n+static void HandleSIGHUP(int)\n {\n     fReopenDebugLog = true;\n }\n \n+#ifndef WIN32\n+static void registerSignalHandler(int signal, void(*handler)(int))\n+{\n+    struct sigaction sa;\n+    sa.sa_handler = handler;\n+    sigemptyset(&sa.sa_mask);\n+    sa.sa_flags = 0;\n+    sigaction(signal, &sa, NULL);\n+}\n+#endif\n+\n bool static Bind(CConnman& connman, const CService &addr, unsigned int flags) {\n     if (!(flags & BF_EXPLICIT) && IsLimited(addr))\n         return false;\n@@ -302,7 +315,7 @@ void OnRPCStopped()\n     uiInterface.NotifyBlockTip.disconnect(&RPCNotifyBlockChange);\n     RPCNotifyBlockChange(false, nullptr);\n     cvBlockChange.notify_all();\n-    LogPrint(\"rpc\", \"RPC stopped.\\n\");\n+    LogPrint(BCLog::RPC, \"RPC stopped.\\n\");\n }\n \n void OnRPCPreCommand(const CRPCCommand& cmd)\n@@ -316,6 +329,10 @@ void OnRPCPreCommand(const CRPCCommand& cmd)\n \n std::string HelpMessage(HelpMessageMode mode)\n {\n+    const auto defaultBaseParams = CreateBaseChainParams(CBaseChainParams::MAIN);\n+    const auto testnetBaseParams = CreateBaseChainParams(CBaseChainParams::TESTNET);\n+    const auto defaultChainParams = CreateChainParams(CBaseChainParams::MAIN);\n+    const auto testnetChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n     const bool showDebug = GetBoolArg(\"-help-debug\", false);\n \n     // When adding new options to the categories, please keep and ensure alphabetical ordering.\n@@ -327,7 +344,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-blocknotify=<cmd>\", _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\"));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blocksonly\", strprintf(_(\"Whether to operate in a blocks only mode (default: %u)\"), DEFAULT_BLOCKSONLY));\n-    strUsage +=HelpMessageOpt(\"-assumevalid=<hex>\", strprintf(_(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\"), Params(CBaseChainParams::MAIN).GetConsensus().defaultAssumeValid.GetHex(), Params(CBaseChainParams::TESTNET).GetConsensus().defaultAssumeValid.GetHex()));\n+    strUsage +=HelpMessageOpt(\"-assumevalid=<hex>\", strprintf(_(\"If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)\"), defaultChainParams->GetConsensus().defaultAssumeValid.GetHex(), testnetChainParams->GetConsensus().defaultAssumeValid.GetHex()));\n     strUsage += HelpMessageOpt(\"-conf=<file>\", strprintf(_(\"Specify configuration file (default: %s)\"), BITCOIN_CONF_FILENAME));\n     if (mode == HMM_BITCOIND)\n     {\n@@ -343,6 +360,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-maxorphantx=<n>\", strprintf(_(\"Keep at most <n> unconnectable transactions in memory (default: %u)\"), DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n     strUsage += HelpMessageOpt(\"-maxmempool=<n>\", strprintf(_(\"Keep the transaction memory pool below <n> megabytes (default: %u)\"), DEFAULT_MAX_MEMPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-mempoolexpiry=<n>\", strprintf(_(\"Do not keep transactions in the mempool longer than <n> hours (default: %u)\"), DEFAULT_MEMPOOL_EXPIRY));\n+    strUsage += HelpMessageOpt(\"-persistmempool\", strprintf(_(\"Whether to save the mempool on shutdown and load on restart (default: %u)\"), DEFAULT_PERSIST_MEMPOOL));\n     strUsage += HelpMessageOpt(\"-blockreconstructionextratxn=<n>\", strprintf(_(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\"), DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN));\n     strUsage += HelpMessageOpt(\"-par=<n>\", strprintf(_(\"Set the number of script verification threads (%u to %d, 0 = auto, <0 = leave that many cores free, default: %d)\"),\n         -GetNumCores(), MAX_SCRIPTCHECK_THREADS, DEFAULT_SCRIPTCHECK_THREADS));\n@@ -364,13 +382,13 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-banscore=<n>\", strprintf(_(\"Threshold for disconnecting misbehaving peers (default: %u)\"), DEFAULT_BANSCORE_THRESHOLD));\n     strUsage += HelpMessageOpt(\"-bantime=<n>\", strprintf(_(\"Number of seconds to keep misbehaving peers from reconnecting (default: %u)\"), DEFAULT_MISBEHAVING_BANTIME));\n     strUsage += HelpMessageOpt(\"-bind=<addr>\", _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\"));\n-    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections\"));\n+    strUsage += HelpMessageOpt(\"-connect=<ip>\", _(\"Connect only to the specified node(s); -connect=0 disables automatic connections\"));\n     strUsage += HelpMessageOpt(\"-discover\", _(\"Discover own IP addresses (default: 1 when listening and no -externalip or -proxy)\"));\n     strUsage += HelpMessageOpt(\"-dns\", _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + strprintf(_(\"(default: %u)\"), DEFAULT_NAME_LOOKUP));\n-    strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)\"));\n+    strUsage += HelpMessageOpt(\"-dnsseed\", _(\"Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect used)\"));\n     strUsage += HelpMessageOpt(\"-externalip=<ip>\", _(\"Specify your own public address\"));\n     strUsage += HelpMessageOpt(\"-forcednsseed\", strprintf(_(\"Always query for peer addresses via DNS lookup (default: %u)\"), DEFAULT_FORCEDNSSEED));\n-    strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)\"));\n+    strUsage += HelpMessageOpt(\"-listen\", _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\"));\n     strUsage += HelpMessageOpt(\"-listenonion\", strprintf(_(\"Automatically create Tor hidden service (default: %d)\"), DEFAULT_LISTEN_ONION));\n     strUsage += HelpMessageOpt(\"-maxconnections=<n>\", strprintf(_(\"Maintain at most <n> connections to peers (default: %u)\"), DEFAULT_MAX_PEER_CONNECTIONS));\n     strUsage += HelpMessageOpt(\"-maxreceivebuffer=<n>\", strprintf(_(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)\"), DEFAULT_MAXRECEIVEBUFFER));\n@@ -380,10 +398,9 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-onlynet=<net>\", _(\"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"));\n     strUsage += HelpMessageOpt(\"-permitbaremultisig\", strprintf(_(\"Relay non-P2SH multisig (default: %u)\"), DEFAULT_PERMIT_BAREMULTISIG));\n     strUsage += HelpMessageOpt(\"-peerbloomfilters\", strprintf(_(\"Support filtering of blocks and transaction with bloom filters (default: %u)\"), DEFAULT_PEERBLOOMFILTERS));\n-    strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), Params(CBaseChainParams::MAIN).GetDefaultPort(), Params(CBaseChainParams::TESTNET).GetDefaultPort()));\n+    strUsage += HelpMessageOpt(\"-port=<port>\", strprintf(_(\"Listen for connections on <port> (default: %u or testnet: %u)\"), defaultChainParams->GetDefaultPort(), testnetChainParams->GetDefaultPort()));\n     strUsage += HelpMessageOpt(\"-proxy=<ip:port>\", _(\"Connect through SOCKS5 proxy\"));\n     strUsage += HelpMessageOpt(\"-proxyrandomize\", strprintf(_(\"Randomize credentials for every proxy connection. This enables Tor stream isolation (default: %u)\"), DEFAULT_PROXYRANDOMIZE));\n-    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-seednode=<ip>\", _(\"Connect to a node to retrieve peer addresses, and disconnect\"));\n     strUsage += HelpMessageOpt(\"-timeout=<n>\", strprintf(_(\"Specify connection timeout in milliseconds (minimum: 1, default: %d)\"), DEFAULT_CONNECT_TIMEOUT));\n     strUsage += HelpMessageOpt(\"-torcontrol=<ip>:<port>\", strprintf(_(\"Tor control port to use if onion listening enabled (default: %s)\"), DEFAULT_TOR_CONTROL));\n@@ -398,8 +415,6 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-whitebind=<addr>\", _(\"Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\"));\n     strUsage += HelpMessageOpt(\"-whitelist=<IP address or network>\", _(\"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.\") +\n         \" \" + _(\"Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway\"));\n-    strUsage += HelpMessageOpt(\"-whitelistrelay\", strprintf(_(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\"), DEFAULT_WHITELISTRELAY));\n-    strUsage += HelpMessageOpt(\"-whitelistforcerelay\", strprintf(_(\"Force relay of transactions from whitelisted peers even if they violate local relay policy (default: %d)\"), DEFAULT_WHITELISTFORCERELAY));\n     strUsage += HelpMessageOpt(\"-maxuploadtarget=<n>\", strprintf(_(\"Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = no limit (default: %d)\"), DEFAULT_MAX_UPLOAD_TARGET));\n \n #ifdef ENABLE_WALLET\n@@ -420,81 +435,79 @@ std::string HelpMessage(HelpMessageMode mode)\n     {\n         strUsage += HelpMessageOpt(\"-checkblocks=<n>\", strprintf(_(\"How many blocks to check at startup (default: %u, 0 = all)\"), DEFAULT_CHECKBLOCKS));\n         strUsage += HelpMessageOpt(\"-checklevel=<n>\", strprintf(_(\"How thorough the block verification of -checkblocks is (0-4, default: %u)\"), DEFAULT_CHECKLEVEL));\n-        strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. Also sets -checkmempool (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n-        strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", Params(CBaseChainParams::MAIN).DefaultConsistencyChecks()));\n+        strUsage += HelpMessageOpt(\"-checkblockindex\", strprintf(\"Do a full consistency check for mapBlockIndex, setBlockIndexCandidates, chainActive and mapBlocksUnlinked occasionally. Also sets -checkmempool (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n+        strUsage += HelpMessageOpt(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u)\", defaultChainParams->DefaultConsistencyChecks()));\n         strUsage += HelpMessageOpt(\"-checkpoints\", strprintf(\"Disable expensive verification for known chain history (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED));\n         strUsage += HelpMessageOpt(\"-disablesafemode\", strprintf(\"Disable safemode, override a real safe mode event (default: %u)\", DEFAULT_DISABLE_SAFEMODE));\n         strUsage += HelpMessageOpt(\"-testsafemode\", strprintf(\"Force safe mode (default: %u)\", DEFAULT_TESTSAFEMODE));\n         strUsage += HelpMessageOpt(\"-dropmessagestest=<n>\", \"Randomly drop 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-fuzzmessagestest=<n>\", \"Randomly fuzz 1 of every <n> network messages\");\n         strUsage += HelpMessageOpt(\"-stopafterblockimport\", strprintf(\"Stop running after importing blocks from disk (default: %u)\", DEFAULT_STOPAFTERBLOCKIMPORT));\n+        strUsage += HelpMessageOpt(\"-stopatheight\", strprintf(\"Stop running after reaching the given height in the main chain (default: %u)\", DEFAULT_STOPATHEIGHT));\n+\n         strUsage += HelpMessageOpt(\"-limitancestorcount=<n>\", strprintf(\"Do not accept transactions if number of in-mempool ancestors is <n> or more (default: %u)\", DEFAULT_ANCESTOR_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitancestorsize=<n>\", strprintf(\"Do not accept transactions whose size with all in-mempool ancestors exceeds <n> kilobytes (default: %u)\", DEFAULT_ANCESTOR_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantcount=<n>\", strprintf(\"Do not accept transactions if any ancestor would have <n> or more in-mempool descendants (default: %u)\", DEFAULT_DESCENDANT_LIMIT));\n         strUsage += HelpMessageOpt(\"-limitdescendantsize=<n>\", strprintf(\"Do not accept transactions if any ancestor would have more than <n> kilobytes of in-mempool descendants (default: %u).\", DEFAULT_DESCENDANT_SIZE_LIMIT));\n         strUsage += HelpMessageOpt(\"-bip9params=deployment:start:end\", \"Use given start/end times for specified BIP9 deployment (regtest-only)\");\n     }\n-    std::string debugCategories = \"addrman, alert, bench, cmpctblock, coindb, db, http, libevent, lock, mempool, mempoolrej, net, proxy, prune, rand, reindex, rpc, selectcoins, tor, zmq\"; // Don't translate these and qt below\n-    if (mode == HMM_BITCOIN_QT)\n-        debugCategories += \", qt\";\n     strUsage += HelpMessageOpt(\"-debug=<category>\", strprintf(_(\"Output debugging information (default: %u, supplying <category> is optional)\"), 0) + \". \" +\n-        _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + _(\"<category> can be:\") + \" \" + debugCategories + \".\");\n-    if (showDebug)\n-        strUsage += HelpMessageOpt(\"-nodebug\", \"Turn off debugging messages, same as -debug=0\");\n+        _(\"If <category> is not supplied or if <category> = 1, output all debugging information.\") + \" \" + _(\"<category> can be:\") + \" \" + ListLogCategories() + \".\");\n+    strUsage += HelpMessageOpt(\"-debugexclude=<category>\", strprintf(_(\"Exclude debugging information for a category. Can be used in conjunction with -debug=1 to output debug logs for all categories except one or more specified categories.\")));\n     strUsage += HelpMessageOpt(\"-help-debug\", _(\"Show all debugging options (usage: --help -help-debug)\"));\n     strUsage += HelpMessageOpt(\"-logips\", strprintf(_(\"Include IP addresses in debug output (default: %u)\"), DEFAULT_LOGIPS));\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), DEFAULT_LOGTIMESTAMPS));\n     if (showDebug)\n     {\n         strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-mocktime=<n>\", \"Replace actual time with <n> seconds since epoch (default: 0)\");\n-        strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", DEFAULT_LIMITFREERELAY));\n-        strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", DEFAULT_RELAYPRIORITY));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> MiB (default: %u)\", DEFAULT_MAX_SIG_CACHE_SIZE));\n         strUsage += HelpMessageOpt(\"-maxtipage=<n>\", strprintf(\"Maximum tip age in seconds to consider node in initial block download (default: %u)\", DEFAULT_MAX_TIP_AGE));\n     }\n-    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n-        CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n     strUsage += HelpMessageOpt(\"-maxtxfee=<amt>\", strprintf(_(\"Maximum total fees (in %s) to use in a single wallet transaction or raw transaction; setting this too low may abort large transactions (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(DEFAULT_TRANSACTION_MAXFEE)));\n     strUsage += HelpMessageOpt(\"-printtoconsole\", _(\"Send trace/debug info to console instead of debug.log file\"));\n     if (showDebug)\n     {\n-        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction priority and fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY));\n+        strUsage += HelpMessageOpt(\"-printpriority\", strprintf(\"Log transaction fee per kB when mining blocks (default: %u)\", DEFAULT_PRINTPRIORITY));\n     }\n     strUsage += HelpMessageOpt(\"-shrinkdebugfile\", _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\"));\n \n     AppendParamsHelpMessages(strUsage, showDebug);\n \n     strUsage += HelpMessageGroup(_(\"Node relay options:\"));\n     if (showDebug) {\n-        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", !Params(CBaseChainParams::TESTNET).RequireStandard()));\n+        strUsage += HelpMessageOpt(\"-acceptnonstdtxn\", strprintf(\"Relay and mine \\\"non-standard\\\" transactions (%sdefault: %u)\", \"testnet/regtest only; \", defaultChainParams->RequireStandard()));\n         strUsage += HelpMessageOpt(\"-incrementalrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to define cost of relay, used for mempool limiting and BIP 125 replacement. (default: %s)\", CURRENCY_UNIT, FormatMoney(DEFAULT_INCREMENTAL_RELAY_FEE)));\n         strUsage += HelpMessageOpt(\"-dustrelayfee=<amt>\", strprintf(\"Fee rate (in %s/kB) used to defined dust, the value of an output such that it will cost about 1/3 of its value in fees at this fee rate to spend it. (default: %s)\", CURRENCY_UNIT, FormatMoney(DUST_RELAY_TX_FEE)));\n     }\n     strUsage += HelpMessageOpt(\"-bytespersigop\", strprintf(_(\"Equivalent bytes per sigop in transactions for relay and mining (default: %u)\"), DEFAULT_BYTES_PER_SIGOP));\n     strUsage += HelpMessageOpt(\"-datacarrier\", strprintf(_(\"Relay and mine data carrier transactions (default: %u)\"), DEFAULT_ACCEPT_DATACARRIER));\n     strUsage += HelpMessageOpt(\"-datacarriersize\", strprintf(_(\"Maximum size of data in data carrier transactions we relay and mine (default: %u)\"), MAX_OP_RETURN_RELAY));\n     strUsage += HelpMessageOpt(\"-mempoolreplacement\", strprintf(_(\"Enable transaction replacement in the memory pool (default: %u)\"), DEFAULT_ENABLE_REPLACEMENT));\n+    strUsage += HelpMessageOpt(\"-minrelaytxfee=<amt>\", strprintf(_(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\"),\n+        CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)));\n+    strUsage += HelpMessageOpt(\"-whitelistrelay\", strprintf(_(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\"), DEFAULT_WHITELISTRELAY));\n+    strUsage += HelpMessageOpt(\"-whitelistforcerelay\", strprintf(_(\"Force relay of transactions from whitelisted peers even if they violate local relay policy (default: %d)\"), DEFAULT_WHITELISTFORCERELAY));\n \n     strUsage += HelpMessageGroup(_(\"Block creation options:\"));\n     strUsage += HelpMessageOpt(\"-blockmaxweight=<n>\", strprintf(_(\"Set maximum BIP141 block weight (default: %d)\"), DEFAULT_BLOCK_MAX_WEIGHT));\n     strUsage += HelpMessageOpt(\"-blockmaxsize=<n>\", strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE));\n-    strUsage += HelpMessageOpt(\"-blockprioritysize=<n>\", strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE));\n     strUsage += HelpMessageOpt(\"-blockmintxfee=<amt>\", strprintf(_(\"Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)\"), CURRENCY_UNIT, FormatMoney(DEFAULT_BLOCK_MIN_TX_FEE)));\n     if (showDebug)\n         strUsage += HelpMessageOpt(\"-blockversion=<n>\", \"Override block version to test forking scenarios\");\n \n     strUsage += HelpMessageGroup(_(\"RPC server options:\"));\n     strUsage += HelpMessageOpt(\"-server\", _(\"Accept command line and JSON-RPC commands\"));\n     strUsage += HelpMessageOpt(\"-rest\", strprintf(_(\"Accept public REST requests (default: %u)\"), DEFAULT_REST_ENABLE));\n-    strUsage += HelpMessageOpt(\"-rpcbind=<addr>\", _(\"Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6. This option can be specified multiple times (default: bind to all interfaces)\"));\n+    strUsage += HelpMessageOpt(\"-rpcbind=<addr>[:port]\", _(\"Bind to given address to listen for JSON-RPC connections. This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6. This option can be specified multiple times (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)\"));\n     strUsage += HelpMessageOpt(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie (default: data dir)\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\"));\n-    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n+    strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), defaultBaseParams->RPCPort(), testnetBaseParams->RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n+    strUsage += HelpMessageOpt(\"-rpcserialversion\", strprintf(_(\"Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)\"), DEFAULT_RPC_SERIALIZE_VERSION));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));\n     if (showDebug) {\n         strUsage += HelpMessageOpt(\"-rpcworkqueue=<n>\", strprintf(\"Set the depth of the work queue to service RPC calls (default: %d)\", DEFAULT_HTTP_WORKQUEUE));\n@@ -574,14 +587,14 @@ struct CImportingNow\n // works correctly.\n void CleanupBlockRevFiles()\n {\n-    std::map<std::string, boost::filesystem::path> mapBlockFiles;\n+    std::map<std::string, fs::path> mapBlockFiles;\n \n     // Glob all blk?????.dat and rev?????.dat files from the blocks directory.\n     // Remove the rev files immediately and insert the blk file paths into an\n     // ordered map keyed by block file index.\n     LogPrintf(\"Removing unusable blk?????.dat and rev?????.dat files for -reindex with -prune\\n\");\n-    boost::filesystem::path blocksdir = GetDataDir() / \"blocks\";\n-    for (boost::filesystem::directory_iterator it(blocksdir); it != boost::filesystem::directory_iterator(); it++) {\n+    fs::path blocksdir = GetDataDir() / \"blocks\";\n+    for (fs::directory_iterator it(blocksdir); it != fs::directory_iterator(); it++) {\n         if (is_regular_file(*it) &&\n             it->path().filename().string().length() == 12 &&\n             it->path().filename().string().substr(8,4) == \".dat\")\n@@ -598,7 +611,7 @@ void CleanupBlockRevFiles()\n     // keeping a separate counter.  Once we hit a gap (or if 0 doesn't exist)\n     // start removing block files.\n     int nContigCounter = 0;\n-    BOOST_FOREACH(const PAIRTYPE(std::string, boost::filesystem::path)& item, mapBlockFiles) {\n+    BOOST_FOREACH(const PAIRTYPE(std::string, fs::path)& item, mapBlockFiles) {\n         if (atoi(item.first) == nContigCounter) {\n             nContigCounter++;\n             continue;\n@@ -607,7 +620,7 @@ void CleanupBlockRevFiles()\n     }\n }\n \n-void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n+void ThreadImport(std::vector<fs::path> vImportFiles)\n {\n     const CChainParams& chainparams = Params();\n     RenameThread(\"bitcoin-loadblk\");\n@@ -620,7 +633,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         int nFile = 0;\n         while (true) {\n             CDiskBlockPos pos(nFile, 0);\n-            if (!boost::filesystem::exists(GetBlockPosFilename(pos, \"blk\")))\n+            if (!fs::exists(GetBlockPosFilename(pos, \"blk\")))\n                 break; // No block files left to reindex\n             FILE *file = OpenBlockFile(pos, true);\n             if (!file)\n@@ -637,11 +650,11 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n     }\n \n     // hardcoded $DATADIR/bootstrap.dat\n-    boost::filesystem::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n-    if (boost::filesystem::exists(pathBootstrap)) {\n-        FILE *file = fopen(pathBootstrap.string().c_str(), \"rb\");\n+    fs::path pathBootstrap = GetDataDir() / \"bootstrap.dat\";\n+    if (fs::exists(pathBootstrap)) {\n+        FILE *file = fsbridge::fopen(pathBootstrap, \"rb\");\n         if (file) {\n-            boost::filesystem::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n+            fs::path pathBootstrapOld = GetDataDir() / \"bootstrap.dat.old\";\n             LogPrintf(\"Importing bootstrap.dat...\\n\");\n             LoadExternalBlockFile(chainparams, file);\n             RenameOver(pathBootstrap, pathBootstrapOld);\n@@ -651,8 +664,8 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n     }\n \n     // -loadblock=\n-    BOOST_FOREACH(const boost::filesystem::path& path, vImportFiles) {\n-        FILE *file = fopen(path.string().c_str(), \"rb\");\n+    BOOST_FOREACH(const fs::path& path, vImportFiles) {\n+        FILE *file = fsbridge::fopen(path, \"rb\");\n         if (file) {\n             LogPrintf(\"Importing blocks file %s...\\n\", path.string());\n             LoadExternalBlockFile(chainparams, file);\n@@ -673,8 +686,10 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         StartShutdown();\n     }\n     } // End scope of CImportingNow\n-    LoadMempool();\n-    fDumpMempoolLater = !fRequestShutdown;\n+    if (GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+        LoadMempool();\n+        fDumpMempoolLater = !fRequestShutdown;\n+    }\n }\n \n /** Sanity checks\n@@ -687,9 +702,15 @@ bool InitSanityCheck(void)\n         InitError(\"Elliptic curve cryptography sanity check failure. Aborting.\");\n         return false;\n     }\n+\n     if (!glibc_sanity_test() || !glibcxx_sanity_test())\n         return false;\n \n+    if (!Random_SanityCheck()) {\n+        InitError(\"OS cryptographic RNG sanity check failure. Aborting.\");\n+        return false;\n+    }\n+\n     return true;\n }\n \n@@ -725,7 +746,7 @@ void InitParameterInteraction()\n             LogPrintf(\"%s: parameter interaction: -whitebind set -> setting -listen=1\\n\", __func__);\n     }\n \n-    if (mapMultiArgs.count(\"-connect\") && mapMultiArgs.at(\"-connect\").size() > 0) {\n+    if (gArgs.IsArgSet(\"-connect\")) {\n         // when only connecting to trusted nodes, do not seed via DNS, or listen by default\n         if (SoftSetBoolArg(\"-dnsseed\", false))\n             LogPrintf(\"%s: parameter interaction: -connect set -> setting -dnsseed=0\\n\", __func__);\n@@ -849,19 +870,11 @@ bool AppInitBasicSetup()\n     }\n \n     // Clean shutdown on SIGTERM\n-    struct sigaction sa;\n-    sa.sa_handler = HandleSIGTERM;\n-    sigemptyset(&sa.sa_mask);\n-    sa.sa_flags = 0;\n-    sigaction(SIGTERM, &sa, NULL);\n-    sigaction(SIGINT, &sa, NULL);\n+    registerSignalHandler(SIGTERM, HandleSIGTERM);\n+    registerSignalHandler(SIGINT, HandleSIGTERM);\n \n     // Reopen debug.log on SIGHUP\n-    struct sigaction sa_hup;\n-    sa_hup.sa_handler = HandleSIGHUP;\n-    sigemptyset(&sa_hup.sa_mask);\n-    sa_hup.sa_flags = 0;\n-    sigaction(SIGHUP, &sa_hup, NULL);\n+    registerSignalHandler(SIGHUP, HandleSIGHUP);\n \n     // Ignore SIGPIPE, otherwise it will bring the daemon down if the client closes unexpectedly\n     signal(SIGPIPE, SIG_IGN);\n@@ -887,8 +900,8 @@ bool AppInitParameterInteraction()\n \n     // Make sure enough file descriptors are available\n     int nBind = std::max(\n-                (mapMultiArgs.count(\"-bind\") ? mapMultiArgs.at(\"-bind\").size() : 0) +\n-                (mapMultiArgs.count(\"-whitebind\") ? mapMultiArgs.at(\"-whitebind\").size() : 0), size_t(1));\n+                (gArgs.IsArgSet(\"-bind\") ? gArgs.GetArgs(\"-bind\").size() : 0) +\n+                (gArgs.IsArgSet(\"-whitebind\") ? gArgs.GetArgs(\"-whitebind\").size() : 0), size_t(1));\n     nUserMaxConnections = GetArg(\"-maxconnections\", DEFAULT_MAX_PEER_CONNECTIONS);\n     nMaxConnections = std::max(nUserMaxConnections, 0);\n \n@@ -903,13 +916,32 @@ bool AppInitParameterInteraction()\n         InitWarning(strprintf(_(\"Reducing -maxconnections from %d to %d, because of system limitations.\"), nUserMaxConnections, nMaxConnections));\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n+    if (gArgs.IsArgSet(\"-debug\")) {\n+        // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n+        const std::vector<std::string> categories = gArgs.GetArgs(\"-debug\");\n+\n+        if (find(categories.begin(), categories.end(), std::string(\"0\")) == categories.end()) {\n+            for (const auto& cat : categories) {\n+                uint32_t flag = 0;\n+                if (!GetLogCategory(&flag, &cat)) {\n+                    InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debug\", cat));\n+                    continue;\n+                }\n+                logCategories |= flag;\n+            }\n+        }\n+    }\n \n-    fDebug = mapMultiArgs.count(\"-debug\");\n-    // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n-    if (fDebug) {\n-        const std::vector<std::string>& categories = mapMultiArgs.at(\"-debug\");\n-        if (GetBoolArg(\"-nodebug\", false) || find(categories.begin(), categories.end(), std::string(\"0\")) != categories.end())\n-            fDebug = false;\n+    // Now remove the logging categories which were explicitly excluded\n+    if (gArgs.IsArgSet(\"-debugexclude\")) {\n+        for (const std::string& cat : gArgs.GetArgs(\"-debugexclude\")) {\n+            uint32_t flag = 0;\n+            if (!GetLogCategory(&flag, &cat)) {\n+                InitWarning(strprintf(_(\"Unsupported logging category %s=%s.\"), \"-debugexclude\", cat));\n+                continue;\n+            }\n+            logCategories &= ~flag;\n+        }\n     }\n \n     // Check for -debugnet\n@@ -950,7 +982,7 @@ bool AppInitParameterInteraction()\n     int64_t nMempoolSizeMin = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000 * 40;\n     if (nMempoolSizeMax < 0 || nMempoolSizeMax < nMempoolSizeMin)\n         return InitError(strprintf(_(\"-maxmempool must be at least %d MB\"), std::ceil(nMempoolSizeMin / 1000000.0)));\n-    // incremental relay fee sets the minimimum feerate increase necessary for BIP 125 replacement in the mempool\n+    // incremental relay fee sets the minimum feerate increase necessary for BIP 125 replacement in the mempool\n     // and the amount the mempool min fee increases above the feerate of txs evicted due to mempool limiting.\n     if (IsArgSet(\"-incrementalrelayfee\"))\n     {\n@@ -996,17 +1028,18 @@ bool AppInitParameterInteraction()\n     if (nConnectTimeout <= 0)\n         nConnectTimeout = DEFAULT_CONNECT_TIMEOUT;\n \n-    // Fee-per-kilobyte amount considered the same as \"free\"\n+    // Fee-per-kilobyte amount required for mempool acceptance and relay\n     // If you are mining, be careful setting this:\n     // if you set it to zero then\n     // a transaction spammer can cheaply fill blocks using\n-    // 1-satoshi-fee transactions. It should be set above the real\n+    // 0-fee transactions. It should be set above the real\n     // cost to you of processing a transaction.\n     if (IsArgSet(\"-minrelaytxfee\"))\n     {\n         CAmount n = 0;\n-        if (!ParseMoney(GetArg(\"-minrelaytxfee\", \"\"), n) || 0 == n)\n+        if (!ParseMoney(GetArg(\"-minrelaytxfee\", \"\"), n)) {\n             return InitError(AmountErrMsg(\"minrelaytxfee\", GetArg(\"-minrelaytxfee\", \"\")));\n+        }\n         // High fee check is done afterward in CWallet::ParameterInteraction()\n         ::minRelayTxFee = CFeeRate(n);\n     } else if (incrementalRelayFee > ::minRelayTxFee) {\n@@ -1071,15 +1104,14 @@ bool AppInitParameterInteraction()\n         fEnableReplacement = (std::find(vstrReplacementModes.begin(), vstrReplacementModes.end(), \"fee\") != vstrReplacementModes.end());\n     }\n \n-    if (mapMultiArgs.count(\"-bip9params\")) {\n+    if (gArgs.IsArgSet(\"-bip9params\")) {\n         // Allow overriding BIP9 parameters for testing\n         if (!chainparams.MineBlocksOnDemand()) {\n             return InitError(\"BIP9 parameters may only be overridden on regtest.\");\n         }\n-        const std::vector<std::string>& deployments = mapMultiArgs.at(\"-bip9params\");\n-        for (auto i : deployments) {\n+        for (const std::string& strDeployment : gArgs.GetArgs(\"-bip9params\")) {\n             std::vector<std::string> vDeploymentParams;\n-            boost::split(vDeploymentParams, i, boost::is_any_of(\":\"));\n+            boost::split(vDeploymentParams, strDeployment, boost::is_any_of(\":\"));\n             if (vDeploymentParams.size() != 3) {\n                 return InitError(\"BIP9 parameters malformed, expecting deployment:start:end\");\n             }\n@@ -1094,7 +1126,7 @@ bool AppInitParameterInteraction()\n             for (int j=0; j<(int)Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++j)\n             {\n                 if (vDeploymentParams[0].compare(VersionBitsDeploymentInfo[j].name) == 0) {\n-                    UpdateRegtestBIP9Parameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n+                    UpdateBIP9Parameters(Consensus::DeploymentPos(j), nStartTime, nTimeout);\n                     found = true;\n                     LogPrintf(\"Setting BIP9 activation parameters for %s to start=%ld, timeout=%ld\\n\", vDeploymentParams[0], nStartTime, nTimeout);\n                     break;\n@@ -1113,8 +1145,8 @@ static bool LockDataDirectory(bool probeOnly)\n     std::string strDataDir = GetDataDir().string();\n \n     // Make sure only a single Bitcoin process is using the data directory.\n-    boost::filesystem::path pathLockFile = GetDataDir() / \".lock\";\n-    FILE* file = fopen(pathLockFile.string().c_str(), \"a\"); // empty lock file; created if it doesn't exist.\n+    fs::path pathLockFile = GetDataDir() / \".lock\";\n+    FILE* file = fsbridge::fopen(pathLockFile, \"a\"); // empty lock file; created if it doesn't exist.\n     if (file) fclose(file);\n \n     try {\n@@ -1162,7 +1194,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n #ifndef WIN32\n     CreatePidFile(GetPidFile(), getpid());\n #endif\n-    if (GetBoolArg(\"-shrinkdebugfile\", !fDebug)) {\n+    if (GetBoolArg(\"-shrinkdebugfile\", logCategories == BCLog::NONE)) {\n         // Do this first since it both loads a bunch of debug.log into memory,\n         // and because this needs to happen before any other debug.log printing\n         ShrinkDebugFile();\n@@ -1225,8 +1257,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     // sanitize comments per BIP-0014, format user agent and check total size\n     std::vector<std::string> uacomments;\n-    if (mapMultiArgs.count(\"-uacomment\")) {\n-        BOOST_FOREACH(std::string cmt, mapMultiArgs.at(\"-uacomment\"))\n+    if (gArgs.IsArgSet(\"-uacomment\")) {\n+        BOOST_FOREACH(std::string cmt, gArgs.GetArgs(\"-uacomment\"))\n         {\n             if (cmt != SanitizeString(cmt, SAFE_CHARS_UA_COMMENT))\n                 return InitError(strprintf(_(\"User Agent comment (%s) contains unsafe characters.\"), cmt));\n@@ -1239,9 +1271,9 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n             strSubVersion.size(), MAX_SUBVERSION_LENGTH));\n     }\n \n-    if (mapMultiArgs.count(\"-onlynet\")) {\n+    if (gArgs.IsArgSet(\"-onlynet\")) {\n         std::set<enum Network> nets;\n-        BOOST_FOREACH(const std::string& snet, mapMultiArgs.at(\"-onlynet\")) {\n+        BOOST_FOREACH(const std::string& snet, gArgs.GetArgs(\"-onlynet\")) {\n             enum Network net = ParseNetwork(snet);\n             if (net == NET_UNROUTABLE)\n                 return InitError(strprintf(_(\"Unknown network specified in -onlynet: '%s'\"), snet));\n@@ -1254,8 +1286,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    if (mapMultiArgs.count(\"-whitelist\")) {\n-        BOOST_FOREACH(const std::string& net, mapMultiArgs.at(\"-whitelist\")) {\n+    if (gArgs.IsArgSet(\"-whitelist\")) {\n+        BOOST_FOREACH(const std::string& net, gArgs.GetArgs(\"-whitelist\")) {\n             CSubNet subnet;\n             LookupSubNet(net.c_str(), subnet);\n             if (!subnet.IsValid())\n@@ -1264,16 +1296,23 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n+    // Check for host lookup allowed before parsing any network related parameters\n+    fNameLookup = GetBoolArg(\"-dns\", DEFAULT_NAME_LOOKUP);\n+\n     bool proxyRandomize = GetBoolArg(\"-proxyrandomize\", DEFAULT_PROXYRANDOMIZE);\n     // -proxy sets a proxy for all outgoing network traffic\n     // -noproxy (or -proxy=0) as well as the empty string can be used to not set a proxy, this is the default\n     std::string proxyArg = GetArg(\"-proxy\", \"\");\n     SetLimited(NET_TOR);\n     if (proxyArg != \"\" && proxyArg != \"0\") {\n-        CService resolved(LookupNumeric(proxyArg.c_str(), 9050));\n-        proxyType addrProxy = proxyType(resolved, proxyRandomize);\n+        CService proxyAddr;\n+        if (!Lookup(proxyArg.c_str(), proxyAddr, 9050, fNameLookup)) {\n+            return InitError(strprintf(_(\"Invalid -proxy address or hostname: '%s'\"), proxyArg));\n+        }\n+\n+        proxyType addrProxy = proxyType(proxyAddr, proxyRandomize);\n         if (!addrProxy.IsValid())\n-            return InitError(strprintf(_(\"Invalid -proxy address: '%s'\"), proxyArg));\n+            return InitError(strprintf(_(\"Invalid -proxy address or hostname: '%s'\"), proxyArg));\n \n         SetProxy(NET_IPV4, addrProxy);\n         SetProxy(NET_IPV6, addrProxy);\n@@ -1290,10 +1329,13 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         if (onionArg == \"0\") { // Handle -noonion/-onion=0\n             SetLimited(NET_TOR); // set onions as unreachable\n         } else {\n-            CService resolved(LookupNumeric(onionArg.c_str(), 9050));\n-            proxyType addrOnion = proxyType(resolved, proxyRandomize);\n+            CService onionProxy;\n+            if (!Lookup(onionArg.c_str(), onionProxy, 9050, fNameLookup)) {\n+                return InitError(strprintf(_(\"Invalid -onion address or hostname: '%s'\"), onionArg));\n+            }\n+            proxyType addrOnion = proxyType(onionProxy, proxyRandomize);\n             if (!addrOnion.IsValid())\n-                return InitError(strprintf(_(\"Invalid -onion address: '%s'\"), onionArg));\n+                return InitError(strprintf(_(\"Invalid -onion address or hostname: '%s'\"), onionArg));\n             SetProxy(NET_TOR, addrOnion);\n             SetLimited(NET_TOR, false);\n         }\n@@ -1302,21 +1344,20 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // see Step 2: parameter interactions for more information about these\n     fListen = GetBoolArg(\"-listen\", DEFAULT_LISTEN);\n     fDiscover = GetBoolArg(\"-discover\", true);\n-    fNameLookup = GetBoolArg(\"-dns\", DEFAULT_NAME_LOOKUP);\n     fRelayTxes = !GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY);\n \n     if (fListen) {\n         bool fBound = false;\n-        if (mapMultiArgs.count(\"-bind\")) {\n-            BOOST_FOREACH(const std::string& strBind, mapMultiArgs.at(\"-bind\")) {\n+        if (gArgs.IsArgSet(\"-bind\")) {\n+            BOOST_FOREACH(const std::string& strBind, gArgs.GetArgs(\"-bind\")) {\n                 CService addrBind;\n                 if (!Lookup(strBind.c_str(), addrBind, GetListenPort(), false))\n                     return InitError(ResolveErrMsg(\"bind\", strBind));\n                 fBound |= Bind(connman, addrBind, (BF_EXPLICIT | BF_REPORT_ERROR));\n             }\n         }\n-        if (mapMultiArgs.count(\"-whitebind\")) {\n-            BOOST_FOREACH(const std::string& strBind, mapMultiArgs.at(\"-whitebind\")) {\n+        if (gArgs.IsArgSet(\"-whitebind\")) {\n+            BOOST_FOREACH(const std::string& strBind, gArgs.GetArgs(\"-whitebind\")) {\n                 CService addrBind;\n                 if (!Lookup(strBind.c_str(), addrBind, 0, false))\n                     return InitError(ResolveErrMsg(\"whitebind\", strBind));\n@@ -1325,7 +1366,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                 fBound |= Bind(connman, addrBind, (BF_EXPLICIT | BF_REPORT_ERROR | BF_WHITELIST));\n             }\n         }\n-        if (!mapMultiArgs.count(\"-bind\") && !mapMultiArgs.count(\"-whitebind\")) {\n+        if (!gArgs.IsArgSet(\"-bind\") && !gArgs.IsArgSet(\"-whitebind\")) {\n             struct in_addr inaddr_any;\n             inaddr_any.s_addr = INADDR_ANY;\n             fBound |= Bind(connman, CService(in6addr_any, GetListenPort()), BF_NONE);\n@@ -1335,8 +1376,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n             return InitError(_(\"Failed to listen on any port. Use -listen=0 if you want this.\"));\n     }\n \n-    if (mapMultiArgs.count(\"-externalip\")) {\n-        BOOST_FOREACH(const std::string& strAddr, mapMultiArgs.at(\"-externalip\")) {\n+    if (gArgs.IsArgSet(\"-externalip\")) {\n+        BOOST_FOREACH(const std::string& strAddr, gArgs.GetArgs(\"-externalip\")) {\n             CService addrLocal;\n             if (Lookup(strAddr.c_str(), addrLocal, GetListenPort(), fNameLookup) && addrLocal.IsValid())\n                 AddLocal(addrLocal, LOCAL_MANUAL);\n@@ -1345,8 +1386,8 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n         }\n     }\n \n-    if (mapMultiArgs.count(\"-seednode\")) {\n-        BOOST_FOREACH(const std::string& strDest, mapMultiArgs.at(\"-seednode\"))\n+    if (gArgs.IsArgSet(\"-seednode\")) {\n+        BOOST_FOREACH(const std::string& strDest, gArgs.GetArgs(\"-seednode\"))\n             connman.AddOneShot(strDest);\n     }\n \n@@ -1369,32 +1410,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fReindex = GetBoolArg(\"-reindex\", false);\n     bool fReindexChainState = GetBoolArg(\"-reindex-chainstate\", false);\n \n-    // Upgrading to 0.8; hard-link the old blknnnn.dat files into /blocks/\n-    boost::filesystem::path blocksDir = GetDataDir() / \"blocks\";\n-    if (!boost::filesystem::exists(blocksDir))\n-    {\n-        boost::filesystem::create_directories(blocksDir);\n-        bool linked = false;\n-        for (unsigned int i = 1; i < 10000; i++) {\n-            boost::filesystem::path source = GetDataDir() / strprintf(\"blk%04u.dat\", i);\n-            if (!boost::filesystem::exists(source)) break;\n-            boost::filesystem::path dest = blocksDir / strprintf(\"blk%05u.dat\", i-1);\n-            try {\n-                boost::filesystem::create_hard_link(source, dest);\n-                LogPrintf(\"Hardlinked %s -> %s\\n\", source.string(), dest.string());\n-                linked = true;\n-            } catch (const boost::filesystem::filesystem_error& e) {\n-                // Note: hardlink creation failing is not a disaster, it just means\n-                // blocks will get re-downloaded from peers.\n-                LogPrintf(\"Error hardlinking blk%04u.dat: %s\\n\", i, e.what());\n-                break;\n-            }\n-        }\n-        if (linked)\n-        {\n-            fReindex = true;\n-        }\n-    }\n+    fs::create_directories(GetDataDir() / \"blocks\");\n \n     // cache size calculations\n     int64_t nTotalCache = (GetArg(\"-dbcache\", nDefaultDbCache) << 20);\n@@ -1502,7 +1518,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n                     break;\n                 }\n             } catch (const std::exception& e) {\n-                if (fDebug) LogPrintf(\"%s\\n\", e.what());\n+                LogPrintf(\"%s\\n\", e.what());\n                 strLoadError = _(\"Error opening block database\");\n                 break;\n             }\n@@ -1540,11 +1556,11 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     }\n     LogPrintf(\" block index %15dms\\n\", GetTimeMillis() - nStart);\n \n-    boost::filesystem::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n-    CAutoFile est_filein(fopen(est_path.string().c_str(), \"rb\"), SER_DISK, CLIENT_VERSION);\n+    fs::path est_path = GetDataDir() / FEE_ESTIMATES_FILENAME;\n+    CAutoFile est_filein(fsbridge::fopen(est_path, \"rb\"), SER_DISK, CLIENT_VERSION);\n     // Allowed to fail as this file IS missing on first startup.\n     if (!est_filein.IsNull())\n-        mempool.ReadFeeEstimates(est_filein);\n+        ::feeEstimator.Read(est_filein);\n     fFeeEstimatesInitialized = true;\n \n     // ********************************************************* Step 8: load wallet\n@@ -1596,10 +1612,10 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n     if (IsArgSet(\"-blocknotify\"))\n         uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n \n-    std::vector<boost::filesystem::path> vImportFiles;\n-    if (mapMultiArgs.count(\"-loadblock\"))\n+    std::vector<fs::path> vImportFiles;\n+    if (gArgs.IsArgSet(\"-loadblock\"))\n     {\n-        BOOST_FOREACH(const std::string& strFile, mapMultiArgs.at(\"-loadblock\"))\n+        BOOST_FOREACH(const std::string& strFile, gArgs.GetArgs(\"-loadblock\"))\n             vImportFiles.push_back(strFile);\n     }\n \n@@ -1653,7 +1669,7 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n #ifdef ENABLE_WALLET\n     if (pwalletMain)\n-        pwalletMain->postInitProcess(threadGroup);\n+        pwalletMain->postInitProcess(scheduler);\n #endif\n \n     return !fRequestShutdown;"
      },
      {
        "sha": "5a75647f1a44163fce0660cad0b444dbbc5e4a64",
        "filename": "src/key.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/key.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/key.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -131,14 +131,6 @@ void CKey::MakeNewKey(bool fCompressedIn) {\n     fCompressed = fCompressedIn;\n }\n \n-bool CKey::SetPrivKey(const CPrivKey &privkey, bool fCompressedIn) {\n-    if (!ec_privkey_import_der(secp256k1_context_sign, (unsigned char*)begin(), &privkey[0], privkey.size()))\n-        return false;\n-    fCompressed = fCompressedIn;\n-    fValid = true;\n-    return true;\n-}\n-\n CPrivKey CKey::GetPrivKey() const {\n     assert(fValid);\n     CPrivKey privkey;"
      },
      {
        "sha": "2c6f151727b6447fc1ac7c2816310d434195ab7f",
        "filename": "src/key.h",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/key.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/key.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/key.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -45,7 +45,7 @@ class CKey\n     //! The actual byte data\n     std::vector<unsigned char, secure_allocator<unsigned char> > keydata;\n \n-    //! Check whether the 32-byte array pointed to be vch is valid keydata.\n+    //! Check whether the 32-byte array pointed to by vch is valid keydata.\n     bool static Check(const unsigned char* vch);\n \n public:\n@@ -94,9 +94,6 @@ class CKey\n     //! Check whether the public key corresponding to this private key is (to be) compressed.\n     bool IsCompressed() const { return fCompressed; }\n \n-    //! Initialize from a CPrivKey (serialized OpenSSL private key data).\n-    bool SetPrivKey(const CPrivKey& vchPrivKey, bool fCompressed);\n-\n     //! Generate a new private key using a cryptographic PRNG.\n     void MakeNewKey(bool fCompressed);\n "
      },
      {
        "sha": "b69acafffd11a37a9263dacabbc29d4fd2924c17",
        "filename": "src/memusage.h",
        "status": "modified",
        "additions": 17,
        "deletions": 3,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/memusage.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -12,6 +12,8 @@\n #include <map>\n #include <set>\n #include <vector>\n+#include <unordered_map>\n+#include <unordered_set>\n \n #include <boost/foreach.hpp>\n #include <boost/unordered_set.hpp>\n@@ -149,7 +151,7 @@ static inline size_t DynamicUsage(const std::shared_ptr<X>& p)\n // Boost data structures\n \n template<typename X>\n-struct boost_unordered_node : private X\n+struct unordered_node : private X\n {\n private:\n     void* ptr;\n@@ -158,13 +160,25 @@ struct boost_unordered_node : private X\n template<typename X, typename Y>\n static inline size_t DynamicUsage(const boost::unordered_set<X, Y>& s)\n {\n-    return MallocUsage(sizeof(boost_unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n }\n \n template<typename X, typename Y, typename Z>\n static inline size_t DynamicUsage(const boost::unordered_map<X, Y, Z>& m)\n {\n-    return MallocUsage(sizeof(boost_unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n+}\n+\n+template<typename X, typename Y>\n+static inline size_t DynamicUsage(const std::unordered_set<X, Y>& s)\n+{\n+    return MallocUsage(sizeof(unordered_node<X>)) * s.size() + MallocUsage(sizeof(void*) * s.bucket_count());\n+}\n+\n+template<typename X, typename Y, typename Z>\n+static inline size_t DynamicUsage(const std::unordered_map<X, Y, Z>& m)\n+{\n+    return MallocUsage(sizeof(unordered_node<std::pair<const X, Y> >)) * m.size() + MallocUsage(sizeof(void*) * m.bucket_count());\n }\n \n }"
      },
      {
        "sha": "78d7cd60010529afa6b3310eba69f5bccb0df7ee",
        "filename": "src/merkleblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/merkleblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/merkleblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -65,7 +65,7 @@ uint256 CPartialMerkleTree::CalcHash(int height, unsigned int pos, const std::ve\n     } else {\n         // calculate left hash\n         uint256 left = CalcHash(height-1, pos*2, vTxid), right;\n-        // calculate right hash if not beyond the end of the array - copy left hash otherwise1\n+        // calculate right hash if not beyond the end of the array - copy left hash otherwise\n         if (pos*2+1 < CalcTreeWidth(height-1))\n             right = CalcHash(height-1, pos*2+1, vTxid);\n         else"
      },
      {
        "sha": "de4c5c8d29e7329b36c64b07f0ee5a768c8c7544",
        "filename": "src/merkleblock.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/merkleblock.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/merkleblock.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/merkleblock.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -23,7 +23,7 @@\n  * storing a bit for each traversed node, signifying whether the node is the\n  * parent of at least one matched leaf txid (or a matched txid itself). In\n  * case we are at the leaf level, or this bit is 0, its merkle node hash is\n- * stored, and its children are not explorer further. Otherwise, no hash is\n+ * stored, and its children are not explored further. Otherwise, no hash is\n  * stored, but we recurse into both (or the only) child branch. During\n  * decoding, the same depth-first traversal is performed, consuming bits and\n  * hashes as they written during encoding."
      },
      {
        "sha": "8be5a0e878aeffc996a0815ee0284e487f2f45aa",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -643,4 +643,4 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n \n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n     pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "5428d6bb9aa71129ff8de622b12765f4fa1d3e16",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -213,4 +213,4 @@ class BlockAssembler\n void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n-#endif // BITCOIN_MINER_H\n+#endif // BITCOIN_MINER_H\n\\ No newline at end of file"
      },
      {
        "sha": "198d8f5fff6ebc05eb3c3e9c899044fbaf0cc9d1",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 99,
        "deletions": 99,
        "changes": 198,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -44,10 +44,15 @@\n // We add a random period time (0 to 1 seconds) to feeler connections to prevent synchronization.\n #define FEELER_SLEEP_WINDOW 1\n \n-#if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n+#if !defined(HAVE_MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n #endif\n \n+// MSG_DONTWAIT is not available on some platforms, if it doesn't exist define it as 0\n+#if !defined(HAVE_MSG_DONTWAIT)\n+#define MSG_DONTWAIT 0\n+#endif\n+\n // Fix for ancient MinGW versions, that don't have defined these in ws2tcpip.h.\n // Todo: Can be removed when our pull-tester is upgraded to a modern MinGW version.\n #ifdef WIN32\n@@ -185,7 +190,7 @@ void AdvertiseLocal(CNode *pnode)\n         }\n         if (addrLocal.IsRoutable())\n         {\n-            LogPrint(\"net\", \"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString());\n+            LogPrint(BCLog::NET, \"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString());\n             FastRandomContext insecure_rand;\n             pnode->PushAddress(addrLocal, insecure_rand);\n         }\n@@ -351,7 +356,7 @@ CNode* CConnman::ConnectNode(CAddress addrConnect, const char *pszDest, bool fCo\n     }\n \n     /// debug print\n-    LogPrint(\"net\", \"trying connection %s lastseen=%.1fhrs\\n\",\n+    LogPrint(BCLog::NET, \"trying connection %s lastseen=%.1fhrs\\n\",\n         pszDest ? pszDest : addrConnect.ToString(),\n         pszDest ? 0.0 : (double)(GetAdjustedTime() - addrConnect.nTime)/3600.0);\n \n@@ -413,12 +418,12 @@ void CConnman::DumpBanlist()\n \n     CBanDB bandb;\n     banmap_t banmap;\n-    SetBannedSetDirty(false);\n     GetBanned(banmap);\n-    if (!bandb.Write(banmap))\n-        SetBannedSetDirty(true);\n+    if (bandb.Write(banmap)) {\n+        SetBannedSetDirty(false);\n+    }\n \n-    LogPrint(\"net\", \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n+    LogPrint(BCLog::NET, \"Flushed %d banned node ips/subnets to banlist.dat  %dms\\n\",\n         banmap.size(), GetTimeMillis() - nStart);\n }\n \n@@ -428,7 +433,7 @@ void CNode::CloseSocketDisconnect()\n     LOCK(cs_hSocket);\n     if (hSocket != INVALID_SOCKET)\n     {\n-        LogPrint(\"net\", \"disconnecting peer=%d\\n\", id);\n+        LogPrint(BCLog::NET, \"disconnecting peer=%d\\n\", id);\n         CloseSocket(hSocket);\n     }\n }\n@@ -536,6 +541,8 @@ bool CConnman::Unban(const CSubNet &subNet) {\n void CConnman::GetBanned(banmap_t &banMap)\n {\n     LOCK(cs_setBanned);\n+    // Sweep the banlist so expired bans are not returned\n+    SweepBanned();\n     banMap = setBanned; //create a thread safe copy\n }\n \n@@ -560,7 +567,7 @@ void CConnman::SweepBanned()\n         {\n             setBanned.erase(it++);\n             setBannedIsDirty = true;\n-            LogPrint(\"net\", \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n+            LogPrint(BCLog::NET, \"%s: Removed banned node ip/subnet from banlist.dat: %s\\n\", __func__, subNet.ToString());\n         }\n         else\n             ++it;\n@@ -703,10 +710,10 @@ bool CNode::ReceiveMsgBytes(const char *pch, unsigned int nBytes, bool& complete\n             handled = msg.readData(pch, nBytes);\n \n         if (handled < 0)\n-                return false;\n+            return false;\n \n         if (msg.in_data && msg.hdr.nMessageSize > MAX_PROTOCOL_MESSAGE_LENGTH) {\n-            LogPrint(\"net\", \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n+            LogPrint(BCLog::NET, \"Oversized message from peer=%i, disconnecting\\n\", GetId());\n             return false;\n         }\n \n@@ -781,7 +788,7 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n \n     // reject messages larger than MAX_SIZE\n     if (hdr.nMessageSize > MAX_SIZE)\n-            return -1;\n+        return -1;\n \n     // switch state to reading message data\n     in_data = true;\n@@ -941,7 +948,7 @@ bool CConnman::AttemptToEvictConnection()\n                 continue;\n             if (node->fDisconnect)\n                 continue;\n-            NodeEvictionCandidate candidate = {node->id, node->nTimeConnected, node->nMinPingUsecTime,\n+            NodeEvictionCandidate candidate = {node->GetId(), node->nTimeConnected, node->nMinPingUsecTime,\n                                                node->nLastBlockTime, node->nLastTXTime,\n                                                (node->nServices & nRelevantServices) == nRelevantServices,\n                                                node->fRelayTxes, node->pfilter != NULL, node->addr, node->nKeyedNetGroup};\n@@ -1064,12 +1071,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n \n     // According to the internet TCP_NODELAY is not carried into accepted sockets\n     // on all platforms.  Set it again here just to be sure.\n-    int set = 1;\n-#ifdef WIN32\n-    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n-#else\n-    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n-#endif\n+    SetSocketNoDelay(hSocket);\n \n     if (IsBanned(addr) && !whitelisted)\n     {\n@@ -1082,7 +1084,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     {\n         if (!AttemptToEvictConnection()) {\n             // No connection to evict, disconnect the new connection\n-            LogPrint(\"net\", \"failed to find an eviction candidate - connection dropped (full)\\n\");\n+            LogPrint(BCLog::NET, \"failed to find an eviction candidate - connection dropped (full)\\n\");\n             CloseSocket(hSocket);\n             return;\n         }\n@@ -1096,7 +1098,7 @@ void CConnman::AcceptConnection(const ListenSocket& hListenSocket) {\n     pnode->fWhitelisted = whitelisted;\n     GetNodeSignals().InitializeNode(pnode, *this);\n \n-    LogPrint(\"net\", \"connection from %s accepted\\n\", addr.ToString());\n+    LogPrint(BCLog::NET, \"connection from %s accepted\\n\", addr.ToString());\n \n     {\n         LOCK(cs_vNodes);\n@@ -1294,58 +1296,55 @@ void CConnman::ThreadSocketHandler()\n             }\n             if (recvSet || errorSet)\n             {\n+                // typical socket buffer is 8K-64K\n+                char pchBuf[0x10000];\n+                int nBytes = 0;\n                 {\n-                    {\n-                        // typical socket buffer is 8K-64K\n-                        char pchBuf[0x10000];\n-                        int nBytes = 0;\n-                        {\n-                            LOCK(pnode->cs_hSocket);\n-                            if (pnode->hSocket == INVALID_SOCKET)\n-                                continue;\n-                            nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n-                        }\n-                        if (nBytes > 0)\n-                        {\n-                            bool notify = false;\n-                            if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n-                                pnode->CloseSocketDisconnect();\n-                            RecordBytesRecv(nBytes);\n-                            if (notify) {\n-                                size_t nSizeAdded = 0;\n-                                auto it(pnode->vRecvMsg.begin());\n-                                for (; it != pnode->vRecvMsg.end(); ++it) {\n-                                    if (!it->complete())\n-                                        break;\n-                                    nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n-                                }\n-                                {\n-                                    LOCK(pnode->cs_vProcessMsg);\n-                                    pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n-                                    pnode->nProcessQueueSize += nSizeAdded;\n-                                    pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n-                                }\n-                                WakeMessageHandler();\n-                            }\n-                        }\n-                        else if (nBytes == 0)\n-                        {\n-                            // socket closed gracefully\n-                            if (!pnode->fDisconnect)\n-                                LogPrint(\"net\", \"socket closed\\n\");\n-                            pnode->CloseSocketDisconnect();\n+                    LOCK(pnode->cs_hSocket);\n+                    if (pnode->hSocket == INVALID_SOCKET)\n+                        continue;\n+                    nBytes = recv(pnode->hSocket, pchBuf, sizeof(pchBuf), MSG_DONTWAIT);\n+                }\n+                if (nBytes > 0)\n+                {\n+                    bool notify = false;\n+                    if (!pnode->ReceiveMsgBytes(pchBuf, nBytes, notify))\n+                        pnode->CloseSocketDisconnect();\n+                    RecordBytesRecv(nBytes);\n+                    if (notify) {\n+                        size_t nSizeAdded = 0;\n+                        auto it(pnode->vRecvMsg.begin());\n+                        for (; it != pnode->vRecvMsg.end(); ++it) {\n+                            if (!it->complete())\n+                                break;\n+                            nSizeAdded += it->vRecv.size() + CMessageHeader::HEADER_SIZE;\n                         }\n-                        else if (nBytes < 0)\n                         {\n-                            // error\n-                            int nErr = WSAGetLastError();\n-                            if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n-                            {\n-                                if (!pnode->fDisconnect)\n-                                    LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n-                                pnode->CloseSocketDisconnect();\n-                            }\n+                            LOCK(pnode->cs_vProcessMsg);\n+                            pnode->vProcessMsg.splice(pnode->vProcessMsg.end(), pnode->vRecvMsg, pnode->vRecvMsg.begin(), it);\n+                            pnode->nProcessQueueSize += nSizeAdded;\n+                            pnode->fPauseRecv = pnode->nProcessQueueSize > nReceiveFloodSize;\n                         }\n+                        WakeMessageHandler();\n+                    }\n+                }\n+                else if (nBytes == 0)\n+                {\n+                    // socket closed gracefully\n+                    if (!pnode->fDisconnect) {\n+                        LogPrint(BCLog::NET, \"socket closed\\n\");\n+                    }\n+                    pnode->CloseSocketDisconnect();\n+                }\n+                else if (nBytes < 0)\n+                {\n+                    // error\n+                    int nErr = WSAGetLastError();\n+                    if (nErr != WSAEWOULDBLOCK && nErr != WSAEMSGSIZE && nErr != WSAEINTR && nErr != WSAEINPROGRESS)\n+                    {\n+                        if (!pnode->fDisconnect)\n+                            LogPrintf(\"socket recv error %s\\n\", NetworkErrorString(nErr));\n+                        pnode->CloseSocketDisconnect();\n                     }\n                 }\n             }\n@@ -1370,7 +1369,7 @@ void CConnman::ThreadSocketHandler()\n             {\n                 if (pnode->nLastRecv == 0 || pnode->nLastSend == 0)\n                 {\n-                    LogPrint(\"net\", \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->id);\n+                    LogPrint(BCLog::NET, \"socket no message in first 60 seconds, %d %d from %d\\n\", pnode->nLastRecv != 0, pnode->nLastSend != 0, pnode->GetId());\n                     pnode->fDisconnect = true;\n                 }\n                 else if (nTime - pnode->nLastSend > TIMEOUT_INTERVAL)\n@@ -1390,7 +1389,7 @@ void CConnman::ThreadSocketHandler()\n                 }\n                 else if (!pnode->fSuccessfullyConnected)\n                 {\n-                    LogPrintf(\"version handshake timeout from %d\\n\", pnode->id);\n+                    LogPrintf(\"version handshake timeout from %d\\n\", pnode->GetId());\n                     pnode->fDisconnect = true;\n                 }\n             }\n@@ -1579,6 +1578,9 @@ void CConnman::ThreadDNSAddressSeed()\n     LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n     BOOST_FOREACH(const CDNSSeedData &seed, vSeeds) {\n+        if (interruptNet) {\n+            return;\n+        }\n         if (HaveNameProxy()) {\n             AddOneShot(seed.host);\n         } else {\n@@ -1596,6 +1598,9 @@ void CConnman::ThreadDNSAddressSeed()\n                     found++;\n                 }\n             }\n+            if (interruptNet) {\n+                return;\n+            }\n             // TODO: The seed name resolve may fail, yielding an IP of [::], which results in\n             // addrman assigning the same source to results from different seeds.\n             // This should switch to a hard-coded stable dummy IP for each seed name, so that the\n@@ -1629,7 +1634,7 @@ void CConnman::DumpAddresses()\n     CAddrDB adb;\n     adb.Write(addrman);\n \n-    LogPrint(\"net\", \"Flushed %d addresses to peers.dat  %dms\\n\",\n+    LogPrint(BCLog::NET, \"Flushed %d addresses to peers.dat  %dms\\n\",\n            addrman.size(), GetTimeMillis() - nStart);\n }\n \n@@ -1660,12 +1665,12 @@ void CConnman::ProcessOneShot()\n void CConnman::ThreadOpenConnections()\n {\n     // Connect to specific addresses\n-    if (mapMultiArgs.count(\"-connect\") && mapMultiArgs.at(\"-connect\").size() > 0)\n+    if (gArgs.IsArgSet(\"-connect\") && gArgs.GetArgs(\"-connect\").size() > 0)\n     {\n         for (int64_t nLoop = 0;; nLoop++)\n         {\n             ProcessOneShot();\n-            BOOST_FOREACH(const std::string& strAddr, mapMultiArgs.at(\"-connect\"))\n+            BOOST_FOREACH(const std::string& strAddr, gArgs.GetArgs(\"-connect\"))\n             {\n                 CAddress addr(CService(), NODE_NONE);\n                 OpenNetworkConnection(addr, false, NULL, strAddr.c_str());\n@@ -1802,7 +1807,7 @@ void CConnman::ThreadOpenConnections()\n                 int randsleep = GetRandInt(FEELER_SLEEP_WINDOW * 1000);\n                 if (!interruptNet.sleep_for(std::chrono::milliseconds(randsleep)))\n                     return;\n-                LogPrint(\"net\", \"Making feeler connection to %s\\n\", addrConnect.ToString());\n+                LogPrint(BCLog::NET, \"Making feeler connection to %s\\n\", addrConnect.ToString());\n             }\n \n             OpenNetworkConnection(addrConnect, (int)setConnected.size() >= std::min(nMaxConnections - 1, 2), &grant, NULL, false, fFeeler);\n@@ -1867,8 +1872,8 @@ void CConnman::ThreadOpenAddedConnections()\n {\n     {\n         LOCK(cs_vAddedNodes);\n-        if (mapMultiArgs.count(\"-addnode\"))\n-            vAddedNodes = mapMultiArgs.at(\"-addnode\");\n+        if (gArgs.IsArgSet(\"-addnode\"))\n+            vAddedNodes = gArgs.GetArgs(\"-addnode\");\n     }\n \n     while (true)\n@@ -2145,9 +2150,7 @@ void Discover(boost::thread_group& threadGroup)\n \n void CConnman::SetNetworkActive(bool active)\n {\n-    if (fDebug) {\n-        LogPrint(\"net\", \"SetNetworkActive: %s\\n\", active);\n-    }\n+    LogPrint(BCLog::NET, \"SetNetworkActive: %s\\n\", active);\n \n     if (!active) {\n         fNetworkActive = false;\n@@ -2210,8 +2213,9 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     SetBestHeight(connOptions.nBestHeight);\n \n     clientInterface = connOptions.uiInterface;\n-    if (clientInterface)\n-        clientInterface->InitMessage(_(\"Loading addresses...\"));\n+    if (clientInterface) {\n+        clientInterface->InitMessage(_(\"Loading P2P addresses...\"));\n+    }\n     // Load addresses from peers.dat\n     int64_t nStart = GetTimeMillis();\n     {\n@@ -2235,7 +2239,7 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n         SetBannedSetDirty(false); // no need to write down, just read data\n         SweepBanned(); // sweep out unused entries\n \n-        LogPrint(\"net\", \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n+        LogPrint(BCLog::NET, \"Loaded %d banned node ips/subnets from banlist.dat  %dms\\n\",\n             banmap.size(), GetTimeMillis() - nStart);\n     } else {\n         LogPrintf(\"Invalid or missing banlist.dat; recreating\\n\");\n@@ -2280,14 +2284,14 @@ bool CConnman::Start(CScheduler& scheduler, std::string& strNodeError, Options c\n     threadOpenAddedConnections = std::thread(&TraceThread<std::function<void()> >, \"addcon\", std::function<void()>(std::bind(&CConnman::ThreadOpenAddedConnections, this)));\n \n     // Initiate outbound connections unless connect=0\n-    if (!mapMultiArgs.count(\"-connect\") || mapMultiArgs.at(\"-connect\").size() != 1 || mapMultiArgs.at(\"-connect\")[0] != \"0\")\n+    if (!gArgs.IsArgSet(\"-connect\") || gArgs.GetArgs(\"-connect\").size() != 1 || gArgs.GetArgs(\"-connect\")[0] != \"0\")\n         threadOpenConnections = std::thread(&TraceThread<std::function<void()> >, \"opencon\", std::function<void()>(std::bind(&CConnman::ThreadOpenConnections, this)));\n \n     // Process messages\n     threadMessageHandler = std::thread(&TraceThread<std::function<void()> >, \"msghand\", std::function<void()>(std::bind(&CConnman::ThreadMessageHandler, this)));\n \n     // Dump network addresses\n-    scheduler.scheduleEvery(boost::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL);\n+    scheduler.scheduleEvery(std::bind(&CConnman::DumpData, this), DUMP_ADDRESSES_INTERVAL * 1000);\n \n     return true;\n }\n@@ -2405,11 +2409,6 @@ void CConnman::MarkAddressGood(const CAddress& addr)\n     addrman.Good(addr);\n }\n \n-void CConnman::AddNewAddress(const CAddress& addr, const CAddress& addrFrom, int64_t nTimePenalty)\n-{\n-    addrman.Add(addr, addrFrom, nTimePenalty);\n-}\n-\n void CConnman::AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty)\n {\n     addrman.Add(vAddr, addrFrom, nTimePenalty);\n@@ -2483,7 +2482,7 @@ bool CConnman::DisconnectNode(NodeId id)\n {\n     LOCK(cs_vNodes);\n     for(CNode* pnode : vNodes) {\n-        if (id == pnode->id) {\n+        if (id == pnode->GetId()) {\n             pnode->fDisconnect = true;\n             return true;\n         }\n@@ -2621,10 +2620,10 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n     nTimeConnected(GetSystemTimeInSeconds()),\n     addr(addrIn),\n     fInbound(fInboundIn),\n-    id(idIn),\n     nKeyedNetGroup(nKeyedNetGroupIn),\n     addrKnown(5000, 0.001),\n     filterInventoryKnown(50000, 0.000001),\n+    id(idIn),\n     nLocalHostNonce(nLocalHostNonceIn),\n     nLocalServices(nLocalServicesIn),\n     nMyStartingHeight(nMyStartingHeightIn),\n@@ -2682,10 +2681,11 @@ CNode::CNode(NodeId idIn, ServiceFlags nLocalServicesIn, int nMyStartingHeightIn\n         mapRecvBytesPerMsgCmd[msg] = 0;\n     mapRecvBytesPerMsgCmd[NET_MESSAGE_COMMAND_OTHER] = 0;\n \n-    if (fLogIPs)\n-        LogPrint(\"net\", \"Added connection to %s peer=%d\\n\", addrName, id);\n-    else\n-        LogPrint(\"net\", \"Added connection peer=%d\\n\", id);\n+    if (fLogIPs) {\n+        LogPrint(BCLog::NET, \"Added connection to %s peer=%d\\n\", addrName, id);\n+    } else {\n+        LogPrint(BCLog::NET, \"Added connection peer=%d\\n\", id);\n+    }\n }\n \n CNode::~CNode()\n@@ -2712,7 +2712,7 @@ void CNode::AskFor(const CInv& inv)\n         nRequestTime = it->second;\n     else\n         nRequestTime = 0;\n-    LogPrint(\"net\", \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000), id);\n+    LogPrint(BCLog::NET, \"askfor %s  %d (%s) peer=%d\\n\", inv.ToString(), nRequestTime, DateTimeStrFormat(\"%H:%M:%S\", nRequestTime/1000000), id);\n \n     // Make sure not to reuse time indexes to keep things in the same order\n     int64_t nNow = GetTimeMicros() - 1000000;\n@@ -2739,7 +2739,7 @@ void CConnman::PushMessage(CNode* pnode, CSerializedNetMsg&& msg)\n {\n     size_t nMessageSize = msg.data.size();\n     size_t nTotalSize = nMessageSize + CMessageHeader::HEADER_SIZE;\n-    LogPrint(\"net\", \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->id);\n+    LogPrint(BCLog::NET, \"sending %s (%d bytes) peer=%d\\n\",  SanitizeString(msg.command.c_str()), nMessageSize, pnode->GetId());\n \n     std::vector<unsigned char> serializedHeader;\n     serializedHeader.reserve(CMessageHeader::HEADER_SIZE);\n@@ -2777,7 +2777,7 @@ bool CConnman::ForNode(NodeId id, std::function<bool(CNode* pnode)> func)\n     CNode* found = nullptr;\n     LOCK(cs_vNodes);\n     for (auto&& pnode : vNodes) {\n-        if(pnode->id == id) {\n+        if(pnode->GetId() == id) {\n             found = pnode;\n             break;\n         }"
      },
      {
        "sha": "bea04bc5805c3fc4fe75f0f6afc541b80670d935",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 6,
        "deletions": 9,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -14,6 +14,7 @@\n #include \"hash.h\"\n #include \"limitedmap.h\"\n #include \"netaddress.h\"\n+#include \"policy/feerate.h\"\n #include \"protocol.h\"\n #include \"random.h\"\n #include \"streams.h\"\n@@ -32,11 +33,9 @@\n #include <arpa/inet.h>\n #endif\n \n-#include <boost/filesystem/path.hpp>\n #include <boost/foreach.hpp>\n #include <boost/signals2/signal.hpp>\n \n-class CAddrMan;\n class CScheduler;\n class CNode;\n \n@@ -207,10 +206,8 @@ class CConnman\n     size_t GetAddressCount() const;\n     void SetServices(const CService &addr, ServiceFlags nServices);\n     void MarkAddressGood(const CAddress& addr);\n-    void AddNewAddress(const CAddress& addr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n     void AddNewAddresses(const std::vector<CAddress>& vAddr, const CAddress& addrFrom, int64_t nTimePenalty = 0);\n     std::vector<CAddress> GetAddresses();\n-    void AddressCurrentlyConnected(const CService& addr);\n \n     // Denial-of-service detection/prevention\n     // The idea is to detect peers that are behaving\n@@ -615,7 +612,6 @@ class CNode\n     CCriticalSection cs_filter;\n     CBloomFilter* pfilter;\n     std::atomic<int> nRefCount;\n-    const NodeId id;\n \n     const uint64_t nKeyedNetGroup;\n     std::atomic_bool fPauseRecv;\n@@ -686,6 +682,7 @@ class CNode\n private:\n     CNode(const CNode&);\n     void operator=(const CNode&);\n+    const NodeId id;\n \n \n     const uint64_t nLocalHostNonce;\n@@ -703,15 +700,15 @@ class CNode\n public:\n \n     NodeId GetId() const {\n-      return id;\n+        return id;\n     }\n \n     uint64_t GetLocalNonce() const {\n-      return nLocalHostNonce;\n+        return nLocalHostNonce;\n     }\n \n     int GetMyStartingHeight() const {\n-      return nMyStartingHeight;\n+        return nMyStartingHeight;\n     }\n \n     int GetRefCount()\n@@ -762,7 +759,7 @@ class CNode\n         // after addresses were pushed.\n         if (_addr.IsValid() && !addrKnown.contains(_addr.GetKey())) {\n             if (vAddrToSend.size() >= MAX_ADDR_TO_SEND) {\n-                vAddrToSend[insecure_rand.rand32() % vAddrToSend.size()] = _addr;\n+                vAddrToSend[insecure_rand.randrange(vAddrToSend.size())] = _addr;\n             } else {\n                 vAddrToSend.push_back(_addr);\n             }"
      },
      {
        "sha": "3102c2ef9a7071b8d0b506c2e9582e6a2031f5fc",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 245,
        "deletions": 230,
        "changes": 475,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -256,10 +256,11 @@ void PushNodeVersion(CNode *pnode, CConnman& connman, int64_t nTime)\n     connman.PushMessage(pnode, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::VERSION, PROTOCOL_VERSION, (uint64_t)nLocalNodeServices, nTime, addrYou, addrMe,\n             nonce, strSubVersion, nNodeStartingHeight, ::fRelayTxes));\n \n-    if (fLogIPs)\n-        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n-    else\n-        LogPrint(\"net\", \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), nodeid);\n+    if (fLogIPs) {\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, them=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), addrYou.ToString(), nodeid);\n+    } else {\n+        LogPrint(BCLog::NET, \"send version message: version %d, blocks=%d, us=%s, peer=%d\\n\", PROTOCOL_VERSION, nNodeStartingHeight, addrMe.ToString(), nodeid);\n+    }\n }\n \n void InitializeNode(CNode *pnode, CConnman& connman) {\n@@ -302,6 +303,7 @@ void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) {\n         assert(nPreferredDownload == 0);\n         assert(nPeersWithValidatedDownloads == 0);\n     }\n+    LogPrint(BCLog::NET, \"Cleared nodestate for peer=%d\\n\", nodeid);\n }\n \n // Requires cs_main.\n@@ -332,7 +334,7 @@ bool MarkBlockAsReceived(const uint256& hash) {\n // Requires cs_main.\n // returns false, still setting pit, if the block was already in flight from the same peer\n // pit will only be valid as long as the same cs_main lock is being held\n-bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const Consensus::Params& consensusParams, const CBlockIndex* pindex = NULL, std::list<QueuedBlock>::iterator** pit = NULL) {\n+bool MarkBlockAsInFlight(NodeId nodeid, const uint256& hash, const CBlockIndex* pindex = NULL, std::list<QueuedBlock>::iterator** pit = NULL) {\n     CNodeState *state = State(nodeid);\n     assert(state != NULL);\n \n@@ -619,7 +621,7 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n     unsigned int sz = GetTransactionWeight(*tx);\n     if (sz >= MAX_STANDARD_TX_WEIGHT)\n     {\n-        LogPrint(\"mempool\", \"ignoring large orphan tx (size: %u, hash: %s)\\n\", sz, hash.ToString());\n+        LogPrint(BCLog::MEMPOOL, \"ignoring large orphan tx (size: %u, hash: %s)\\n\", sz, hash.ToString());\n         return false;\n     }\n \n@@ -631,7 +633,7 @@ bool AddOrphanTx(const CTransactionRef& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRE\n \n     AddToCompactExtraTransactions(tx);\n \n-    LogPrint(\"mempool\", \"stored orphan tx %s (mapsz %u outsz %u)\\n\", hash.ToString(),\n+    LogPrint(BCLog::MEMPOOL, \"stored orphan tx %s (mapsz %u outsz %u)\\n\", hash.ToString(),\n              mapOrphanTransactions.size(), mapOrphanTransactionsByPrev.size());\n     return true;\n }\n@@ -666,7 +668,7 @@ void EraseOrphansFor(NodeId peer)\n             nErased += EraseOrphanTx(maybeErase->second.tx->GetHash());\n         }\n     }\n-    if (nErased > 0) LogPrint(\"mempool\", \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\n+    if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx from peer=%d\\n\", nErased, peer);\n }\n \n \n@@ -691,7 +693,7 @@ unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRE\n         }\n         // Sweep again 5 minutes after the next entry that expires in order to batch the linear scan.\n         nNextSweep = nMinExpTime + ORPHAN_TX_EXPIRE_INTERVAL;\n-        if (nErased > 0) LogPrint(\"mempool\", \"Erased %d orphan tx due to expiration\\n\", nErased);\n+        if (nErased > 0) LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx due to expiration\\n\", nErased);\n     }\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n     {\n@@ -743,21 +745,23 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn) : connman(connmanI\n     recentRejects.reset(new CRollingBloomFilter(120000, 0.000001));\n }\n \n-void PeerLogicValidation::SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock) {\n-    if (nPosInBlock == CMainSignals::SYNC_TRANSACTION_NOT_IN_BLOCK)\n-        return;\n-\n+void PeerLogicValidation::BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindex, const std::vector<CTransactionRef>& vtxConflicted) {\n     LOCK(cs_main);\n \n     std::vector<uint256> vOrphanErase;\n-    // Which orphan pool entries must we evict?\n-    for (size_t j = 0; j < tx.vin.size(); j++) {\n-        auto itByPrev = mapOrphanTransactionsByPrev.find(tx.vin[j].prevout);\n-        if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n-        for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n-            const CTransaction& orphanTx = *(*mi)->second.tx;\n-            const uint256& orphanHash = orphanTx.GetHash();\n-            vOrphanErase.push_back(orphanHash);\n+\n+    for (const CTransactionRef& ptx : pblock->vtx) {\n+        const CTransaction& tx = *ptx;\n+\n+        // Which orphan pool entries must we evict?\n+        for (const auto& txin : tx.vin) {\n+            auto itByPrev = mapOrphanTransactionsByPrev.find(txin.prevout);\n+            if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n+            for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n+                const CTransaction& orphanTx = *(*mi)->second.tx;\n+                const uint256& orphanHash = orphanTx.GetHash();\n+                vOrphanErase.push_back(orphanHash);\n+            }\n         }\n     }\n \n@@ -767,14 +771,16 @@ void PeerLogicValidation::SyncTransaction(const CTransaction& tx, const CBlockIn\n         BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n             nErased += EraseOrphanTx(orphanHash);\n         }\n-        LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n+        LogPrint(BCLog::MEMPOOL, \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n     }\n }\n \n+// All of the following cache a recent block, and are protected by cs_most_recent_block\n static CCriticalSection cs_most_recent_block;\n static std::shared_ptr<const CBlock> most_recent_block;\n static std::shared_ptr<const CBlockHeaderAndShortTxIDs> most_recent_compact_block;\n static uint256 most_recent_block_hash;\n+static bool fWitnessesPresentInMostRecentCompactBlock;\n \n void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) {\n     std::shared_ptr<const CBlockHeaderAndShortTxIDs> pcmpctblock = std::make_shared<const CBlockHeaderAndShortTxIDs> (*pblock, true);\n@@ -795,6 +801,7 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n         most_recent_block_hash = hashBlock;\n         most_recent_block = pblock;\n         most_recent_compact_block = pcmpctblock;\n+        fWitnessesPresentInMostRecentCompactBlock = fWitnessEnabled;\n     }\n \n     connman->ForEachNode([this, &pcmpctblock, pindex, &msgMaker, fWitnessEnabled, &hashBlock](CNode* pnode) {\n@@ -808,8 +815,8 @@ void PeerLogicValidation::NewPoWValidBlock(const CBlockIndex *pindex, const std:\n         if (state.fPreferHeaderAndIDs && (!fWitnessEnabled || state.fWantsCmpctWitness) &&\n                 !PeerHasHeader(&state, pindex) && PeerHasHeader(&state, pindex->pprev)) {\n \n-            LogPrint(\"net\", \"%s sending header-and-ids %s to peer=%d\\n\", \"PeerLogicValidation::NewPoWValidBlock\",\n-                    hashBlock.ToString(), pnode->id);\n+            LogPrint(BCLog::NET, \"%s sending header-and-ids %s to peer=%d\\n\", \"PeerLogicValidation::NewPoWValidBlock\",\n+                    hashBlock.ToString(), pnode->GetId());\n             connman->PushMessage(pnode, msgMaker.Make(NetMsgType::CMPCTBLOCK, *pcmpctblock));\n             state.pindexBestHeaderSent = pindex;\n         }\n@@ -855,8 +862,8 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const CValidationSta\n \n     int nDoS = 0;\n     if (state.IsInvalid(nDoS)) {\n-        if (it != mapBlockSource.end() && State(it->second.first)) {\n-            assert (state.GetRejectCode() < REJECT_INTERNAL); // Blocks are never rejected with internal reject codes\n+        // Don't send reject message with code 0 or an internal reject code.\n+        if (it != mapBlockSource.end() && State(it->second.first) && state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) {\n             CBlockReject reject = {(unsigned char)state.GetRejectCode(), state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), hash};\n             State(it->second.first)->rejects.push_back(reject);\n             if (nDoS > 0 && it->second.second)\n@@ -944,7 +951,7 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman& connma\n \n     auto sortfunc = [&best, &hasher, nRelayNodes](CNode* pnode) {\n         if (pnode->nVersion >= CADDR_TIME_VERSION) {\n-            uint64_t hashKey = CSipHasher(hasher).Write(pnode->id).Finalize();\n+            uint64_t hashKey = CSipHasher(hasher).Write(pnode->GetId()).Finalize();\n             for (unsigned int i = 0; i < nRelayNodes; i++) {\n                  if (hashKey > best[i].first) {\n                      std::copy(best.begin() + i, best.begin() + nRelayNodes - 1, best.begin() + i + 1);\n@@ -987,6 +994,15 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n             {\n                 bool send = false;\n                 BlockMap::iterator mi = mapBlockIndex.find(inv.hash);\n+                std::shared_ptr<const CBlock> a_recent_block;\n+                std::shared_ptr<const CBlockHeaderAndShortTxIDs> a_recent_compact_block;\n+                bool fWitnessesPresentInARecentCompactBlock;\n+                {\n+                    LOCK(cs_most_recent_block);\n+                    a_recent_block = most_recent_block;\n+                    a_recent_compact_block = most_recent_compact_block;\n+                    fWitnessesPresentInARecentCompactBlock = fWitnessesPresentInMostRecentCompactBlock;\n+                }\n                 if (mi != mapBlockIndex.end())\n                 {\n                     if (mi->second->nChainTx && !mi->second->IsValid(BLOCK_VALID_SCRIPTS) &&\n@@ -996,11 +1012,6 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         // before ActivateBestChain but after AcceptBlock).\n                         // In this case, we need to run ActivateBestChain prior to checking the relay\n                         // conditions below.\n-                        std::shared_ptr<const CBlock> a_recent_block;\n-                        {\n-                            LOCK(cs_most_recent_block);\n-                            a_recent_block = most_recent_block;\n-                        }\n                         CValidationState dummy;\n                         ActivateBestChain(dummy, Params(), a_recent_block);\n                     }\n@@ -1024,7 +1035,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                 static const int nOneWeek = 7 * 24 * 60 * 60; // assume > 1 week = historical\n                 if (send && connman.OutboundTargetReached(true) && ( ((pindexBestHeader != NULL) && (pindexBestHeader->GetBlockTime() - mi->second->GetBlockTime() > nOneWeek)) || inv.type == MSG_FILTERED_BLOCK) && !pfrom->fWhitelisted)\n                 {\n-                    LogPrint(\"net\", \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n+                    LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n \n                     //disconnect node\n                     pfrom->fDisconnect = true;\n@@ -1034,14 +1045,20 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                 // it's available before trying to send.\n                 if (send && (mi->second->nStatus & BLOCK_HAVE_DATA))\n                 {\n-                    // Send block from disk\n-                    CBlock block;\n-                    if (!ReadBlockFromDisk(block, (*mi).second, consensusParams))\n-                        assert(!\"cannot load block from disk\");\n+                    std::shared_ptr<const CBlock> pblock;\n+                    if (a_recent_block && a_recent_block->GetHash() == (*mi).second->GetBlockHash()) {\n+                        pblock = a_recent_block;\n+                    } else {\n+                        // Send block from disk\n+                        std::shared_ptr<CBlock> pblockRead = std::make_shared<CBlock>();\n+                        if (!ReadBlockFromDisk(*pblockRead, (*mi).second, consensusParams))\n+                            assert(!\"cannot load block from disk\");\n+                        pblock = pblockRead;\n+                    }\n                     if (inv.type == MSG_BLOCK)\n-                        connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::BLOCK, block));\n+                        connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::BLOCK, *pblock));\n                     else if (inv.type == MSG_WITNESS_BLOCK)\n-                        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::BLOCK, block));\n+                        connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::BLOCK, *pblock));\n                     else if (inv.type == MSG_FILTERED_BLOCK)\n                     {\n                         bool sendMerkleBlock = false;\n@@ -1050,7 +1067,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                             LOCK(pfrom->cs_filter);\n                             if (pfrom->pfilter) {\n                                 sendMerkleBlock = true;\n-                                merkleBlock = CMerkleBlock(block, *pfrom->pfilter);\n+                                merkleBlock = CMerkleBlock(*pblock, *pfrom->pfilter);\n                             }\n                         }\n                         if (sendMerkleBlock) {\n@@ -1063,7 +1080,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                             // however we MUST always provide at least what the remote peer needs\n                             typedef std::pair<unsigned int, uint256> PairType;\n                             BOOST_FOREACH(PairType& pair, merkleBlock.vMatchedTxn)\n-                                connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::TX, *block.vtx[pair.first]));\n+                                connman.PushMessage(pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::TX, *pblock->vtx[pair.first]));\n                         }\n                         // else\n                             // no response\n@@ -1077,10 +1094,15 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n                         bool fPeerWantsWitness = State(pfrom->GetId())->fWantsCmpctWitness;\n                         int nSendFlags = fPeerWantsWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS;\n                         if (CanDirectFetch(consensusParams) && mi->second->nHeight >= chainActive.Height() - MAX_CMPCTBLOCK_DEPTH) {\n-                            CBlockHeaderAndShortTxIDs cmpctblock(block, fPeerWantsWitness);\n-                            connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n-                        } else\n-                            connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCK, block));\n+                            if ((fPeerWantsWitness || !fWitnessesPresentInARecentCompactBlock) && a_recent_compact_block && a_recent_compact_block->header.GetHash() == mi->second->GetBlockHash()) {\n+                                connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *a_recent_compact_block));\n+                            } else {\n+                                CBlockHeaderAndShortTxIDs cmpctblock(*pblock, fPeerWantsWitness);\n+                                connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, cmpctblock));\n+                            }\n+                        } else {\n+                            connman.PushMessage(pfrom, msgMaker.Make(nSendFlags, NetMsgType::BLOCK, *pblock));\n+                        }\n                     }\n \n                     // Trigger the peer node to send a getblocks request for the next batch of inventory\n@@ -1141,7 +1163,7 @@ void static ProcessGetData(CNode* pfrom, const Consensus::Params& consensusParam\n     }\n }\n \n-uint32_t GetFetchFlags(CNode* pfrom, const CBlockIndex* pprev, const Consensus::Params& chainparams) {\n+uint32_t GetFetchFlags(CNode* pfrom) {\n     uint32_t nFetchFlags = 0;\n     if ((pfrom->GetLocalServices() & NODE_WITNESS) && State(pfrom->GetId())->fHaveWitness) {\n         nFetchFlags |= MSG_WITNESS_FLAG;\n@@ -1155,7 +1177,7 @@ inline void static SendBlockTransactions(const CBlock& block, const BlockTransac\n         if (req.indexes[i] >= block.vtx.size()) {\n             LOCK(cs_main);\n             Misbehaving(pfrom->GetId(), 100);\n-            LogPrintf(\"Peer %d sent us a getblocktxn with out-of-bounds tx indices\", pfrom->id);\n+            LogPrintf(\"Peer %d sent us a getblocktxn with out-of-bounds tx indices\", pfrom->GetId());\n             return;\n         }\n         resp.txn[i] = block.vtx[req.indexes[i]];\n@@ -1168,7 +1190,7 @@ inline void static SendBlockTransactions(const CBlock& block, const BlockTransac\n \n bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStream& vRecv, int64_t nTimeReceived, const CChainParams& chainparams, CConnman& connman, const std::atomic<bool>& interruptMsgProc)\n {\n-    LogPrint(\"net\", \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->id);\n+    LogPrint(BCLog::NET, \"received: %s (%u bytes) peer=%d\\n\", SanitizeString(strCommand), vRecv.size(), pfrom->GetId());\n     if (IsArgSet(\"-dropmessagestest\") && GetRand(GetArg(\"-dropmessagestest\", 0)) == 0)\n     {\n         LogPrintf(\"dropmessagestest DROPPING RECV MESSAGE\\n\");\n@@ -1192,7 +1214,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n     if (strCommand == NetMsgType::REJECT)\n     {\n-        if (fDebug) {\n+        if (LogAcceptCategory(BCLog::NET)) {\n             try {\n                 std::string strMsg; unsigned char ccode; std::string strReason;\n                 vRecv >> LIMITED_STRING(strMsg, CMessageHeader::COMMAND_SIZE) >> ccode >> LIMITED_STRING(strReason, MAX_REJECT_MESSAGE_LENGTH);\n@@ -1206,10 +1228,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     vRecv >> hash;\n                     ss << \": hash \" << hash.ToString();\n                 }\n-                LogPrint(\"net\", \"Reject %s\\n\", SanitizeString(ss.str()));\n+                LogPrint(BCLog::NET, \"Reject %s\\n\", SanitizeString(ss.str()));\n             } catch (const std::ios_base::failure&) {\n                 // Avoid feedback loops by preventing reject messages from triggering a new reject message.\n-                LogPrint(\"net\", \"Unparseable reject message received\\n\");\n+                LogPrint(BCLog::NET, \"Unparseable reject message received\\n\");\n             }\n         }\n     }\n@@ -1247,7 +1269,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         }\n         if (pfrom->nServicesExpected & ~nServices)\n         {\n-            LogPrint(\"net\", \"peer=%d does not offer the expected services (%08x offered, %08x expected); disconnecting\\n\", pfrom->id, nServices, pfrom->nServicesExpected);\n+            LogPrint(BCLog::NET, \"peer=%d does not offer the expected services (%08x offered, %08x expected); disconnecting\\n\", pfrom->GetId(), nServices, pfrom->nServicesExpected);\n             connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_NONSTANDARD,\n                                strprintf(\"Expected to offer services %08x\", pfrom->nServicesExpected)));\n             pfrom->fDisconnect = true;\n@@ -1257,7 +1279,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (nVersion < MIN_PEER_PROTO_VERSION)\n         {\n             // disconnect from peers older than this proto version\n-            LogPrintf(\"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->id, nVersion);\n+            LogPrintf(\"peer=%d using obsolete version %i; disconnecting\\n\", pfrom->GetId(), nVersion);\n             connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_OBSOLETE,\n                                strprintf(\"Version must be %d or greater\", MIN_PEER_PROTO_VERSION)));\n             pfrom->fDisconnect = true;\n@@ -1335,11 +1357,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 FastRandomContext insecure_rand;\n                 if (addr.IsRoutable())\n                 {\n-                    LogPrint(\"net\", \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n+                    LogPrint(BCLog::NET, \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr, insecure_rand);\n                 } else if (IsPeerAddrLocalGood(pfrom)) {\n                     addr.SetIP(addrMe);\n-                    LogPrint(\"net\", \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n+                    LogPrint(BCLog::NET, \"ProcessMessages: advertising address %s\\n\", addr.ToString());\n                     pfrom->PushAddress(addr, insecure_rand);\n                 }\n             }\n@@ -1359,7 +1381,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         LogPrintf(\"receive version message: %s: version %d, blocks=%d, us=%s, peer=%d%s\\n\",\n                   cleanSubVer, pfrom->nVersion,\n-                  pfrom->nStartingHeight, addrMe.ToString(), pfrom->id,\n+                  pfrom->nStartingHeight, addrMe.ToString(), pfrom->GetId(),\n                   remoteAddr);\n \n         int64_t nTimeOffset = nTime - GetTime();\n@@ -1529,19 +1551,15 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         LOCK(cs_main);\n \n-        uint32_t nFetchFlags = GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus());\n+        uint32_t nFetchFlags = GetFetchFlags(pfrom);\n \n-        std::vector<CInv> vToFetch;\n-\n-        for (unsigned int nInv = 0; nInv < vInv.size(); nInv++)\n+        for (CInv &inv : vInv)\n         {\n-            CInv &inv = vInv[nInv];\n-\n             if (interruptMsgProc)\n                 return true;\n \n             bool fAlreadyHave = AlreadyHave(inv);\n-            LogPrint(\"net\", \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->id);\n+            LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom->GetId());\n \n             if (inv.type == MSG_TX) {\n                 inv.type |= nFetchFlags;\n@@ -1556,24 +1574,22 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     // we now only provide a getheaders response here. When we receive the headers, we will\n                     // then ask for the blocks we need.\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), inv.hash));\n-                    LogPrint(\"net\", \"getheaders (%d) %s to peer=%d\\n\", pindexBestHeader->nHeight, inv.hash.ToString(), pfrom->id);\n+                    LogPrint(BCLog::NET, \"getheaders (%d) %s to peer=%d\\n\", pindexBestHeader->nHeight, inv.hash.ToString(), pfrom->GetId());\n                 }\n             }\n             else\n             {\n                 pfrom->AddInventoryKnown(inv);\n-                if (fBlocksOnly)\n-                    LogPrint(\"net\", \"transaction (%s) inv sent in violation of protocol peer=%d\\n\", inv.hash.ToString(), pfrom->id);\n-                else if (!fAlreadyHave && !fImporting && !fReindex && !IsInitialBlockDownload())\n+                if (fBlocksOnly) {\n+                    LogPrint(BCLog::NET, \"transaction (%s) inv sent in violation of protocol peer=%d\\n\", inv.hash.ToString(), pfrom->GetId());\n+                } else if (!fAlreadyHave && !fImporting && !fReindex && !IsInitialBlockDownload()) {\n                     pfrom->AskFor(inv);\n+                }\n             }\n \n             // Track requests for our stuff\n             GetMainSignals().Inventory(inv.hash);\n         }\n-\n-        if (!vToFetch.empty())\n-            connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vToFetch));\n     }\n \n \n@@ -1588,11 +1604,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return error(\"message getdata size() = %u\", vInv.size());\n         }\n \n-        if (fDebug || (vInv.size() != 1))\n-            LogPrint(\"net\", \"received getdata (%u invsz) peer=%d\\n\", vInv.size(), pfrom->id);\n+        LogPrint(BCLog::NET, \"received getdata (%u invsz) peer=%d\\n\", vInv.size(), pfrom->GetId());\n \n-        if ((fDebug && vInv.size() > 0) || (vInv.size() == 1))\n-            LogPrint(\"net\", \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->id);\n+        if (vInv.size() > 0) {\n+            LogPrint(BCLog::NET, \"received getdata for: %s peer=%d\\n\", vInv[0].ToString(), pfrom->GetId());\n+        }\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n         ProcessGetData(pfrom, chainparams.GetConsensus(), connman, interruptMsgProc);\n@@ -1631,28 +1647,28 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (pindex)\n             pindex = chainActive.Next(pindex);\n         int nLimit = 500;\n-        LogPrint(\"net\", \"getblocks %d to %s limit %d from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop.IsNull() ? \"end\" : hashStop.ToString(), nLimit, pfrom->id);\n+        LogPrint(BCLog::NET, \"getblocks %d to %s limit %d from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop.IsNull() ? \"end\" : hashStop.ToString(), nLimit, pfrom->GetId());\n         for (; pindex; pindex = chainActive.Next(pindex))\n         {\n             if (pindex->GetBlockHash() == hashStop)\n             {\n-                LogPrint(\"net\", \"  getblocks stopping at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n+                LogPrint(BCLog::NET, \"  getblocks stopping at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n             // If pruning, don't inv blocks unless we have on disk and are likely to still have\n             // for some reasonable time window (1 hour) that block relay might require.\n             const int nPrunedBlocksLikelyToHave = MIN_BLOCKS_TO_KEEP - 3600 / chainparams.GetConsensus().nPowTargetSpacing;\n             if (fPruneMode && (!(pindex->nStatus & BLOCK_HAVE_DATA) || pindex->nHeight <= chainActive.Tip()->nHeight - nPrunedBlocksLikelyToHave))\n             {\n-                LogPrint(\"net\", \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n+                LogPrint(BCLog::NET, \" getblocks stopping, pruned or too old block at %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 break;\n             }\n             pfrom->PushInventory(CInv(MSG_BLOCK, pindex->GetBlockHash()));\n             if (--nLimit <= 0)\n             {\n                 // When this block is requested, we'll send an inv that'll\n                 // trigger the peer to getblocks the next batch of inventory.\n-                LogPrint(\"net\", \"  getblocks stopping at limit %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n+                LogPrint(BCLog::NET, \"  getblocks stopping at limit %d %s\\n\", pindex->nHeight, pindex->GetBlockHash().ToString());\n                 pfrom->hashContinue = pindex->GetBlockHash();\n                 break;\n             }\n@@ -1681,7 +1697,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         BlockMap::iterator it = mapBlockIndex.find(req.blockhash);\n         if (it == mapBlockIndex.end() || !(it->second->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrintf(\"Peer %d sent us a getblocktxn for a block we don't have\", pfrom->id);\n+            LogPrintf(\"Peer %d sent us a getblocktxn for a block we don't have\", pfrom->GetId());\n             return true;\n         }\n \n@@ -1693,7 +1709,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // might maliciously send lots of getblocktxn requests to trigger\n             // expensive disk reads, because it will require the peer to\n             // actually receive all the data read from disk over the network.\n-            LogPrint(\"net\", \"Peer %d sent us a getblocktxn for a block > %i deep\", pfrom->id, MAX_BLOCKTXN_DEPTH);\n+            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\", pfrom->GetId(), MAX_BLOCKTXN_DEPTH);\n             CInv inv;\n             inv.type = State(pfrom->GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n             inv.hash = req.blockhash;\n@@ -1718,7 +1734,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n         LOCK(cs_main);\n         if (IsInitialBlockDownload() && !pfrom->fWhitelisted) {\n-            LogPrint(\"net\", \"Ignoring getheaders from peer=%d because node is in initial block download\\n\", pfrom->id);\n+            LogPrint(BCLog::NET, \"Ignoring getheaders from peer=%d because node is in initial block download\\n\", pfrom->GetId());\n             return true;\n         }\n \n@@ -1743,7 +1759,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // we must use CBlocks, as CBlockHeaders won't include the 0x00 nTx count at the end\n         std::vector<CBlock> vHeaders;\n         int nLimit = MAX_HEADERS_RESULTS;\n-        LogPrint(\"net\", \"getheaders %d to %s from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop.IsNull() ? \"end\" : hashStop.ToString(), pfrom->id);\n+        LogPrint(BCLog::NET, \"getheaders %d to %s from peer=%d\\n\", (pindex ? pindex->nHeight : -1), hashStop.IsNull() ? \"end\" : hashStop.ToString(), pfrom->GetId());\n         for (; pindex; pindex = chainActive.Next(pindex))\n         {\n             vHeaders.push_back(pindex->GetBlockHeader());\n@@ -1773,7 +1789,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n         if (!fRelayTxes && (!pfrom->fWhitelisted || !GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)))\n         {\n-            LogPrint(\"net\", \"transaction sent in violation of protocol peer=%d\\n\", pfrom->id);\n+            LogPrint(BCLog::NET, \"transaction sent in violation of protocol peer=%d\\n\", pfrom->GetId());\n             return true;\n         }\n \n@@ -1805,8 +1821,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n             pfrom->nLastTXTime = GetTime();\n \n-            LogPrint(\"mempool\", \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u txn, %u kB)\\n\",\n-                pfrom->id,\n+            LogPrint(BCLog::MEMPOOL, \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u txn, %u kB)\\n\",\n+                pfrom->GetId(),\n                 tx.GetHash().ToString(),\n                 mempool.size(), mempool.DynamicMemoryUsage() / 1000);\n \n@@ -1835,7 +1851,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     if (setMisbehaving.count(fromPeer))\n                         continue;\n                     if (AcceptToMemoryPool(mempool, stateDummy, porphanTx, true, &fMissingInputs2, &lRemovedTxn)) {\n-                        LogPrint(\"mempool\", \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n+                        LogPrint(BCLog::MEMPOOL, \"   accepted orphan tx %s\\n\", orphanHash.ToString());\n                         RelayTransaction(orphanTx, connman);\n                         for (unsigned int i = 0; i < orphanTx.vout.size(); i++) {\n                             vWorkQueue.emplace_back(orphanHash, i);\n@@ -1850,11 +1866,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                             // Punish peer that gave us an invalid orphan tx\n                             Misbehaving(fromPeer, nDos);\n                             setMisbehaving.insert(fromPeer);\n-                            LogPrint(\"mempool\", \"   invalid orphan tx %s\\n\", orphanHash.ToString());\n+                            LogPrint(BCLog::MEMPOOL, \"   invalid orphan tx %s\\n\", orphanHash.ToString());\n                         }\n                         // Has inputs but not accepted to mempool\n-                        // Probably non-standard or insufficient fee/priority\n-                        LogPrint(\"mempool\", \"   removed orphan tx %s\\n\", orphanHash.ToString());\n+                        // Probably non-standard or insufficient fee\n+                        LogPrint(BCLog::MEMPOOL, \"   removed orphan tx %s\\n\", orphanHash.ToString());\n                         vEraseQueue.push_back(orphanHash);\n                         if (!orphanTx.HasWitness() && !stateDummy.CorruptionPossible()) {\n                             // Do not use rejection cache for witness transactions or\n@@ -1881,7 +1897,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 }\n             }\n             if (!fRejectedParents) {\n-                uint32_t nFetchFlags = GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus());\n+                uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 BOOST_FOREACH(const CTxIn& txin, tx.vin) {\n                     CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n                     pfrom->AddInventoryKnown(_inv);\n@@ -1892,10 +1908,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // DoS prevention: do not allow mapOrphanTransactions to grow unbounded\n                 unsigned int nMaxOrphanTx = (unsigned int)std::max((int64_t)0, GetArg(\"-maxorphantx\", DEFAULT_MAX_ORPHAN_TRANSACTIONS));\n                 unsigned int nEvicted = LimitOrphanTxSize(nMaxOrphanTx);\n-                if (nEvicted > 0)\n-                    LogPrint(\"mempool\", \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n+                if (nEvicted > 0) {\n+                    LogPrint(BCLog::MEMPOOL, \"mapOrphan overflow, removed %u tx\\n\", nEvicted);\n+                }\n             } else {\n-                LogPrint(\"mempool\", \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n+                LogPrint(BCLog::MEMPOOL, \"not keeping orphan with rejected parents %s\\n\",tx.GetHash().ToString());\n                 // We will continue to reject this tx since it has rejected\n                 // parents so avoid re-requesting it from other peers.\n                 recentRejects->insert(tx.GetHash());\n@@ -1925,10 +1942,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // case.\n                 int nDoS = 0;\n                 if (!state.IsInvalid(nDoS) || nDoS == 0) {\n-                    LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->id);\n+                    LogPrintf(\"Force relaying tx %s from whitelisted peer=%d\\n\", tx.GetHash().ToString(), pfrom->GetId());\n                     RelayTransaction(tx, connman);\n                 } else {\n-                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->id, FormatStateMessage(state));\n+                    LogPrintf(\"Not relaying invalid transaction %s from whitelisted peer=%d (%s)\\n\", tx.GetHash().ToString(), pfrom->GetId(), FormatStateMessage(state));\n                 }\n             }\n         }\n@@ -1939,10 +1956,10 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         int nDoS = 0;\n         if (state.IsInvalid(nDoS))\n         {\n-            LogPrint(\"mempoolrej\", \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n-                pfrom->id,\n+            LogPrint(BCLog::MEMPOOLREJ, \"%s from peer=%d was not accepted: %s\\n\", tx.GetHash().ToString(),\n+                pfrom->GetId(),\n                 FormatStateMessage(state));\n-            if (state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n+            if (state.GetRejectCode() > 0 && state.GetRejectCode() < REJECT_INTERNAL) // Never send AcceptToMemoryPool's internal codes over P2P\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::REJECT, strCommand, (unsigned char)state.GetRejectCode(),\n                                    state.GetRejectReason().substr(0, MAX_REJECT_MESSAGE_LENGTH), inv.hash));\n             if (nDoS > 0) {\n@@ -1977,7 +1994,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                     LOCK(cs_main);\n                     Misbehaving(pfrom->GetId(), nDoS);\n                 }\n-                LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->id);\n+                LogPrintf(\"Peer %d sent us invalid header via cmpctblock\\n\", pfrom->GetId());\n                 return true;\n             }\n         }\n@@ -2017,7 +2034,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We requested this block for some reason, but our mempool will probably be useless\n                 // so we just grab the block via normal getdata\n                 std::vector<CInv> vInv(1);\n-                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n             }\n             return true;\n@@ -2041,12 +2058,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             if ((!fAlreadyInFlight && nodestate->nBlocksInFlight < MAX_BLOCKS_IN_TRANSIT_PER_PEER) ||\n                  (fAlreadyInFlight && blockInFlightIt->second.first == pfrom->GetId())) {\n                 std::list<QueuedBlock>::iterator* queuedBlockIt = NULL;\n-                if (!MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex, &queuedBlockIt)) {\n+                if (!MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), pindex, &queuedBlockIt)) {\n                     if (!(*queuedBlockIt)->partialBlock)\n                         (*queuedBlockIt)->partialBlock.reset(new PartiallyDownloadedBlock(&mempool));\n                     else {\n                         // The block was already in flight using compact blocks from the same peer\n-                        LogPrint(\"net\", \"Peer sent us compact block we were already syncing!\\n\");\n+                        LogPrint(BCLog::NET, \"Peer sent us compact block we were already syncing!\\n\");\n                         return true;\n                     }\n                 }\n@@ -2056,12 +2073,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 if (status == READ_STATUS_INVALID) {\n                     MarkBlockAsReceived(pindex->GetBlockHash()); // Reset in-flight state in case of whitelist\n                     Misbehaving(pfrom->GetId(), 100);\n-                    LogPrintf(\"Peer %d sent us invalid compact block\\n\", pfrom->id);\n+                    LogPrintf(\"Peer %d sent us invalid compact block\\n\", pfrom->GetId());\n                     return true;\n                 } else if (status == READ_STATUS_FAILED) {\n                     // Duplicate txindexes, the block is now in-flight, so just request it\n                     std::vector<CInv> vInv(1);\n-                    vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                    vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                     connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                     return true;\n                 }\n@@ -2104,7 +2121,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 // We requested this block, but its far into the future, so our\n                 // mempool will probably be useless - request the block normally\n                 std::vector<CInv> vInv(1);\n-                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus()), cmpctblock.header.GetHash());\n+                vInv[0] = CInv(MSG_BLOCK | GetFetchFlags(pfrom), cmpctblock.header.GetHash());\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, vInv));\n                 return true;\n             } else {\n@@ -2161,7 +2178,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             std::map<uint256, std::pair<NodeId, std::list<QueuedBlock>::iterator> >::iterator it = mapBlocksInFlight.find(resp.blockhash);\n             if (it == mapBlocksInFlight.end() || !it->second.second->partialBlock ||\n                     it->second.first != pfrom->GetId()) {\n-                LogPrint(\"net\", \"Peer %d sent us block transactions for block we weren't expecting\\n\", pfrom->id);\n+                LogPrint(BCLog::NET, \"Peer %d sent us block transactions for block we weren't expecting\\n\", pfrom->GetId());\n                 return true;\n             }\n \n@@ -2170,12 +2187,12 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             if (status == READ_STATUS_INVALID) {\n                 MarkBlockAsReceived(resp.blockhash); // Reset in-flight state in case of whitelist\n                 Misbehaving(pfrom->GetId(), 100);\n-                LogPrintf(\"Peer %d sent us invalid compact block/non-matching block transactions\\n\", pfrom->id);\n+                LogPrintf(\"Peer %d sent us invalid compact block/non-matching block transactions\\n\", pfrom->GetId());\n                 return true;\n             } else if (status == READ_STATUS_FAILED) {\n                 // Might have collided, fall back to getdata now :(\n                 std::vector<CInv> invs;\n-                invs.push_back(CInv(MSG_BLOCK | GetFetchFlags(pfrom, chainActive.Tip(), chainparams.GetConsensus()), resp.blockhash));\n+                invs.push_back(CInv(MSG_BLOCK | GetFetchFlags(pfrom), resp.blockhash));\n                 connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETDATA, invs));\n             } else {\n                 // Block is either okay, or possibly we received\n@@ -2254,11 +2271,11 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         if (mapBlockIndex.find(headers[0].hashPrevBlock) == mapBlockIndex.end() && nCount < MAX_BLOCKS_TO_ANNOUNCE) {\n             nodestate->nUnconnectingHeaders++;\n             connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexBestHeader), uint256()));\n-            LogPrint(\"net\", \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n+            LogPrint(BCLog::NET, \"received header %s: missing prev block %s, sending getheaders (%d) to end (peer=%d, nUnconnectingHeaders=%d)\\n\",\n                     headers[0].GetHash().ToString(),\n                     headers[0].hashPrevBlock.ToString(),\n                     pindexBestHeader->nHeight,\n-                    pfrom->id, nodestate->nUnconnectingHeaders);\n+                    pfrom->GetId(), nodestate->nUnconnectingHeaders);\n             // Set hashLastUnknownBlock for this peer, so that if we\n             // eventually get the headers - even from a different peer -\n             // we can use this peer to download.\n@@ -2296,7 +2313,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         LOCK(cs_main);\n         CNodeState *nodestate = State(pfrom->GetId());\n         if (nodestate->nUnconnectingHeaders > 0) {\n-            LogPrint(\"net\", \"peer=%d: resetting nUnconnectingHeaders (%d -> 0)\\n\", pfrom->id, nodestate->nUnconnectingHeaders);\n+            LogPrint(BCLog::NET, \"peer=%d: resetting nUnconnectingHeaders (%d -> 0)\\n\", pfrom->GetId(), nodestate->nUnconnectingHeaders);\n         }\n         nodestate->nUnconnectingHeaders = 0;\n \n@@ -2307,7 +2324,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // Headers message had its maximum size; the peer may have more headers.\n             // TODO: optimize: if pindexLast is an ancestor of chainActive.Tip or pindexBestHeader, continue\n             // from there instead.\n-            LogPrint(\"net\", \"more getheaders (%d) to end to peer=%d (startheight:%d)\\n\", pindexLast->nHeight, pfrom->id, pfrom->nStartingHeight);\n+            LogPrint(BCLog::NET, \"more getheaders (%d) to end to peer=%d (startheight:%d)\\n\", pindexLast->nHeight, pfrom->GetId(), pfrom->nStartingHeight);\n             connman.PushMessage(pfrom, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexLast), uint256()));\n         }\n \n@@ -2332,7 +2349,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             // the main chain -- this shouldn't really happen.  Bail out on the\n             // direct fetch and rely on parallel download instead.\n             if (!chainActive.Contains(pindexWalk)) {\n-                LogPrint(\"net\", \"Large reorg, won't direct fetch to %s (%d)\\n\",\n+                LogPrint(BCLog::NET, \"Large reorg, won't direct fetch to %s (%d)\\n\",\n                         pindexLast->GetBlockHash().ToString(),\n                         pindexLast->nHeight);\n             } else {\n@@ -2343,14 +2360,14 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                         // Can't download any more from this peer\n                         break;\n                     }\n-                    uint32_t nFetchFlags = GetFetchFlags(pfrom, pindex->pprev, chainparams.GetConsensus());\n+                    uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                     vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                    MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), chainparams.GetConsensus(), pindex);\n-                    LogPrint(\"net\", \"Requesting block %s from  peer=%d\\n\",\n-                            pindex->GetBlockHash().ToString(), pfrom->id);\n+                    MarkBlockAsInFlight(pfrom->GetId(), pindex->GetBlockHash(), pindex);\n+                    LogPrint(BCLog::NET, \"Requesting block %s from  peer=%d\\n\",\n+                            pindex->GetBlockHash().ToString(), pfrom->GetId());\n                 }\n                 if (vGetData.size() > 1) {\n-                    LogPrint(\"net\", \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n+                    LogPrint(BCLog::NET, \"Downloading blocks toward %s (%d) via headers direct fetch\\n\",\n                             pindexLast->GetBlockHash().ToString(), pindexLast->nHeight);\n                 }\n                 if (vGetData.size() > 0) {\n@@ -2370,7 +2387,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         std::shared_ptr<CBlock> pblock = std::make_shared<CBlock>();\n         vRecv >> *pblock;\n \n-        LogPrint(\"net\", \"received block %s peer=%d\\n\", pblock->GetHash().ToString(), pfrom->id);\n+        LogPrint(BCLog::NET, \"received block %s peer=%d\\n\", pblock->GetHash().ToString(), pfrom->GetId());\n \n         // Process all blocks from whitelisted peers, even if not requested,\n         // unless we're still syncing with the network.\n@@ -2402,14 +2419,14 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         // Making nodes which are behind NAT and can only make outgoing connections ignore\n         // the getaddr message mitigates the attack.\n         if (!pfrom->fInbound) {\n-            LogPrint(\"net\", \"Ignoring \\\"getaddr\\\" from outbound connection. peer=%d\\n\", pfrom->id);\n+            LogPrint(BCLog::NET, \"Ignoring \\\"getaddr\\\" from outbound connection. peer=%d\\n\", pfrom->GetId());\n             return true;\n         }\n \n         // Only send one GetAddr response per connection to reduce resource waste\n         //  and discourage addr stamping of INV announcements.\n         if (pfrom->fSentAddr) {\n-            LogPrint(\"net\", \"Ignoring repeated \\\"getaddr\\\". peer=%d\\n\", pfrom->id);\n+            LogPrint(BCLog::NET, \"Ignoring repeated \\\"getaddr\\\". peer=%d\\n\", pfrom->GetId());\n             return true;\n         }\n         pfrom->fSentAddr = true;\n@@ -2426,14 +2443,14 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n     {\n         if (!(pfrom->GetLocalServices() & NODE_BLOOM) && !pfrom->fWhitelisted)\n         {\n-            LogPrint(\"net\", \"mempool request with bloom filters disabled, disconnect peer=%d\\n\", pfrom->GetId());\n+            LogPrint(BCLog::NET, \"mempool request with bloom filters disabled, disconnect peer=%d\\n\", pfrom->GetId());\n             pfrom->fDisconnect = true;\n             return true;\n         }\n \n         if (connman.OutboundTargetReached(false) && !pfrom->fWhitelisted)\n         {\n-            LogPrint(\"net\", \"mempool request with bandwidth limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n+            LogPrint(BCLog::NET, \"mempool request with bandwidth limit reached, disconnect peer=%d\\n\", pfrom->GetId());\n             pfrom->fDisconnect = true;\n             return true;\n         }\n@@ -2509,8 +2526,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n         }\n \n         if (!(sProblem.empty())) {\n-            LogPrint(\"net\", \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n-                pfrom->id,\n+            LogPrint(BCLog::NET, \"pong peer=%d: %s, %x expected, %x received, %u bytes\\n\",\n+                pfrom->GetId(),\n                 sProblem,\n                 pfrom->nPingNonceSent,\n                 nonce,\n@@ -2587,7 +2604,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n                 LOCK(pfrom->cs_feeFilter);\n                 pfrom->minFeeFilter = newFeeFilter;\n             }\n-            LogPrint(\"net\", \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->id);\n+            LogPrint(BCLog::NET, \"received: feefilter of %s from peer=%d\\n\", CFeeRate(newFeeFilter).ToString(), pfrom->GetId());\n         }\n     }\n \n@@ -2598,7 +2615,7 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n     else {\n         // Ignore unknown commands for extensibility\n-        LogPrint(\"net\", \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->id);\n+        LogPrint(BCLog::NET, \"Unknown command \\\"%s\\\" from peer=%d\\n\", SanitizeString(strCommand), pfrom->GetId());\n     }\n \n \n@@ -2658,100 +2675,100 @@ bool ProcessMessages(CNode* pfrom, CConnman& connman, const std::atomic<bool>& i\n     // this maintains the order of responses\n     if (!pfrom->vRecvGetData.empty()) return true;\n \n-        // Don't bother if send buffer is too full to respond anyway\n-        if (pfrom->fPauseSend)\n-            return false;\n+    // Don't bother if send buffer is too full to respond anyway\n+    if (pfrom->fPauseSend)\n+        return false;\n \n-        std::list<CNetMessage> msgs;\n-        {\n-            LOCK(pfrom->cs_vProcessMsg);\n-            if (pfrom->vProcessMsg.empty())\n-                return false;\n-            // Just take one message\n-            msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n-            pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n-            pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman.GetReceiveFloodSize();\n-            fMoreWork = !pfrom->vProcessMsg.empty();\n-        }\n-        CNetMessage& msg(msgs.front());\n-\n-        msg.SetVersion(pfrom->GetRecvVersion());\n-        // Scan for message start\n-        if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n-            LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->id);\n-            pfrom->fDisconnect = true;\n+    std::list<CNetMessage> msgs;\n+    {\n+        LOCK(pfrom->cs_vProcessMsg);\n+        if (pfrom->vProcessMsg.empty())\n             return false;\n-        }\n+        // Just take one message\n+        msgs.splice(msgs.begin(), pfrom->vProcessMsg, pfrom->vProcessMsg.begin());\n+        pfrom->nProcessQueueSize -= msgs.front().vRecv.size() + CMessageHeader::HEADER_SIZE;\n+        pfrom->fPauseRecv = pfrom->nProcessQueueSize > connman.GetReceiveFloodSize();\n+        fMoreWork = !pfrom->vProcessMsg.empty();\n+    }\n+    CNetMessage& msg(msgs.front());\n+\n+    msg.SetVersion(pfrom->GetRecvVersion());\n+    // Scan for message start\n+    if (memcmp(msg.hdr.pchMessageStart, chainparams.MessageStart(), CMessageHeader::MESSAGE_START_SIZE) != 0) {\n+        LogPrintf(\"PROCESSMESSAGE: INVALID MESSAGESTART %s peer=%d\\n\", SanitizeString(msg.hdr.GetCommand()), pfrom->GetId());\n+        pfrom->fDisconnect = true;\n+        return false;\n+    }\n \n-        // Read header\n-        CMessageHeader& hdr = msg.hdr;\n-        if (!hdr.IsValid(chainparams.MessageStart()))\n-        {\n-            LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->id);\n-            return fMoreWork;\n-        }\n-        std::string strCommand = hdr.GetCommand();\n+    // Read header\n+    CMessageHeader& hdr = msg.hdr;\n+    if (!hdr.IsValid(chainparams.MessageStart()))\n+    {\n+        LogPrintf(\"PROCESSMESSAGE: ERRORS IN HEADER %s peer=%d\\n\", SanitizeString(hdr.GetCommand()), pfrom->GetId());\n+        return fMoreWork;\n+    }\n+    std::string strCommand = hdr.GetCommand();\n+\n+    // Message size\n+    unsigned int nMessageSize = hdr.nMessageSize;\n \n-        // Message size\n-        unsigned int nMessageSize = hdr.nMessageSize;\n+    // Checksum\n+    CDataStream& vRecv = msg.vRecv;\n+    const uint256& hash = msg.GetMessageHash();\n+    if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0)\n+    {\n+        LogPrintf(\"%s(%s, %u bytes): CHECKSUM ERROR expected %s was %s\\n\", __func__,\n+           SanitizeString(strCommand), nMessageSize,\n+           HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n+           HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n+        return fMoreWork;\n+    }\n \n-        // Checksum\n-        CDataStream& vRecv = msg.vRecv;\n-        const uint256& hash = msg.GetMessageHash();\n-        if (memcmp(hash.begin(), hdr.pchChecksum, CMessageHeader::CHECKSUM_SIZE) != 0)\n+    // Process message\n+    bool fRet = false;\n+    try\n+    {\n+        fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime, chainparams, connman, interruptMsgProc);\n+        if (interruptMsgProc)\n+            return false;\n+        if (!pfrom->vRecvGetData.empty())\n+            fMoreWork = true;\n+    }\n+    catch (const std::ios_base::failure& e)\n+    {\n+        connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_MALFORMED, std::string(\"error parsing message\")));\n+        if (strstr(e.what(), \"end of data\"))\n         {\n-            LogPrintf(\"%s(%s, %u bytes): CHECKSUM ERROR expected %s was %s\\n\", __func__,\n-               SanitizeString(strCommand), nMessageSize,\n-               HexStr(hash.begin(), hash.begin()+CMessageHeader::CHECKSUM_SIZE),\n-               HexStr(hdr.pchChecksum, hdr.pchChecksum+CMessageHeader::CHECKSUM_SIZE));\n-            return fMoreWork;\n+            // Allow exceptions from under-length message on vRecv\n+            LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n         }\n-\n-        // Process message\n-        bool fRet = false;\n-        try\n+        else if (strstr(e.what(), \"size too large\"))\n         {\n-            fRet = ProcessMessage(pfrom, strCommand, vRecv, msg.nTime, chainparams, connman, interruptMsgProc);\n-            if (interruptMsgProc)\n-                return false;\n-            if (!pfrom->vRecvGetData.empty())\n-                fMoreWork = true;\n+            // Allow exceptions from over-long size\n+            LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n         }\n-        catch (const std::ios_base::failure& e)\n+        else if (strstr(e.what(), \"non-canonical ReadCompactSize()\"))\n         {\n-            connman.PushMessage(pfrom, CNetMsgMaker(INIT_PROTO_VERSION).Make(NetMsgType::REJECT, strCommand, REJECT_MALFORMED, std::string(\"error parsing message\")));\n-            if (strstr(e.what(), \"end of data\"))\n-            {\n-                // Allow exceptions from under-length message on vRecv\n-                LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught, normally caused by a message being shorter than its stated length\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-            }\n-            else if (strstr(e.what(), \"size too large\"))\n-            {\n-                // Allow exceptions from over-long size\n-                LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-            }\n-            else if (strstr(e.what(), \"non-canonical ReadCompactSize()\"))\n-            {\n-                // Allow exceptions from non-canonical encoding\n-                LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n-            }\n-            else\n-            {\n-                PrintExceptionContinue(&e, \"ProcessMessages()\");\n-            }\n+            // Allow exceptions from non-canonical encoding\n+            LogPrintf(\"%s(%s, %u bytes): Exception '%s' caught\\n\", __func__, SanitizeString(strCommand), nMessageSize, e.what());\n         }\n-        catch (const std::exception& e) {\n+        else\n+        {\n             PrintExceptionContinue(&e, \"ProcessMessages()\");\n-        } catch (...) {\n-            PrintExceptionContinue(NULL, \"ProcessMessages()\");\n         }\n+    }\n+    catch (const std::exception& e) {\n+        PrintExceptionContinue(&e, \"ProcessMessages()\");\n+    } catch (...) {\n+        PrintExceptionContinue(NULL, \"ProcessMessages()\");\n+    }\n \n-        if (!fRet) {\n-            LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->id);\n-        }\n+    if (!fRet) {\n+        LogPrintf(\"%s(%s, %u bytes) FAILED peer=%d\\n\", __func__, SanitizeString(strCommand), nMessageSize, pfrom->GetId());\n+    }\n \n-        LOCK(cs_main);\n-        SendRejectsAndCheckIfBanned(pfrom, connman);\n+    LOCK(cs_main);\n+    SendRejectsAndCheckIfBanned(pfrom, connman);\n \n     return fMoreWork;\n }\n@@ -2876,7 +2893,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                    got back an empty response.  */\n                 if (pindexStart->pprev)\n                     pindexStart = pindexStart->pprev;\n-                LogPrint(\"net\", \"initial getheaders (%d) to peer=%d (startheight:%d)\\n\", pindexStart->nHeight, pto->id, pto->nStartingHeight);\n+                LogPrint(BCLog::NET, \"initial getheaders (%d) to peer=%d (startheight:%d)\\n\", pindexStart->nHeight, pto->GetId(), pto->nStartingHeight);\n                 connman.PushMessage(pto, msgMaker.Make(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexStart), uint256()));\n             }\n         }\n@@ -2906,7 +2923,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                                  (!state.fPreferHeaderAndIDs || pto->vBlockHashesToAnnounce.size() > 1)) ||\n                                 pto->vBlockHashesToAnnounce.size() > MAX_BLOCKS_TO_ANNOUNCE);\n             const CBlockIndex *pBestIndex = NULL; // last header queued for delivery\n-            ProcessBlockAvailability(pto->id); // ensure pindexBestKnownBlock is up-to-date\n+            ProcessBlockAvailability(pto->GetId()); // ensure pindexBestKnownBlock is up-to-date\n \n             if (!fRevertToInv) {\n                 bool fFoundStartingHeader = false;\n@@ -2960,16 +2977,16 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 if (vHeaders.size() == 1 && state.fPreferHeaderAndIDs) {\n                     // We only send up to 1 block as header-and-ids, as otherwise\n                     // probably means we're doing an initial-ish-sync or they're slow\n-                    LogPrint(\"net\", \"%s sending header-and-ids %s to peer=%d\\n\", __func__,\n-                            vHeaders.front().GetHash().ToString(), pto->id);\n+                    LogPrint(BCLog::NET, \"%s sending header-and-ids %s to peer=%d\\n\", __func__,\n+                            vHeaders.front().GetHash().ToString(), pto->GetId());\n \n                     int nSendFlags = state.fWantsCmpctWitness ? 0 : SERIALIZE_TRANSACTION_NO_WITNESS;\n \n                     bool fGotBlockFromCache = false;\n                     {\n                         LOCK(cs_most_recent_block);\n                         if (most_recent_block_hash == pBestIndex->GetBlockHash()) {\n-                            if (state.fWantsCmpctWitness)\n+                            if (state.fWantsCmpctWitness || !fWitnessesPresentInMostRecentCompactBlock)\n                                 connman.PushMessage(pto, msgMaker.Make(nSendFlags, NetMsgType::CMPCTBLOCK, *most_recent_compact_block));\n                             else {\n                                 CBlockHeaderAndShortTxIDs cmpctblock(*most_recent_block, state.fWantsCmpctWitness);\n@@ -2988,13 +3005,13 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                     state.pindexBestHeaderSent = pBestIndex;\n                 } else if (state.fPreferHeaders) {\n                     if (vHeaders.size() > 1) {\n-                        LogPrint(\"net\", \"%s: %u headers, range (%s, %s), to peer=%d\\n\", __func__,\n+                        LogPrint(BCLog::NET, \"%s: %u headers, range (%s, %s), to peer=%d\\n\", __func__,\n                                 vHeaders.size(),\n                                 vHeaders.front().GetHash().ToString(),\n-                                vHeaders.back().GetHash().ToString(), pto->id);\n+                                vHeaders.back().GetHash().ToString(), pto->GetId());\n                     } else {\n-                        LogPrint(\"net\", \"%s: sending header %s to peer=%d\\n\", __func__,\n-                                vHeaders.front().GetHash().ToString(), pto->id);\n+                        LogPrint(BCLog::NET, \"%s: sending header %s to peer=%d\\n\", __func__,\n+                                vHeaders.front().GetHash().ToString(), pto->GetId());\n                     }\n                     connman.PushMessage(pto, msgMaker.Make(NetMsgType::HEADERS, vHeaders));\n                     state.pindexBestHeaderSent = pBestIndex;\n@@ -3015,15 +3032,15 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                     // This should be very rare and could be optimized out.\n                     // Just log for now.\n                     if (chainActive[pindex->nHeight] != pindex) {\n-                        LogPrint(\"net\", \"Announcing block %s not on main chain (tip=%s)\\n\",\n+                        LogPrint(BCLog::NET, \"Announcing block %s not on main chain (tip=%s)\\n\",\n                             hashToAnnounce.ToString(), chainActive.Tip()->GetBlockHash().ToString());\n                     }\n \n                     // If the peer's chain has this block, don't inv it back.\n                     if (!PeerHasHeader(&state, pindex)) {\n                         pto->PushInventory(CInv(MSG_BLOCK, hashToAnnounce));\n-                        LogPrint(\"net\", \"%s: sending inv peer=%d hash=%s\\n\", __func__,\n-                            pto->id, hashToAnnounce.ToString());\n+                        LogPrint(BCLog::NET, \"%s: sending inv peer=%d hash=%s\\n\", __func__,\n+                            pto->GetId(), hashToAnnounce.ToString());\n                     }\n                 }\n             }\n@@ -3170,7 +3187,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             // Stalling only triggers when the block download window cannot move. During normal steady state,\n             // the download window should be much larger than the to-be-downloaded set of blocks, so disconnection\n             // should only happen during initial block download.\n-            LogPrintf(\"Peer=%d is stalling block download, disconnecting\\n\", pto->id);\n+            LogPrintf(\"Peer=%d is stalling block download, disconnecting\\n\", pto->GetId());\n             pto->fDisconnect = true;\n             return true;\n         }\n@@ -3183,7 +3200,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             QueuedBlock &queuedBlock = state.vBlocksInFlight.front();\n             int nOtherPeersWithValidatedDownloads = nPeersWithValidatedDownloads - (state.nBlocksInFlightValidHeaders > 0);\n             if (nNow > state.nDownloadingSince + consensusParams.nPowTargetSpacing * (BLOCK_DOWNLOAD_TIMEOUT_BASE + BLOCK_DOWNLOAD_TIMEOUT_PER_PEER * nOtherPeersWithValidatedDownloads)) {\n-                LogPrintf(\"Timeout downloading block %s from peer=%d, disconnecting\\n\", queuedBlock.hash.ToString(), pto->id);\n+                LogPrintf(\"Timeout downloading block %s from peer=%d, disconnecting\\n\", queuedBlock.hash.ToString(), pto->GetId());\n                 pto->fDisconnect = true;\n                 return true;\n             }\n@@ -3198,16 +3215,16 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             NodeId staller = -1;\n             FindNextBlocksToDownload(pto->GetId(), MAX_BLOCKS_IN_TRANSIT_PER_PEER - state.nBlocksInFlight, vToDownload, staller, consensusParams);\n             BOOST_FOREACH(const CBlockIndex *pindex, vToDownload) {\n-                uint32_t nFetchFlags = GetFetchFlags(pto, pindex->pprev, consensusParams);\n+                uint32_t nFetchFlags = GetFetchFlags(pto);\n                 vGetData.push_back(CInv(MSG_BLOCK | nFetchFlags, pindex->GetBlockHash()));\n-                MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), consensusParams, pindex);\n-                LogPrint(\"net\", \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n-                    pindex->nHeight, pto->id);\n+                MarkBlockAsInFlight(pto->GetId(), pindex->GetBlockHash(), pindex);\n+                LogPrint(BCLog::NET, \"Requesting block %s (%d) peer=%d\\n\", pindex->GetBlockHash().ToString(),\n+                    pindex->nHeight, pto->GetId());\n             }\n             if (state.nBlocksInFlight == 0 && staller != -1) {\n                 if (State(staller)->nStallingSince == 0) {\n                     State(staller)->nStallingSince = nNow;\n-                    LogPrint(\"net\", \"Stall started peer=%d\\n\", staller);\n+                    LogPrint(BCLog::NET, \"Stall started peer=%d\\n\", staller);\n                 }\n             }\n         }\n@@ -3220,8 +3237,7 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n             const CInv& inv = (*pto->mapAskFor.begin()).second;\n             if (!AlreadyHave(inv))\n             {\n-                if (fDebug)\n-                    LogPrint(\"net\", \"Requesting %s peer=%d\\n\", inv.ToString(), pto->id);\n+                LogPrint(BCLog::NET, \"Requesting %s peer=%d\\n\", inv.ToString(), pto->GetId());\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)\n                 {\n@@ -3249,9 +3265,8 @@ bool SendMessages(CNode* pto, CConnman& connman, const std::atomic<bool>& interr\n                 static CFeeRate default_feerate(DEFAULT_MIN_RELAY_TX_FEE);\n                 static FeeFilterRounder filterRounder(default_feerate);\n                 CAmount filterToSend = filterRounder.round(currentFilter);\n-                // If we don't allow free transactions, then we always have a fee filter of at least minRelayTxFee\n-                if (GetArg(\"-limitfreerelay\", DEFAULT_LIMITFREERELAY) <= 0)\n-                    filterToSend = std::max(filterToSend, ::minRelayTxFee.GetFeePerK());\n+                // We always have a fee filter of at least minRelayTxFee\n+                filterToSend = std::max(filterToSend, ::minRelayTxFee.GetFeePerK());\n                 if (filterToSend != pto->lastSentFeeFilter) {\n                     connman.PushMessage(pto, msgMaker.Make(NetMsgType::FEEFILTER, filterToSend));\n                     pto->lastSentFeeFilter = filterToSend;"
      },
      {
        "sha": "f460595bc1094915d4416a16fdefa72f9ad2cc69",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -30,10 +30,10 @@ class PeerLogicValidation : public CValidationInterface {\n public:\n     PeerLogicValidation(CConnman* connmanIn);\n \n-    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock);\n-    virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload);\n-    virtual void BlockChecked(const CBlock& block, const CValidationState& state);\n-    virtual void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock);\n+    void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;\n+    void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) override;\n+    void BlockChecked(const CBlock& block, const CValidationState& state) override;\n+    void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& pblock) override;\n };\n \n struct CNodeStateStats {"
      },
      {
        "sha": "34a7029862e4d16517bc07a9ff62d29e865887ac",
        "filename": "src/netaddress.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netaddress.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netaddress.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -179,12 +179,6 @@ bool CNetAddr::IsLocal() const\n    return false;\n }\n \n-bool CNetAddr::IsMulticast() const\n-{\n-    return    (IsIPv4() && (GetByte(3) & 0xF0) == 0xE0)\n-           || (GetByte(15) == 0xFF);\n-}\n-\n bool CNetAddr::IsValid() const\n {\n     // Cleanup 3-byte shifted addresses caused by garbage in size field"
      },
      {
        "sha": "fbc4d1a65f9e7f54eaa2b72e6a22ba13abfe2db4",
        "filename": "src/netaddress.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netaddress.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netaddress.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netaddress.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -65,7 +65,6 @@ class CNetAddr\n         bool IsLocal() const;\n         bool IsRoutable() const;\n         bool IsValid() const;\n-        bool IsMulticast() const;\n         enum Network GetNetwork() const;\n         std::string ToString() const;\n         std::string ToStringIP() const;"
      },
      {
        "sha": "32557dd179996b9d1f58d780662e3f7cf5ce6635",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 50,
        "deletions": 30,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -25,7 +25,7 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n-#if !defined(HAVE_MSG_NOSIGNAL) && !defined(MSG_NOSIGNAL)\n+#if !defined(HAVE_MSG_NOSIGNAL)\n #define MSG_NOSIGNAL 0\n #endif\n \n@@ -198,6 +198,14 @@ struct timeval MillisToTimeval(int64_t nTimeout)\n     return timeout;\n }\n \n+enum class IntrRecvError {\n+    OK,\n+    Timeout,\n+    Disconnected,\n+    NetworkError,\n+    Interrupted\n+};\n+\n /**\n  * Read bytes from socket. This will either read the full number of bytes requested\n  * or return False on error or timeout.\n@@ -209,7 +217,7 @@ struct timeval MillisToTimeval(int64_t nTimeout)\n  *\n  * @note This function requires that hSocket is in non-blocking mode.\n  */\n-bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n+static IntrRecvError InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSocket)\n {\n     int64_t curTime = GetTimeMillis();\n     int64_t endTime = curTime + timeout;\n@@ -222,30 +230,30 @@ bool static InterruptibleRecv(char* data, size_t len, int timeout, SOCKET& hSock\n             len -= ret;\n             data += ret;\n         } else if (ret == 0) { // Unexpected disconnection\n-            return false;\n+            return IntrRecvError::Disconnected;\n         } else { // Other error or blocking\n             int nErr = WSAGetLastError();\n             if (nErr == WSAEINPROGRESS || nErr == WSAEWOULDBLOCK || nErr == WSAEINVAL) {\n                 if (!IsSelectableSocket(hSocket)) {\n-                    return false;\n+                    return IntrRecvError::NetworkError;\n                 }\n                 struct timeval tval = MillisToTimeval(std::min(endTime - curTime, maxWait));\n                 fd_set fdset;\n                 FD_ZERO(&fdset);\n                 FD_SET(hSocket, &fdset);\n                 int nRet = select(hSocket + 1, &fdset, NULL, NULL, &tval);\n                 if (nRet == SOCKET_ERROR) {\n-                    return false;\n+                    return IntrRecvError::NetworkError;\n                 }\n             } else {\n-                return false;\n+                return IntrRecvError::NetworkError;\n             }\n         }\n         if (interruptSocks5Recv)\n-            return false;\n+            return IntrRecvError::Interrupted;\n         curTime = GetTimeMillis();\n     }\n-    return len == 0;\n+    return len == 0 ? IntrRecvError::OK : IntrRecvError::Timeout;\n }\n \n struct ProxyCredentials\n@@ -272,7 +280,8 @@ std::string Socks5ErrorString(int err)\n /** Connect using SOCKS5 (as described in RFC1928) */\n static bool Socks5(const std::string& strDest, int port, const ProxyCredentials *auth, SOCKET& hSocket)\n {\n-    LogPrint(\"net\", \"SOCKS5 connecting %s\\n\", strDest);\n+    IntrRecvError recvr;\n+    LogPrint(BCLog::NET, \"SOCKS5 connecting %s\\n\", strDest);\n     if (strDest.size() > 255) {\n         CloseSocket(hSocket);\n         return error(\"Hostname too long\");\n@@ -294,7 +303,7 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         return error(\"Error sending to proxy\");\n     }\n     char pchRet1[2];\n-    if (!InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) {\n+    if ((recvr = InterruptibleRecv(pchRet1, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         LogPrintf(\"Socks5() connect to %s:%d failed: InterruptibleRecv() timeout or other failure\\n\", strDest, port);\n         return false;\n@@ -318,9 +327,9 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n             CloseSocket(hSocket);\n             return error(\"Error sending authentication to proxy\");\n         }\n-        LogPrint(\"proxy\", \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\n+        LogPrint(BCLog::PROXY, \"SOCKS5 sending proxy authentication %s:%s\\n\", auth->username, auth->password);\n         char pchRetA[2];\n-        if (!InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) {\n+        if ((recvr = InterruptibleRecv(pchRetA, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n             CloseSocket(hSocket);\n             return error(\"Error reading proxy authentication response\");\n         }\n@@ -349,9 +358,16 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n         return error(\"Error sending to proxy\");\n     }\n     char pchRet2[4];\n-    if (!InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) {\n+    if ((recvr = InterruptibleRecv(pchRet2, 4, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n-        return error(\"Error reading proxy response\");\n+        if (recvr == IntrRecvError::Timeout) {\n+            /* If a timeout happens here, this effectively means we timed out while connecting\n+             * to the remote node. This is very common for Tor, so do not print an\n+             * error message. */\n+            return false;\n+        } else {\n+            return error(\"Error while reading proxy response\");\n+        }\n     }\n     if (pchRet2[0] != 0x05) {\n         CloseSocket(hSocket);\n@@ -370,30 +386,30 @@ static bool Socks5(const std::string& strDest, int port, const ProxyCredentials\n     char pchRet3[256];\n     switch (pchRet2[3])\n     {\n-        case 0x01: ret = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n-        case 0x04: ret = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case 0x01: recvr = InterruptibleRecv(pchRet3, 4, SOCKS5_RECV_TIMEOUT, hSocket); break;\n+        case 0x04: recvr = InterruptibleRecv(pchRet3, 16, SOCKS5_RECV_TIMEOUT, hSocket); break;\n         case 0x03:\n         {\n-            ret = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n-            if (!ret) {\n+            recvr = InterruptibleRecv(pchRet3, 1, SOCKS5_RECV_TIMEOUT, hSocket);\n+            if (recvr != IntrRecvError::OK) {\n                 CloseSocket(hSocket);\n                 return error(\"Error reading from proxy\");\n             }\n             int nRecv = pchRet3[0];\n-            ret = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, hSocket);\n+            recvr = InterruptibleRecv(pchRet3, nRecv, SOCKS5_RECV_TIMEOUT, hSocket);\n             break;\n         }\n         default: CloseSocket(hSocket); return error(\"Error: malformed proxy response\");\n     }\n-    if (!ret) {\n+    if (recvr != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n-    if (!InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, hSocket)) {\n+    if ((recvr = InterruptibleRecv(pchRet3, 2, SOCKS5_RECV_TIMEOUT, hSocket)) != IntrRecvError::OK) {\n         CloseSocket(hSocket);\n         return error(\"Error reading from proxy\");\n     }\n-    LogPrint(\"net\", \"SOCKS5 connected %s\\n\", strDest);\n+    LogPrint(BCLog::NET, \"SOCKS5 connected %s\\n\", strDest);\n     return true;\n }\n \n@@ -412,18 +428,14 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n     if (hSocket == INVALID_SOCKET)\n         return false;\n \n-    int set = 1;\n #ifdef SO_NOSIGPIPE\n+    int set = 1;\n     // Different way of disabling SIGPIPE on BSD\n     setsockopt(hSocket, SOL_SOCKET, SO_NOSIGPIPE, (void*)&set, sizeof(int));\n #endif\n \n     //Disable Nagle's algorithm\n-#ifdef WIN32\n-    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n-#else\n-    setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (void*)&set, sizeof(int));\n-#endif\n+    SetSocketNoDelay(hSocket);\n \n     // Set to non-blocking\n     if (!SetSocketNonBlocking(hSocket, true))\n@@ -442,7 +454,7 @@ bool static ConnectSocketDirectly(const CService &addrConnect, SOCKET& hSocketRe\n             int nRet = select(hSocket + 1, NULL, &fdset, NULL, &timeout);\n             if (nRet == 0)\n             {\n-                LogPrint(\"net\", \"connection to %s timeout\\n\", addrConnect.ToString());\n+                LogPrint(BCLog::NET, \"connection to %s timeout\\n\", addrConnect.ToString());\n                 CloseSocket(hSocket);\n                 return false;\n             }\n@@ -656,13 +668,14 @@ std::string NetworkErrorString(int err)\n std::string NetworkErrorString(int err)\n {\n     char buf[256];\n-    const char *s = buf;\n     buf[0] = 0;\n     /* Too bad there are two incompatible implementations of the\n      * thread-safe strerror. */\n+    const char *s;\n #ifdef STRERROR_R_CHAR_P /* GNU variant can return a pointer outside the passed buffer */\n     s = strerror_r(err, buf, sizeof(buf));\n #else /* POSIX variant always returns message in buffer */\n+    s = buf;\n     if (strerror_r(err, buf, sizeof(buf)))\n         buf[0] = 0;\n #endif\n@@ -712,6 +725,13 @@ bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking)\n     return true;\n }\n \n+bool SetSocketNoDelay(SOCKET& hSocket)\n+{\n+    int set = 1;\n+    int rc = setsockopt(hSocket, IPPROTO_TCP, TCP_NODELAY, (const char*)&set, sizeof(int));\n+    return rc == 0;\n+}\n+\n void InterruptSocks5(bool interrupt)\n {\n     interruptSocks5Recv = interrupt;"
      },
      {
        "sha": "c9d108aadd1410da675ba0182132d84ce56f96dc",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -59,6 +59,8 @@ std::string NetworkErrorString(int err);\n bool CloseSocket(SOCKET& hSocket);\n /** Disable or enable blocking-mode for a socket */\n bool SetSocketNonBlocking(SOCKET& hSocket, bool fNonBlocking);\n+/** Set the TCP_NODELAY flag on a socket */\n+bool SetSocketNoDelay(SOCKET& hSocket);\n /**\n  * Convert milliseconds to a struct timeval for e.g. select.\n  */"
      },
      {
        "sha": "a089c02284f047ed68c791cddeedb8d978c91736",
        "filename": "src/policy/feerate.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/feerate.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/feerate.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,7 +3,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"amount.h\"\n+#include \"feerate.h\"\n \n #include \"tinyformat.h\"\n ",
        "previous_filename": "src/amount.cpp"
      },
      {
        "sha": "e82268b095a3196b16007ac58cf3967a40196ed2",
        "filename": "src/policy/feerate.h",
        "status": "added",
        "additions": 54,
        "deletions": 0,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/feerate.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/feerate.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/feerate.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,54 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_POLICY_FEERATE_H\n+#define BITCOIN_POLICY_FEERATE_H\n+\n+#include \"amount.h\"\n+#include \"serialize.h\"\n+\n+#include <string>\n+\n+extern const std::string CURRENCY_UNIT;\n+\n+/**\n+ * Fee rate in satoshis per kilobyte: CAmount / kB\n+ */\n+class CFeeRate\n+{\n+private:\n+    CAmount nSatoshisPerK; // unit is satoshis-per-1,000-bytes\n+public:\n+    /** Fee rate of 0 satoshis per kB */\n+    CFeeRate() : nSatoshisPerK(0) { }\n+    explicit CFeeRate(const CAmount& _nSatoshisPerK): nSatoshisPerK(_nSatoshisPerK) { }\n+    /** Constructor for a fee rate in satoshis per kB. The size in bytes must not exceed (2^63 - 1)*/\n+    CFeeRate(const CAmount& nFeePaid, size_t nBytes);\n+    CFeeRate(const CFeeRate& other) { nSatoshisPerK = other.nSatoshisPerK; }\n+    /**\n+     * Return the fee in satoshis for the given size in bytes.\n+     */\n+    CAmount GetFee(size_t nBytes) const;\n+    /**\n+     * Return the fee in satoshis for a size of 1000 bytes\n+     */\n+    CAmount GetFeePerK() const { return GetFee(1000); }\n+    friend bool operator<(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK < b.nSatoshisPerK; }\n+    friend bool operator>(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK > b.nSatoshisPerK; }\n+    friend bool operator==(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK == b.nSatoshisPerK; }\n+    friend bool operator<=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK <= b.nSatoshisPerK; }\n+    friend bool operator>=(const CFeeRate& a, const CFeeRate& b) { return a.nSatoshisPerK >= b.nSatoshisPerK; }\n+    CFeeRate& operator+=(const CFeeRate& a) { nSatoshisPerK += a.nSatoshisPerK; return *this; }\n+    std::string ToString() const;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        READWRITE(nSatoshisPerK);\n+    }\n+};\n+\n+#endif //  BITCOIN_POLICY_FEERATE_H"
      },
      {
        "sha": "37c47f22326e30563a4c66e8287dbffb7dc1053b",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 630,
        "deletions": 171,
        "changes": 801,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,46 +7,163 @@\n #include \"policy/policy.h\"\n \n #include \"amount.h\"\n+#include \"clientversion.h\"\n #include \"primitives/transaction.h\"\n #include \"random.h\"\n #include \"streams.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n \n-void TxConfirmStats::Initialize(std::vector<double>& defaultBuckets,\n-                                unsigned int maxConfirms, double _decay)\n+static constexpr double INF_FEERATE = 1e99;\n+\n+/**\n+ * We will instantiate an instance of this class to track transactions that were\n+ * included in a block. We will lump transactions into a bucket according to their\n+ * approximate feerate and then track how long it took for those txs to be included in a block\n+ *\n+ * The tracking of unconfirmed (mempool) transactions is completely independent of the\n+ * historical tracking of transactions that have been confirmed in a block.\n+ */\n+class TxConfirmStats\n+{\n+private:\n+    //Define the buckets we will group transactions into\n+    const std::vector<double>& buckets;              // The upper-bound of the range for the bucket (inclusive)\n+    const std::map<double, unsigned int>& bucketMap; // Map of bucket upper-bound to index into all vectors by bucket\n+\n+    // For each bucket X:\n+    // Count the total # of txs in each bucket\n+    // Track the historical moving average of this total over blocks\n+    std::vector<double> txCtAvg;\n+\n+    // Count the total # of txs confirmed within Y blocks in each bucket\n+    // Track the historical moving average of theses totals over blocks\n+    std::vector<std::vector<double>> confAvg; // confAvg[Y][X]\n+\n+    // Track moving avg of txs which have been evicted from the mempool\n+    // after failing to be confirmed within Y blocks\n+    std::vector<std::vector<double>> failAvg; // failAvg[Y][X]\n+\n+    // Sum the total feerate of all tx's in each bucket\n+    // Track the historical moving average of this total over blocks\n+    std::vector<double> avg;\n+\n+    // Combine the conf counts with tx counts to calculate the confirmation % for each Y,X\n+    // Combine the total value with the tx counts to calculate the avg feerate per bucket\n+\n+    double decay;\n+\n+    // Resolution (# of blocks) with which confirmations are tracked\n+    unsigned int scale;\n+\n+    // Mempool counts of outstanding transactions\n+    // For each bucket X, track the number of transactions in the mempool\n+    // that are unconfirmed for each possible confirmation value Y\n+    std::vector<std::vector<int> > unconfTxs;  //unconfTxs[Y][X]\n+    // transactions still unconfirmed after GetMaxConfirms for each bucket\n+    std::vector<int> oldUnconfTxs;\n+\n+    void resizeInMemoryCounters(size_t newbuckets);\n+\n+public:\n+    /**\n+     * Create new TxConfirmStats. This is called by BlockPolicyEstimator's\n+     * constructor with default values.\n+     * @param defaultBuckets contains the upper limits for the bucket boundaries\n+     * @param maxConfirms max number of confirms to track\n+     * @param decay how much to decay the historical moving average per block\n+     */\n+    TxConfirmStats(const std::vector<double>& defaultBuckets, const std::map<double, unsigned int>& defaultBucketMap,\n+                   unsigned int maxPeriods, double decay, unsigned int scale);\n+\n+    /** Roll the circular buffer for unconfirmed txs*/\n+    void ClearCurrent(unsigned int nBlockHeight);\n+\n+    /**\n+     * Record a new transaction data point in the current block stats\n+     * @param blocksToConfirm the number of blocks it took this transaction to confirm\n+     * @param val the feerate of the transaction\n+     * @warning blocksToConfirm is 1-based and has to be >= 1\n+     */\n+    void Record(int blocksToConfirm, double val);\n+\n+    /** Record a new transaction entering the mempool*/\n+    unsigned int NewTx(unsigned int nBlockHeight, double val);\n+\n+    /** Remove a transaction from mempool tracking stats*/\n+    void removeTx(unsigned int entryHeight, unsigned int nBestSeenHeight,\n+                  unsigned int bucketIndex, bool inBlock);\n+\n+    /** Update our estimates by decaying our historical moving average and updating\n+        with the data gathered from the current block */\n+    void UpdateMovingAverages();\n+\n+    /**\n+     * Calculate a feerate estimate.  Find the lowest value bucket (or range of buckets\n+     * to make sure we have enough data points) whose transactions still have sufficient likelihood\n+     * of being confirmed within the target number of confirmations\n+     * @param confTarget target number of confirmations\n+     * @param sufficientTxVal required average number of transactions per block in a bucket range\n+     * @param minSuccess the success probability we require\n+     * @param requireGreater return the lowest feerate such that all higher values pass minSuccess OR\n+     *        return the highest feerate such that all lower values fail minSuccess\n+     * @param nBlockHeight the current block height\n+     */\n+    double EstimateMedianVal(int confTarget, double sufficientTxVal,\n+                             double minSuccess, bool requireGreater, unsigned int nBlockHeight,\n+                             EstimationResult *result = nullptr) const;\n+\n+    /** Return the max number of confirms we're tracking */\n+    unsigned int GetMaxConfirms() const { return scale * confAvg.size(); }\n+\n+    /** Write state of estimation data to a file*/\n+    void Write(CAutoFile& fileout) const;\n+\n+    /**\n+     * Read saved state of estimation data from a file and replace all internal data structures and\n+     * variables with this state.\n+     */\n+    void Read(CAutoFile& filein, int nFileVersion, size_t numBuckets);\n+};\n+\n+\n+TxConfirmStats::TxConfirmStats(const std::vector<double>& defaultBuckets,\n+                                const std::map<double, unsigned int>& defaultBucketMap,\n+                               unsigned int maxPeriods, double _decay, unsigned int _scale)\n+    : buckets(defaultBuckets), bucketMap(defaultBucketMap)\n {\n     decay = _decay;\n-    for (unsigned int i = 0; i < defaultBuckets.size(); i++) {\n-        buckets.push_back(defaultBuckets[i]);\n-        bucketMap[defaultBuckets[i]] = i;\n-    }\n-    confAvg.resize(maxConfirms);\n-    curBlockConf.resize(maxConfirms);\n-    unconfTxs.resize(maxConfirms);\n-    for (unsigned int i = 0; i < maxConfirms; i++) {\n+    scale = _scale;\n+    confAvg.resize(maxPeriods);\n+    for (unsigned int i = 0; i < maxPeriods; i++) {\n         confAvg[i].resize(buckets.size());\n-        curBlockConf[i].resize(buckets.size());\n-        unconfTxs[i].resize(buckets.size());\n+    }\n+    failAvg.resize(maxPeriods);\n+    for (unsigned int i = 0; i < maxPeriods; i++) {\n+        failAvg[i].resize(buckets.size());\n     }\n \n-    oldUnconfTxs.resize(buckets.size());\n-    curBlockTxCt.resize(buckets.size());\n     txCtAvg.resize(buckets.size());\n-    curBlockVal.resize(buckets.size());\n     avg.resize(buckets.size());\n+\n+    resizeInMemoryCounters(buckets.size());\n }\n \n-// Zero out the data for the current block\n+void TxConfirmStats::resizeInMemoryCounters(size_t newbuckets) {\n+    // newbuckets must be passed in because the buckets referred to during Read have not been updated yet.\n+    unconfTxs.resize(GetMaxConfirms());\n+    for (unsigned int i = 0; i < unconfTxs.size(); i++) {\n+        unconfTxs[i].resize(newbuckets);\n+    }\n+    oldUnconfTxs.resize(newbuckets);\n+}\n+\n+// Roll the unconfirmed txs circular buffer\n void TxConfirmStats::ClearCurrent(unsigned int nBlockHeight)\n {\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n         oldUnconfTxs[j] += unconfTxs[nBlockHeight%unconfTxs.size()][j];\n         unconfTxs[nBlockHeight%unconfTxs.size()][j] = 0;\n-        for (unsigned int i = 0; i < curBlockConf.size(); i++)\n-            curBlockConf[i][j] = 0;\n-        curBlockTxCt[j] = 0;\n-        curBlockVal[j] = 0;\n     }\n }\n \n@@ -56,33 +173,38 @@ void TxConfirmStats::Record(int blocksToConfirm, double val)\n     // blocksToConfirm is 1-based\n     if (blocksToConfirm < 1)\n         return;\n+    int periodsToConfirm = (blocksToConfirm + scale - 1)/scale;\n     unsigned int bucketindex = bucketMap.lower_bound(val)->second;\n-    for (size_t i = blocksToConfirm; i <= curBlockConf.size(); i++) {\n-        curBlockConf[i - 1][bucketindex]++;\n+    for (size_t i = periodsToConfirm; i <= confAvg.size(); i++) {\n+        confAvg[i - 1][bucketindex]++;\n     }\n-    curBlockTxCt[bucketindex]++;\n-    curBlockVal[bucketindex] += val;\n+    txCtAvg[bucketindex]++;\n+    avg[bucketindex] += val;\n }\n \n void TxConfirmStats::UpdateMovingAverages()\n {\n     for (unsigned int j = 0; j < buckets.size(); j++) {\n         for (unsigned int i = 0; i < confAvg.size(); i++)\n-            confAvg[i][j] = confAvg[i][j] * decay + curBlockConf[i][j];\n-        avg[j] = avg[j] * decay + curBlockVal[j];\n-        txCtAvg[j] = txCtAvg[j] * decay + curBlockTxCt[j];\n+            confAvg[i][j] = confAvg[i][j] * decay;\n+        for (unsigned int i = 0; i < failAvg.size(); i++)\n+            failAvg[i][j] = failAvg[i][j] * decay;\n+        avg[j] = avg[j] * decay;\n+        txCtAvg[j] = txCtAvg[j] * decay;\n     }\n }\n \n // returns -1 on error conditions\n double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n                                          double successBreakPoint, bool requireGreater,\n-                                         unsigned int nBlockHeight)\n+                                         unsigned int nBlockHeight, EstimationResult *result) const\n {\n     // Counters for a bucket (or range of buckets)\n     double nConf = 0; // Number of tx's confirmed within the confTarget\n     double totalNum = 0; // Total number of tx's that were ever confirmed\n     int extraNum = 0;  // Number of tx's still in mempool for confTarget or longer\n+    double failNum = 0; // Number of tx's that were never confirmed but removed from the mempool after confTarget\n+    int periodTarget = (confTarget + scale - 1)/scale;\n \n     int maxbucketindex = buckets.size() - 1;\n \n@@ -105,12 +227,21 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n \n     bool foundAnswer = false;\n     unsigned int bins = unconfTxs.size();\n+    bool newBucketRange = true;\n+    bool passing = true;\n+    EstimatorBucket passBucket;\n+    EstimatorBucket failBucket;\n \n     // Start counting from highest(default) or lowest feerate transactions\n     for (int bucket = startbucket; bucket >= 0 && bucket <= maxbucketindex; bucket += step) {\n+        if (newBucketRange) {\n+            curNearBucket = bucket;\n+            newBucketRange = false;\n+        }\n         curFarBucket = bucket;\n-        nConf += confAvg[confTarget - 1][bucket];\n+        nConf += confAvg[periodTarget - 1][bucket];\n         totalNum += txCtAvg[bucket];\n+        failNum += failAvg[periodTarget - 1][bucket];\n         for (unsigned int confct = confTarget; confct < GetMaxConfirms(); confct++)\n             extraNum += unconfTxs[(nBlockHeight - confct)%bins][bucket];\n         extraNum += oldUnconfTxs[bucket];\n@@ -119,24 +250,41 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n         // (Only count the confirmed data points, so that each confirmation count\n         // will be looking at the same amount of data and same bucket breaks)\n         if (totalNum >= sufficientTxVal / (1 - decay)) {\n-            double curPct = nConf / (totalNum + extraNum);\n+            double curPct = nConf / (totalNum + failNum + extraNum);\n \n             // Check to see if we are no longer getting confirmed at the success rate\n-            if (requireGreater && curPct < successBreakPoint)\n-                break;\n-            if (!requireGreater && curPct > successBreakPoint)\n-                break;\n-\n+            if ((requireGreater && curPct < successBreakPoint) || (!requireGreater && curPct > successBreakPoint)) {\n+                if (passing == true) {\n+                    // First time we hit a failure record the failed bucket\n+                    unsigned int failMinBucket = std::min(curNearBucket, curFarBucket);\n+                    unsigned int failMaxBucket = std::max(curNearBucket, curFarBucket);\n+                    failBucket.start = failMinBucket ? buckets[failMinBucket - 1] : 0;\n+                    failBucket.end = buckets[failMaxBucket];\n+                    failBucket.withinTarget = nConf;\n+                    failBucket.totalConfirmed = totalNum;\n+                    failBucket.inMempool = extraNum;\n+                    failBucket.leftMempool = failNum;\n+                    passing = false;\n+                }\n+                continue;\n+            }\n             // Otherwise update the cumulative stats, and the bucket variables\n             // and reset the counters\n             else {\n+                failBucket = EstimatorBucket(); // Reset any failed bucket, currently passing\n                 foundAnswer = true;\n+                passing = true;\n+                passBucket.withinTarget = nConf;\n                 nConf = 0;\n+                passBucket.totalConfirmed = totalNum;\n                 totalNum = 0;\n+                passBucket.inMempool = extraNum;\n+                passBucket.leftMempool = failNum;\n+                failNum = 0;\n                 extraNum = 0;\n                 bestNearBucket = curNearBucket;\n                 bestFarBucket = curFarBucket;\n-                curNearBucket = bucket + step;\n+                newBucketRange = true;\n             }\n         }\n     }\n@@ -148,8 +296,8 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n     // Find the bucket with the median transaction and then report the average feerate from that bucket\n     // This is a compromise between finding the median which we can't since we don't save all tx's\n     // and reporting the average which is less accurate\n-    unsigned int minBucket = bestNearBucket < bestFarBucket ? bestNearBucket : bestFarBucket;\n-    unsigned int maxBucket = bestNearBucket > bestFarBucket ? bestNearBucket : bestFarBucket;\n+    unsigned int minBucket = std::min(bestNearBucket, bestFarBucket);\n+    unsigned int maxBucket = std::max(bestNearBucket, bestFarBucket);\n     for (unsigned int j = minBucket; j <= maxBucket; j++) {\n         txSum += txCtAvg[j];\n     }\n@@ -163,85 +311,111 @@ double TxConfirmStats::EstimateMedianVal(int confTarget, double sufficientTxVal,\n                 break;\n             }\n         }\n+\n+        passBucket.start = minBucket ? buckets[minBucket-1] : 0;\n+        passBucket.end = buckets[maxBucket];\n     }\n \n-    LogPrint(\"estimatefee\", \"%3d: For conf success %s %4.2f need feerate %s: %12.5g from buckets %8g - %8g  Cur Bucket stats %6.2f%%  %8.1f/(%.1f+%d mempool)\\n\",\n-             confTarget, requireGreater ? \">\" : \"<\", successBreakPoint,\n-             requireGreater ? \">\" : \"<\", median, buckets[minBucket], buckets[maxBucket],\n-             100 * nConf / (totalNum + extraNum), nConf, totalNum, extraNum);\n+    // If we were passing until we reached last few buckets with insufficient data, then report those as failed\n+    if (passing && !newBucketRange) {\n+        unsigned int failMinBucket = std::min(curNearBucket, curFarBucket);\n+        unsigned int failMaxBucket = std::max(curNearBucket, curFarBucket);\n+        failBucket.start = failMinBucket ? buckets[failMinBucket - 1] : 0;\n+        failBucket.end = buckets[failMaxBucket];\n+        failBucket.withinTarget = nConf;\n+        failBucket.totalConfirmed = totalNum;\n+        failBucket.inMempool = extraNum;\n+        failBucket.leftMempool = failNum;\n+    }\n \n+    LogPrint(BCLog::ESTIMATEFEE, \"FeeEst: %d %s%.0f%% decay %.5f: feerate: %g from (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out) Fail: (%g - %g) %.2f%% %.1f/(%.1f %d mem %.1f out)\\n\",\n+             confTarget, requireGreater ? \">\" : \"<\", 100.0 * successBreakPoint, decay,\n+             median, passBucket.start, passBucket.end,\n+             100 * passBucket.withinTarget / (passBucket.totalConfirmed + passBucket.inMempool + passBucket.leftMempool),\n+             passBucket.withinTarget, passBucket.totalConfirmed, passBucket.inMempool, passBucket.leftMempool,\n+             failBucket.start, failBucket.end,\n+             100 * failBucket.withinTarget / (failBucket.totalConfirmed + failBucket.inMempool + failBucket.leftMempool),\n+             failBucket.withinTarget, failBucket.totalConfirmed, failBucket.inMempool, failBucket.leftMempool);\n+\n+\n+    if (result) {\n+        result->pass = passBucket;\n+        result->fail = failBucket;\n+        result->decay = decay;\n+        result->scale = scale;\n+    }\n     return median;\n }\n \n-void TxConfirmStats::Write(CAutoFile& fileout)\n+void TxConfirmStats::Write(CAutoFile& fileout) const\n {\n     fileout << decay;\n-    fileout << buckets;\n+    fileout << scale;\n     fileout << avg;\n     fileout << txCtAvg;\n     fileout << confAvg;\n+    fileout << failAvg;\n }\n \n-void TxConfirmStats::Read(CAutoFile& filein)\n+void TxConfirmStats::Read(CAutoFile& filein, int nFileVersion, size_t numBuckets)\n {\n-    // Read data file into temporary variables and do some very basic sanity checking\n-    std::vector<double> fileBuckets;\n-    std::vector<double> fileAvg;\n-    std::vector<std::vector<double> > fileConfAvg;\n-    std::vector<double> fileTxCtAvg;\n-    double fileDecay;\n-    size_t maxConfirms;\n-    size_t numBuckets;\n-\n-    filein >> fileDecay;\n-    if (fileDecay <= 0 || fileDecay >= 1)\n-        throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n-    filein >> fileBuckets;\n-    numBuckets = fileBuckets.size();\n-    if (numBuckets <= 1 || numBuckets > 1000)\n-        throw std::runtime_error(\"Corrupt estimates file. Must have between 2 and 1000 feerate buckets\");\n-    filein >> fileAvg;\n-    if (fileAvg.size() != numBuckets)\n+    // Read data file and do some very basic sanity checking\n+    // buckets and bucketMap are not updated yet, so don't access them\n+    // If there is a read failure, we'll just discard this entire object anyway\n+    size_t maxConfirms, maxPeriods;\n+\n+    // The current version will store the decay with each individual TxConfirmStats and also keep a scale factor\n+    if (nFileVersion >= 149900) {\n+        filein >> decay;\n+        if (decay <= 0 || decay >= 1) {\n+            throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n+        }\n+        filein >> scale;\n+    }\n+\n+    filein >> avg;\n+    if (avg.size() != numBuckets) {\n         throw std::runtime_error(\"Corrupt estimates file. Mismatch in feerate average bucket count\");\n-    filein >> fileTxCtAvg;\n-    if (fileTxCtAvg.size() != numBuckets)\n+    }\n+    filein >> txCtAvg;\n+    if (txCtAvg.size() != numBuckets) {\n         throw std::runtime_error(\"Corrupt estimates file. Mismatch in tx count bucket count\");\n-    filein >> fileConfAvg;\n-    maxConfirms = fileConfAvg.size();\n-    if (maxConfirms <= 0 || maxConfirms > 6 * 24 * 7) // one week\n-        throw std::runtime_error(\"Corrupt estimates file.  Must maintain estimates for between 1 and 1008 (one week) confirms\");\n-    for (unsigned int i = 0; i < maxConfirms; i++) {\n-        if (fileConfAvg[i].size() != numBuckets)\n-            throw std::runtime_error(\"Corrupt estimates file. Mismatch in feerate conf average bucket count\");\n     }\n-    // Now that we've processed the entire feerate estimate data file and not\n-    // thrown any errors, we can copy it to our data structures\n-    decay = fileDecay;\n-    buckets = fileBuckets;\n-    avg = fileAvg;\n-    confAvg = fileConfAvg;\n-    txCtAvg = fileTxCtAvg;\n-    bucketMap.clear();\n+    filein >> confAvg;\n+    maxPeriods = confAvg.size();\n+    maxConfirms = scale * maxPeriods;\n \n-    // Resize the current block variables which aren't stored in the data file\n-    // to match the number of confirms and buckets\n-    curBlockConf.resize(maxConfirms);\n-    for (unsigned int i = 0; i < maxConfirms; i++) {\n-        curBlockConf[i].resize(buckets.size());\n+    if (maxConfirms <= 0 || maxConfirms > 6 * 24 * 7) { // one week\n+        throw std::runtime_error(\"Corrupt estimates file.  Must maintain estimates for between 1 and 1008 (one week) confirms\");\n+    }\n+    for (unsigned int i = 0; i < maxPeriods; i++) {\n+        if (confAvg[i].size() != numBuckets) {\n+            throw std::runtime_error(\"Corrupt estimates file. Mismatch in feerate conf average bucket count\");\n+        }\n     }\n-    curBlockTxCt.resize(buckets.size());\n-    curBlockVal.resize(buckets.size());\n \n-    unconfTxs.resize(maxConfirms);\n-    for (unsigned int i = 0; i < maxConfirms; i++) {\n-        unconfTxs[i].resize(buckets.size());\n+    if (nFileVersion >= 149900) {\n+        filein >> failAvg;\n+        if (maxPeriods != failAvg.size()) {\n+            throw std::runtime_error(\"Corrupt estimates file. Mismatch in confirms tracked for failures\");\n+        }\n+        for (unsigned int i = 0; i < maxPeriods; i++) {\n+            if (failAvg[i].size() != numBuckets) {\n+                throw std::runtime_error(\"Corrupt estimates file. Mismatch in one of failure average bucket counts\");\n+            }\n+        }\n+    } else {\n+        failAvg.resize(confAvg.size());\n+        for (unsigned int i = 0; i < failAvg.size(); i++) {\n+            failAvg[i].resize(numBuckets);\n+        }\n     }\n-    oldUnconfTxs.resize(buckets.size());\n \n-    for (unsigned int i = 0; i < buckets.size(); i++)\n-        bucketMap[buckets[i]] = i;\n+    // Resize the current block variables which aren't stored in the data file\n+    // to match the number of confirms and buckets\n+    resizeInMemoryCounters(numBuckets);\n \n-    LogPrint(\"estimatefee\", \"Reading estimates: %u buckets counting confirms up to %u blocks\\n\",\n+    LogPrint(BCLog::ESTIMATEFEE, \"Reading estimates: %u buckets counting confirms up to %u blocks\\n\",\n              numBuckets, maxConfirms);\n }\n \n@@ -253,31 +427,39 @@ unsigned int TxConfirmStats::NewTx(unsigned int nBlockHeight, double val)\n     return bucketindex;\n }\n \n-void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHeight, unsigned int bucketindex)\n+void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHeight, unsigned int bucketindex, bool inBlock)\n {\n     //nBestSeenHeight is not updated yet for the new block\n     int blocksAgo = nBestSeenHeight - entryHeight;\n     if (nBestSeenHeight == 0)  // the BlockPolicyEstimator hasn't seen any blocks yet\n         blocksAgo = 0;\n     if (blocksAgo < 0) {\n-        LogPrint(\"estimatefee\", \"Blockpolicy error, blocks ago is negative for mempool tx\\n\");\n+        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, blocks ago is negative for mempool tx\\n\");\n         return;  //This can't happen because we call this with our best seen height, no entries can have higher\n     }\n \n     if (blocksAgo >= (int)unconfTxs.size()) {\n-        if (oldUnconfTxs[bucketindex] > 0)\n+        if (oldUnconfTxs[bucketindex] > 0) {\n             oldUnconfTxs[bucketindex]--;\n-        else\n-            LogPrint(\"estimatefee\", \"Blockpolicy error, mempool tx removed from >25 blocks,bucketIndex=%u already\\n\",\n+        } else {\n+            LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, mempool tx removed from >25 blocks,bucketIndex=%u already\\n\",\n                      bucketindex);\n+        }\n     }\n     else {\n         unsigned int blockIndex = entryHeight % unconfTxs.size();\n-        if (unconfTxs[blockIndex][bucketindex] > 0)\n+        if (unconfTxs[blockIndex][bucketindex] > 0) {\n             unconfTxs[blockIndex][bucketindex]--;\n-        else\n-            LogPrint(\"estimatefee\", \"Blockpolicy error, mempool tx removed from blockIndex=%u,bucketIndex=%u already\\n\",\n+        } else {\n+            LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error, mempool tx removed from blockIndex=%u,bucketIndex=%u already\\n\",\n                      blockIndex, bucketindex);\n+        }\n+    }\n+    if (!inBlock && (unsigned int)blocksAgo >= scale) { // Only counts as a failure if not confirmed for entire period\n+        unsigned int periodsAgo = blocksAgo / scale;\n+        for (size_t i = 0; i < periodsAgo && i < failAvg.size(); i++) {\n+            failAvg[i][bucketindex]++;\n+        }\n     }\n }\n \n@@ -286,37 +468,53 @@ void TxConfirmStats::removeTx(unsigned int entryHeight, unsigned int nBestSeenHe\n // tracked. Txs that were part of a block have already been removed in\n // processBlockTx to ensure they are never double tracked, but it is\n // of no harm to try to remove them again.\n-bool CBlockPolicyEstimator::removeTx(uint256 hash)\n+bool CBlockPolicyEstimator::removeTx(uint256 hash, bool inBlock)\n {\n+    LOCK(cs_feeEstimator);\n     std::map<uint256, TxStatsInfo>::iterator pos = mapMemPoolTxs.find(hash);\n     if (pos != mapMemPoolTxs.end()) {\n-        feeStats.removeTx(pos->second.blockHeight, nBestSeenHeight, pos->second.bucketIndex);\n+        feeStats->removeTx(pos->second.blockHeight, nBestSeenHeight, pos->second.bucketIndex, inBlock);\n+        shortStats->removeTx(pos->second.blockHeight, nBestSeenHeight, pos->second.bucketIndex, inBlock);\n+        longStats->removeTx(pos->second.blockHeight, nBestSeenHeight, pos->second.bucketIndex, inBlock);\n         mapMemPoolTxs.erase(hash);\n         return true;\n     } else {\n         return false;\n     }\n }\n \n-CBlockPolicyEstimator::CBlockPolicyEstimator(const CFeeRate& _minRelayFee)\n-    : nBestSeenHeight(0), trackedTxs(0), untrackedTxs(0)\n+CBlockPolicyEstimator::CBlockPolicyEstimator()\n+    : nBestSeenHeight(0), firstRecordedHeight(0), historicalFirst(0), historicalBest(0), trackedTxs(0), untrackedTxs(0)\n+{\n+    static_assert(MIN_BUCKET_FEERATE > 0, \"Min feerate must be nonzero\");\n+    size_t bucketIndex = 0;\n+    for (double bucketBoundary = MIN_BUCKET_FEERATE; bucketBoundary <= MAX_BUCKET_FEERATE; bucketBoundary *= FEE_SPACING, bucketIndex++) {\n+        buckets.push_back(bucketBoundary);\n+        bucketMap[bucketBoundary] = bucketIndex;\n+    }\n+    buckets.push_back(INF_FEERATE);\n+    bucketMap[INF_FEERATE] = bucketIndex;\n+    assert(bucketMap.size() == buckets.size());\n+\n+    feeStats = new TxConfirmStats(buckets, bucketMap, MED_BLOCK_PERIODS, MED_DECAY, MED_SCALE);\n+    shortStats = new TxConfirmStats(buckets, bucketMap, SHORT_BLOCK_PERIODS, SHORT_DECAY, SHORT_SCALE);\n+    longStats = new TxConfirmStats(buckets, bucketMap, LONG_BLOCK_PERIODS, LONG_DECAY, LONG_SCALE);\n+}\n+\n+CBlockPolicyEstimator::~CBlockPolicyEstimator()\n {\n-    static_assert(MIN_FEERATE > 0, \"Min feerate must be nonzero\");\n-    minTrackedFee = _minRelayFee < CFeeRate(MIN_FEERATE) ? CFeeRate(MIN_FEERATE) : _minRelayFee;\n-    std::vector<double> vfeelist;\n-    for (double bucketBoundary = minTrackedFee.GetFeePerK(); bucketBoundary <= MAX_FEERATE; bucketBoundary *= FEE_SPACING) {\n-        vfeelist.push_back(bucketBoundary);\n-    }\n-    vfeelist.push_back(INF_FEERATE);\n-    feeStats.Initialize(vfeelist, MAX_BLOCK_CONFIRMS, DEFAULT_DECAY);\n+    delete feeStats;\n+    delete shortStats;\n+    delete longStats;\n }\n \n void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate)\n {\n+    LOCK(cs_feeEstimator);\n     unsigned int txHeight = entry.GetHeight();\n     uint256 hash = entry.GetTx().GetHash();\n     if (mapMemPoolTxs.count(hash)) {\n-        LogPrint(\"estimatefee\", \"Blockpolicy error mempool tx %s already being tracked\\n\",\n+        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error mempool tx %s already being tracked\\n\",\n                  hash.ToString().c_str());\n \treturn;\n     }\n@@ -341,12 +539,17 @@ void CBlockPolicyEstimator::processTransaction(const CTxMemPoolEntry& entry, boo\n     CFeeRate feeRate(entry.GetFee(), entry.GetTxSize());\n \n     mapMemPoolTxs[hash].blockHeight = txHeight;\n-    mapMemPoolTxs[hash].bucketIndex = feeStats.NewTx(txHeight, (double)feeRate.GetFeePerK());\n+    unsigned int bucketIndex = feeStats->NewTx(txHeight, (double)feeRate.GetFeePerK());\n+    mapMemPoolTxs[hash].bucketIndex = bucketIndex;\n+    unsigned int bucketIndex2 = shortStats->NewTx(txHeight, (double)feeRate.GetFeePerK());\n+    assert(bucketIndex == bucketIndex2);\n+    unsigned int bucketIndex3 = longStats->NewTx(txHeight, (double)feeRate.GetFeePerK());\n+    assert(bucketIndex == bucketIndex3);\n }\n \n bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry)\n {\n-    if (!removeTx(entry->GetTx().GetHash())) {\n+    if (!removeTx(entry->GetTx().GetHash(), true)) {\n         // This transaction wasn't being tracked for fee estimation\n         return false;\n     }\n@@ -358,20 +561,23 @@ bool CBlockPolicyEstimator::processBlockTx(unsigned int nBlockHeight, const CTxM\n     if (blocksToConfirm <= 0) {\n         // This can't happen because we don't process transactions from a block with a height\n         // lower than our greatest seen height\n-        LogPrint(\"estimatefee\", \"Blockpolicy error Transaction had negative blocksToConfirm\\n\");\n+        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy error Transaction had negative blocksToConfirm\\n\");\n         return false;\n     }\n \n     // Feerates are stored and reported as BTC-per-kb:\n     CFeeRate feeRate(entry->GetFee(), entry->GetTxSize());\n \n-    feeStats.Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n+    feeStats->Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n+    shortStats->Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n+    longStats->Record(blocksToConfirm, (double)feeRate.GetFeePerK());\n     return true;\n }\n \n void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n                                          std::vector<const CTxMemPoolEntry*>& entries)\n {\n+    LOCK(cs_feeEstimator);\n     if (nBlockHeight <= nBestSeenHeight) {\n         // Ignore side chains and re-orgs; assuming they are random\n         // they don't affect the estimate.\n@@ -386,60 +592,226 @@ void CBlockPolicyEstimator::processBlock(unsigned int nBlockHeight,\n     // of unconfirmed txs to remove from tracking.\n     nBestSeenHeight = nBlockHeight;\n \n-    // Clear the current block state and update unconfirmed circular buffer\n-    feeStats.ClearCurrent(nBlockHeight);\n+    // Update unconfirmed circular buffer\n+    feeStats->ClearCurrent(nBlockHeight);\n+    shortStats->ClearCurrent(nBlockHeight);\n+    longStats->ClearCurrent(nBlockHeight);\n+\n+    // Decay all exponential averages\n+    feeStats->UpdateMovingAverages();\n+    shortStats->UpdateMovingAverages();\n+    longStats->UpdateMovingAverages();\n \n     unsigned int countedTxs = 0;\n-    // Repopulate the current block states\n-    for (unsigned int i = 0; i < entries.size(); i++) {\n-        if (processBlockTx(nBlockHeight, entries[i]))\n+    // Update averages with data points from current block\n+    for (const auto& entry : entries) {\n+        if (processBlockTx(nBlockHeight, entry))\n             countedTxs++;\n     }\n \n-    // Update all exponential averages with the current block state\n-    feeStats.UpdateMovingAverages();\n+    if (firstRecordedHeight == 0 && countedTxs > 0) {\n+        firstRecordedHeight = nBestSeenHeight;\n+        LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy first recorded height %u\\n\", firstRecordedHeight);\n+    }\n+\n \n-    LogPrint(\"estimatefee\", \"Blockpolicy after updating estimates for %u of %u txs in block, since last block %u of %u tracked, new mempool map size %u\\n\",\n-             countedTxs, entries.size(), trackedTxs, trackedTxs + untrackedTxs, mapMemPoolTxs.size());\n+    LogPrint(BCLog::ESTIMATEFEE, \"Blockpolicy estimates updated by %u of %u block txs, since last block %u of %u tracked, mempool map size %u, max target %u from %s\\n\",\n+             countedTxs, entries.size(), trackedTxs, trackedTxs + untrackedTxs, mapMemPoolTxs.size(),\n+             MaxUsableEstimate(), HistoricalBlockSpan() > BlockSpan() ? \"historical\" : \"current\");\n \n     trackedTxs = 0;\n     untrackedTxs = 0;\n }\n \n-CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget)\n+CFeeRate CBlockPolicyEstimator::estimateFee(int confTarget) const\n {\n-    // Return failure if trying to analyze a target we're not tracking\n     // It's not possible to get reasonable estimates for confTarget of 1\n-    if (confTarget <= 1 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n+    if (confTarget <= 1)\n+        return CFeeRate(0);\n+\n+    return estimateRawFee(confTarget, DOUBLE_SUCCESS_PCT, FeeEstimateHorizon::MED_HALFLIFE);\n+}\n+\n+CFeeRate CBlockPolicyEstimator::estimateRawFee(int confTarget, double successThreshold, FeeEstimateHorizon horizon, EstimationResult* result) const\n+{\n+    TxConfirmStats* stats;\n+    double sufficientTxs = SUFFICIENT_FEETXS;\n+    switch (horizon) {\n+    case FeeEstimateHorizon::SHORT_HALFLIFE: {\n+        stats = shortStats;\n+        sufficientTxs = SUFFICIENT_TXS_SHORT;\n+        break;\n+    }\n+    case FeeEstimateHorizon::MED_HALFLIFE: {\n+        stats = feeStats;\n+        break;\n+    }\n+    case FeeEstimateHorizon::LONG_HALFLIFE: {\n+        stats = longStats;\n+        break;\n+    }\n+    default: {\n+        return CFeeRate(0);\n+    }\n+    }\n+\n+    LOCK(cs_feeEstimator);\n+    // Return failure if trying to analyze a target we're not tracking\n+    if (confTarget <= 0 || (unsigned int)confTarget > stats->GetMaxConfirms())\n+        return CFeeRate(0);\n+    if (successThreshold > 1)\n         return CFeeRate(0);\n \n-    double median = feeStats.EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n+    double median = stats->EstimateMedianVal(confTarget, sufficientTxs, successThreshold, true, nBestSeenHeight, result);\n \n     if (median < 0)\n         return CFeeRate(0);\n \n     return CFeeRate(median);\n }\n \n-CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool)\n+unsigned int CBlockPolicyEstimator::BlockSpan() const\n+{\n+    if (firstRecordedHeight == 0) return 0;\n+    assert(nBestSeenHeight >= firstRecordedHeight);\n+\n+    return nBestSeenHeight - firstRecordedHeight;\n+}\n+\n+unsigned int CBlockPolicyEstimator::HistoricalBlockSpan() const\n+{\n+    if (historicalFirst == 0) return 0;\n+    assert(historicalBest >= historicalFirst);\n+\n+    if (nBestSeenHeight - historicalBest > OLDEST_ESTIMATE_HISTORY) return 0;\n+\n+    return historicalBest - historicalFirst;\n+}\n+\n+unsigned int CBlockPolicyEstimator::MaxUsableEstimate() const\n+{\n+    // Block spans are divided by 2 to make sure there are enough potential failing data points for the estimate\n+    return std::min(longStats->GetMaxConfirms(), std::max(BlockSpan(), HistoricalBlockSpan()) / 2);\n+}\n+\n+/** Return a fee estimate at the required successThreshold from the shortest\n+ * time horizon which tracks confirmations up to the desired target.  If\n+ * checkShorterHorizon is requested, also allow short time horizon estimates\n+ * for a lower target to reduce the given answer */\n+double CBlockPolicyEstimator::estimateCombinedFee(unsigned int confTarget, double successThreshold, bool checkShorterHorizon) const\n+{\n+    double estimate = -1;\n+    if (confTarget >= 1 && confTarget <= longStats->GetMaxConfirms()) {\n+        // Find estimate from shortest time horizon possible\n+        if (confTarget <= shortStats->GetMaxConfirms()) { // short horizon\n+            estimate = shortStats->EstimateMedianVal(confTarget, SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight);\n+        }\n+        else if (confTarget <= feeStats->GetMaxConfirms()) { // medium horizon\n+            estimate = feeStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight);\n+        }\n+        else { // long horizon\n+            estimate = longStats->EstimateMedianVal(confTarget, SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight);\n+        }\n+        if (checkShorterHorizon) {\n+            // If a lower confTarget from a more recent horizon returns a lower answer use it.\n+            if (confTarget > feeStats->GetMaxConfirms()) {\n+                double medMax = feeStats->EstimateMedianVal(feeStats->GetMaxConfirms(), SUFFICIENT_FEETXS, successThreshold, true, nBestSeenHeight);\n+                if (medMax > 0 && (estimate == -1 || medMax < estimate))\n+                    estimate = medMax;\n+            }\n+            if (confTarget > shortStats->GetMaxConfirms()) {\n+                double shortMax = shortStats->EstimateMedianVal(shortStats->GetMaxConfirms(), SUFFICIENT_TXS_SHORT, successThreshold, true, nBestSeenHeight);\n+                if (shortMax > 0 && (estimate == -1 || shortMax < estimate))\n+                    estimate = shortMax;\n+            }\n+        }\n+    }\n+    return estimate;\n+}\n+\n+/** Ensure that for a conservative estimate, the DOUBLE_SUCCESS_PCT is also met\n+ * at 2 * target for any longer time horizons.\n+ */\n+double CBlockPolicyEstimator::estimateConservativeFee(unsigned int doubleTarget) const\n+{\n+    double estimate = -1;\n+    if (doubleTarget <= shortStats->GetMaxConfirms()) {\n+        estimate = feeStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight);\n+    }\n+    if (doubleTarget <= feeStats->GetMaxConfirms()) {\n+        double longEstimate = longStats->EstimateMedianVal(doubleTarget, SUFFICIENT_FEETXS, DOUBLE_SUCCESS_PCT, true, nBestSeenHeight);\n+        if (longEstimate > estimate) {\n+            estimate = longEstimate;\n+        }\n+    }\n+    return estimate;\n+}\n+\n+/** estimateSmartFee returns the max of the feerates calculated with a 60%\n+ * threshold required at target / 2, an 85% threshold required at target and a\n+ * 95% threshold required at 2 * target.  Each calculation is performed at the\n+ * shortest time horizon which tracks the required target.  Conservative\n+ * estimates, however, required the 95% threshold at 2 * target be met for any\n+ * longer time horizons also.\n+ */\n+CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool, bool conservative) const\n {\n     if (answerFoundAtTarget)\n         *answerFoundAtTarget = confTarget;\n-    // Return failure if trying to analyze a target we're not tracking\n-    if (confTarget <= 0 || (unsigned int)confTarget > feeStats.GetMaxConfirms())\n-        return CFeeRate(0);\n-\n-    // It's not possible to get reasonable estimates for confTarget of 1\n-    if (confTarget == 1)\n-        confTarget = 2;\n \n     double median = -1;\n-    while (median < 0 && (unsigned int)confTarget <= feeStats.GetMaxConfirms()) {\n-        median = feeStats.EstimateMedianVal(confTarget++, SUFFICIENT_FEETXS, MIN_SUCCESS_PCT, true, nBestSeenHeight);\n-    }\n+    {\n+        LOCK(cs_feeEstimator);\n+\n+        // Return failure if trying to analyze a target we're not tracking\n+        if (confTarget <= 0 || (unsigned int)confTarget > longStats->GetMaxConfirms())\n+            return CFeeRate(0);\n+\n+        // It's not possible to get reasonable estimates for confTarget of 1\n+        if (confTarget == 1)\n+            confTarget = 2;\n+\n+        unsigned int maxUsableEstimate = MaxUsableEstimate();\n+        if (maxUsableEstimate <= 1)\n+            return CFeeRate(0);\n+\n+        if ((unsigned int)confTarget > maxUsableEstimate) {\n+            confTarget = maxUsableEstimate;\n+        }\n+\n+        assert(confTarget > 0); //estimateCombinedFee and estimateConservativeFee take unsigned ints\n+\n+        /** true is passed to estimateCombined fee for target/2 and target so\n+         * that we check the max confirms for shorter time horizons as well.\n+         * This is necessary to preserve monotonically increasing estimates.\n+         * For non-conservative estimates we do the same thing for 2*target, but\n+         * for conservative estimates we want to skip these shorter horizons\n+         * checks for 2*target becuase we are taking the max over all time\n+         * horizons so we already have monotonically increasing estimates and\n+         * the purpose of conservative estimates is not to let short term\n+         * fluctuations lower our estimates by too much.\n+         */\n+        double halfEst = estimateCombinedFee(confTarget/2, HALF_SUCCESS_PCT, true);\n+        double actualEst = estimateCombinedFee(confTarget, SUCCESS_PCT, true);\n+        double doubleEst = estimateCombinedFee(2 * confTarget, DOUBLE_SUCCESS_PCT, !conservative);\n+        median = halfEst;\n+        if (actualEst > median) {\n+            median = actualEst;\n+        }\n+        if (doubleEst > median) {\n+            median = doubleEst;\n+        }\n+\n+        if (conservative || median == -1) {\n+            double consEst =  estimateConservativeFee(2 * confTarget);\n+            if (consEst > median) {\n+                median = consEst;\n+            }\n+        }\n+    } // Must unlock cs_feeEstimator before taking mempool locks\n \n     if (answerFoundAtTarget)\n-        *answerFoundAtTarget = confTarget - 1;\n+        *answerFoundAtTarget = confTarget;\n \n     // If mempool is limiting txs , return at least the min feerate from the mempool\n     CAmount minPoolFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n@@ -452,47 +824,134 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoun\n     return CFeeRate(median);\n }\n \n-double CBlockPolicyEstimator::estimatePriority(int confTarget)\n-{\n-    return -1;\n-}\n \n-double CBlockPolicyEstimator::estimateSmartPriority(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool)\n+bool CBlockPolicyEstimator::Write(CAutoFile& fileout) const\n {\n-    if (answerFoundAtTarget)\n-        *answerFoundAtTarget = confTarget;\n-\n-    // If mempool is limiting txs, no priority txs are allowed\n-    CAmount minPoolFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n-    if (minPoolFee > 0)\n-        return INF_PRIORITY;\n-\n-    return -1;\n+    try {\n+        LOCK(cs_feeEstimator);\n+        fileout << 149900; // version required to read: 0.14.99 or later\n+        fileout << CLIENT_VERSION; // version that wrote the file\n+        fileout << nBestSeenHeight;\n+        if (BlockSpan() > HistoricalBlockSpan()/2) {\n+            fileout << firstRecordedHeight << nBestSeenHeight;\n+        }\n+        else {\n+            fileout << historicalFirst << historicalBest;\n+        }\n+        fileout << buckets;\n+        feeStats->Write(fileout);\n+        shortStats->Write(fileout);\n+        longStats->Write(fileout);\n+    }\n+    catch (const std::exception&) {\n+        LogPrintf(\"CBlockPolicyEstimator::Write(): unable to write policy estimator data (non-fatal)\\n\");\n+        return false;\n+    }\n+    return true;\n }\n \n-void CBlockPolicyEstimator::Write(CAutoFile& fileout)\n+bool CBlockPolicyEstimator::Read(CAutoFile& filein)\n {\n-    fileout << nBestSeenHeight;\n-    feeStats.Write(fileout);\n+    try {\n+        LOCK(cs_feeEstimator);\n+        int nVersionRequired, nVersionThatWrote;\n+        unsigned int nFileBestSeenHeight, nFileHistoricalFirst, nFileHistoricalBest;\n+        filein >> nVersionRequired >> nVersionThatWrote;\n+        if (nVersionRequired > CLIENT_VERSION)\n+            return error(\"CBlockPolicyEstimator::Read(): up-version (%d) fee estimate file\", nVersionRequired);\n+\n+        // Read fee estimates file into temporary variables so existing data\n+        // structures aren't corrupted if there is an exception.\n+        filein >> nFileBestSeenHeight;\n+\n+        if (nVersionThatWrote < 149900) {\n+            // Read the old fee estimates file for temporary use, but then discard.  Will start collecting data from scratch.\n+            // decay is stored before buckets in old versions, so pre-read decay and pass into TxConfirmStats constructor\n+            double tempDecay;\n+            filein >> tempDecay;\n+            if (tempDecay <= 0 || tempDecay >= 1)\n+                throw std::runtime_error(\"Corrupt estimates file. Decay must be between 0 and 1 (non-inclusive)\");\n+\n+            std::vector<double> tempBuckets;\n+            filein >> tempBuckets;\n+            size_t tempNum = tempBuckets.size();\n+            if (tempNum <= 1 || tempNum > 1000)\n+                throw std::runtime_error(\"Corrupt estimates file. Must have between 2 and 1000 feerate buckets\");\n+\n+            std::map<double, unsigned int> tempMap;\n+\n+            std::unique_ptr<TxConfirmStats> tempFeeStats(new TxConfirmStats(tempBuckets, tempMap, MED_BLOCK_PERIODS, tempDecay, 1));\n+            tempFeeStats->Read(filein, nVersionThatWrote, tempNum);\n+            // if nVersionThatWrote < 139900 then another TxConfirmStats (for priority) follows but can be ignored.\n+\n+            tempMap.clear();\n+            for (unsigned int i = 0; i < tempBuckets.size(); i++) {\n+                tempMap[tempBuckets[i]] = i;\n+            }\n+        }\n+        else { // nVersionThatWrote >= 149900\n+            filein >> nFileHistoricalFirst >> nFileHistoricalBest;\n+            if (nFileHistoricalFirst > nFileHistoricalBest || nFileHistoricalBest > nFileBestSeenHeight) {\n+                throw std::runtime_error(\"Corrupt estimates file. Historical block range for estimates is invalid\");\n+            }\n+            std::vector<double> fileBuckets;\n+            filein >> fileBuckets;\n+            size_t numBuckets = fileBuckets.size();\n+            if (numBuckets <= 1 || numBuckets > 1000)\n+                throw std::runtime_error(\"Corrupt estimates file. Must have between 2 and 1000 feerate buckets\");\n+\n+            std::unique_ptr<TxConfirmStats> fileFeeStats(new TxConfirmStats(buckets, bucketMap, MED_BLOCK_PERIODS, MED_DECAY, MED_SCALE));\n+            std::unique_ptr<TxConfirmStats> fileShortStats(new TxConfirmStats(buckets, bucketMap, SHORT_BLOCK_PERIODS, SHORT_DECAY, SHORT_SCALE));\n+            std::unique_ptr<TxConfirmStats> fileLongStats(new TxConfirmStats(buckets, bucketMap, LONG_BLOCK_PERIODS, LONG_DECAY, LONG_SCALE));\n+            fileFeeStats->Read(filein, nVersionThatWrote, numBuckets);\n+            fileShortStats->Read(filein, nVersionThatWrote, numBuckets);\n+            fileLongStats->Read(filein, nVersionThatWrote, numBuckets);\n+\n+            // Fee estimates file parsed correctly\n+            // Copy buckets from file and refresh our bucketmap\n+            buckets = fileBuckets;\n+            bucketMap.clear();\n+            for (unsigned int i = 0; i < buckets.size(); i++) {\n+                bucketMap[buckets[i]] = i;\n+            }\n+\n+            // Destroy old TxConfirmStats and point to new ones that already reference buckets and bucketMap\n+            delete feeStats;\n+            delete shortStats;\n+            delete longStats;\n+            feeStats = fileFeeStats.release();\n+            shortStats = fileShortStats.release();\n+            longStats = fileLongStats.release();\n+\n+            nBestSeenHeight = nFileBestSeenHeight;\n+            historicalFirst = nFileHistoricalFirst;\n+            historicalBest = nFileHistoricalBest;\n+        }\n+    }\n+    catch (const std::exception& e) {\n+        LogPrintf(\"CBlockPolicyEstimator::Read(): unable to read policy estimator data (non-fatal): %s\\n\",e.what());\n+        return false;\n+    }\n+    return true;\n }\n \n-void CBlockPolicyEstimator::Read(CAutoFile& filein, int nFileVersion)\n-{\n-    int nFileBestSeenHeight;\n-    filein >> nFileBestSeenHeight;\n-    feeStats.Read(filein);\n-    nBestSeenHeight = nFileBestSeenHeight;\n-    if (nFileVersion < 139900) {\n-        TxConfirmStats priStats;\n-        priStats.Read(filein);\n+void CBlockPolicyEstimator::FlushUnconfirmed(CTxMemPool& pool) {\n+    int64_t startclear = GetTimeMicros();\n+    std::vector<uint256> txids;\n+    pool.queryHashes(txids);\n+    LOCK(cs_feeEstimator);\n+    for (auto& txid : txids) {\n+        removeTx(txid, false);\n     }\n+    int64_t endclear = GetTimeMicros();\n+    LogPrint(BCLog::ESTIMATEFEE, \"Recorded %u unconfirmed txs from mempool in %ld micros\\n\",txids.size(), endclear - startclear);\n }\n \n FeeFilterRounder::FeeFilterRounder(const CFeeRate& minIncrementalFee)\n {\n     CAmount minFeeLimit = std::max(CAmount(1), minIncrementalFee.GetFeePerK() / 2);\n     feeset.insert(0);\n-    for (double bucketBoundary = minFeeLimit; bucketBoundary <= MAX_FEERATE; bucketBoundary *= FEE_SPACING) {\n+    for (double bucketBoundary = minFeeLimit; bucketBoundary <= MAX_FILTER_FEERATE; bucketBoundary *= FEE_FILTER_SPACING) {\n         feeset.insert(bucketBoundary);\n     }\n }"
      },
      {
        "sha": "f527c850048bd0285148c55849d91956a87207c7",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 151,
        "deletions": 171,
        "changes": 322,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,8 +6,10 @@\n #define BITCOIN_POLICYESTIMATOR_H\n \n #include \"amount.h\"\n+#include \"feerate.h\"\n #include \"uint256.h\"\n #include \"random.h\"\n+#include \"sync.h\"\n \n #include <map>\n #include <string>\n@@ -17,6 +19,7 @@ class CAutoFile;\n class CFeeRate;\n class CTxMemPoolEntry;\n class CTxMemPool;\n+class TxConfirmStats;\n \n /** \\class CBlockPolicyEstimator\n  * The BlockPolicyEstimator is used for estimating the feerate needed\n@@ -39,213 +42,160 @@ class CTxMemPool;\n  * within your desired 5 blocks.\n  *\n  * Here is a brief description of the implementation:\n- * When a transaction enters the mempool, we\n- * track the height of the block chain at entry.  Whenever a block comes in,\n- * we count the number of transactions in each bucket and the total amount of feerate\n- * paid in each bucket. Then we calculate how many blocks Y it took each\n- * transaction to be mined and we track an array of counters in each bucket\n- * for how long it to took transactions to get confirmed from 1 to a max of 25\n- * and we increment all the counters from Y up to 25. This is because for any\n- * number Z>=Y the transaction was successfully mined within Z blocks.  We\n- * want to save a history of this information, so at any time we have a\n- * counter of the total number of transactions that happened in a given feerate\n- * bucket and the total number that were confirmed in each number 1-25 blocks\n- * or less for any bucket.   We save this history by keeping an exponentially\n- * decaying moving average of each one of these stats.  Furthermore we also\n- * keep track of the number unmined (in mempool) transactions in each bucket\n- * and for how many blocks they have been outstanding and use that to increase\n- * the number of transactions we've seen in that feerate bucket when calculating\n- * an estimate for any number of confirmations below the number of blocks\n- * they've been outstanding.\n+ * When a transaction enters the mempool, we track the height of the block chain\n+ * at entry.  All further calculations are conducted only on this set of \"seen\"\n+ * transactions. Whenever a block comes in, we count the number of transactions\n+ * in each bucket and the total amount of feerate paid in each bucket. Then we\n+ * calculate how many blocks Y it took each transaction to be mined.  We convert\n+ * from a number of blocks to a number of periods Y' each encompassing \"scale\"\n+ * blocks.  This is is tracked in 3 different data sets each up to a maximum\n+ * number of periods. Within each data set we have an array of counters in each\n+ * feerate bucket and we increment all the counters from Y' up to max periods\n+ * representing that a tx was successfullly confirmed in less than or equal to\n+ * that many periods. We want to save a history of this information, so at any\n+ * time we have a counter of the total number of transactions that happened in a\n+ * given feerate bucket and the total number that were confirmed in each of the\n+ * periods or less for any bucket.  We save this history by keeping an\n+ * exponentially decaying moving average of each one of these stats.  This is\n+ * done for a different decay in each of the 3 data sets to keep relevant data\n+ * from different time horizons.  Furthermore we also keep track of the number\n+ * unmined (in mempool or left mempool without being included in a block)\n+ * transactions in each bucket and for how many blocks they have been\n+ * outstanding and use both of these numbers to increase the number of transactions\n+ * we've seen in that feerate bucket when calculating an estimate for any number\n+ * of confirmations below the number of blocks they've been outstanding.\n  */\n \n-/**\n- * We will instantiate an instance of this class to track transactions that were\n- * included in a block. We will lump transactions into a bucket according to their\n- * approximate feerate and then track how long it took for those txs to be included in a block\n- *\n- * The tracking of unconfirmed (mempool) transactions is completely independent of the\n- * historical tracking of transactions that have been confirmed in a block.\n- */\n-class TxConfirmStats\n-{\n-private:\n-    //Define the buckets we will group transactions into\n-    std::vector<double> buckets;              // The upper-bound of the range for the bucket (inclusive)\n-    std::map<double, unsigned int> bucketMap; // Map of bucket upper-bound to index into all vectors by bucket\n-\n-    // For each bucket X:\n-    // Count the total # of txs in each bucket\n-    // Track the historical moving average of this total over blocks\n-    std::vector<double> txCtAvg;\n-    // and calculate the total for the current block to update the moving average\n-    std::vector<int> curBlockTxCt;\n-\n-    // Count the total # of txs confirmed within Y blocks in each bucket\n-    // Track the historical moving average of theses totals over blocks\n-    std::vector<std::vector<double> > confAvg; // confAvg[Y][X]\n-    // and calculate the totals for the current block to update the moving averages\n-    std::vector<std::vector<int> > curBlockConf; // curBlockConf[Y][X]\n-\n-    // Sum the total feerate of all tx's in each bucket\n-    // Track the historical moving average of this total over blocks\n-    std::vector<double> avg;\n-    // and calculate the total for the current block to update the moving average\n-    std::vector<double> curBlockVal;\n+/* Identifier for each of the 3 different TxConfirmStats which will track\n+ * history over different time horizons. */\n+enum FeeEstimateHorizon {\n+    SHORT_HALFLIFE = 0,\n+    MED_HALFLIFE = 1,\n+    LONG_HALFLIFE = 2\n+};\n \n-    // Combine the conf counts with tx counts to calculate the confirmation % for each Y,X\n-    // Combine the total value with the tx counts to calculate the avg feerate per bucket\n+/* Used to return detailed information about a feerate bucket */\n+struct EstimatorBucket\n+{\n+    double start = -1;\n+    double end = -1;\n+    double withinTarget = 0;\n+    double totalConfirmed = 0;\n+    double inMempool = 0;\n+    double leftMempool = 0;\n+};\n \n+/* Used to return detailed information about a fee estimate calculation */\n+struct EstimationResult\n+{\n+    EstimatorBucket pass;\n+    EstimatorBucket fail;\n     double decay;\n-\n-    // Mempool counts of outstanding transactions\n-    // For each bucket X, track the number of transactions in the mempool\n-    // that are unconfirmed for each possible confirmation value Y\n-    std::vector<std::vector<int> > unconfTxs;  //unconfTxs[Y][X]\n-    // transactions still unconfirmed after MAX_CONFIRMS for each bucket\n-    std::vector<int> oldUnconfTxs;\n-\n-public:\n-    /**\n-     * Initialize the data structures.  This is called by BlockPolicyEstimator's\n-     * constructor with default values.\n-     * @param defaultBuckets contains the upper limits for the bucket boundaries\n-     * @param maxConfirms max number of confirms to track\n-     * @param decay how much to decay the historical moving average per block\n-     */\n-    void Initialize(std::vector<double>& defaultBuckets, unsigned int maxConfirms, double decay);\n-\n-    /** Clear the state of the curBlock variables to start counting for the new block */\n-    void ClearCurrent(unsigned int nBlockHeight);\n-\n-    /**\n-     * Record a new transaction data point in the current block stats\n-     * @param blocksToConfirm the number of blocks it took this transaction to confirm\n-     * @param val the feerate of the transaction\n-     * @warning blocksToConfirm is 1-based and has to be >= 1\n-     */\n-    void Record(int blocksToConfirm, double val);\n-\n-    /** Record a new transaction entering the mempool*/\n-    unsigned int NewTx(unsigned int nBlockHeight, double val);\n-\n-    /** Remove a transaction from mempool tracking stats*/\n-    void removeTx(unsigned int entryHeight, unsigned int nBestSeenHeight,\n-                  unsigned int bucketIndex);\n-\n-    /** Update our estimates by decaying our historical moving average and updating\n-        with the data gathered from the current block */\n-    void UpdateMovingAverages();\n-\n-    /**\n-     * Calculate a feerate estimate.  Find the lowest value bucket (or range of buckets\n-     * to make sure we have enough data points) whose transactions still have sufficient likelihood\n-     * of being confirmed within the target number of confirmations\n-     * @param confTarget target number of confirmations\n-     * @param sufficientTxVal required average number of transactions per block in a bucket range\n-     * @param minSuccess the success probability we require\n-     * @param requireGreater return the lowest feerate such that all higher values pass minSuccess OR\n-     *        return the highest feerate such that all lower values fail minSuccess\n-     * @param nBlockHeight the current block height\n-     */\n-    double EstimateMedianVal(int confTarget, double sufficientTxVal,\n-                             double minSuccess, bool requireGreater, unsigned int nBlockHeight);\n-\n-    /** Return the max number of confirms we're tracking */\n-    unsigned int GetMaxConfirms() { return confAvg.size(); }\n-\n-    /** Write state of estimation data to a file*/\n-    void Write(CAutoFile& fileout);\n-\n-    /**\n-     * Read saved state of estimation data from a file and replace all internal data structures and\n-     * variables with this state.\n-     */\n-    void Read(CAutoFile& filein);\n+    unsigned int scale;\n };\n \n-\n-\n-/** Track confirm delays up to 25 blocks, can't estimate beyond that */\n-static const unsigned int MAX_BLOCK_CONFIRMS = 25;\n-\n-/** Decay of .998 is a half-life of 346 blocks or about 2.4 days */\n-static const double DEFAULT_DECAY = .998;\n-\n-/** Require greater than 95% of X feerate transactions to be confirmed within Y blocks for X to be big enough */\n-static const double MIN_SUCCESS_PCT = .95;\n-\n-/** Require an avg of 1 tx in the combined feerate bucket per block to have stat significance */\n-static const double SUFFICIENT_FEETXS = 1;\n-\n-// Minimum and Maximum values for tracking feerates\n-static constexpr double MIN_FEERATE = 10;\n-static const double MAX_FEERATE = 1e7;\n-static const double INF_FEERATE = MAX_MONEY;\n-static const double INF_PRIORITY = 1e9 * MAX_MONEY;\n-\n-// We have to lump transactions into buckets based on feerate, but we want to be able\n-// to give accurate estimates over a large range of potential feerates\n-// Therefore it makes sense to exponentially space the buckets\n-/** Spacing of FeeRate buckets */\n-static const double FEE_SPACING = 1.1;\n-\n /**\n  *  We want to be able to estimate feerates that are needed on tx's to be included in\n  * a certain number of blocks.  Every time a block is added to the best chain, this class records\n  * stats on the transactions included in that block\n  */\n class CBlockPolicyEstimator\n {\n+private:\n+    /** Track confirm delays up to 12 blocks for short horizon */\n+    static constexpr unsigned int SHORT_BLOCK_PERIODS = 12;\n+    static constexpr unsigned int SHORT_SCALE = 1;\n+    /** Track confirm delays up to 48 blocks for medium horizon */\n+    static constexpr unsigned int MED_BLOCK_PERIODS = 24;\n+    static constexpr unsigned int MED_SCALE = 2;\n+    /** Track confirm delays up to 1008 blocks for long horizon */\n+    static constexpr unsigned int LONG_BLOCK_PERIODS = 42;\n+    static constexpr unsigned int LONG_SCALE = 24;\n+    /** Historical estimates that are older than this aren't valid */\n+    static const unsigned int OLDEST_ESTIMATE_HISTORY = 6 * 1008;\n+\n+    /** Decay of .962 is a half-life of 18 blocks or about 3 hours */\n+    static constexpr double SHORT_DECAY = .962;\n+    /** Decay of .998 is a half-life of 144 blocks or about 1 day */\n+    static constexpr double MED_DECAY = .9952;\n+    /** Decay of .9995 is a half-life of 1008 blocks or about 1 week */\n+    static constexpr double LONG_DECAY = .99931;\n+\n+    /** Require greater than 60% of X feerate transactions to be confirmed within Y/2 blocks*/\n+    static constexpr double HALF_SUCCESS_PCT = .6;\n+    /** Require greater than 85% of X feerate transactions to be confirmed within Y blocks*/\n+    static constexpr double SUCCESS_PCT = .85;\n+    /** Require greater than 95% of X feerate transactions to be confirmed within 2 * Y blocks*/\n+    static constexpr double DOUBLE_SUCCESS_PCT = .95;\n+\n+    /** Require an avg of 0.1 tx in the combined feerate bucket per block to have stat significance */\n+    static constexpr double SUFFICIENT_FEETXS = 0.1;\n+    /** Require an avg of 0.5 tx when using short decay since there are fewer blocks considered*/\n+    static constexpr double SUFFICIENT_TXS_SHORT = 0.5;\n+\n+    /** Minimum and Maximum values for tracking feerates\n+     * The MIN_BUCKET_FEERATE should just be set to the lowest reasonable feerate we\n+     * might ever want to track.  Historically this has been 1000 since it was\n+     * inheriting DEFAULT_MIN_RELAY_TX_FEE and changing it is disruptive as it\n+     * invalidates old estimates files. So leave it at 1000 unless it becomes\n+     * necessary to lower it, and then lower it substantially.\n+     */\n+    static constexpr double MIN_BUCKET_FEERATE = 1000;\n+    static constexpr double MAX_BUCKET_FEERATE = 1e7;\n+\n+    /** Spacing of FeeRate buckets\n+     * We have to lump transactions into buckets based on feerate, but we want to be able\n+     * to give accurate estimates over a large range of potential feerates\n+     * Therefore it makes sense to exponentially space the buckets\n+     */\n+    static constexpr double FEE_SPACING = 1.05;\n+\n public:\n     /** Create new BlockPolicyEstimator and initialize stats tracking classes with default values */\n-    CBlockPolicyEstimator(const CFeeRate& minRelayFee);\n+    CBlockPolicyEstimator();\n+    ~CBlockPolicyEstimator();\n \n     /** Process all the transactions that have been included in a block */\n     void processBlock(unsigned int nBlockHeight,\n                       std::vector<const CTxMemPoolEntry*>& entries);\n \n-    /** Process a transaction confirmed in a block*/\n-    bool processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry);\n-\n     /** Process a transaction accepted to the mempool*/\n     void processTransaction(const CTxMemPoolEntry& entry, bool validFeeEstimate);\n \n     /** Remove a transaction from the mempool tracking stats*/\n-    bool removeTx(uint256 hash);\n-\n-    /** Return a feerate estimate */\n-    CFeeRate estimateFee(int confTarget);\n+    bool removeTx(uint256 hash, bool inBlock);\n \n-    /** Estimate feerate needed to get be included in a block within\n-     *  confTarget blocks. If no answer can be given at confTarget, return an\n-     *  estimate at the lowest target where one can be given.\n-     */\n-    CFeeRate estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool);\n+    /** DEPRECATED. Return a feerate estimate */\n+    CFeeRate estimateFee(int confTarget) const;\n \n-    /** Return a priority estimate.\n-     *  DEPRECATED\n-     *  Returns -1\n+    /** Estimate feerate needed to get be included in a block within confTarget\n+     *  blocks. If no answer can be given at confTarget, return an estimate at\n+     *  the closest target where one can be given.  'conservative' estimates are\n+     *  valid over longer time horizons also.\n      */\n-    double estimatePriority(int confTarget);\n+    CFeeRate estimateSmartFee(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool, bool conservative = true) const;\n \n-    /** Estimate priority needed to get be included in a block within\n-     *  confTarget blocks.\n-     *  DEPRECATED\n-     *  Returns -1 unless mempool is currently limited then returns INF_PRIORITY\n-     *  answerFoundAtTarget is set to confTarget\n+    /** Return a specific fee estimate calculation with a given success\n+     * threshold and time horizon, and optionally return detailed data about\n+     * calculation\n      */\n-    double estimateSmartPriority(int confTarget, int *answerFoundAtTarget, const CTxMemPool& pool);\n+    CFeeRate estimateRawFee(int confTarget, double successThreshold, FeeEstimateHorizon horizon, EstimationResult *result = nullptr) const;\n \n     /** Write estimation data to a file */\n-    void Write(CAutoFile& fileout);\n+    bool Write(CAutoFile& fileout) const;\n \n     /** Read estimation data from a file */\n-    void Read(CAutoFile& filein, int nFileVersion);\n+    bool Read(CAutoFile& filein);\n+\n+    /** Empty mempool transactions on shutdown to record failure to confirm for txs still in mempool */\n+    void FlushUnconfirmed(CTxMemPool& pool);\n \n private:\n-    CFeeRate minTrackedFee;    //!< Passed to constructor to avoid dependency on main\n     unsigned int nBestSeenHeight;\n+    unsigned int firstRecordedHeight;\n+    unsigned int historicalFirst;\n+    unsigned int historicalBest;\n+\n     struct TxStatsInfo\n     {\n         unsigned int blockHeight;\n@@ -257,14 +207,43 @@ class CBlockPolicyEstimator\n     std::map<uint256, TxStatsInfo> mapMemPoolTxs;\n \n     /** Classes to track historical data on transaction confirmations */\n-    TxConfirmStats feeStats;\n+    TxConfirmStats* feeStats;\n+    TxConfirmStats* shortStats;\n+    TxConfirmStats* longStats;\n \n     unsigned int trackedTxs;\n     unsigned int untrackedTxs;\n+\n+    std::vector<double> buckets;              // The upper-bound of the range for the bucket (inclusive)\n+    std::map<double, unsigned int> bucketMap; // Map of bucket upper-bound to index into all vectors by bucket\n+\n+    mutable CCriticalSection cs_feeEstimator;\n+\n+    /** Process a transaction confirmed in a block*/\n+    bool processBlockTx(unsigned int nBlockHeight, const CTxMemPoolEntry* entry);\n+\n+    /** Helper for estimateSmartFee */\n+    double estimateCombinedFee(unsigned int confTarget, double successThreshold, bool checkShorterHorizon) const;\n+    /** Helper for estimateSmartFee */\n+    double estimateConservativeFee(unsigned int doubleTarget) const;\n+    /** Number of blocks of data recorded while fee estimates have been running */\n+    unsigned int BlockSpan() const;\n+    /** Number of blocks of recorded fee estimate data represented in saved data file */\n+    unsigned int HistoricalBlockSpan() const;\n+    /** Calculation of highest target that reasonable estimate can be provided for */\n+    unsigned int MaxUsableEstimate() const;\n };\n \n class FeeFilterRounder\n {\n+private:\n+    static constexpr double MAX_FILTER_FEERATE = 1e7;\n+    /** FEE_FILTER_SPACING is just used to provide some quantization of fee\n+     * filter results.  Historically it reused FEE_SPACING, but it is completely\n+     * unrelated, and was made a separate constant so the two concepts are not\n+     * tied together */\n+    static constexpr double FEE_FILTER_SPACING = 1.1;\n+\n public:\n     /** Create new FeeFilterRounder */\n     FeeFilterRounder(const CFeeRate& minIncrementalFee);\n@@ -276,4 +255,5 @@ class FeeFilterRounder\n     std::set<double> feeset;\n     FastRandomContext insecure_rand;\n };\n+\n #endif /*BITCOIN_POLICYESTIMATOR_H */"
      },
      {
        "sha": "f4fffd6578ac57c96ed6cad6057d298d4d438f80",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 39,
        "deletions": 1,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,12 +8,50 @@\n #include \"policy/policy.h\"\n \n #include \"validation.h\"\n+#include \"coins.h\"\n #include \"tinyformat.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n \n #include <boost/foreach.hpp>\n \n+CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n+{\n+    // \"Dust\" is defined in terms of dustRelayFee,\n+    // which has units satoshis-per-kilobyte.\n+    // If you'd pay more than 1/3 in fees\n+    // to spend something, then we consider it dust.\n+    // A typical spendable non-segwit txout is 34 bytes big, and will\n+    // need a CTxIn of at least 148 bytes to spend:\n+    // so dust is a spendable txout less than\n+    // 546*dustRelayFee/1000 (in satoshis).\n+    // A typical spendable segwit txout is 31 bytes big, and will\n+    // need a CTxIn of at least 67 bytes to spend:\n+    // so dust is a spendable txout less than\n+    // 294*dustRelayFee/1000 (in satoshis).\n+    if (txout.scriptPubKey.IsUnspendable())\n+        return 0;\n+\n+    size_t nSize = GetSerializeSize(txout, SER_DISK, 0);\n+    int witnessversion = 0;\n+    std::vector<unsigned char> witnessprogram;\n+\n+    if (txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n+        // sum the sizes of the parts of a transaction input\n+        // with 75% segwit discount applied to the script size.\n+        nSize += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n+    } else {\n+        nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n+    }\n+\n+    return 3 * dustRelayFeeIn.GetFee(nSize);\n+}\n+\n+bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFeeIn)\n+{\n+    return (txout.nValue < GetDustThreshold(txout, dustRelayFeeIn));\n+}\n+\n     /**\n      * Check transaction inputs to mitigate two\n      * potential denial-of-service attacks:\n@@ -105,7 +143,7 @@ bool IsStandardTx(const CTransaction& tx, std::string& reason, const bool witnes\n         else if ((whichType == TX_MULTISIG) && (!fIsBareMultisigStd)) {\n             reason = \"bare-multisig\";\n             return false;\n-        } else if (txout.IsDust(dustRelayFee)) {\n+        } else if (IsDust(txout, ::dustRelayFee)) {\n             reason = \"dust\";\n             return false;\n         }"
      },
      {
        "sha": "2c2ea9d5b85a6011523ca2d9275806834cc93b37",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,17 +7,17 @@\n #define BITCOIN_POLICY_POLICY_H\n \n #include \"consensus/consensus.h\"\n+#include \"feerate.h\"\n #include \"script/interpreter.h\"\n #include \"script/standard.h\"\n \n #include <string>\n \n class CCoinsViewCache;\n+class CTxOut;\n \n /** Default for -blockmaxsize, which controls the maximum size of block the mining code will create **/\n static const unsigned int DEFAULT_BLOCK_MAX_SIZE = 750000;\n-/** Default for -blockprioritysize, maximum space for zero/low-fee transactions **/\n-static const unsigned int DEFAULT_BLOCK_PRIORITY_SIZE = 0;\n /** Default for -blockmaxweight, which controls the range of block weights the mining code will create **/\n static const unsigned int DEFAULT_BLOCK_MAX_WEIGHT = 3000000;\n /** Default for -blockmintxfee, which sets the minimum feerate for a transaction in blocks created by mining code **/\n@@ -74,6 +74,10 @@ static const unsigned int STANDARD_NOT_MANDATORY_VERIFY_FLAGS = STANDARD_SCRIPT_\n static const unsigned int STANDARD_LOCKTIME_VERIFY_FLAGS = LOCKTIME_VERIFY_SEQUENCE |\n                                                            LOCKTIME_MEDIAN_TIME_PAST;\n \n+CAmount GetDustThreshold(const CTxOut& txout, const CFeeRate& dustRelayFee);\n+\n+bool IsDust(const CTxOut& txout, const CFeeRate& dustRelayFee);\n+\n bool IsStandard(const CScript& scriptPubKey, txnouttype& whichType, const bool witnessEnabled = false);\n     /**\n      * Check for standard transaction types"
      },
      {
        "sha": "e06d9662e6b24d6d841a50c3071b43ebab2afb6e",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -12,12 +12,9 @@\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock, const Consensus::Params& params)\n {\n+    assert(pindexLast != NULL);\n     unsigned int nProofOfWorkLimit = UintToArith256(params.powLimit).GetCompact();\n \n-    // Genesis block\n-    if (pindexLast == NULL)\n-        return nProofOfWorkLimit;\n-\n     // Only change once per difficulty adjustment interval\n     if ((pindexLast->nHeight+1) % params.DifficultyAdjustmentInterval() != 0)\n     {"
      },
      {
        "sha": "177d81383e9e74755fdb9f540caeb98e64e57fd0",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 12,
        "deletions": 5,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,6 +11,7 @@\n #include <string.h>\n \n #include <iterator>\n+#include <type_traits>\n \n #pragma pack(push, 1)\n /** Implements a drop-in replacement for std::vector<T> which stores up to N\n@@ -388,10 +389,14 @@ class prevector {\n     iterator erase(iterator first, iterator last) {\n         iterator p = first;\n         char* endp = (char*)&(*end());\n-        while (p != last) {\n-            (*p).~T();\n-            _size--;\n-            ++p;\n+        if (!std::is_trivially_destructible<T>::value) {\n+            while (p != last) {\n+                (*p).~T();\n+                _size--;\n+                ++p;\n+            }\n+        } else {\n+            _size -= last - p;\n         }\n         memmove(&(*first), &(*last), endp - ((char*)(&(*last))));\n         return first;\n@@ -432,7 +437,9 @@ class prevector {\n     }\n \n     ~prevector() {\n-        clear();\n+        if (!std::is_trivially_destructible<T>::value) {\n+            clear();\n+        }\n         if (!is_direct()) {\n             free(_union.indirect);\n             _union.indirect = NULL;"
      },
      {
        "sha": "a0d7793f9780d4209805adc546eb060714dd695f",
        "filename": "src/primitives/transaction.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/primitives/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/primitives/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -92,32 +92,6 @@ CAmount CTransaction::GetValueOut() const\n     return nValueOut;\n }\n \n-double CTransaction::ComputePriority(double dPriorityInputs, unsigned int nTxSize) const\n-{\n-    nTxSize = CalculateModifiedSize(nTxSize);\n-    if (nTxSize == 0) return 0.0;\n-\n-    return dPriorityInputs / nTxSize;\n-}\n-\n-unsigned int CTransaction::CalculateModifiedSize(unsigned int nTxSize) const\n-{\n-    // In order to avoid disincentivizing cleaning up the UTXO set we don't count\n-    // the constant overhead for each txin and up to 110 bytes of scriptSig (which\n-    // is enough to cover a compressed pubkey p2sh redemption) for priority.\n-    // Providing any more cleanup incentive than making additional inputs free would\n-    // risk encouraging people to create junk outputs to redeem later.\n-    if (nTxSize == 0)\n-        nTxSize = (GetTransactionWeight(*this) + WITNESS_SCALE_FACTOR - 1) / WITNESS_SCALE_FACTOR;\n-    for (std::vector<CTxIn>::const_iterator it(vin.begin()); it != vin.end(); ++it)\n-    {\n-        unsigned int offset = 41U + std::min(110U, (unsigned int)it->scriptSig.size());\n-        if (nTxSize > offset)\n-            nTxSize -= offset;\n-    }\n-    return nTxSize;\n-}\n-\n unsigned int CTransaction::GetTotalSize() const\n {\n     return ::GetSerializeSize(*this, SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "00ac0b92b54da5e9ff41b3e37945f4f00a0a6c2f",
        "filename": "src/primitives/transaction.h",
        "status": "modified",
        "additions": 2,
        "deletions": 45,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/primitives/transaction.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/primitives/transaction.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/transaction.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -22,8 +22,8 @@ class COutPoint\n     uint256 hash;\n     uint32_t n;\n \n-    COutPoint() { SetNull(); }\n-    COutPoint(uint256 hashIn, uint32_t nIn) { hash = hashIn; n = nIn; }\n+    COutPoint(): n((uint32_t) -1) { }\n+    COutPoint(const uint256& hashIn, uint32_t nIn): hash(hashIn), n(nIn) { }\n \n     ADD_SERIALIZE_METHODS;\n \n@@ -161,43 +161,6 @@ class CTxOut\n         return (nValue == -1);\n     }\n \n-    CAmount GetDustThreshold(const CFeeRate &minRelayTxFee) const\n-    {\n-        // \"Dust\" is defined in terms of CTransaction::minRelayTxFee,\n-        // which has units satoshis-per-kilobyte.\n-        // If you'd pay more than 1/3 in fees\n-        // to spend something, then we consider it dust.\n-        // A typical spendable non-segwit txout is 34 bytes big, and will\n-        // need a CTxIn of at least 148 bytes to spend:\n-        // so dust is a spendable txout less than\n-        // 546*minRelayTxFee/1000 (in satoshis).\n-        // A typical spendable segwit txout is 31 bytes big, and will\n-        // need a CTxIn of at least 67 bytes to spend:\n-        // so dust is a spendable txout less than\n-        // 294*minRelayTxFee/1000 (in satoshis).\n-        if (scriptPubKey.IsUnspendable())\n-            return 0;\n-\n-        size_t nSize = GetSerializeSize(*this, SER_DISK, 0);\n-        int witnessversion = 0;\n-        std::vector<unsigned char> witnessprogram;\n-\n-        if (scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram)) {\n-            // sum the sizes of the parts of a transaction input\n-            // with 75% segwit discount applied to the script size.\n-            nSize += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n-        } else {\n-            nSize += (32 + 4 + 1 + 107 + 4); // the 148 mentioned above\n-        }\n-\n-        return 3 * minRelayTxFee.GetFee(nSize);\n-    }\n-\n-    bool IsDust(const CFeeRate &minRelayTxFee) const\n-    {\n-        return (nValue < GetDustThreshold(minRelayTxFee));\n-    }\n-\n     friend bool operator==(const CTxOut& a, const CTxOut& b)\n     {\n         return (a.nValue       == b.nValue &&\n@@ -361,12 +324,6 @@ class CTransaction\n     // GetValueIn() is a method on CCoinsViewCache, because\n     // inputs must be known to compute value in.\n \n-    // Compute priority, given priority of inputs and (optionally) tx size\n-    double ComputePriority(double dPriorityInputs, unsigned int nTxSize=0) const;\n-\n-    // Compute modified tx size for priority calculation (optionally given tx size)\n-    unsigned int CalculateModifiedSize(unsigned int nTxSize=0) const;\n-\n     /**\n      * Get the total transaction size in bytes, including witness data.\n      * \"Total Size\" defined in BIP141 and BIP144."
      },
      {
        "sha": "f8a99506c131ea35169a73cf7240d4b818599282",
        "filename": "src/qt/bantablemodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bantablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bantablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bantablemodel.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -181,7 +181,5 @@ void BanTableModel::sort(int column, Qt::SortOrder order)\n \n bool BanTableModel::shouldShow()\n {\n-    if (priv->size() > 0)\n-        return true;\n-    return false;\n+    return priv->size() > 0;\n }"
      },
      {
        "sha": "23ec3ab434fa5b4ca221b809680b0c6cd92f86f2",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 23,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -10,6 +10,7 @@\n \n #include \"chainparams.h\"\n #include \"clientmodel.h\"\n+#include \"fs.h\"\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n #include \"intro.h\"\n@@ -38,7 +39,6 @@\n \n #include <stdint.h>\n \n-#include <boost/filesystem/operations.hpp>\n #include <boost/thread.hpp>\n \n #include <QApplication>\n@@ -152,15 +152,21 @@ static void initTranslations(QTranslator &qtTranslatorBase, QTranslator &qtTrans\n #if QT_VERSION < 0x050000\n void DebugMessageHandler(QtMsgType type, const char *msg)\n {\n-    const char *category = (type == QtDebugMsg) ? \"qt\" : NULL;\n-    LogPrint(category, \"GUI: %s\\n\", msg);\n+    if (type == QtDebugMsg) {\n+        LogPrint(BCLog::QT, \"GUI: %s\\n\", msg);\n+    } else {\n+        LogPrintf(\"GUI: %s\\n\", msg);\n+    }\n }\n #else\n void DebugMessageHandler(QtMsgType type, const QMessageLogContext& context, const QString &msg)\n {\n     Q_UNUSED(context);\n-    const char *category = (type == QtDebugMsg) ? \"qt\" : NULL;\n-    LogPrint(category, \"GUI: %s\\n\", msg.toStdString());\n+    if (type == QtDebugMsg) {\n+        LogPrint(BCLog::QT, \"GUI: %s\\n\", msg.toStdString());\n+    } else {\n+        LogPrintf(\"GUI: %s\\n\", msg.toStdString());\n+    }\n }\n #endif\n \n@@ -178,8 +184,8 @@ public Q_SLOTS:\n     void shutdown();\n \n Q_SIGNALS:\n-    void initializeResult(int retval);\n-    void shutdownResult(int retval);\n+    void initializeResult(bool success);\n+    void shutdownResult();\n     void runawayException(const QString &message);\n \n private:\n@@ -223,8 +229,8 @@ class BitcoinApplication: public QApplication\n     WId getMainWinId() const;\n \n public Q_SLOTS:\n-    void initializeResult(int retval);\n-    void shutdownResult(int retval);\n+    void initializeResult(bool success);\n+    void shutdownResult();\n     /// Handle runaway exceptions. Shows a message box with the problem and quits the program.\n     void handleRunawayException(const QString &message);\n \n@@ -268,7 +274,7 @@ void BitcoinCore::initialize()\n {\n     try\n     {\n-        qDebug() << __func__ << \": Running AppInit2 in thread\";\n+        qDebug() << __func__ << \": Running initialization in thread\";\n         if (!AppInitBasicSetup())\n         {\n             Q_EMIT initializeResult(false);\n@@ -284,7 +290,7 @@ void BitcoinCore::initialize()\n             Q_EMIT initializeResult(false);\n             return;\n         }\n-        int rv = AppInitMain(threadGroup, scheduler);\n+        bool rv = AppInitMain(threadGroup, scheduler);\n         Q_EMIT initializeResult(rv);\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n@@ -302,7 +308,7 @@ void BitcoinCore::shutdown()\n         threadGroup.join_all();\n         Shutdown();\n         qDebug() << __func__ << \": Shutdown finished\";\n-        Q_EMIT shutdownResult(1);\n+        Q_EMIT shutdownResult();\n     } catch (const std::exception& e) {\n         handleRunawayException(&e);\n     } catch (...) {\n@@ -398,8 +404,8 @@ void BitcoinApplication::startThread()\n     executor->moveToThread(coreThread);\n \n     /*  communication to and from thread */\n-    connect(executor, SIGNAL(initializeResult(int)), this, SLOT(initializeResult(int)));\n-    connect(executor, SIGNAL(shutdownResult(int)), this, SLOT(shutdownResult(int)));\n+    connect(executor, SIGNAL(initializeResult(bool)), this, SLOT(initializeResult(bool)));\n+    connect(executor, SIGNAL(shutdownResult()), this, SLOT(shutdownResult()));\n     connect(executor, SIGNAL(runawayException(QString)), this, SLOT(handleRunawayException(QString)));\n     connect(this, SIGNAL(requestedInitialize()), executor, SLOT(initialize()));\n     connect(this, SIGNAL(requestedShutdown()), executor, SLOT(shutdown()));\n@@ -450,14 +456,14 @@ void BitcoinApplication::requestShutdown()\n     Q_EMIT requestedShutdown();\n }\n \n-void BitcoinApplication::initializeResult(int retval)\n+void BitcoinApplication::initializeResult(bool success)\n {\n-    qDebug() << __func__ << \": Initialization result: \" << retval;\n-    // Set exit result: 0 if successful, 1 if failure\n-    returnValue = retval ? 0 : 1;\n-    if(retval)\n+    qDebug() << __func__ << \": Initialization result: \" << success;\n+    // Set exit result.\n+    returnValue = success ? EXIT_SUCCESS : EXIT_FAILURE;\n+    if(success)\n     {\n-        // Log this only after AppInit2 finishes, as then logging setup is guaranteed complete\n+        // Log this only after AppInitMain finishes, as then logging setup is guaranteed complete\n         qWarning() << \"Platform customization:\" << platformStyle->getName();\n #ifdef ENABLE_WALLET\n         PaymentServer::LoadRootCAs();\n@@ -507,9 +513,8 @@ void BitcoinApplication::initializeResult(int retval)\n     }\n }\n \n-void BitcoinApplication::shutdownResult(int retval)\n+void BitcoinApplication::shutdownResult()\n {\n-    qDebug() << __func__ << \": Shutdown result: \" << retval;\n     quit(); // Exit main loop after shutdown finished\n }\n \n@@ -603,7 +608,7 @@ int main(int argc, char *argv[])\n \n     /// 6. Determine availability of data directory and parse bitcoin.conf\n     /// - Do not call GetDataDir(true) before this step finishes\n-    if (!boost::filesystem::is_directory(GetDataDir(false)))\n+    if (!fs::is_directory(GetDataDir(false)))\n     {\n         QMessageBox::critical(0, QObject::tr(PACKAGE_NAME),\n                               QObject::tr(\"Error: Specified data directory \\\"%1\\\" does not exist.\").arg(QString::fromStdString(GetArg(\"-datadir\", \"\"))));"
      },
      {
        "sha": "5c26baef9e8ae89758bb109dfb4637d4dd38a75c",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -478,6 +478,7 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n         connect(_clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n         connect(_clientModel, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n \n+        modalOverlay->setKnownBestHeight(_clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(_clientModel->getHeaderTipTime()));\n         setNumBlocks(_clientModel->getNumBlocks(), _clientModel->getLastBlockDate(), _clientModel->getVerificationProgress(NULL), false);\n         connect(_clientModel, SIGNAL(numBlocksChanged(int,QDateTime,double,bool)), this, SLOT(setNumBlocks(int,QDateTime,double,bool)));\n \n@@ -505,8 +506,6 @@ void BitcoinGUI::setClientModel(ClientModel *_clientModel)\n             // initialize the disable state of the tray icon with the current value in the model.\n             setTrayIconVisible(optionsModel->getHideTrayIcon());\n         }\n-\n-        modalOverlay->setKnownBestHeight(clientModel->getHeaderTipHeight(), QDateTime::fromTime_t(clientModel->getHeaderTipTime()));\n     } else {\n         // Disable possibility to show main window via action\n         toggleHideAction->setEnabled(false);"
      },
      {
        "sha": "a8b593a6525582184b34f2845b575bb99a59e08a",
        "filename": "src/qt/callback.h",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/callback.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/callback.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/callback.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,30 @@\n+#ifndef BITCOIN_QT_CALLBACK_H\n+#define BITCOIN_QT_CALLBACK_H\n+\n+#include <QObject>\n+\n+class Callback : public QObject\n+{\n+    Q_OBJECT\n+public Q_SLOTS:\n+    virtual void call() = 0;\n+};\n+\n+template <typename F>\n+class FunctionCallback : public Callback\n+{\n+    F f;\n+\n+public:\n+    FunctionCallback(F f_) : f(std::move(f_)) {}\n+    ~FunctionCallback() override {}\n+    void call() override { f(this); }\n+};\n+\n+template <typename F>\n+FunctionCallback<F>* makeCallback(F f)\n+{\n+    return new FunctionCallback<F>(std::move(f));\n+}\n+\n+#endif // BITCOIN_QT_CALLBACK_H"
      },
      {
        "sha": "de00eacdb98f81917b41889ad8f2c791c8058460",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 8,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -9,6 +9,7 @@\n #include \"guiutil.h\"\n #include \"peertablemodel.h\"\n \n+#include \"chain.h\"\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"clientversion.h\"\n@@ -36,6 +37,8 @@ ClientModel::ClientModel(OptionsModel *_optionsModel, QObject *parent) :\n     banTableModel(0),\n     pollTimer(0)\n {\n+    cachedBestHeaderHeight = -1;\n+    cachedBestHeaderTime = -1;\n     peerTableModel = new PeerTableModel(this);\n     banTableModel = new BanTableModel(this);\n     pollTimer = new QTimer(this);\n@@ -74,18 +77,28 @@ int ClientModel::getNumBlocks() const\n \n int ClientModel::getHeaderTipHeight() const\n {\n-    LOCK(cs_main);\n-    if (!pindexBestHeader)\n-        return 0;\n-    return pindexBestHeader->nHeight;\n+    if (cachedBestHeaderHeight == -1) {\n+        // make sure we initially populate the cache via a cs_main lock\n+        // otherwise we need to wait for a tip update\n+        LOCK(cs_main);\n+        if (pindexBestHeader) {\n+            cachedBestHeaderHeight = pindexBestHeader->nHeight;\n+            cachedBestHeaderTime = pindexBestHeader->GetBlockTime();\n+        }\n+    }\n+    return cachedBestHeaderHeight;\n }\n \n int64_t ClientModel::getHeaderTipTime() const\n {\n-    LOCK(cs_main);\n-    if (!pindexBestHeader)\n-        return 0;\n-    return pindexBestHeader->GetBlockTime();\n+    if (cachedBestHeaderTime == -1) {\n+        LOCK(cs_main);\n+        if (pindexBestHeader) {\n+            cachedBestHeaderHeight = pindexBestHeader->nHeight;\n+            cachedBestHeaderTime = pindexBestHeader->GetBlockTime();\n+        }\n+    }\n+    return cachedBestHeaderTime;\n }\n \n quint64 ClientModel::getTotalBytesRecv() const\n@@ -283,6 +296,11 @@ static void BlockTipChanged(ClientModel *clientmodel, bool initialSync, const CB\n \n     int64_t& nLastUpdateNotification = fHeader ? nLastHeaderTipUpdateNotification : nLastBlockTipUpdateNotification;\n \n+    if (fHeader) {\n+        // cache best headers time and height to reduce future cs_main locks\n+        clientmodel->cachedBestHeaderHeight = pIndex->nHeight;\n+        clientmodel->cachedBestHeaderTime = pIndex->GetBlockTime();\n+    }\n     // if we are in-sync, update the UI regardless of last update time\n     if (!initialSync || now - nLastUpdateNotification > MODEL_UPDATE_DELAY) {\n         //pass a async signal to the UI thread"
      },
      {
        "sha": "4c92e2144e32154b7683a4f3e9a29eeedd425a39",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,6 +8,8 @@\n #include <QObject>\n #include <QDateTime>\n \n+#include <atomic>\n+\n class AddressTableModel;\n class BanTableModel;\n class OptionsModel;\n@@ -81,6 +83,10 @@ class ClientModel : public QObject\n     QString formatClientStartupTime() const;\n     QString dataDir() const;\n \n+    // caches for the best header\n+    mutable std::atomic<int> cachedBestHeaderHeight;\n+    mutable std::atomic<int64_t> cachedBestHeaderTime;\n+\n private:\n     OptionsModel *optionsModel;\n     PeerTableModel *peerTableModel;"
      },
      {
        "sha": "135cf6f701a8dfc0b69b6e0860c51259efc12fcc",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 29,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -15,6 +15,7 @@\n \n #include \"wallet/coincontrol.h\"\n #include \"init.h\"\n+#include \"policy/fees.h\"\n #include \"policy/policy.h\"\n #include \"validation.h\" // For mempool\n #include \"wallet/wallet.h\"\n@@ -433,8 +434,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         {\n             CTxOut txout(amount, (CScript)std::vector<unsigned char>(24, 0));\n             txDummy.vout.push_back(txout);\n-            if (txout.IsDust(dustRelayFee))\n-               fDust = true;\n+            fDust |= IsDust(txout, ::dustRelayFee);\n         }\n     }\n \n@@ -444,11 +444,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     CAmount nChange             = 0;\n     unsigned int nBytes         = 0;\n     unsigned int nBytesInputs   = 0;\n-    double dPriority            = 0;\n-    double dPriorityInputs      = 0;\n     unsigned int nQuantity      = 0;\n-    int nQuantityUncompressed   = 0;\n-    bool fAllowFree             = false;\n     bool fWitness               = false;\n \n     std::vector<COutPoint> vCoinControl;\n@@ -473,9 +469,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         // Amount\n         nAmount += out.tx->tx->vout[out.i].nValue;\n \n-        // Priority\n-        dPriorityInputs += (double)out.tx->tx->vout[out.i].nValue * (out.nDepth+1);\n-\n         // Bytes\n         CTxDestination address;\n         int witnessversion = 0;\n@@ -492,8 +485,6 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n             if (keyid && model->getPubKey(*keyid, pubkey))\n             {\n                 nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n-                if (!pubkey.IsCompressed())\n-                    nQuantityUncompressed++;\n             }\n             else\n                 nBytesInputs += 148; // in all error cases, simply assume 148 here\n@@ -521,20 +512,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 nBytes -= 34;\n \n         // Fee\n-        nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, mempool);\n-        if (nPayFee > 0 && coinControl->nMinimumTotalFee > nPayFee)\n-            nPayFee = coinControl->nMinimumTotalFee;\n-\n-\n-        // Allow free? (require at least hard-coded threshold and default to that if no estimate)\n-        double mempoolEstimatePriority = mempool.estimateSmartPriority(nTxConfirmTarget);\n-        dPriority = dPriorityInputs / (nBytes - nBytesInputs + (nQuantityUncompressed * 29)); // 29 = 180 - 151 (uncompressed public keys are over the limit. max 151 bytes of the input are ignored for priority)\n-        double dPriorityNeeded = std::max(mempoolEstimatePriority, AllowFreeThreshold());\n-        fAllowFree = (dPriority >= dPriorityNeeded);\n-\n-        if (fSendFreeTransactions)\n-            if (fAllowFree && nBytes <= MAX_FREE_TRANSACTION_CREATE_SIZE)\n-                nPayFee = 0;\n+        nPayFee = CWallet::GetMinimumFee(nBytes, nTxConfirmTarget, ::mempool, ::feeEstimator);\n \n         if (nPayAmount > 0)\n         {\n@@ -546,10 +524,10 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n             if (nChange > 0 && nChange < MIN_CHANGE)\n             {\n                 CTxOut txout(nChange, (CScript)std::vector<unsigned char>(24, 0));\n-                if (txout.IsDust(dustRelayFee))\n+                if (IsDust(txout, ::dustRelayFee))\n                 {\n                     if (CoinControlDialog::fSubtractFeeFromAmount) // dust-change will be raised until no dust\n-                        nChange = txout.GetDustThreshold(dustRelayFee);\n+                        nChange = GetDustThreshold(txout, ::dustRelayFee);\n                     else\n                     {\n                         nPayFee += nChange;\n@@ -593,7 +571,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l5->setText(((nBytes > 0) ? ASYMP_UTF8 : \"\") + QString::number(nBytes));        // Bytes\n     l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n     l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n-    if (nPayFee > 0 && (coinControl->nMinimumTotalFee < nPayFee))\n+    if (nPayFee > 0)\n     {\n         l3->setText(ASYMP_UTF8 + l3->text());\n         l4->setText(ASYMP_UTF8 + l4->text());\n@@ -612,7 +590,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     if (payTxFee.GetFeePerK() > 0)\n         dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), payTxFee.GetFeePerK()) / 1000;\n     else {\n-        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), mempool.estimateSmartFee(nTxConfirmTarget).GetFeePerK()) / 1000;\n+        dFeeVary = (double)std::max(CWallet::GetRequiredFee(1000), ::feeEstimator.estimateSmartFee(nTxConfirmTarget, NULL, ::mempool).GetFeePerK()) / 1000;\n     }\n     QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n "
      },
      {
        "sha": "093e644bdcec5f610d426e0d26bd2edc47e55eeb",
        "filename": "src/qt/forms/debugwindow.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/debugwindow.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/debugwindow.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/debugwindow.ui?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -645,7 +645,7 @@\n            <item>\n             <widget class=\"QPushButton\" name=\"btnClearTrafficGraph\">\n              <property name=\"text\">\n-              <string>&amp;Clear</string>\n+              <string>&amp;Reset</string>\n              </property>\n              <property name=\"autoDefault\">\n               <bool>false</bool>"
      },
      {
        "sha": "cfdd8482e39586db428cea0086733d121e9f521a",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 31,
        "deletions": 4,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,7 +7,7 @@\n     <x>0</x>\n     <y>0</y>\n     <width>674</width>\n-    <height>363</height>\n+    <height>415</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -55,9 +55,6 @@\n    </item>\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n-     <property name=\"text\">\n-      <string>%1 will download and store a copy of the Bitcoin block chain. At least %2GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n-     </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>\n      </property>\n@@ -203,6 +200,36 @@\n      </item>\n     </layout>\n    </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"lblExplanation1\">\n+     <property name=\"text\">\n+      <string>When you click OK, %1 will begin to download and process the full %4 block chain (%2GB) starting with the earliest transactions in %3 when %4 initially launched.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"lblExplanation2\">\n+     <property name=\"text\">\n+      <string>This initial synchronisation is very demanding, and may expose hardware problems with your computer that had previously gone unnoticed. Each time you run %1, it will continue downloading where it left off.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n+   <item>\n+    <widget class=\"QLabel\" name=\"lblExplanation3\">\n+     <property name=\"text\">\n+      <string>If you have chosen to limit block chain storage (pruning), the historical data must still be downloaded and processed, but will be deleted afterward to keep your disk usage low.</string>\n+     </property>\n+     <property name=\"wordWrap\">\n+      <bool>true</bool>\n+     </property>\n+    </widget>\n+   </item>\n    <item>\n     <spacer name=\"verticalSpacer\">\n      <property name=\"orientation\">"
      },
      {
        "sha": "0f1b3f4a732578e7ef7a6c6b22a5d3199603327b",
        "filename": "src/qt/forms/optionsdialog.ui",
        "status": "modified",
        "additions": 70,
        "deletions": 32,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/optionsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/optionsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/optionsdialog.ui?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -692,17 +692,34 @@\n    <item>\n     <layout class=\"QHBoxLayout\" name=\"horizontalLayout_Buttons\">\n      <item>\n-      <widget class=\"QPushButton\" name=\"resetButton\">\n-       <property name=\"toolTip\">\n-        <string>Reset all client options to default.</string>\n-       </property>\n-       <property name=\"text\">\n-        <string>&amp;Reset Options</string>\n-       </property>\n-       <property name=\"autoDefault\">\n-        <bool>false</bool>\n-       </property>\n-      </widget>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_Buttons\">\n+       <item>\n+        <widget class=\"QPushButton\" name=\"openBitcoinConfButton\">\n+         <property name=\"toolTip\">\n+          <string>Open the %1 configuration file from the working directory.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>Open Configuration File</string>\n+         </property>\n+         <property name=\"autoDefault\">\n+          <bool>false</bool>\n+         </property>\n+        </widget>\n+       </item>\n+       <item>\n+        <widget class=\"QPushButton\" name=\"resetButton\">\n+         <property name=\"toolTip\">\n+          <string>Reset all client options to default.</string>\n+         </property>\n+         <property name=\"text\">\n+          <string>&amp;Reset Options</string>\n+         </property>\n+         <property name=\"autoDefault\">\n+          <bool>false</bool>\n+         </property>\n+        </widget>\n+       </item>\n+      </layout>\n      </item>\n      <item>\n       <spacer name=\"horizontalSpacer_1\">\n@@ -756,27 +773,48 @@\n       </spacer>\n      </item>\n      <item>\n-      <widget class=\"QPushButton\" name=\"okButton\">\n-       <property name=\"text\">\n-        <string>&amp;OK</string>\n-       </property>\n-       <property name=\"autoDefault\">\n-        <bool>false</bool>\n-       </property>\n-       <property name=\"default\">\n-        <bool>true</bool>\n-       </property>\n-      </widget>\n-     </item>\n-     <item>\n-      <widget class=\"QPushButton\" name=\"cancelButton\">\n-       <property name=\"text\">\n-        <string>&amp;Cancel</string>\n-       </property>\n-       <property name=\"autoDefault\">\n-        <bool>false</bool>\n-       </property>\n-      </widget>\n+      <layout class=\"QVBoxLayout\" name=\"verticalLayout_4\">\n+       <item>\n+        <spacer name=\"verticalSpacer\">\n+         <property name=\"orientation\">\n+          <enum>Qt::Vertical</enum>\n+         </property>\n+         <property name=\"sizeHint\" stdset=\"0\">\n+          <size>\n+           <width>20</width>\n+           <height>40</height>\n+          </size>\n+         </property>\n+        </spacer>\n+       </item>\n+       <item>\n+        <layout class=\"QHBoxLayout\" name=\"horizontalLayout\">\n+         <item>\n+          <widget class=\"QPushButton\" name=\"okButton\">\n+           <property name=\"text\">\n+            <string>&amp;OK</string>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+           <property name=\"default\">\n+            <bool>true</bool>\n+           </property>\n+          </widget>\n+         </item>\n+         <item>\n+          <widget class=\"QPushButton\" name=\"cancelButton\">\n+           <property name=\"text\">\n+            <string>&amp;Cancel</string>\n+           </property>\n+           <property name=\"autoDefault\">\n+            <bool>false</bool>\n+           </property>\n+          </widget>\n+         </item>\n+        </layout>\n+       </item>\n+      </layout>\n      </item>\n     </layout>\n    </item>"
      },
      {
        "sha": "89f9c25d143697f8a61317d0307d38eafd745acb",
        "filename": "src/qt/forms/sendcoinsdialog.ui",
        "status": "modified",
        "additions": 35,
        "deletions": 16,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/sendcoinsdialog.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/forms/sendcoinsdialog.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/sendcoinsdialog.ui?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -759,11 +759,33 @@\n             </item>\n            </layout>\n           </item>\n+          <item>\n+           <widget class=\"QLabel\" name=\"fallbackFeeWarningLabel\">\n+            <property name=\"toolTip\">\n+             <string>Using the fallbackfee can result in sending a transaction that will take several hours or days (or never) to confirm. Consider choosing your fee manually or wait until your have validated the complete chain.</string>\n+            </property>\n+            <property name=\"font\">\n+            <font>\n+                <weight>75</weight>\n+                <bold>true</bold>\n+            </font>\n+            </property>\n+            <property name=\"text\">\n+             <string>Warning: Fee estimation is currently not possible.</string>\n+            </property>\n+            <property name=\"wordWrap\">\n+             <bool>false</bool>\n+            </property>\n+           </widget>\n+          </item>\n           <item>\n            <spacer name=\"horizontalSpacer_4\">\n             <property name=\"orientation\">\n              <enum>Qt::Horizontal</enum>\n             </property>\n+            <property name=\"sizeType\">\n+             <enum>QSizePolicy::MinimumExpanding</enum>\n+            </property>\n             <property name=\"sizeHint\" stdset=\"0\">\n              <size>\n               <width>40</width>\n@@ -839,19 +861,6 @@\n                    </attribute>\n                   </widget>\n                  </item>\n-                 <item>\n-                  <widget class=\"QRadioButton\" name=\"radioCustomAtLeast\">\n-                   <property name=\"toolTip\">\n-                    <string>If the custom fee is set to 1000 satoshis and the transaction is only 250 bytes, then &quot;per kilobyte&quot; only pays 250 satoshis in fee, while &quot;total at least&quot; pays 1000 satoshis. For transactions bigger than a kilobyte both pay by kilobyte.</string>\n-                   </property>\n-                   <property name=\"text\">\n-                    <string>total at least</string>\n-                   </property>\n-                   <attribute name=\"buttonGroup\">\n-                    <string notr=\"true\">groupCustomFee</string>\n-                   </attribute>\n-                  </widget>\n-                 </item>\n                  <item>\n                   <widget class=\"BitcoinAmountField\" name=\"customFee\"/>\n                  </item>\n@@ -1158,6 +1167,16 @@\n              </item>\n             </layout>\n            </item>\n+           <item>\n+            <widget class=\"QCheckBox\" name=\"optInRBF\">\n+             <property name=\"text\">\n+              <string>Request Replace-By-Fee</string>\n+             </property>\n+             <property name=\"toolTip\">\n+              <string>Indicates that the sender may wish to replace this transaction with a new one paying higher fees (prior to being confirmed).</string>\n+             </property>\n+            </widget>\n+           </item>\n           </layout>\n          </widget>\n         </item>\n@@ -1168,8 +1187,8 @@\n           </property>\n           <property name=\"sizeHint\" stdset=\"0\">\n            <size>\n-            <width>800</width>\n-            <height>1</height>\n+            <width>40</width>\n+            <height>5</height>\n            </size>\n           </property>\n          </spacer>\n@@ -1203,7 +1222,7 @@\n         <bool>false</bool>\n        </property>\n        <property name=\"default\">\n-        <bool>true</bool>\n+        <bool>false</bool>\n        </property>\n       </widget>\n      </item>"
      },
      {
        "sha": "bffa81137b230c5e2fb5292b53d41b776e1494c1",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 45,
        "changes": 88,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -9,6 +9,7 @@\n #include \"qvalidatedlineedit.h\"\n #include \"walletmodel.h\"\n \n+#include \"fs.h\"\n #include \"primitives/transaction.h\"\n #include \"init.h\"\n #include \"policy/policy.h\"\n@@ -35,11 +36,6 @@\n #include \"shlwapi.h\"\n #endif\n \n-#include <boost/filesystem.hpp>\n-#include <boost/filesystem/fstream.hpp>\n-#if BOOST_FILESYSTEM_VERSION >= 3\n-#include <boost/filesystem/detail/utf8_codecvt_facet.hpp>\n-#endif\n #include <boost/scoped_array.hpp>\n \n #include <QAbstractItemView>\n@@ -67,9 +63,7 @@\n #include <QFontDatabase>\n #endif\n \n-#if BOOST_FILESYSTEM_VERSION >= 3\n-static boost::filesystem::detail::utf8_codecvt_facet utf8;\n-#endif\n+static fs::detail::utf8_codecvt_facet utf8;\n \n #if defined(Q_OS_MAC)\n extern double NSAppKitVersionNumber;\n@@ -257,7 +251,7 @@ bool isDust(const QString& address, const CAmount& amount)\n     CTxDestination dest = CBitcoinAddress(address.toStdString()).Get();\n     CScript script = GetScriptForDestination(dest);\n     CTxOut txOut(amount, script);\n-    return txOut.IsDust(dustRelayFee);\n+    return IsDust(txOut, ::dustRelayFee);\n }\n \n QString HtmlEscape(const QString& str, bool fMultiLine)\n@@ -414,13 +408,29 @@ bool isObscured(QWidget *w)\n \n void openDebugLogfile()\n {\n-    boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+    fs::path pathDebug = GetDataDir() / \"debug.log\";\n \n     /* Open debug.log with the associated application */\n-    if (boost::filesystem::exists(pathDebug))\n+    if (fs::exists(pathDebug))\n         QDesktopServices::openUrl(QUrl::fromLocalFile(boostPathToQString(pathDebug)));\n }\n \n+bool openBitcoinConf()\n+{\n+    boost::filesystem::path pathConfig = GetConfigFile(BITCOIN_CONF_FILENAME);\n+\n+    /* Create the file */\n+    boost::filesystem::ofstream configFile(pathConfig, std::ios_base::app);\n+    \n+    if (!configFile.good())\n+        return false;\n+    \n+    configFile.close();\n+    \n+    /* Open bitcoin.conf with the associated application */\n+    return QDesktopServices::openUrl(QUrl::fromLocalFile(boostPathToQString(pathConfig)));\n+}\n+\n void SubstituteFonts(const QString& language)\n {\n #if defined(Q_OS_MAC)\n@@ -447,7 +457,7 @@ void SubstituteFonts(const QString& language)\n             /* 10.10 or later system */\n             if (language == \"zh_CN\" || language == \"zh_TW\" || language == \"zh_HK\") // traditional or simplified Chinese\n               QFont::insertSubstitution(\".Helvetica Neue DeskInterface\", \"Heiti SC\");\n-            else if (language == \"ja\") // Japanesee\n+            else if (language == \"ja\") // Japanese\n               QFont::insertSubstitution(\".Helvetica Neue DeskInterface\", \"Songti SC\");\n             else\n               QFont::insertSubstitution(\".Helvetica Neue DeskInterface\", \"Lucida Grande\");\n@@ -601,7 +611,7 @@ TableViewLastColumnResizingFixer::TableViewLastColumnResizingFixer(QTableView* t\n }\n \n #ifdef WIN32\n-boost::filesystem::path static StartupShortcutPath()\n+fs::path static StartupShortcutPath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n@@ -614,13 +624,13 @@ boost::filesystem::path static StartupShortcutPath()\n bool GetStartOnSystemStartup()\n {\n     // check for Bitcoin*.lnk\n-    return boost::filesystem::exists(StartupShortcutPath());\n+    return fs::exists(StartupShortcutPath());\n }\n \n bool SetStartOnSystemStartup(bool fAutoStart)\n {\n     // If the shortcut exists already, remove it for updating\n-    boost::filesystem::remove(StartupShortcutPath());\n+    fs::remove(StartupShortcutPath());\n \n     if (fAutoStart)\n     {\n@@ -690,18 +700,16 @@ bool SetStartOnSystemStartup(bool fAutoStart)\n // Follow the Desktop Application Autostart Spec:\n // http://standards.freedesktop.org/autostart-spec/autostart-spec-latest.html\n \n-boost::filesystem::path static GetAutostartDir()\n+fs::path static GetAutostartDir()\n {\n-    namespace fs = boost::filesystem;\n-\n     char* pszConfigHome = getenv(\"XDG_CONFIG_HOME\");\n     if (pszConfigHome) return fs::path(pszConfigHome) / \"autostart\";\n     char* pszHome = getenv(\"HOME\");\n     if (pszHome) return fs::path(pszHome) / \".config\" / \"autostart\";\n     return fs::path();\n }\n \n-boost::filesystem::path static GetAutostartFilePath()\n+fs::path static GetAutostartFilePath()\n {\n     std::string chain = ChainNameFromCommandLine();\n     if (chain == CBaseChainParams::MAIN)\n@@ -711,7 +719,7 @@ boost::filesystem::path static GetAutostartFilePath()\n \n bool GetStartOnSystemStartup()\n {\n-    boost::filesystem::ifstream optionFile(GetAutostartFilePath());\n+    fs::ifstream optionFile(GetAutostartFilePath());\n     if (!optionFile.good())\n         return false;\n     // Scan through file for \"Hidden=true\":\n@@ -731,17 +739,17 @@ bool GetStartOnSystemStartup()\n bool SetStartOnSystemStartup(bool fAutoStart)\n {\n     if (!fAutoStart)\n-        boost::filesystem::remove(GetAutostartFilePath());\n+        fs::remove(GetAutostartFilePath());\n     else\n     {\n         char pszExePath[MAX_PATH+1];\n         memset(pszExePath, 0, sizeof(pszExePath));\n         if (readlink(\"/proc/self/exe\", pszExePath, sizeof(pszExePath)-1) == -1)\n             return false;\n \n-        boost::filesystem::create_directories(GetAutostartDir());\n+        fs::create_directories(GetAutostartDir());\n \n-        boost::filesystem::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n+        fs::ofstream optionFile(GetAutostartFilePath(), std::ios_base::out|std::ios_base::trunc);\n         if (!optionFile.good())\n             return false;\n         std::string chain = ChainNameFromCommandLine();\n@@ -847,14 +855,17 @@ void restoreWindowGeometry(const QString& strSetting, const QSize& defaultSize,\n     QPoint pos = settings.value(strSetting + \"Pos\").toPoint();\n     QSize size = settings.value(strSetting + \"Size\", defaultSize).toSize();\n \n-    if (!pos.x() && !pos.y()) {\n-        QRect screen = QApplication::desktop()->screenGeometry();\n-        pos.setX((screen.width() - size.width()) / 2);\n-        pos.setY((screen.height() - size.height()) / 2);\n-    }\n-\n     parent->resize(size);\n     parent->move(pos);\n+\n+    if ((!pos.x() && !pos.y()) || (QApplication::desktop()->screenNumber(parent) == -1))\n+    {\n+        QRect screen = QApplication::desktop()->screenGeometry();\n+        QPoint defaultPos((screen.width() - defaultSize.width()) / 2,\n+                          (screen.height() - defaultSize.height()) / 2);\n+        parent->resize(defaultSize);\n+        parent->move(defaultPos);\n+    }\n }\n \n void setClipboard(const QString& str)\n@@ -863,28 +874,15 @@ void setClipboard(const QString& str)\n     QApplication::clipboard()->setText(str, QClipboard::Selection);\n }\n \n-#if BOOST_FILESYSTEM_VERSION >= 3\n-boost::filesystem::path qstringToBoostPath(const QString &path)\n+fs::path qstringToBoostPath(const QString &path)\n {\n-    return boost::filesystem::path(path.toStdString(), utf8);\n+    return fs::path(path.toStdString(), utf8);\n }\n \n-QString boostPathToQString(const boost::filesystem::path &path)\n+QString boostPathToQString(const fs::path &path)\n {\n     return QString::fromStdString(path.string(utf8));\n }\n-#else\n-#warning Conversion between boost path and QString can use invalid character encoding with boost_filesystem v2 and older\n-boost::filesystem::path qstringToBoostPath(const QString &path)\n-{\n-    return boost::filesystem::path(path.toStdString());\n-}\n-\n-QString boostPathToQString(const boost::filesystem::path &path)\n-{\n-    return QString::fromStdString(path.string());\n-}\n-#endif\n \n QString formatDurationStr(int secs)\n {"
      },
      {
        "sha": "d6aa8c4ea656c49b0810288035d762b12b432530",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,7 @@\n #define BITCOIN_QT_GUIUTIL_H\n \n #include \"amount.h\"\n+#include \"fs.h\"\n \n #include <QEvent>\n #include <QHeaderView>\n@@ -16,8 +17,6 @@\n #include <QTableView>\n #include <QLabel>\n \n-#include <boost/filesystem.hpp>\n-\n class QValidatedLineEdit;\n class SendCoinsRecipient;\n \n@@ -114,6 +113,9 @@ namespace GUIUtil\n     // Open debug.log\n     void openDebugLogfile();\n \n+    // Open the config file\n+    bool openBitcoinConf();\n+\n     // Replace invalid default fonts with known good ones\n     void SubstituteFonts(const QString& language);\n \n@@ -183,10 +185,10 @@ namespace GUIUtil\n     void restoreWindowGeometry(const QString& strSetting, const QSize &defaultSizeIn, QWidget *parent);\n \n     /* Convert QString to OS specific boost path through UTF-8 */\n-    boost::filesystem::path qstringToBoostPath(const QString &path);\n+    fs::path qstringToBoostPath(const QString &path);\n \n     /* Convert OS specific boost path to QString through UTF-8 */\n-    QString boostPathToQString(const boost::filesystem::path &path);\n+    QString boostPathToQString(const fs::path &path);\n \n     /* Convert seconds into a QString with days, hours, mins, secs */\n     QString formatDurationStr(int secs);"
      },
      {
        "sha": "2460a59109c505e5ab9dd187a9ee9cb0b5233c92",
        "filename": "src/qt/intro.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 5,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/intro.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/intro.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,15 +6,14 @@\n #include \"config/bitcoin-config.h\"\n #endif\n \n+#include \"fs.h\"\n #include \"intro.h\"\n #include \"ui_intro.h\"\n \n #include \"guiutil.h\"\n \n #include \"util.h\"\n \n-#include <boost/filesystem.hpp>\n-\n #include <QFileDialog>\n #include <QSettings>\n #include <QMessageBox>\n@@ -70,7 +69,6 @@ FreespaceChecker::FreespaceChecker(Intro *_intro)\n \n void FreespaceChecker::check()\n {\n-    namespace fs = boost::filesystem;\n     QString dataDirStr = intro->getPathToCheck();\n     fs::path dataDir = GUIUtil::qstringToBoostPath(dataDirStr);\n     uint64_t freeBytesAvailable = 0;\n@@ -124,16 +122,34 @@ Intro::Intro(QWidget *parent) :\n     ui->setupUi(this);\n     ui->welcomeLabel->setText(ui->welcomeLabel->text().arg(tr(PACKAGE_NAME)));\n     ui->storageLabel->setText(ui->storageLabel->text().arg(tr(PACKAGE_NAME)));\n+\n+    ui->lblExplanation1->setText(ui->lblExplanation1->text()\n+        .arg(tr(PACKAGE_NAME))\n+        .arg(BLOCK_CHAIN_SIZE)\n+        .arg(2009)\n+        .arg(tr(\"Bitcoin\"))\n+    );\n+    ui->lblExplanation2->setText(ui->lblExplanation2->text().arg(tr(PACKAGE_NAME)));\n+\n     uint64_t pruneTarget = std::max<int64_t>(0, GetArg(\"-prune\", 0));\n     requiredSpace = BLOCK_CHAIN_SIZE;\n+    QString storageRequiresMsg = tr(\"At least %1 GB of data will be stored in this directory, and it will grow over time.\");\n     if (pruneTarget) {\n         uint64_t prunedGBs = std::ceil(pruneTarget * 1024 * 1024.0 / GB_BYTES);\n         if (prunedGBs <= requiredSpace) {\n             requiredSpace = prunedGBs;\n+            storageRequiresMsg = tr(\"Approximately %1 GB of data will be stored in this directory.\");\n         }\n+        ui->lblExplanation3->setVisible(true);\n+    } else {\n+        ui->lblExplanation3->setVisible(false);\n     }\n     requiredSpace += CHAIN_STATE_SIZE;\n-    ui->sizeWarningLabel->setText(ui->sizeWarningLabel->text().arg(tr(PACKAGE_NAME)).arg(requiredSpace));\n+    ui->sizeWarningLabel->setText(\n+        tr(\"%1 will download and store a copy of the Bitcoin block chain.\").arg(tr(PACKAGE_NAME)) + \" \" +\n+        storageRequiresMsg.arg(requiredSpace) + \" \" +\n+        tr(\"The wallet will also be stored in this directory.\")\n+    );\n     startThread();\n }\n \n@@ -172,7 +188,6 @@ QString Intro::getDefaultDataDirectory()\n \n bool Intro::pickDataDirectory()\n {\n-    namespace fs = boost::filesystem;\n     QSettings settings;\n     /* If data directory provided on command line, no need to look at settings\n        or show a picking dialog */"
      },
      {
        "sha": "efb25aaf18d48d868bad7eaec52afad84bf1c5a7",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -232,6 +232,18 @@ void OptionsDialog::on_resetButton_clicked()\n     }\n }\n \n+void OptionsDialog::on_openBitcoinConfButton_clicked()\n+{\n+    /* explain the purpose of the config file */\n+    QMessageBox::information(this, tr(\"Configuration options\"),\n+        tr(\"The configuration file is used to specify advanced user options which override GUI settings. \"\n+           \"Additionally, any command-line options will override this configuration file.\"));\n+\n+    /* show an error if there was some problem opening the file */\n+    if (!GUIUtil::openBitcoinConf())\n+        QMessageBox::critical(this, tr(\"Error\"), tr(\"The configuration file could not be opened.\"));\n+}\n+\n void OptionsDialog::on_okButton_clicked()\n {\n     mapper->submit();"
      },
      {
        "sha": "f9f5823c051560c6a843949225cd5a54e766ba21",
        "filename": "src/qt/optionsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/optionsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/optionsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -47,6 +47,7 @@ private Q_SLOTS:\n     /* set OK button state (enabled / disabled) */\n     void setOkButtonState(bool fState);\n     void on_resetButton_clicked();\n+    void on_openBitcoinConfButton_clicked();\n     void on_okButton_clicked();\n     void on_cancelButton_clicked();\n     "
      },
      {
        "sha": "c31a7a478d6538810df6c33ed5983b88e7c26802",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -219,14 +219,16 @@ void PaymentServer::ipcParseCommandLine(int argc, char* argv[])\n             if (GUIUtil::parseBitcoinURI(arg, &r) && !r.address.isEmpty())\n             {\n                 CBitcoinAddress address(r.address.toStdString());\n+                auto tempChainParams = CreateChainParams(CBaseChainParams::MAIN);\n \n-                if (address.IsValid(Params(CBaseChainParams::MAIN)))\n+                if (address.IsValid(*tempChainParams))\n                 {\n                     SelectParams(CBaseChainParams::MAIN);\n                 }\n-                else if (address.IsValid(Params(CBaseChainParams::TESTNET)))\n-                {\n-                    SelectParams(CBaseChainParams::TESTNET);\n+                else {\n+                    tempChainParams = CreateChainParams(CBaseChainParams::TESTNET);\n+                    if (address.IsValid(*tempChainParams))\n+                        SelectParams(CBaseChainParams::TESTNET);\n                 }\n             }\n         }\n@@ -580,7 +582,7 @@ bool PaymentServer::processPaymentRequest(const PaymentRequestPlus& request, Sen\n \n         // Extract and check amounts\n         CTxOut txOut(sendingTo.second, sendingTo.first);\n-        if (txOut.IsDust(dustRelayFee)) {\n+        if (IsDust(txOut, ::dustRelayFee)) {\n             Q_EMIT message(tr(\"Payment request error\"), tr(\"Requested payment amount of %1 is too small (considered dust).\")\n                 .arg(BitcoinUnits::formatWithUnit(optionsModel->getDisplayUnit(), sendingTo.second)),\n                 CClientUIInterface::MSG_ERROR);"
      },
      {
        "sha": "b200cb112717b73a6f8610192412bdffa09f7550",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 5,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -98,7 +98,7 @@ class QtRPCTimerBase: public QObject, public RPCTimerBase\n {\n     Q_OBJECT\n public:\n-    QtRPCTimerBase(boost::function<void(void)>& _func, int64_t millis):\n+    QtRPCTimerBase(std::function<void(void)>& _func, int64_t millis):\n         func(_func)\n     {\n         timer.setSingleShot(true);\n@@ -110,15 +110,15 @@ private Q_SLOTS:\n     void timeout() { func(); }\n private:\n     QTimer timer;\n-    boost::function<void(void)> func;\n+    std::function<void(void)> func;\n };\n \n class QtRPCTimerInterface: public RPCTimerInterface\n {\n public:\n     ~QtRPCTimerInterface() {}\n     const char *Name() { return \"Qt\"; }\n-    RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis)\n+    RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis)\n     {\n         return new QtRPCTimerBase(func, millis);\n     }\n@@ -630,9 +630,12 @@ void RPCConsole::setClientModel(ClientModel *model)\n         for (size_t i = 0; i < commandList.size(); ++i)\n         {\n             wordList << commandList[i].c_str();\n+            wordList << (\"help \" + commandList[i]).c_str();\n         }\n \n+        wordList.sort();\n         autoCompleter = new QCompleter(wordList, this);\n+        autoCompleter->setModelSorting(QCompleter::CaseSensitivelySortedModel);\n         ui->lineEdit->setCompleter(autoCompleter);\n         autoCompleter->popup()->installEventFilter(this);\n         // Start thread to execute RPC commands.\n@@ -727,8 +730,14 @@ void RPCConsole::clear(bool clearHistory)\n             ).arg(fixedFontInfo.family(), QString(\"%1pt\").arg(consoleFontSize))\n         );\n \n+#ifdef Q_OS_MAC\n+    QString clsKey = \"(\u2318)-L\";\n+#else\n+    QString clsKey = \"Ctrl-L\";\n+#endif\n+\t \n     message(CMD_REPLY, (tr(\"Welcome to the %1 RPC console.\").arg(tr(PACKAGE_NAME)) + \"<br>\" +\n-                        tr(\"Use up and down arrows to navigate history, and <b>Ctrl-L</b> to clear screen.\") + \"<br>\" +\n+                        tr(\"Use up and down arrows to navigate history, and %1 to clear screen.\").arg(\"<b>\"+clsKey+\"</b>\") + \"<br>\" +\n                         tr(\"Type <b>help</b> for an overview of available commands.\")) +\n                         \"<br><span class=\\\"secwarning\\\">\" +\n                         tr(\"WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.\") +\n@@ -826,7 +835,7 @@ void RPCConsole::on_lineEdit_returnPressed()\n \n         cmdBeforeBrowsing = QString();\n \n-        message(CMD_REQUEST, cmd);\n+        message(CMD_REQUEST, QString::fromStdString(strFilteredCmd));\n         Q_EMIT cmdRequest(cmd);\n \n         cmd = QString::fromStdString(strFilteredCmd);"
      },
      {
        "sha": "272ab9486acef2b22c8e92b4d99589459910024e",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 27,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -21,16 +21,16 @@\n #include \"validation.h\" // mempool and minRelayTxFee\n #include \"ui_interface.h\"\n #include \"txmempool.h\"\n+#include \"policy/fees.h\"\n #include \"wallet/wallet.h\"\n \n+#include <QFontMetrics>\n #include <QMessageBox>\n #include <QScrollBar>\n #include <QSettings>\n #include <QTextDocument>\n #include <QTimer>\n \n-#define SEND_CONFIRM_DELAY   3\n-\n SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::SendCoinsDialog),\n@@ -109,7 +109,6 @@ SendCoinsDialog::SendCoinsDialog(const PlatformStyle *_platformStyle, QWidget *p\n     ui->groupFee->setId(ui->radioCustomFee, 1);\n     ui->groupFee->button((int)std::max(0, std::min(1, settings.value(\"nFeeRadio\").toInt())))->setChecked(true);\n     ui->groupCustomFee->setId(ui->radioCustomPerKilobyte, 0);\n-    ui->groupCustomFee->setId(ui->radioCustomAtLeast, 1);\n     ui->groupCustomFee->button((int)std::max(0, std::min(1, settings.value(\"nCustomFeeRadio\").toInt())))->setChecked(true);\n     ui->customFee->setValue(settings.value(\"nTransactionFee\").toLongLong());\n     ui->checkBoxMinimumFee->setChecked(settings.value(\"fPayOnlyMinFee\").toBool());\n@@ -173,6 +172,9 @@ void SendCoinsDialog::setModel(WalletModel *_model)\n         updateSmartFeeLabel();\n         updateGlobalFeeVariables();\n \n+        // set default rbf checkbox state\n+        ui->optInRBF->setCheckState(model->getDefaultWalletRbf() ? Qt::Checked : Qt::Unchecked);\n+\n         // set the smartfee-sliders default value (wallets default conf.target or last stored value)\n         QSettings settings;\n         if (settings.value(\"nSmartFeeSliderPosition\").toInt() == 0)\n@@ -246,6 +248,8 @@ void SendCoinsDialog::on_sendButton_clicked()\n     else\n         ctrl.nConfirmTarget = 0;\n \n+    ctrl.signalRbf = ui->optInRBF->isChecked();\n+\n     prepareStatus = model->prepareTransaction(currentTransaction, &ctrl);\n \n     // process prepareStatus and on error generate message shown to user\n@@ -325,6 +329,13 @@ void SendCoinsDialog::on_sendButton_clicked()\n     questionString.append(QString(\"<span style='font-size:10pt;font-weight:normal;'><br />(=%2)</span>\")\n         .arg(alternativeUnits.join(\" \" + tr(\"or\") + \"<br />\")));\n \n+    if (ui->optInRBF->isChecked())\n+    {\n+        questionString.append(\"<hr /><span>\");\n+        questionString.append(tr(\"This transaction signals replaceability (optin-RBF).\"));\n+        questionString.append(\"</span>\");\n+    }\n+\n     SendConfirmationDialog confirmationDialog(tr(\"Confirm send coins\"),\n         questionString.arg(formatted.join(\"<br />\")), SEND_CONFIRM_DELAY, this);\n     confirmationDialog.exec();\n@@ -594,7 +605,6 @@ void SendCoinsDialog::updateFeeSectionControls()\n     ui->checkBoxMinimumFee      ->setEnabled(ui->radioCustomFee->isChecked());\n     ui->labelMinFeeWarning      ->setEnabled(ui->radioCustomFee->isChecked());\n     ui->radioCustomPerKilobyte  ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n-    ui->radioCustomAtLeast      ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked() && CoinControlDialog::coinControl->HasSelected());\n     ui->customFee               ->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked());\n }\n \n@@ -605,19 +615,12 @@ void SendCoinsDialog::updateGlobalFeeVariables()\n         int nConfirmTarget = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n         payTxFee = CFeeRate(0);\n \n-        // set nMinimumTotalFee to 0 to not accidentally pay a custom fee\n-        CoinControlDialog::coinControl->nMinimumTotalFee = 0;\n-\n         // show the estimated required time for confirmation\n         ui->confirmationTargetLabel->setText(GUIUtil::formatDurationStr(nConfirmTarget * Params().GetConsensus().nPowTargetSpacing) + \" / \" + tr(\"%n block(s)\", \"\", nConfirmTarget));\n     }\n     else\n     {\n         payTxFee = CFeeRate(ui->customFee->value());\n-\n-        // if user has selected to set a minimum absolute fee, pass the value to coincontrol\n-        // set nMinimumTotalFee to 0 in case of user has selected that the fee is per KB\n-        CoinControlDialog::coinControl->nMinimumTotalFee = ui->radioCustomAtLeast->isChecked() ? ui->customFee->value() : 0;\n     }\n }\n \n@@ -649,20 +652,26 @@ void SendCoinsDialog::updateSmartFeeLabel()\n \n     int nBlocksToConfirm = ui->sliderSmartFee->maximum() - ui->sliderSmartFee->value() + 2;\n     int estimateFoundAtBlocks = nBlocksToConfirm;\n-    CFeeRate feeRate = mempool.estimateSmartFee(nBlocksToConfirm, &estimateFoundAtBlocks);\n+    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(nBlocksToConfirm, &estimateFoundAtBlocks, ::mempool);\n     if (feeRate <= CFeeRate(0)) // not enough data => minfee\n     {\n         ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(),\n                                                                 std::max(CWallet::fallbackFee.GetFeePerK(), CWallet::GetRequiredFee(1000))) + \"/kB\");\n         ui->labelSmartFee2->show(); // (Smart fee not initialized yet. This usually takes a few blocks...)\n         ui->labelFeeEstimation->setText(\"\");\n+        ui->fallbackFeeWarningLabel->setVisible(true);\n+        int lightness = ui->fallbackFeeWarningLabel->palette().color(QPalette::WindowText).lightness();\n+        QColor warning_colour(255 - (lightness / 5), 176 - (lightness / 3), 48 - (lightness / 14));\n+        ui->fallbackFeeWarningLabel->setStyleSheet(\"QLabel { color: \" + warning_colour.name() + \"; }\");\n+        ui->fallbackFeeWarningLabel->setIndent(QFontMetrics(ui->fallbackFeeWarningLabel->font()).width(\"x\"));\n     }\n     else\n     {\n         ui->labelSmartFee->setText(BitcoinUnits::formatWithUnit(model->getOptionsModel()->getDisplayUnit(),\n                                                                 std::max(feeRate.GetFeePerK(), CWallet::GetRequiredFee(1000))) + \"/kB\");\n         ui->labelSmartFee2->hide();\n         ui->labelFeeEstimation->setText(tr(\"Estimated to begin confirmation within %n block(s).\", \"\", estimateFoundAtBlocks));\n+        ui->fallbackFeeWarningLabel->setVisible(false);\n     }\n \n     updateFeeMinimizedLabel();\n@@ -810,21 +819,6 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (!model || !model->getOptionsModel())\n         return;\n \n-    if (model->getOptionsModel()->getCoinControlFeatures())\n-    {\n-        // enable minimum absolute fee UI controls\n-        ui->radioCustomAtLeast->setVisible(true);\n-\n-        // only enable the feature if inputs are selected\n-        ui->radioCustomAtLeast->setEnabled(ui->radioCustomFee->isChecked() && !ui->checkBoxMinimumFee->isChecked() &&CoinControlDialog::coinControl->HasSelected());\n-    }\n-    else\n-    {\n-        // in case coin control is disabled (=default), hide minimum absolute fee UI controls\n-        ui->radioCustomAtLeast->setVisible(false);\n-        return;\n-    }\n-\n     // set pay amounts\n     CoinControlDialog::payAmounts.clear();\n     CoinControlDialog::fSubtractFeeFromAmount = false;"
      },
      {
        "sha": "a932f129bed7a78d4ba7d405df89ee752f4d1353",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -100,13 +100,14 @@ private Q_SLOTS:\n };\n \n \n+#define SEND_CONFIRM_DELAY   3\n \n class SendConfirmationDialog : public QMessageBox\n {\n     Q_OBJECT\n \n public:\n-    SendConfirmationDialog(const QString &title, const QString &text, int secDelay = 0, QWidget *parent = 0);\n+    SendConfirmationDialog(const QString &title, const QString &text, int secDelay = SEND_CONFIRM_DELAY, QWidget *parent = 0);\n     int exec();\n \n private Q_SLOTS:"
      },
      {
        "sha": "08a76c7d49632b2da1eac7254eabffc398935a2b",
        "filename": "src/qt/test/paymentservertests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/paymentservertests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/paymentservertests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/paymentservertests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -142,7 +142,7 @@ void PaymentServerTests::paymentServerTests()\n     byteArray = QByteArray((const char*)&data[0], data.size());\n     r.paymentRequest.parse(byteArray);\n     // Ensure the request is initialized, because network \"main\" is default, even for\n-    // uninizialized payment requests and that will fail our test here.\n+    // uninitialized payment requests and that will fail our test here.\n     QVERIFY(r.paymentRequest.IsInitialized());\n     QCOMPARE(PaymentServer::verifyNetwork(r.paymentRequest.getDetails()), false);\n "
      },
      {
        "sha": "dada689731094611f23f562a289138bf3842364b",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,7 @@\n \n #include \"chainparams.h\"\n #include \"consensus/validation.h\"\n+#include \"fs.h\"\n #include \"validation.h\"\n #include \"rpc/register.h\"\n #include \"rpc/server.h\"\n@@ -17,8 +18,6 @@\n #include <QDir>\n #include <QtGlobal>\n \n-#include <boost/filesystem.hpp>\n-\n static UniValue rpcNestedTest_rpc(const JSONRPCRequest& request)\n {\n     if (request.fHelp) {\n@@ -148,9 +147,13 @@ void RPCNestedTests::rpcNestedTests()\n     QVERIFY_EXCEPTION_THROWN(RPCConsole::RPCExecuteCommandLine(result, \"rpcNestedTest(abc,,)\"), std::runtime_error); //don't tollerate empty arguments when using ,\n #endif\n \n+    UnloadBlockIndex();\n     delete pcoinsTip;\n+    pcoinsTip = nullptr;\n     delete pcoinsdbview;\n+    pcoinsdbview = nullptr;\n     delete pblocktree;\n+    pblocktree = nullptr;\n \n-    boost::filesystem::remove_all(boost::filesystem::path(path));\n+    fs::remove_all(fs::path(path));\n }"
      },
      {
        "sha": "cae18f41a5c50bc67ad988ed0a33744a360d8cbe",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 37,
        "deletions": 11,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,65 +7,91 @@\n #endif\n \n #include \"chainparams.h\"\n-#include \"key.h\"\n #include \"rpcnestedtests.h\"\n #include \"util.h\"\n #include \"uritests.h\"\n #include \"compattests.h\"\n \n #ifdef ENABLE_WALLET\n #include \"paymentservertests.h\"\n+#include \"wallettests.h\"\n #endif\n \n-#include <QCoreApplication>\n+#include <QApplication>\n #include <QObject>\n #include <QTest>\n \n #include <openssl/ssl.h>\n \n-#if defined(QT_STATICPLUGIN) && QT_VERSION < 0x050000\n+#if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n+#if QT_VERSION < 0x050000\n Q_IMPORT_PLUGIN(qcncodecs)\n Q_IMPORT_PLUGIN(qjpcodecs)\n Q_IMPORT_PLUGIN(qtwcodecs)\n Q_IMPORT_PLUGIN(qkrcodecs)\n+#else\n+#if defined(QT_QPA_PLATFORM_MINIMAL)\n+Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin);\n+#endif\n+#if defined(QT_QPA_PLATFORM_XCB)\n+Q_IMPORT_PLUGIN(QXcbIntegrationPlugin);\n+#elif defined(QT_QPA_PLATFORM_WINDOWS)\n+Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin);\n+#elif defined(QT_QPA_PLATFORM_COCOA)\n+Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin);\n+#endif\n+#endif\n #endif\n \n extern void noui_connect();\n \n // This is all you need to run all the tests\n int main(int argc, char *argv[])\n {\n-    ECC_Start();\n     SetupEnvironment();\n     SetupNetworking();\n     SelectParams(CBaseChainParams::MAIN);\n     noui_connect();\n \n     bool fInvalid = false;\n \n+    // Prefer the \"minimal\" platform for the test instead of the normal default\n+    // platform (\"xcb\", \"windows\", or \"cocoa\") so tests can't unintentially\n+    // interfere with any background GUIs and don't require extra resources.\n+    setenv(\"QT_QPA_PLATFORM\", \"minimal\", 0);\n+\n     // Don't remove this, it's needed to access\n-    // QCoreApplication:: in the tests\n-    QCoreApplication app(argc, argv);\n+    // QApplication:: and QCoreApplication:: in the tests\n+    QApplication app(argc, argv);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n     SSL_library_init();\n \n     URITests test1;\n-    if (QTest::qExec(&test1) != 0)\n+    if (QTest::qExec(&test1) != 0) {\n         fInvalid = true;\n+    }\n #ifdef ENABLE_WALLET\n     PaymentServerTests test2;\n-    if (QTest::qExec(&test2) != 0)\n+    if (QTest::qExec(&test2) != 0) {\n         fInvalid = true;\n+    }\n #endif\n     RPCNestedTests test3;\n-    if (QTest::qExec(&test3) != 0)\n+    if (QTest::qExec(&test3) != 0) {\n         fInvalid = true;\n+    }\n     CompatTests test4;\n-    if (QTest::qExec(&test4) != 0)\n+    if (QTest::qExec(&test4) != 0) {\n         fInvalid = true;\n+    }\n+#ifdef ENABLE_WALLET\n+    WalletTests test5;\n+    if (QTest::qExec(&test5) != 0) {\n+        fInvalid = true;\n+    }\n+#endif\n \n-    ECC_Stop();\n     return fInvalid;\n }"
      },
      {
        "sha": "32362ccdfc63e6181ff821d7922a0aae0efaa696",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "added",
        "additions": 185,
        "deletions": 0,
        "changes": 185,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,185 @@\n+#include \"wallettests.h\"\n+\n+#include \"qt/bitcoinamountfield.h\"\n+#include \"qt/callback.h\"\n+#include \"qt/optionsmodel.h\"\n+#include \"qt/platformstyle.h\"\n+#include \"qt/qvalidatedlineedit.h\"\n+#include \"qt/sendcoinsdialog.h\"\n+#include \"qt/sendcoinsentry.h\"\n+#include \"qt/transactiontablemodel.h\"\n+#include \"qt/transactionview.h\"\n+#include \"qt/walletmodel.h\"\n+#include \"test/test_bitcoin.h\"\n+#include \"validation.h\"\n+#include \"wallet/wallet.h\"\n+\n+#include <QAbstractButton>\n+#include <QAction>\n+#include <QApplication>\n+#include <QCheckBox>\n+#include <QPushButton>\n+#include <QTimer>\n+#include <QVBoxLayout>\n+\n+namespace\n+{\n+//! Press \"Ok\" button in message box dialog.\n+void ConfirmMessage(QString* text = nullptr)\n+{\n+    QTimer::singleShot(0, makeCallback([text](Callback* callback) {\n+        for (QWidget* widget : QApplication::topLevelWidgets()) {\n+            if (widget->inherits(\"QMessageBox\")) {\n+                QMessageBox* messageBox = qobject_cast<QMessageBox*>(widget);\n+                if (text) *text = messageBox->text();\n+                messageBox->defaultButton()->click();\n+            }\n+        }\n+        delete callback;\n+    }), SLOT(call()));\n+}\n+\n+//! Press \"Yes\" or \"Cancel\" buttons in modal send confirmation dialog.\n+void ConfirmSend(QString* text = nullptr, bool cancel = false)\n+{\n+    QTimer::singleShot(0, makeCallback([text, cancel](Callback* callback) {\n+        for (QWidget* widget : QApplication::topLevelWidgets()) {\n+            if (widget->inherits(\"SendConfirmationDialog\")) {\n+                SendConfirmationDialog* dialog = qobject_cast<SendConfirmationDialog*>(widget);\n+                if (text) *text = dialog->text();\n+                QAbstractButton* button = dialog->button(cancel ? QMessageBox::Cancel : QMessageBox::Yes);\n+                button->setEnabled(true);\n+                button->click();\n+            }\n+        }\n+        delete callback;\n+    }), SLOT(call()));\n+}\n+\n+//! Send coins to address and return txid.\n+uint256 SendCoins(CWallet& wallet, SendCoinsDialog& sendCoinsDialog, const CBitcoinAddress& address, CAmount amount, bool rbf)\n+{\n+    QVBoxLayout* entries = sendCoinsDialog.findChild<QVBoxLayout*>(\"entries\");\n+    SendCoinsEntry* entry = qobject_cast<SendCoinsEntry*>(entries->itemAt(0)->widget());\n+    entry->findChild<QValidatedLineEdit*>(\"payTo\")->setText(QString::fromStdString(address.ToString()));\n+    entry->findChild<BitcoinAmountField*>(\"payAmount\")->setValue(amount);\n+    sendCoinsDialog.findChild<QFrame*>(\"frameFee\")\n+        ->findChild<QFrame*>(\"frameFeeSelection\")\n+        ->findChild<QCheckBox*>(\"optInRBF\")\n+        ->setCheckState(rbf ? Qt::Checked : Qt::Unchecked);\n+    uint256 txid;\n+    boost::signals2::scoped_connection c(wallet.NotifyTransactionChanged.connect([&txid](CWallet*, const uint256& hash, ChangeType status) {\n+        if (status == CT_NEW) txid = hash;\n+    }));\n+    ConfirmSend();\n+    QMetaObject::invokeMethod(&sendCoinsDialog, \"on_sendButton_clicked\");\n+    return txid;\n+}\n+\n+//! Find index of txid in transaction list.\n+QModelIndex FindTx(const QAbstractItemModel& model, const uint256& txid)\n+{\n+    QString hash = QString::fromStdString(txid.ToString());\n+    int rows = model.rowCount({});\n+    for (int row = 0; row < rows; ++row) {\n+        QModelIndex index = model.index(row, 0, {});\n+        if (model.data(index, TransactionTableModel::TxHashRole) == hash) {\n+            return index;\n+        }\n+    }\n+    return {};\n+}\n+\n+//! Invoke bumpfee on txid and check results.\n+void BumpFee(TransactionView& view, const uint256& txid, bool expectDisabled, std::string expectError, bool cancel)\n+{\n+    QTableView* table = view.findChild<QTableView*>(\"transactionView\");\n+    QModelIndex index = FindTx(*table->selectionModel()->model(), txid);\n+    QVERIFY2(index.isValid(), \"Could not find BumpFee txid\");\n+\n+    // Select row in table, invoke context menu, and make sure bumpfee action is\n+    // enabled or disabled as expected.\n+    QAction* action = view.findChild<QAction*>(\"bumpFeeAction\");\n+    table->selectionModel()->select(index, QItemSelectionModel::ClearAndSelect | QItemSelectionModel::Rows);\n+    action->setEnabled(expectDisabled);\n+    table->customContextMenuRequested({});\n+    QCOMPARE(action->isEnabled(), !expectDisabled);\n+\n+    action->setEnabled(true);\n+    QString text;\n+    if (expectError.empty()) {\n+        ConfirmSend(&text, cancel);\n+    } else {\n+        ConfirmMessage(&text);\n+    }\n+    action->trigger();\n+    QVERIFY(text.indexOf(QString::fromStdString(expectError)) != -1);\n+}\n+\n+//! Simple qt wallet tests.\n+//\n+// Test widgets can be debugged interactively calling show() on them and\n+// manually running the event loop, e.g.:\n+//\n+//     sendCoinsDialog.show();\n+//     QEventLoop().exec();\n+//\n+// This also requires overriding the default minimal Qt platform:\n+//\n+//     src/qt/test/test_bitcoin-qt -platform xcb      # Linux\n+//     src/qt/test/test_bitcoin-qt -platform windows  # Windows\n+//     src/qt/test/test_bitcoin-qt -platform cocoa    # macOS\n+void TestSendCoins()\n+{\n+    // Set up wallet and chain with 105 blocks (5 mature blocks for spending).\n+    TestChain100Setup test;\n+    for (int i = 0; i < 5; ++i) {\n+        test.CreateAndProcessBlock({}, GetScriptForRawPubKey(test.coinbaseKey.GetPubKey()));\n+    }\n+    bitdb.MakeMock();\n+    std::unique_ptr<CWalletDBWrapper> dbw(new CWalletDBWrapper(&bitdb, \"wallet_test.dat\"));\n+    CWallet wallet(std::move(dbw));\n+    bool firstRun;\n+    wallet.LoadWallet(firstRun);\n+    {\n+        LOCK(wallet.cs_wallet);\n+        wallet.SetAddressBook(test.coinbaseKey.GetPubKey().GetID(), \"\", \"receive\");\n+        wallet.AddKeyPubKey(test.coinbaseKey, test.coinbaseKey.GetPubKey());\n+    }\n+    wallet.ScanForWalletTransactions(chainActive.Genesis(), true);\n+    wallet.SetBroadcastTransactions(true);\n+\n+    // Create widgets for sending coins and listing transactions.\n+    std::unique_ptr<const PlatformStyle> platformStyle(PlatformStyle::instantiate(\"other\"));\n+    SendCoinsDialog sendCoinsDialog(platformStyle.get());\n+    TransactionView transactionView(platformStyle.get());\n+    OptionsModel optionsModel;\n+    WalletModel walletModel(platformStyle.get(), &wallet, &optionsModel);\n+    sendCoinsDialog.setModel(&walletModel);\n+    transactionView.setModel(&walletModel);\n+\n+    // Send two transactions, and verify they are added to transaction list.\n+    TransactionTableModel* transactionTableModel = walletModel.getTransactionTableModel();\n+    QCOMPARE(transactionTableModel->rowCount({}), 105);\n+    uint256 txid1 = SendCoins(wallet, sendCoinsDialog, CBitcoinAddress(CKeyID()), 5 * COIN, false /* rbf */);\n+    uint256 txid2 = SendCoins(wallet, sendCoinsDialog, CBitcoinAddress(CKeyID()), 10 * COIN, true /* rbf */);\n+    QCOMPARE(transactionTableModel->rowCount({}), 107);\n+    QVERIFY(FindTx(*transactionTableModel, txid1).isValid());\n+    QVERIFY(FindTx(*transactionTableModel, txid2).isValid());\n+\n+    // Call bumpfee. Test disabled, canceled, enabled, then failing cases.\n+    BumpFee(transactionView, txid1, true /* expect disabled */, \"not BIP 125 replaceable\" /* expected error */, false /* cancel */);\n+    BumpFee(transactionView, txid2, false /* expect disabled */, {} /* expected error */, true /* cancel */);\n+    BumpFee(transactionView, txid2, false /* expect disabled */, {} /* expected error */, false /* cancel */);\n+    BumpFee(transactionView, txid2, false /* expect disabled */, \"already bumped\" /* expected error */, false /* cancel */);\n+\n+    bitdb.Flush(true);\n+    bitdb.Reset();\n+}\n+\n+}\n+\n+void WalletTests::walletTests()\n+{\n+    TestSendCoins();\n+}"
      },
      {
        "sha": "342f7916c30b56e55b51a953b88cc81b700e79fa",
        "filename": "src/qt/test/wallettests.h",
        "status": "added",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/wallettests.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/test/wallettests.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,15 @@\n+#ifndef BITCOIN_QT_TEST_WALLETTESTS_H\n+#define BITCOIN_QT_TEST_WALLETTESTS_H\n+\n+#include <QObject>\n+#include <QTest>\n+\n+class WalletTests : public QObject\n+{\n+    Q_OBJECT\n+\n+private Q_SLOTS:\n+    void walletTests();\n+};\n+\n+#endif // BITCOIN_QT_TEST_WALLETTESTS_H"
      },
      {
        "sha": "d81188895b82af6448627574d54fe848d26710df",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -273,7 +273,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     //\n     // Debug view\n     //\n-    if (fDebug)\n+    if (logCategories != BCLog::NONE)\n     {\n         strHTML += \"<hr><br>\" + tr(\"Debug information\") + \"<br><br>\";\n         BOOST_FOREACH(const CTxIn& txin, wtx.tx->vin)"
      },
      {
        "sha": "4bb260aa588ae2c5eeb6b5e723de43455f404aef",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 8,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -18,14 +18,8 @@\n  */\n bool TransactionRecord::showTransaction(const CWalletTx &wtx)\n {\n-    if (wtx.IsCoinBase())\n-    {\n-        // Ensures we show generated coins / mined transactions at depth 1\n-        if (!wtx.IsInMainChain())\n-        {\n-            return false;\n-        }\n-    }\n+    // There are currently no cases where we hide transactions, but\n+    // we may want to use this in the future for things like RBF.\n     return true;\n }\n "
      },
      {
        "sha": "5da10e41b953843e021a083910e2932a08dba4e3",
        "filename": "src/qt/transactionview.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 2,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,6 +11,7 @@\n #include \"guiutil.h\"\n #include \"optionsmodel.h\"\n #include \"platformstyle.h\"\n+#include \"sendcoinsdialog.h\"\n #include \"transactiondescdialog.h\"\n #include \"transactionfilterproxy.h\"\n #include \"transactionrecord.h\"\n@@ -37,7 +38,7 @@\n \n TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *parent) :\n     QWidget(parent), model(0), transactionProxyModel(0),\n-    transactionView(0), abandonAction(0), columnResizingFixer(0)\n+    transactionView(0), abandonAction(0), bumpFeeAction(0), columnResizingFixer(0)\n {\n     // Build filter row\n     setContentsMargins(0,0,0,0);\n@@ -135,9 +136,12 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     view->installEventFilter(this);\n \n     transactionView = view;\n+    transactionView->setObjectName(\"transactionView\");\n \n     // Actions\n     abandonAction = new QAction(tr(\"Abandon transaction\"), this);\n+    bumpFeeAction = new QAction(tr(\"Increase transaction fee\"), this);\n+    bumpFeeAction->setObjectName(\"bumpFeeAction\");\n     QAction *copyAddressAction = new QAction(tr(\"Copy address\"), this);\n     QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n     QAction *copyAmountAction = new QAction(tr(\"Copy amount\"), this);\n@@ -148,6 +152,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     QAction *showDetailsAction = new QAction(tr(\"Show transaction details\"), this);\n \n     contextMenu = new QMenu(this);\n+    contextMenu->setObjectName(\"contextMenu\");\n     contextMenu->addAction(copyAddressAction);\n     contextMenu->addAction(copyLabelAction);\n     contextMenu->addAction(copyAmountAction);\n@@ -156,6 +161,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     contextMenu->addAction(copyTxPlainText);\n     contextMenu->addAction(showDetailsAction);\n     contextMenu->addSeparator();\n+    contextMenu->addAction(bumpFeeAction);\n     contextMenu->addAction(abandonAction);\n     contextMenu->addAction(editLabelAction);\n \n@@ -173,6 +179,7 @@ TransactionView::TransactionView(const PlatformStyle *platformStyle, QWidget *pa\n     connect(view, SIGNAL(doubleClicked(QModelIndex)), this, SIGNAL(doubleClicked(QModelIndex)));\n     connect(view, SIGNAL(customContextMenuRequested(QPoint)), this, SLOT(contextualMenu(QPoint)));\n \n+    connect(bumpFeeAction, SIGNAL(triggered()), this, SLOT(bumpFee()));\n     connect(abandonAction, SIGNAL(triggered()), this, SLOT(abandonTx()));\n     connect(copyAddressAction, SIGNAL(triggered()), this, SLOT(copyAddress()));\n     connect(copyLabelAction, SIGNAL(triggered()), this, SLOT(copyLabel()));\n@@ -372,10 +379,11 @@ void TransactionView::contextualMenu(const QPoint &point)\n     uint256 hash;\n     hash.SetHex(selection.at(0).data(TransactionTableModel::TxHashRole).toString().toStdString());\n     abandonAction->setEnabled(model->transactionCanBeAbandoned(hash));\n+    bumpFeeAction->setEnabled(model->transactionSignalsRBF(hash));\n \n     if(index.isValid())\n     {\n-        contextMenu->exec(QCursor::pos());\n+        contextMenu->popup(transactionView->viewport()->mapToGlobal(point));\n     }\n }\n \n@@ -397,6 +405,24 @@ void TransactionView::abandonTx()\n     model->getTransactionTableModel()->updateTransaction(hashQStr, CT_UPDATED, false);\n }\n \n+void TransactionView::bumpFee()\n+{\n+    if(!transactionView || !transactionView->selectionModel())\n+        return;\n+    QModelIndexList selection = transactionView->selectionModel()->selectedRows(0);\n+\n+    // get the hash from the TxHashRole (QVariant / QString)\n+    uint256 hash;\n+    QString hashQStr = selection.at(0).data(TransactionTableModel::TxHashRole).toString();\n+    hash.SetHex(hashQStr.toStdString());\n+\n+    // Bump tx fee over the walletModel\n+    if (model->bumpFee(hash)) {\n+        // Update the table\n+        model->getTransactionTableModel()->updateTransaction(hashQStr, CT_UPDATED, true);\n+    }\n+}\n+\n void TransactionView::copyAddress()\n {\n     GUIUtil::copyEntryData(transactionView, 0, TransactionTableModel::AddressRole);"
      },
      {
        "sha": "52e57cae4cf9486d98b7e55278d5ab44b4d32098",
        "filename": "src/qt/transactionview.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/transactionview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionview.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -76,6 +76,7 @@ class TransactionView : public QWidget\n     QDateTimeEdit *dateFrom;\n     QDateTimeEdit *dateTo;\n     QAction *abandonAction;\n+    QAction *bumpFeeAction;\n \n     QWidget *createDateRangeWidget();\n \n@@ -99,6 +100,7 @@ private Q_SLOTS:\n     void openThirdPartyTxUrl(QString url);\n     void updateWatchOnlyColumn(bool fHaveWatchOnly);\n     void abandonTx();\n+    void bumpFee();\n \n Q_SIGNALS:\n     void doubleClicked(const QModelIndex&);"
      },
      {
        "sha": "33b407ae5751b9b9d04375baef05a7a22a1a572b",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 97,
        "deletions": 50,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,23 +8,29 @@\n #include \"consensus/validation.h\"\n #include \"guiconstants.h\"\n #include \"guiutil.h\"\n+#include \"optionsmodel.h\"\n #include \"paymentserver.h\"\n #include \"recentrequeststablemodel.h\"\n+#include \"sendcoinsdialog.h\"\n #include \"transactiontablemodel.h\"\n \n #include \"base58.h\"\n+#include \"chain.h\"\n #include \"keystore.h\"\n #include \"validation.h\"\n #include \"net.h\" // for g_connman\n+#include \"policy/rbf.h\"\n #include \"sync.h\"\n #include \"ui_interface.h\"\n #include \"util.h\" // for GetBoolArg\n+#include \"wallet/feebumper.h\"\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\" // for BackupWallet\n \n #include <stdint.h>\n \n #include <QDebug>\n+#include <QMessageBox>\n #include <QSet>\n #include <QTimer>\n \n@@ -62,14 +68,7 @@ CAmount WalletModel::getBalance(const CCoinControl *coinControl) const\n {\n     if (coinControl)\n     {\n-        CAmount nBalance = 0;\n-        std::vector<COutput> vCoins;\n-        wallet->AvailableCoins(vCoins, true, coinControl);\n-        BOOST_FOREACH(const COutput& out, vCoins)\n-            if(out.fSpendable)\n-                nBalance += out.tx->tx->vout[out.i].nValue;\n-\n-        return nBalance;\n+        return wallet->GetAvailableBalance(coinControl);\n     }\n \n     return wallet->GetBalance();\n@@ -580,7 +579,7 @@ void WalletModel::getOutputs(const std::vector<COutPoint>& vOutpoints, std::vect\n         if (!wallet->mapWallet.count(outpoint.hash)) continue;\n         int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n         if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true, true);\n+        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true /* spendable */, true /* solvable */, true /* safe */);\n         vOutputs.push_back(out);\n     }\n }\n@@ -594,38 +593,11 @@ bool WalletModel::isSpent(const COutPoint& outpoint) const\n // AvailableCoins + LockedCoins grouped by wallet address (put change in one group with wallet address)\n void WalletModel::listCoins(std::map<QString, std::vector<COutput> >& mapCoins) const\n {\n-    std::vector<COutput> vCoins;\n-    wallet->AvailableCoins(vCoins);\n-\n-    LOCK2(cs_main, wallet->cs_wallet); // ListLockedCoins, mapWallet\n-    std::vector<COutPoint> vLockedCoins;\n-    wallet->ListLockedCoins(vLockedCoins);\n-\n-    // add locked coins\n-    BOOST_FOREACH(const COutPoint& outpoint, vLockedCoins)\n-    {\n-        if (!wallet->mapWallet.count(outpoint.hash)) continue;\n-        int nDepth = wallet->mapWallet[outpoint.hash].GetDepthInMainChain();\n-        if (nDepth < 0) continue;\n-        COutput out(&wallet->mapWallet[outpoint.hash], outpoint.n, nDepth, true, true);\n-        if (outpoint.n < out.tx->tx->vout.size() && wallet->IsMine(out.tx->tx->vout[outpoint.n]) == ISMINE_SPENDABLE)\n-            vCoins.push_back(out);\n-    }\n-\n-    BOOST_FOREACH(const COutput& out, vCoins)\n-    {\n-        COutput cout = out;\n-\n-        while (wallet->IsChange(cout.tx->tx->vout[cout.i]) && cout.tx->tx->vin.size() > 0 && wallet->IsMine(cout.tx->tx->vin[0]))\n-        {\n-            if (!wallet->mapWallet.count(cout.tx->tx->vin[0].prevout.hash)) break;\n-            cout = COutput(&wallet->mapWallet[cout.tx->tx->vin[0].prevout.hash], cout.tx->tx->vin[0].prevout.n, 0, true, true);\n+    for (auto& group : wallet->ListCoins()) {\n+        auto& resultGroup = mapCoins[QString::fromStdString(CBitcoinAddress(group.first).ToString())];\n+        for (auto& coin : group.second) {\n+            resultGroup.emplace_back(std::move(coin));\n         }\n-\n-        CTxDestination address;\n-        if(!out.fSpendable || !ExtractDestination(cout.tx->tx->vout[cout.i].scriptPubKey, address))\n-            continue;\n-        mapCoins[QString::fromStdString(CBitcoinAddress(address).ToString())].push_back(out);\n     }\n }\n \n@@ -655,11 +627,7 @@ void WalletModel::listLockedCoins(std::vector<COutPoint>& vOutpts)\n \n void WalletModel::loadReceiveRequests(std::vector<std::string>& vReceiveRequests)\n {\n-    LOCK(wallet->cs_wallet);\n-    BOOST_FOREACH(const PAIRTYPE(CTxDestination, CAddressBookData)& item, wallet->mapAddressBook)\n-        BOOST_FOREACH(const PAIRTYPE(std::string, std::string)& item2, item.second.destdata)\n-            if (item2.first.size() > 2 && item2.first.substr(0,2) == \"rr\") // receive request\n-                vReceiveRequests.push_back(item2.second);\n+    vReceiveRequests = wallet->GetDestValues(\"rr\"); // receive request\n }\n \n bool WalletModel::saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest)\n@@ -679,11 +647,7 @@ bool WalletModel::saveReceiveRequest(const std::string &sAddress, const int64_t\n \n bool WalletModel::transactionCanBeAbandoned(uint256 hash) const\n {\n-    LOCK2(cs_main, wallet->cs_wallet);\n-    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n-    if (!wtx || wtx->isAbandoned() || wtx->GetDepthInMainChain() > 0 || wtx->InMempool())\n-        return false;\n-    return true;\n+    return wallet->TransactionCanBeAbandoned(hash);\n }\n \n bool WalletModel::abandonTransaction(uint256 hash) const\n@@ -692,6 +656,84 @@ bool WalletModel::abandonTransaction(uint256 hash) const\n     return wallet->AbandonTransaction(hash);\n }\n \n+bool WalletModel::transactionSignalsRBF(uint256 hash) const\n+{\n+    LOCK2(cs_main, wallet->cs_wallet);\n+    const CWalletTx *wtx = wallet->GetWalletTx(hash);\n+    return wtx && SignalsOptInRBF(*wtx);\n+}\n+\n+bool WalletModel::bumpFee(uint256 hash)\n+{\n+    std::unique_ptr<CFeeBumper> feeBump;\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        feeBump.reset(new CFeeBumper(wallet, hash, nTxConfirmTarget, false, 0, true));\n+    }\n+    if (feeBump->getResult() != BumpFeeResult::OK)\n+    {\n+        QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Increasing transaction fee failed\") + \"<br />(\" +\n+            (feeBump->getErrors().size() ? QString::fromStdString(feeBump->getErrors()[0]) : \"\") +\")\");\n+         return false;\n+    }\n+\n+    // allow a user based fee verification\n+    QString questionString = tr(\"Do you want to increase the fee?\");\n+    questionString.append(\"<br />\");\n+    CAmount oldFee = feeBump->getOldFee();\n+    CAmount newFee = feeBump->getNewFee();\n+    questionString.append(\"<table style=\\\"text-align: left;\\\">\");\n+    questionString.append(\"<tr><td>\");\n+    questionString.append(tr(\"Current fee:\"));\n+    questionString.append(\"</td><td>\");\n+    questionString.append(BitcoinUnits::formatHtmlWithUnit(getOptionsModel()->getDisplayUnit(), oldFee));\n+    questionString.append(\"</td></tr><tr><td>\");\n+    questionString.append(tr(\"Increase:\"));\n+    questionString.append(\"</td><td>\");\n+    questionString.append(BitcoinUnits::formatHtmlWithUnit(getOptionsModel()->getDisplayUnit(), newFee - oldFee));\n+    questionString.append(\"</td></tr><tr><td>\");\n+    questionString.append(tr(\"New fee:\"));\n+    questionString.append(\"</td><td>\");\n+    questionString.append(BitcoinUnits::formatHtmlWithUnit(getOptionsModel()->getDisplayUnit(), newFee));\n+    questionString.append(\"</td></tr></table>\");\n+    SendConfirmationDialog confirmationDialog(tr(\"Confirm fee bump\"), questionString);\n+    confirmationDialog.exec();\n+    QMessageBox::StandardButton retval = (QMessageBox::StandardButton)confirmationDialog.result();\n+\n+    // cancel sign&broadcast if users doesn't want to bump the fee\n+    if (retval != QMessageBox::Yes) {\n+        return false;\n+    }\n+\n+    WalletModel::UnlockContext ctx(requestUnlock());\n+    if(!ctx.isValid())\n+    {\n+        return false;\n+    }\n+\n+    // sign bumped transaction\n+    bool res = false;\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        res = feeBump->signTransaction(wallet);\n+    }\n+    if (!res) {\n+        QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Can't sign transaction.\"));\n+        return false;\n+    }\n+    // commit the bumped transaction\n+    {\n+        LOCK2(cs_main, wallet->cs_wallet);\n+        res = feeBump->commit(wallet);\n+    }\n+    if(!res) {\n+        QMessageBox::critical(0, tr(\"Fee bump error\"), tr(\"Could not commit transaction\") + \"<br />(\" +\n+            QString::fromStdString(feeBump->getErrors()[0])+\")\");\n+         return false;\n+    }\n+    return true;\n+}\n+\n bool WalletModel::isWalletEnabled()\n {\n    return !GetBoolArg(\"-disablewallet\", DEFAULT_DISABLE_WALLET);\n@@ -706,3 +748,8 @@ int WalletModel::getDefaultConfirmTarget() const\n {\n     return nTxConfirmTarget;\n }\n+\n+bool WalletModel::getDefaultWalletRbf() const\n+{\n+    return fWalletRbf;\n+}"
      },
      {
        "sha": "df5acaf6840e6f6803199aca91996b51412cf6d1",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -207,12 +207,17 @@ class WalletModel : public QObject\n     bool transactionCanBeAbandoned(uint256 hash) const;\n     bool abandonTransaction(uint256 hash) const;\n \n+    bool transactionSignalsRBF(uint256 hash) const;\n+    bool bumpFee(uint256 hash);\n+\n     static bool isWalletEnabled();\n \n     bool hdEnabled() const;\n \n     int getDefaultConfirmTarget() const;\n \n+    bool getDefaultWalletRbf() const;\n+\n private:\n     CWallet *wallet;\n     bool fHaveWatchOnly;"
      },
      {
        "sha": "de7553c825509cdfe873c0d3529bfdb805269f2b",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 201,
        "deletions": 35,
        "changes": 236,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -16,11 +16,26 @@\n \n #include <stdlib.h>\n #include <limits>\n+#include <chrono>\n+#include <thread>\n \n #ifndef WIN32\n #include <sys/time.h>\n #endif\n \n+#ifdef HAVE_SYS_GETRANDOM\n+#include <sys/syscall.h>\n+#include <linux/random.h>\n+#endif\n+#ifdef HAVE_GETENTROPY\n+#include <unistd.h>\n+#endif\n+#ifdef HAVE_SYSCTL_ARND\n+#include <sys/sysctl.h>\n+#endif\n+\n+#include <mutex>\n+\n #include <openssl/err.h>\n #include <openssl/rand.h>\n \n@@ -32,15 +47,22 @@ static void RandFailure()\n \n static inline int64_t GetPerformanceCounter()\n {\n-    int64_t nCounter = 0;\n-#ifdef WIN32\n-    QueryPerformanceCounter((LARGE_INTEGER*)&nCounter);\n+    // Read the hardware time stamp counter when available.\n+    // See https://en.wikipedia.org/wiki/Time_Stamp_Counter for more information.\n+#if defined(_MSC_VER) && (defined(_M_IX86) || defined(_M_X64))\n+    return __rdtsc();\n+#elif !defined(_MSC_VER) && defined(__i386__)\n+    uint64_t r = 0;\n+    __asm__ volatile (\"rdtsc\" : \"=A\"(r)); // Constrain the r variable to the eax:edx pair.\n+    return r;\n+#elif !defined(_MSC_VER) && (defined(__x86_64__) || defined(__amd64__))\n+    uint64_t r1 = 0, r2 = 0;\n+    __asm__ volatile (\"rdtsc\" : \"=a\"(r1), \"=d\"(r2)); // Constrain r1 to rax and r2 to rdx.\n+    return (r2 << 32) | r1;\n #else\n-    timeval t;\n-    gettimeofday(&t, NULL);\n-    nCounter = (int64_t)(t.tv_sec * 1000000 + t.tv_usec);\n+    // Fall back to using C++11 clock (usually microsecond or nanosecond precision)\n+    return std::chrono::high_resolution_clock::now().time_since_epoch().count();\n #endif\n-    return nCounter;\n }\n \n void RandAddSeed()\n@@ -80,7 +102,7 @@ static void RandAddSeedPerfmon()\n     if (ret == ERROR_SUCCESS) {\n         RAND_add(vData.data(), nSize, nSize / 100.0);\n         memory_cleanse(vData.data(), nSize);\n-        LogPrint(\"rand\", \"%s: %lu bytes\\n\", __func__, nSize);\n+        LogPrint(BCLog::RAND, \"%s: %lu bytes\\n\", __func__, nSize);\n     } else {\n         static bool warned = false; // Warn only once\n         if (!warned) {\n@@ -91,34 +113,86 @@ static void RandAddSeedPerfmon()\n #endif\n }\n \n+#ifndef WIN32\n+/** Fallback: get 32 bytes of system entropy from /dev/urandom. The most\n+ * compatible way to get cryptographic randomness on UNIX-ish platforms.\n+ */\n+void GetDevURandom(unsigned char *ent32)\n+{\n+    int f = open(\"/dev/urandom\", O_RDONLY);\n+    if (f == -1) {\n+        RandFailure();\n+    }\n+    int have = 0;\n+    do {\n+        ssize_t n = read(f, ent32 + have, NUM_OS_RANDOM_BYTES - have);\n+        if (n <= 0 || n + have > NUM_OS_RANDOM_BYTES) {\n+            RandFailure();\n+        }\n+        have += n;\n+    } while (have < NUM_OS_RANDOM_BYTES);\n+    close(f);\n+}\n+#endif\n+\n /** Get 32 bytes of system entropy. */\n-static void GetOSRand(unsigned char *ent32)\n+void GetOSRand(unsigned char *ent32)\n {\n-#ifdef WIN32\n+#if defined(WIN32)\n     HCRYPTPROV hProvider;\n     int ret = CryptAcquireContextW(&hProvider, NULL, NULL, PROV_RSA_FULL, CRYPT_VERIFYCONTEXT);\n     if (!ret) {\n         RandFailure();\n     }\n-    ret = CryptGenRandom(hProvider, 32, ent32);\n+    ret = CryptGenRandom(hProvider, NUM_OS_RANDOM_BYTES, ent32);\n     if (!ret) {\n         RandFailure();\n     }\n     CryptReleaseContext(hProvider, 0);\n-#else\n-    int f = open(\"/dev/urandom\", O_RDONLY);\n-    if (f == -1) {\n+#elif defined(HAVE_SYS_GETRANDOM)\n+    /* Linux. From the getrandom(2) man page:\n+     * \"If the urandom source has been initialized, reads of up to 256 bytes\n+     * will always return as many bytes as requested and will not be\n+     * interrupted by signals.\"\n+     */\n+    int rv = syscall(SYS_getrandom, ent32, NUM_OS_RANDOM_BYTES, 0);\n+    if (rv != NUM_OS_RANDOM_BYTES) {\n+        if (rv < 0 && errno == ENOSYS) {\n+            /* Fallback for kernel <3.17: the return value will be -1 and errno\n+             * ENOSYS if the syscall is not available, in that case fall back\n+             * to /dev/urandom.\n+             */\n+            GetDevURandom(ent32);\n+        } else {\n+            RandFailure();\n+        }\n+    }\n+#elif defined(HAVE_GETENTROPY)\n+    /* On OpenBSD this can return up to 256 bytes of entropy, will return an\n+     * error if more are requested.\n+     * The call cannot return less than the requested number of bytes.\n+     */\n+    if (getentropy(ent32, NUM_OS_RANDOM_BYTES) != 0) {\n         RandFailure();\n     }\n+#elif defined(HAVE_SYSCTL_ARND)\n+    /* FreeBSD and similar. It is possible for the call to return less\n+     * bytes than requested, so need to read in a loop.\n+     */\n+    static const int name[2] = {CTL_KERN, KERN_ARND};\n     int have = 0;\n     do {\n-        ssize_t n = read(f, ent32 + have, 32 - have);\n-        if (n <= 0 || n + have > 32) {\n+        size_t len = NUM_OS_RANDOM_BYTES - have;\n+        if (sysctl(name, ARRAYLEN(name), ent32 + have, &len, NULL, 0) != 0) {\n             RandFailure();\n         }\n-        have += n;\n-    } while (have < 32);\n-    close(f);\n+        have += len;\n+    } while (have < NUM_OS_RANDOM_BYTES);\n+#else\n+    /* Fall back to /dev/urandom if there is no specific method implemented to\n+     * get system entropy for this OS.\n+     */\n+    GetDevURandom(ent32);\n #endif\n }\n \n@@ -129,6 +203,43 @@ void GetRandBytes(unsigned char* buf, int num)\n     }\n }\n \n+static void AddDataToRng(void* data, size_t len);\n+\n+void RandAddSeedSleep()\n+{\n+    int64_t nPerfCounter1 = GetPerformanceCounter();\n+    std::this_thread::sleep_for(std::chrono::milliseconds(1));\n+    int64_t nPerfCounter2 = GetPerformanceCounter();\n+\n+    // Combine with and update state\n+    AddDataToRng(&nPerfCounter1, sizeof(nPerfCounter1));\n+    AddDataToRng(&nPerfCounter2, sizeof(nPerfCounter2));\n+\n+    memory_cleanse(&nPerfCounter1, sizeof(nPerfCounter1));\n+    memory_cleanse(&nPerfCounter2, sizeof(nPerfCounter2));\n+}\n+\n+\n+static std::mutex cs_rng_state;\n+static unsigned char rng_state[32] = {0};\n+static uint64_t rng_counter = 0;\n+\n+static void AddDataToRng(void* data, size_t len) {\n+    CSHA512 hasher;\n+    hasher.Write((const unsigned char*)&len, sizeof(len));\n+    hasher.Write((const unsigned char*)data, len);\n+    unsigned char buf[64];\n+    {\n+        std::unique_lock<std::mutex> lock(cs_rng_state);\n+        hasher.Write(rng_state, sizeof(rng_state));\n+        hasher.Write((const unsigned char*)&rng_counter, sizeof(rng_counter));\n+        ++rng_counter;\n+        hasher.Finalize(buf);\n+        memcpy(rng_state, buf + 32, 32);\n+    }\n+    memory_cleanse(buf, 64);\n+}\n+\n void GetStrongRandBytes(unsigned char* out, int num)\n {\n     assert(num <= 32);\n@@ -144,8 +255,17 @@ void GetStrongRandBytes(unsigned char* out, int num)\n     GetOSRand(buf);\n     hasher.Write(buf, 32);\n \n+    // Combine with and update state\n+    {\n+        std::unique_lock<std::mutex> lock(cs_rng_state);\n+        hasher.Write(rng_state, sizeof(rng_state));\n+        hasher.Write((const unsigned char*)&rng_counter, sizeof(rng_counter));\n+        ++rng_counter;\n+        hasher.Finalize(buf);\n+        memcpy(rng_state, buf + 32, 32);\n+    }\n+\n     // Produce output\n-    hasher.Finalize(buf);\n     memcpy(out, buf, num);\n     memory_cleanse(buf, 64);\n }\n@@ -177,21 +297,67 @@ uint256 GetRandHash()\n     return hash;\n }\n \n-FastRandomContext::FastRandomContext(bool fDeterministic)\n+void FastRandomContext::RandomSeed()\n {\n-    // The seed values have some unlikely fixed points which we avoid.\n-    if (fDeterministic) {\n-        Rz = Rw = 11;\n-    } else {\n-        uint32_t tmp;\n-        do {\n-            GetRandBytes((unsigned char*)&tmp, 4);\n-        } while (tmp == 0 || tmp == 0x9068ffffU);\n-        Rz = tmp;\n-        do {\n-            GetRandBytes((unsigned char*)&tmp, 4);\n-        } while (tmp == 0 || tmp == 0x464fffffU);\n-        Rw = tmp;\n-    }\n+    uint256 seed = GetRandHash();\n+    rng.SetKey(seed.begin(), 32);\n+    requires_seed = false;\n+}\n+\n+FastRandomContext::FastRandomContext(const uint256& seed) : requires_seed(false), bytebuf_size(0), bitbuf_size(0)\n+{\n+    rng.SetKey(seed.begin(), 32);\n }\n \n+bool Random_SanityCheck()\n+{\n+    uint64_t start = GetPerformanceCounter();\n+\n+    /* This does not measure the quality of randomness, but it does test that\n+     * OSRandom() overwrites all 32 bytes of the output given a maximum\n+     * number of tries.\n+     */\n+    static const ssize_t MAX_TRIES = 1024;\n+    uint8_t data[NUM_OS_RANDOM_BYTES];\n+    bool overwritten[NUM_OS_RANDOM_BYTES] = {}; /* Tracks which bytes have been overwritten at least once */\n+    int num_overwritten;\n+    int tries = 0;\n+    /* Loop until all bytes have been overwritten at least once, or max number tries reached */\n+    do {\n+        memset(data, 0, NUM_OS_RANDOM_BYTES);\n+        GetOSRand(data);\n+        for (int x=0; x < NUM_OS_RANDOM_BYTES; ++x) {\n+            overwritten[x] |= (data[x] != 0);\n+        }\n+\n+        num_overwritten = 0;\n+        for (int x=0; x < NUM_OS_RANDOM_BYTES; ++x) {\n+            if (overwritten[x]) {\n+                num_overwritten += 1;\n+            }\n+        }\n+\n+        tries += 1;\n+    } while (num_overwritten < NUM_OS_RANDOM_BYTES && tries < MAX_TRIES);\n+    if (num_overwritten != NUM_OS_RANDOM_BYTES) return false; /* If this failed, bailed out after too many tries */\n+\n+    // Check that GetPerformanceCounter increases at least during a GetOSRand() call + 1ms sleep.\n+    std::this_thread::sleep_for(std::chrono::milliseconds(1));\n+    uint64_t stop = GetPerformanceCounter();\n+    if (stop == start) return false;\n+\n+    // We called GetPerformanceCounter. Use it as entropy.\n+    RAND_add((const unsigned char*)&start, sizeof(start), 1);\n+    RAND_add((const unsigned char*)&stop, sizeof(stop), 1);\n+\n+    return true;\n+}\n+\n+FastRandomContext::FastRandomContext(bool fDeterministic) : requires_seed(!fDeterministic), bytebuf_size(0), bitbuf_size(0)\n+{\n+    if (!fDeterministic) {\n+        return;\n+    }\n+    uint256 seed;\n+    rng.SetKey(seed.begin(), 32);\n+}"
      },
      {
        "sha": "6a63d5742920954913d29d9954cfe750305557f7",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 95,
        "deletions": 7,
        "changes": 102,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,8 @@\n #ifndef BITCOIN_RANDOM_H\n #define BITCOIN_RANDOM_H\n \n+#include \"crypto/chacha20.h\"\n+#include \"crypto/common.h\"\n #include \"uint256.h\"\n \n #include <stdint.h>\n@@ -21,6 +23,13 @@ uint64_t GetRand(uint64_t nMax);\n int GetRandInt(int nMax);\n uint256 GetRandHash();\n \n+/**\n+ * Add a little bit of randomness to the output of GetStrongRangBytes.\n+ * This sleeps for a millisecond, so should only be called when there is\n+ * no other work to be done.\n+ */\n+void RandAddSeedSleep();\n+\n /**\n  * Function to gather random data from multiple sources, failing whenever any\n  * of those source fail to provide a result.\n@@ -33,17 +42,96 @@ void GetStrongRandBytes(unsigned char* buf, int num);\n  * This class is not thread-safe.\n  */\n class FastRandomContext {\n+private:\n+    bool requires_seed;\n+    ChaCha20 rng;\n+\n+    unsigned char bytebuf[64];\n+    int bytebuf_size;\n+\n+    uint64_t bitbuf;\n+    int bitbuf_size;\n+\n+    void RandomSeed();\n+\n+    void FillByteBuffer()\n+    {\n+        if (requires_seed) {\n+            RandomSeed();\n+        }\n+        rng.Output(bytebuf, sizeof(bytebuf));\n+        bytebuf_size = sizeof(bytebuf);\n+    }\n+\n+    void FillBitBuffer()\n+    {\n+        bitbuf = rand64();\n+        bitbuf_size = 64;\n+    }\n+\n public:\n-    explicit FastRandomContext(bool fDeterministic=false);\n+    explicit FastRandomContext(bool fDeterministic = false);\n+\n+    /** Initialize with explicit seed (only for testing) */\n+    explicit FastRandomContext(const uint256& seed);\n \n-    uint32_t rand32() {\n-        Rz = 36969 * (Rz & 65535) + (Rz >> 16);\n-        Rw = 18000 * (Rw & 65535) + (Rw >> 16);\n-        return (Rw << 16) + Rz;\n+    /** Generate a random 64-bit integer. */\n+    uint64_t rand64()\n+    {\n+        if (bytebuf_size < 8) FillByteBuffer();\n+        uint64_t ret = ReadLE64(bytebuf + 64 - bytebuf_size);\n+        bytebuf_size -= 8;\n+        return ret;\n     }\n \n-    uint32_t Rz;\n-    uint32_t Rw;\n+    /** Generate a random (bits)-bit integer. */\n+    uint64_t randbits(int bits) {\n+        if (bits == 0) {\n+            return 0;\n+        } else if (bits > 32) {\n+            return rand64() >> (64 - bits);\n+        } else {\n+            if (bitbuf_size < bits) FillBitBuffer();\n+            uint64_t ret = bitbuf & (~(uint64_t)0 >> (64 - bits));\n+            bitbuf >>= bits;\n+            bitbuf_size -= bits;\n+            return ret;\n+        }\n+    }\n+\n+    /** Generate a random integer in the range [0..range). */\n+    uint64_t randrange(uint64_t range)\n+    {\n+        --range;\n+        int bits = CountBits(range);\n+        while (true) {\n+            uint64_t ret = randbits(bits);\n+            if (ret <= range) return ret;\n+        }\n+    }\n+\n+    /** Generate a random 32-bit integer. */\n+    uint32_t rand32() { return randbits(32); }\n+\n+    /** Generate a random boolean. */\n+    bool randbool() { return randbits(1); }\n };\n \n+/* Number of random bytes returned by GetOSRand.\n+ * When changing this constant make sure to change all call sites, and make\n+ * sure that the underlying OS APIs for all platforms support the number.\n+ * (many cap out at 256 bytes).\n+ */\n+static const ssize_t NUM_OS_RANDOM_BYTES = 32;\n+\n+/** Get 32 bytes of system entropy. Do not use this in application code: use\n+ * GetStrongRandBytes instead.\n+ */\n+void GetOSRand(unsigned char *ent32);\n+\n+/** Check that OS randomness is available and returning the requested number\n+ * of bytes.\n+ */\n+bool Random_SanityCheck();\n+\n #endif // BITCOIN_RANDOM_H"
      },
      {
        "sha": "7537ed45027f510020b2ffdf76f3688ecbec2a78",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 9,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -5,10 +5,12 @@\n \n #include \"chain.h\"\n #include \"chainparams.h\"\n+#include \"core_io.h\"\n #include \"primitives/block.h\"\n #include \"primitives/transaction.h\"\n #include \"validation.h\"\n #include \"httpserver.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"streams.h\"\n #include \"sync.h\"\n@@ -55,13 +57,6 @@ struct CCoin {\n     }\n };\n \n-extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n-extern UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n-extern UniValue mempoolInfoToJSON();\n-extern UniValue mempoolToJSON(bool fVerbose = false);\n-extern void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-extern UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n-\n static bool RESTERR(HTTPRequest* req, enum HTTPStatusCode status, std::string message)\n {\n     req->WriteHeader(\"Content-Type\", \"text/plain\");\n@@ -385,7 +380,7 @@ static bool rest_tx(HTTPRequest* req, const std::string& strURIPart)\n \n     case RF_JSON: {\n         UniValue objTx(UniValue::VOBJ);\n-        TxToJSON(*tx, hashBlock, objTx);\n+        TxToUniv(*tx, hashBlock, objTx);\n         std::string strJSON = objTx.write() + \"\\n\";\n         req->WriteHeader(\"Content-Type\", \"application/json\");\n         req->WriteReply(HTTP_OK, strJSON);\n@@ -579,7 +574,7 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n \n             // include the script in a json output\n             UniValue o(UniValue::VOBJ);\n-            ScriptPubKeyToJSON(coin.out.scriptPubKey, o, true);\n+            ScriptPubKeyToUniv(coin.out.scriptPubKey, o, true);\n             utxo.push_back(Pair(\"scriptPubKey\", o));\n             utxos.push_back(utxo);\n         }"
      },
      {
        "sha": "b4b160aac9f715158c02aa026633821b361f033e",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 162,
        "deletions": 63,
        "changes": 225,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,13 +3,17 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"rpc/blockchain.h\"\n+\n #include \"amount.h\"\n #include \"chain.h\"\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"coins.h\"\n #include \"consensus/validation.h\"\n #include \"validation.h\"\n+#include \"core_io.h\"\n+#include \"policy/feerate.h\"\n #include \"policy/policy.h\"\n #include \"primitives/transaction.h\"\n #include \"rpc/server.h\"\n@@ -28,7 +32,6 @@\n \n #include <mutex>\n #include <condition_variable>\n-using namespace std;\n \n struct CUpdatedBlock\n {\n@@ -41,12 +44,9 @@ static std::condition_variable cond_blockchange;\n static CUpdatedBlock latestblock;\n \n extern void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry);\n-void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n \n double GetDifficulty(const CBlockIndex* blockindex)\n {\n-    // Floating point number that is a multiple of the minimum difficulty,\n-    // minimum difficulty = 1.0.\n     if (blockindex == NULL)\n     {\n         if (chainActive.Tip() == NULL)\n@@ -102,7 +102,7 @@ UniValue blockheaderToJSON(const CBlockIndex* blockindex)\n     return result;\n }\n \n-UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false)\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails)\n {\n     UniValue result(UniValue::VOBJ);\n     result.push_back(Pair(\"hash\", blockindex->GetBlockHash().GetHex()));\n@@ -124,7 +124,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n         if(txDetails)\n         {\n             UniValue objTx(UniValue::VOBJ);\n-            TxToJSON(*tx, uint256(), objTx);\n+            TxToUniv(*tx, uint256(), objTx);\n             txs.push_back(objTx);\n         }\n         else\n@@ -149,7 +149,7 @@ UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool tx\n UniValue getblockcount(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getblockcount\\n\"\n             \"\\nReturns the number of blocks in the longest blockchain.\\n\"\n             \"\\nResult:\\n\"\n@@ -166,7 +166,7 @@ UniValue getblockcount(const JSONRPCRequest& request)\n UniValue getbestblockhash(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getbestblockhash\\n\"\n             \"\\nReturns the hash of the best (tip) block in the longest blockchain.\\n\"\n             \"\\nResult:\\n\"\n@@ -187,13 +187,13 @@ void RPCNotifyBlockChange(bool ibd, const CBlockIndex * pindex)\n         latestblock.hash = pindex->GetBlockHash();\n         latestblock.height = pindex->nHeight;\n     }\n-\tcond_blockchange.notify_all();\n+    cond_blockchange.notify_all();\n }\n \n UniValue waitfornewblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"waitfornewblock (timeout)\\n\"\n             \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n@@ -231,7 +231,7 @@ UniValue waitfornewblock(const JSONRPCRequest& request)\n UniValue waitforblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"waitforblock <blockhash> (timeout)\\n\"\n             \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n             \"\\nReturns the current block on timeout or exit.\\n\"\n@@ -273,7 +273,7 @@ UniValue waitforblock(const JSONRPCRequest& request)\n UniValue waitforblockheight(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"waitforblockheight <height> (timeout)\\n\"\n             \"\\nWaits for (at least) block height and returns the height and hash\\n\"\n             \"of the current tip.\\n\"\n@@ -315,7 +315,7 @@ UniValue waitforblockheight(const JSONRPCRequest& request)\n UniValue getdifficulty(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getdifficulty\\n\"\n             \"\\nReturns the proof-of-work difficulty as a multiple of the minimum difficulty.\\n\"\n             \"\\nResult:\\n\"\n@@ -336,8 +336,6 @@ std::string EntryDescriptionString()\n            \"    \\\"modifiedfee\\\" : n,      (numeric) transaction fee with fee deltas used for mining priority\\n\"\n            \"    \\\"time\\\" : n,             (numeric) local time transaction entered pool in seconds since 1 Jan 1970 GMT\\n\"\n            \"    \\\"height\\\" : n,           (numeric) block height when transaction entered pool\\n\"\n-           \"    \\\"startingpriority\\\" : n, (numeric) DEPRECATED. Priority when transaction entered pool\\n\"\n-           \"    \\\"currentpriority\\\" : n,  (numeric) DEPRECATED. Transaction priority now\\n\"\n            \"    \\\"descendantcount\\\" : n,  (numeric) number of in-mempool descendant transactions (including this one)\\n\"\n            \"    \\\"descendantsize\\\" : n,   (numeric) virtual transaction size of in-mempool descendants (including this one)\\n\"\n            \"    \\\"descendantfees\\\" : n,   (numeric) modified fees (see above) of in-mempool descendants (including this one)\\n\"\n@@ -358,32 +356,30 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     info.push_back(Pair(\"modifiedfee\", ValueFromAmount(e.GetModifiedFee())));\n     info.push_back(Pair(\"time\", e.GetTime()));\n     info.push_back(Pair(\"height\", (int)e.GetHeight()));\n-    info.push_back(Pair(\"startingpriority\", e.GetPriority(e.GetHeight())));\n-    info.push_back(Pair(\"currentpriority\", e.GetPriority(chainActive.Height())));\n     info.push_back(Pair(\"descendantcount\", e.GetCountWithDescendants()));\n     info.push_back(Pair(\"descendantsize\", e.GetSizeWithDescendants()));\n     info.push_back(Pair(\"descendantfees\", e.GetModFeesWithDescendants()));\n     info.push_back(Pair(\"ancestorcount\", e.GetCountWithAncestors()));\n     info.push_back(Pair(\"ancestorsize\", e.GetSizeWithAncestors()));\n     info.push_back(Pair(\"ancestorfees\", e.GetModFeesWithAncestors()));\n     const CTransaction& tx = e.GetTx();\n-    set<string> setDepends;\n+    std::set<std::string> setDepends;\n     BOOST_FOREACH(const CTxIn& txin, tx.vin)\n     {\n         if (mempool.exists(txin.prevout.hash))\n             setDepends.insert(txin.prevout.hash.ToString());\n     }\n \n     UniValue depends(UniValue::VARR);\n-    BOOST_FOREACH(const string& dep, setDepends)\n+    BOOST_FOREACH(const std::string& dep, setDepends)\n     {\n         depends.push_back(dep);\n     }\n \n     info.push_back(Pair(\"depends\", depends));\n }\n \n-UniValue mempoolToJSON(bool fVerbose = false)\n+UniValue mempoolToJSON(bool fVerbose)\n {\n     if (fVerbose)\n     {\n@@ -400,7 +396,7 @@ UniValue mempoolToJSON(bool fVerbose = false)\n     }\n     else\n     {\n-        vector<uint256> vtxid;\n+        std::vector<uint256> vtxid;\n         mempool.queryHashes(vtxid);\n \n         UniValue a(UniValue::VARR);\n@@ -414,9 +410,10 @@ UniValue mempoolToJSON(bool fVerbose = false)\n UniValue getrawmempool(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getrawmempool ( verbose )\\n\"\n             \"\\nReturns all transaction ids in memory pool as a json array of string transaction ids.\\n\"\n+            \"\\nHint: use getmempoolentry to fetch a specific transaction from the mempool.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. verbose (boolean, optional, default=false) True for a json object, false for array of transaction ids\\n\"\n             \"\\nResult: (for verbose = false):\\n\"\n@@ -445,7 +442,7 @@ UniValue getrawmempool(const JSONRPCRequest& request)\n UniValue getmempoolancestors(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getmempoolancestors txid (verbose)\\n\"\n             \"\\nIf txid is in the mempool, returns all in-mempool ancestors.\\n\"\n             \"\\nArguments:\\n\"\n@@ -509,7 +506,7 @@ UniValue getmempoolancestors(const JSONRPCRequest& request)\n UniValue getmempooldescendants(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getmempooldescendants txid (verbose)\\n\"\n             \"\\nIf txid is in the mempool, returns all in-mempool descendants.\\n\"\n             \"\\nArguments:\\n\"\n@@ -573,7 +570,7 @@ UniValue getmempooldescendants(const JSONRPCRequest& request)\n UniValue getmempoolentry(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getmempoolentry txid\\n\"\n             \"\\nReturns mempool data for given transaction\\n\"\n             \"\\nArguments:\\n\"\n@@ -606,7 +603,7 @@ UniValue getmempoolentry(const JSONRPCRequest& request)\n UniValue getblockhash(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getblockhash height\\n\"\n             \"\\nReturns hash of block in best-block-chain at height provided.\\n\"\n             \"\\nArguments:\\n\"\n@@ -631,7 +628,7 @@ UniValue getblockhash(const JSONRPCRequest& request)\n UniValue getblockheader(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getblockheader \\\"hash\\\" ( verbose )\\n\"\n             \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for blockheader 'hash'.\\n\"\n             \"If verbose is true, returns an Object with information about blockheader <hash>.\\n\"\n@@ -690,14 +687,17 @@ UniValue getblockheader(const JSONRPCRequest& request)\n UniValue getblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n-            \"getblock \\\"blockhash\\\" ( verbose )\\n\"\n-            \"\\nIf verbose is false, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n-            \"If verbose is true, returns an Object with information about block <hash>.\\n\"\n+        throw std::runtime_error(\n+            \"getblock \\\"blockhash\\\" ( verbosity ) \\n\"\n+            \"\\nIf verbosity is 0, returns a string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"If verbosity is 1, returns an Object with information about block <hash>.\\n\"\n+            \"If verbosity is 2, returns an Object with information about block <hash> and information about each transaction. \\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"blockhash\\\"          (string, required) The block hash\\n\"\n-            \"2. verbose                (boolean, optional, default=true) true for a json object, false for the hex encoded data\\n\"\n-            \"\\nResult (for verbose = true):\\n\"\n+            \"2. verbosity              (numeric, optional, default=1) 0 for hex encoded data, 1 for a json object, and 2 for json object with transaction data\\n\"\n+            \"\\nResult (for verbosity = 0):\\n\"\n+            \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"\\nResult (for verbosity = 1):\\n\"\n             \"{\\n\"\n             \"  \\\"hash\\\" : \\\"hash\\\",     (string) the block hash (same as provided)\\n\"\n             \"  \\\"confirmations\\\" : n,   (numeric) The number of confirmations, or -1 if the block is not on the main chain\\n\"\n@@ -721,8 +721,14 @@ UniValue getblock(const JSONRPCRequest& request)\n             \"  \\\"previousblockhash\\\" : \\\"hash\\\",  (string) The hash of the previous block\\n\"\n             \"  \\\"nextblockhash\\\" : \\\"hash\\\"       (string) The hash of the next block\\n\"\n             \"}\\n\"\n-            \"\\nResult (for verbose=false):\\n\"\n-            \"\\\"data\\\"             (string) A string that is serialized, hex-encoded data for block 'hash'.\\n\"\n+            \"\\nResult (for verbosity = 2):\\n\"\n+            \"{\\n\"\n+            \"  ...,                     Same output as verbosity = 1.\\n\"\n+            \"  \\\"tx\\\" : [               (array of Objects) The transactions in the format of the getrawtransaction RPC. Different from verbosity = 1 \\\"tx\\\" result.\\n\"\n+            \"         ,...\\n\"\n+            \"  ],\\n\"\n+            \"  ,...                     Same output as verbosity = 1.\\n\"\n+            \"}\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n             + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n@@ -733,9 +739,13 @@ UniValue getblock(const JSONRPCRequest& request)\n     std::string strHash = request.params[0].get_str();\n     uint256 hash(uint256S(strHash));\n \n-    bool fVerbose = true;\n-    if (request.params.size() > 1)\n-        fVerbose = request.params[1].get_bool();\n+    int verbosity = 1;\n+    if (request.params.size() > 1) {\n+        if(request.params[1].isNum())\n+            verbosity = request.params[1].get_int();\n+        else\n+            verbosity = request.params[1].get_bool() ? 1 : 0;\n+    }\n \n     if (mapBlockIndex.count(hash) == 0)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n@@ -744,20 +754,25 @@ UniValue getblock(const JSONRPCRequest& request)\n     CBlockIndex* pblockindex = mapBlockIndex[hash];\n \n     if (fHavePruned && !(pblockindex->nStatus & BLOCK_HAVE_DATA) && pblockindex->nTx > 0)\n-        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Block not available (pruned data)\");\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Block not available (pruned data)\");\n \n-    if(!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n-        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Can't read block from disk\");\n+    if (!ReadBlockFromDisk(block, pblockindex, Params().GetConsensus()))\n+        // Block not found on disk. This could be because we have the block\n+        // header in our index but don't have the block (for example if a\n+        // non-whitelisted node sends us an unrequested long chain of valid\n+        // blocks, we add the headers to our index, but don't accept the\n+        // block).\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Block not found on disk\");\n \n-    if (!fVerbose)\n+    if (verbosity <= 0)\n     {\n         CDataStream ssBlock(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n         ssBlock << block;\n         std::string strHex = HexStr(ssBlock.begin(), ssBlock.end());\n         return strHex;\n     }\n \n-    return blockToJSON(block, pblockindex);\n+    return blockToJSON(block, pblockindex, verbosity >= 2);\n }\n \n struct CCoinsStats\n@@ -817,7 +832,7 @@ static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n UniValue pruneblockchain(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"pruneblockchain\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"height\\\"       (numeric, required) The block height to prune up to. May be set to a discrete height, or a unix timestamp\\n\"\n@@ -829,7 +844,7 @@ UniValue pruneblockchain(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"pruneblockchain\", \"1000\"));\n \n     if (!fPruneMode)\n-        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Cannot prune blocks because node is not in prune mode.\");\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Cannot prune blocks because node is not in prune mode.\");\n \n     LOCK(cs_main);\n \n@@ -841,21 +856,21 @@ UniValue pruneblockchain(const JSONRPCRequest& request)\n     // too low to be a block time (corresponds to timestamp from Sep 2001).\n     if (heightParam > 1000000000) {\n         // Add a 2 hour buffer to include blocks which might have had old timestamps\n-        CBlockIndex* pindex = chainActive.FindEarliestAtLeast(heightParam - 7200);\n+        CBlockIndex* pindex = chainActive.FindEarliestAtLeast(heightParam - TIMESTAMP_WINDOW);\n         if (!pindex) {\n-            throw JSONRPCError(RPC_INTERNAL_ERROR, \"Could not find block with at least the specified timestamp.\");\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"Could not find block with at least the specified timestamp.\");\n         }\n         heightParam = pindex->nHeight;\n     }\n \n     unsigned int height = (unsigned int) heightParam;\n     unsigned int chainHeight = (unsigned int) chainActive.Height();\n     if (chainHeight < Params().PruneAfterHeight())\n-        throw JSONRPCError(RPC_INTERNAL_ERROR, \"Blockchain is too short for pruning.\");\n+        throw JSONRPCError(RPC_MISC_ERROR, \"Blockchain is too short for pruning.\");\n     else if (height > chainHeight)\n         throw JSONRPCError(RPC_INVALID_PARAMETER, \"Blockchain is shorter than the attempted prune height.\");\n     else if (height > chainHeight - MIN_BLOCKS_TO_KEEP) {\n-        LogPrint(\"rpc\", \"Attempt to prune blocks close to the tip.  Retaining the minimum number of blocks.\");\n+        LogPrint(BCLog::RPC, \"Attempt to prune blocks close to the tip.  Retaining the minimum number of blocks.\");\n         height = chainHeight - MIN_BLOCKS_TO_KEEP;\n     }\n \n@@ -866,7 +881,7 @@ UniValue pruneblockchain(const JSONRPCRequest& request)\n UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"gettxoutsetinfo\\n\"\n             \"\\nReturns statistics about the unspent transaction output set.\\n\"\n             \"Note this call may take some time.\\n\"\n@@ -906,7 +921,7 @@ UniValue gettxoutsetinfo(const JSONRPCRequest& request)\n UniValue gettxout(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"gettxout \\\"txid\\\" n ( include_mempool )\\n\"\n             \"\\nReturns details about an unspent transaction output.\\n\"\n             \"\\nArguments:\\n\"\n@@ -975,7 +990,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n         ret.push_back(Pair(\"confirmations\", pindex->nHeight - coins.nHeight + 1));\n     ret.push_back(Pair(\"value\", ValueFromAmount(coins.vout[n].nValue)));\n     UniValue o(UniValue::VOBJ);\n-    ScriptPubKeyToJSON(coins.vout[n].scriptPubKey, o, true);\n+    ScriptPubKeyToUniv(coins.vout[n].scriptPubKey, o, true);\n     ret.push_back(Pair(\"scriptPubKey\", o));\n     ret.push_back(Pair(\"version\", coins.nVersion));\n     ret.push_back(Pair(\"coinbase\", coins.fCoinBase));\n@@ -988,7 +1003,7 @@ UniValue verifychain(const JSONRPCRequest& request)\n     int nCheckLevel = GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL);\n     int nCheckDepth = GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS);\n     if (request.fHelp || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"verifychain ( checklevel nblocks )\\n\"\n             \"\\nVerifies blockchain database.\\n\"\n             \"\\nArguments:\\n\"\n@@ -1059,6 +1074,17 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n     rv.push_back(Pair(\"startTime\", consensusParams.vDeployments[id].nStartTime));\n     rv.push_back(Pair(\"timeout\", consensusParams.vDeployments[id].nTimeout));\n     rv.push_back(Pair(\"since\", VersionBitsTipStateSinceHeight(consensusParams, id)));\n+    if (THRESHOLD_STARTED == thresholdState)\n+    {\n+        UniValue statsUV(UniValue::VOBJ);\n+        BIP9Stats statsStruct = VersionBitsTipStatistics(consensusParams, id);\n+        statsUV.push_back(Pair(\"period\", statsStruct.period));\n+        statsUV.push_back(Pair(\"threshold\", statsStruct.threshold));\n+        statsUV.push_back(Pair(\"elapsed\", statsStruct.elapsed));\n+        statsUV.push_back(Pair(\"count\", statsStruct.count));\n+        statsUV.push_back(Pair(\"possible\", statsStruct.possible));\n+        rv.push_back(Pair(\"statistics\", statsUV));\n+    }\n     return rv;\n }\n \n@@ -1074,7 +1100,7 @@ void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const std::string &name,\n UniValue getblockchaininfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getblockchaininfo\\n\"\n             \"Returns an object containing various state info regarding blockchain processing.\\n\"\n             \"\\nResult:\\n\"\n@@ -1104,7 +1130,14 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"        \\\"bit\\\": xx,             (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n             \"        \\\"startTime\\\": xx,       (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n             \"        \\\"timeout\\\": xx,         (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n-            \"        \\\"since\\\": xx            (numeric) height of the first block to which the status applies\\n\"\n+            \"        \\\"since\\\": xx,           (numeric) height of the first block to which the status applies\\n\"\n+            \"        \\\"statistics\\\": {        (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n+            \"           \\\"period\\\": xx,       (numeric) the length in blocks of the BIP9 signalling period \\n\"\n+            \"           \\\"threshold\\\": xx,    (numeric) the number of blocks with the version bit set required to activate the feature \\n\"\n+            \"           \\\"elapsed\\\": xx,      (numeric) the number of blocks elapsed since the beginning of the current period \\n\"\n+            \"           \\\"count\\\": xx,        (numeric) the number of blocks with the version bit set in the current period \\n\"\n+            \"           \\\"possible\\\": xx      (boolean) returns false if there are not enough blocks left in this period to pass activation threshold \\n\"\n+            \"        }\\n\"\n             \"     }\\n\"\n             \"  }\\n\"\n             \"}\\n\"\n@@ -1167,7 +1200,7 @@ struct CompareBlocksByHeight\n UniValue getchaintips(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getchaintips\\n\"\n             \"Return information about all known tips in the block tree,\"\n             \" including the main chain as well as orphaned branches.\\n\"\n@@ -1200,7 +1233,7 @@ UniValue getchaintips(const JSONRPCRequest& request)\n     LOCK(cs_main);\n \n     /*\n-     * Idea:  the set of chain tips is chainActive.tip, plus orphan blocks which do not have another orphan building off of them. \n+     * Idea:  the set of chain tips is chainActive.tip, plus orphan blocks which do not have another orphan building off of them.\n      * Algorithm:\n      *  - Make one pass through mapBlockIndex, picking out the orphan blocks, and also storing a set of the orphan block's pprev pointers.\n      *  - Iterate through the orphan blocks. If the block isn't pointed to by another orphan, it is a chain tip.\n@@ -1239,7 +1272,7 @@ UniValue getchaintips(const JSONRPCRequest& request)\n         const int branchLen = block->nHeight - chainActive.FindFork(block)->nHeight;\n         obj.push_back(Pair(\"branchlen\", branchLen));\n \n-        string status;\n+        std::string status;\n         if (chainActive.Contains(block)) {\n             // This block is part of the currently active chain.\n             status = \"active\";\n@@ -1283,7 +1316,7 @@ UniValue mempoolInfoToJSON()\n UniValue getmempoolinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getmempoolinfo\\n\"\n             \"\\nReturns details on the active state of the TX memory pool.\\n\"\n             \"\\nResult:\\n\"\n@@ -1305,7 +1338,7 @@ UniValue getmempoolinfo(const JSONRPCRequest& request)\n UniValue preciousblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"preciousblock \\\"blockhash\\\"\\n\"\n             \"\\nTreats a block as if it were received before others with the same work.\\n\"\n             \"\\nA later preciousblock call can override the effect of an earlier one.\\n\"\n@@ -1343,7 +1376,7 @@ UniValue preciousblock(const JSONRPCRequest& request)\n UniValue invalidateblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"invalidateblock \\\"blockhash\\\"\\n\"\n             \"\\nPermanently marks a block as invalid, as if it violated a consensus rule.\\n\"\n             \"\\nArguments:\\n\"\n@@ -1381,7 +1414,7 @@ UniValue invalidateblock(const JSONRPCRequest& request)\n UniValue reconsiderblock(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"reconsiderblock \\\"blockhash\\\"\\n\"\n             \"\\nRemoves invalidity status of a block and its descendants, reconsider them for activation.\\n\"\n             \"This can be used to undo the effects of invalidateblock.\\n\"\n@@ -1415,13 +1448,79 @@ UniValue reconsiderblock(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+UniValue getchaintxstats(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"getchaintxstats ( nblocks blockhash )\\n\"\n+            \"\\nCompute statistics about the total number and rate of transactions in the chain.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. nblocks      (numeric, optional) Size of the window in number of blocks (default: one month).\\n\"\n+            \"2. \\\"blockhash\\\"  (string, optional) The hash of the block that ends the window.\\n\"\n+            \"\\nResult:\\n\"\n+            \"{\\n\"\n+            \"  \\\"time\\\": xxxxx,        (numeric) The timestamp for the statistics in UNIX format.\\n\"\n+            \"  \\\"txcount\\\": xxxxx,     (numeric) The total number of transactions in the chain up to that point.\\n\"\n+            \"  \\\"txrate\\\": x.xx,       (numeric) The average rate of transactions per second in the window.\\n\"\n+            \"}\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"getchaintxstats\", \"\")\n+            + HelpExampleRpc(\"getchaintxstats\", \"2016\")\n+        );\n+\n+    const CBlockIndex* pindex;\n+    int blockcount = 30 * 24 * 60 * 60 / Params().GetConsensus().nPowTargetSpacing; // By default: 1 month\n+\n+    if (request.params.size() > 0 && !request.params[0].isNull()) {\n+        blockcount = request.params[0].get_int();\n+    }\n+\n+    bool havehash = request.params.size() > 1 && !request.params[1].isNull();\n+    uint256 hash;\n+    if (havehash) {\n+        hash = uint256S(request.params[1].get_str());\n+    }\n+\n+    {\n+        LOCK(cs_main);\n+        if (havehash) {\n+            auto it = mapBlockIndex.find(hash);\n+            if (it == mapBlockIndex.end()) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+            }\n+            pindex = it->second;\n+            if (!chainActive.Contains(pindex)) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Block is not in main chain\");\n+            }\n+        } else {\n+            pindex = chainActive.Tip();\n+        }\n+    }\n+\n+    if (blockcount < 1 || blockcount >= pindex->nHeight) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Invalid block count: should be between 1 and the block's height\");\n+    }\n+\n+    const CBlockIndex* pindexPast = pindex->GetAncestor(pindex->nHeight - blockcount);\n+    int nTimeDiff = pindex->GetMedianTimePast() - pindexPast->GetMedianTimePast();\n+    int nTxDiff = pindex->nChainTx - pindexPast->nChainTx;\n+\n+    UniValue ret(UniValue::VOBJ);\n+    ret.push_back(Pair(\"time\", (int64_t)pindex->nTime));\n+    ret.push_back(Pair(\"txcount\", (int64_t)pindex->nChainTx));\n+    ret.push_back(Pair(\"txrate\", ((double)nTxDiff) / nTimeDiff));\n+\n+    return ret;\n+}\n+\n static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafe argNames\n   //  --------------------- ------------------------  -----------------------  ------ ----------\n     { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true,  {} },\n+    { \"blockchain\",         \"getchaintxstats\",        &getchaintxstats,        true,  {\"nblocks\", \"blockhash\"} },\n     { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true,  {} },\n     { \"blockchain\",         \"getblockcount\",          &getblockcount,          true,  {} },\n-    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbose\"} },\n+    { \"blockchain\",         \"getblock\",               &getblock,               true,  {\"blockhash\",\"verbosity|verbose\"} },\n     { \"blockchain\",         \"getblockhash\",           &getblockhash,           true,  {\"height\"} },\n     { \"blockchain\",         \"getblockheader\",         &getblockheader,         true,  {\"blockhash\",\"verbose\"} },\n     { \"blockchain\",         \"getchaintips\",           &getchaintips,           true,  {} },"
      },
      {
        "sha": "c021441b0a731076f2d8014e1c4c82f9c103fa74",
        "filename": "src/rpc/blockchain.h",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/blockchain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/blockchain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,40 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_RPC_BLOCKCHAIN_H\n+#define BITCOIN_RPC_BLOCKCHAIN_H\n+\n+class CBlock;\n+class CBlockIndex;\n+class CScript;\n+class CTransaction;\n+class uint256;\n+class UniValue;\n+\n+/**\n+ * Get the difficulty of the net wrt to the given block index, or the chain tip if\n+ * not provided.\n+ *\n+ * @return A floating point number that is a multiple of the main net minimum\n+ * difficulty (4295032833 hashes).\n+ */\n+double GetDifficulty(const CBlockIndex* blockindex = nullptr);\n+\n+/** Callback for when block tip changed. */\n+void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n+\n+/** Block description to JSON */\n+UniValue blockToJSON(const CBlock& block, const CBlockIndex* blockindex, bool txDetails = false);\n+\n+/** Mempool information to JSON */\n+UniValue mempoolInfoToJSON();\n+\n+/** Mempool to JSON */\n+UniValue mempoolToJSON(bool fVerbose = false);\n+\n+/** Block header to JSON */\n+UniValue blockheaderToJSON(const CBlockIndex* blockindex);\n+\n+#endif\n+"
      },
      {
        "sha": "a3a692c14d527e85a2c906413cf810383423ccde",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 9,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -13,8 +13,6 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <univalue.h>\n \n-using namespace std;\n-\n class CRPCConvertParam\n {\n public:\n@@ -24,7 +22,7 @@ class CRPCConvertParam\n };\n \n /**\n- * Specifiy a (method, idx, name) here if the argument is a non-string RPC\n+ * Specify a (method, idx, name) here if the argument is a non-string RPC\n  * argument and needs to be converted from JSON.\n  *\n  * @note Parameter indexes start from 0.\n@@ -79,8 +77,10 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"listunspent\", 0, \"minconf\" },\n     { \"listunspent\", 1, \"maxconf\" },\n     { \"listunspent\", 2, \"addresses\" },\n-    { \"getblock\", 1, \"verbose\" },\n+    { \"listunspent\", 4, \"query_options\" },\n+    { \"getblock\", 1, \"verbosity\" },\n     { \"getblockheader\", 1, \"verbose\" },\n+    { \"getchaintxstats\", 0, \"nblocks\" },\n     { \"gettransaction\", 1, \"include_watchonly\" },\n     { \"getrawtransaction\", 1, \"verbose\" },\n     { \"createrawtransaction\", 0, \"inputs\" },\n@@ -107,17 +107,21 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"keypoolrefill\", 0, \"newsize\" },\n     { \"getrawmempool\", 0, \"verbose\" },\n     { \"estimatefee\", 0, \"nblocks\" },\n-    { \"estimatepriority\", 0, \"nblocks\" },\n     { \"estimatesmartfee\", 0, \"nblocks\" },\n-    { \"estimatesmartpriority\", 0, \"nblocks\" },\n-    { \"prioritisetransaction\", 1, \"priority_delta\" },\n-    { \"prioritisetransaction\", 2, \"fee_delta\" },\n+    { \"estimatesmartfee\", 1, \"conservative\" },\n+    { \"estimaterawfee\", 0, \"nblocks\" },\n+    { \"estimaterawfee\", 1, \"threshold\" },\n+    { \"estimaterawfee\", 2, \"horizon\" },\n+    { \"prioritisetransaction\", 1, \"fee_delta\" },\n     { \"setban\", 2, \"bantime\" },\n     { \"setban\", 3, \"absolute\" },\n     { \"setnetworkactive\", 0, \"state\" },\n     { \"getmempoolancestors\", 1, \"verbose\" },\n     { \"getmempooldescendants\", 1, \"verbose\" },\n     { \"bumpfee\", 1, \"options\" },\n+    { \"logging\", 0, \"include\" },\n+    { \"logging\", 1, \"exclude\" },\n+    { \"disconnectnode\", 1, \"nodeid\" },\n     // Echo with conversion (For testing only)\n     { \"echojson\", 0, \"arg0\" },\n     { \"echojson\", 1, \"arg1\" },\n@@ -171,7 +175,7 @@ UniValue ParseNonRFCJSONValue(const std::string& strVal)\n     UniValue jVal;\n     if (!jVal.read(std::string(\"[\")+strVal+std::string(\"]\")) ||\n         !jVal.isArray() || jVal.size()!=1)\n-        throw runtime_error(string(\"Error parsing JSON:\")+strVal);\n+        throw std::runtime_error(std::string(\"Error parsing JSON:\")+strVal);\n     return jVal[0];\n }\n "
      },
      {
        "sha": "7cf793e64344061b09d9056e86cedd10d866c50b",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 128,
        "deletions": 95,
        "changes": 223,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -15,7 +15,9 @@\n #include \"validation.h\"\n #include \"miner.h\"\n #include \"net.h\"\n+#include \"policy/fees.h\"\n #include \"pow.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"txmempool.h\"\n #include \"util.h\"\n@@ -26,12 +28,9 @@\n #include <stdint.h>\n \n #include <boost/assign/list_of.hpp>\n-#include <boost/shared_ptr.hpp>\n \n #include <univalue.h>\n \n-using namespace std;\n-\n /**\n  * Return average network hashes per second based on the last 'lookup' blocks,\n  * or from the last difficulty change if 'lookup' is nonpositive.\n@@ -77,7 +76,7 @@ UniValue GetNetworkHashPS(int lookup, int height) {\n UniValue getnetworkhashps(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getnetworkhashps ( nblocks height )\\n\"\n             \"\\nReturns the estimated network hashes per second based on the last n blocks.\\n\"\n             \"Pass in [blocks] to override # of blocks, -1 specifies since last difficulty change.\\n\"\n@@ -96,7 +95,7 @@ UniValue getnetworkhashps(const JSONRPCRequest& request)\n     return GetNetworkHashPS(request.params.size() > 0 ? request.params[0].get_int() : 120, request.params.size() > 1 ? request.params[1].get_int() : -1);\n }\n \n-UniValue generateBlocks(boost::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n+UniValue generateBlocks(std::shared_ptr<CReserveScript> coinbaseScript, int nGenerate, uint64_t nMaxTries, bool keepScript)\n {\n     static const int nInnerLoopCount = 0x10000;\n     int nHeightStart = 0;\n@@ -149,7 +148,7 @@ UniValue generateBlocks(boost::shared_ptr<CReserveScript> coinbaseScript, int nG\n UniValue generate(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"generate nblocks ( maxtries )\\n\"\n             \"\\nMine up to nblocks blocks immediately (before the RPC call returns)\\n\"\n             \"\\nArguments:\\n\"\n@@ -168,7 +167,7 @@ UniValue generate(const JSONRPCRequest& request)\n         nMaxTries = request.params[1].get_int();\n     }\n \n-    boost::shared_ptr<CReserveScript> coinbaseScript;\n+    std::shared_ptr<CReserveScript> coinbaseScript;\n     GetMainSignals().ScriptForMining(coinbaseScript);\n \n     // If the keypool is exhausted, no script is returned at all.  Catch this.\n@@ -185,7 +184,7 @@ UniValue generate(const JSONRPCRequest& request)\n UniValue generatetoaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"generatetoaddress nblocks address (maxtries)\\n\"\n             \"\\nMine blocks immediately to a specified address (before the RPC call returns)\\n\"\n             \"\\nArguments:\\n\"\n@@ -208,8 +207,8 @@ UniValue generatetoaddress(const JSONRPCRequest& request)\n     CBitcoinAddress address(request.params[1].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Error: Invalid address\");\n-    \n-    boost::shared_ptr<CReserveScript> coinbaseScript(new CReserveScript());\n+\n+    std::shared_ptr<CReserveScript> coinbaseScript = std::make_shared<CReserveScript>();\n     coinbaseScript->reserveScript = GetScriptForDestination(address.Get());\n \n     return generateBlocks(coinbaseScript, nGenerate, nMaxTries, false);\n@@ -218,7 +217,7 @@ UniValue generatetoaddress(const JSONRPCRequest& request)\n UniValue getmininginfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getmininginfo\\n\"\n             \"\\nReturns a json object containing mining-related information.\"\n             \"\\nResult:\\n\"\n@@ -258,31 +257,28 @@ UniValue getmininginfo(const JSONRPCRequest& request)\n // NOTE: Unlike wallet RPC (which use BTC values), mining RPCs follow GBT (BIP 22) in using satoshi amounts\n UniValue prioritisetransaction(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 3)\n-        throw runtime_error(\n-            \"prioritisetransaction <txid> <priority delta> <fee delta>\\n\"\n+    if (request.fHelp || request.params.size() != 2)\n+        throw std::runtime_error(\n+            \"prioritisetransaction <txid> <fee delta>\\n\"\n             \"Accepts the transaction into mined blocks at a higher (or lower) priority\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"txid\\\"       (string, required) The transaction id.\\n\"\n-            \"2. priority_delta (numeric, required) The priority to add or subtract.\\n\"\n-            \"                  The transaction selection algorithm considers the tx as it would have a higher priority.\\n\"\n-            \"                  (priority of a transaction is calculated: coinage * value_in_satoshis / txsize) \\n\"\n-            \"3. fee_delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n+            \"2. fee_delta      (numeric, required) The fee value (in satoshis) to add (or subtract, if negative).\\n\"\n             \"                  The fee is not actually paid, only the algorithm for selecting transactions into a block\\n\"\n             \"                  considers the transaction as it would have paid a higher (or lower) fee.\\n\"\n             \"\\nResult:\\n\"\n             \"true              (boolean) Returns true\\n\"\n             \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 0.0 10000\")\n-            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 10000\")\n+            + HelpExampleCli(\"prioritisetransaction\", \"\\\"txid\\\" 10000\")\n+            + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 10000\")\n         );\n \n     LOCK(cs_main);\n \n     uint256 hash = ParseHashStr(request.params[0].get_str(), \"txid\");\n-    CAmount nAmount = request.params[2].get_int64();\n+    CAmount nAmount = request.params[1].get_int64();\n \n-    mempool.PrioritiseTransaction(hash, request.params[0].get_str(), request.params[1].get_real(), nAmount);\n+    mempool.PrioritiseTransaction(hash, nAmount);\n     return true;\n }\n \n@@ -318,7 +314,7 @@ std::string gbt_vb_name(const Consensus::DeploymentPos pos) {\n UniValue getblocktemplate(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getblocktemplate ( TemplateRequest )\\n\"\n             \"\\nIf the request parameters include a 'mode' key, that is used to explicitly select between the default 'template' request or a 'proposal'.\\n\"\n             \"It returns data needed to construct a block to work on.\\n\"\n@@ -567,7 +563,7 @@ UniValue getblocktemplate(const JSONRPCRequest& request)\n     UniValue aCaps(UniValue::VARR); aCaps.push_back(\"proposal\");\n \n     UniValue transactions(UniValue::VARR);\n-    map<uint256, int64_t> setTxIndex;\n+    std::map<uint256, int64_t> setTxIndex;\n     int i = 0;\n     for (const auto& it : pblock->vtx) {\n         const CTransaction& tx = *it;\n@@ -714,7 +710,7 @@ class submitblock_StateCatcher : public CValidationInterface\n     submitblock_StateCatcher(const uint256 &hashIn) : hash(hashIn), found(false), state() {}\n \n protected:\n-    virtual void BlockChecked(const CBlock& block, const CValidationState& stateIn) {\n+    void BlockChecked(const CBlock& block, const CValidationState& stateIn) override {\n         if (block.GetHash() != hash)\n             return;\n         found = true;\n@@ -724,8 +720,8 @@ class submitblock_StateCatcher : public CValidationInterface\n \n UniValue submitblock(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2) {\n+        throw std::runtime_error(\n             \"submitblock \\\"hexdata\\\" ( \\\"jsonparametersobject\\\" )\\n\"\n             \"\\nAttempts to submit new block to network.\\n\"\n             \"The 'jsonparametersobject' parameter is currently ignored.\\n\"\n@@ -742,11 +738,17 @@ UniValue submitblock(const JSONRPCRequest& request)\n             + HelpExampleCli(\"submitblock\", \"\\\"mydata\\\"\")\n             + HelpExampleRpc(\"submitblock\", \"\\\"mydata\\\"\")\n         );\n+    }\n \n     std::shared_ptr<CBlock> blockptr = std::make_shared<CBlock>();\n     CBlock& block = *blockptr;\n-    if (!DecodeHexBlk(block, request.params[0].get_str()))\n+    if (!DecodeHexBlk(block, request.params[0].get_str())) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n+    }\n+\n+    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n+    }\n \n     if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n@@ -759,10 +761,12 @@ UniValue submitblock(const JSONRPCRequest& request)\n         BlockMap::iterator mi = mapBlockIndex.find(hash);\n         if (mi != mapBlockIndex.end()) {\n             CBlockIndex *pindex = mi->second;\n-            if (pindex->IsValid(BLOCK_VALID_SCRIPTS))\n+            if (pindex->IsValid(BLOCK_VALID_SCRIPTS)) {\n                 return \"duplicate\";\n-            if (pindex->nStatus & BLOCK_FAILED_MASK)\n+            }\n+            if (pindex->nStatus & BLOCK_FAILED_MASK) {\n                 return \"duplicate-invalid\";\n+            }\n             // Otherwise, we might only have the header - process the block before returning\n             fBlockPresent = true;\n         }\n@@ -780,22 +784,24 @@ UniValue submitblock(const JSONRPCRequest& request)\n     RegisterValidationInterface(&sc);\n     bool fAccepted = ProcessNewBlock(Params(), blockptr, true, NULL);\n     UnregisterValidationInterface(&sc);\n-    if (fBlockPresent)\n-    {\n-        if (fAccepted && !sc.found)\n+    if (fBlockPresent) {\n+        if (fAccepted && !sc.found) {\n             return \"duplicate-inconclusive\";\n+        }\n         return \"duplicate\";\n     }\n-    if (!sc.found)\n+    if (!sc.found) {\n         return \"inconclusive\";\n+    }\n     return BIP22ValidationResult(sc.state);\n }\n \n UniValue estimatefee(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"estimatefee nblocks\\n\"\n+            \"\\nDEPRECATED. Please use estimatesmartfee for more intelligent estimates.\"\n             \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n             \"confirmation within nblocks blocks. Uses virtual transaction size of transaction\\n\"\n             \"as defined in BIP 141 (witness data is discounted).\\n\"\n@@ -818,52 +824,28 @@ UniValue estimatefee(const JSONRPCRequest& request)\n     if (nBlocks < 1)\n         nBlocks = 1;\n \n-    CFeeRate feeRate = mempool.estimateFee(nBlocks);\n+    CFeeRate feeRate = ::feeEstimator.estimateFee(nBlocks);\n     if (feeRate == CFeeRate(0))\n         return -1.0;\n \n     return ValueFromAmount(feeRate.GetFeePerK());\n }\n \n-UniValue estimatepriority(const JSONRPCRequest& request)\n-{\n-    if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n-            \"estimatepriority nblocks\\n\"\n-            \"\\nDEPRECATED. Estimates the approximate priority a zero-fee transaction needs to begin\\n\"\n-            \"confirmation within nblocks blocks.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. nblocks     (numeric, required)\\n\"\n-            \"\\nResult:\\n\"\n-            \"n              (numeric) estimated priority\\n\"\n-            \"\\n\"\n-            \"A negative value is returned if not enough transactions and blocks\\n\"\n-            \"have been observed to make an estimate.\\n\"\n-            \"\\nExample:\\n\"\n-            + HelpExampleCli(\"estimatepriority\", \"6\")\n-            );\n-\n-    RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n-\n-    int nBlocks = request.params[0].get_int();\n-    if (nBlocks < 1)\n-        nBlocks = 1;\n-\n-    return mempool.estimatePriority(nBlocks);\n-}\n-\n UniValue estimatesmartfee(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n-            \"estimatesmartfee nblocks\\n\"\n-            \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n+    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n+        throw std::runtime_error(\n+            \"estimatesmartfee nblocks (conservative)\\n\"\n             \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n             \"confirmation within nblocks blocks if possible and return the number of blocks\\n\"\n             \"for which the estimate is valid. Uses virtual transaction size as defined\\n\"\n             \"in BIP 141 (witness data is discounted).\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. nblocks     (numeric)\\n\"\n+            \"1. nblocks       (numeric)\\n\"\n+            \"2. conservative  (bool, optional, default=true) Whether to return a more conservative estimate which\\n\"\n+            \"                 also satisfies a longer history. A conservative estimate potentially returns a higher\\n\"\n+            \"                 feerate and is more likely to be sufficient for the desired target, but is not as\\n\"\n+            \"                 responsive to short term drops in the prevailing fee market\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"feerate\\\" : x.x,     (numeric) estimate fee-per-kilobyte (in BTC)\\n\"\n@@ -880,48 +862,99 @@ UniValue estimatesmartfee(const JSONRPCRequest& request)\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n \n     int nBlocks = request.params[0].get_int();\n+    bool conservative = true;\n+    if (request.params.size() > 1 && !request.params[1].isNull()) {\n+        RPCTypeCheckArgument(request.params[1], UniValue::VBOOL);\n+        conservative = request.params[1].get_bool();\n+    }\n \n     UniValue result(UniValue::VOBJ);\n     int answerFound;\n-    CFeeRate feeRate = mempool.estimateSmartFee(nBlocks, &answerFound);\n+    CFeeRate feeRate = ::feeEstimator.estimateSmartFee(nBlocks, &answerFound, ::mempool, conservative);\n     result.push_back(Pair(\"feerate\", feeRate == CFeeRate(0) ? -1.0 : ValueFromAmount(feeRate.GetFeePerK())));\n     result.push_back(Pair(\"blocks\", answerFound));\n     return result;\n }\n \n-UniValue estimatesmartpriority(const JSONRPCRequest& request)\n+UniValue estimaterawfee(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n-            \"estimatesmartpriority nblocks\\n\"\n-            \"\\nDEPRECATED. WARNING: This interface is unstable and may disappear or change!\\n\"\n-            \"\\nEstimates the approximate priority a zero-fee transaction needs to begin\\n\"\n-            \"confirmation within nblocks blocks if possible and return the number of blocks\\n\"\n-            \"for which the estimate is valid.\\n\"\n+    if (request.fHelp || request.params.size() < 1|| request.params.size() > 3)\n+        throw std::runtime_error(\n+            \"estimaterawfee nblocks (threshold horizon)\\n\"\n+            \"\\nWARNING: This interface is unstable and may disappear or change!\\n\"\n+            \"\\nWARNING: This is an advanced API call that is tightly coupled to the specific\\n\"\n+            \"         implementation of fee estimation. The parameters it can be called with\\n\"\n+            \"         and the results it returns will change if the internal implementation changes.\\n\"\n+            \"\\nEstimates the approximate fee per kilobyte needed for a transaction to begin\\n\"\n+            \"confirmation within nblocks blocks if possible. Uses virtual transaction size as defined\\n\"\n+            \"in BIP 141 (witness data is discounted).\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. nblocks     (numeric, required)\\n\"\n+            \"1. nblocks     (numeric)\\n\"\n+            \"2. threshold   (numeric, optional) The proportion of transactions in a given feerate range that must have been\\n\"\n+            \"               confirmed within nblocks in order to consider those feerates as high enough and proceed to check\\n\"\n+            \"               lower buckets.  Default: 0.95\\n\"\n+            \"3. horizon     (numeric, optional) How long a history of estimates to consider. 0=short, 1=medium, 2=long.\\n\"\n+            \"               Default: 1\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n-            \"  \\\"priority\\\" : x.x,    (numeric) estimated priority\\n\"\n-            \"  \\\"blocks\\\" : n         (numeric) block number where estimate was found\\n\"\n+            \"  \\\"feerate\\\" : x.x,        (numeric) estimate fee-per-kilobyte (in BTC)\\n\"\n+            \"  \\\"decay\\\" : x.x,          (numeric) exponential decay (per block) for historical moving average of confirmation data\\n\"\n+            \"  \\\"scale\\\" : x,            (numeric) The resolution of confirmation targets at this time horizon\\n\"\n+            \"  \\\"pass\\\" : {              (json object) information about the lowest range of feerates to succeed in meeting the threshold\\n\"\n+            \"      \\\"startrange\\\" : x.x,     (numeric) start of feerate range\\n\"\n+            \"      \\\"endrange\\\" : x.x,       (numeric) end of feerate range\\n\"\n+            \"      \\\"withintarget\\\" : x.x,   (numeric) number of txs over history horizon in the feerate range that were confirmed within target\\n\"\n+            \"      \\\"totalconfirmed\\\" : x.x, (numeric) number of txs over history horizon in the feerate range that were confirmed at any point\\n\"\n+            \"      \\\"inmempool\\\" : x.x,      (numeric) current number of txs in mempool in the feerate range unconfirmed for at least target blocks\\n\"\n+            \"      \\\"leftmempool\\\" : x.x,    (numeric) number of txs over history horizon in the feerate range that left mempool unconfirmed after target\\n\"\n+            \"  }\\n\"\n+            \"  \\\"fail\\\" : { ... }        (json object) information about the highest range of feerates to fail to meet the threshold\\n\"\n             \"}\\n\"\n             \"\\n\"\n-            \"A negative value is returned if not enough transactions and blocks\\n\"\n-            \"have been observed to make an estimate for any number of blocks.\\n\"\n-            \"However if the mempool reject fee is set it will return 1e9 * MAX_MONEY.\\n\"\n+            \"A negative feerate is returned if no answer can be given.\\n\"\n             \"\\nExample:\\n\"\n-            + HelpExampleCli(\"estimatesmartpriority\", \"6\")\n+            + HelpExampleCli(\"estimaterawfee\", \"6 0.9 1\")\n             );\n \n-    RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n-\n+    RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM)(UniValue::VNUM)(UniValue::VNUM), true);\n+    RPCTypeCheckArgument(request.params[0], UniValue::VNUM);\n     int nBlocks = request.params[0].get_int();\n-\n+    double threshold = 0.95;\n+    if (!request.params[1].isNull())\n+        threshold = request.params[1].get_real();\n+    FeeEstimateHorizon horizon = FeeEstimateHorizon::MED_HALFLIFE;\n+    if (!request.params[2].isNull()) {\n+        int horizonInt = request.params[2].get_int();\n+        if (horizonInt < 0 || horizonInt > 2) {\n+            throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid horizon for fee estimates\");\n+        } else {\n+            horizon = (FeeEstimateHorizon)horizonInt;\n+        }\n+    }\n     UniValue result(UniValue::VOBJ);\n-    int answerFound;\n-    double priority = mempool.estimateSmartPriority(nBlocks, &answerFound);\n-    result.push_back(Pair(\"priority\", priority));\n-    result.push_back(Pair(\"blocks\", answerFound));\n+    CFeeRate feeRate;\n+    EstimationResult buckets;\n+    feeRate = ::feeEstimator.estimateRawFee(nBlocks, threshold, horizon, &buckets);\n+\n+    result.push_back(Pair(\"feerate\", feeRate == CFeeRate(0) ? -1.0 : ValueFromAmount(feeRate.GetFeePerK())));\n+    result.push_back(Pair(\"decay\", buckets.decay));\n+    result.push_back(Pair(\"scale\", (int)buckets.scale));\n+    UniValue passbucket(UniValue::VOBJ);\n+    passbucket.push_back(Pair(\"startrange\", round(buckets.pass.start)));\n+    passbucket.push_back(Pair(\"endrange\", round(buckets.pass.end)));\n+    passbucket.push_back(Pair(\"withintarget\", round(buckets.pass.withinTarget * 100.0) / 100.0));\n+    passbucket.push_back(Pair(\"totalconfirmed\", round(buckets.pass.totalConfirmed * 100.0) / 100.0));\n+    passbucket.push_back(Pair(\"inmempool\", round(buckets.pass.inMempool * 100.0) / 100.0));\n+    passbucket.push_back(Pair(\"leftmempool\", round(buckets.pass.leftMempool * 100.0) / 100.0));\n+    result.push_back(Pair(\"pass\", passbucket));\n+    UniValue failbucket(UniValue::VOBJ);\n+    failbucket.push_back(Pair(\"startrange\", round(buckets.fail.start)));\n+    failbucket.push_back(Pair(\"endrange\", round(buckets.fail.end)));\n+    failbucket.push_back(Pair(\"withintarget\", round(buckets.fail.withinTarget * 100.0) / 100.0));\n+    failbucket.push_back(Pair(\"totalconfirmed\", round(buckets.fail.totalConfirmed * 100.0) / 100.0));\n+    failbucket.push_back(Pair(\"inmempool\", round(buckets.fail.inMempool * 100.0) / 100.0));\n+    failbucket.push_back(Pair(\"leftmempool\", round(buckets.fail.leftMempool * 100.0) / 100.0));\n+    result.push_back(Pair(\"fail\", failbucket));\n     return result;\n }\n \n@@ -930,17 +963,17 @@ static const CRPCCommand commands[] =\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"mining\",             \"getnetworkhashps\",       &getnetworkhashps,       true,  {\"nblocks\",\"height\"} },\n     { \"mining\",             \"getmininginfo\",          &getmininginfo,          true,  {} },\n-    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"priority_delta\",\"fee_delta\"} },\n+    { \"mining\",             \"prioritisetransaction\",  &prioritisetransaction,  true,  {\"txid\",\"fee_delta\"} },\n     { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,  {\"template_request\"} },\n     { \"mining\",             \"submitblock\",            &submitblock,            true,  {\"hexdata\",\"parameters\"} },\n \n     { \"generating\",         \"generate\",               &generate,               true,  {\"nblocks\",\"maxtries\"} },\n     { \"generating\",         \"generatetoaddress\",      &generatetoaddress,      true,  {\"nblocks\",\"address\",\"maxtries\"} },\n \n     { \"util\",               \"estimatefee\",            &estimatefee,            true,  {\"nblocks\"} },\n-    { \"util\",               \"estimatepriority\",       &estimatepriority,       true,  {\"nblocks\"} },\n-    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true,  {\"nblocks\"} },\n-    { \"util\",               \"estimatesmartpriority\",  &estimatesmartpriority,  true,  {\"nblocks\"} },\n+    { \"util\",               \"estimatesmartfee\",       &estimatesmartfee,       true,  {\"nblocks\", \"conservative\"} },\n+\n+    { \"hidden\",             \"estimaterawfee\",         &estimaterawfee,         true,  {\"nblocks\", \"threshold\", \"horizon\"} },\n };\n \n void RegisterMiningRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "1f973a0c1840cef3b3e0391f2bfd21a1f0a14795",
        "filename": "src/rpc/misc.cpp",
        "status": "modified",
        "additions": 192,
        "deletions": 63,
        "changes": 255,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/misc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/misc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/misc.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -4,28 +4,33 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n+#include \"chain.h\"\n #include \"clientversion.h\"\n #include \"init.h\"\n #include \"validation.h\"\n+#include \"httpserver.h\"\n #include \"net.h\"\n #include \"netbase.h\"\n+#include \"rpc/blockchain.h\"\n #include \"rpc/server.h\"\n #include \"timedata.h\"\n #include \"util.h\"\n #include \"utilstrencodings.h\"\n #ifdef ENABLE_WALLET\n+#include \"wallet/rpcwallet.h\"\n #include \"wallet/wallet.h\"\n #include \"wallet/walletdb.h\"\n #endif\n \n #include <stdint.h>\n+#ifdef HAVE_MALLOC_INFO\n+#include <malloc.h>\n+#endif\n \n #include <boost/assign/list_of.hpp>\n \n #include <univalue.h>\n \n-using namespace std;\n-\n /**\n  * @note Do not add or change anything in the information returned by this\n  * method. `getinfo` exists for backwards-compatibility only. It combines\n@@ -42,7 +47,7 @@ using namespace std;\n UniValue getinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getinfo\\n\"\n             \"\\nDEPRECATED. Returns an object containing various state info.\\n\"\n             \"\\nResult:\\n\"\n@@ -61,7 +66,7 @@ UniValue getinfo(const JSONRPCRequest& request)\n             \"  \\\"keypoolsize\\\": xxxx,        (numeric) how many new keys are pre-generated\\n\"\n             \"  \\\"unlocked_until\\\": ttt,      (numeric) the timestamp in seconds since epoch (midnight Jan 1 1970 GMT) that the wallet is unlocked for transfers, or 0 if the wallet is locked\\n\"\n             \"  \\\"paytxfee\\\": x.xxxx,         (numeric) the transaction fee set in \" + CURRENCY_UNIT + \"/kB\\n\"\n-            \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n+            \"  \\\"relayfee\\\": x.xxxx,         (numeric) minimum relay fee for transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"errors\\\": \\\"...\\\"           (string) any error messages\\n\"\n             \"}\\n\"\n             \"\\nExamples:\\n\"\n@@ -70,7 +75,9 @@ UniValue getinfo(const JSONRPCRequest& request)\n         );\n \n #ifdef ENABLE_WALLET\n-    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : NULL);\n #else\n     LOCK(cs_main);\n #endif\n@@ -82,25 +89,26 @@ UniValue getinfo(const JSONRPCRequest& request)\n     obj.push_back(Pair(\"version\", CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\", PROTOCOL_VERSION));\n #ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n-        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));\n+    if (pwallet) {\n+        obj.push_back(Pair(\"walletversion\", pwallet->GetVersion()));\n+        obj.push_back(Pair(\"balance\",       ValueFromAmount(pwallet->GetBalance())));\n     }\n #endif\n     obj.push_back(Pair(\"blocks\",        (int)chainActive.Height()));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     if(g_connman)\n         obj.push_back(Pair(\"connections\",   (int)g_connman->GetNodeCount(CConnman::CONNECTIONS_ALL)));\n-    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.proxy.ToStringIPPort() : string())));\n+    obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.proxy.ToStringIPPort() : std::string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       Params().NetworkIDString() == CBaseChainParams::TESTNET));\n #ifdef ENABLE_WALLET\n-    if (pwalletMain) {\n-        obj.push_back(Pair(\"keypoololdest\", pwalletMain->GetOldestKeyPoolTime()));\n-        obj.push_back(Pair(\"keypoolsize\",   (int)pwalletMain->GetKeyPoolSize()));\n+    if (pwallet) {\n+        obj.push_back(Pair(\"keypoololdest\", pwallet->GetOldestKeyPoolTime()));\n+        obj.push_back(Pair(\"keypoolsize\",   (int)pwallet->GetKeyPoolSize()));\n+    }\n+    if (pwallet && pwallet->IsCrypted()) {\n+        obj.push_back(Pair(\"unlocked_until\", pwallet->nRelockTime));\n     }\n-    if (pwalletMain && pwalletMain->IsCrypted())\n-        obj.push_back(Pair(\"unlocked_until\", nWalletUnlockTime));\n     obj.push_back(Pair(\"paytxfee\",      ValueFromAmount(payTxFee.GetFeePerK())));\n #endif\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n@@ -112,13 +120,17 @@ UniValue getinfo(const JSONRPCRequest& request)\n class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n {\n public:\n+    CWallet * const pwallet;\n+\n+    DescribeAddressVisitor(CWallet *_pwallet) : pwallet(_pwallet) {}\n+\n     UniValue operator()(const CNoDestination &dest) const { return UniValue(UniValue::VOBJ); }\n \n     UniValue operator()(const CKeyID &keyID) const {\n         UniValue obj(UniValue::VOBJ);\n         CPubKey vchPubKey;\n         obj.push_back(Pair(\"isscript\", false));\n-        if (pwalletMain && pwalletMain->GetPubKey(keyID, vchPubKey)) {\n+        if (pwallet && pwallet->GetPubKey(keyID, vchPubKey)) {\n             obj.push_back(Pair(\"pubkey\", HexStr(vchPubKey)));\n             obj.push_back(Pair(\"iscompressed\", vchPubKey.IsCompressed()));\n         }\n@@ -129,7 +141,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n         UniValue obj(UniValue::VOBJ);\n         CScript subscript;\n         obj.push_back(Pair(\"isscript\", true));\n-        if (pwalletMain && pwalletMain->GetCScript(scriptID, subscript)) {\n+        if (pwallet && pwallet->GetCScript(scriptID, subscript)) {\n             std::vector<CTxDestination> addresses;\n             txnouttype whichType;\n             int nRequired;\n@@ -151,7 +163,7 @@ class DescribeAddressVisitor : public boost::static_visitor<UniValue>\n UniValue validateaddress(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"validateaddress \\\"address\\\"\\n\"\n             \"\\nReturn information about the given bitcoin address.\\n\"\n             \"\\nArguments:\\n\"\n@@ -177,7 +189,9 @@ UniValue validateaddress(const JSONRPCRequest& request)\n         );\n \n #ifdef ENABLE_WALLET\n-    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+\n+    LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : NULL);\n #else\n     LOCK(cs_main);\n #endif\n@@ -190,23 +204,24 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     if (isValid)\n     {\n         CTxDestination dest = address.Get();\n-        string currentAddress = address.ToString();\n+        std::string currentAddress = address.ToString();\n         ret.push_back(Pair(\"address\", currentAddress));\n \n         CScript scriptPubKey = GetScriptForDestination(dest);\n         ret.push_back(Pair(\"scriptPubKey\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n \n #ifdef ENABLE_WALLET\n-        isminetype mine = pwalletMain ? IsMine(*pwalletMain, dest) : ISMINE_NO;\n+        isminetype mine = pwallet ? IsMine(*pwallet, dest) : ISMINE_NO;\n         ret.push_back(Pair(\"ismine\", (mine & ISMINE_SPENDABLE) ? true : false));\n         ret.push_back(Pair(\"iswatchonly\", (mine & ISMINE_WATCH_ONLY) ? true: false));\n-        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(), dest);\n+        UniValue detail = boost::apply_visitor(DescribeAddressVisitor(pwallet), dest);\n         ret.pushKVs(detail);\n-        if (pwalletMain && pwalletMain->mapAddressBook.count(dest))\n-            ret.push_back(Pair(\"account\", pwalletMain->mapAddressBook[dest].name));\n+        if (pwallet && pwallet->mapAddressBook.count(dest)) {\n+            ret.push_back(Pair(\"account\", pwallet->mapAddressBook[dest].name));\n+        }\n         CKeyID keyID;\n-        if (pwalletMain) {\n-            const auto& meta = pwalletMain->mapKeyMetadata;\n+        if (pwallet) {\n+            const auto& meta = pwallet->mapKeyMetadata;\n             auto it = address.GetKeyID(keyID) ? meta.find(keyID) : meta.end();\n             if (it == meta.end()) {\n                 it = meta.find(CScriptID(scriptPubKey));\n@@ -224,23 +239,26 @@ UniValue validateaddress(const JSONRPCRequest& request)\n     return ret;\n }\n \n+// Needed even with !ENABLE_WALLET, to pass (ignored) pointers around\n+class CWallet;\n+\n /**\n  * Used by addmultisigaddress / createmultisig:\n  */\n-CScript _createmultisig_redeemScript(const UniValue& params)\n+CScript _createmultisig_redeemScript(CWallet * const pwallet, const UniValue& params)\n {\n     int nRequired = params[0].get_int();\n     const UniValue& keys = params[1].get_array();\n \n     // Gather public keys\n     if (nRequired < 1)\n-        throw runtime_error(\"a multisignature address must require at least one key to redeem\");\n+        throw std::runtime_error(\"a multisignature address must require at least one key to redeem\");\n     if ((int)keys.size() < nRequired)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             strprintf(\"not enough keys supplied \"\n                       \"(got %u keys, but need at least %d to redeem)\", keys.size(), nRequired));\n     if (keys.size() > 16)\n-        throw runtime_error(\"Number of addresses involved in the multisignature address creation > 16\\nReduce the number\");\n+        throw std::runtime_error(\"Number of addresses involved in the multisignature address creation > 16\\nReduce the number\");\n     std::vector<CPubKey> pubkeys;\n     pubkeys.resize(keys.size());\n     for (unsigned int i = 0; i < keys.size(); i++)\n@@ -249,18 +267,18 @@ CScript _createmultisig_redeemScript(const UniValue& params)\n #ifdef ENABLE_WALLET\n         // Case 1: Bitcoin address and we have full public key:\n         CBitcoinAddress address(ks);\n-        if (pwalletMain && address.IsValid())\n-        {\n+        if (pwallet && address.IsValid()) {\n             CKeyID keyID;\n             if (!address.GetKeyID(keyID))\n-                throw runtime_error(\n+                throw std::runtime_error(\n                     strprintf(\"%s does not refer to a key\",ks));\n             CPubKey vchPubKey;\n-            if (!pwalletMain->GetPubKey(keyID, vchPubKey))\n-                throw runtime_error(\n+            if (!pwallet->GetPubKey(keyID, vchPubKey)) {\n+                throw std::runtime_error(\n                     strprintf(\"no full public key for address %s\",ks));\n+            }\n             if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n+                throw std::runtime_error(\" Invalid public key: \"+ks);\n             pubkeys[i] = vchPubKey;\n         }\n \n@@ -271,28 +289,34 @@ CScript _createmultisig_redeemScript(const UniValue& params)\n         {\n             CPubKey vchPubKey(ParseHex(ks));\n             if (!vchPubKey.IsFullyValid())\n-                throw runtime_error(\" Invalid public key: \"+ks);\n+                throw std::runtime_error(\" Invalid public key: \"+ks);\n             pubkeys[i] = vchPubKey;\n         }\n         else\n         {\n-            throw runtime_error(\" Invalid public key: \"+ks);\n+            throw std::runtime_error(\" Invalid public key: \"+ks);\n         }\n     }\n     CScript result = GetScriptForMultisig(nRequired, pubkeys);\n \n     if (result.size() > MAX_SCRIPT_ELEMENT_SIZE)\n-        throw runtime_error(\n+        throw std::runtime_error(\n                 strprintf(\"redeemScript exceeds size limit: %d > %d\", result.size(), MAX_SCRIPT_ELEMENT_SIZE));\n \n     return result;\n }\n \n UniValue createmultisig(const JSONRPCRequest& request)\n {\n+#ifdef ENABLE_WALLET\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+#else\n+    CWallet * const pwallet = NULL;\n+#endif\n+\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 2)\n     {\n-        string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n+        std::string msg = \"createmultisig nrequired [\\\"key\\\",...]\\n\"\n             \"\\nCreates a multi-signature address with n signature of m keys required.\\n\"\n             \"It returns a json object with the address and redeemScript.\\n\"\n \n@@ -316,11 +340,11 @@ UniValue createmultisig(const JSONRPCRequest& request)\n             \"\\nAs a json rpc call\\n\"\n             + HelpExampleRpc(\"createmultisig\", \"2, \\\"[\\\\\\\"16sSauSf5pF2UkUwvKGq4qjNRzBZYqgEL5\\\\\\\",\\\\\\\"171sgjn4YtPu27adkKGrdDwzRTxnRkBfKV\\\\\\\"]\\\"\")\n         ;\n-        throw runtime_error(msg);\n+        throw std::runtime_error(msg);\n     }\n \n     // Construct using pay-to-script-hash:\n-    CScript inner = _createmultisig_redeemScript(request.params);\n+    CScript inner = _createmultisig_redeemScript(pwallet, request.params);\n     CScriptID innerID(inner);\n     CBitcoinAddress address(innerID);\n \n@@ -334,7 +358,7 @@ UniValue createmultisig(const JSONRPCRequest& request)\n UniValue verifymessage(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 3)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"verifymessage \\\"address\\\" \\\"signature\\\" \\\"message\\\"\\n\"\n             \"\\nVerify a signed message\\n\"\n             \"\\nArguments:\\n\"\n@@ -356,9 +380,9 @@ UniValue verifymessage(const JSONRPCRequest& request)\n \n     LOCK(cs_main);\n \n-    string strAddress  = request.params[0].get_str();\n-    string strSign     = request.params[1].get_str();\n-    string strMessage  = request.params[2].get_str();\n+    std::string strAddress  = request.params[0].get_str();\n+    std::string strSign     = request.params[1].get_str();\n+    std::string strMessage  = request.params[2].get_str();\n \n     CBitcoinAddress addr(strAddress);\n     if (!addr.IsValid())\n@@ -369,7 +393,7 @@ UniValue verifymessage(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_TYPE_ERROR, \"Address does not refer to key\");\n \n     bool fInvalid = false;\n-    vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n+    std::vector<unsigned char> vchSig = DecodeBase64(strSign.c_str(), &fInvalid);\n \n     if (fInvalid)\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Malformed base64 encoding\");\n@@ -388,7 +412,7 @@ UniValue verifymessage(const JSONRPCRequest& request)\n UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"signmessagewithprivkey \\\"privkey\\\" \\\"message\\\"\\n\"\n             \"\\nSign a message with the private key of an address\\n\"\n             \"\\nArguments:\\n\"\n@@ -405,8 +429,8 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n             + HelpExampleRpc(\"signmessagewithprivkey\", \"\\\"privkey\\\", \\\"my message\\\"\")\n         );\n \n-    string strPrivkey = request.params[0].get_str();\n-    string strMessage = request.params[1].get_str();\n+    std::string strPrivkey = request.params[0].get_str();\n+    std::string strMessage = request.params[1].get_str();\n \n     CBitcoinSecret vchSecret;\n     bool fGood = vchSecret.SetString(strPrivkey);\n@@ -420,7 +444,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n     ss << strMessageMagic;\n     ss << strMessage;\n \n-    vector<unsigned char> vchSig;\n+    std::vector<unsigned char> vchSig;\n     if (!key.SignCompact(ss.GetHash(), vchSig))\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Sign failed\");\n \n@@ -430,7 +454,7 @@ UniValue signmessagewithprivkey(const JSONRPCRequest& request)\n UniValue setmocktime(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"setmocktime timestamp\\n\"\n             \"\\nSet the local time to given timestamp (-regtest only)\\n\"\n             \"\\nArguments:\\n\"\n@@ -439,13 +463,13 @@ UniValue setmocktime(const JSONRPCRequest& request)\n         );\n \n     if (!Params().MineBlocksOnDemand())\n-        throw runtime_error(\"setmocktime for regression testing (-regtest mode) only\");\n+        throw std::runtime_error(\"setmocktime for regression testing (-regtest mode) only\");\n \n     // For now, don't change mocktime if we're in the middle of validation, as\n     // this could have an effect on mempool time-based eviction, as well as\n     // IsCurrentForFeeEstimation() and IsInitialBlockDownload().\n     // TODO: figure out the right way to synchronize around mocktime, and\n-    // ensure all callsites of GetTime() are accessing this safely.\n+    // ensure all call sites of GetTime() are accessing this safely.\n     LOCK(cs_main);\n \n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VNUM));\n@@ -467,16 +491,39 @@ static UniValue RPCLockedMemoryInfo()\n     return obj;\n }\n \n+#ifdef HAVE_MALLOC_INFO\n+static std::string RPCMallocInfo()\n+{\n+    char *ptr = nullptr;\n+    size_t size = 0;\n+    FILE *f = open_memstream(&ptr, &size);\n+    if (f) {\n+        malloc_info(0, f);\n+        fclose(f);\n+        if (ptr) {\n+            std::string rv(ptr, size);\n+            free(ptr);\n+            return rv;\n+        }\n+    }\n+    return \"\";\n+}\n+#endif\n+\n UniValue getmemoryinfo(const JSONRPCRequest& request)\n {\n     /* Please, avoid using the word \"pool\" here in the RPC interface or help,\n      * as users will undoubtedly confuse it with the other \"memory pool\"\n      */\n-    if (request.fHelp || request.params.size() != 0)\n-        throw runtime_error(\n-            \"getmemoryinfo\\n\"\n+    if (request.fHelp || request.params.size() > 1)\n+        throw std::runtime_error(\n+            \"getmemoryinfo (\\\"mode\\\")\\n\"\n             \"Returns an object containing information about memory usage.\\n\"\n-            \"\\nResult:\\n\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"mode\\\" determines what kind of information is returned. This argument is optional, the default mode is \\\"stats\\\".\\n\"\n+            \"  - \\\"stats\\\" returns general statistics about memory usage in the daemon.\\n\"\n+            \"  - \\\"mallocinfo\\\" returns an XML string describing low-level heap state (only available if compiled with glibc 2.10+).\\n\"\n+            \"\\nResult (mode \\\"stats\\\"):\\n\"\n             \"{\\n\"\n             \"  \\\"locked\\\": {               (json object) Information about locked memory manager\\n\"\n             \"    \\\"used\\\": xxxxx,          (numeric) Number of bytes used\\n\"\n@@ -487,19 +534,100 @@ UniValue getmemoryinfo(const JSONRPCRequest& request)\n             \"    \\\"chunks_free\\\": xxxxx,   (numeric) Number unused chunks\\n\"\n             \"  }\\n\"\n             \"}\\n\"\n+            \"\\nResult (mode \\\"mallocinfo\\\"):\\n\"\n+            \"\\\"<malloc version=\\\"1\\\">...\\\"\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"getmemoryinfo\", \"\")\n             + HelpExampleRpc(\"getmemoryinfo\", \"\")\n         );\n-    UniValue obj(UniValue::VOBJ);\n-    obj.push_back(Pair(\"locked\", RPCLockedMemoryInfo()));\n-    return obj;\n+\n+    std::string mode = (request.params.size() < 1 || request.params[0].isNull()) ? \"stats\" : request.params[0].get_str();\n+    if (mode == \"stats\") {\n+        UniValue obj(UniValue::VOBJ);\n+        obj.push_back(Pair(\"locked\", RPCLockedMemoryInfo()));\n+        return obj;\n+    } else if (mode == \"mallocinfo\") {\n+#ifdef HAVE_MALLOC_INFO\n+        return RPCMallocInfo();\n+#else\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"mallocinfo is only available when compiled with glibc 2.10+\");\n+#endif\n+    } else {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown mode \" + mode);\n+    }\n+}\n+\n+uint32_t getCategoryMask(UniValue cats) {\n+    cats = cats.get_array();\n+    uint32_t mask = 0;\n+    for (unsigned int i = 0; i < cats.size(); ++i) {\n+        uint32_t flag = 0;\n+        std::string cat = cats[i].get_str();\n+        if (!GetLogCategory(&flag, &cat)) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"unknown logging category \" + cat);\n+        }\n+        mask |= flag;\n+    }\n+    return mask;\n+}\n+\n+UniValue logging(const JSONRPCRequest& request)\n+{\n+    if (request.fHelp || request.params.size() > 2) {\n+        throw std::runtime_error(\n+            \"logging [include,...] <exclude>\\n\"\n+            \"Gets and sets the logging configuration.\\n\"\n+            \"When called without an argument, returns the list of categories that are currently being debug logged.\\n\"\n+            \"When called with arguments, adds or removes categories from debug logging.\\n\"\n+            \"The valid logging categories are: \" + ListLogCategories() + \"\\n\"\n+            \"libevent logging is configured on startup and cannot be modified by this RPC during runtime.\"\n+            \"Arguments:\\n\"\n+            \"1. \\\"include\\\" (array of strings) add debug logging for these categories.\\n\"\n+            \"2. \\\"exclude\\\" (array of strings) remove debug logging for these categories.\\n\"\n+            \"\\nResult: <categories>  (string): a list of the logging categories that are active.\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"logging\", \"\\\"[\\\\\\\"all\\\\\\\"]\\\" \\\"[\\\\\\\"http\\\\\\\"]\\\"\")\n+            + HelpExampleRpc(\"logging\", \"[\\\"all\\\"], \\\"[libevent]\\\"\")\n+        );\n+    }\n+\n+    uint32_t originalLogCategories = logCategories;\n+    if (request.params.size() > 0 && request.params[0].isArray()) {\n+        logCategories |= getCategoryMask(request.params[0]);\n+    }\n+\n+    if (request.params.size() > 1 && request.params[1].isArray()) {\n+        logCategories &= ~getCategoryMask(request.params[1]);\n+    }\n+\n+    // Update libevent logging if BCLog::LIBEVENT has changed.\n+    // If the library version doesn't allow it, UpdateHTTPServerLogging() returns false,\n+    // in which case we should clear the BCLog::LIBEVENT flag.\n+    // Throw an error if the user has explicitly asked to change only the libevent\n+    // flag and it failed.\n+    uint32_t changedLogCategories = originalLogCategories ^ logCategories;\n+    if (changedLogCategories & BCLog::LIBEVENT) {\n+        if (!UpdateHTTPServerLogging(logCategories & BCLog::LIBEVENT)) {\n+            logCategories &= ~BCLog::LIBEVENT;\n+            if (changedLogCategories == BCLog::LIBEVENT) {\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, \"libevent logging cannot be updated when using libevent before v2.1.1.\");\n+            }\n+        }\n+    }\n+\n+    UniValue result(UniValue::VOBJ);\n+    std::vector<CLogCategoryActive> vLogCatActive = ListActiveLogCategories();\n+    for (const auto& logCatActive : vLogCatActive) {\n+        result.pushKV(logCatActive.category, logCatActive.active);\n+    }\n+\n+    return result;\n }\n \n UniValue echo(const JSONRPCRequest& request)\n {\n     if (request.fHelp)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"echo|echojson \\\"message\\\" ...\\n\"\n             \"\\nSimply echo back the input arguments. This command is for testing.\\n\"\n             \"\\nThe difference between echo and echojson is that echojson has argument conversion enabled in the client-side table in\"\n@@ -513,7 +641,7 @@ static const CRPCCommand commands[] =\n { //  category              name                      actor (function)         okSafeMode\n   //  --------------------- ------------------------  -----------------------  ----------\n     { \"control\",            \"getinfo\",                &getinfo,                true,  {} }, /* uses wallet if enabled */\n-    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {} },\n+    { \"control\",            \"getmemoryinfo\",          &getmemoryinfo,          true,  {\"mode\"} },\n     { \"util\",               \"validateaddress\",        &validateaddress,        true,  {\"address\"} }, /* uses wallet if enabled */\n     { \"util\",               \"createmultisig\",         &createmultisig,         true,  {\"nrequired\",\"keys\"} },\n     { \"util\",               \"verifymessage\",          &verifymessage,          true,  {\"address\",\"signature\",\"message\"} },\n@@ -522,7 +650,8 @@ static const CRPCCommand commands[] =\n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            true,  {\"timestamp\"}},\n     { \"hidden\",             \"echo\",                   &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n-    { \"hidden\",             \"echojson\",               &echo,                  true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"echojson\",               &echo,                   true,  {\"arg0\",\"arg1\",\"arg2\",\"arg3\",\"arg4\",\"arg5\",\"arg6\",\"arg7\",\"arg8\",\"arg9\"}},\n+    { \"hidden\",             \"logging\",                &logging,                true,  {\"include\", \"exclude\"}},\n };\n \n void RegisterMiscRPCCommands(CRPCTable &t)"
      },
      {
        "sha": "7f82a93ca9e67b48ed8cd5bc51f72cf869d61352",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -102,7 +102,7 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n             \"       n,                        (numeric) The heights of blocks we're currently asking from this peer\\n\"\n             \"       ...\\n\"\n             \"    ],\\n\"\n-            \"    \\\"whitelisted\\\": true|false, (boolean) Whether the peer is whitelisted\\n\"\t\t\t\t\t\n+            \"    \\\"whitelisted\\\": true|false, (boolean) Whether the peer is whitelisted\\n\"                  \n             \"    \\\"bytessent_per_msg\\\": {\\n\"\n             \"       \\\"addr\\\": n,              (numeric) The total bytes sent aggregated by message type\\n\"\n             \"       ...\\n\""
      },
      {
        "sha": "823a5775f6dc3b2b4680e5df981cc09d9be18269",
        "filename": "src/rpc/protocol.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 11,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -15,8 +15,6 @@\n #include <stdint.h>\n #include <fstream>\n \n-using namespace std;\n-\n /**\n  * JSON-RPC protocol.  Bitcoin speaks version 1.0 for maximum compatibility,\n  * but uses JSON-RPC 1.1/2.0 standards for parts of the 1.0 standard that were\n@@ -26,7 +24,7 @@ using namespace std;\n  * 1.2 spec: http://jsonrpc.org/historical/json-rpc-over-http.html\n  */\n \n-UniValue JSONRPCRequestObj(const string& strMethod, const UniValue& params, const UniValue& id)\n+UniValue JSONRPCRequestObj(const std::string& strMethod, const UniValue& params, const UniValue& id)\n {\n     UniValue request(UniValue::VOBJ);\n     request.push_back(Pair(\"method\", strMethod));\n@@ -47,13 +45,13 @@ UniValue JSONRPCReplyObj(const UniValue& result, const UniValue& error, const Un\n     return reply;\n }\n \n-string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id)\n+std::string JSONRPCReply(const UniValue& result, const UniValue& error, const UniValue& id)\n {\n     UniValue reply = JSONRPCReplyObj(result, error, id);\n     return reply.write() + \"\\n\";\n }\n \n-UniValue JSONRPCError(int code, const string& message)\n+UniValue JSONRPCError(int code, const std::string& message)\n {\n     UniValue error(UniValue::VOBJ);\n     error.push_back(Pair(\"code\", code));\n@@ -68,9 +66,9 @@ static const std::string COOKIEAUTH_USER = \"__cookie__\";\n /** Default name for auth cookie file */\n static const std::string COOKIEAUTH_FILE = \".cookie\";\n \n-boost::filesystem::path GetAuthCookieFile()\n+fs::path GetAuthCookieFile()\n {\n-    boost::filesystem::path path(GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE));\n+    fs::path path(GetArg(\"-rpccookiefile\", COOKIEAUTH_FILE));\n     if (!path.is_complete()) path = GetDataDir() / path;\n     return path;\n }\n@@ -86,7 +84,7 @@ bool GenerateAuthCookie(std::string *cookie_out)\n      * these are set to 077 in init.cpp unless overridden with -sysperms.\n      */\n     std::ofstream file;\n-    boost::filesystem::path filepath = GetAuthCookieFile();\n+    fs::path filepath = GetAuthCookieFile();\n     file.open(filepath.string().c_str());\n     if (!file.is_open()) {\n         LogPrintf(\"Unable to open cookie authentication file %s for writing\\n\", filepath.string());\n@@ -105,7 +103,7 @@ bool GetAuthCookie(std::string *cookie_out)\n {\n     std::ifstream file;\n     std::string cookie;\n-    boost::filesystem::path filepath = GetAuthCookieFile();\n+    fs::path filepath = GetAuthCookieFile();\n     file.open(filepath.string().c_str());\n     if (!file.is_open())\n         return false;\n@@ -120,8 +118,8 @@ bool GetAuthCookie(std::string *cookie_out)\n void DeleteAuthCookie()\n {\n     try {\n-        boost::filesystem::remove(GetAuthCookieFile());\n-    } catch (const boost::filesystem::filesystem_error& e) {\n+        fs::remove(GetAuthCookieFile());\n+    } catch (const fs::filesystem_error& e) {\n         LogPrintf(\"%s: Unable to remove random auth cookie file: %s\\n\", __func__, e.what());\n     }\n }"
      },
      {
        "sha": "70f7092cfeb659d8c870d02d4142c308c9768402",
        "filename": "src/rpc/protocol.h",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/protocol.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,11 +6,12 @@\n #ifndef BITCOIN_RPCPROTOCOL_H\n #define BITCOIN_RPCPROTOCOL_H\n \n+#include \"fs.h\"\n+\n #include <list>\n #include <map>\n #include <stdint.h>\n #include <string>\n-#include <boost/filesystem.hpp>\n \n #include <univalue.h>\n \n@@ -31,9 +32,15 @@ enum HTTPStatusCode\n enum RPCErrorCode\n {\n     //! Standard JSON-RPC 2.0 errors\n+    // RPC_INVALID_REQUEST is internally mapped to HTTP_BAD_REQUEST (400).\n+    // It should not be used for application-layer errors.\n     RPC_INVALID_REQUEST  = -32600,\n+    // RPC_METHOD_NOT_FOUND is internally mapped to HTTP_NOT_FOUND (404).\n+    // It should not be used for application-layer errors.\n     RPC_METHOD_NOT_FOUND = -32601,\n     RPC_INVALID_PARAMS   = -32602,\n+    // RPC_INTERNAL_ERROR should only be used for genuine errors in bitcoind\n+    // (for example datadir corruption).\n     RPC_INTERNAL_ERROR   = -32603,\n     RPC_PARSE_ERROR      = -32700,\n \n@@ -83,7 +90,7 @@ std::string JSONRPCReply(const UniValue& result, const UniValue& error, const Un\n UniValue JSONRPCError(int code, const std::string& message);\n \n /** Get name of RPC authentication cookie file */\n-boost::filesystem::path GetAuthCookieFile();\n+fs::path GetAuthCookieFile();\n /** Generate a new RPC authentication cookie and write it to disk */\n bool GenerateAuthCookie(std::string *cookie_out);\n /** Read the RPC authentication cookie from disk */"
      },
      {
        "sha": "683bb25246780b9c209940f4d7f8596b9e34a99f",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 59,
        "deletions": 112,
        "changes": 171,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -24,6 +24,7 @@\n #include \"uint256.h\"\n #include \"utilstrencodings.h\"\n #ifdef ENABLE_WALLET\n+#include \"wallet/rpcwallet.h\"\n #include \"wallet/wallet.h\"\n #endif\n \n@@ -33,79 +34,15 @@\n \n #include <univalue.h>\n \n-using namespace std;\n-\n-void ScriptPubKeyToJSON(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex)\n-{\n-    txnouttype type;\n-    vector<CTxDestination> addresses;\n-    int nRequired;\n-\n-    out.push_back(Pair(\"asm\", ScriptToAsmStr(scriptPubKey)));\n-    if (fIncludeHex)\n-        out.push_back(Pair(\"hex\", HexStr(scriptPubKey.begin(), scriptPubKey.end())));\n-\n-    if (!ExtractDestinations(scriptPubKey, type, addresses, nRequired)) {\n-        out.push_back(Pair(\"type\", GetTxnOutputType(type)));\n-        return;\n-    }\n-\n-    out.push_back(Pair(\"reqSigs\", nRequired));\n-    out.push_back(Pair(\"type\", GetTxnOutputType(type)));\n-\n-    UniValue a(UniValue::VARR);\n-    BOOST_FOREACH(const CTxDestination& addr, addresses)\n-        a.push_back(CBitcoinAddress(addr).ToString());\n-    out.push_back(Pair(\"addresses\", a));\n-}\n \n void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n {\n-    entry.push_back(Pair(\"txid\", tx.GetHash().GetHex()));\n-    entry.push_back(Pair(\"hash\", tx.GetWitnessHash().GetHex()));\n-    entry.push_back(Pair(\"size\", (int)::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION)));\n-    entry.push_back(Pair(\"vsize\", (int)::GetVirtualTransactionSize(tx)));\n-    entry.push_back(Pair(\"version\", tx.nVersion));\n-    entry.push_back(Pair(\"locktime\", (int64_t)tx.nLockTime));\n-\n-    UniValue vin(UniValue::VARR);\n-    for (unsigned int i = 0; i < tx.vin.size(); i++) {\n-        const CTxIn& txin = tx.vin[i];\n-        UniValue in(UniValue::VOBJ);\n-        if (tx.IsCoinBase())\n-            in.push_back(Pair(\"coinbase\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));\n-        else {\n-            in.push_back(Pair(\"txid\", txin.prevout.hash.GetHex()));\n-            in.push_back(Pair(\"vout\", (int64_t)txin.prevout.n));\n-            UniValue o(UniValue::VOBJ);\n-            o.push_back(Pair(\"asm\", ScriptToAsmStr(txin.scriptSig, true)));\n-            o.push_back(Pair(\"hex\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));\n-            in.push_back(Pair(\"scriptSig\", o));\n-        }\n-        if (tx.HasWitness()) {\n-                UniValue txinwitness(UniValue::VARR);\n-                for (unsigned int j = 0; j < tx.vin[i].scriptWitness.stack.size(); j++) {\n-                    std::vector<unsigned char> item = tx.vin[i].scriptWitness.stack[j];\n-                    txinwitness.push_back(HexStr(item.begin(), item.end()));\n-                }\n-                in.push_back(Pair(\"txinwitness\", txinwitness));\n-        }\n-        in.push_back(Pair(\"sequence\", (int64_t)txin.nSequence));\n-        vin.push_back(in);\n-    }\n-    entry.push_back(Pair(\"vin\", vin));\n-    UniValue vout(UniValue::VARR);\n-    for (unsigned int i = 0; i < tx.vout.size(); i++) {\n-        const CTxOut& txout = tx.vout[i];\n-        UniValue out(UniValue::VOBJ);\n-        out.push_back(Pair(\"value\", ValueFromAmount(txout.nValue)));\n-        out.push_back(Pair(\"n\", (int64_t)i));\n-        UniValue o(UniValue::VOBJ);\n-        ScriptPubKeyToJSON(txout.scriptPubKey, o, true);\n-        out.push_back(Pair(\"scriptPubKey\", o));\n-        vout.push_back(out);\n-    }\n-    entry.push_back(Pair(\"vout\", vout));\n+    // Call into TxToUniv() in bitcoin-common to decode the transaction hex.\n+    //\n+    // Blockchain contextual information (confirmations and blocktime) is not\n+    // available to code in bitcoin-common, so we query them here and push the\n+    // data into the returned UniValue.\n+    TxToUniv(tx, uint256(), entry);\n \n     if (!hashBlock.IsNull()) {\n         entry.push_back(Pair(\"blockhash\", hashBlock.GetHex()));\n@@ -126,7 +63,7 @@ void TxToJSON(const CTransaction& tx, const uint256 hashBlock, UniValue& entry)\n UniValue getrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"getrawtransaction \\\"txid\\\" ( verbose )\\n\"\n \n             \"\\nNOTE: By default this function only works for mempool transactions. If the -txindex option is\\n\"\n@@ -214,7 +151,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n         }\n         else {\n             throw JSONRPCError(RPC_TYPE_ERROR, \"Invalid type provided. Verbose parameter must be a boolean.\");\n-        } \n+        }\n     }\n \n     CTransactionRef tx;\n@@ -224,7 +161,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n             : \"No such mempool transaction. Use -txindex to enable blockchain transaction queries\") +\n             \". Use gettransaction for wallet transactions.\");\n \n-    string strHex = EncodeHexTx(*tx, RPCSerializationFlags());\n+    std::string strHex = EncodeHexTx(*tx, RPCSerializationFlags());\n \n     if (!fVerbose)\n         return strHex;\n@@ -238,7 +175,7 @@ UniValue getrawtransaction(const JSONRPCRequest& request)\n UniValue gettxoutproof(const JSONRPCRequest& request)\n {\n     if (request.fHelp || (request.params.size() != 1 && request.params.size() != 2))\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"gettxoutproof [\\\"txid\\\",...] ( blockhash )\\n\"\n             \"\\nReturns a hex-encoded proof that \\\"txid\\\" was included in a block.\\n\"\n             \"\\nNOTE: By default this function only works sometimes. This is when there is an\\n\"\n@@ -256,16 +193,16 @@ UniValue gettxoutproof(const JSONRPCRequest& request)\n             \"\\\"data\\\"           (string) A string that is a serialized, hex-encoded data for the proof.\\n\"\n         );\n \n-    set<uint256> setTxids;\n+    std::set<uint256> setTxids;\n     uint256 oneTxid;\n     UniValue txids = request.params[0].get_array();\n     for (unsigned int idx = 0; idx < txids.size(); idx++) {\n         const UniValue& txid = txids[idx];\n         if (txid.get_str().length() != 64 || !IsHex(txid.get_str()))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid txid \")+txid.get_str());\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid txid \")+txid.get_str());\n         uint256 hash(uint256S(txid.get_str()));\n         if (setTxids.count(hash))\n-            throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated txid: \")+txid.get_str());\n+            throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, duplicated txid: \")+txid.get_str());\n        setTxids.insert(hash);\n        oneTxid = hash;\n     }\n@@ -318,7 +255,7 @@ UniValue gettxoutproof(const JSONRPCRequest& request)\n UniValue verifytxoutproof(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"verifytxoutproof \\\"proof\\\"\\n\"\n             \"\\nVerifies that a proof points to a transaction in a block, returning the transaction it commits to\\n\"\n             \"and throwing an RPC error if the block is not in our best chain\\n\"\n@@ -334,8 +271,8 @@ UniValue verifytxoutproof(const JSONRPCRequest& request)\n \n     UniValue res(UniValue::VARR);\n \n-    vector<uint256> vMatch;\n-    vector<unsigned int> vIndex;\n+    std::vector<uint256> vMatch;\n+    std::vector<unsigned int> vIndex;\n     if (merkleBlock.txn.ExtractMatches(vMatch, vIndex) != merkleBlock.header.hashMerkleRoot)\n         return res;\n \n@@ -352,7 +289,7 @@ UniValue verifytxoutproof(const JSONRPCRequest& request)\n UniValue createrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"createrawtransaction [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n},...] {\\\"address\\\":amount,\\\"data\\\":\\\"hex\\\",...} ( locktime )\\n\"\n             \"\\nCreate a transaction spending the given inputs and creating new outputs.\\n\"\n             \"Outputs can be addresses or data.\\n\"\n@@ -433,9 +370,9 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         rawTx.vin.push_back(in);\n     }\n \n-    set<CBitcoinAddress> setAddress;\n-    vector<string> addrList = sendTo.getKeys();\n-    BOOST_FOREACH(const string& name_, addrList) {\n+    std::set<CBitcoinAddress> setAddress;\n+    std::vector<std::string> addrList = sendTo.getKeys();\n+    BOOST_FOREACH(const std::string& name_, addrList) {\n \n         if (name_ == \"data\") {\n             std::vector<unsigned char> data = ParseHexV(sendTo[name_].getValStr(),\"Data\");\n@@ -445,10 +382,10 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n         } else {\n             CBitcoinAddress address(name_);\n             if (!address.IsValid())\n-                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, string(\"Invalid Bitcoin address: \")+name_);\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, std::string(\"Invalid Bitcoin address: \")+name_);\n \n             if (setAddress.count(address))\n-                throw JSONRPCError(RPC_INVALID_PARAMETER, string(\"Invalid parameter, duplicated address: \")+name_);\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, std::string(\"Invalid parameter, duplicated address: \")+name_);\n             setAddress.insert(address);\n \n             CScript scriptPubKey = GetScriptForDestination(address.Get());\n@@ -465,7 +402,7 @@ UniValue createrawtransaction(const JSONRPCRequest& request)\n UniValue decoderawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"decoderawtransaction \\\"hexstring\\\"\\n\"\n             \"\\nReturn a JSON object representing the serialized, hex-encoded transaction.\\n\"\n \n@@ -526,15 +463,15 @@ UniValue decoderawtransaction(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n \n     UniValue result(UniValue::VOBJ);\n-    TxToJSON(CTransaction(std::move(mtx)), uint256(), result);\n+    TxToUniv(CTransaction(std::move(mtx)), uint256(), result);\n \n     return result;\n }\n \n UniValue decodescript(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"decodescript \\\"hexstring\\\"\\n\"\n             \"\\nDecode a hex-encoded script.\\n\"\n             \"\\nArguments:\\n\"\n@@ -561,12 +498,12 @@ UniValue decodescript(const JSONRPCRequest& request)\n     UniValue r(UniValue::VOBJ);\n     CScript script;\n     if (request.params[0].get_str().size() > 0){\n-        vector<unsigned char> scriptData(ParseHexV(request.params[0], \"argument\"));\n+        std::vector<unsigned char> scriptData(ParseHexV(request.params[0], \"argument\"));\n         script = CScript(scriptData.begin(), scriptData.end());\n     } else {\n         // Empty scripts are valid\n     }\n-    ScriptPubKeyToJSON(script, r, false);\n+    ScriptPubKeyToUniv(script, r, false);\n \n     UniValue type;\n     type = find_value(r, \"type\");\n@@ -586,6 +523,11 @@ static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::\n     UniValue entry(UniValue::VOBJ);\n     entry.push_back(Pair(\"txid\", txin.prevout.hash.ToString()));\n     entry.push_back(Pair(\"vout\", (uint64_t)txin.prevout.n));\n+    UniValue witness(UniValue::VARR);\n+    for (unsigned int i = 0; i < txin.scriptWitness.stack.size(); i++) {\n+        witness.push_back(HexStr(txin.scriptWitness.stack[i].begin(), txin.scriptWitness.stack[i].end()));\n+    }\n+    entry.push_back(Pair(\"witness\", witness));\n     entry.push_back(Pair(\"scriptSig\", HexStr(txin.scriptSig.begin(), txin.scriptSig.end())));\n     entry.push_back(Pair(\"sequence\", (uint64_t)txin.nSequence));\n     entry.push_back(Pair(\"error\", strMessage));\n@@ -594,16 +536,20 @@ static void TxInErrorToJSON(const CTxIn& txin, UniValue& vErrorsRet, const std::\n \n UniValue signrawtransaction(const JSONRPCRequest& request)\n {\n+#ifdef ENABLE_WALLET\n+    CWallet * const pwallet = GetWalletForJSONRPCRequest(request);\n+#endif\n+\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"signrawtransaction \\\"hexstring\\\" ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] [\\\"privatekey1\\\",...] sighashtype )\\n\"\n             \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n             \"The second optional argument (may be null) is an array of previous transaction outputs that\\n\"\n             \"this transaction depends on but may not yet be in the block chain.\\n\"\n             \"The third optional argument (may be null) is an array of base58-encoded private\\n\"\n             \"keys that, if given, will be the only keys used to sign the transaction.\\n\"\n #ifdef ENABLE_WALLET\n-            + HelpRequiringPassphrase() + \"\\n\"\n+            + HelpRequiringPassphrase(pwallet) + \"\\n\"\n #endif\n \n             \"\\nArguments:\\n\"\n@@ -654,15 +600,15 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n         );\n \n #ifdef ENABLE_WALLET\n-    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+    LOCK2(cs_main, pwallet ? &pwallet->cs_wallet : NULL);\n #else\n     LOCK(cs_main);\n #endif\n     RPCTypeCheck(request.params, boost::assign::list_of(UniValue::VSTR)(UniValue::VARR)(UniValue::VARR)(UniValue::VSTR), true);\n \n-    vector<unsigned char> txData(ParseHexV(request.params[0], \"argument 1\"));\n+    std::vector<unsigned char> txData(ParseHexV(request.params[0], \"argument 1\"));\n     CDataStream ssData(txData, SER_NETWORK, PROTOCOL_VERSION);\n-    vector<CMutableTransaction> txVariants;\n+    std::vector<CMutableTransaction> txVariants;\n     while (!ssData.empty()) {\n         try {\n             CMutableTransaction tx;\n@@ -717,8 +663,9 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n         }\n     }\n #ifdef ENABLE_WALLET\n-    else if (pwalletMain)\n-        EnsureWalletIsUnlocked();\n+    else if (pwallet) {\n+        EnsureWalletIsUnlocked(pwallet);\n+    }\n #endif\n \n     // Add previous txouts given in the RPC call:\n@@ -744,13 +691,13 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n             if (nOut < 0)\n                 throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"vout must be positive\");\n \n-            vector<unsigned char> pkData(ParseHexO(prevOut, \"scriptPubKey\"));\n+            std::vector<unsigned char> pkData(ParseHexO(prevOut, \"scriptPubKey\"));\n             CScript scriptPubKey(pkData.begin(), pkData.end());\n \n             {\n                 CCoinsModifier coins = view.ModifyCoins(txid);\n                 if (coins->IsAvailable(nOut) && coins->vout[nOut].scriptPubKey != scriptPubKey) {\n-                    string err(\"Previous output scriptPubKey mismatch:\\n\");\n+                    std::string err(\"Previous output scriptPubKey mismatch:\\n\");\n                     err = err + ScriptToAsmStr(coins->vout[nOut].scriptPubKey) + \"\\nvs:\\n\"+\n                         ScriptToAsmStr(scriptPubKey);\n                     throw JSONRPCError(RPC_DESERIALIZATION_ERROR, err);\n@@ -776,7 +723,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n                     });\n                 UniValue v = find_value(prevOut, \"redeemScript\");\n                 if (!v.isNull()) {\n-                    vector<unsigned char> rsData(ParseHexV(v, \"redeemScript\"));\n+                    std::vector<unsigned char> rsData(ParseHexV(v, \"redeemScript\"));\n                     CScript redeemScript(rsData.begin(), rsData.end());\n                     tempKeystore.AddCScript(redeemScript);\n                 }\n@@ -785,23 +732,23 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n     }\n \n #ifdef ENABLE_WALLET\n-    const CKeyStore& keystore = ((fGivenKeys || !pwalletMain) ? tempKeystore : *pwalletMain);\n+    const CKeyStore& keystore = ((fGivenKeys || !pwallet) ? tempKeystore : *pwallet);\n #else\n     const CKeyStore& keystore = tempKeystore;\n #endif\n \n     int nHashType = SIGHASH_ALL;\n     if (request.params.size() > 3 && !request.params[3].isNull()) {\n-        static map<string, int> mapSigHashValues =\n+        static std::map<std::string, int> mapSigHashValues =\n             boost::assign::map_list_of\n-            (string(\"ALL\"), int(SIGHASH_ALL))\n-            (string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY))\n-            (string(\"NONE\"), int(SIGHASH_NONE))\n-            (string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY))\n-            (string(\"SINGLE\"), int(SIGHASH_SINGLE))\n-            (string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY))\n+            (std::string(\"ALL\"), int(SIGHASH_ALL))\n+            (std::string(\"ALL|ANYONECANPAY\"), int(SIGHASH_ALL|SIGHASH_ANYONECANPAY))\n+            (std::string(\"NONE\"), int(SIGHASH_NONE))\n+            (std::string(\"NONE|ANYONECANPAY\"), int(SIGHASH_NONE|SIGHASH_ANYONECANPAY))\n+            (std::string(\"SINGLE\"), int(SIGHASH_SINGLE))\n+            (std::string(\"SINGLE|ANYONECANPAY\"), int(SIGHASH_SINGLE|SIGHASH_ANYONECANPAY))\n             ;\n-        string strHashType = request.params[3].get_str();\n+        std::string strHashType = request.params[3].get_str();\n         if (mapSigHashValues.count(strHashType))\n             nHashType = mapSigHashValues[strHashType];\n         else\n@@ -861,7 +808,7 @@ UniValue signrawtransaction(const JSONRPCRequest& request)\n UniValue sendrawtransaction(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"sendrawtransaction \\\"hexstring\\\" ( allowhighfees )\\n\"\n             \"\\nSubmits raw transaction (serialized, hex-encoded) to local node and network.\\n\"\n             \"\\nAlso see createrawtransaction and signrawtransaction calls.\\n\"\n@@ -891,7 +838,7 @@ UniValue sendrawtransaction(const JSONRPCRequest& request)\n     CTransactionRef tx(MakeTransactionRef(std::move(mtx)));\n     const uint256& hashTx = tx->GetHash();\n \n-    bool fLimitFree = false;\n+    bool fLimitFree = true;\n     CAmount nMaxRawTxFee = maxTxFee;\n     if (request.params.size() > 1 && request.params[1].get_bool())\n         nMaxRawTxFee = 0;"
      },
      {
        "sha": "c5fbff00775cdd546e301d702bf776d08f44579c",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 57,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,7 @@\n #include \"rpc/server.h\"\n \n #include \"base58.h\"\n+#include \"fs.h\"\n #include \"init.h\"\n #include \"random.h\"\n #include \"sync.h\"\n@@ -16,19 +17,17 @@\n #include <univalue.h>\n \n #include <boost/bind.hpp>\n-#include <boost/filesystem.hpp>\n #include <boost/foreach.hpp>\n #include <boost/shared_ptr.hpp>\n #include <boost/signals2/signal.hpp>\n #include <boost/thread.hpp>\n #include <boost/algorithm/string/case_conv.hpp> // for to_upper()\n+#include <boost/algorithm/string/classification.hpp>\n+#include <boost/algorithm/string/split.hpp>\n \n #include <memory> // for unique_ptr\n #include <unordered_map>\n \n-using namespace RPCServer;\n-using namespace std;\n-\n static bool fRPCRunning = false;\n static bool fRPCInWarmup = true;\n static std::string rpcWarmupStatus(\"RPC server started\");\n@@ -43,31 +42,25 @@ static struct CRPCSignals\n     boost::signals2::signal<void ()> Started;\n     boost::signals2::signal<void ()> Stopped;\n     boost::signals2::signal<void (const CRPCCommand&)> PreCommand;\n-    boost::signals2::signal<void (const CRPCCommand&)> PostCommand;\n } g_rpcSignals;\n \n-void RPCServer::OnStarted(boost::function<void ()> slot)\n+void RPCServer::OnStarted(std::function<void ()> slot)\n {\n     g_rpcSignals.Started.connect(slot);\n }\n \n-void RPCServer::OnStopped(boost::function<void ()> slot)\n+void RPCServer::OnStopped(std::function<void ()> slot)\n {\n     g_rpcSignals.Stopped.connect(slot);\n }\n \n-void RPCServer::OnPreCommand(boost::function<void (const CRPCCommand&)> slot)\n+void RPCServer::OnPreCommand(std::function<void (const CRPCCommand&)> slot)\n {\n     g_rpcSignals.PreCommand.connect(boost::bind(slot, _1));\n }\n \n-void RPCServer::OnPostCommand(boost::function<void (const CRPCCommand&)> slot)\n-{\n-    g_rpcSignals.PostCommand.connect(boost::bind(slot, _1));\n-}\n-\n void RPCTypeCheck(const UniValue& params,\n-                  const list<UniValue::VType>& typesExpected,\n+                  const std::list<UniValue::VType>& typesExpected,\n                   bool fAllowNull)\n {\n     unsigned int i = 0;\n@@ -92,7 +85,7 @@ void RPCTypeCheckArgument(const UniValue& value, UniValue::VType typeExpected)\n }\n \n void RPCTypeCheckObj(const UniValue& o,\n-    const map<string, UniValueType>& typesExpected,\n+    const std::map<std::string, UniValueType>& typesExpected,\n     bool fAllowNull,\n     bool fStrict)\n {\n@@ -102,19 +95,19 @@ void RPCTypeCheckObj(const UniValue& o,\n             throw JSONRPCError(RPC_TYPE_ERROR, strprintf(\"Missing %s\", t.first));\n \n         if (!(t.second.typeAny || v.type() == t.second.type || (fAllowNull && v.isNull()))) {\n-            string err = strprintf(\"Expected type %s for %s, got %s\",\n+            std::string err = strprintf(\"Expected type %s for %s, got %s\",\n                 uvTypeName(t.second.type), t.first, uvTypeName(v.type()));\n             throw JSONRPCError(RPC_TYPE_ERROR, err);\n         }\n     }\n \n     if (fStrict)\n     {\n-        BOOST_FOREACH(const string& k, o.getKeys())\n+        BOOST_FOREACH(const std::string& k, o.getKeys())\n         {\n             if (typesExpected.count(k) == 0)\n             {\n-                string err = strprintf(\"Unexpected key %s\", k);\n+                std::string err = strprintf(\"Unexpected key %s\", k);\n                 throw JSONRPCError(RPC_TYPE_ERROR, err);\n             }\n         }\n@@ -143,9 +136,9 @@ UniValue ValueFromAmount(const CAmount& amount)\n             strprintf(\"%s%d.%08d\", sign ? \"-\" : \"\", quotient, remainder));\n }\n \n-uint256 ParseHashV(const UniValue& v, string strName)\n+uint256 ParseHashV(const UniValue& v, std::string strName)\n {\n-    string strHex;\n+    std::string strHex;\n     if (v.isStr())\n         strHex = v.get_str();\n     if (!IsHex(strHex)) // Note: IsHex(\"\") is false\n@@ -156,20 +149,20 @@ uint256 ParseHashV(const UniValue& v, string strName)\n     result.SetHex(strHex);\n     return result;\n }\n-uint256 ParseHashO(const UniValue& o, string strKey)\n+uint256 ParseHashO(const UniValue& o, std::string strKey)\n {\n     return ParseHashV(find_value(o, strKey), strKey);\n }\n-vector<unsigned char> ParseHexV(const UniValue& v, string strName)\n+std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName)\n {\n-    string strHex;\n+    std::string strHex;\n     if (v.isStr())\n         strHex = v.get_str();\n     if (!IsHex(strHex))\n         throw JSONRPCError(RPC_INVALID_PARAMETER, strName+\" must be hexadecimal string (not '\"+strHex+\"')\");\n     return ParseHex(strHex);\n }\n-vector<unsigned char> ParseHexO(const UniValue& o, string strKey)\n+std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey)\n {\n     return ParseHexV(find_value(o, strKey), strKey);\n }\n@@ -178,49 +171,49 @@ vector<unsigned char> ParseHexO(const UniValue& o, string strKey)\n  * Note: This interface may still be subject to change.\n  */\n \n-std::string CRPCTable::help(const std::string& strCommand) const\n+std::string CRPCTable::help(const std::string& strCommand, const JSONRPCRequest& helpreq) const\n {\n-    string strRet;\n-    string category;\n-    set<rpcfn_type> setDone;\n-    vector<pair<string, const CRPCCommand*> > vCommands;\n+    std::string strRet;\n+    std::string category;\n+    std::set<rpcfn_type> setDone;\n+    std::vector<std::pair<std::string, const CRPCCommand*> > vCommands;\n \n-    for (map<string, const CRPCCommand*>::const_iterator mi = mapCommands.begin(); mi != mapCommands.end(); ++mi)\n+    for (std::map<std::string, const CRPCCommand*>::const_iterator mi = mapCommands.begin(); mi != mapCommands.end(); ++mi)\n         vCommands.push_back(make_pair(mi->second->category + mi->first, mi->second));\n     sort(vCommands.begin(), vCommands.end());\n \n-    BOOST_FOREACH(const PAIRTYPE(string, const CRPCCommand*)& command, vCommands)\n+    JSONRPCRequest jreq(helpreq);\n+    jreq.fHelp = true;\n+    jreq.params = UniValue();\n+\n+    BOOST_FOREACH(const PAIRTYPE(std::string, const CRPCCommand*)& command, vCommands)\n     {\n         const CRPCCommand *pcmd = command.second;\n-        string strMethod = pcmd->name;\n-        // We already filter duplicates, but these deprecated screw up the sort order\n-        if (strMethod.find(\"label\") != string::npos)\n-            continue;\n+        std::string strMethod = pcmd->name;\n         if ((strCommand != \"\" || pcmd->category == \"hidden\") && strMethod != strCommand)\n             continue;\n+        jreq.strMethod = strMethod;\n         try\n         {\n-            JSONRPCRequest jreq;\n-            jreq.fHelp = true;\n             rpcfn_type pfn = pcmd->actor;\n             if (setDone.insert(pfn).second)\n                 (*pfn)(jreq);\n         }\n         catch (const std::exception& e)\n         {\n             // Help text is returned in an exception\n-            string strHelp = string(e.what());\n+            std::string strHelp = std::string(e.what());\n             if (strCommand == \"\")\n             {\n-                if (strHelp.find('\\n') != string::npos)\n+                if (strHelp.find('\\n') != std::string::npos)\n                     strHelp = strHelp.substr(0, strHelp.find('\\n'));\n \n                 if (category != pcmd->category)\n                 {\n                     if (!category.empty())\n                         strRet += \"\\n\";\n                     category = pcmd->category;\n-                    string firstLetter = category.substr(0,1);\n+                    std::string firstLetter = category.substr(0,1);\n                     boost::to_upper(firstLetter);\n                     strRet += \"== \" + firstLetter + category.substr(1) + \" ==\\n\";\n                 }\n@@ -237,7 +230,7 @@ std::string CRPCTable::help(const std::string& strCommand) const\n UniValue help(const JSONRPCRequest& jsonRequest)\n {\n     if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"help ( \\\"command\\\" )\\n\"\n             \"\\nList all commands, or get help for a specified command.\\n\"\n             \"\\nArguments:\\n\"\n@@ -246,19 +239,19 @@ UniValue help(const JSONRPCRequest& jsonRequest)\n             \"\\\"text\\\"     (string) The help text\\n\"\n         );\n \n-    string strCommand;\n+    std::string strCommand;\n     if (jsonRequest.params.size() > 0)\n         strCommand = jsonRequest.params[0].get_str();\n \n-    return tableRPC.help(strCommand);\n+    return tableRPC.help(strCommand, jsonRequest);\n }\n \n \n UniValue stop(const JSONRPCRequest& jsonRequest)\n {\n     // Accept the deprecated and ignored 'detach' boolean argument\n     if (jsonRequest.fHelp || jsonRequest.params.size() > 1)\n-        throw runtime_error(\n+        throw std::runtime_error(\n             \"stop\\n\"\n             \"\\nStop Bitcoin server.\");\n     // Event loop will exit after current HTTP requests have been handled, so\n@@ -292,7 +285,7 @@ CRPCTable::CRPCTable()\n \n const CRPCCommand *CRPCTable::operator[](const std::string &name) const\n {\n-    map<string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n+    std::map<std::string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n     if (it == mapCommands.end())\n         return NULL;\n     return (*it).second;\n@@ -304,7 +297,7 @@ bool CRPCTable::appendCommand(const std::string& name, const CRPCCommand* pcmd)\n         return false;\n \n     // don't allow overwriting for now\n-    map<string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n+    std::map<std::string, const CRPCCommand*>::const_iterator it = mapCommands.find(name);\n     if (it != mapCommands.end())\n         return false;\n \n@@ -314,22 +307,22 @@ bool CRPCTable::appendCommand(const std::string& name, const CRPCCommand* pcmd)\n \n bool StartRPC()\n {\n-    LogPrint(\"rpc\", \"Starting RPC\\n\");\n+    LogPrint(BCLog::RPC, \"Starting RPC\\n\");\n     fRPCRunning = true;\n     g_rpcSignals.Started();\n     return true;\n }\n \n void InterruptRPC()\n {\n-    LogPrint(\"rpc\", \"Interrupting RPC\\n\");\n+    LogPrint(BCLog::RPC, \"Interrupting RPC\\n\");\n     // Interrupt e.g. running longpolls\n     fRPCRunning = false;\n }\n \n void StopRPC()\n {\n-    LogPrint(\"rpc\", \"Stopping RPC\\n\");\n+    LogPrint(BCLog::RPC, \"Stopping RPC\\n\");\n     deadlineTimers.clear();\n     DeleteAuthCookie();\n     g_rpcSignals.Stopped();\n@@ -378,8 +371,7 @@ void JSONRPCRequest::parse(const UniValue& valRequest)\n     if (!valMethod.isStr())\n         throw JSONRPCError(RPC_INVALID_REQUEST, \"Method must be a string\");\n     strMethod = valMethod.get_str();\n-    if (strMethod != \"getblocktemplate\")\n-        LogPrint(\"rpc\", \"ThreadRPCServer method=%s\\n\", SanitizeString(strMethod));\n+    LogPrint(BCLog::RPC, \"ThreadRPCServer method=%s\\n\", SanitizeString(strMethod));\n \n     // Parse params\n     UniValue valParams = find_value(request, \"params\");\n@@ -442,8 +434,16 @@ static inline JSONRPCRequest transformNamedArguments(const JSONRPCRequest& in, c\n     }\n     // Process expected parameters.\n     int hole = 0;\n-    for (const std::string &argName: argNames) {\n-        auto fr = argsIn.find(argName);\n+    for (const std::string &argNamePattern: argNames) {\n+        std::vector<std::string> vargNames;\n+        boost::algorithm::split(vargNames, argNamePattern, boost::algorithm::is_any_of(\"|\"));\n+        auto fr = argsIn.end();\n+        for (const std::string & argName : vargNames) {\n+            fr = argsIn.find(argName);\n+            if (fr != argsIn.end()) {\n+                break;\n+            }\n+        }\n         if (fr != argsIn.end()) {\n             for (int i = 0; i < hole; ++i) {\n                 // Fill hole between specified parameters with JSON nulls,\n@@ -495,8 +495,6 @@ UniValue CRPCTable::execute(const JSONRPCRequest &request) const\n     {\n         throw JSONRPCError(RPC_MISC_ERROR, e.what());\n     }\n-\n-    g_rpcSignals.PostCommand(*pcmd);\n }\n \n std::vector<std::string> CRPCTable::listCommands() const\n@@ -538,12 +536,12 @@ void RPCUnsetTimerInterface(RPCTimerInterface *iface)\n         timerInterface = NULL;\n }\n \n-void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds)\n+void RPCRunLater(const std::string& name, std::function<void(void)> func, int64_t nSeconds)\n {\n     if (!timerInterface)\n         throw JSONRPCError(RPC_INTERNAL_ERROR, \"No timer handler registered for RPC\");\n     deadlineTimers.erase(name);\n-    LogPrint(\"rpc\", \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n+    LogPrint(BCLog::RPC, \"queue run of timer %s in %i seconds (using %s)\\n\", name, nSeconds, timerInterface->Name());\n     deadlineTimers.emplace(name, std::unique_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000)));\n }\n "
      },
      {
        "sha": "1e984cbc0de22ba6fd1128b2f6d81324c333e07c",
        "filename": "src/rpc/server.h",
        "status": "modified",
        "additions": 7,
        "deletions": 16,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/server.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/rpc/server.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -15,8 +15,6 @@\n #include <stdint.h>\n #include <string>\n \n-#include <boost/function.hpp>\n-\n #include <univalue.h>\n \n static const unsigned int DEFAULT_RPC_SERIALIZE_VERSION = 1;\n@@ -25,10 +23,9 @@ class CRPCCommand;\n \n namespace RPCServer\n {\n-    void OnStarted(boost::function<void ()> slot);\n-    void OnStopped(boost::function<void ()> slot);\n-    void OnPreCommand(boost::function<void (const CRPCCommand&)> slot);\n-    void OnPostCommand(boost::function<void (const CRPCCommand&)> slot);\n+    void OnStarted(std::function<void ()> slot);\n+    void OnStopped(std::function<void ()> slot);\n+    void OnPreCommand(std::function<void (const CRPCCommand&)> slot);\n }\n \n class CBlockIndex;\n@@ -69,7 +66,7 @@ void SetRPCWarmupStatus(const std::string& newStatus);\n void SetRPCWarmupFinished();\n \n /* returns the current warmup state.  */\n-bool RPCIsInWarmup(std::string *statusOut);\n+bool RPCIsInWarmup(std::string *outStatus);\n \n /**\n  * Type-check arguments; throws JSONRPCError if wrong type given. Does not check that\n@@ -116,7 +113,7 @@ class RPCTimerInterface\n      * This is needed to cope with the case in which there is no HTTP server, but\n      * only GUI RPC console, and to break the dependency of pcserver on httprpc.\n      */\n-    virtual RPCTimerBase* NewTimer(boost::function<void(void)>& func, int64_t millis) = 0;\n+    virtual RPCTimerBase* NewTimer(std::function<void(void)>& func, int64_t millis) = 0;\n };\n \n /** Set the factory function for timers */\n@@ -130,7 +127,7 @@ void RPCUnsetTimerInterface(RPCTimerInterface *iface);\n  * Run func nSeconds from now.\n  * Overrides previous timer <name> (if any).\n  */\n-void RPCRunLater(const std::string& name, boost::function<void(void)> func, int64_t nSeconds);\n+void RPCRunLater(const std::string& name, std::function<void(void)> func, int64_t nSeconds);\n \n typedef UniValue(*rpcfn_type)(const JSONRPCRequest& jsonRequest);\n \n@@ -154,7 +151,7 @@ class CRPCTable\n public:\n     CRPCTable();\n     const CRPCCommand* operator[](const std::string& name) const;\n-    std::string help(const std::string& name) const;\n+    std::string help(const std::string& name, const JSONRPCRequest& helpreq) const;\n \n     /**\n      * Execute a method.\n@@ -190,21 +187,15 @@ extern uint256 ParseHashO(const UniValue& o, std::string strKey);\n extern std::vector<unsigned char> ParseHexV(const UniValue& v, std::string strName);\n extern std::vector<unsigned char> ParseHexO(const UniValue& o, std::string strKey);\n \n-extern int64_t nWalletUnlockTime;\n extern CAmount AmountFromValue(const UniValue& value);\n extern UniValue ValueFromAmount(const CAmount& amount);\n-extern double GetDifficulty(const CBlockIndex* blockindex = NULL);\n-extern std::string HelpRequiringPassphrase();\n extern std::string HelpExampleCli(const std::string& methodname, const std::string& args);\n extern std::string HelpExampleRpc(const std::string& methodname, const std::string& args);\n \n-extern void EnsureWalletIsUnlocked();\n-\n bool StartRPC();\n void InterruptRPC();\n void StopRPC();\n std::string JSONRPCExecBatch(const UniValue& vReq);\n-void RPCNotifyBlockChange(bool ibd, const CBlockIndex *);\n \n // Retrieves any serialization flags requested in command line argument\n int RPCSerializationFlags();"
      },
      {
        "sha": "923ba2c231ede81b503d4923de93571033ab0862",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 7,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"scheduler.h\"\n \n+#include \"random.h\"\n #include \"reverselock.h\"\n \n #include <assert.h>\n@@ -23,7 +24,9 @@ CScheduler::~CScheduler()\n #if BOOST_VERSION < 105000\n static boost::system_time toPosixTime(const boost::chrono::system_clock::time_point& t)\n {\n-    return boost::posix_time::from_time_t(boost::chrono::system_clock::to_time_t(t));\n+    // Creating the posix_time using from_time_t loses sub-second precision. So rather than exporting the time_point to time_t,\n+    // start with a posix_time at the epoch (0) and add the milliseconds that have passed since then.\n+    return boost::posix_time::from_time_t(0) + boost::posix_time::milliseconds(boost::chrono::duration_cast<boost::chrono::milliseconds>(t.time_since_epoch()).count());\n }\n #endif\n \n@@ -37,6 +40,11 @@ void CScheduler::serviceQueue()\n     // is called.\n     while (!shouldStop()) {\n         try {\n+            if (!shouldStop() && taskQueue.empty()) {\n+                reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+                // Use this chance to get a tiny bit more entropy\n+                RandAddSeedSleep();\n+            }\n             while (!shouldStop() && taskQueue.empty()) {\n                 // Wait until there is something to do.\n                 newTaskScheduled.wait(lock);\n@@ -104,20 +112,20 @@ void CScheduler::schedule(CScheduler::Function f, boost::chrono::system_clock::t\n     newTaskScheduled.notify_one();\n }\n \n-void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaSeconds)\n+void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    schedule(f, boost::chrono::system_clock::now() + boost::chrono::seconds(deltaSeconds));\n+    schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n-static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaSeconds)\n+static void Repeat(CScheduler* s, CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n     f();\n-    s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaSeconds), deltaSeconds);\n+    s->scheduleFromNow(boost::bind(&Repeat, s, f, deltaMilliSeconds), deltaMilliSeconds);\n }\n \n-void CScheduler::scheduleEvery(CScheduler::Function f, int64_t deltaSeconds)\n+void CScheduler::scheduleEvery(CScheduler::Function f, int64_t deltaMilliSeconds)\n {\n-    scheduleFromNow(boost::bind(&Repeat, this, f, deltaSeconds), deltaSeconds);\n+    scheduleFromNow(boost::bind(&Repeat, this, f, deltaMilliSeconds), deltaMilliSeconds);\n }\n \n size_t CScheduler::getQueueInfo(boost::chrono::system_clock::time_point &first,"
      },
      {
        "sha": "27412a15b465b1a98cbc46613fc17b11c45b40cd",
        "filename": "src/scheduler.h",
        "status": "modified",
        "additions": 6,
        "deletions": 7,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/scheduler.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/scheduler.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -7,10 +7,9 @@\n \n //\n // NOTE:\n-// boost::thread / boost::function / boost::chrono should be ported to\n-// std::thread / std::function / std::chrono when we support C++11.\n+// boost::thread / boost::chrono should be ported to std::thread / std::chrono\n+// when we support C++11.\n //\n-#include <boost/function.hpp>\n #include <boost/chrono/chrono.hpp>\n #include <boost/thread.hpp>\n #include <map>\n@@ -23,7 +22,7 @@\n //\n // CScheduler* s = new CScheduler();\n // s->scheduleFromNow(doSomething, 11); // Assuming a: void doSomething() { }\n-// s->scheduleFromNow(boost::bind(Class::func, this, argument), 3);\n+// s->scheduleFromNow(std::bind(Class::func, this, argument), 3);\n // boost::thread* t = new boost::thread(boost::bind(CScheduler::serviceQueue, s));\n //\n // ... then at program shutdown, clean up the thread running serviceQueue:\n@@ -39,20 +38,20 @@ class CScheduler\n     CScheduler();\n     ~CScheduler();\n \n-    typedef boost::function<void(void)> Function;\n+    typedef std::function<void(void)> Function;\n \n     // Call func at/after time t\n     void schedule(Function f, boost::chrono::system_clock::time_point t);\n \n     // Convenience method: call f once deltaSeconds from now\n-    void scheduleFromNow(Function f, int64_t deltaSeconds);\n+    void scheduleFromNow(Function f, int64_t deltaMilliSeconds);\n \n     // Another convenience method: call f approximately\n     // every deltaSeconds forever, starting deltaSeconds from now.\n     // To be more precise: every time f is finished, it\n     // is rescheduled to run deltaSeconds later. If you\n     // need more accurate scheduling, don't use this method.\n-    void scheduleEvery(Function f, int64_t deltaSeconds);\n+    void scheduleEvery(Function f, int64_t deltaMilliSeconds);\n \n     // To keep things as simple as possible, there is no unschedule.\n "
      },
      {
        "sha": "222cff59eab2581fb879dd5c6e1c43fba099f2e5",
        "filename": "src/script/interpreter.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 24,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/interpreter.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/interpreter.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -13,9 +13,7 @@\n #include \"script/script.h\"\n #include \"uint256.h\"\n \n-using namespace std;\n-\n-typedef vector<unsigned char> valtype;\n+typedef std::vector<unsigned char> valtype;\n \n namespace {\n \n@@ -56,10 +54,10 @@ bool CastToBool(const valtype& vch)\n  */\n #define stacktop(i)  (stack.at(stack.size()+(i)))\n #define altstacktop(i)  (altstack.at(altstack.size()+(i)))\n-static inline void popstack(vector<valtype>& stack)\n+static inline void popstack(std::vector<valtype>& stack)\n {\n     if (stack.empty())\n-        throw runtime_error(\"popstack(): stack empty\");\n+        throw std::runtime_error(\"popstack(): stack empty\");\n     stack.pop_back();\n }\n \n@@ -194,7 +192,7 @@ bool static IsDefinedHashtypeSignature(const valtype &vchSig) {\n     return true;\n }\n \n-bool CheckSignatureEncoding(const vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror) {\n+bool CheckSignatureEncoding(const std::vector<unsigned char> &vchSig, unsigned int flags, ScriptError* serror) {\n     // Empty signature. Not strictly DER encoded, but allowed to provide a\n     // compact way to provide an invalid signature for use with CHECK(MULTI)SIG\n     if (vchSig.size() == 0) {\n@@ -245,23 +243,23 @@ bool static CheckMinimalPush(const valtype& data, opcodetype opcode) {\n     return true;\n }\n \n-bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n+bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* serror)\n {\n     static const CScriptNum bnZero(0);\n     static const CScriptNum bnOne(1);\n-    static const CScriptNum bnFalse(0);\n-    static const CScriptNum bnTrue(1);\n+    // static const CScriptNum bnFalse(0);\n+    // static const CScriptNum bnTrue(1);\n     static const valtype vchFalse(0);\n-    static const valtype vchZero(0);\n+    // static const valtype vchZero(0);\n     static const valtype vchTrue(1, 1);\n \n     CScript::const_iterator pc = script.begin();\n     CScript::const_iterator pend = script.end();\n     CScript::const_iterator pbegincodehash = script.begin();\n     opcodetype opcode;\n     valtype vchPushValue;\n-    vector<bool> vfExec;\n-    vector<valtype> altstack;\n+    std::vector<bool> vfExec;\n+    std::vector<valtype> altstack;\n     set_error(serror, SCRIPT_ERR_UNKNOWN_ERROR);\n     if (script.size() > MAX_SCRIPT_SIZE)\n         return set_error(serror, SCRIPT_ERR_SCRIPT_SIZE);\n@@ -1030,7 +1028,7 @@ bool EvalScript(vector<vector<unsigned char> >& stack, const CScript& script, un\n             }\n \n             // Size limits\n-            if (stack.size() + altstack.size() > 1000)\n+            if (stack.size() + altstack.size() > MAX_STACK_SIZE)\n                 return set_error(serror, SCRIPT_ERR_STACK_SIZE);\n         }\n     }\n@@ -1144,24 +1142,24 @@ class CTransactionSignatureSerializer {\n \n uint256 GetPrevoutHash(const CTransaction& txTo) {\n     CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n-        ss << txTo.vin[n].prevout;\n+    for (const auto& txin : txTo.vin) {\n+        ss << txin.prevout;\n     }\n     return ss.GetHash();\n }\n \n uint256 GetSequenceHash(const CTransaction& txTo) {\n     CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vin.size(); n++) {\n-        ss << txTo.vin[n].nSequence;\n+    for (const auto& txin : txTo.vin) {\n+        ss << txin.nSequence;\n     }\n     return ss.GetHash();\n }\n \n uint256 GetOutputsHash(const CTransaction& txTo) {\n     CHashWriter ss(SER_GETHASH, 0);\n-    for (unsigned int n = 0; n < txTo.vout.size(); n++) {\n-        ss << txTo.vout[n];\n+    for (const auto& txout : txTo.vout) {\n+        ss << txout;\n     }\n     return ss.GetHash();\n }\n@@ -1250,14 +1248,14 @@ bool TransactionSignatureChecker::VerifySignature(const std::vector<unsigned cha\n     return pubkey.Verify(sighash, vchSig);\n }\n \n-bool TransactionSignatureChecker::CheckSig(const vector<unsigned char>& vchSigIn, const vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n+bool TransactionSignatureChecker::CheckSig(const std::vector<unsigned char>& vchSigIn, const std::vector<unsigned char>& vchPubKey, const CScript& scriptCode, SigVersion sigversion) const\n {\n     CPubKey pubkey(vchPubKey);\n     if (!pubkey.IsValid())\n         return false;\n \n     // Hash type is one byte tacked on to the end of the signature\n-    vector<unsigned char> vchSig(vchSigIn);\n+    std::vector<unsigned char> vchSig(vchSigIn);\n     if (vchSig.empty())\n         return false;\n     int nHashType = vchSig.back();\n@@ -1355,7 +1353,7 @@ bool TransactionSignatureChecker::CheckSequence(const CScriptNum& nSequence) con\n \n static bool VerifyWitnessProgram(const CScriptWitness& witness, int witversion, const std::vector<unsigned char>& program, unsigned int flags, const BaseSignatureChecker& checker, ScriptError* serror)\n {\n-    vector<vector<unsigned char> > stack;\n+    std::vector<std::vector<unsigned char> > stack;\n     CScript scriptPubKey;\n \n     if (witversion == 0) {\n@@ -1420,7 +1418,7 @@ bool VerifyScript(const CScript& scriptSig, const CScript& scriptPubKey, const C\n         return set_error(serror, SCRIPT_ERR_SIG_PUSHONLY);\n     }\n \n-    vector<vector<unsigned char> > stack, stackCopy;\n+    std::vector<std::vector<unsigned char> > stack, stackCopy;\n     if (!EvalScript(stack, scriptSig, flags, checker, SIGVERSION_BASE, serror))\n         // serror is set\n         return false;\n@@ -1558,7 +1556,7 @@ size_t CountWitnessSigOps(const CScript& scriptSig, const CScript& scriptPubKey,\n \n     if (scriptPubKey.IsPayToScriptHash() && scriptSig.IsPushOnly()) {\n         CScript::const_iterator pc = scriptSig.begin();\n-        vector<unsigned char> data;\n+        std::vector<unsigned char> data;\n         while (pc < scriptSig.end()) {\n             opcodetype opcode;\n             scriptSig.GetOp(pc, opcode, data);"
      },
      {
        "sha": "60f6f711e6087ff4d62bc36a7eefe7e7239301e9",
        "filename": "src/script/interpreter.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/interpreter.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/interpreter.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/interpreter.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -171,7 +171,7 @@ class MutableTransactionSignatureChecker : public TransactionSignatureChecker\n     const CTransaction txTo;\n \n public:\n-    MutableTransactionSignatureChecker(const CMutableTransaction* txToIn, unsigned int nInIn, const CAmount& amount) : TransactionSignatureChecker(&txTo, nInIn, amount), txTo(*txToIn) {}\n+    MutableTransactionSignatureChecker(const CMutableTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn) : TransactionSignatureChecker(&txTo, nInIn, amountIn), txTo(*txToIn) {}\n };\n \n bool EvalScript(std::vector<std::vector<unsigned char> >& stack, const CScript& script, unsigned int flags, const BaseSignatureChecker& checker, SigVersion sigversion, ScriptError* error = NULL);"
      },
      {
        "sha": "a4743281b1c8a85513c3296a01a60c8e0dcb5df7",
        "filename": "src/script/ismine.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/ismine.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/ismine.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/ismine.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -13,11 +13,9 @@\n \n #include <boost/foreach.hpp>\n \n-using namespace std;\n+typedef std::vector<unsigned char> valtype;\n \n-typedef vector<unsigned char> valtype;\n-\n-unsigned int HaveKeys(const vector<valtype>& pubkeys, const CKeyStore& keystore)\n+unsigned int HaveKeys(const std::vector<valtype>& pubkeys, const CKeyStore& keystore)\n {\n     unsigned int nResult = 0;\n     BOOST_FOREACH(const valtype& pubkey, pubkeys)\n@@ -49,7 +47,7 @@ isminetype IsMine(const CKeyStore &keystore, const CTxDestination& dest, bool& i\n \n isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool& isInvalid, SigVersion sigversion)\n {\n-    vector<valtype> vSolutions;\n+    std::vector<valtype> vSolutions;\n     txnouttype whichType;\n     if (!Solver(scriptPubKey, whichType, vSolutions)) {\n         if (keystore.HaveWatchOnly(scriptPubKey))\n@@ -132,7 +130,7 @@ isminetype IsMine(const CKeyStore &keystore, const CScript& scriptPubKey, bool&\n         // partially owned (somebody else has a key that can spend\n         // them) enable spend-out-from-under-you attacks, especially\n         // in shared-wallet situations.\n-        vector<valtype> keys(vSolutions.begin()+1, vSolutions.begin()+vSolutions.size()-1);\n+        std::vector<valtype> keys(vSolutions.begin()+1, vSolutions.begin()+vSolutions.size()-1);\n         if (sigversion != SIGVERSION_BASE) {\n             for (size_t i = 0; i < keys.size(); i++) {\n                 if (keys[i].size() != 33) {"
      },
      {
        "sha": "70eb8a139b0a8f6ea6bb8890a8c4de774038a7a4",
        "filename": "src/script/script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,8 +8,6 @@\n #include \"tinyformat.h\"\n #include \"utilstrencodings.h\"\n \n-using namespace std;\n-\n const char* GetOpName(opcodetype opcode)\n {\n     switch (opcode)\n@@ -186,18 +184,18 @@ unsigned int CScript::GetSigOpCount(const CScript& scriptSig) const\n     // get the last item that the scriptSig\n     // pushes onto the stack:\n     const_iterator pc = scriptSig.begin();\n-    vector<unsigned char> data;\n+    std::vector<unsigned char> vData;\n     while (pc < scriptSig.end())\n     {\n         opcodetype opcode;\n-        if (!scriptSig.GetOp(pc, opcode, data))\n+        if (!scriptSig.GetOp(pc, opcode, vData))\n             return 0;\n         if (opcode > OP_16)\n             return 0;\n     }\n \n     /// ... and return its opcount:\n-    CScript subscript(data.begin(), data.end());\n+    CScript subscript(vData.begin(), vData.end());\n     return subscript.GetSigOpCount(true);\n }\n "
      },
      {
        "sha": "95a5999a13b538be8d87a984b2c60ec608399a8c",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -30,6 +30,9 @@ static const int MAX_PUBKEYS_PER_MULTISIG = 20;\n // Maximum script length in bytes\n static const int MAX_SCRIPT_SIZE = 10000;\n \n+// Maximum number of values on script interpreter stack\n+static const int MAX_STACK_SIZE = 1000;\n+\n // Threshold for nLockTime: below this value it is interpreted as block number,\n // otherwise as UNIX timestamp.\n static const unsigned int LOCKTIME_THRESHOLD = 500000000; // Tue Nov  5 00:53:20 1985 UTC\n@@ -448,16 +451,16 @@ class CScript : public CScriptBase\n         else if (b.size() <= 0xffff)\n         {\n             insert(end(), OP_PUSHDATA2);\n-            uint8_t data[2];\n-            WriteLE16(data, b.size());\n-            insert(end(), data, data + sizeof(data));\n+            uint8_t _data[2];\n+            WriteLE16(_data, b.size());\n+            insert(end(), _data, _data + sizeof(_data));\n         }\n         else\n         {\n             insert(end(), OP_PUSHDATA4);\n-            uint8_t data[4];\n-            WriteLE32(data, b.size());\n-            insert(end(), data, data + sizeof(data));\n+            uint8_t _data[4];\n+            WriteLE32(_data, b.size());\n+            insert(end(), _data, _data + sizeof(_data));\n         }\n         insert(end(), b.begin(), b.end());\n         return *this;"
      },
      {
        "sha": "7bb8d9941b56dbdba54a57861250639bc1cc7fe3",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 23,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -15,28 +15,6 @@\n #include <boost/thread.hpp>\n \n namespace {\n-\n-/**\n- * We're hashing a nonce into the entries themselves, so we don't need extra\n- * blinding in the set hash computation.\n- *\n- * This may exhibit platform endian dependent behavior but because these are\n- * nonced hashes (random) and this state is only ever used locally it is safe.\n- * All that matters is local consistency.\n- */\n-class SignatureCacheHasher\n-{\n-public:\n-    template <uint8_t hash_select>\n-    uint32_t operator()(const uint256& key) const\n-    {\n-        static_assert(hash_select <8, \"SignatureCacheHasher only has 8 hashes available.\");\n-        uint32_t u;\n-        std::memcpy(&u, key.begin()+4*hash_select, 4);\n-        return u;\n-    }\n-};\n-\n /**\n  * Valid signature cache, to avoid doing expensive ECDSA signature checking\n  * twice for every transaction (once when accepted into memory pool, and\n@@ -90,7 +68,8 @@ class CSignatureCache\n static CSignatureCache signatureCache;\n }\n \n-// To be called once in AppInit2/TestingSetup to initialize the signatureCache\n+// To be called once in AppInitMain/BasicTestingSetup to initialize the\n+// signatureCache.\n void InitSignatureCache()\n {\n     // nMaxCacheSize is unsigned. If -maxsigcachesize is set to zero,"
      },
      {
        "sha": "55cec4cc8d730edaf87b9a3557e186c78f561cb1",
        "filename": "src/script/sigcache.h",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sigcache.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sigcache.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -19,13 +19,34 @@ static const int64_t MAX_MAX_SIG_CACHE_SIZE = 16384;\n \n class CPubKey;\n \n+/**\n+ * We're hashing a nonce into the entries themselves, so we don't need extra\n+ * blinding in the set hash computation.\n+ *\n+ * This may exhibit platform endian dependent behavior but because these are\n+ * nonced hashes (random) and this state is only ever used locally it is safe.\n+ * All that matters is local consistency.\n+ */\n+class SignatureCacheHasher\n+{\n+public:\n+    template <uint8_t hash_select>\n+    uint32_t operator()(const uint256& key) const\n+    {\n+        static_assert(hash_select <8, \"SignatureCacheHasher only has 8 hashes available.\");\n+        uint32_t u;\n+        std::memcpy(&u, key.begin()+4*hash_select, 4);\n+        return u;\n+    }\n+};\n+\n class CachingTransactionSignatureChecker : public TransactionSignatureChecker\n {\n private:\n     bool store;\n \n public:\n-    CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amount, bool storeIn, PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amount, txdataIn), store(storeIn) {}\n+    CachingTransactionSignatureChecker(const CTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn, bool storeIn, PrecomputedTransactionData& txdataIn) : TransactionSignatureChecker(txToIn, nInIn, amountIn, txdataIn), store(storeIn) {}\n \n     bool VerifySignature(const std::vector<unsigned char>& vchSig, const CPubKey& vchPubKey, const uint256& sighash) const;\n };"
      },
      {
        "sha": "5682418546640685619a4653657892d3af37b1a7",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 15,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -14,8 +14,6 @@\n \n #include <boost/foreach.hpp>\n \n-using namespace std;\n-\n typedef std::vector<unsigned char> valtype;\n \n TransactionSignatureCreator::TransactionSignatureCreator(const CKeyStore* keystoreIn, const CTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn, int nHashTypeIn) : BaseSignatureCreator(keystoreIn), txTo(txToIn), nIn(nInIn), nHashType(nHashTypeIn), amount(amountIn), checker(txTo, nIn, amountIn) {}\n@@ -39,14 +37,14 @@ bool TransactionSignatureCreator::CreateSig(std::vector<unsigned char>& vchSig,\n \n static bool Sign1(const CKeyID& address, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n {\n-    vector<unsigned char> vchSig;\n+    std::vector<unsigned char> vchSig;\n     if (!creator.CreateSig(vchSig, address, scriptCode, sigversion))\n         return false;\n     ret.push_back(vchSig);\n     return true;\n }\n \n-static bool SignN(const vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n+static bool SignN(const std::vector<valtype>& multisigdata, const BaseSignatureCreator& creator, const CScript& scriptCode, std::vector<valtype>& ret, SigVersion sigversion)\n {\n     int nSigned = 0;\n     int nRequired = multisigdata.front()[0];\n@@ -73,7 +71,7 @@ static bool SignStep(const BaseSignatureCreator& creator, const CScript& scriptP\n     uint160 h160;\n     ret.clear();\n \n-    vector<valtype> vSolutions;\n+    std::vector<valtype> vSolutions;\n     if (!Solver(scriptPubKey, whichTypeRet, vSolutions))\n         return false;\n \n@@ -125,7 +123,7 @@ static bool SignStep(const BaseSignatureCreator& creator, const CScript& scriptP\n     }\n }\n \n-static CScript PushAll(const vector<valtype>& values)\n+static CScript PushAll(const std::vector<valtype>& values)\n {\n     CScript result;\n     BOOST_FOREACH(const valtype& v, values) {\n@@ -228,12 +226,12 @@ bool SignSignature(const CKeyStore &keystore, const CTransaction& txFrom, CMutab\n     return SignSignature(keystore, txout.scriptPubKey, txTo, nIn, txout.nValue, nHashType);\n }\n \n-static vector<valtype> CombineMultisig(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                               const vector<valtype>& vSolutions,\n-                               const vector<valtype>& sigs1, const vector<valtype>& sigs2, SigVersion sigversion)\n+static std::vector<valtype> CombineMultisig(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n+                               const std::vector<valtype>& vSolutions,\n+                               const std::vector<valtype>& sigs1, const std::vector<valtype>& sigs2, SigVersion sigversion)\n {\n     // Combine all the signatures we've got:\n-    set<valtype> allsigs;\n+    std::set<valtype> allsigs;\n     BOOST_FOREACH(const valtype& v, sigs1)\n     {\n         if (!v.empty())\n@@ -249,7 +247,7 @@ static vector<valtype> CombineMultisig(const CScript& scriptPubKey, const BaseSi\n     assert(vSolutions.size() > 1);\n     unsigned int nSigsRequired = vSolutions.front()[0];\n     unsigned int nPubKeys = vSolutions.size()-2;\n-    map<valtype, valtype> sigs;\n+    std::map<valtype, valtype> sigs;\n     BOOST_FOREACH(const valtype& sig, allsigs)\n     {\n         for (unsigned int i = 0; i < nPubKeys; i++)\n@@ -306,7 +304,7 @@ struct Stacks\n }\n \n static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignatureChecker& checker,\n-                                 const txnouttype txType, const vector<valtype>& vSolutions,\n+                                 const txnouttype txType, const std::vector<valtype>& vSolutions,\n                                  Stacks sigs1, Stacks sigs2, SigVersion sigversion)\n {\n     switch (txType)\n@@ -340,7 +338,7 @@ static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n             CScript pubKey2(spk.begin(), spk.end());\n \n             txnouttype txType2;\n-            vector<vector<unsigned char> > vSolutions2;\n+            std::vector<std::vector<unsigned char> > vSolutions2;\n             Solver(pubKey2, txType2, vSolutions2);\n             sigs1.script.pop_back();\n             sigs2.script.pop_back();\n@@ -360,7 +358,7 @@ static Stacks CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n             // Recur to combine:\n             CScript pubKey2(sigs1.witness.back().begin(), sigs1.witness.back().end());\n             txnouttype txType2;\n-            vector<valtype> vSolutions2;\n+            std::vector<valtype> vSolutions2;\n             Solver(pubKey2, txType2, vSolutions2);\n             sigs1.witness.pop_back();\n             sigs1.script = sigs1.witness;\n@@ -383,7 +381,7 @@ SignatureData CombineSignatures(const CScript& scriptPubKey, const BaseSignature\n                           const SignatureData& scriptSig1, const SignatureData& scriptSig2)\n {\n     txnouttype txType;\n-    vector<vector<unsigned char> > vSolutions;\n+    std::vector<std::vector<unsigned char> > vSolutions;\n     Solver(scriptPubKey, txType, vSolutions);\n \n     return CombineSignatures(scriptPubKey, checker, txType, vSolutions, Stacks(scriptSig1), Stacks(scriptSig2), SIGVERSION_BASE).Output();"
      },
      {
        "sha": "f3c0be41391b9b6775a2470f21bcd9e46c488ed4",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -48,7 +48,7 @@ class MutableTransactionSignatureCreator : public TransactionSignatureCreator {\n     CTransaction tx;\n \n public:\n-    MutableTransactionSignatureCreator(const CKeyStore* keystoreIn, const CMutableTransaction* txToIn, unsigned int nInIn, const CAmount& amount, int nHashTypeIn) : TransactionSignatureCreator(keystoreIn, &tx, nInIn, amount, nHashTypeIn), tx(*txToIn) {}\n+    MutableTransactionSignatureCreator(const CKeyStore* keystoreIn, const CMutableTransaction* txToIn, unsigned int nInIn, const CAmount& amountIn, int nHashTypeIn) : TransactionSignatureCreator(keystoreIn, &tx, nInIn, amountIn, nHashTypeIn), tx(*txToIn) {}\n };\n \n /** A signature creator that just produces 72-byte empty signatures. */"
      },
      {
        "sha": "63f20b099320968bdd55364abfb32c3b3538d1f1",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -12,9 +12,7 @@\n \n #include <boost/foreach.hpp>\n \n-using namespace std;\n-\n-typedef vector<unsigned char> valtype;\n+typedef std::vector<unsigned char> valtype;\n \n bool fAcceptDatacarrier = DEFAULT_ACCEPT_DATACARRIER;\n unsigned nMaxDatacarrierBytes = MAX_OP_RETURN_RELAY;\n@@ -40,20 +38,20 @@ const char* GetTxnOutputType(txnouttype t)\n /**\n  * Return public keys or hashes from scriptPubKey, for 'standard' transaction types.\n  */\n-bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsigned char> >& vSolutionsRet)\n+bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::vector<unsigned char> >& vSolutionsRet)\n {\n     // Templates\n-    static multimap<txnouttype, CScript> mTemplates;\n+    static std::multimap<txnouttype, CScript> mTemplates;\n     if (mTemplates.empty())\n     {\n         // Standard tx, sender provides pubkey, receiver adds signature\n-        mTemplates.insert(make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n+        mTemplates.insert(std::make_pair(TX_PUBKEY, CScript() << OP_PUBKEY << OP_CHECKSIG));\n \n         // Bitcoin address tx, sender provides hash of pubkey, receiver provides signature and pubkey\n-        mTemplates.insert(make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n+        mTemplates.insert(std::make_pair(TX_PUBKEYHASH, CScript() << OP_DUP << OP_HASH160 << OP_PUBKEYHASH << OP_EQUALVERIFY << OP_CHECKSIG));\n \n         // Sender provides N pubkeys, receivers provides M signatures\n-        mTemplates.insert(make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n+        mTemplates.insert(std::make_pair(TX_MULTISIG, CScript() << OP_SMALLINTEGER << OP_PUBKEYS << OP_SMALLINTEGER << OP_CHECKMULTISIG));\n     }\n \n     vSolutionsRet.clear();\n@@ -63,7 +61,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n     if (scriptPubKey.IsPayToScriptHash())\n     {\n         typeRet = TX_SCRIPTHASH;\n-        vector<unsigned char> hashBytes(scriptPubKey.begin()+2, scriptPubKey.begin()+22);\n+        std::vector<unsigned char> hashBytes(scriptPubKey.begin()+2, scriptPubKey.begin()+22);\n         vSolutionsRet.push_back(hashBytes);\n         return true;\n     }\n@@ -102,7 +100,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n         vSolutionsRet.clear();\n \n         opcodetype opcode1, opcode2;\n-        vector<unsigned char> vch1, vch2;\n+        std::vector<unsigned char> vch1, vch2;\n \n         // Compare\n         CScript::const_iterator pc1 = script1.begin();\n@@ -181,7 +179,7 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, vector<vector<unsi\n \n bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n {\n-    vector<valtype> vSolutions;\n+    std::vector<valtype> vSolutions;\n     txnouttype whichType;\n     if (!Solver(scriptPubKey, whichType, vSolutions))\n         return false;\n@@ -209,11 +207,11 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     return false;\n }\n \n-bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, vector<CTxDestination>& addressRet, int& nRequiredRet)\n+bool ExtractDestinations(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet)\n {\n     addressRet.clear();\n     typeRet = TX_NONSTANDARD;\n-    vector<valtype> vSolutions;\n+    std::vector<valtype> vSolutions;\n     if (!Solver(scriptPubKey, typeRet, vSolutions))\n         return false;\n     if (typeRet == TX_NULL_DATA){"
      },
      {
        "sha": "e82ddf2c5a7bbacf018ba8b13b907b58fdff93be",
        "filename": "src/serialize.h",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/serialize.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/serialize.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/serialize.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -336,11 +336,18 @@ I ReadVarInt(Stream& is)\n     I n = 0;\n     while(true) {\n         unsigned char chData = ser_readdata8(is);\n+        if (n > (std::numeric_limits<I>::max() >> 7)) {\n+           throw std::ios_base::failure(\"ReadVarInt(): size too large\");\n+        }\n         n = (n << 7) | (chData & 0x7F);\n-        if (chData & 0x80)\n+        if (chData & 0x80) {\n+            if (n == std::numeric_limits<I>::max()) {\n+                throw std::ios_base::failure(\"ReadVarInt(): size too large\");\n+            }\n             n++;\n-        else\n+        } else {\n             return n;\n+        }\n     }\n }\n "
      },
      {
        "sha": "8dc5a19ead4b5531566e0210dcdaa6ff2837cd00",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 11,
        "deletions": 7,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -248,7 +248,8 @@ class CDataStream\n \n     void insert(iterator it, std::vector<char>::const_iterator first, std::vector<char>::const_iterator last)\n     {\n-        assert(last - first >= 0);\n+        if (last == first) return;\n+        assert(last - first > 0);\n         if (it == vch.begin() + nReadPos && (unsigned int)(last - first) <= nReadPos)\n         {\n             // special case for inserting at the front when there's room\n@@ -261,7 +262,8 @@ class CDataStream\n \n     void insert(iterator it, const char* first, const char* last)\n     {\n-        assert(last - first >= 0);\n+        if (last == first) return;\n+        assert(last - first > 0);\n         if (it == vch.begin() + nReadPos && (unsigned int)(last - first) <= nReadPos)\n         {\n             // special case for inserting at the front when there's room\n@@ -339,6 +341,8 @@ class CDataStream\n \n     void read(char* pch, size_t nSize)\n     {\n+        if (nSize == 0) return;\n+\n         // Read from the beginning of the buffer\n         unsigned int nReadPosNext = nReadPos + nSize;\n         if (nReadPosNext >= vch.size())\n@@ -404,8 +408,8 @@ class CDataStream\n         return (*this);\n     }\n \n-    void GetAndClear(CSerializeData &data) {\n-        data.insert(data.end(), begin(), end());\n+    void GetAndClear(CSerializeData &d) {\n+        d.insert(d.end(), begin(), end());\n         clear();\n     }\n \n@@ -584,11 +588,11 @@ class CBufferedFile\n             readNow = nAvail;\n         if (readNow == 0)\n             return false;\n-        size_t read = fread((void*)&vchBuf[pos], 1, readNow, src);\n-        if (read == 0) {\n+        size_t nBytes = fread((void*)&vchBuf[pos], 1, readNow, src);\n+        if (nBytes == 0) {\n             throw std::ios_base::failure(feof(src) ? \"CBufferedFile::Fill: end of file\" : \"CBufferedFile::Fill: fread failed\");\n         } else {\n-            nSrcPos += read;\n+            nSrcPos += nBytes;\n             return true;\n         }\n     }"
      },
      {
        "sha": "f020216c7300a6a7894da8157cc2ffe87b3f62a3",
        "filename": "src/support/cleanse.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/support/cleanse.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/support/cleanse.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/cleanse.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,6 +8,7 @@\n \n #include <stdlib.h>\n \n+// Attempt to overwrite data in the specified memory span.\n void memory_cleanse(void *ptr, size_t len);\n \n #endif // BITCOIN_SUPPORT_CLEANSE_H"
      },
      {
        "sha": "98c15810934dc56f401b358469db934a371560ac",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -357,8 +357,8 @@ LockedPool::LockedPageArena::~LockedPageArena()\n /*******************************************************************************/\n // Implementation: LockedPoolManager\n //\n-LockedPoolManager::LockedPoolManager(std::unique_ptr<LockedPageAllocator> allocator):\n-    LockedPool(std::move(allocator), &LockedPoolManager::LockingFailed)\n+LockedPoolManager::LockedPoolManager(std::unique_ptr<LockedPageAllocator> allocator_in):\n+    LockedPool(std::move(allocator_in), &LockedPoolManager::LockingFailed)\n {\n }\n "
      },
      {
        "sha": "552682ab6748794600ec60629e6e9920c09ff274",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -46,8 +46,6 @@ struct CLockLocation {\n         return mutexName + \"  \" + sourceFile + \":\" + itostr(sourceLine) + (fTry ? \" (TRY)\" : \"\");\n     }\n \n-    std::string MutexName() const { return mutexName; }\n-\n     bool fTry;\n private:\n     std::string mutexName;"
      },
      {
        "sha": "9274f50d8b46928c879600e12d432c5624cd40bc",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -97,7 +97,6 @@ class CCriticalSection : public AnnotatedMixin<boost::recursive_mutex>\n     }\n };\n \n-typedef CCriticalSection CDynamicCriticalSection;\n /** Wrapped boost mutex: supports waiting but not recursive locking */\n typedef AnnotatedMixin<boost::mutex> CWaitableCriticalSection;\n "
      },
      {
        "sha": "eeb04c6ffae6928fe2c46d7b2a15ce39f9cd02a3",
        "filename": "src/test/README.md",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -50,12 +50,3 @@ examine `uint256_tests.cpp`.\n For further reading, I found the following website to be helpful in\n explaining how the boost unit test framework works:\n [http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/](http://www.alittlemadness.com/2009/03/31/c-unit-testing-with-boosttest/).\n-\n-### bitcoin-util-test.py\n-\n-The test directory also contains the bitcoin-util-test.py tool, which tests bitcoin utils (currently just bitcoin-tx). This test gets run automatically during the `make check` build process. It is also possible to run the test manually from the src directory:\n-\n-```\n-test/bitcoin-util-test.py --srcdir=[current directory]\n-\n-```"
      },
      {
        "sha": "dc5372a07043988aeb3b4b611bf7c99fc1551587",
        "filename": "src/test/addrman_tests.cpp",
        "status": "modified",
        "additions": 111,
        "deletions": 101,
        "changes": 212,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/addrman_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/addrman_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/addrman_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -84,36 +84,47 @@ BOOST_AUTO_TEST_CASE(addrman_simple)\n \n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n-    // Test 1: Does Addrman respond correctly when empty.\n-    BOOST_CHECK(addrman.size() == 0);\n+    // Test: Does Addrman respond correctly when empty.\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n     CAddrInfo addr_null = addrman.Select();\n-    BOOST_CHECK(addr_null.ToString() == \"[::]:0\");\n+    BOOST_CHECK_EQUAL(addr_null.ToString(), \"[::]:0\");\n \n-    // Test 2: Does Addrman::Add work as expected.\n+    // Test: Does Addrman::Add work as expected.\n     CService addr1 = ResolveService(\"250.1.1.1\", 8333);\n-    addrman.Add(CAddress(addr1, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK(addrman.Add(CAddress(addr1, NODE_NONE), source));\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n     CAddrInfo addr_ret1 = addrman.Select();\n-    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+    BOOST_CHECK_EQUAL(addr_ret1.ToString(), \"250.1.1.1:8333\");\n \n-    // Test 3: Does IP address deduplication work correctly.\n+    // Test: Does IP address deduplication work correctly.\n     //  Expected dup IP should not be added.\n     CService addr1_dup = ResolveService(\"250.1.1.1\", 8333);\n-    addrman.Add(CAddress(addr1_dup, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK(!addrman.Add(CAddress(addr1_dup, NODE_NONE), source));\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n+\n \n+    // Test: New table has one addr and we add a diff addr we should\n+    //  have at least one addr.\n+    // Note that addrman's size cannot be tested reliably after insertion, as\n+    // hash collisions may occur. But we can always be sure of at least one\n+    // success.\n \n-    // Test 5: New table has one addr and we add a diff addr we should\n-    //  have two addrs.\n     CService addr2 = ResolveService(\"250.1.1.2\", 8333);\n-    addrman.Add(CAddress(addr2, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 2);\n+    BOOST_CHECK(addrman.Add(CAddress(addr2, NODE_NONE), source));\n+    BOOST_CHECK(addrman.size() >= 1);\n \n-    // Test 6: AddrMan::Clear() should empty the new table.\n+    // Test: AddrMan::Clear() should empty the new table.\n     addrman.Clear();\n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n     CAddrInfo addr_null2 = addrman.Select();\n-    BOOST_CHECK(addr_null2.ToString() == \"[::]:0\");\n+    BOOST_CHECK_EQUAL(addr_null2.ToString(), \"[::]:0\");\n+\n+    // Test: AddrMan::Add multiple addresses works as expected\n+    std::vector<CAddress> vAddr;\n+    vAddr.push_back(CAddress(ResolveService(\"250.1.1.3\", 8333), NODE_NONE));\n+    vAddr.push_back(CAddress(ResolveService(\"250.1.1.4\", 8333), NODE_NONE));\n+    BOOST_CHECK(addrman.Add(vAddr, source));\n+    BOOST_CHECK(addrman.size() >= 1);\n }\n \n BOOST_AUTO_TEST_CASE(addrman_ports)\n@@ -125,26 +136,26 @@ BOOST_AUTO_TEST_CASE(addrman_ports)\n \n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     // Test 7; Addr with same IP but diff port does not replace existing addr.\n     CService addr1 = ResolveService(\"250.1.1.1\", 8333);\n     addrman.Add(CAddress(addr1, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n \n     CService addr1_port = ResolveService(\"250.1.1.1\", 8334);\n     addrman.Add(CAddress(addr1_port, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n     CAddrInfo addr_ret2 = addrman.Select();\n-    BOOST_CHECK(addr_ret2.ToString() == \"250.1.1.1:8333\");\n+    BOOST_CHECK_EQUAL(addr_ret2.ToString(), \"250.1.1.1:8333\");\n \n-    // Test 8: Add same IP but diff port to tried table, it doesn't get added.\n+    // Test: Add same IP but diff port to tried table, it doesn't get added.\n     //  Perhaps this is not ideal behavior but it is the current behavior.\n     addrman.Good(CAddress(addr1_port, NODE_NONE));\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n     bool newOnly = true;\n     CAddrInfo addr_ret3 = addrman.Select(newOnly);\n-    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+    BOOST_CHECK_EQUAL(addr_ret3.ToString(), \"250.1.1.1:8333\");\n }\n \n \n@@ -157,25 +168,25 @@ BOOST_AUTO_TEST_CASE(addrman_select)\n \n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n-    // Test 9: Select from new with 1 addr in new.\n+    // Test: Select from new with 1 addr in new.\n     CService addr1 = ResolveService(\"250.1.1.1\", 8333);\n     addrman.Add(CAddress(addr1, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n \n     bool newOnly = true;\n     CAddrInfo addr_ret1 = addrman.Select(newOnly);\n-    BOOST_CHECK(addr_ret1.ToString() == \"250.1.1.1:8333\");\n+    BOOST_CHECK_EQUAL(addr_ret1.ToString(), \"250.1.1.1:8333\");\n \n-    // Test 10: move addr to tried, select from new expected nothing returned.\n+    // Test: move addr to tried, select from new expected nothing returned.\n     addrman.Good(CAddress(addr1, NODE_NONE));\n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n     CAddrInfo addr_ret2 = addrman.Select(newOnly);\n-    BOOST_CHECK(addr_ret2.ToString() == \"[::]:0\");\n+    BOOST_CHECK_EQUAL(addr_ret2.ToString(), \"[::]:0\");\n \n     CAddrInfo addr_ret3 = addrman.Select();\n-    BOOST_CHECK(addr_ret3.ToString() == \"250.1.1.1:8333\");\n+    BOOST_CHECK_EQUAL(addr_ret3.ToString(), \"250.1.1.1:8333\");\n \n-    BOOST_CHECK(addrman.size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n \n \n     // Add three addresses to new table.\n@@ -199,14 +210,15 @@ BOOST_AUTO_TEST_CASE(addrman_select)\n     addrman.Add(CAddress(addr7, NODE_NONE), ResolveService(\"250.1.1.3\", 8333));\n     addrman.Good(CAddress(addr7, NODE_NONE));\n \n-    // Test 11: 6 addrs + 1 addr from last test = 7.\n-    BOOST_CHECK(addrman.size() == 7);\n+    // Test: 6 addrs + 1 addr from last test = 7.\n+    BOOST_CHECK_EQUAL(addrman.size(), 7);\n \n-    // Test 12: Select pulls from new and tried regardless of port number.\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.4.6.6:8333\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.3.2.2:9999\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.3.3.3:9999\");\n-    BOOST_CHECK(addrman.Select().ToString() == \"250.4.4.4:8333\");\n+    // Test: Select pulls from new and tried regardless of port number.\n+    std::set<uint16_t> ports;\n+    for (int i = 0; i < 20; ++i) {\n+        ports.insert(addrman.Select().GetPort());\n+    }\n+    BOOST_CHECK_EQUAL(ports.size(), 3);\n }\n \n BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n@@ -218,24 +230,24 @@ BOOST_AUTO_TEST_CASE(addrman_new_collisions)\n \n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     for (unsigned int i = 1; i < 18; i++) {\n         CService addr = ResolveService(\"250.1.1.\" + boost::to_string(i));\n         addrman.Add(CAddress(addr, NODE_NONE), source);\n \n-        //Test 13: No collision in new table yet.\n-        BOOST_CHECK(addrman.size() == i);\n+        //Test: No collision in new table yet.\n+        BOOST_CHECK_EQUAL(addrman.size(), i);\n     }\n \n-    //Test 14: new table collision!\n+    //Test: new table collision!\n     CService addr1 = ResolveService(\"250.1.1.18\");\n     addrman.Add(CAddress(addr1, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 17);\n+    BOOST_CHECK_EQUAL(addrman.size(), 17);\n \n     CService addr2 = ResolveService(\"250.1.1.19\");\n     addrman.Add(CAddress(addr2, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 18);\n+    BOOST_CHECK_EQUAL(addrman.size(), 18);\n }\n \n BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n@@ -247,25 +259,25 @@ BOOST_AUTO_TEST_CASE(addrman_tried_collisions)\n \n     CNetAddr source = ResolveIP(\"252.2.2.2\");\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     for (unsigned int i = 1; i < 80; i++) {\n         CService addr = ResolveService(\"250.1.1.\" + boost::to_string(i));\n         addrman.Add(CAddress(addr, NODE_NONE), source);\n         addrman.Good(CAddress(addr, NODE_NONE));\n \n-        //Test 15: No collision in tried table yet.\n+        //Test: No collision in tried table yet.\n         BOOST_CHECK_EQUAL(addrman.size(), i);\n     }\n \n-    //Test 16: tried table collision!\n+    //Test: tried table collision!\n     CService addr1 = ResolveService(\"250.1.1.80\");\n     addrman.Add(CAddress(addr1, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 79);\n+    BOOST_CHECK_EQUAL(addrman.size(), 79);\n \n     CService addr2 = ResolveService(\"250.1.1.81\");\n     addrman.Add(CAddress(addr2, NODE_NONE), source);\n-    BOOST_CHECK(addrman.size() == 80);\n+    BOOST_CHECK_EQUAL(addrman.size(), 80);\n }\n \n BOOST_AUTO_TEST_CASE(addrman_find)\n@@ -275,7 +287,7 @@ BOOST_AUTO_TEST_CASE(addrman_find)\n     // Set addrman addr placement to be deterministic.\n     addrman.MakeDeterministic();\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n     CAddress addr2 = CAddress(ResolveService(\"250.1.2.1\", 9999), NODE_NONE);\n@@ -288,23 +300,20 @@ BOOST_AUTO_TEST_CASE(addrman_find)\n     addrman.Add(addr2, source2);\n     addrman.Add(addr3, source1);\n \n-    // Test 17: ensure Find returns an IP matching what we searched on.\n+    // Test: ensure Find returns an IP matching what we searched on.\n     CAddrInfo* info1 = addrman.Find(addr1);\n-    BOOST_CHECK(info1);\n-    if (info1)\n-        BOOST_CHECK(info1->ToString() == \"250.1.2.1:8333\");\n+    BOOST_REQUIRE(info1);\n+    BOOST_CHECK_EQUAL(info1->ToString(), \"250.1.2.1:8333\");\n \n     // Test 18; Find does not discriminate by port number.\n     CAddrInfo* info2 = addrman.Find(addr2);\n-    BOOST_CHECK(info2);\n-    if (info2 && info1)\n-        BOOST_CHECK(info2->ToString() == info1->ToString());\n+    BOOST_REQUIRE(info2);\n+    BOOST_CHECK_EQUAL(info2->ToString(), info1->ToString());\n \n-    // Test 19: Find returns another IP matching what we searched on.\n+    // Test: Find returns another IP matching what we searched on.\n     CAddrInfo* info3 = addrman.Find(addr3);\n-    BOOST_CHECK(info3);\n-    if (info3)\n-        BOOST_CHECK(info3->ToString() == \"251.255.2.1:8333\");\n+    BOOST_REQUIRE(info3);\n+    BOOST_CHECK_EQUAL(info3->ToString(), \"251.255.2.1:8333\");\n }\n \n BOOST_AUTO_TEST_CASE(addrman_create)\n@@ -314,19 +323,19 @@ BOOST_AUTO_TEST_CASE(addrman_create)\n     // Set addrman addr placement to be deterministic.\n     addrman.MakeDeterministic();\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n     CNetAddr source1 = ResolveIP(\"250.1.2.1\");\n \n     int nId;\n     CAddrInfo* pinfo = addrman.Create(addr1, source1, &nId);\n \n-    // Test 20: The result should be the same as the input addr.\n-    BOOST_CHECK(pinfo->ToString() == \"250.1.2.1:8333\");\n+    // Test: The result should be the same as the input addr.\n+    BOOST_CHECK_EQUAL(pinfo->ToString(), \"250.1.2.1:8333\");\n \n     CAddrInfo* info2 = addrman.Find(addr1);\n-    BOOST_CHECK(info2->ToString() == \"250.1.2.1:8333\");\n+    BOOST_CHECK_EQUAL(info2->ToString(), \"250.1.2.1:8333\");\n }\n \n \n@@ -337,18 +346,18 @@ BOOST_AUTO_TEST_CASE(addrman_delete)\n     // Set addrman addr placement to be deterministic.\n     addrman.MakeDeterministic();\n \n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.1.2.1\", 8333), NODE_NONE);\n     CNetAddr source1 = ResolveIP(\"250.1.2.1\");\n \n     int nId;\n     addrman.Create(addr1, source1, &nId);\n \n-    // Test 21: Delete should actually delete the addr.\n-    BOOST_CHECK(addrman.size() == 1);\n+    // Test: Delete should actually delete the addr.\n+    BOOST_CHECK_EQUAL(addrman.size(), 1);\n     addrman.Delete(nId);\n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n     CAddrInfo* info2 = addrman.Find(addr1);\n     BOOST_CHECK(info2 == NULL);\n }\n@@ -360,11 +369,11 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n     // Set addrman addr placement to be deterministic.\n     addrman.MakeDeterministic();\n \n-    // Test 22: Sanity check, GetAddr should never return anything if addrman\n+    // Test: Sanity check, GetAddr should never return anything if addrman\n     //  is empty.\n-    BOOST_CHECK(addrman.size() == 0);\n+    BOOST_CHECK_EQUAL(addrman.size(), 0);\n     std::vector<CAddress> vAddr1 = addrman.GetAddr();\n-    BOOST_CHECK(vAddr1.size() == 0);\n+    BOOST_CHECK_EQUAL(vAddr1.size(), 0);\n \n     CAddress addr1 = CAddress(ResolveService(\"250.250.2.1\", 8333), NODE_NONE);\n     addr1.nTime = GetAdjustedTime(); // Set time so isTerrible = false\n@@ -379,29 +388,28 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n     CNetAddr source1 = ResolveIP(\"250.1.2.1\");\n     CNetAddr source2 = ResolveIP(\"250.2.3.3\");\n \n-    // Test 23: Ensure GetAddr works with new addresses.\n+    // Test: Ensure GetAddr works with new addresses.\n     addrman.Add(addr1, source1);\n     addrman.Add(addr2, source2);\n     addrman.Add(addr3, source1);\n     addrman.Add(addr4, source2);\n     addrman.Add(addr5, source1);\n \n     // GetAddr returns 23% of addresses, 23% of 5 is 1 rounded down.\n-    BOOST_CHECK(addrman.GetAddr().size() == 1); \n+    BOOST_CHECK_EQUAL(addrman.GetAddr().size(), 1);\n \n-    // Test 24: Ensure GetAddr works with new and tried addresses.\n+    // Test: Ensure GetAddr works with new and tried addresses.\n     addrman.Good(CAddress(addr1, NODE_NONE));\n     addrman.Good(CAddress(addr2, NODE_NONE));\n-    BOOST_CHECK(addrman.GetAddr().size() == 1);\n+    BOOST_CHECK_EQUAL(addrman.GetAddr().size(), 1);\n \n-    // Test 25: Ensure GetAddr still returns 23% when addrman has many addrs.\n+    // Test: Ensure GetAddr still returns 23% when addrman has many addrs.\n     for (unsigned int i = 1; i < (8 * 256); i++) {\n         int octet1 = i % 256;\n-        int octet2 = (i / 256) % 256;\n-        int octet3 = (i / (256 * 2)) % 256;\n-        std::string strAddr = boost::to_string(octet1) + \".\" + boost::to_string(octet2) + \".\" + boost::to_string(octet3) + \".23\";\n+        int octet2 = i >> 8 % 256;\n+        std::string strAddr = boost::to_string(octet1) + \".\" + boost::to_string(octet2) + \".1.23\";\n         CAddress addr = CAddress(ResolveService(strAddr), NODE_NONE);\n-        \n+\n         // Ensure that for all addrs in addrman, isTerrible == false.\n         addr.nTime = GetAdjustedTime();\n         addrman.Add(addr, ResolveIP(strAddr));\n@@ -411,10 +419,10 @@ BOOST_AUTO_TEST_CASE(addrman_getaddr)\n     std::vector<CAddress> vAddr = addrman.GetAddr();\n \n     size_t percent23 = (addrman.size() * 23) / 100;\n-    BOOST_CHECK(vAddr.size() == percent23);\n-    BOOST_CHECK(vAddr.size() == 461);\n-    // (Addrman.size() < number of addresses added) due to address collisons.\n-    BOOST_CHECK(addrman.size() == 2007);\n+    BOOST_CHECK_EQUAL(vAddr.size(), percent23);\n+    BOOST_CHECK_EQUAL(vAddr.size(), 461);\n+    // (Addrman.size() < number of addresses added) due to address collisions.\n+    BOOST_CHECK_EQUAL(addrman.size(), 2006);\n }\n \n \n@@ -437,13 +445,13 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n     uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n \n \n-    BOOST_CHECK(info1.GetTriedBucket(nKey1) == 40);\n+    BOOST_CHECK_EQUAL(info1.GetTriedBucket(nKey1), 40);\n \n-    // Test 26: Make sure key actually randomizes bucket placement. A fail on\n+    // Test: Make sure key actually randomizes bucket placement. A fail on\n     //  this test could be a security issue.\n     BOOST_CHECK(info1.GetTriedBucket(nKey1) != info1.GetTriedBucket(nKey2));\n \n-    // Test 27: Two addresses with same IP but different ports can map to\n+    // Test: Two addresses with same IP but different ports can map to\n     //  different buckets because they have different keys.\n     CAddrInfo info2 = CAddrInfo(addr2, source1);\n \n@@ -458,9 +466,9 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n         int bucket = infoi.GetTriedBucket(nKey1);\n         buckets.insert(bucket);\n     }\n-    // Test 28: IP addresses in the same group (\\16 prefix for IPv4) should\n+    // Test: IP addresses in the same group (\\16 prefix for IPv4) should\n     //  never get more than 8 buckets\n-    BOOST_CHECK(buckets.size() == 8);\n+    BOOST_CHECK_EQUAL(buckets.size(), 8);\n \n     buckets.clear();\n     for (int j = 0; j < 255; j++) {\n@@ -470,9 +478,9 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_tried_bucket)\n         int bucket = infoj.GetTriedBucket(nKey1);\n         buckets.insert(bucket);\n     }\n-    // Test 29: IP addresses in the different groups should map to more than\n+    // Test: IP addresses in the different groups should map to more than\n     //  8 buckets.\n-    BOOST_CHECK(buckets.size() == 160);\n+    BOOST_CHECK_EQUAL(buckets.size(), 160);\n }\n \n BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n@@ -492,16 +500,18 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n     uint256 nKey1 = (uint256)(CHashWriter(SER_GETHASH, 0) << 1).GetHash();\n     uint256 nKey2 = (uint256)(CHashWriter(SER_GETHASH, 0) << 2).GetHash();\n \n-    BOOST_CHECK(info1.GetNewBucket(nKey1) == 786);\n+    // Test: Make sure the buckets are what we expect\n+    BOOST_CHECK_EQUAL(info1.GetNewBucket(nKey1), 786);\n+    BOOST_CHECK_EQUAL(info1.GetNewBucket(nKey1, source1), 786);\n \n-    // Test 30: Make sure key actually randomizes bucket placement. A fail on\n+    // Test: Make sure key actually randomizes bucket placement. A fail on\n     //  this test could be a security issue.\n     BOOST_CHECK(info1.GetNewBucket(nKey1) != info1.GetNewBucket(nKey2));\n \n-    // Test 31: Ports should not effect bucket placement in the addr\n+    // Test: Ports should not effect bucket placement in the addr\n     CAddrInfo info2 = CAddrInfo(addr2, source1);\n     BOOST_CHECK(info1.GetKey() != info2.GetKey());\n-    BOOST_CHECK(info1.GetNewBucket(nKey1) == info2.GetNewBucket(nKey1));\n+    BOOST_CHECK_EQUAL(info1.GetNewBucket(nKey1), info2.GetNewBucket(nKey1));\n \n     std::set<int> buckets;\n     for (int i = 0; i < 255; i++) {\n@@ -511,9 +521,9 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n         int bucket = infoi.GetNewBucket(nKey1);\n         buckets.insert(bucket);\n     }\n-    // Test 32: IP addresses in the same group (\\16 prefix for IPv4) should\n+    // Test: IP addresses in the same group (\\16 prefix for IPv4) should\n     //  always map to the same bucket.\n-    BOOST_CHECK(buckets.size() == 1);\n+    BOOST_CHECK_EQUAL(buckets.size(), 1);\n \n     buckets.clear();\n     for (int j = 0; j < 4 * 255; j++) {\n@@ -524,7 +534,7 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n         int bucket = infoj.GetNewBucket(nKey1);\n         buckets.insert(bucket);\n     }\n-    // Test 33: IP addresses in the same source groups should map to no more\n+    // Test: IP addresses in the same source groups should map to no more\n     //  than 64 buckets.\n     BOOST_CHECK(buckets.size() <= 64);\n \n@@ -536,7 +546,7 @@ BOOST_AUTO_TEST_CASE(caddrinfo_get_new_bucket)\n         int bucket = infoj.GetNewBucket(nKey1);\n         buckets.insert(bucket);\n     }\n-    // Test 34: IP addresses in the different source groups should map to more\n+    // Test: IP addresses in the different source groups should map to more\n     //  than 64 buckets.\n     BOOST_CHECK(buckets.size() > 64);\n }"
      },
      {
        "sha": "952cf901f02bd3f5c3dfc9e7cf7f9acc7d25f9ba",
        "filename": "src/test/amount_tests.cpp",
        "status": "modified",
        "additions": 38,
        "deletions": 1,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/amount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/amount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/amount_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,15 +3,23 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"amount.h\"\n+#include \"policy/feerate.h\"\n #include \"test/test_bitcoin.h\"\n \n #include <boost/test/unit_test.hpp>\n \n BOOST_FIXTURE_TEST_SUITE(amount_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(MoneyRangeTest)\n+{\n+    BOOST_CHECK_EQUAL(MoneyRange(CAmount(-1)), false);\n+    BOOST_CHECK_EQUAL(MoneyRange(MAX_MONEY + CAmount(1)), false);\n+    BOOST_CHECK_EQUAL(MoneyRange(CAmount(1)), true);\n+}\n+\n BOOST_AUTO_TEST_CASE(GetFeeTest)\n {\n-    CFeeRate feeRate;\n+    CFeeRate feeRate, altFeeRate;\n \n     feeRate = CFeeRate(0);\n     // Must always return 0\n@@ -53,6 +61,11 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     BOOST_CHECK_EQUAL(feeRate.GetFee(8), -1); // Special case: returns -1 instead of 0\n     BOOST_CHECK_EQUAL(feeRate.GetFee(9), -1);\n \n+    // check alternate constructor\n+    feeRate = CFeeRate(1000);\n+    altFeeRate = CFeeRate(feeRate);\n+    BOOST_CHECK_EQUAL(feeRate.GetFee(100), altFeeRate.GetFee(100));\n+\n     // Check full constructor\n     // default value\n     BOOST_CHECK(CFeeRate(CAmount(-1), 1000) == CFeeRate(-1));\n@@ -68,4 +81,28 @@ BOOST_AUTO_TEST_CASE(GetFeeTest)\n     CFeeRate(MAX_MONEY, std::numeric_limits<size_t>::max() >> 1).GetFeePerK();\n }\n \n+BOOST_AUTO_TEST_CASE(BinaryOperatorTest)\n+{\n+    CFeeRate a, b;\n+    a = CFeeRate(1);\n+    b = CFeeRate(2);\n+    BOOST_CHECK(a < b);\n+    BOOST_CHECK(b > a);\n+    BOOST_CHECK(a == a);\n+    BOOST_CHECK(a <= b);\n+    BOOST_CHECK(a <= a);\n+    BOOST_CHECK(b >= a);\n+    BOOST_CHECK(b >= b);\n+    // a should be 0.00000002 BTC/kB now\n+    a += a;\n+    BOOST_CHECK(a == b);\n+}\n+\n+BOOST_AUTO_TEST_CASE(ToStringTest)\n+{\n+    CFeeRate feeRate;\n+    feeRate = CFeeRate(1);\n+    BOOST_CHECK_EQUAL(feeRate.ToString(), \"0.00000001 BTC/kB\");\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "c148ad6d82d97c71a4bc30a1c2f0aac5c236c29e",
        "filename": "src/test/bip32_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/bip32_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/bip32_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bip32_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -78,6 +78,15 @@ TestVector test2 =\n      \"xprvA2nrNbFZABcdryreWet9Ea4LvTJcGsqrMzxHx98MMrotbir7yrKCEXw7nadnHM8Dq38EGfSh6dqA9QWTyefMLEcBYJUuekgW4BYPJcr9E7j\",\n      0);\n \n+TestVector test3 =\n+  TestVector(\"4b381541583be4423346c643850da4b320e46a87ae3d2a4e6da11eba819cd4acba45d239319ac14f863b8d5ab5a0d0c64d2e8a1e7d1457df2e5a3c51c73235be\")\n+    (\"xpub661MyMwAqRbcEZVB4dScxMAdx6d4nFc9nvyvH3v4gJL378CSRZiYmhRoP7mBy6gSPSCYk6SzXPTf3ND1cZAceL7SfJ1Z3GC8vBgp2epUt13\",\n+     \"xprv9s21ZrQH143K25QhxbucbDDuQ4naNntJRi4KUfWT7xo4EKsHt2QJDu7KXp1A3u7Bi1j8ph3EGsZ9Xvz9dGuVrtHHs7pXeTzjuxBrCmmhgC6\",\n+      0x80000000)\n+    (\"xpub68NZiKmJWnxxS6aaHmn81bvJeTESw724CRDs6HbuccFQN9Ku14VQrADWgqbhhTHBaohPX4CjNLf9fq9MYo6oDaPPLPxSb7gwQN3ih19Zm4Y\",\n+     \"xprv9uPDJpEQgRQfDcW7BkF7eTya6RPxXeJCqCJGHuCJ4GiRVLzkTXBAJMu2qaMWPrS7AANYqdq6vcBcBUdJCVVFceUvJFjaPdGZ2y9WACViL4L\",\n+      0);\n+\n void RunTest(const TestVector &test) {\n     std::vector<unsigned char> seed = ParseHex(test.strHexMaster);\n     CExtKey key;\n@@ -146,4 +155,8 @@ BOOST_AUTO_TEST_CASE(bip32_test2) {\n     RunTest(test2);\n }\n \n+BOOST_AUTO_TEST_CASE(bip32_test3) {\n+    RunTest(test3);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "e2087187aaba6a28f545435ead3935926da5007f",
        "filename": "src/test/bitcoin-util-test.py",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/test/bitcoin-util-test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/test/bitcoin-util-test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/bitcoin-util-test.py?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,45 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright 2014 BitPay Inc.\n-# Copyright 2016 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-from __future__ import division,print_function,unicode_literals\n-import os\n-import bctest\n-import buildenv\n-import argparse\n-import logging\n-\n-help_text=\"\"\"Test framework for bitcoin utils.\n-\n-Runs automatically during `make check`.\n-\n-Can also be run manually from the src directory by specifying the source directory:\n-\n-test/bitcoin-util-test.py --srcdir='srcdir' [--verbose]\n-\"\"\"\n-\n-if __name__ == '__main__':\n-    # Try to get the source directory from the environment variables. This will\n-    # be set for `make check` automated runs. If environment variable is not set,\n-    # then get the source directory from command line args.\n-    try:\n-        srcdir = os.environ[\"srcdir\"]\n-        verbose = False\n-    except:\n-        parser = argparse.ArgumentParser(description=help_text)\n-        parser.add_argument('-s', '--srcdir')\n-        parser.add_argument('-v', '--verbose', action='store_true')\n-        args = parser.parse_args()\n-        srcdir = args.srcdir\n-        verbose = args.verbose\n-\n-    if verbose:\n-        level = logging.DEBUG\n-    else:\n-        level = logging.ERROR\n-    formatter = '%(asctime)s - %(levelname)s - %(message)s'\n-    # Add the format/level to the logger\n-    logging.basicConfig(format = formatter, level=level)\n-\n-    bctest.bctester(srcdir + \"/test/data\", \"bitcoin-util-test.json\", buildenv)"
      },
      {
        "sha": "9e4a56919d4573eb75a51fba3364678cb41590b6",
        "filename": "src/test/blockencodings_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/blockencodings_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/blockencodings_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockencodings_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -57,7 +57,7 @@ static CBlock BuildBlockTestCase() {\n \n BOOST_AUTO_TEST_CASE(SimpleRoundTripTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n     CBlock block(BuildBlockTestCase());\n \n@@ -156,7 +156,7 @@ class TestHeaderAndShortIDs {\n \n BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n     CBlock block(BuildBlockTestCase());\n \n@@ -222,7 +222,7 @@ BOOST_AUTO_TEST_CASE(NonCoinbasePreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n     CBlock block(BuildBlockTestCase());\n \n@@ -272,7 +272,7 @@ BOOST_AUTO_TEST_CASE(SufficientPreforwardRTTest)\n \n BOOST_AUTO_TEST_CASE(EmptyBlockRoundTripTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     CMutableTransaction coinbase;\n     coinbase.vin.resize(1);\n     coinbase.vin[0].scriptSig.resize(10);"
      },
      {
        "sha": "153f34a3dbc71e24ade4d228868e1fd8321302fa",
        "filename": "src/test/buildenv.py.in",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/test/buildenv.py.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62/src/test/buildenv.py.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/buildenv.py.in?ref=321419bc06fdc19e3713b2bcfc10c3c9bbbb8b62",
        "patch": "@@ -1,2 +0,0 @@\n-#!/usr/bin/env python\n-exeext=\"@EXEEXT@\""
      },
      {
        "sha": "287395c6c653128dacb75a2e4a91f2e2ea35c774",
        "filename": "src/test/checkqueue_tests.cpp",
        "status": "added",
        "additions": 442,
        "deletions": 0,
        "changes": 442,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/checkqueue_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/checkqueue_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkqueue_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,442 @@\n+// Copyright (c) 2012-2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"util.h\"\n+#include \"utiltime.h\"\n+#include \"validation.h\"\n+\n+#include \"test/test_bitcoin.h\"\n+#include \"checkqueue.h\"\n+#include <boost/test/unit_test.hpp>\n+#include <boost/thread.hpp>\n+#include <atomic>\n+#include <thread>\n+#include <vector>\n+#include <mutex>\n+#include <condition_variable>\n+\n+#include <unordered_set>\n+#include <memory>\n+#include \"random.h\"\n+\n+// BasicTestingSetup not sufficient because nScriptCheckThreads is not set\n+// otherwise.\n+BOOST_FIXTURE_TEST_SUITE(checkqueue_tests, TestingSetup)\n+\n+static const int QUEUE_BATCH_SIZE = 128;\n+\n+struct FakeCheck {\n+    bool operator()()\n+    {\n+        return true;\n+    }\n+    void swap(FakeCheck& x){};\n+};\n+\n+struct FakeCheckCheckCompletion {\n+    static std::atomic<size_t> n_calls;\n+    bool operator()()\n+    {\n+        ++n_calls;\n+        return true;\n+    }\n+    void swap(FakeCheckCheckCompletion& x){};\n+};\n+\n+struct FailingCheck {\n+    bool fails;\n+    FailingCheck(bool _fails) : fails(_fails){};\n+    FailingCheck() : fails(true){};\n+    bool operator()()\n+    {\n+        return !fails;\n+    }\n+    void swap(FailingCheck& x)\n+    {\n+        std::swap(fails, x.fails);\n+    };\n+};\n+\n+struct UniqueCheck {\n+    static std::mutex m;\n+    static std::unordered_multiset<size_t> results;\n+    size_t check_id;\n+    UniqueCheck(size_t check_id_in) : check_id(check_id_in){};\n+    UniqueCheck() : check_id(0){};\n+    bool operator()()\n+    {\n+        std::lock_guard<std::mutex> l(m);\n+        results.insert(check_id);\n+        return true;\n+    }\n+    void swap(UniqueCheck& x) { std::swap(x.check_id, check_id); };\n+};\n+\n+\n+struct MemoryCheck {\n+    static std::atomic<size_t> fake_allocated_memory;\n+    bool b {false};\n+    bool operator()()\n+    {\n+        return true;\n+    }\n+    MemoryCheck(){};\n+    MemoryCheck(const MemoryCheck& x)\n+    {\n+        // We have to do this to make sure that destructor calls are paired\n+        //\n+        // Really, copy constructor should be deletable, but CCheckQueue breaks\n+        // if it is deleted because of internal push_back.\n+        fake_allocated_memory += b;\n+    };\n+    MemoryCheck(bool b_) : b(b_)\n+    {\n+        fake_allocated_memory += b;\n+    };\n+    ~MemoryCheck(){\n+        fake_allocated_memory -= b;\n+    \n+    };\n+    void swap(MemoryCheck& x) { std::swap(b, x.b); };\n+};\n+\n+struct FrozenCleanupCheck {\n+    static std::atomic<uint64_t> nFrozen;\n+    static std::condition_variable cv;\n+    static std::mutex m;\n+    // Freezing can't be the default initialized behavior given how the queue\n+    // swaps in default initialized Checks.\n+    bool should_freeze {false};\n+    bool operator()()\n+    {\n+        return true;\n+    }\n+    FrozenCleanupCheck() {}\n+    ~FrozenCleanupCheck()\n+    {\n+        if (should_freeze) {\n+            std::unique_lock<std::mutex> l(m);\n+            nFrozen = 1;\n+            cv.notify_one();\n+            cv.wait(l, []{ return nFrozen == 0;});\n+        }\n+    }\n+    void swap(FrozenCleanupCheck& x){std::swap(should_freeze, x.should_freeze);};\n+};\n+\n+// Static Allocations\n+std::mutex FrozenCleanupCheck::m{};\n+std::atomic<uint64_t> FrozenCleanupCheck::nFrozen{0};\n+std::condition_variable FrozenCleanupCheck::cv{};\n+std::mutex UniqueCheck::m;\n+std::unordered_multiset<size_t> UniqueCheck::results;\n+std::atomic<size_t> FakeCheckCheckCompletion::n_calls{0};\n+std::atomic<size_t> MemoryCheck::fake_allocated_memory{0};\n+\n+// Queue Typedefs\n+typedef CCheckQueue<FakeCheckCheckCompletion> Correct_Queue;\n+typedef CCheckQueue<FakeCheck> Standard_Queue;\n+typedef CCheckQueue<FailingCheck> Failing_Queue;\n+typedef CCheckQueue<UniqueCheck> Unique_Queue;\n+typedef CCheckQueue<MemoryCheck> Memory_Queue;\n+typedef CCheckQueue<FrozenCleanupCheck> FrozenCleanup_Queue;\n+\n+\n+/** This test case checks that the CCheckQueue works properly\n+ * with each specified size_t Checks pushed.\n+ */\n+void Correct_Queue_range(std::vector<size_t> range)\n+{\n+    auto small_queue = std::unique_ptr<Correct_Queue>(new Correct_Queue {QUEUE_BATCH_SIZE});\n+    boost::thread_group tg;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+       tg.create_thread([&]{small_queue->Thread();});\n+    }\n+    // Make vChecks here to save on malloc (this test can be slow...)\n+    std::vector<FakeCheckCheckCompletion> vChecks;\n+    for (auto i : range) {\n+        size_t total = i;\n+        FakeCheckCheckCompletion::n_calls = 0;\n+        CCheckQueueControl<FakeCheckCheckCompletion> control(small_queue.get());\n+        while (total) {\n+            vChecks.resize(std::min(total, (size_t) GetRand(10)));\n+            total -= vChecks.size();\n+            control.Add(vChecks);\n+        }\n+        BOOST_REQUIRE(control.Wait());\n+        if (FakeCheckCheckCompletion::n_calls != i) {\n+            BOOST_REQUIRE_EQUAL(FakeCheckCheckCompletion::n_calls, i);\n+            BOOST_TEST_MESSAGE(\"Failure on trial \" << i << \" expected, got \" << FakeCheckCheckCompletion::n_calls);\n+        }\n+    }\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n+\n+/** Test that 0 checks is correct\n+ */\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Correct_Zero)\n+{\n+    std::vector<size_t> range;\n+    range.push_back((size_t)0);\n+    Correct_Queue_range(range);\n+}\n+/** Test that 1 check is correct\n+ */\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Correct_One)\n+{\n+    std::vector<size_t> range;\n+    range.push_back((size_t)1);\n+    Correct_Queue_range(range);\n+}\n+/** Test that MAX check is correct\n+ */\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Correct_Max)\n+{\n+    std::vector<size_t> range;\n+    range.push_back(100000);\n+    Correct_Queue_range(range);\n+}\n+/** Test that random numbers of checks are correct\n+ */\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Correct_Random)\n+{\n+    std::vector<size_t> range;\n+    range.reserve(100000/1000);\n+    for (size_t i = 2; i < 100000; i += std::max((size_t)1, (size_t)GetRand(std::min((size_t)1000, ((size_t)100000) - i))))\n+        range.push_back(i);\n+    Correct_Queue_range(range);\n+}\n+\n+\n+/** Test that failing checks are caught */\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Catches_Failure)\n+{\n+    auto fail_queue = std::unique_ptr<Failing_Queue>(new Failing_Queue {QUEUE_BATCH_SIZE});\n+\n+    boost::thread_group tg;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+       tg.create_thread([&]{fail_queue->Thread();});\n+    }\n+\n+    for (size_t i = 0; i < 1001; ++i) {\n+        CCheckQueueControl<FailingCheck> control(fail_queue.get());\n+        size_t remaining = i;\n+        while (remaining) {\n+            size_t r = GetRand(10);\n+\n+            std::vector<FailingCheck> vChecks;\n+            vChecks.reserve(r);\n+            for (size_t k = 0; k < r && remaining; k++, remaining--)\n+                vChecks.emplace_back(remaining == 1);\n+            control.Add(vChecks);\n+        }\n+        bool success = control.Wait();\n+        if (i > 0) {\n+            BOOST_REQUIRE(!success);\n+        } else if (i == 0) {\n+            BOOST_REQUIRE(success);\n+        }\n+    }\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n+// Test that a block validation which fails does not interfere with\n+// future blocks, ie, the bad state is cleared.\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Recovers_From_Failure)\n+{\n+    auto fail_queue = std::unique_ptr<Failing_Queue>(new Failing_Queue {QUEUE_BATCH_SIZE});\n+    boost::thread_group tg;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+       tg.create_thread([&]{fail_queue->Thread();});\n+    }\n+\n+    for (auto times = 0; times < 10; ++times) {\n+        for (bool end_fails : {true, false}) {\n+            CCheckQueueControl<FailingCheck> control(fail_queue.get());\n+            {\n+                std::vector<FailingCheck> vChecks;\n+                vChecks.resize(100, false);\n+                vChecks[99] = end_fails;\n+                control.Add(vChecks);\n+            }\n+            bool r =control.Wait();\n+            BOOST_REQUIRE(r || end_fails);\n+        }\n+    }\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n+\n+// Test that unique checks are actually all called individually, rather than\n+// just one check being called repeatedly. Test that checks are not called\n+// more than once as well\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_UniqueCheck)\n+{\n+    auto queue = std::unique_ptr<Unique_Queue>(new Unique_Queue {QUEUE_BATCH_SIZE});\n+    boost::thread_group tg;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+       tg.create_thread([&]{queue->Thread();});\n+\n+    }\n+\n+    size_t COUNT = 100000;\n+    size_t total = COUNT;\n+    {\n+        CCheckQueueControl<UniqueCheck> control(queue.get());\n+        while (total) {\n+            size_t r = GetRand(10);\n+            std::vector<UniqueCheck> vChecks;\n+            for (size_t k = 0; k < r && total; k++)\n+                vChecks.emplace_back(--total);\n+            control.Add(vChecks);\n+        }\n+    }\n+    bool r = true;\n+    BOOST_REQUIRE_EQUAL(UniqueCheck::results.size(), COUNT);\n+    for (size_t i = 0; i < COUNT; ++i)\n+        r = r && UniqueCheck::results.count(i) == 1;\n+    BOOST_REQUIRE(r);\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n+\n+\n+// Test that blocks which might allocate lots of memory free their memory aggressively.\n+//\n+// This test attempts to catch a pathological case where by lazily freeing\n+// checks might mean leaving a check un-swapped out, and decreasing by 1 each\n+// time could leave the data hanging across a sequence of blocks.\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_Memory)\n+{\n+    auto queue = std::unique_ptr<Memory_Queue>(new Memory_Queue {QUEUE_BATCH_SIZE});\n+    boost::thread_group tg;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+       tg.create_thread([&]{queue->Thread();});\n+    }\n+    for (size_t i = 0; i < 1000; ++i) {\n+        size_t total = i;\n+        {\n+            CCheckQueueControl<MemoryCheck> control(queue.get());\n+            while (total) {\n+                size_t r = GetRand(10);\n+                std::vector<MemoryCheck> vChecks;\n+                for (size_t k = 0; k < r && total; k++) {\n+                    total--;\n+                    // Each iteration leaves data at the front, back, and middle\n+                    // to catch any sort of deallocation failure\n+                    vChecks.emplace_back(total == 0 || total == i || total == i/2);\n+                }\n+                control.Add(vChecks);\n+            }\n+        }\n+        BOOST_REQUIRE_EQUAL(MemoryCheck::fake_allocated_memory, 0);\n+    }\n+    tg.interrupt_all();\n+    tg.join_all();\n+}\n+\n+// Test that a new verification cannot occur until all checks \n+// have been destructed\n+BOOST_AUTO_TEST_CASE(test_CheckQueue_FrozenCleanup)\n+{\n+    auto queue = std::unique_ptr<FrozenCleanup_Queue>(new FrozenCleanup_Queue {QUEUE_BATCH_SIZE});\n+    boost::thread_group tg;\n+    bool fails = false;\n+    for (auto x = 0; x < nScriptCheckThreads; ++x) {\n+        tg.create_thread([&]{queue->Thread();});\n+    }\n+    std::thread t0([&]() {\n+        CCheckQueueControl<FrozenCleanupCheck> control(queue.get());\n+        std::vector<FrozenCleanupCheck> vChecks(1);\n+        // Freezing can't be the default initialized behavior given how the queue\n+        // swaps in default initialized Checks (otherwise freezing destructor\n+        // would get called twice).\n+        vChecks[0].should_freeze = true;\n+        control.Add(vChecks);\n+        control.Wait(); // Hangs here\n+    });\n+    {\n+        std::unique_lock<std::mutex> l(FrozenCleanupCheck::m);\n+        // Wait until the queue has finished all jobs and frozen\n+        FrozenCleanupCheck::cv.wait(l, [](){return FrozenCleanupCheck::nFrozen == 1;});\n+        // Try to get control of the queue a bunch of times\n+        for (auto x = 0; x < 100 && !fails; ++x) {\n+            fails = queue->ControlMutex.try_lock();\n+        }\n+        // Unfreeze\n+        FrozenCleanupCheck::nFrozen = 0;\n+    }\n+    // Awaken frozen destructor\n+    FrozenCleanupCheck::cv.notify_one();\n+    // Wait for control to finish\n+    t0.join();\n+    tg.interrupt_all();\n+    tg.join_all();\n+    BOOST_REQUIRE(!fails);\n+}\n+\n+\n+/** Test that CCheckQueueControl is threadsafe */\n+BOOST_AUTO_TEST_CASE(test_CheckQueueControl_Locks)\n+{\n+    auto queue = std::unique_ptr<Standard_Queue>(new Standard_Queue{QUEUE_BATCH_SIZE});\n+    {\n+        boost::thread_group tg;\n+        std::atomic<int> nThreads {0};\n+        std::atomic<int> fails {0};\n+        for (size_t i = 0; i < 3; ++i) {\n+            tg.create_thread(\n+                    [&]{\n+                    CCheckQueueControl<FakeCheck> control(queue.get());\n+                    // While sleeping, no other thread should execute to this point\n+                    auto observed = ++nThreads;\n+                    MilliSleep(10);\n+                    fails += observed  != nThreads;\n+                    });\n+        }\n+        tg.join_all();\n+        BOOST_REQUIRE_EQUAL(fails, 0);\n+    }\n+    {\n+        boost::thread_group tg;\n+        std::mutex m;\n+        bool has_lock {false};\n+        bool has_tried {false};\n+        bool done {false};\n+        bool done_ack {false};\n+        std::condition_variable cv;\n+        {\n+            std::unique_lock<std::mutex> l(m);\n+            tg.create_thread([&]{\n+                    CCheckQueueControl<FakeCheck> control(queue.get());\n+                    std::unique_lock<std::mutex> ll(m);\n+                    has_lock = true;\n+                    cv.notify_one();\n+                    cv.wait(ll, [&]{return has_tried;});\n+                    done = true;\n+                    cv.notify_one();\n+                    // Wait until the done is acknowledged\n+                    //\n+                    cv.wait(ll, [&]{return done_ack;});\n+                    });\n+            // Wait for thread to get the lock\n+            cv.wait(l, [&](){return has_lock;});\n+            bool fails = false;\n+            for (auto x = 0; x < 100 && !fails; ++x) {\n+                fails = queue->ControlMutex.try_lock();\n+            }\n+            has_tried = true;\n+            cv.notify_one();\n+            cv.wait(l, [&](){return done;});\n+            // Acknowledge the done\n+            done_ack = true;\n+            cv.notify_one();\n+            BOOST_REQUIRE(!fails);\n+        }\n+        tg.join_all();\n+    }\n+}\n+BOOST_AUTO_TEST_SUITE_END()\n+"
      },
      {
        "sha": "31ed1a50b9aaabc1fde2eb9b9b054548fcb86cf1",
        "filename": "src/test/coins_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/coins_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/coins_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/coins_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -72,7 +72,7 @@ class CCoinsViewTest : public CCoinsView\n class CCoinsViewCacheTest : public CCoinsViewCache\n {\n public:\n-    CCoinsViewCacheTest(CCoinsView* base) : CCoinsViewCache(base) {}\n+    CCoinsViewCacheTest(CCoinsView* _base) : CCoinsViewCache(_base) {}\n \n     void SelfTest() const\n     {"
      },
      {
        "sha": "72e562808afebd5986686ad4f08b5693736c4bf7",
        "filename": "src/test/crypto_tests.cpp",
        "status": "modified",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/crypto_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/crypto_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/crypto_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,12 +3,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"crypto/aes.h\"\n+#include \"crypto/chacha20.h\"\n #include \"crypto/ripemd160.h\"\n #include \"crypto/sha1.h\"\n #include \"crypto/sha256.h\"\n #include \"crypto/sha512.h\"\n #include \"crypto/hmac_sha256.h\"\n #include \"crypto/hmac_sha512.h\"\n+#include \"random.h\"\n #include \"utilstrencodings.h\"\n #include \"test/test_bitcoin.h\"\n #include \"test/test_random.h\"\n@@ -187,6 +189,19 @@ void TestAES256CBC(const std::string &hexkey, const std::string &hexiv, bool pad\n     }\n }\n \n+void TestChaCha20(const std::string &hexkey, uint64_t nonce, uint64_t seek, const std::string& hexout)\n+{\n+    std::vector<unsigned char> key = ParseHex(hexkey);\n+    ChaCha20 rng(key.data(), key.size());\n+    rng.SetIV(nonce);\n+    rng.Seek(seek);\n+    std::vector<unsigned char> out = ParseHex(hexout);\n+    std::vector<unsigned char> outres;\n+    outres.resize(out.size());\n+    rng.Output(outres.data(), outres.size());\n+    BOOST_CHECK(out == outres);\n+}\n+\n std::string LongTestString(void) {\n     std::string ret;\n     for (int i=0; i<200000; i++) {\n@@ -439,4 +454,57 @@ BOOST_AUTO_TEST_CASE(aes_cbc_testvectors) {\n                   \"b2eb05e2c39be9fcda6c19078c6a9d1b3f461796d6b0d6b2e0c2a72b4d80e644\");\n }\n \n+\n+BOOST_AUTO_TEST_CASE(chacha20_testvector)\n+{\n+    // Test vector from RFC 7539\n+    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x4a000000UL, 1,\n+                 \"224f51f3401bd9e12fde276fb8631ded8c131f823d2c06e27e4fcaec9ef3cf788a3b0aa372600a92b57974cded2b9334794cb\"\n+                 \"a40c63e34cdea212c4cf07d41b769a6749f3f630f4122cafe28ec4dc47e26d4346d70b98c73f3e9c53ac40c5945398b6eda1a\"\n+                 \"832c89c167eacd901d7e2bf363\");\n+\n+    // Test vectors from https://tools.ietf.org/html/draft-agl-tls-chacha20poly1305-04#section-7\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0, 0,\n+                 \"76b8e0ada0f13d90405d6ae55386bd28bdd219b8a08ded1aa836efcc8b770dc7da41597c5157488d7724e03fb8d84a376a43b\"\n+                 \"8f41518a11cc387b669b2ee6586\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000001\", 0, 0,\n+                 \"4540f05a9f1fb296d7736e7b208e3c96eb4fe1834688d2604f450952ed432d41bbe2a0b6ea7566d2a5d1e7e20d42af2c53d79\"\n+                 \"2b1c43fea817e9ad275ae546963\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 0x0100000000000000ULL, 0,\n+                 \"de9cba7bf3d69ef5e786dc63973f653a0b49e015adbff7134fcb7df137821031e85a050278a7084527214f73efc7fa5b52770\"\n+                 \"62eb7a0433e445f41e3\");\n+    TestChaCha20(\"0000000000000000000000000000000000000000000000000000000000000000\", 1, 0,\n+                 \"ef3fdfd6c61578fbf5cf35bd3dd33b8009631634d21e42ac33960bd138e50d32111e4caf237ee53ca8ad6426194a88545ddc4\"\n+                 \"97a0b466e7d6bbdb0041b2f586b\");\n+    TestChaCha20(\"000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f\", 0x0706050403020100ULL, 0,\n+                 \"f798a189f195e66982105ffb640bb7757f579da31602fc93ec01ac56f85ac3c134a4547b733b46413042c9440049176905d3b\"\n+                 \"e59ea1c53f15916155c2be8241a38008b9a26bc35941e2444177c8ade6689de95264986d95889fb60e84629c9bd9a5acb1cc1\"\n+                 \"18be563eb9b3a4a472f82e09a7e778492b562ef7130e88dfe031c79db9d4f7c7a899151b9a475032b63fc385245fe054e3dd5\"\n+                 \"a97a5f576fe064025d3ce042c566ab2c507b138db853e3d6959660996546cc9c4a6eafdc777c040d70eaf46f76dad3979e5c5\"\n+                 \"360c3317166a1c894c94a371876a94df7628fe4eaaf2ccb27d5aaae0ad7ad0f9d4b6ad3b54098746d4524d38407a6deb3ab78\"\n+                 \"fab78c9\");\n+}\n+\n+BOOST_AUTO_TEST_CASE(countbits_tests)\n+{\n+    FastRandomContext ctx;\n+    for (int i = 0; i <= 64; ++i) {\n+        if (i == 0) {\n+            // Check handling of zero.\n+            BOOST_CHECK_EQUAL(CountBits(0), 0);\n+        } else if (i < 10) {\n+            for (uint64_t j = 1 << (i - 1); (j >> i) == 0; ++j) {\n+                // Exhaustively test up to 10 bits\n+                BOOST_CHECK_EQUAL(CountBits(j), i);\n+            }\n+        } else {\n+            for (int k = 0; k < 1000; k++) {\n+                // Randomly test 1000 samples of each length above 10 bits.\n+                uint64_t j = ((uint64_t)1) << (i - 1) | ctx.randbits(i - 1);\n+                BOOST_CHECK_EQUAL(CountBits(j), i);\n+            }\n+        }\n+    }\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8cae4e66e8a67b80006118de936f6c807b0bb25d",
        "filename": "src/test/cuckoocache_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 26,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/cuckoocache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/cuckoocache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/cuckoocache_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -3,6 +3,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #include <boost/test/unit_test.hpp>\n #include \"cuckoocache.h\"\n+#include \"script/sigcache.h\"\n #include \"test/test_bitcoin.h\"\n #include \"random.h\"\n #include <thread>\n@@ -36,20 +37,6 @@ void insecure_GetRandHash(uint256& t)\n         *(ptr++) = insecure_rand.rand32();\n }\n \n-/** Definition copied from /src/script/sigcache.cpp\n- */\n-class uint256Hasher\n-{\n-public:\n-    template <uint8_t hash_select>\n-    uint32_t operator()(const uint256& key) const\n-    {\n-        static_assert(hash_select <8, \"SignatureCacheHasher only has 8 hashes available.\");\n-        uint32_t u;\n-        std::memcpy(&u, key.begin() + 4 * hash_select, 4);\n-        return u;\n-    }\n-};\n \n \n /* Test that no values not inserted into the cache are read out of it.\n@@ -59,8 +46,9 @@ class uint256Hasher\n BOOST_AUTO_TEST_CASE(test_cuckoocache_no_fakes)\n {\n     insecure_rand = FastRandomContext(true);\n-    CuckooCache::cache<uint256, uint256Hasher> cc{};\n-    cc.setup_bytes(32 << 20);\n+    CuckooCache::cache<uint256, SignatureCacheHasher> cc{};\n+    size_t megabytes = 4;\n+    cc.setup_bytes(megabytes << 20);\n     uint256 v;\n     for (int x = 0; x < 100000; ++x) {\n         insecure_GetRandHash(v);\n@@ -135,9 +123,9 @@ BOOST_AUTO_TEST_CASE(cuckoocache_hit_rate_ok)\n      * as a lower bound on performance.\n      */\n     double HitRateThresh = 0.98;\n-    size_t megabytes = 32;\n+    size_t megabytes = 4;\n     for (double load = 0.1; load < 2; load *= 2) {\n-        double hits = test_cache<CuckooCache::cache<uint256, uint256Hasher>>(megabytes, load);\n+        double hits = test_cache<CuckooCache::cache<uint256, SignatureCacheHasher>>(megabytes, load);\n         BOOST_CHECK(normalize_hit_rate(hits, load) > HitRateThresh);\n     }\n }\n@@ -204,8 +192,8 @@ void test_cache_erase(size_t megabytes)\n \n BOOST_AUTO_TEST_CASE(cuckoocache_erase_ok)\n {\n-    size_t megabytes = 32;\n-    test_cache_erase<CuckooCache::cache<uint256, uint256Hasher>>(megabytes);\n+    size_t megabytes = 4;\n+    test_cache_erase<CuckooCache::cache<uint256, SignatureCacheHasher>>(megabytes);\n }\n \n template <typename Cache>\n@@ -291,8 +279,8 @@ void test_cache_erase_parallel(size_t megabytes)\n }\n BOOST_AUTO_TEST_CASE(cuckoocache_erase_parallel_ok)\n {\n-    size_t megabytes = 32;\n-    test_cache_erase_parallel<CuckooCache::cache<uint256, uint256Hasher>>(megabytes);\n+    size_t megabytes = 4;\n+    test_cache_erase_parallel<CuckooCache::cache<uint256, SignatureCacheHasher>>(megabytes);\n }\n \n \n@@ -342,13 +330,13 @@ void test_cache_generations()\n         }\n     };\n \n-    const uint32_t BLOCK_SIZE = 10000;\n+    const uint32_t BLOCK_SIZE = 1000;\n     // We expect window size 60 to perform reasonably given that each epoch\n     // stores 45% of the cache size (~472k).\n     const uint32_t WINDOW_SIZE = 60;\n     const uint32_t POP_AMOUNT = (BLOCK_SIZE / WINDOW_SIZE) / 2;\n     const double load = 10;\n-    const size_t megabytes = 32;\n+    const size_t megabytes = 4;\n     const size_t bytes = megabytes * (1 << 20);\n     const uint32_t n_insert = static_cast<uint32_t>(load * (bytes / sizeof(uint256)));\n \n@@ -379,7 +367,7 @@ void test_cache_generations()\n         // Loose Check that hit rate is above min_hit_rate\n         BOOST_CHECK(hit > min_hit_rate);\n         // Tighter check, count number of times we are less than tight_hit_rate\n-        // (and implicityly, greater than min_hit_rate)\n+        // (and implicitly, greater than min_hit_rate)\n         out_of_tight_tolerance += hit < tight_hit_rate;\n     }\n     // Check that being out of tolerance happens less than\n@@ -388,7 +376,7 @@ void test_cache_generations()\n }\n BOOST_AUTO_TEST_CASE(cuckoocache_generations)\n {\n-    test_cache_generations<CuckooCache::cache<uint256, uint256Hasher>>();\n+    test_cache_generations<CuckooCache::cache<uint256, SignatureCacheHasher>>();\n }\n \n BOOST_AUTO_TEST_SUITE_END();"
      },
      {
        "sha": "e35a7ce569c0e2abd18fd9e653d94562c2471ce2",
        "filename": "src/test/data/script_tests.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/script_tests.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/script_tests.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/script_tests.json?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -349,7 +349,7 @@\n [\"2147483647\", \"0x04 0xFFFFFF7F EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n [\"2147483648\", \"0x05 0x0000008000 EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n [\"549755813887\", \"0x05 0xFFFFFFFF7F EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n-[\"549755813888\", \"0x06 0xFFFFFFFF7F EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n+[\"549755813888\", \"0x06 0x000000008000 EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n [\"9223372036854775807\", \"0x08 0xFFFFFFFFFFFFFF7F EQUAL\", \"P2SH,STRICTENC\", \"OK\"],\n [\"-1\", \"0x01 0x81 EQUAL\", \"P2SH,STRICTENC\", \"OK\", \"Numbers are little-endian with the MSB being a sign bit\"],\n [\"-127\", \"0x01 0xFF EQUAL\", \"P2SH,STRICTENC\", \"OK\"],"
      },
      {
        "sha": "2235bd0ae7d9fc0e6b50cd66604416eea3bd87f0",
        "filename": "src/test/data/tx_invalid.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/tx_invalid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/tx_invalid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_invalid.json?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,7 +1,7 @@\n [\n [\"The following are deserialized transactions which are invalid.\"],\n [\"They are in the form\"],\n-[\"[[[prevout hash, prevout index, prevout scriptPubKey], [input 2], ...],\"],\n+[\"[[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...],\"],\n [\"serializedTransaction, verifyFlags]\"],\n [\"Objects that are only a single string (like this one) are ignored\"],\n "
      },
      {
        "sha": "d70fa543337dc88b2f416628a93b5e8b99c1ef69",
        "filename": "src/test/data/tx_valid.json",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/tx_valid.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/data/tx_valid.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/data/tx_valid.json?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -1,7 +1,7 @@\n [\n [\"The following are deserialized transactions which are valid.\"],\n [\"They are in the form\"],\n-[\"[[[prevout hash, prevout index, prevout scriptPubKey], [input 2], ...],\"],\n+[\"[[[prevout hash, prevout index, prevout scriptPubKey, amount?], [input 2], ...],\"],\n [\"serializedTransaction, verifyFlags]\"],\n [\"Objects that are only a single string (like this one) are ignored\"],\n "
      },
      {
        "sha": "c9d9849ada071ca27b169f707627c931f58475f3",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 12,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -28,7 +28,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n-        boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n         uint256 in = GetRandHash();\n@@ -49,7 +49,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n-        boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n@@ -86,7 +86,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n     // Perform tests both obfuscated and non-obfuscated.\n     for (int i = 0; i < 2; i++) {\n         bool obfuscate = (bool)i;\n-        boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+        fs::path ph = fs::temp_directory_path() / fs::unique_path();\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         // The two keys are intentionally chosen for ordering\n@@ -125,8 +125,8 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n // Test that we do not obfuscation if there is existing data.\n BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n {\n-    // We're going to share this boost::filesystem::path between two wrappers\n-    boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+    // We're going to share this fs::path between two wrappers\n+    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -141,6 +141,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n \n     // Call the destructor to free leveldb LOCK\n     delete dbw;\n+    dbw = nullptr;\n \n     // Now, set up another wrapper that wants to obfuscate the same directory\n     CDBWrapper odbw(ph, (1 << 10), false, false, true);\n@@ -166,8 +167,8 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n // Ensure that we start obfuscating during a reindex.\n BOOST_AUTO_TEST_CASE(existing_data_reindex)\n {\n-    // We're going to share this boost::filesystem::path between two wrappers\n-    boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+    // We're going to share this fs::path between two wrappers\n+    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -182,6 +183,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n \n     // Call the destructor to free leveldb LOCK\n     delete dbw;\n+    dbw = nullptr;\n \n     // Simulate a -reindex by wiping the existing data store\n     CDBWrapper odbw(ph, (1 << 10), false, true, true);\n@@ -202,7 +204,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n \n BOOST_AUTO_TEST_CASE(iterator_ordering)\n {\n-    boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<256; ++x) {\n         uint8_t key = x;\n@@ -273,11 +275,11 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n {\n     char buf[10];\n \n-    boost::filesystem::path ph = boost::filesystem::temp_directory_path() / boost::filesystem::unique_path();\n+    fs::path ph = fs::temp_directory_path() / fs::unique_path();\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<10; ++x) {\n         for (int y = 0; y < 10; y++) {\n-            sprintf(buf, \"%d\", x);\n+            snprintf(buf, sizeof(buf), \"%d\", x);\n             StringContentsSerializer key(buf);\n             for (int z = 0; z < y; z++)\n                 key += key;\n@@ -293,12 +295,12 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n             seek_start = 0;\n         else\n             seek_start = 5;\n-        sprintf(buf, \"%d\", seek_start);\n+        snprintf(buf, sizeof(buf), \"%d\", seek_start);\n         StringContentsSerializer seek_key(buf);\n         it->Seek(seek_key);\n         for (int x=seek_start; x<10; ++x) {\n             for (int y = 0; y < 10; y++) {\n-                sprintf(buf, \"%d\", x);\n+                snprintf(buf, sizeof(buf), \"%d\", x);\n                 std::string exp_key(buf);\n                 for (int z = 0; z < y; z++)\n                     exp_key += exp_key;"
      },
      {
        "sha": "559b3caf1c58579a8039d3dd58e163d43aaf1aac",
        "filename": "src/test/key_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/key_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/key_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/key_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -29,34 +29,6 @@ static const CBitcoinAddress addr2C(\"1CRj2HyM1CXWzHAXLQtiGLyggNT9WQqsDs\");\n static const std::string strAddressBad(\"1HV9Lc3sNHZxwj4Zk6fB38tEmBryq2cBiF\");\n \n \n-#ifdef KEY_TESTS_DUMPINFO\n-void dumpKeyInfo(uint256 privkey)\n-{\n-    CKey key;\n-    key.resize(32);\n-    memcpy(&secret[0], &privkey, 32);\n-    std::vector<unsigned char> sec;\n-    sec.resize(32);\n-    memcpy(&sec[0], &secret[0], 32);\n-    printf(\"  * secret (hex): %s\\n\", HexStr(sec).c_str());\n-\n-    for (int nCompressed=0; nCompressed<2; nCompressed++)\n-    {\n-        bool fCompressed = nCompressed == 1;\n-        printf(\"  * %s:\\n\", fCompressed ? \"compressed\" : \"uncompressed\");\n-        CBitcoinSecret bsecret;\n-        bsecret.SetSecret(secret, fCompressed);\n-        printf(\"    * secret (base58): %s\\n\", bsecret.ToString().c_str());\n-        CKey key;\n-        key.SetSecret(secret, fCompressed);\n-        std::vector<unsigned char> vchPubKey = key.GetPubKey();\n-        printf(\"    * pubkey (hex): %s\\n\", HexStr(vchPubKey).c_str());\n-        printf(\"    * address (base58): %s\\n\", CBitcoinAddress(vchPubKey).ToString().c_str());\n-    }\n-}\n-#endif\n-\n-\n BOOST_FIXTURE_TEST_SUITE(key_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(key_test1)"
      },
      {
        "sha": "656aec606b6c2cc30a9211418960a3d1f186da85",
        "filename": "src/test/main_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/main_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/main_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/main_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -39,17 +39,18 @@ static void TestBlockSubsidyHalvings(int nSubsidyHalvingInterval)\n \n BOOST_AUTO_TEST_CASE(block_subsidy_test)\n {\n-    TestBlockSubsidyHalvings(Params(CBaseChainParams::MAIN).GetConsensus()); // As in main\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n+    TestBlockSubsidyHalvings(chainParams->GetConsensus()); // As in main\n     TestBlockSubsidyHalvings(150); // As in regtest\n     TestBlockSubsidyHalvings(1000); // Just another interval\n }\n \n BOOST_AUTO_TEST_CASE(subsidy_limit_test)\n {\n-    const Consensus::Params& consensusParams = Params(CBaseChainParams::MAIN).GetConsensus();\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     CAmount nSum = 0;\n     for (int nHeight = 0; nHeight < 14000000; nHeight += 1000) {\n-        CAmount nSubsidy = GetBlockSubsidy(nHeight, consensusParams);\n+        CAmount nSubsidy = GetBlockSubsidy(nHeight, chainParams->GetConsensus());\n         BOOST_CHECK(nSubsidy <= 50 * COIN);\n         nSum += nSubsidy * 1000;\n         BOOST_CHECK(MoneyRange(nSum));"
      },
      {
        "sha": "51b28d09fa4d9da1ce150dd36637a6683b3ab444",
        "filename": "src/test/mempool_tests.cpp",
        "status": "modified",
        "additions": 24,
        "deletions": 27,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/mempool_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/mempool_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/mempool_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -54,7 +54,7 @@ BOOST_AUTO_TEST_CASE(MempoolRemoveTest)\n     }\n \n \n-    CTxMemPool testPool(CFeeRate(0));\n+    CTxMemPool testPool;\n \n     // Nothing in pool, remove should do nothing:\n     unsigned int poolSize = testPool.size();\n@@ -118,44 +118,43 @@ void CheckSort(CTxMemPool &pool, std::vector<std::string> &sortedOrder)\n \n BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n \n     /* 3rd highest fee */\n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vout.resize(1);\n     tx1.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx1.vout[0].nValue = 10 * COIN;\n-    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).Priority(10.0).FromTx(tx1));\n+    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).FromTx(tx1));\n \n     /* highest fee */\n     CMutableTransaction tx2 = CMutableTransaction();\n     tx2.vout.resize(1);\n     tx2.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx2.vout[0].nValue = 2 * COIN;\n-    pool.addUnchecked(tx2.GetHash(), entry.Fee(20000LL).Priority(9.0).FromTx(tx2));\n+    pool.addUnchecked(tx2.GetHash(), entry.Fee(20000LL).FromTx(tx2));\n \n     /* lowest fee */\n     CMutableTransaction tx3 = CMutableTransaction();\n     tx3.vout.resize(1);\n     tx3.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx3.vout[0].nValue = 5 * COIN;\n-    pool.addUnchecked(tx3.GetHash(), entry.Fee(0LL).Priority(100.0).FromTx(tx3));\n+    pool.addUnchecked(tx3.GetHash(), entry.Fee(0LL).FromTx(tx3));\n \n     /* 2nd highest fee */\n     CMutableTransaction tx4 = CMutableTransaction();\n     tx4.vout.resize(1);\n     tx4.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx4.vout[0].nValue = 6 * COIN;\n-    pool.addUnchecked(tx4.GetHash(), entry.Fee(15000LL).Priority(1.0).FromTx(tx4));\n+    pool.addUnchecked(tx4.GetHash(), entry.Fee(15000LL).FromTx(tx4));\n \n     /* equal fee rate to tx1, but newer */\n     CMutableTransaction tx5 = CMutableTransaction();\n     tx5.vout.resize(1);\n     tx5.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx5.vout[0].nValue = 11 * COIN;\n     entry.nTime = 1;\n-    entry.dPriority = 10.0;\n     pool.addUnchecked(tx5.GetHash(), entry.Fee(10000LL).FromTx(tx5));\n     BOOST_CHECK_EQUAL(pool.size(), 5);\n \n@@ -320,37 +319,37 @@ BOOST_AUTO_TEST_CASE(MempoolIndexingTest)\n \n BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n {\n-    CTxMemPool pool(CFeeRate(0));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n \n     /* 3rd highest fee */\n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vout.resize(1);\n     tx1.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx1.vout[0].nValue = 10 * COIN;\n-    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).Priority(10.0).FromTx(tx1));\n+    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).FromTx(tx1));\n \n     /* highest fee */\n     CMutableTransaction tx2 = CMutableTransaction();\n     tx2.vout.resize(1);\n     tx2.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx2.vout[0].nValue = 2 * COIN;\n-    pool.addUnchecked(tx2.GetHash(), entry.Fee(20000LL).Priority(9.0).FromTx(tx2));\n+    pool.addUnchecked(tx2.GetHash(), entry.Fee(20000LL).FromTx(tx2));\n     uint64_t tx2Size = GetVirtualTransactionSize(tx2);\n \n     /* lowest fee */\n     CMutableTransaction tx3 = CMutableTransaction();\n     tx3.vout.resize(1);\n     tx3.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx3.vout[0].nValue = 5 * COIN;\n-    pool.addUnchecked(tx3.GetHash(), entry.Fee(0LL).Priority(100.0).FromTx(tx3));\n+    pool.addUnchecked(tx3.GetHash(), entry.Fee(0LL).FromTx(tx3));\n \n     /* 2nd highest fee */\n     CMutableTransaction tx4 = CMutableTransaction();\n     tx4.vout.resize(1);\n     tx4.vout[0].scriptPubKey = CScript() << OP_11 << OP_EQUAL;\n     tx4.vout[0].nValue = 6 * COIN;\n-    pool.addUnchecked(tx4.GetHash(), entry.Fee(15000LL).Priority(1.0).FromTx(tx4));\n+    pool.addUnchecked(tx4.GetHash(), entry.Fee(15000LL).FromTx(tx4));\n \n     /* equal fee rate to tx1, but newer */\n     CMutableTransaction tx5 = CMutableTransaction();\n@@ -408,7 +407,6 @@ BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n     /* set the fee to just below tx2's feerate when including ancestor */\n     CAmount fee = (20000/tx2Size)*(tx7Size + tx6Size) - 1;\n \n-    //CTxMemPoolEntry entry7(tx7, fee, 2, 10.0, 1, true);\n     pool.addUnchecked(tx7.GetHash(), entry.Fee(fee).FromTx(tx7));\n     BOOST_CHECK_EQUAL(pool.size(), 7);\n     sortedOrder.insert(sortedOrder.begin()+1, tx7.GetHash().ToString());\n@@ -432,25 +430,24 @@ BOOST_AUTO_TEST_CASE(MempoolAncestorIndexingTest)\n \n BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n {\n-    CTxMemPool pool(CFeeRate(1000));\n+    CTxMemPool pool;\n     TestMemPoolEntryHelper entry;\n-    entry.dPriority = 10.0;\n \n     CMutableTransaction tx1 = CMutableTransaction();\n     tx1.vin.resize(1);\n     tx1.vin[0].scriptSig = CScript() << OP_1;\n     tx1.vout.resize(1);\n     tx1.vout[0].scriptPubKey = CScript() << OP_1 << OP_EQUAL;\n     tx1.vout[0].nValue = 10 * COIN;\n-    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).FromTx(tx1, &pool));\n+    pool.addUnchecked(tx1.GetHash(), entry.Fee(10000LL).FromTx(tx1));\n \n     CMutableTransaction tx2 = CMutableTransaction();\n     tx2.vin.resize(1);\n     tx2.vin[0].scriptSig = CScript() << OP_2;\n     tx2.vout.resize(1);\n     tx2.vout[0].scriptPubKey = CScript() << OP_2 << OP_EQUAL;\n     tx2.vout[0].nValue = 10 * COIN;\n-    pool.addUnchecked(tx2.GetHash(), entry.Fee(5000LL).FromTx(tx2, &pool));\n+    pool.addUnchecked(tx2.GetHash(), entry.Fee(5000LL).FromTx(tx2));\n \n     pool.TrimToSize(pool.DynamicMemoryUsage()); // should do nothing\n     BOOST_CHECK(pool.exists(tx1.GetHash()));\n@@ -460,15 +457,15 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     BOOST_CHECK(pool.exists(tx1.GetHash()));\n     BOOST_CHECK(!pool.exists(tx2.GetHash()));\n \n-    pool.addUnchecked(tx2.GetHash(), entry.FromTx(tx2, &pool));\n+    pool.addUnchecked(tx2.GetHash(), entry.FromTx(tx2));\n     CMutableTransaction tx3 = CMutableTransaction();\n     tx3.vin.resize(1);\n     tx3.vin[0].prevout = COutPoint(tx2.GetHash(), 0);\n     tx3.vin[0].scriptSig = CScript() << OP_2;\n     tx3.vout.resize(1);\n     tx3.vout[0].scriptPubKey = CScript() << OP_3 << OP_EQUAL;\n     tx3.vout[0].nValue = 10 * COIN;\n-    pool.addUnchecked(tx3.GetHash(), entry.Fee(20000LL).FromTx(tx3, &pool));\n+    pool.addUnchecked(tx3.GetHash(), entry.Fee(20000LL).FromTx(tx3));\n \n     pool.TrimToSize(pool.DynamicMemoryUsage() * 3 / 4); // tx3 should pay for tx2 (CPFP)\n     BOOST_CHECK(!pool.exists(tx1.GetHash()));\n@@ -531,10 +528,10 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     tx7.vout[1].scriptPubKey = CScript() << OP_7 << OP_EQUAL;\n     tx7.vout[1].nValue = 10 * COIN;\n \n-    pool.addUnchecked(tx4.GetHash(), entry.Fee(7000LL).FromTx(tx4, &pool));\n-    pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5, &pool));\n-    pool.addUnchecked(tx6.GetHash(), entry.Fee(1100LL).FromTx(tx6, &pool));\n-    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7, &pool));\n+    pool.addUnchecked(tx4.GetHash(), entry.Fee(7000LL).FromTx(tx4));\n+    pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5));\n+    pool.addUnchecked(tx6.GetHash(), entry.Fee(1100LL).FromTx(tx6));\n+    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7));\n \n     // we only require this remove, at max, 2 txn, because its not clear what we're really optimizing for aside from that\n     pool.TrimToSize(pool.DynamicMemoryUsage() - 1);\n@@ -543,17 +540,17 @@ BOOST_AUTO_TEST_CASE(MempoolSizeLimitTest)\n     BOOST_CHECK(!pool.exists(tx7.GetHash()));\n \n     if (!pool.exists(tx5.GetHash()))\n-        pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5, &pool));\n-    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7, &pool));\n+        pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5));\n+    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7));\n \n     pool.TrimToSize(pool.DynamicMemoryUsage() / 2); // should maximize mempool size by only removing 5/7\n     BOOST_CHECK(pool.exists(tx4.GetHash()));\n     BOOST_CHECK(!pool.exists(tx5.GetHash()));\n     BOOST_CHECK(pool.exists(tx6.GetHash()));\n     BOOST_CHECK(!pool.exists(tx7.GetHash()));\n \n-    pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5, &pool));\n-    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7, &pool));\n+    pool.addUnchecked(tx5.GetHash(), entry.Fee(1000LL).FromTx(tx5));\n+    pool.addUnchecked(tx7.GetHash(), entry.Fee(9000LL).FromTx(tx7));\n \n     std::vector<CTransactionRef> vtx;\n     SetMockTime(42);"
      },
      {
        "sha": "f2f06fa8e253147a67bb645f08f671da6c5df6d7",
        "filename": "src/test/merkle_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/merkle_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/merkle_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/merkle_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -118,7 +118,7 @@ BOOST_AUTO_TEST_CASE(merkle_test)\n             // If no mutation was done (once for every ntx value), try up to 16 branches.\n             if (mutate == 0) {\n                 for (int loop = 0; loop < std::min(ntx, 16); loop++) {\n-                    // If ntx <= 16, try all branches. Otherise, try 16 random ones.\n+                    // If ntx <= 16, try all branches. Otherwise, try 16 random ones.\n                     int mtx = loop;\n                     if (ntx > 16) {\n                         mtx = insecure_rand() % ntx;"
      },
      {
        "sha": "a40060e6579adb8d898a4e10bb01846787b981d0",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 23,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,6 +6,7 @@\n #include \"coins.h\"\n #include \"consensus/consensus.h\"\n #include \"consensus/merkle.h\"\n+#include \"consensus/tx_verify.h\"\n #include \"consensus/validation.h\"\n #include \"validation.h\"\n #include \"miner.h\"\n@@ -27,6 +28,15 @@ BOOST_FIXTURE_TEST_SUITE(miner_tests, TestingSetup)\n \n static CFeeRate blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n \n+static BlockAssembler AssemblerForTest(const CChainParams& params) {\n+    BlockAssembler::Options options;\n+\n+    options.nBlockMaxWeight = MAX_BLOCK_WEIGHT;\n+    options.nBlockMaxSize = MAX_BLOCK_SERIALIZED_SIZE;\n+    options.blockMinFeeRate = blockMinFeeRate;\n+    return BlockAssembler(params, options);\n+}\n+\n static\n struct {\n     unsigned char extranonce;\n@@ -79,7 +89,6 @@ bool TestSequenceLocks(const CTransaction &tx, int flags)\n // Test suite for ancestor feerate transaction selection.\n // Implemented as an additional function, rather than a separate test case,\n // to allow reusing the blockchain created in CreateNewBlock_validity.\n-// Note that this test assumes blockprioritysize is 0.\n void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey, std::vector<CTransactionRef>& txFirst)\n {\n     // Test the ancestor feerate transaction selection.\n@@ -110,7 +119,7 @@ void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey,\n     uint256 hashHighFeeTx = tx.GetHash();\n     mempool.addUnchecked(hashHighFeeTx, entry.Fee(50000).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n \n-    std::unique_ptr<CBlockTemplate> pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    std::unique_ptr<CBlockTemplate> pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[1]->GetHash() == hashParentTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[2]->GetHash() == hashHighFeeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[3]->GetHash() == hashMediumFeeTx);\n@@ -130,7 +139,7 @@ void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey,\n     tx.vout[0].nValue = 5000000000LL - 1000 - 50000 - feeToUse;\n     uint256 hashLowFeeTx = tx.GetHash();\n     mempool.addUnchecked(hashLowFeeTx, entry.Fee(feeToUse).FromTx(tx));\n-    pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     // Verify that the free tx and the low fee tx didn't get selected\n     for (size_t i=0; i<pblocktemplate->block.vtx.size(); ++i) {\n         BOOST_CHECK(pblocktemplate->block.vtx[i]->GetHash() != hashFreeTx);\n@@ -144,7 +153,7 @@ void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey,\n     tx.vout[0].nValue -= 2; // Now we should be just over the min relay fee\n     hashLowFeeTx = tx.GetHash();\n     mempool.addUnchecked(hashLowFeeTx, entry.Fee(feeToUse+2).FromTx(tx));\n-    pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[4]->GetHash() == hashFreeTx);\n     BOOST_CHECK(pblocktemplate->block.vtx[5]->GetHash() == hashLowFeeTx);\n \n@@ -165,7 +174,7 @@ void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey,\n     tx.vout[0].nValue = 5000000000LL - 100000000 - feeToUse;\n     uint256 hashLowFeeTx2 = tx.GetHash();\n     mempool.addUnchecked(hashLowFeeTx2, entry.Fee(feeToUse).SpendsCoinbase(false).FromTx(tx));\n-    pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n \n     // Verify that this tx isn't selected.\n     for (size_t i=0; i<pblocktemplate->block.vtx.size(); ++i) {\n@@ -178,30 +187,30 @@ void TestPackageSelection(const CChainParams& chainparams, CScript scriptPubKey,\n     tx.vin[0].prevout.n = 1;\n     tx.vout[0].nValue = 100000000 - 10000; // 10k satoshi fee\n     mempool.addUnchecked(tx.GetHash(), entry.Fee(10000).FromTx(tx));\n-    pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey);\n+    pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey);\n     BOOST_CHECK(pblocktemplate->block.vtx[8]->GetHash() == hashLowFeeTx2);\n }\n \n // NOTE: These tests rely on CreateNewBlock doing its own self-validation!\n BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n {\n     // Note that by default, these tests run with size accounting enabled.\n-    const CChainParams& chainparams = Params(CBaseChainParams::MAIN);\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n+    const CChainParams& chainparams = *chainParams;\n     CScript scriptPubKey = CScript() << ParseHex(\"04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\") << OP_CHECKSIG;\n     std::unique_ptr<CBlockTemplate> pblocktemplate;\n     CMutableTransaction tx,tx2;\n     CScript script;\n     uint256 hash;\n     TestMemPoolEntryHelper entry;\n     entry.nFee = 11;\n-    entry.dPriority = 111.0;\n     entry.nHeight = 11;\n \n     LOCK(cs_main);\n     fCheckpointsEnabled = false;\n \n     // Simple block creation, nothing special yet:\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n \n     // We can't make transactions until we have inputs\n     // Therefore, load 100 blocks :)\n@@ -232,7 +241,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     }\n \n     // Just to make sure we can still make simple blocks\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n \n     const CAmount BLOCKSUBSIDY = 50*COIN;\n     const CAmount LOWFEE = CENT;\n@@ -256,7 +265,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK_THROW(BlockAssembler(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n+    BOOST_CHECK_THROW(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n     mempool.clear();\n \n     tx.vin[0].prevout.hash = txFirst[0]->GetHash();\n@@ -270,7 +279,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).SigOpsCost(80).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     mempool.clear();\n \n     // block size > limit\n@@ -290,16 +299,16 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(spendsCoinbase).FromTx(tx));\n         tx.vin[0].prevout.hash = hash;\n     }\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     mempool.clear();\n \n     // orphan in mempool, template creation fails\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).FromTx(tx));\n-    BOOST_CHECK_THROW(BlockAssembler(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n+    BOOST_CHECK_THROW(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n     mempool.clear();\n \n-    // child with higher priority than parent\n+    // child with higher feerate than parent\n     tx.vin[0].scriptSig = CScript() << OP_1;\n     tx.vin[0].prevout.hash = txFirst[1]->GetHash();\n     tx.vout[0].nValue = BLOCKSUBSIDY-HIGHFEE;\n@@ -313,7 +322,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue = tx.vout[0].nValue+BLOCKSUBSIDY-HIGHERFEE; //First txn output + fresh coinbase - new txn fee\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, entry.Fee(HIGHERFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     mempool.clear();\n \n     // coinbase in mempool, template creation fails\n@@ -324,7 +333,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     hash = tx.GetHash();\n     // give it a fee so it'll get mined\n     mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n-    BOOST_CHECK_THROW(BlockAssembler(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n+    BOOST_CHECK_THROW(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n     mempool.clear();\n \n     // invalid (pre-p2sh) txn in mempool, template creation fails\n@@ -341,7 +350,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].nValue -= LOWFEE;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, entry.Fee(LOWFEE).Time(GetTime()).SpendsCoinbase(false).FromTx(tx));\n-    BOOST_CHECK_THROW(BlockAssembler(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n+    BOOST_CHECK_THROW(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n     mempool.clear();\n \n     // double spend txn pair in mempool, template creation fails\n@@ -354,7 +363,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vout[0].scriptPubKey = CScript() << OP_2;\n     hash = tx.GetHash();\n     mempool.addUnchecked(hash, entry.Fee(HIGHFEE).Time(GetTime()).SpendsCoinbase(true).FromTx(tx));\n-    BOOST_CHECK_THROW(BlockAssembler(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n+    BOOST_CHECK_THROW(AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey), std::runtime_error);\n     mempool.clear();\n \n     // subsidy changing\n@@ -370,7 +379,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         next->BuildSkip();\n         chainActive.SetTip(next);\n     }\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     // Extend to a 210000-long block chain.\n     while (chainActive.Tip()->nHeight < 210000) {\n         CBlockIndex* prev = chainActive.Tip();\n@@ -382,7 +391,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n         next->BuildSkip();\n         chainActive.SetTip(next);\n     }\n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     // Delete the dummy blocks again.\n     while (chainActive.Tip()->nHeight > nHeight) {\n         CBlockIndex* del = chainActive.Tip();\n@@ -468,7 +477,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     tx.vin[0].nSequence = CTxIn::SEQUENCE_LOCKTIME_TYPE_FLAG | 1;\n     BOOST_CHECK(!TestSequenceLocks(tx, flags)); // Sequence locks fail\n \n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n \n     // None of the of the absolute height/time locked tx should have made\n     // it into the template because we still check IsFinalTx in CreateNewBlock,\n@@ -481,7 +490,7 @@ BOOST_AUTO_TEST_CASE(CreateNewBlock_validity)\n     chainActive.Tip()->nHeight++;\n     SetMockTime(chainActive.Tip()->GetMedianTimePast() + 1);\n \n-    BOOST_CHECK(pblocktemplate = BlockAssembler(chainparams).CreateNewBlock(scriptPubKey));\n+    BOOST_CHECK(pblocktemplate = AssemblerForTest(chainparams).CreateNewBlock(scriptPubKey));\n     BOOST_CHECK_EQUAL(pblocktemplate->block.vtx.size(), 5);\n \n     chainActive.Tip()->nHeight--;"
      },
      {
        "sha": "0c7f3e5e2359697c4715cbe661413d249a298d41",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -11,6 +11,7 @@\n #include \"net.h\"\n #include \"netbase.h\"\n #include \"chainparams.h\"\n+#include \"util.h\"\n \n class CAddrManSerializationMock : public CAddrMan\n {\n@@ -72,6 +73,18 @@ CDataStream AddrmanToStream(CAddrManSerializationMock& _addrman)\n \n BOOST_FIXTURE_TEST_SUITE(net_tests, BasicTestingSetup)\n \n+BOOST_AUTO_TEST_CASE(cnode_listen_port)\n+{\n+    // test default\n+    unsigned short port = GetListenPort();\n+    BOOST_CHECK(port == Params().GetDefaultPort());\n+    // test set port\n+    unsigned short altPort = 12345;\n+    SoftSetArg(\"-port\", std::to_string(altPort));\n+    port = GetListenPort();\n+    BOOST_CHECK(port == altPort);\n+}\n+\n BOOST_AUTO_TEST_CASE(caddrdb_read)\n {\n     CAddrManUncorrupted addrmanUncorrupted;"
      },
      {
        "sha": "6bfd31564730233d800b244a2b93bd56bbdb6123",
        "filename": "src/test/policyestimator_tests.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 44,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/policyestimator_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/policyestimator_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/policyestimator_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -16,7 +16,8 @@ BOOST_FIXTURE_TEST_SUITE(policyestimator_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n {\n-    CTxMemPool mpool(CFeeRate(1000));\n+    CBlockPolicyEstimator feeEst;\n+    CTxMemPool mpool(&feeEst);\n     TestMemPoolEntryHelper entry;\n     CAmount basefee(2000);\n     CAmount deltaFee(100);\n@@ -49,14 +50,14 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     int blocknum = 0;\n \n     // Loop through 200 blocks\n-    // At a decay .998 and 4 fee transactions per block\n-    // This makes the tx count about 1.33 per bucket, above the 1 threshold\n+    // At a decay .9952 and 4 fee transactions per block\n+    // This makes the tx count about 2.5 per bucket, well above the 0.1 threshold\n     while (blocknum < 200) {\n         for (int j = 0; j < 10; j++) { // For each fee\n             for (int k = 0; k < 4; k++) { // add 4 fee txs\n                 tx.vin[0].prevout.n = 10000*blocknum+100*j+k; // make transaction unique\n                 uint256 hash = tx.GetHash();\n-                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Priority(0).Height(blocknum).FromTx(tx, &mpool));\n+                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Height(blocknum).FromTx(tx));\n                 txHashes[j].push_back(hash);\n             }\n         }\n@@ -74,20 +75,14 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n         }\n         mpool.removeForBlock(block, ++blocknum);\n         block.clear();\n-        if (blocknum == 30) {\n-            // At this point we should need to combine 5 buckets to get enough data points\n-            // So estimateFee(1,2,3) should fail and estimateFee(4) should return somewhere around\n-            // 8*baserate.  estimateFee(4) %'s are 100,100,100,100,90 = average 98%\n-            BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n-            BOOST_CHECK(mpool.estimateFee(2) == CFeeRate(0));\n-            BOOST_CHECK(mpool.estimateFee(3) == CFeeRate(0));\n-            BOOST_CHECK(mpool.estimateFee(4).GetFeePerK() < 8*baseRate.GetFeePerK() + deltaFee);\n-            BOOST_CHECK(mpool.estimateFee(4).GetFeePerK() > 8*baseRate.GetFeePerK() - deltaFee);\n-            int answerFound;\n-            BOOST_CHECK(mpool.estimateSmartFee(1, &answerFound) == mpool.estimateFee(4) && answerFound == 4);\n-            BOOST_CHECK(mpool.estimateSmartFee(3, &answerFound) == mpool.estimateFee(4) && answerFound == 4);\n-            BOOST_CHECK(mpool.estimateSmartFee(4, &answerFound) == mpool.estimateFee(4) && answerFound == 4);\n-            BOOST_CHECK(mpool.estimateSmartFee(8, &answerFound) == mpool.estimateFee(8) && answerFound == 8);\n+        // Check after just a few txs that combining buckets works as expected\n+        if (blocknum == 3) {\n+            // At this point we should need to combine 3 buckets to get enough data points\n+            // So estimateFee(1) should fail and estimateFee(2) should return somewhere around\n+            // 9*baserate.  estimateFee(2) %'s are 100,100,90 = average 97%\n+            BOOST_CHECK(feeEst.estimateFee(1) == CFeeRate(0));\n+            BOOST_CHECK(feeEst.estimateFee(2).GetFeePerK() < 9*baseRate.GetFeePerK() + deltaFee);\n+            BOOST_CHECK(feeEst.estimateFee(2).GetFeePerK() > 9*baseRate.GetFeePerK() - deltaFee);\n         }\n     }\n \n@@ -99,29 +94,30 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n     // Second highest feerate has 100% chance of being included by 2 blocks,\n     // so estimateFee(2) should return 9*baseRate etc...\n     for (int i = 1; i < 10;i++) {\n-        origFeeEst.push_back(mpool.estimateFee(i).GetFeePerK());\n+        origFeeEst.push_back(feeEst.estimateFee(i).GetFeePerK());\n         if (i > 2) { // Fee estimates should be monotonically decreasing\n             BOOST_CHECK(origFeeEst[i-1] <= origFeeEst[i-2]);\n         }\n         int mult = 11-i;\n-        if (i > 1) {\n+        if (i % 2 == 0) { //At scale 2, test logic is only correct for even targets\n             BOOST_CHECK(origFeeEst[i-1] < mult*baseRate.GetFeePerK() + deltaFee);\n             BOOST_CHECK(origFeeEst[i-1] > mult*baseRate.GetFeePerK() - deltaFee);\n         }\n-        else {\n-            BOOST_CHECK(origFeeEst[i-1] == CFeeRate(0).GetFeePerK());\n-        }\n+    }\n+    // Fill out rest of the original estimates\n+    for (int i = 10; i <= 48; i++) {\n+        origFeeEst.push_back(feeEst.estimateFee(i).GetFeePerK());\n     }\n \n     // Mine 50 more blocks with no transactions happening, estimates shouldn't change\n     // We haven't decayed the moving average enough so we still have enough data points in every bucket\n     while (blocknum < 250)\n         mpool.removeForBlock(block, ++blocknum);\n \n-    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n+    BOOST_CHECK(feeEst.estimateFee(1) == CFeeRate(0));\n     for (int i = 2; i < 10;i++) {\n-        BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() < origFeeEst[i-1] + deltaFee);\n-        BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n+        BOOST_CHECK(feeEst.estimateFee(i).GetFeePerK() < origFeeEst[i-1] + deltaFee);\n+        BOOST_CHECK(feeEst.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n     }\n \n \n@@ -132,17 +128,15 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n             for (int k = 0; k < 4; k++) { // add 4 fee txs\n                 tx.vin[0].prevout.n = 10000*blocknum+100*j+k;\n                 uint256 hash = tx.GetHash();\n-                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Priority(0).Height(blocknum).FromTx(tx, &mpool));\n+                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Height(blocknum).FromTx(tx));\n                 txHashes[j].push_back(hash);\n             }\n         }\n         mpool.removeForBlock(block, ++blocknum);\n     }\n \n-    int answerFound;\n     for (int i = 1; i < 10;i++) {\n-        BOOST_CHECK(mpool.estimateFee(i) == CFeeRate(0) || mpool.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n-        BOOST_CHECK(mpool.estimateSmartFee(i, &answerFound).GetFeePerK() > origFeeEst[answerFound-1] - deltaFee);\n+        BOOST_CHECK(feeEst.estimateFee(i) == CFeeRate(0) || feeEst.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n     }\n \n     // Mine all those transactions\n@@ -155,21 +149,21 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n             txHashes[j].pop_back();\n         }\n     }\n-    mpool.removeForBlock(block, 265);\n+    mpool.removeForBlock(block, 266);\n     block.clear();\n-    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n+    BOOST_CHECK(feeEst.estimateFee(1) == CFeeRate(0));\n     for (int i = 2; i < 10;i++) {\n-        BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n+        BOOST_CHECK(feeEst.estimateFee(i) == CFeeRate(0) || feeEst.estimateFee(i).GetFeePerK() > origFeeEst[i-1] - deltaFee);\n     }\n \n-    // Mine 200 more blocks where everything is mined every block\n+    // Mine 400 more blocks where everything is mined every block\n     // Estimates should be below original estimates\n-    while (blocknum < 465) {\n+    while (blocknum < 665) {\n         for (int j = 0; j < 10; j++) { // For each fee multiple\n             for (int k = 0; k < 4; k++) { // add 4 fee txs\n                 tx.vin[0].prevout.n = 10000*blocknum+100*j+k;\n                 uint256 hash = tx.GetHash();\n-                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Priority(0).Height(blocknum).FromTx(tx, &mpool));\n+                mpool.addUnchecked(hash, entry.Fee(feeV[j]).Time(GetTime()).Height(blocknum).FromTx(tx));\n                 CTransactionRef ptx = mpool.get(hash);\n                 if (ptx)\n                     block.push_back(ptx);\n@@ -179,21 +173,19 @@ BOOST_AUTO_TEST_CASE(BlockPolicyEstimates)\n         mpool.removeForBlock(block, ++blocknum);\n         block.clear();\n     }\n-    BOOST_CHECK(mpool.estimateFee(1) == CFeeRate(0));\n-    for (int i = 2; i < 10; i++) {\n-        BOOST_CHECK(mpool.estimateFee(i).GetFeePerK() < origFeeEst[i-1] - deltaFee);\n+    BOOST_CHECK(feeEst.estimateFee(1) == CFeeRate(0));\n+    for (int i = 2; i < 9; i++) { // At 9, the original estimate was already at the bottom (b/c scale = 2)\n+        BOOST_CHECK(feeEst.estimateFee(i).GetFeePerK() < origFeeEst[i-1] - deltaFee);\n     }\n \n     // Test that if the mempool is limited, estimateSmartFee won't return a value below the mempool min fee\n-    // and that estimateSmartPriority returns essentially an infinite value\n-    mpool.addUnchecked(tx.GetHash(),  entry.Fee(feeV[5]).Time(GetTime()).Priority(0).Height(blocknum).FromTx(tx, &mpool));\n+    mpool.addUnchecked(tx.GetHash(),  entry.Fee(feeV[5]).Time(GetTime()).Height(blocknum).FromTx(tx));\n     // evict that transaction which should set a mempool min fee of minRelayTxFee + feeV[5]\n     mpool.TrimToSize(1);\n     BOOST_CHECK(mpool.GetMinFee(1).GetFeePerK() > feeV[5]);\n     for (int i = 1; i < 10; i++) {\n-        BOOST_CHECK(mpool.estimateSmartFee(i).GetFeePerK() >= mpool.estimateFee(i).GetFeePerK());\n-        BOOST_CHECK(mpool.estimateSmartFee(i).GetFeePerK() >= mpool.GetMinFee(1).GetFeePerK());\n-        BOOST_CHECK(mpool.estimateSmartPriority(i) == INF_PRIORITY);\n+        BOOST_CHECK(feeEst.estimateSmartFee(i, NULL, mpool).GetFeePerK() >= feeEst.estimateRawFee(i, 0.85, FeeEstimateHorizon::MED_HALFLIFE).GetFeePerK());\n+        BOOST_CHECK(feeEst.estimateSmartFee(i, NULL, mpool).GetFeePerK() >= mpool.GetMinFee(1).GetFeePerK());\n     }\n }\n "
      },
      {
        "sha": "3b79f8000d3419c41a6736d6c1cf6b1f5086b37e",
        "filename": "src/test/pow_tests.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 21,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -16,69 +16,59 @@ BOOST_FIXTURE_TEST_SUITE(pow_tests, BasicTestingSetup)\n /* Test calculation of next difficulty target with no constraints applying */\n BOOST_AUTO_TEST_CASE(get_next_work)\n {\n-    SelectParams(CBaseChainParams::MAIN);\n-    const Consensus::Params& params = Params().GetConsensus();\n-\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     int64_t nLastRetargetTime = 1261130161; // Block #30240\n     CBlockIndex pindexLast;\n     pindexLast.nHeight = 32255;\n     pindexLast.nTime = 1262152739;  // Block #32255\n     pindexLast.nBits = 0x1d00ffff;\n-    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, params), 0x1d00d86a);\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, chainParams->GetConsensus()), 0x1d00d86a);\n }\n \n /* Test the constraint on the upper bound for next work */\n BOOST_AUTO_TEST_CASE(get_next_work_pow_limit)\n {\n-    SelectParams(CBaseChainParams::MAIN);\n-    const Consensus::Params& params = Params().GetConsensus();\n-\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     int64_t nLastRetargetTime = 1231006505; // Block #0\n     CBlockIndex pindexLast;\n     pindexLast.nHeight = 2015;\n     pindexLast.nTime = 1233061996;  // Block #2015\n     pindexLast.nBits = 0x1d00ffff;\n-    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, params), 0x1d00ffff);\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, chainParams->GetConsensus()), 0x1d00ffff);\n }\n \n /* Test the constraint on the lower bound for actual time taken */\n BOOST_AUTO_TEST_CASE(get_next_work_lower_limit_actual)\n {\n-    SelectParams(CBaseChainParams::MAIN);\n-    const Consensus::Params& params = Params().GetConsensus();\n-\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     int64_t nLastRetargetTime = 1279008237; // Block #66528\n     CBlockIndex pindexLast;\n     pindexLast.nHeight = 68543;\n     pindexLast.nTime = 1279297671;  // Block #68543\n     pindexLast.nBits = 0x1c05a3f4;\n-    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, params), 0x1c0168fd);\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, chainParams->GetConsensus()), 0x1c0168fd);\n }\n \n /* Test the constraint on the upper bound for actual time taken */\n BOOST_AUTO_TEST_CASE(get_next_work_upper_limit_actual)\n {\n-    SelectParams(CBaseChainParams::MAIN);\n-    const Consensus::Params& params = Params().GetConsensus();\n-\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     int64_t nLastRetargetTime = 1263163443; // NOTE: Not an actual block time\n     CBlockIndex pindexLast;\n     pindexLast.nHeight = 46367;\n     pindexLast.nTime = 1269211443;  // Block #46367\n     pindexLast.nBits = 0x1c387f6f;\n-    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, params), 0x1d00e1fd);\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime, chainParams->GetConsensus()), 0x1d00e1fd);\n }\n \n BOOST_AUTO_TEST_CASE(GetBlockProofEquivalentTime_test)\n {\n-    SelectParams(CBaseChainParams::MAIN);\n-    const Consensus::Params& params = Params().GetConsensus();\n-\n+    const auto chainParams = CreateChainParams(CBaseChainParams::MAIN);\n     std::vector<CBlockIndex> blocks(10000);\n     for (int i = 0; i < 10000; i++) {\n         blocks[i].pprev = i ? &blocks[i - 1] : NULL;\n         blocks[i].nHeight = i;\n-        blocks[i].nTime = 1269211443 + i * params.nPowTargetSpacing;\n+        blocks[i].nTime = 1269211443 + i * chainParams->GetConsensus().nPowTargetSpacing;\n         blocks[i].nBits = 0x207fffff; /* target 0x7fffff000... */\n         blocks[i].nChainWork = i ? blocks[i - 1].nChainWork + GetBlockProof(blocks[i - 1]) : arith_uint256(0);\n     }\n@@ -88,7 +78,7 @@ BOOST_AUTO_TEST_CASE(GetBlockProofEquivalentTime_test)\n         CBlockIndex *p2 = &blocks[GetRand(10000)];\n         CBlockIndex *p3 = &blocks[GetRand(10000)];\n \n-        int64_t tdiff = GetBlockProofEquivalentTime(*p1, *p2, *p3, params);\n+        int64_t tdiff = GetBlockProofEquivalentTime(*p1, *p2, *p3, chainParams->GetConsensus());\n         BOOST_CHECK_EQUAL(tdiff, p1->GetBlockTime() - p2->GetBlockTime());\n     }\n }"
      },
      {
        "sha": "cfed5e347edfd14baad673835406448c52ca3f06",
        "filename": "src/test/prevector_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/prevector_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/prevector_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/prevector_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -28,6 +28,7 @@ class prevector_tester {\n     typedef typename pretype::size_type Size;\n     bool passed = true;\n     FastRandomContext rand_cache;\n+    uint256 rand_seed;\n \n \n     template <typename A, typename B>\n@@ -183,13 +184,12 @@ class prevector_tester {\n     }\n \n     ~prevector_tester() {\n-        BOOST_CHECK_MESSAGE(passed, \"insecure_rand_Rz: \"\n-                << rand_cache.Rz\n-                << \", insecure_rand_Rw: \"\n-                << rand_cache.Rw);\n+        BOOST_CHECK_MESSAGE(passed, \"insecure_rand: \" + rand_seed.ToString());\n     }\n+\n     prevector_tester() {\n         seed_insecure_rand();\n+        rand_seed = insecure_rand_seed;\n         rand_cache = insecure_rand_ctx;\n     }\n };"
      },
      {
        "sha": "85967342263a433d6ab411de16ae455840aac7eb",
        "filename": "src/test/random_tests.cpp",
        "status": "added",
        "additions": 53,
        "deletions": 0,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/random_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/random_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/random_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,53 @@\n+// Copyright (c) 2017 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"random.h\"\n+\n+#include \"test/test_bitcoin.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+BOOST_FIXTURE_TEST_SUITE(random_tests, BasicTestingSetup)\n+\n+BOOST_AUTO_TEST_CASE(osrandom_tests)\n+{\n+    BOOST_CHECK(Random_SanityCheck());\n+}\n+\n+BOOST_AUTO_TEST_CASE(fastrandom_tests)\n+{\n+    // Check that deterministic FastRandomContexts are deterministic\n+    FastRandomContext ctx1(true);\n+    FastRandomContext ctx2(true);\n+\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.rand64(), ctx2.rand64());\n+    BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n+    BOOST_CHECK_EQUAL(ctx1.randbits(7), ctx2.randbits(7));\n+    BOOST_CHECK_EQUAL(ctx1.rand32(), ctx2.rand32());\n+    BOOST_CHECK_EQUAL(ctx1.randbits(3), ctx2.randbits(3));\n+\n+    // Check that a nondeterministic ones are not\n+    FastRandomContext ctx3;\n+    FastRandomContext ctx4;\n+    BOOST_CHECK(ctx3.rand64() != ctx4.rand64()); // extremely unlikely to be equal\n+}\n+\n+BOOST_AUTO_TEST_CASE(fastrandom_randbits)\n+{\n+    FastRandomContext ctx1;\n+    FastRandomContext ctx2;\n+    for (int bits = 0; bits < 63; ++bits) {\n+        for (int j = 0; j < 1000; ++j) {\n+            uint64_t rangebits = ctx1.randbits(bits);\n+            BOOST_CHECK_EQUAL(rangebits >> bits, 0);\n+            uint64_t range = ((uint64_t)1) << bits | rangebits;\n+            uint64_t rand = ctx2.randrange(range);\n+            BOOST_CHECK(rand < range);\n+        }\n+    }\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "7cf2a744ea75a2f03571c2146c6f5a3ce5332833",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -276,7 +276,7 @@ BOOST_AUTO_TEST_CASE(rpc_ban)\n     BOOST_CHECK(banned_until.get_int64() > now);\n     BOOST_CHECK(banned_until.get_int64()-now <= 200);\n \n-    // must throw an exception because 127.0.0.1 is in already banned suubnet range\n+    // must throw an exception because 127.0.0.1 is in already banned subnet range\n     BOOST_CHECK_THROW(r = CallRPC(std::string(\"setban 127.0.0.1 add\")), std::runtime_error);\n \n     BOOST_CHECK_NO_THROW(CallRPC(std::string(\"setban 127.0.0.0/24 remove\")));"
      },
      {
        "sha": "ede68f23d796b0379cc1bc1fdaa2e4cb24eb1ba6",
        "filename": "src/test/script_P2SH_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/script_P2SH_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/script_P2SH_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_P2SH_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"consensus/tx_verify.h\"\n #include \"core_io.h\"\n #include \"key.h\"\n #include \"keystore.h\""
      },
      {
        "sha": "343c645cb1bf49be025cf770d9fef022780bf9d1",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 19,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -32,7 +32,7 @@\n // Uncomment if you want to output updated JSON tests.\n // #define UPDATE_JSON_TESTS\n \n-static const unsigned int flags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n+static const unsigned int gFlags = SCRIPT_VERIFY_P2SH | SCRIPT_VERIFY_STRICTENC;\n \n unsigned int ParseScriptFlags(std::string strFlags);\n std::string FormatScriptFlags(unsigned int flags);\n@@ -455,11 +455,6 @@ class TestBuilder\n     {\n         return comment;\n     }\n-\n-    const CScript& GetScriptPubKey()\n-    {\n-        return creditTx->vout[0].scriptPubKey;\n-    }\n };\n \n std::string JSONPrettyPrint(const UniValue& univalue)\n@@ -1070,18 +1065,18 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG12)\n     CMutableTransaction txTo12 = BuildSpendingTransaction(CScript(), CScriptWitness(), txFrom12);\n \n     CScript goodsig1 = sign_multisig(scriptPubKey12, key1, txTo12);\n-    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n     txTo12.vout[0].nValue = 2;\n-    BOOST_CHECK(!VerifyScript(goodsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(goodsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     CScript goodsig2 = sign_multisig(scriptPubKey12, key2, txTo12);\n-    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     CScript badsig1 = sign_multisig(scriptPubKey12, key3, txTo12);\n-    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey12, NULL, flags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey12, NULL, gFlags, MutableTransactionSignatureChecker(&txTo12, 0, txFrom12.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n }\n \n@@ -1103,54 +1098,54 @@ BOOST_AUTO_TEST_CASE(script_CHECKMULTISIG23)\n     std::vector<CKey> keys;\n     keys.push_back(key1); keys.push_back(key2);\n     CScript goodsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig1, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key1); keys.push_back(key3);\n     CScript goodsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig2, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key3);\n     CScript goodsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(VerifyScript(goodsig3, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(VerifyScript(goodsig3, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_OK, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key2); // Can't re-use sig\n     CScript badsig1 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig1, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key2); keys.push_back(key1); // sigs must be in correct order\n     CScript badsig2 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig2, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig2, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key3); keys.push_back(key2); // sigs must be in correct order\n     CScript badsig3 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig3, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig3, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key4); keys.push_back(key2); // sigs must match pubkeys\n     CScript badsig4 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig4, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig4, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear();\n     keys.push_back(key1); keys.push_back(key4); // sigs must match pubkeys\n     CScript badsig5 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig5, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig5, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_EVAL_FALSE, ScriptErrorString(err));\n \n     keys.clear(); // Must have signatures\n     CScript badsig6 = sign_multisig(scriptPubKey23, keys, txTo23);\n-    BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, NULL, flags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n+    BOOST_CHECK(!VerifyScript(badsig6, scriptPubKey23, NULL, gFlags, MutableTransactionSignatureChecker(&txTo23, 0, txFrom23.vout[0].nValue), &err));\n     BOOST_CHECK_MESSAGE(err == SCRIPT_ERR_INVALID_STACK_OPERATION, ScriptErrorString(err));\n }\n "
      },
      {
        "sha": "2f7c22084e03eab5dc499ab9a4db80d8787e1a68",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,10 +2,10 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"consensus/tx_verify.h\"\n #include \"consensus/validation.h\"\n #include \"data/sighash.json.h\"\n #include \"hash.h\"\n-#include \"validation.h\" // For CheckTransaction\n #include \"script/interpreter.h\"\n #include \"script/script.h\"\n #include \"serialize.h\""
      },
      {
        "sha": "92781d763dfebe76d65627fd9c08091c8f53a5e9",
        "filename": "src/test/sigopcount_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/sigopcount_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/sigopcount_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sigopcount_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,7 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#include \"validation.h\"\n+#include \"consensus/tx_verify.h\"\n #include \"pubkey.h\"\n #include \"key.h\"\n #include \"script/script.h\""
      },
      {
        "sha": "cb625bda11a076d110d1e8db3438d9e36a4885a7",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 34,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -2,13 +2,12 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#define BOOST_TEST_MODULE Bitcoin Test Suite\n-\n #include \"test_bitcoin.h\"\n \n #include \"chainparams.h\"\n #include \"consensus/consensus.h\"\n #include \"consensus/validation.h\"\n+#include \"fs.h\"\n #include \"key.h\"\n #include \"validation.h\"\n #include \"miner.h\"\n@@ -26,12 +25,10 @@\n \n #include <memory>\n \n-#include <boost/filesystem.hpp>\n-#include <boost/test/unit_test.hpp>\n #include <boost/thread.hpp>\n \n-std::unique_ptr<CConnman> g_connman;\n-FastRandomContext insecure_rand_ctx(true);\n+uint256 insecure_rand_seed = GetRandHash();\n+FastRandomContext insecure_rand_ctx(insecure_rand_seed);\n \n extern bool fPrintToConsole;\n extern void noui_connect();\n@@ -63,17 +60,20 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n         RegisterAllCoreRPCCommands(tableRPC);\n         ClearDatadirCache();\n         pathTemp = GetTempPath() / strprintf(\"test_bitcoin_%lu_%i\", (unsigned long)GetTime(), (int)(GetRand(100000)));\n-        boost::filesystem::create_directories(pathTemp);\n+        fs::create_directories(pathTemp);\n         ForceSetArg(\"-datadir\", pathTemp.string());\n         mempool.setSanityCheck(1.0);\n         pblocktree = new CBlockTreeDB(1 << 20, true);\n         pcoinsdbview = new CCoinsViewDB(1 << 23, true);\n         pcoinsTip = new CCoinsViewCache(pcoinsdbview);\n-        InitBlockIndex(chainparams);\n+        if (!InitBlockIndex(chainparams)) {\n+            throw std::runtime_error(\"InitBlockIndex failed.\");\n+        }\n         {\n             CValidationState state;\n-            bool ok = ActivateBestChain(state, chainparams);\n-            BOOST_CHECK(ok);\n+            if (!ActivateBestChain(state, chainparams)) {\n+                throw std::runtime_error(\"ActivateBestChain failed.\");\n+            }\n         }\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)\n@@ -92,7 +92,7 @@ TestingSetup::~TestingSetup()\n         delete pcoinsTip;\n         delete pcoinsdbview;\n         delete pblocktree;\n-        boost::filesystem::remove_all(pathTemp);\n+        fs::remove_all(pathTemp);\n }\n \n TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)\n@@ -141,30 +141,12 @@ TestChain100Setup::~TestChain100Setup()\n }\n \n \n-CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction &tx, CTxMemPool *pool) {\n+CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CMutableTransaction &tx) {\n     CTransaction txn(tx);\n-    return FromTx(txn, pool);\n-}\n-\n-CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CTransaction &txn, CTxMemPool *pool) {\n-    // Hack to assume either it's completely dependent on other mempool txs or not at all\n-    CAmount inChainValue = pool && pool->HasNoInputsOf(txn) ? txn.GetValueOut() : 0;\n-\n-    return CTxMemPoolEntry(MakeTransactionRef(txn), nFee, nTime, dPriority, nHeight,\n-                           inChainValue, spendsCoinbase, sigOpCost, lp);\n-}\n-\n-void Shutdown(void* parg)\n-{\n-  exit(0);\n-}\n-\n-void StartShutdown()\n-{\n-  exit(0);\n+    return FromTx(txn);\n }\n \n-bool ShutdownRequested()\n-{\n-  return false;\n+CTxMemPoolEntry TestMemPoolEntryHelper::FromTx(const CTransaction &txn) {\n+    return CTxMemPoolEntry(MakeTransactionRef(txn), nFee, nTime, nHeight,\n+                           spendsCoinbase, sigOpCost, lp);\n }"
      },
      {
        "sha": "60a86d8c4839093962bec59d817a31b38ded2e15",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 5,
        "deletions": 8,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -6,12 +6,12 @@\n #define BITCOIN_TEST_TEST_BITCOIN_H\n \n #include \"chainparamsbase.h\"\n+#include \"fs.h\"\n #include \"key.h\"\n #include \"pubkey.h\"\n #include \"txdb.h\"\n #include \"txmempool.h\"\n \n-#include <boost/filesystem.hpp>\n #include <boost/thread.hpp>\n \n /** Basic testing setup.\n@@ -30,7 +30,7 @@ struct BasicTestingSetup {\n class CConnman;\n struct TestingSetup: public BasicTestingSetup {\n     CCoinsViewDB *pcoinsdbview;\n-    boost::filesystem::path pathTemp;\n+    fs::path pathTemp;\n     boost::thread_group threadGroup;\n     CConnman* connman;\n \n@@ -61,30 +61,27 @@ struct TestChain100Setup : public TestingSetup {\n };\n \n class CTxMemPoolEntry;\n-class CTxMemPool;\n \n struct TestMemPoolEntryHelper\n {\n     // Default values\n     CAmount nFee;\n     int64_t nTime;\n-    double dPriority;\n     unsigned int nHeight;\n     bool spendsCoinbase;\n     unsigned int sigOpCost;\n     LockPoints lp;\n \n     TestMemPoolEntryHelper() :\n-        nFee(0), nTime(0), dPriority(0.0), nHeight(1),\n+        nFee(0), nTime(0), nHeight(1),\n         spendsCoinbase(false), sigOpCost(4) { }\n     \n-    CTxMemPoolEntry FromTx(const CMutableTransaction &tx, CTxMemPool *pool = NULL);\n-    CTxMemPoolEntry FromTx(const CTransaction &tx, CTxMemPool *pool = NULL);\n+    CTxMemPoolEntry FromTx(const CMutableTransaction &tx);\n+    CTxMemPoolEntry FromTx(const CTransaction &tx);\n \n     // Change the default value\n     TestMemPoolEntryHelper &Fee(CAmount _fee) { nFee = _fee; return *this; }\n     TestMemPoolEntryHelper &Time(int64_t _time) { nTime = _time; return *this; }\n-    TestMemPoolEntryHelper &Priority(double _priority) { dPriority = _priority; return *this; }\n     TestMemPoolEntryHelper &Height(unsigned int _height) { nHeight = _height; return *this; }\n     TestMemPoolEntryHelper &SpendsCoinbase(bool _flag) { spendsCoinbase = _flag; return *this; }\n     TestMemPoolEntryHelper &SigOpsCost(unsigned int _sigopsCost) { sigOpCost = _sigopsCost; return *this; }"
      },
      {
        "sha": "e11e46bb022fe92f9b08d4215bedd9ce00cadab9",
        "filename": "src/test/test_bitcoin_fuzzy.cpp",
        "status": "modified",
        "additions": 21,
        "deletions": 2,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin_fuzzy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin_fuzzy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin_fuzzy.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -59,9 +59,8 @@ bool read_stdin(std::vector<char> &data) {\n     return length==0;\n }\n \n-int main(int argc, char **argv)\n+int do_fuzz()\n {\n-    ECCVerifyHandle globalVerifyHandle;\n     std::vector<char> buffer;\n     if (!read_stdin(buffer)) return 0;\n \n@@ -256,3 +255,23 @@ int main(int argc, char **argv)\n     return 0;\n }\n \n+int main(int argc, char **argv)\n+{\n+    ECCVerifyHandle globalVerifyHandle;\n+#ifdef __AFL_INIT\n+    // Enable AFL deferred forkserver mode. Requires compilation using\n+    // afl-clang-fast++. See fuzzing.md for details.\n+    __AFL_INIT();\n+#endif\n+\n+#ifdef __AFL_LOOP\n+    // Enable AFL persistent mode. Requires compilation using afl-clang-fast++.\n+    // See fuzzing.md for details.\n+    while (__AFL_LOOP(1000)) {\n+        do_fuzz();\n+    }\n+    return 0;\n+#else\n+    return do_fuzz();\n+#endif\n+}"
      },
      {
        "sha": "34beef553901c21a47909d20c9ff97fdc3174269",
        "filename": "src/test/test_bitcoin_main.cpp",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_bitcoin_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin_main.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -0,0 +1,26 @@\n+// Copyright (c) 2011-2016 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#define BOOST_TEST_MODULE Bitcoin Test Suite\n+\n+#include \"net.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+std::unique_ptr<CConnman> g_connman;\n+\n+void Shutdown(void* parg)\n+{\n+  exit(EXIT_SUCCESS);\n+}\n+\n+void StartShutdown()\n+{\n+  exit(EXIT_SUCCESS);\n+}\n+\n+bool ShutdownRequested()\n+{\n+  return false;\n+}"
      },
      {
        "sha": "318c44df4dc8048f5df3a30716a8d109c26c69e0",
        "filename": "src/test/test_random.h",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/test_random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_random.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,11 +8,17 @@\n \n #include \"random.h\"\n \n+extern uint256 insecure_rand_seed;\n extern FastRandomContext insecure_rand_ctx;\n \n static inline void seed_insecure_rand(bool fDeterministic = false)\n {\n-    insecure_rand_ctx = FastRandomContext(fDeterministic);\n+    if (fDeterministic) {\n+        insecure_rand_seed = uint256();\n+    } else {\n+        insecure_rand_seed = GetRandHash();\n+    }\n+    insecure_rand_ctx = FastRandomContext(insecure_rand_seed);\n }\n \n static inline uint32_t insecure_rand(void)"
      },
      {
        "sha": "591d0bf30271240f9184ed472d04ab6c6096c851",
        "filename": "src/test/testutil.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 21,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/testutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/testutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/testutil.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,26 +8,8 @@\n #include <shlobj.h>\n #endif\n \n-#include <boost/filesystem.hpp>\n+#include \"fs.h\"\n \n-boost::filesystem::path GetTempPath() {\n-#if BOOST_FILESYSTEM_VERSION == 3\n-    return boost::filesystem::temp_directory_path();\n-#else\n-    // TODO: remove when we don't support filesystem v2 anymore\n-    boost::filesystem::path path;\n-#ifdef WIN32\n-    char pszPath[MAX_PATH] = \"\";\n-\n-    if (GetTempPathA(MAX_PATH, pszPath))\n-        path = boost::filesystem::path(pszPath);\n-#else\n-    path = boost::filesystem::path(\"/tmp\");\n-#endif\n-    if (path.empty() || !boost::filesystem::is_directory(path)) {\n-        LogPrintf(\"GetTempPath(): failed to find temp path\\n\");\n-        return boost::filesystem::path(\"\");\n-    }\n-    return path;\n-#endif\n+fs::path GetTempPath() {\n+    return fs::temp_directory_path();\n }"
      },
      {
        "sha": "cbe784d6400b9dd4cc4339ae6803f9c1d2bb13fd",
        "filename": "src/test/testutil.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/testutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/testutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/testutil.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "patch": "@@ -8,8 +8,8 @@\n #ifndef BITCOIN_TEST_TESTUTIL_H\n #define BITCOIN_TEST_TESTUTIL_H\n \n-#include <boost/filesystem/path.hpp>\n+#include \"fs.h\"\n \n-boost::filesystem::path GetTempPath();\n+fs::path GetTempPath();\n \n #endif // BITCOIN_TEST_TESTUTIL_H"
      },
      {
        "sha": "b7affaacde585dae3c395359ecc30364ea88a40f",
        "filename": "src/test/torcontrol_tests.cpp",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/torcontrol_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/torcontrol_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/torcontrol_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "67610301d7e5684fa05d9585296c00a7bfe514de",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "10330c0c23a23139b0ab8c78ce0f98eec6fbdfcc",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 34,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "79405ec4d1ed3297cb6266b62a354d83b1f4c92d",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "ec749127032b643053fa88625f9a2e8fad2abe51",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "bc5451b19b74f1ad5da2262be86ce77f850c3af2",
        "filename": "src/timedata.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/timedata.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/timedata.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "5022d4680911452966597483cc916b1b5454950a",
        "filename": "src/tinyformat.h",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/tinyformat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/tinyformat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/tinyformat.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "8a37139f1d1ae98b00fb26d711069705f2c63672",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 118,
        "deletions": 50,
        "changes": 168,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "42dc31760b9adc8ae55e0c8947407f2580c8c744",
        "filename": "src/txdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "117e7201fb69ed707d87964c991f257b6957b403",
        "filename": "src/txdb.h",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txdb.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "332483b1168bb134157e8e408a2e7663c0de920d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 105,
        "changes": 135,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "a91eb5be54f7d4858cc600f25e1980df264bb647",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 14,
        "deletions": 85,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "c4c7b716fea38e9ba09e156581665c13d20a69cf",
        "filename": "src/uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/uint256.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "3a61e3498fcf7a84b49524295ab1beb2c6203d70",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 152,
        "deletions": 110,
        "changes": 262,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "229478d83533b315acf4873364c67f60619dfd17",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 133,
        "deletions": 19,
        "changes": 152,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "6e6e33184ed5a1344d7fd3b4a0aaf402a2972edb",
        "filename": "src/utilmoneystr.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 5,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilmoneystr.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilmoneystr.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilmoneystr.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "74bf66fbf609ced32a920c12c3f1671c4342bb99",
        "filename": "src/utilstrencodings.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 27,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilstrencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilstrencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "e2a1b9bef9a16612ea484c79d5d2fb2f8450049d",
        "filename": "src/utilstrencodings.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilstrencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utilstrencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilstrencodings.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "e07069125d20a37e8eddf2e1f06a8be9df6955ad",
        "filename": "src/utiltime.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 13,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utiltime.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utiltime.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "8ae8540b89c7090ccae8b3db516e67530cc765e8",
        "filename": "src/utiltime.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utiltime.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/utiltime.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "84964d9b65c8b7d3fc25387c8807eb14a3908661",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 198,
        "deletions": 428,
        "changes": 626,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "b19c3ff4f7b34893c8abd429e747c9e4d00282d1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 14,
        "deletions": 69,
        "changes": 83,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "46d7c9b3295026331a2c595ea3994a8bbf41706b",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "460aecf243fa25fa7e3f6f6b7d191d6286ff4b2c",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 22,
        "deletions": 23,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "80786233f5acddbf74ef22ef9449384fb94d765e",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 1,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "f1d31ea0af9648299d657cc3898511cf794dc8ae",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "cb4719ae90c01710f27ee77488680a365d081b84",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "25f6bdd9d939a2a0d4673aa867ca9514a579700d",
        "filename": "src/wallet/db.cpp",
        "status": "modified",
        "additions": 276,
        "deletions": 63,
        "changes": 339,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "3c6870d169d6d3016e3083344053094b840e900c",
        "filename": "src/wallet/db.h",
        "status": "modified",
        "additions": 87,
        "deletions": 32,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/db.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "c10a9eccd93a2c93015ee907507311652eab7f28",
        "filename": "src/wallet/feebumper.cpp",
        "status": "added",
        "additions": 296,
        "deletions": 0,
        "changes": 296,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "f40d05da28eeb9adfc4e99024f6d0b1f5376f18c",
        "filename": "src/wallet/feebumper.h",
        "status": "added",
        "additions": 59,
        "deletions": 0,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/feebumper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/feebumper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "99c9010f35908daadc07ee4818c788ae3ee08a82",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 229,
        "deletions": 143,
        "changes": 372,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "ae4f4f37cbc58deca47e06fc7a39b0f42d3f461e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 568,
        "deletions": 636,
        "changes": 1204,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "bd5dad18ca59802fab9a6dc3a847a2c9a0382a0d",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "1989bf8d9b96e85e17d3d3759f4da0ab6556f0b0",
        "filename": "src/wallet/test/wallet_test_fixture.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/test/wallet_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/test/wallet_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_test_fixture.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "9f6c5e4c9cddfb591c77ae9de8649dc913068e39",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 252,
        "deletions": 47,
        "changes": 299,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "8aae4829a854bbdafd4067743b915f6c619e622d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 767,
        "deletions": 601,
        "changes": 1368,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "3e2b54f5ab2d00803812f5b7298c37db47418148",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 194,
        "deletions": 57,
        "changes": 251,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "342c797dd3ad118f34980da7c5afb2d483d1b9b8",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 152,
        "deletions": 208,
        "changes": 360,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "cd9fe279c537ec0037156915f3b41706b9174d7a",
        "filename": "src/wallet/walletdb.h",
        "status": "modified",
        "additions": 60,
        "deletions": 10,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/walletdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/wallet/walletdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "c06389805680314a4c076a0e0ea7e68de3163ef0",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 7,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "eec6f7bc64500454ef3612e405f1c06990b6874a",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "700c39f66ea822f60070e3109243ff9fb13860f8",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "4dd512638d973393292e2448cbe097e9dfb875b4",
        "filename": "test/README.md",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "cb41d94423e46d410462a6d1edb686a7e62a8e97",
        "filename": "test/functional/.gitignore",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/.gitignore?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/.gitignore"
      },
      {
        "sha": "e6c4849702c7fe14796d54f1ea53ab8ce9c51ebe",
        "filename": "test/functional/README.md",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/README.md?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/README.md"
      },
      {
        "sha": "974875764168726e56aed0e239007ecd00e6926c",
        "filename": "test/functional/abandonconflict.py",
        "status": "renamed",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/abandonconflict.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/abandonconflict.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/abandonconflict.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/abandonconflict.py"
      },
      {
        "sha": "8e301c4379222d9133df072c857d17b00650c90c",
        "filename": "test/functional/assumevalid.py",
        "status": "renamed",
        "additions": 63,
        "deletions": 52,
        "changes": 115,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/assumevalid.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/assumevalid.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/assumevalid.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/assumevalid.py"
      },
      {
        "sha": "bb83042f35002ea1167caaad11e60a2abe385aa9",
        "filename": "test/functional/bip65-cltv-p2p.py",
        "status": "renamed",
        "additions": 14,
        "deletions": 19,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip65-cltv-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip65-cltv-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip65-cltv-p2p.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bip65-cltv-p2p.py"
      },
      {
        "sha": "ddf932c74606b4cb1c1f2942d1b41863cd416b58",
        "filename": "test/functional/bip65-cltv.py",
        "status": "renamed",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip65-cltv.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip65-cltv.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip65-cltv.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bip65-cltv.py"
      },
      {
        "sha": "5a322e8c0e43d387cc2f062620846ae8f10c6680",
        "filename": "test/functional/bip68-112-113-p2p.py",
        "status": "renamed",
        "additions": 12,
        "deletions": 18,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip68-112-113-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip68-112-113-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip68-112-113-p2p.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bip68-112-113-p2p.py"
      },
      {
        "sha": "db66b7719cf862fb3294c731a56538bbbf068ba8",
        "filename": "test/functional/bip68-sequence.py",
        "status": "renamed",
        "additions": 33,
        "deletions": 68,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip68-sequence.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip68-sequence.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip68-sequence.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bip68-sequence.py"
      },
      {
        "sha": "fff47fcca99835877b7c3ed87f250ecc75a631c2",
        "filename": "test/functional/bip9-softforks.py",
        "status": "renamed",
        "additions": 69,
        "deletions": 35,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip9-softforks.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bip9-softforks.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bip9-softforks.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bip9-softforks.py"
      },
      {
        "sha": "31c7ebba90c820b6dd910c9bac9b1a986774d40a",
        "filename": "test/functional/bipdersig-p2p.py",
        "status": "renamed",
        "additions": 15,
        "deletions": 22,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bipdersig-p2p.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bipdersig-p2p.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bipdersig-p2p.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bipdersig-p2p.py"
      },
      {
        "sha": "41f88fb664b2318f447be09c4063a7e694f8c6a5",
        "filename": "test/functional/bipdersig.py",
        "status": "renamed",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bipdersig.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bipdersig.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bipdersig.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bipdersig.py"
      },
      {
        "sha": "8596f1edafe769b8dcc089a7272a4252b9921f2d",
        "filename": "test/functional/blockchain.py",
        "status": "renamed",
        "additions": 28,
        "deletions": 23,
        "changes": 51,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/blockchain.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/blockchain.py"
      },
      {
        "sha": "54fd7740c1f442baf8ec959562778b8592cfd38b",
        "filename": "test/functional/bumpfee.py",
        "status": "renamed",
        "additions": 57,
        "deletions": 80,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bumpfee.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/bumpfee.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/bumpfee.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2",
        "previous_filename": "qa/rpc-tests/bumpfee.py"
      },
      {
        "sha": "3ca74ea35eaccb4f7feafc39f475e6541cd6a9e5",
        "filename": "test/functional/combine_logs.py",
        "status": "added",
        "additions": 114,
        "deletions": 0,
        "changes": 114,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/combine_logs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/combine_logs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/combine_logs.py?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      },
      {
        "sha": "c0b854b0805603e4c7dbd51c77195f953d99e8e7",
        "filename": "test/functional/combined_log_template.html",
        "status": "added",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/combined_log_template.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef16e3e73d76e9217118b7168f6831de615e86b2/test/functional/combined_log_template.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/combined_log_template.html?ref=ef16e3e73d76e9217118b7168f6831de615e86b2"
      }
    ]
  },
  {
    "sha": "ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYTQ4NjdhNGY3Yjk2YTA5ZjQxZDE1MjlkNWRlNWIxZWRmM2YzYTRl",
    "commit": {
      "author": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T11:40:06Z"
      },
      "committer": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T11:40:06Z"
      },
      "message": "Merge branch '0.14'",
      "tree": {
        "sha": "4010af91de774e0c682e67601c35bdb54ce8a9b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4010af91de774e0c682e67601c35bdb54ce8a9b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "4314544d46e8e46c3c9da60f1d18297f52f58418",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4314544d46e8e46c3c9da60f1d18297f52f58418",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4314544d46e8e46c3c9da60f1d18297f52f58418"
      },
      {
        "sha": "ef16e3e73d76e9217118b7168f6831de615e86b2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef16e3e73d76e9217118b7168f6831de615e86b2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef16e3e73d76e9217118b7168f6831de615e86b2"
      }
    ],
    "stats": {
      "total": 4183,
      "additions": 3919,
      "deletions": 264
    },
    "files": [
      {
        "sha": "5367386ff66cea9e926619ce2c11eb42436c2a60",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -4,7 +4,7 @@ define(_CLIENT_VERSION_MAJOR, 0)\n define(_CLIENT_VERSION_MINOR, 14)\n define(_CLIENT_VERSION_REVISION, 99)\n define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n@@ -559,6 +559,8 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+<<<<<<< HEAD\n+=======\n dnl Check for MSG_DONTWAIT\n AC_MSG_CHECKING(for MSG_DONTWAIT)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n@@ -575,6 +577,7 @@ AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],\n  [ AC_MSG_RESULT(no)]\n )\n \n+>>>>>>> master\n dnl Check for mallopt(M_ARENA_MAX) (to set glibc arenas)\n AC_MSG_CHECKING(for mallopt M_ARENA_MAX)\n AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <malloc.h>]],"
      },
      {
        "sha": "f9ce2dfc50344cdaa84aef8cf135da88e361279e",
        "filename": "doc/man/bitcoin-qt.1",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/man/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/man/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoin-qt.1?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -72,7 +72,11 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n+<<<<<<< HEAD\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+=======\n Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+>>>>>>> master\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>"
      },
      {
        "sha": "852da878ccc59b26b466b5d35570f95da5cb6bb2",
        "filename": "doc/man/bitcoind.1",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/man/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/man/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/bitcoind.1?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -77,7 +77,11 @@ Extra transactions to keep in memory for compact block reconstructions\n .HP\n \\fB\\-par=\\fR<n>\n .IP\n+<<<<<<< HEAD\n+Set the number of script verification threads (\\fB\\-6\\fR to 16, 0 = auto, <0 =\n+=======\n Set the number of script verification threads (\\fB\\-2\\fR to 16, 0 = auto, <0 =\n+>>>>>>> master\n leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>"
      },
      {
        "sha": "264e8e641c7748e87a0e07b6302f407ed6e42b64",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 18,
        "deletions": 57,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,12 +1,9 @@\n-(note: this is a temporary file, to be added-to by anybody, and moved to\n-release-notes at release time)\n+Bitcoin Core version 0.14.x is now available from:\n \n-Bitcoin Core version *version* is now available from:\n+  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n \n-  <https://bitcoin.org/bin/bitcoin-core-*version*/>\n-\n-This is a new major version release, including new features, various bugfixes\n-and performance improvements, as well as updated translations.\n+This is a new minor version release, including various bugfixes and\n+performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n@@ -22,9 +19,9 @@ Compatibility\n Bitcoin Core is extensively tested on multiple operating systems using\n the Linux kernel, macOS 10.8+, and Windows Vista and later.\n \n-Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support).\n+Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n No attempt is made to prevent installing or running the software on Windows XP, you\n-can still do so at your own risk but be aware that there are known instabilities.\n+can still do so at your own risk but be aware that there are known instabilities and issues.\n Please do not report issues about Windows XP to the issue tracker.\n \n Bitcoin Core should also work on most other Unix-like systems but is not\n@@ -33,54 +30,18 @@ frequently tested on them.\n Notable changes\n ===============\n \n-Low-level RPC changes\n----------------------\n-\n-- Error codes have been updated to be more accurate for the following error cases:\n-  - `getblock` now returns RPC_MISC_ERROR if the block can't be found on disk (for\n-  example if the block has been pruned). Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the node is not in pruned mode. Previously returned RPC_METHOD_NOT_FOUND.\n-  - `pruneblockchain` now returns RPC_INVALID_PARAMETER if the blocks cannot be pruned\n-  because the supplied timestamp is too late. Previously returned RPC_INTERNAL_ERROR.\n-  - `pruneblockchain` now returns RPC_MISC_ERROR if the blocks cannot be pruned\n-  because the blockchain is too short. Previously returned RPC_INTERNAL_ERROR.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the supplied IP address\n-  or subnet is invalid. Previously returned RPC_CLIENT_NODE_ALREADY_ADDED.\n-  - `setban` now returns RPC_CLIENT_INVALID_IP_OR_SUBNET if the user tries to unban\n-  a node that has not previously been banned. Previously returned RPC_MISC_ERROR.\n-  - `removeprunedfunds` now returns RPC_WALLET_ERROR if bitcoind is unable to remove\n-  the transaction. Previously returned RPC_INTERNAL_ERROR.\n-  - `removeprunedfunds` now returns RPC_INVALID_PARAMETER if the transaction does not\n-  exist in the wallet. Previously returned RPC_INTERNAL_ERROR.\n-  - `fundrawtransaction` now returns RPC_INVALID_ADDRESS_OR_KEY if an invalid change\n-  address is provided. Previously returned RPC_INVALID_PARAMETER.\n-  - `fundrawtransaction` now returns RPC_WALLET_ERROR if bitcoind is unable to create\n-  the transaction. The error message provides further details. Previously returned\n-  RPC_INTERNAL_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the wallet. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_INVALID_PARAMETER if the provided transaction has\n-  descendants in the mempool. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has\n-  has been mined or conflicts with a mined transaction. Previously returned\n-  RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction is not\n-  BIP 125 replaceable. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has already\n-  been bumped by a different transaction. Previously returned RPC_INVALID_REQUEST.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction contains\n-  inputs which don't belong to this wallet. Previously returned RPC_INVALID_ADDRESS_OR_KEY.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has multiple change\n-  outputs. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the provided transaction has no change\n-  output. Previously returned RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too high. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the fee is too low. Previously returned\n-  RPC_MISC_ERROR.\n-  - `bumpfee` now returns RPC_WALLET_ERROR if the change output is too small to bump the\n-  fee. Previously returned RPC_MISC_ERROR.\n+Example item\n+------------\n+\n+\n+0.14.x Change log\n+=================\n+\n+Detailed release notes follow. This overview includes changes that affect\n+behavior, not code moves, refactors and string updates. For convenience in locating\n+the code changes and accompanying discussion, both the pull request and\n+git merge commit are mentioned.\n+\n \n Credits\n ======="
      },
      {
        "sha": "aa46955daee6130497ecf58f454490b09856a23d",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 21,
        "deletions": 5,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -7,12 +7,28 @@\n \n #if defined(HAVE_CONFIG_H)\n #include \"config/bitcoin-config.h\"\n-#endif //HAVE_CONFIG_H\n+#else\n+\n+/**\n+ * client versioning and copyright year\n+ */\n+\n+//! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n+#define CLIENT_VERSION_MAJOR 0\n+#define CLIENT_VERSION_MINOR 14\n+#define CLIENT_VERSION_REVISION 1\n+#define CLIENT_VERSION_BUILD 0\n \n-// Check that required client information is defined\n-#if !defined(CLIENT_VERSION_MAJOR) || !defined(CLIENT_VERSION_MINOR) || !defined(CLIENT_VERSION_REVISION) || !defined(CLIENT_VERSION_BUILD) || !defined(CLIENT_VERSION_IS_RELEASE) || !defined(COPYRIGHT_YEAR)\n-#error Client version information missing: version is not defined by bitcoin-config.h or in any other way\n-#endif\n+//! Set to true for release, false for prerelease or test build\n+#define CLIENT_VERSION_IS_RELEASE true\n+\n+/**\n+ * Copyright year (2009-this)\n+ * Todo: update this when changing our copyright comments in the source\n+ */\n+#define COPYRIGHT_YEAR 2017\n+\n+#endif //HAVE_CONFIG_H\n \n /**\n  * Converts the parameter X to a string after macro replacement on X has been performed."
      },
      {
        "sha": "8be5a0e878aeffc996a0815ee0284e487f2f45aa",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 191,
        "deletions": 38,
        "changes": 229,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -10,13 +10,11 @@\n #include \"chainparams.h\"\n #include \"coins.h\"\n #include \"consensus/consensus.h\"\n-#include \"consensus/tx_verify.h\"\n #include \"consensus/merkle.h\"\n #include \"consensus/validation.h\"\n #include \"hash.h\"\n #include \"validation.h\"\n #include \"net.h\"\n-#include \"policy/feerate.h\"\n #include \"policy/policy.h\"\n #include \"pow.h\"\n #include \"primitives/transaction.h\"\n@@ -28,6 +26,8 @@\n #include \"validationinterface.h\"\n \n #include <algorithm>\n+#include <boost/thread.hpp>\n+#include <boost/tuple/tuple.hpp>\n #include <queue>\n #include <utility>\n \n@@ -39,13 +39,24 @@\n //\n // Unconfirmed transactions in the memory pool often depend on other\n // transactions in the memory pool. When we select transactions from the\n-// pool, we select by highest fee rate of a transaction combined with all\n-// its ancestors.\n+// pool, we select by highest priority or fee rate, so we might consider\n+// transactions that depend on transactions that aren't yet in the block.\n \n uint64_t nLastBlockTx = 0;\n uint64_t nLastBlockSize = 0;\n uint64_t nLastBlockWeight = 0;\n \n+class ScoreCompare\n+{\n+public:\n+    ScoreCompare() {}\n+\n+    bool operator()(const CTxMemPool::txiter a, const CTxMemPool::txiter b)\n+    {\n+        return CompareTxMemPoolEntryByScore()(*b,*a); // Convert to less than\n+    }\n+};\n+\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev)\n {\n     int64_t nOldTime = pblock->nTime;\n@@ -61,55 +72,42 @@ int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParam\n     return nNewTime - nOldTime;\n }\n \n-BlockAssembler::Options::Options() {\n-    blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n-    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n-}\n-\n-BlockAssembler::BlockAssembler(const CChainParams& params, const Options& options) : chainparams(params)\n-{\n-    blockMinFeeRate = options.blockMinFeeRate;\n-    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n-    nBlockMaxWeight = std::max<size_t>(4000, std::min<size_t>(MAX_BLOCK_WEIGHT - 4000, options.nBlockMaxWeight));\n-    // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n-    nBlockMaxSize = std::max<size_t>(1000, std::min<size_t>(MAX_BLOCK_SERIALIZED_SIZE - 1000, options.nBlockMaxSize));\n-    // Whether we need to account for byte usage (in addition to weight usage)\n-    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE - 1000);\n-}\n-\n-static BlockAssembler::Options DefaultOptions(const CChainParams& params)\n+BlockAssembler::BlockAssembler(const CChainParams& _chainparams)\n+    : chainparams(_chainparams)\n {\n     // Block resource limits\n     // If neither -blockmaxsize or -blockmaxweight is given, limit to DEFAULT_BLOCK_MAX_*\n     // If only one is given, only restrict the specified resource.\n     // If both are given, restrict both.\n-    BlockAssembler::Options options;\n-    options.nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n-    options.nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n+    nBlockMaxWeight = DEFAULT_BLOCK_MAX_WEIGHT;\n+    nBlockMaxSize = DEFAULT_BLOCK_MAX_SIZE;\n     bool fWeightSet = false;\n     if (IsArgSet(\"-blockmaxweight\")) {\n-        options.nBlockMaxWeight = GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n-        options.nBlockMaxSize = MAX_BLOCK_SERIALIZED_SIZE;\n+        nBlockMaxWeight = GetArg(\"-blockmaxweight\", DEFAULT_BLOCK_MAX_WEIGHT);\n+        nBlockMaxSize = MAX_BLOCK_SERIALIZED_SIZE;\n         fWeightSet = true;\n     }\n     if (IsArgSet(\"-blockmaxsize\")) {\n-        options.nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+        nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n         if (!fWeightSet) {\n-            options.nBlockMaxWeight = options.nBlockMaxSize * WITNESS_SCALE_FACTOR;\n+            nBlockMaxWeight = nBlockMaxSize * WITNESS_SCALE_FACTOR;\n         }\n     }\n     if (IsArgSet(\"-blockmintxfee\")) {\n         CAmount n = 0;\n         ParseMoney(GetArg(\"-blockmintxfee\", \"\"), n);\n-        options.blockMinFeeRate = CFeeRate(n);\n+        blockMinFeeRate = CFeeRate(n);\n     } else {\n-        options.blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n+        blockMinFeeRate = CFeeRate(DEFAULT_BLOCK_MIN_TX_FEE);\n     }\n-    return options;\n-}\n \n-BlockAssembler::BlockAssembler(const CChainParams& params) : BlockAssembler(params, DefaultOptions(params)) {}\n+    // Limit weight to between 4K and MAX_BLOCK_WEIGHT-4K for sanity:\n+    nBlockMaxWeight = std::max((unsigned int)4000, std::min((unsigned int)(MAX_BLOCK_WEIGHT-4000), nBlockMaxWeight));\n+    // Limit size to between 1K and MAX_BLOCK_SERIALIZED_SIZE-1K for sanity:\n+    nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SERIALIZED_SIZE-1000), nBlockMaxSize));\n+    // Whether we need to account for byte usage (in addition to weight usage)\n+    fNeedSizeAccounting = (nBlockMaxSize < MAX_BLOCK_SERIALIZED_SIZE-1000);\n+}\n \n void BlockAssembler::resetBlock()\n {\n@@ -124,6 +122,9 @@ void BlockAssembler::resetBlock()\n     // These counters do not include coinbase tx\n     nBlockTx = 0;\n     nFees = 0;\n+\n+    lastFewTxs = 0;\n+    blockFinished = false;\n }\n \n std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx)\n@@ -168,6 +169,7 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     // transaction (which in most cases can be a no-op).\n     fIncludeWitness = IsWitnessEnabled(pindexPrev, chainparams.GetConsensus()) && fMineWitnessTx;\n \n+    addPriorityTxs();\n     int nPackagesSelected = 0;\n     int nDescendantsUpdated = 0;\n     addPackageTxs(nPackagesSelected, nDescendantsUpdated);\n@@ -206,11 +208,22 @@ std::unique_ptr<CBlockTemplate> BlockAssembler::CreateNewBlock(const CScript& sc\n     }\n     int64_t nTime2 = GetTimeMicros();\n \n-    LogPrint(BCLog::BENCH, \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n+    LogPrint(\"bench\", \"CreateNewBlock() packages: %.2fms (%d packages, %d updated descendants), validity: %.2fms (total %.2fms)\\n\", 0.001 * (nTime1 - nTimeStart), nPackagesSelected, nDescendantsUpdated, 0.001 * (nTime2 - nTime1), 0.001 * (nTime2 - nTimeStart));\n \n     return std::move(pblocktemplate);\n }\n \n+bool BlockAssembler::isStillDependent(CTxMemPool::txiter iter)\n+{\n+    BOOST_FOREACH(CTxMemPool::txiter parent, mempool.GetMemPoolParents(iter))\n+    {\n+        if (!inBlock.count(parent)) {\n+            return true;\n+        }\n+    }\n+    return false;\n+}\n+\n void BlockAssembler::onlyUnconfirmed(CTxMemPool::setEntries& testSet)\n {\n     for (CTxMemPool::setEntries::iterator iit = testSet.begin(); iit != testSet.end(); ) {\n@@ -258,6 +271,58 @@ bool BlockAssembler::TestPackageTransactions(const CTxMemPool::setEntries& packa\n     return true;\n }\n \n+bool BlockAssembler::TestForBlock(CTxMemPool::txiter iter)\n+{\n+    if (nBlockWeight + iter->GetTxWeight() >= nBlockMaxWeight) {\n+        // If the block is so close to full that no more txs will fit\n+        // or if we've tried more than 50 times to fill remaining space\n+        // then flag that the block is finished\n+        if (nBlockWeight >  nBlockMaxWeight - 400 || lastFewTxs > 50) {\n+             blockFinished = true;\n+             return false;\n+        }\n+        // Once we're within 4000 weight of a full block, only look at 50 more txs\n+        // to try to fill the remaining space.\n+        if (nBlockWeight > nBlockMaxWeight - 4000) {\n+            lastFewTxs++;\n+        }\n+        return false;\n+    }\n+\n+    if (fNeedSizeAccounting) {\n+        if (nBlockSize + ::GetSerializeSize(iter->GetTx(), SER_NETWORK, PROTOCOL_VERSION) >= nBlockMaxSize) {\n+            if (nBlockSize >  nBlockMaxSize - 100 || lastFewTxs > 50) {\n+                 blockFinished = true;\n+                 return false;\n+            }\n+            if (nBlockSize > nBlockMaxSize - 1000) {\n+                lastFewTxs++;\n+            }\n+            return false;\n+        }\n+    }\n+\n+    if (nBlockSigOpsCost + iter->GetSigOpCost() >= MAX_BLOCK_SIGOPS_COST) {\n+        // If the block has room for no more sig ops then\n+        // flag that the block is finished\n+        if (nBlockSigOpsCost > MAX_BLOCK_SIGOPS_COST - 8) {\n+            blockFinished = true;\n+            return false;\n+        }\n+        // Otherwise attempt to find another tx with fewer sigops\n+        // to put in the block.\n+        return false;\n+    }\n+\n+    // Must check that lock times are still valid\n+    // This can be removed once MTP is always enforced\n+    // as long as reorgs keep the mempool consistent.\n+    if (!IsFinalTx(iter->GetTx(), nHeight, nLockTimeCutoff))\n+        return false;\n+\n+    return true;\n+}\n+\n void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n {\n     pblock->vtx.emplace_back(iter->GetSharedTx());\n@@ -274,7 +339,11 @@ void BlockAssembler::AddToBlock(CTxMemPool::txiter iter)\n \n     bool fPrintPriority = GetBoolArg(\"-printpriority\", DEFAULT_PRINTPRIORITY);\n     if (fPrintPriority) {\n-        LogPrintf(\"fee %s txid %s\\n\",\n+        double dPriority = iter->GetPriority(nHeight);\n+        CAmount dummy;\n+        mempool.ApplyDeltas(iter->GetTx().GetHash(), dPriority, dummy);\n+        LogPrintf(\"priority %.1f fee %s txid %s\\n\",\n+                  dPriority,\n                   CFeeRate(iter->GetModifiedFee(), iter->GetTxSize()).ToString(),\n                   iter->GetTx().GetHash().ToString());\n     }\n@@ -319,7 +388,9 @@ int BlockAssembler::UpdatePackagesForAdded(const CTxMemPool::setEntries& already\n bool BlockAssembler::SkipMapTxEntry(CTxMemPool::txiter it, indexed_modified_transaction_set &mapModifiedTx, CTxMemPool::setEntries &failedTx)\n {\n     assert (it != mempool.mapTx.end());\n-    return mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it);\n+    if (mapModifiedTx.count(it) || inBlock.count(it) || failedTx.count(it))\n+        return true;\n+    return false;\n }\n \n void BlockAssembler::SortForBlock(const CTxMemPool::setEntries& package, CTxMemPool::txiter entry, std::vector<CTxMemPool::txiter>& sortedEntries)\n@@ -473,6 +544,88 @@ void BlockAssembler::addPackageTxs(int &nPackagesSelected, int &nDescendantsUpda\n     }\n }\n \n+void BlockAssembler::addPriorityTxs()\n+{\n+    // How much of the block should be dedicated to high-priority transactions,\n+    // included regardless of the fees they pay\n+    unsigned int nBlockPrioritySize = GetArg(\"-blockprioritysize\", DEFAULT_BLOCK_PRIORITY_SIZE);\n+    nBlockPrioritySize = std::min(nBlockMaxSize, nBlockPrioritySize);\n+\n+    if (nBlockPrioritySize == 0) {\n+        return;\n+    }\n+\n+    bool fSizeAccounting = fNeedSizeAccounting;\n+    fNeedSizeAccounting = true;\n+\n+    // This vector will be sorted into a priority queue:\n+    std::vector<TxCoinAgePriority> vecPriority;\n+    TxCoinAgePriorityCompare pricomparer;\n+    std::map<CTxMemPool::txiter, double, CTxMemPool::CompareIteratorByHash> waitPriMap;\n+    typedef std::map<CTxMemPool::txiter, double, CTxMemPool::CompareIteratorByHash>::iterator waitPriIter;\n+    double actualPriority = -1;\n+\n+    vecPriority.reserve(mempool.mapTx.size());\n+    for (CTxMemPool::indexed_transaction_set::iterator mi = mempool.mapTx.begin();\n+         mi != mempool.mapTx.end(); ++mi)\n+    {\n+        double dPriority = mi->GetPriority(nHeight);\n+        CAmount dummy;\n+        mempool.ApplyDeltas(mi->GetTx().GetHash(), dPriority, dummy);\n+        vecPriority.push_back(TxCoinAgePriority(dPriority, mi));\n+    }\n+    std::make_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n+\n+    CTxMemPool::txiter iter;\n+    while (!vecPriority.empty() && !blockFinished) { // add a tx from priority queue to fill the blockprioritysize\n+        iter = vecPriority.front().second;\n+        actualPriority = vecPriority.front().first;\n+        std::pop_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n+        vecPriority.pop_back();\n+\n+        // If tx already in block, skip\n+        if (inBlock.count(iter)) {\n+            assert(false); // shouldn't happen for priority txs\n+            continue;\n+        }\n+\n+        // cannot accept witness transactions into a non-witness block\n+        if (!fIncludeWitness && iter->GetTx().HasWitness())\n+            continue;\n+\n+        // If tx is dependent on other mempool txs which haven't yet been included\n+        // then put it in the waitSet\n+        if (isStillDependent(iter)) {\n+            waitPriMap.insert(std::make_pair(iter, actualPriority));\n+            continue;\n+        }\n+\n+        // If this tx fits in the block add it, otherwise keep looping\n+        if (TestForBlock(iter)) {\n+            AddToBlock(iter);\n+\n+            // If now that this txs is added we've surpassed our desired priority size\n+            // or have dropped below the AllowFreeThreshold, then we're done adding priority txs\n+            if (nBlockSize >= nBlockPrioritySize || !AllowFree(actualPriority)) {\n+                break;\n+            }\n+\n+            // This tx was successfully added, so\n+            // add transactions that depend on this one to the priority queue to try again\n+            BOOST_FOREACH(CTxMemPool::txiter child, mempool.GetMemPoolChildren(iter))\n+            {\n+                waitPriIter wpiter = waitPriMap.find(child);\n+                if (wpiter != waitPriMap.end()) {\n+                    vecPriority.push_back(TxCoinAgePriority(wpiter->second,child));\n+                    std::push_heap(vecPriority.begin(), vecPriority.end(), pricomparer);\n+                    waitPriMap.erase(wpiter);\n+                }\n+            }\n+        }\n+    }\n+    fNeedSizeAccounting = fSizeAccounting;\n+}\n+\n void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned int& nExtraNonce)\n {\n     // Update nExtraNonce\n@@ -490,4 +643,4 @@ void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned\n \n     pblock->vtx[0] = MakeTransactionRef(std::move(txCoinbase));\n     pblock->hashMerkleRoot = BlockMerkleRoot(*pblock);\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "5428d6bb9aa71129ff8de622b12765f4fa1d3e16",
        "filename": "src/miner.h",
        "status": "modified",
        "additions": 14,
        "deletions": 11,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/miner.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/miner.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.h?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -158,17 +158,12 @@ class BlockAssembler\n     int64_t nLockTimeCutoff;\n     const CChainParams& chainparams;\n \n-public:\n-    struct Options {\n-        Options();\n-        size_t nBlockMaxWeight;\n-        size_t nBlockMaxSize;\n-        CFeeRate blockMinFeeRate;\n-    };\n-\n-    BlockAssembler(const CChainParams& params);\n-    BlockAssembler(const CChainParams& params, const Options& options);\n+    // Variables used for addPriorityTxs\n+    int lastFewTxs;\n+    bool blockFinished;\n \n+public:\n+    BlockAssembler(const CChainParams& chainparams);\n     /** Construct a new block template with coinbase to scriptPubKeyIn */\n     std::unique_ptr<CBlockTemplate> CreateNewBlock(const CScript& scriptPubKeyIn, bool fMineWitnessTx=true);\n \n@@ -180,11 +175,19 @@ class BlockAssembler\n     void AddToBlock(CTxMemPool::txiter iter);\n \n     // Methods for how to add transactions to a block.\n+    /** Add transactions based on tx \"priority\" */\n+    void addPriorityTxs();\n     /** Add transactions based on feerate including unconfirmed ancestors\n       * Increments nPackagesSelected / nDescendantsUpdated with corresponding\n       * statistics from the package selection (for logging statistics). */\n     void addPackageTxs(int &nPackagesSelected, int &nDescendantsUpdated);\n \n+    // helper function for addPriorityTxs\n+    /** Test if tx will still \"fit\" in the block */\n+    bool TestForBlock(CTxMemPool::txiter iter);\n+    /** Test if tx still has unconfirmed parents not yet in block */\n+    bool isStillDependent(CTxMemPool::txiter iter);\n+\n     // helper functions for addPackageTxs()\n     /** Remove confirmed (inBlock) entries from given set */\n     void onlyUnconfirmed(CTxMemPool::setEntries& testSet);\n@@ -210,4 +213,4 @@ class BlockAssembler\n void IncrementExtraNonce(CBlock* pblock, const CBlockIndex* pindexPrev, unsigned int& nExtraNonce);\n int64_t UpdateTime(CBlockHeader* pblock, const Consensus::Params& consensusParams, const CBlockIndex* pindexPrev);\n \n-#endif // BITCOIN_MINER_H\n+#endif // BITCOIN_MINER_H\n\\ No newline at end of file"
      },
      {
        "sha": "432e8c3faf8cd33ec9a8c76636b5c77d1c10b958",
        "filename": "src/qt/locale/bitcoin_af_ZA.ts",
        "status": "modified",
        "additions": 64,
        "deletions": 0,
        "changes": 64,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_af_ZA.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_af_ZA.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_af_ZA.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -5,6 +5,10 @@\n         <source>Create a new address</source>\n         <translation>Skep 'n nuwe adres</translation>\n     </message>\n+    <message>\n+        <source>&amp;New</source>\n+        <translation>&amp;Nuwe</translation>\n+    </message>\n     <message>\n         <source>Copy the currently selected address to the system clipboard</source>\n         <translation>Maak 'n kopie van die huidige adres na die stelsel klipbord</translation>\n@@ -17,6 +21,14 @@\n         <source>Delete the currently selected address from the list</source>\n         <translation>Verwyder die huidiglik gekieste address van die lys</translation>\n     </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n     <message>\n         <source>&amp;Delete</source>\n         <translation>&amp;Verwyder</translation>\n@@ -25,6 +37,42 @@\n         <source>Choose the address to send coins to</source>\n         <translation>Kies die address na wie die muntstukke gestuur moet word</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>K&amp;ies</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Stuur adresse</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ontvang adresse</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopie adres</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopie &amp;Etiket</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Wysig</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Voer adres lys uit</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -660,6 +708,10 @@\n         <source>Copy amount</source>\n         <translation>Kopieer bedrag</translation>\n     </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Koma geskeide l\u00eaers (*.csv)</translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Datum</translation>\n@@ -680,6 +732,10 @@\n         <source>ID</source>\n         <translation>ID</translation>\n     </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Uitvoering Misluk</translation>\n+    </message>\n     <message>\n         <source>Range:</source>\n         <translation>Reeks:</translation>\n@@ -704,6 +760,14 @@\n </context>\n <context>\n     <name>WalletView</name>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Uitvoer</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Voer inligting uit van die huidige blad na n l\u00eaer</translation>\n+    </message>\n     </context>\n <context>\n     <name>bitcoin-core</name>"
      },
      {
        "sha": "235b48f853d5536dacbad03547234a1d4b1ee8c7",
        "filename": "src/qt/locale/bitcoin_da.ts",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_da.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_da.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_da.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -3,7 +3,7 @@\n     <name>AddressBookPage</name>\n     <message>\n         <source>Right-click to edit address or label</source>\n-        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rke</translation>\n+        <translation>H\u00f8jreklik for at redigere adresse eller m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Create a new address</source>\n@@ -604,7 +604,7 @@\n     </message>\n     <message>\n         <source>Received with label</source>\n-        <translation>Modtaget med m\u00e6rke</translation>\n+        <translation>Modtaget med m\u00e6rkat</translation>\n     </message>\n     <message>\n         <source>Received with address</source>"
      },
      {
        "sha": "9bc94cc8ded33dfd60f9ada9d32f4e0bd3ee3f41",
        "filename": "src/qt/locale/bitcoin_de.ts",
        "status": "modified",
        "additions": 65,
        "deletions": 1,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_de.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_de.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_de.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -43,7 +43,7 @@\n     </message>\n     <message>\n         <source>Choose the address to send coins to</source>\n-        <translation>W\u00e4hlen Sie die Adresse aus, an die Sie Bitcoins \u00fcberweisen m\u00f6chten</translation>\n+        <translation>W\u00e4hlen Sie die Adresse aus, an die Sie Bitcoins senden m\u00f6chten</translation>\n     </message>\n     <message>\n         <source>Choose the address to receive coins with</source>\n@@ -885,6 +885,14 @@\n         <source>Form</source>\n         <translation>Formular</translation>\n     </message>\n+    <message>\n+        <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n+        <translation>Neueste Transaktionen werden eventuell noch nicht angezeigt, daher k\u00f6nnte Ihr Kontostand veraltet sein. Er wird korrigiert, sobald Ihr Wallet die Synchronisation mit dem Bitcoin-Netzwerk erfolgreich abgeschlossen. Details dazu finden sich weiter unten.</translation>\n+    </message>\n+    <message>\n+        <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>\n+        <translation>Versuche, Bitcoins aus noch nicht angezeigten Transaktionen auszugeben, werden vom Netzwerk nicht akzeptiert.</translation>\n+    </message>\n     <message>\n         <source>Number of blocks left</source>\n         <translation>Anzahl verbleibender Bl\u00f6cke</translation>\n@@ -2200,6 +2208,10 @@\n         <source>Confirm custom change address</source>\n         <translation>Best\u00e4tige benutzerdefinierte Wechselgeld-Adresse</translation>\n     </message>\n+    <message>\n+        <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n+        <translation>Die ausgew\u00e4hlte Wechselgeld-Adresse ist nicht Bestandteil dieses Wallets. Einige oder alle Mittel aus Ihrem Wallet k\u00f6nnten an diese Adresse gesendet werden. Wollen Sie das wirklich?</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(keine Bezeichnung)</translation>\n@@ -2997,6 +3009,10 @@\n         <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n         <translation>Eingehende Verbindungen annehmen (Standard: 1, wenn nicht -proxy oder -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Verbindungen nur zu spezifizierten Node(s); verwenden Sie -noconnect oder -connect=0 alleine um automatische Verbindungen zu deaktivieren</translation>\n+    </message>\n     <message>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation>Ver\u00f6ffentlicht unter der MIT-Softwarelizenz, siehe beiligende Datei %s oder %s.</translation>\n@@ -3073,6 +3089,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Befehl ausf\u00fchren wenn sich eine Wallet-Transaktion ver\u00e4ndert (%s im Befehl wird durch die Transaktions-ID ersetzt)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Zus\u00e4tzliche Transaktionen f\u00fcr kompakten Block-Nachbau im Speicher vorhalten (default: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Sofern dieser Block Bestandteil der Blockchain ist, nehme an das er und seine Vorg\u00e4nger g\u00fcltig sind und \u00fcberspringe ggf. dessen Skriptverifikation (0 um alle zu verifizieren, default: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</translation>\n@@ -3089,6 +3113,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Wenn sie %s n\u00fctzlich finden, sind Helfer sehr gern gesehen. Besuchen Sie %s um mehr \u00fcber das Softwareprojekt zu erfahren.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Speicherplatzanforderung durch K\u00fcrzen (Pruning) alter Bl\u00f6cke reduzieren. Dies erlaubt das Aufrufen des sogenannten Pruneblockchain RPC zum L\u00f6schen spezifischer Bl\u00f6cke und und aktiviert das automatische Pruning alter Bl\u00f6cke, sofern eine Zielgr\u00f6\u00dfe in MIB angegeben wird. Dieser Modus ist nicht mit -txindex und -resacan kompatibel. Warnung: Das R\u00fccksetzen dieser Einstellung erfordert das erneute Herunterladen der gesamten Blockchain. (Standard: 0 = deaktiviert das Pruning, 1 = erlaubt manuelles Pruning via RPC, &gt;%u = automatisches Pruning der Blockdateien, um angegebene Maximalgr\u00f6\u00dfe nicht zu \u00fcberschreiten)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Niedrigste Geb\u00fchr (in %s/kB) f\u00fcr Transaktionen einstellen, die bei der Blockerzeugung ber\u00fccksichtigt werden sollen. (default: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Maximale Anzahl an Skript-Verifizierungs-Threads festlegen (%u bis %d, 0 = automatisch, &lt;0 = so viele Kerne frei lassen, Standard: %d)</translation>\n@@ -3113,6 +3145,10 @@\n         <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n         <translation>Benutzername und gehashtes Passwort f\u00fcr JSON-RPC Verbindungen. Das Feld &lt;userpw&gt; kommt im Format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Ein kanonisches Pythonskript ist in share/rpcuser inbegriffen. Der client benutzt wie gehabt, die rpcuser/rpcpassword Parameter. Diese Option kann mehrere Male spezifiziert werden</translation>\n     </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>Das Wallet erzeugt keine Transaktionen, die das Mempool Chain Limit \u00fcberschreiten (Standardeinstellung: %u)</translation>\n+    </message>\n     <message>\n         <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n         <translation>Warnung: Das Netzwerk scheint nicht vollst\u00e4ndig \u00fcbereinzustimmen! Einige Miner scheinen Probleme zu haben.</translation>\n@@ -3153,6 +3189,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>Kann Adresse in -%s nicht aufl\u00f6sen: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Chain Auswahloptionen:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Position des Wechselgelds au\u00dferhalb des Bereichs</translation>\n@@ -3645,6 +3685,10 @@\n         <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n         <translation>Adressen von Gegenstellen via DNS-Namensaufl\u00f6sung finden, falls zu wenige Adressen verf\u00fcgbar sind (Standard: 1, au\u00dfer bei -connect/-noconnect)</translation>\n     </message>\n+    <message>\n+        <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n+        <translation>Setzt die Serialisierung von Rohtransaktionen oder Block Hex-Daten auf non-verbose mode, nicht-Segwit(0) oder Segwit(1) (default: %d)</translation>\n+    </message>\n     <message>\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Unterst\u00fctze Bl\u00f6cke und Transaktionen mit  Bloomfiltern zu filtern (default: %u)</translation>\n@@ -3705,6 +3749,10 @@\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Ung\u00fcltige Adresse in -proxy: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Der Keypool ist ersch\u00f6pft. Bitte rufen Sie zun\u00e4chst keypoolrefill auf.</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>&lt;port&gt; nach JSON-RPC-Verbindungen abh\u00f6ren (Standard: %u oder Testnetz: %u)</translation>\n@@ -3773,6 +3821,14 @@\n         <source>Spend unconfirmed change when sending transactions (default: %u)</source>\n         <translation>Unbest\u00e4tigtes Wechselgeld darf beim Senden von Transaktionen ausgegeben werden (Standard: %u)</translation>\n     </message>\n+    <message>\n+        <source>Starting network threads...</source>\n+        <translation>Netzwerk-Threads werden gestartet...</translation>\n+    </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>Das Wallet verhindert Zahlungen, die die Mindesttransaktionsgeb\u00fchr nicht ber\u00fccksichtigen.</translation>\n+    </message>\n     <message>\n         <source>This is the minimum transaction fee you pay on every transaction.</source>\n         <translation>Dies ist die minimale Geb\u00fchr die beim Senden einer Transaktion f\u00e4llig wird.</translation>\n@@ -3789,6 +3845,14 @@\n         <source>Transaction amounts must not be negative</source>\n         <translation>Transaktionsbetr\u00e4ge d\u00fcrfen nicht negativ sein.</translation>\n     </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>Die Speicherpoolkette der Transaktion ist zu lang.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>Die Transaktion muss mindestens einen Empf\u00e4nger enthalten.</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Unbekannter Netztyp in -onlynet angegeben: '%s'</translation>"
      },
      {
        "sha": "21f308e80e442264fd795b4edc9b741f1e1152d6",
        "filename": "src/qt/locale/bitcoin_el_GR.ts",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_el_GR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_el_GR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_el_GR.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,6 +41,14 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae</translation>\n     </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u0394\u03b9\u03b5\u03c5\u03b8\u03cd\u03bd\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ae\u03c8\u03b7\u03c2</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n@@ -63,6 +71,10 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u0395\u03c0\u03b1\u03bd\u03ad\u03bb\u03b1\u03b2\u03b5 \u03c4\u03bf\u03bd \u03bd\u03ad\u03bf \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2</translation>\n     </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u039e\u03b5\u03ba\u03bb\u03b5\u03b9\u03b4\u03c9\u03c3\u03b5 \u03c4\u03bf \u03c0\u03bf\u03c1\u03c4\u03bf\u03c6\u03bf\u03bb\u03b9</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>"
      },
      {
        "sha": "a476b56596f6cc8fc3a9e434e7d009b1d2067f50",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -304,12 +304,12 @@\n         <translation>Sign &amp;message...</translation>\n     </message>\n     <message>\n-        <location line=\"+427\"/>\n+        <location line=\"+430\"/>\n         <source>Synchronizing with network...</source>\n         <translation>Synchronizing with network...</translation>\n     </message>\n     <message>\n-        <location line=\"-505\"/>\n+        <location line=\"-508\"/>\n         <source>&amp;Overview</source>\n         <translation>&amp;Overview</translation>\n     </message>\n@@ -404,7 +404,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+357\"/>\n+        <location line=\"+360\"/>\n         <source>Click to disable network activity.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -429,7 +429,7 @@\n         <translation>Reindexing blocks on disk...</translation>\n     </message>\n     <message>\n-        <location line=\"-508\"/>\n+        <location line=\"-511\"/>\n         <source>Send coins to a Bitcoin address</source>\n         <translation>Send coins to a Bitcoin address</translation>\n     </message>\n@@ -459,12 +459,12 @@\n         <translation>&amp;Verify message...</translation>\n     </message>\n     <message>\n-        <location line=\"+514\"/>\n+        <location line=\"+517\"/>\n         <source>Bitcoin</source>\n         <translation>Bitcoin</translation>\n     </message>\n     <message>\n-        <location line=\"-739\"/>\n+        <location line=\"-742\"/>\n         <source>Wallet</source>\n         <translation>Wallet</translation>\n     </message>\n@@ -549,7 +549,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message numerus=\"yes\">\n-        <location line=\"+354\"/>\n+        <location line=\"+357\"/>\n         <source>%n active connection(s) to Bitcoin network</source>\n         <translation>\n             <numerusform>%n active connection to Bitcoin network</numerusform>\n@@ -610,12 +610,12 @@\n         <translation>Up to date</translation>\n     </message>\n     <message>\n-        <location line=\"-438\"/>\n+        <location line=\"-441\"/>\n         <source>Show the %1 help message to get a list with possible Bitcoin command-line options</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+197\"/>\n+        <location line=\"+200\"/>\n         <source>%1 client</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -849,7 +849,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+183\"/>\n+        <location line=\"+181\"/>\n         <source>yes</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -1499,7 +1499,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+25\"/>\n+        <location line=\"+28\"/>\n         <source>The supplied proxy address is invalid.</source>\n         <translation>The supplied proxy address is invalid.</translation>\n     </message>\n@@ -1601,7 +1601,7 @@\n <context>\n     <name>PaymentServer</name>\n     <message>\n-        <location filename=\"../paymentserver.cpp\" line=\"+328\"/>\n+        <location filename=\"../paymentserver.cpp\" line=\"+326\"/>\n         <location line=\"+216\"/>\n         <location line=\"+42\"/>\n         <location line=\"+113\"/>\n@@ -1760,7 +1760,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+759\"/>\n+        <location line=\"+762\"/>\n         <source>%1 d</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -2030,7 +2030,7 @@\n     </message>\n     <message>\n         <location line=\"+60\"/>\n-        <location filename=\"../rpcconsole.cpp\" line=\"+456\"/>\n+        <location filename=\"../rpcconsole.cpp\" line=\"+460\"/>\n         <location line=\"+719\"/>\n         <source>Select a peer to view detailed information.</source>\n         <translation type=\"unfinished\"></translation>"
      },
      {
        "sha": "16c584c4b10faae31c3d6673d8a9ba79958c4784",
        "filename": "src/qt/locale/bitcoin_eo.ts",
        "status": "modified",
        "additions": 119,
        "deletions": 3,
        "changes": 122,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_eo.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_eo.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_eo.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,10 +41,78 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Forigi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Elekti la adreson por sendi monerojn</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Elekti la adreson ricevi monerojn kun</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Elekti</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Sendaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Ricevaj adresoj</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Jen viaj Bitmon-adresoj por sendi pagojn. Zorge kontrolu la sumon kaj la alsendan adreson anta\u016d ol sendi.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Jen viaj bitmonaj adresoj por ricevi pagojn. Estas konsilinde uzi apartan ricevan adreson por \u0109iu transakcio.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopii Adreson</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopii &amp;Etikedon</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Redakti</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporti Adresliston</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Okazis eraron dum konservo de adreslisto al %1. Bonvolu provi denove.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -386,6 +454,10 @@\n         <source>Confirmed</source>\n         <translation>Konfirmita</translation>\n     </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -934,9 +1006,25 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Konservi Bildon...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1016,7 +1104,11 @@\n         <source>S&amp;end</source>\n         <translation>\u015cendi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1179,9 +1271,33 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(neniu etikedo)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Perkome disigita dosiero (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Etikedo</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adreso</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>ekspotado malsukcesinta</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "1cac03951c61bc5d78f8060e7b1d970e06f2a44b",
        "filename": "src/qt/locale/bitcoin_es.ts",
        "status": "modified",
        "additions": 130,
        "deletions": 2,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_es.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_es.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -485,6 +485,10 @@\n         <source>%1 client</source>\n         <translation>%1 cliente</translation>\n     </message>\n+    <message>\n+        <source>Connecting to peers...</source>\n+        <translation>Conectando a pares...</translation>\n+    </message>\n     <message>\n         <source>Catching up...</source>\n         <translation>Actualizando...</translation>\n@@ -891,7 +895,7 @@\n     </message>\n     <message>\n         <source>Number of blocks left</source>\n-        <translation>N\u00famero de bloques dejados</translation>\n+        <translation>N\u00famero de bloques restantes</translation>\n     </message>\n     <message>\n         <source>Unknown...</source>\n@@ -1722,7 +1726,7 @@\n     </message>\n     <message>\n         <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.</source>\n-        <translation>ADVERTENCIA: Los estafadores han sido activados, dici\u00e9ndoles a los usuarios que escriban comandos aqu\u00ed, robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n+        <translation>ADVERTENCIA: Hay estafadores activos diciendo a los usuarios que escriban comandos aqu\u00ed y robando el contenido de sus monederos. No utilice esta consola sin entender completamente la repercusi\u00f3n de un comando.</translation>\n     </message>\n     <message>\n         <source>Network activity disabled</source>\n@@ -2473,6 +2477,10 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2517,6 +2525,10 @@\n         <source>, has not been successfully broadcast yet</source>\n         <translation>, no ha sido emitido con \u00e9xito a\u00fan</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>, broadcast through %n node(s)</source>\n+        <translation><numerusform>, transmitir a trav\u00e9s de %n nodo</numerusform><numerusform>, transmitir a trav\u00e9s de %n nodos</numerusform></translation>\n+    </message>\n     <message>\n         <source>Date</source>\n         <translation>Fecha</translation>\n@@ -2557,6 +2569,10 @@\n         <source>Credit</source>\n         <translation>Credito</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>matures in %n more block(s)</source>\n+        <translation><numerusform>disponible en %n bloque m\u00e1s</numerusform><numerusform>disponible en %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>not accepted</source>\n         <translation>no aceptada</translation>\n@@ -2593,6 +2609,10 @@\n         <source>Transaction ID</source>\n         <translation>Identificador de transacci\u00f3n (ID)</translation>\n     </message>\n+    <message>\n+        <source>Transaction total size</source>\n+        <translation>Tama\u00f1o total de transacci\u00f3n</translation>\n+    </message>\n     <message>\n         <source>Output index</source>\n         <translation>Indice de salida</translation>\n@@ -2655,6 +2675,10 @@\n         <source>Label</source>\n         <translation>Etiqueta</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>Open for %n more block(s)</source>\n+        <translation><numerusform>Abrir para %n bloque m\u00e1s</numerusform><numerusform>Abrir para %n bloques m\u00e1s</numerusform></translation>\n+    </message>\n     <message>\n         <source>Open until %1</source>\n         <translation>Abierto hasta %1</translation>\n@@ -2987,6 +3011,18 @@\n         <translation>Aceptar comandos consola y JSON-RPC\n </translation>\n     </message>\n+    <message>\n+        <source>Accept connections from outside (default: 1 if no -proxy or -connect/-noconnect)</source>\n+        <translation>Aceptar conexiones desde el exterior (predeterminado: 1 si no -proxy o -connect/-desconectar)</translation>\n+    </message>\n+    <message>\n+        <source>Connect only to the specified node(s); -noconnect or -connect=0 alone to disable automatic connections</source>\n+        <translation>Conectar s\u00f3lo al nodo(s) especificado; -no conectar or -conectar=solo 0 para deshabilitar conexiones autom\u00e1ticas</translation>\n+    </message>\n+    <message>\n+        <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n+        <translation>Distribuido bajo la licencia de software MIT, vea el archivo adjunto %s o %s</translation>\n+    </message>\n     <message>\n         <source>If &lt;category&gt; is not supplied or if &lt;category&gt; = 1, output all debugging information.</source>\n         <translation>Si &lt;category&gt; no es proporcionado o si &lt;category&gt; =1, muestra toda la informaci\u00f3n de depuraci\u00f3n.</translation>\n@@ -3064,6 +3100,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>Ejecutar comando cuando una transacci\u00f3n del monedero cambia (%s en cmd se remplazar\u00e1 por TxID)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>Transacciones extra a mantener en la memoria para reconstrucciones de bloque compacto (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>Si este bloque est\u00e1 en la cadena asuma que sus predecesores y \u00e9l son v\u00e1lidos y potencialmente se saltan su script de verificaci\u00f3n (0 para verificar todo, predeterminado: %s, testnet: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>Ajuste m\u00e1ximo permitido del tiempo offset medio de pares. La perspectiva local de tiempo se ver\u00e1 influenciada por los pares anteriores y posteriores a esta cantidad. (Por defecto: %u segundos)</translation>\n@@ -3080,6 +3124,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>Contribuya si encuentra %s de utilidad. Visite %s para mas informaci\u00f3n acerca del programa.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>Reducir los requerimientos de almacenamiento habilitando la poda (eliminaci\u00f3n) de los bloques viejos. Esto permite que la cadena de bloqueo RPC sea llamada para eliminar bloques espec\u00edficos, y habilita la poda autom\u00e1tica de bloques viejos si se provee el tama\u00f1o de un objetivo en MiB. Este modo es incompatible con -txindex and -rescan. Precauci\u00f3n: Revertir este ajuste requiere volver a descargar la cadena de bloqueo completa. (predefinido: 0 = deshabilita bloques de poda, 1 = permite la poda manual mediante RPC, &gt;%u = elimina autom\u00e1ticamente los archivos de bloqueo para permanecer bajo el tama\u00f1o del objetivo especificado en MiB)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>Establecer la tasa m\u00e1s baja (en %s/kB) por transacciones para incluirse en la creaci\u00f3n de bloque. (predeterminado: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>Establecer el n\u00famero de hilos (threads) de verificaci\u00f3n de scripts (entre %u y %d, 0 = autom\u00e1tico, &lt;0 = dejar libres ese n\u00famero de n\u00facleos; predeterminado: %d)</translation>\n@@ -3088,6 +3140,10 @@\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>La base de datos de bloques contiene un bloque que parece ser del futuro. Esto puede ser porque la fecha y hora de tu ordenador est\u00e1n mal ajustados. Reconstruye la base de datos de bloques solo si estas seguro de que la fecha y hora de tu ordenador estan ajustados correctamente.</translation>\n     </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Esta es una versi\u00f3n de prueba prelanzada - util\u00edcelo a su propio riesgo - no lo utilice para aplicaciones de miner\u00eda o comerciales</translation>\n+    </message>\n     <message>\n         <source>Unable to rewind the database to a pre-fork state. You will need to redownload the blockchain</source>\n         <translation>No es posible reconstruir la base de datos a un estado anterior. Debe descargar de nuevo la cadena de bloques.</translation>\n@@ -3096,6 +3152,22 @@\n         <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n         <translation>Utiliza UPnP para asignar el puerto de escucha (predeterminado: 1 cuando esta escuchando sin -proxy)</translation>\n     </message>\n+    <message>\n+        <source>Username and hashed password for JSON-RPC connections. The field &lt;userpw&gt; comes in the format: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=&lt;USERNAME&gt;/rpcpassword=&lt;PASSWORD&gt; pair of arguments. This option can be specified multiple times</source>\n+        <translation>Nombre de usuario y contrase\u00f1a numerada para conexiones JSON-RPC. El campo &lt;userpw&gt; viene en el formato: &lt;USERNAME&gt;:&lt;SALT&gt;$&lt;HASH&gt;. Un script can\u00f3nico de python est\u00e1 inclu\u00eddo en compartir/usuario rpc. Entonces el cliente se conecta normalmente utilizando la pareja de argumentos usuario rpc=&lt;USERNAME&gt;/contrase\u00f1a rpc=&lt;PASSWORD&gt;. Esta opci\u00f3n puede ser especificada m\u00faltiples veces</translation>\n+    </message>\n+    <message>\n+        <source>Wallet will not create transactions that violate mempool chain limits (default: %u)</source>\n+        <translation>El monedero no crear\u00e1 transacciones que violen los l\u00edmites de la cadena mempool (predeterminado: %u)</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Advertencia: \u00a1La red no parece coincidir del todo! Algunos mineros parecen estar experimentando problemas.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Advertencia: \u00a1No parecemos estar del todo con nuestros pares! Puede que necesite actualizarse, o puede que otros nodos necesiten actualizarse.</translation>\n+    </message>\n     <message>\n         <source>You need to rebuild the database using -reindex-chainstate to change -txindex</source>\n         <translation>Necesita reconstruir la base de datos usando -reindex-chainstate para cambiar -txindex</translation>\n@@ -3128,6 +3200,10 @@\n         <source>Cannot resolve -%s address: '%s'</source>\n         <translation>No se puede resolver -%s direccion: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Chain selection options:</source>\n+        <translation>Opciones de selecci\u00f3n en cadena:</translation>\n+    </message>\n     <message>\n         <source>Change index out of range</source>\n         <translation>Cambio de indice fuera de rango</translation>\n@@ -3324,6 +3400,10 @@\n         <source>Use UPnP to map the listening port (default: %u)</source>\n         <translation>Usar UPnP para asignar el puerto de escucha (predeterminado:: %u)</translation>\n     </message>\n+    <message>\n+        <source>Use the test chain</source>\n+        <translation>Utilice la cadena de prueba</translation>\n+    </message>\n     <message>\n         <source>User Agent comment (%s) contains unsafe characters.</source>\n         <translation>El comentario del Agente de Usuario (%s) contiene caracteres inseguros.</translation>\n@@ -3618,6 +3698,10 @@\n         <source>Output debugging information (default: %u, supplying &lt;category&gt; is optional)</source>\n         <translation>Mostrar depuraci\u00f3n (por defecto: %u, proporcionar &lt;category&gt; es opcional)</translation>\n     </message>\n+    <message>\n+        <source>Query for peer addresses via DNS lookup, if low on addresses (default: 1 unless -connect/-noconnect)</source>\n+        <translation>Preguntar por direcciones pares al buscar DNS, si baja en las direcciones (predeterminado: 1 a menos que -connect/-noconnect)</translation>\n+    </message>\n     <message>\n         <source>Sets the serialization of raw transaction or block hex returned in non-verbose mode, non-segwit(0) or segwit(1) (default: %d)</source>\n         <translation>https://www.transifex.com/joyful-world/breaking-english/\n@@ -3627,6 +3711,14 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Support filtering of blocks and transaction with bloom filters (default: %u)</source>\n         <translation>Admite filtrado de bloques, y transacciones con filtros Bloom. Reduce la carga de red. ( por defecto :%u)</translation>\n     </message>\n+    <message>\n+        <source>This is the transaction fee you may pay when fee estimates are not available.</source>\n+        <translation>Esta es la tarifa de cuota que debe pagar cuando las estimaciones de tarifas no est\u00e9n disponibles.</translation>\n+    </message>\n+    <message>\n+        <source>This product includes software developed by the OpenSSL Project for use in the OpenSSL Toolkit %s and cryptographic software written by Eric Young and UPnP software written by Thomas Bernard.</source>\n+        <translation>Este producto incluye software desarrollado por el Proyecto OpenSSL para utilizarlo en el juego de herramientas OpenSSL %s y software criptogr\u00e1fico escrito por Eric Young y software UPnP escrito por Thomas Bernard.</translation>\n+    </message>\n     <message>\n         <source>Total length of network version string (%i) exceeds maximum length (%i). Reduce the number or size of uacomments.</source>\n         <translation>La longitud total de la cadena de versi\u00f3n de red ( %i ) supera la longitud m\u00e1xima ( %i ) . Reducir el n\u00famero o tama\u00f1o de uacomments .</translation>\n@@ -3659,6 +3751,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n         <translation>Los pares de listas blancas que se conectan desde la direcci\u00f3n IP dada (por ejemplo, 1.2.3.4) o la red marcada CIDR (por ejemplo, 1.2.3.0/24). Se puede especificar varias veces.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>\u00a1%s se establece muy alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3679,6 +3775,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Invalid -proxy address: '%s'</source>\n         <translation>Direcci\u00f3n -proxy inv\u00e1lida: '%s'</translation>\n     </message>\n+    <message>\n+        <source>Keypool ran out, please call keypoolrefill first</source>\n+        <translation>Keypool se ha agotado, llame a keypoolrefill primero</translation>\n+    </message>\n     <message>\n         <source>Listen for JSON-RPC connections on &lt;port&gt; (default: %u or testnet: %u)</source>\n         <translation>Escuchar conexiones JSON-RPC en &lt;puerto&gt; (predeterminado: %u o testnet: %u)</translation>\n@@ -3715,6 +3815,10 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transacciones con full-RBF opt-in habilitado (predeterminado: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>\n@@ -3747,10 +3851,34 @@ Establecer la serializaci\u00f3n de las transacciones sin procesar o el bloque hex d\n         <source>Starting network threads...</source>\n         <translation>Iniciando funciones de red...</translation>\n     </message>\n+    <message>\n+        <source>The wallet will avoid paying less than the minimum relay fee.</source>\n+        <translation>El monedero evitar\u00e1 pagar menos que la cuota de retransmisi\u00f3n m\u00ednima.</translation>\n+    </message>\n+    <message>\n+        <source>This is the minimum transaction fee you pay on every transaction.</source>\n+        <translation>Esta es la tarifa m\u00ednima de transacci\u00f3n que usted paga en cada transacci\u00f3n.</translation>\n+    </message>\n+    <message>\n+        <source>This is the transaction fee you will pay if you send a transaction.</source>\n+        <translation>Esta es la cuota de transacci\u00f3n que pagar\u00e1 si env\u00eda una transacci\u00f3n.</translation>\n+    </message>\n     <message>\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Umbral para la desconexi\u00f3n de pares con mal comportamiento (predeterminado: %u)</translation>\n     </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Las cantidades de transacci\u00f3n no deben ser negativa</translation>\n+    </message>\n+    <message>\n+        <source>Transaction has too long of a mempool chain</source>\n+        <translation>La transacci\u00f3n tiene demasiado tiempo de una cadena de mempool</translation>\n+    </message>\n+    <message>\n+        <source>Transaction must have at least one recipient</source>\n+        <translation>La transacci\u00f3n debe de tener al menos un receptor</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>La red especificada en -onlynet '%s' es desconocida</translation>"
      },
      {
        "sha": "c81723a7a4460b9745867d949c555117869b92c9",
        "filename": "src/qt/locale/bitcoin_es_ES.ts",
        "status": "modified",
        "additions": 75,
        "deletions": 3,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_es_ES.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_es_ES.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_es_ES.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -317,6 +317,22 @@\n         <source>Open &amp;URI...</source>\n         <translation>Abrir &amp;URI...</translation>\n     </message>\n+    <message>\n+        <source>Click to disable network activity.</source>\n+        <translation>Haz click para desactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Network activity disabled.</source>\n+        <translation>Actividad de red desactivada.</translation>\n+    </message>\n+    <message>\n+        <source>Click to enable network activity again.</source>\n+        <translation>Haz click para reactivar la actividad de red.</translation>\n+    </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>Sincronizando cabeceras (%1%)...</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>Reindexando bloques en disco...</translation>\n@@ -519,7 +535,11 @@\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>El monedero est\u00e1 &lt;b&gt;cifrado&lt;/b&gt; y actualmente &lt;b&gt;bloqueado&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Ha ocurrido un error fatal. Bitcoin no puede continuar de manera segura y se cerrar\u00e1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -853,15 +873,43 @@\n         <source>Form</source>\n         <translation>Formulario</translation>\n     </message>\n+    <message>\n+        <source>Number of blocks left</source>\n+        <translation>N\u00famero de bloques restantes</translation>\n+    </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Desconocido...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Hora del \u00faltimo bloque</translation>\n     </message>\n+    <message>\n+        <source>Progress</source>\n+        <translation>Progreso</translation>\n+    </message>\n+    <message>\n+        <source>Progress increase per hour</source>\n+        <translation>Incremento del progreso por hora</translation>\n+    </message>\n+    <message>\n+        <source>calculating...</source>\n+        <translation>calculando...</translation>\n+    </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Tiempo estimado restante hasta sincronizaci\u00f3n completa</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Ocultar</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Unknown. Syncing Headers (%1)...</source>\n+        <translation>Desconocido. Sincronizando cabeceras (%1)...</translation>\n+    </message>\n+</context>\n <context>\n     <name>OpenURIDialog</name>\n     <message>\n@@ -1296,6 +1344,10 @@\n         <source>Node/Service</source>\n         <translation>Nodo/Servicio</translation>\n     </message>\n+    <message>\n+        <source>NodeId</source>\n+        <translation>NodeId</translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject</name>\n@@ -1339,9 +1391,17 @@\n         <source>%1 and %2</source>\n         <translation>%1 y %2</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>%1 didn't yet exit safely...</source>\n+        <translation>%1 a\u00fan no ha salido de manera segura...</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject::QObject</name>\n+    <message>\n+        <source>Error: Specified data directory \"%1\" does not exist.</source>\n+        <translation>Error: directorio especificado \"%1\" no existe.</translation>\n+    </message>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n@@ -1936,6 +1996,10 @@\n         <source>Dust:</source>\n         <translation>Polvo:</translation>\n     </message>\n+    <message>\n+        <source>Confirmation time target:</source>\n+        <translation>Tiempo objetivo de confirmaci\u00f3n:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>Vaciar &amp;todo</translation>\n@@ -3482,6 +3546,10 @@\n         <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Aviso: fichero de monedero corrupto, datos recuperados! Original %s guardado como %s en %s; si su balance de transacciones es incorrecto, debe restaurar desde una copia de seguridad.</translation>\n     </message>\n+    <message>\n+        <source>%s is set very high!</source>\n+        <translation>%s es demasiado alto!</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predeterminado: %s)</translation>\n@@ -3538,6 +3606,10 @@\n         <source>Relay non-P2SH multisig (default: %u)</source>\n         <translation>Relay non-P2SH multisig (default: %u)</translation>\n     </message>\n+    <message>\n+        <source>Send transactions with full-RBF opt-in enabled (default: %u)</source>\n+        <translation>Enviar transaciones con RBF-completo opt-in activado (default: %u)</translation>\n+    </message>\n     <message>\n         <source>Set key pool size to &lt;n&gt; (default: %u)</source>\n         <translation>Ajustar el n\u00famero de claves en reserva &lt;n&gt; (predeterminado: %u)</translation>"
      },
      {
        "sha": "9b0c908381581e7517e17c3a8ae69e5d9fbd6404",
        "filename": "src/qt/locale/bitcoin_et_EE.ts",
        "status": "modified",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_et_EE.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_et_EE.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_et_EE.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -87,6 +87,10 @@\n         <source>The supplied passphrases do not match.</source>\n         <translation>Sisestatud paroolid ei kattu.</translation>\n     </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Rahakoti lahtilukustamine eba\u00f5nnestus</translation>\n+    </message>\n     <message>\n         <source>Wallet decryption failed</source>\n         <translation>Rahakoti dekr\u00fcpteerimine eba\u00f5nnestus</translation>\n@@ -109,6 +113,14 @@\n         <source>&amp;Overview</source>\n         <translation>&amp;\u00dclevaade</translation>\n     </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>V\u00e4lju rakendusest</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Options...</source>\n+        <translation>&amp;Valikud...</translation>\n+    </message>\n     <message>\n         <source>Open &amp;URI...</source>\n         <translation>Ava &amp;URI...</translation>\n@@ -125,14 +137,30 @@\n         <source>Wallet</source>\n         <translation>Rahakott</translation>\n     </message>\n+    <message>\n+        <source>&amp;Send</source>\n+        <translation>&amp;Saada</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Show / Hide</source>\n+        <translation>&amp;N\u00e4ita / Peida</translation>\n+    </message>\n     <message>\n         <source>&amp;File</source>\n         <translation>&amp;Fail</translation>\n     </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>&amp;Seaded</translation>\n+    </message>\n     <message>\n         <source>&amp;Help</source>\n         <translation>&amp;Abi</translation>\n     </message>\n+    <message>\n+        <source>&amp;Command-line options</source>\n+        <translation>&amp;K\u00e4surea valikud</translation>\n+    </message>\n     <message>\n         <source>%1 behind</source>\n         <translation>%1 ajast maas</translation>\n@@ -203,6 +231,10 @@\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n+    <message>\n+        <source>&amp;Address</source>\n+        <translation>&amp;Aadress</translation>\n+    </message>\n     <message>\n         <source>New key generation failed.</source>\n         <translation>Uue v\u00f5tme genereerimine eba\u00f5nnestus.</translation>"
      },
      {
        "sha": "b83afb86180880315bf6440eda23e22be7412771",
        "filename": "src/qt/locale/bitcoin_fa.ts",
        "status": "modified",
        "additions": 24,
        "deletions": 0,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fa.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fa.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fa.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -115,6 +115,10 @@\n         <source>Decrypt wallet</source>\n         <translation>\u0631\u0645\u0632\u06af\u0634\u0627\u06cc\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n     </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u062a\u063a\u06cc\u06cc\u0631 \u06af\u0630\u0631\u0648\u0627\u0698\u0647</translation>\n+    </message>\n     <message>\n         <source>Confirm wallet encryption</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0631\u0645\u0632\u0646\u06af\u0627\u0631\u06cc \u06a9\u06cc\u0641 \u067e\u0648\u0644</translation>\n@@ -506,6 +510,10 @@\n         <source>Confirmed</source>\n         <translation>\u062a\u0623\u06cc\u06cc\u062f \u0634\u062f\u0647</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>\n@@ -530,6 +538,10 @@\n         <source>Copy quantity</source>\n         <translation>\u06a9\u067e\u06cc \u062a\u0639\u062f\u0627\u062f</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n     <message>\n         <source>(%1 locked)</source>\n         <translation>(%1 \u0642\u0641\u0644 \u0634\u062f\u0647)</translation>\n@@ -697,6 +709,10 @@\n         <source>Form</source>\n         <translation>\u0641\u0631\u0645</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>\u0645\u0634\u062e\u0635 \u0646\u06cc\u0633\u062a</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>\u0632\u0645\u0627\u0646 \u0622\u062e\u0631\u06cc\u0646 \u0628\u0644\u0648\u06a9</translation>\n@@ -1328,6 +1344,10 @@\n         <source>Copy amount</source>\n         <translation>\u06a9\u067e\u06cc \u0645\u0642\u062f\u0627\u0631</translation>\n     </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>\u0631\u0648\u0646\u0648\u0634\u062a \u06a9\u0627\u0631\u0645\u0632\u062f</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(\u0628\u062f\u0648\u0646 \u0628\u0631\u0686\u0633\u0628)</translation>\n@@ -1514,6 +1534,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>\u06a9\u067e\u06cc \u0627\u062f\u0631\u0633</translation>\n+    </message>\n     <message>\n         <source>Copy label</source>\n         <translation>\u06a9\u067e\u06cc \u0628\u0631\u0686\u0633\u0628</translation>"
      },
      {
        "sha": "883bb4f8da748ed4642cbf4f6cad60d41ebd1ef0",
        "filename": "src/qt/locale/bitcoin_fr.ts",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -887,7 +887,7 @@\n     </message>\n     <message>\n         <source>Recent transactions may not yet be visible, and therefore your wallet's balance might be incorrect. This information will be correct once your wallet has finished synchronizing with the bitcoin network, as detailed below.</source>\n-        <translation>Les transactions r\u00e9centes ne sont peut-\u00eatre pas encore visibles, et par cons\u00e9quent, le solde de votre porte-monnaie est peut-\u00eatre erron\u00e9. Cette information sera juste une fois que votre porte-monnaie aura fini de se synchroniser avec le r\u00e9seau Bitcoin, tel que d\u00e9crit ci-dessous. </translation>\n+        <translation>Les transactions r\u00e9centes ne sont peut-\u00eatre pas encore visibles, et par cons\u00e9quent, le solde de votre porte-monnaie est peut-\u00eatre erron\u00e9. Cette information sera juste une fois que votre porte-monnaie aura fini de se synchroniser avec le r\u00e9seau Bitcoin, comme d\u00e9crit ci-dessous. </translation>\n     </message>\n     <message>\n         <source>Attempting to spend bitcoins that are affected by not-yet-displayed transactions will not be accepted by the network.</source>"
      },
      {
        "sha": "12cd54d405e8bec86d2304e22aee16a1f7b5c017",
        "filename": "src/qt/locale/bitcoin_fr_FR.ts",
        "status": "modified",
        "additions": 308,
        "deletions": 4,
        "changes": 312,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fr_FR.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_fr_FR.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_fr_FR.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,10 +41,46 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Supprimer</translation>\n     </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>C&amp;oisir</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Copier &amp;\u00c9tiquette </translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;\u00c9diter </translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Exporter la liste d'adresses</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u00c9chec de l'export</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,6 +99,22 @@\n         <source>Repeat new passphrase</source>\n         <translation>R\u00e9p\u00e9tez la phrase de passe</translation>\n     </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Chiffrer le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>D\u00e9verrouiller le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>D\u00e9crypter le porte-monnaie</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Porte-monnaie chiffr\u00e9</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -414,6 +466,42 @@\n         <source>Confirmed</source>\n         <translation>Confirm\u00e9e</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copier l'adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copier les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copier apr\u00e8s les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copier les octets</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>oui</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>non</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -797,6 +885,14 @@\n     </context>\n <context>\n     <name>QRImageWidget</name>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>&amp;Copier image</translation>\n+    </message>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>Sauvegarder QR code</translation>\n+    </message>\n     </context>\n <context>\n     <name>RPCConsole</name>\n@@ -1055,7 +1151,15 @@\n         <source>Remove</source>\n         <translation>Retirer</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1074,9 +1178,37 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Sauvegarder image</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1180,7 +1312,27 @@\n         <source>S&amp;end</source>\n         <translation>E&amp;voyer</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copier les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copier apr\u00e8s les frais</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copier les octets</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1305,7 +1457,83 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n-    </context>\n+    <message>\n+        <source>Status</source>\n+        <translation>\u00c9tat</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Source</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>G\u00e9n\u00e9r\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>De</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>inconnu</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>\u00c1</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>Votre adresse</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Lecture uniquement</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>\u00c9tiquette </translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Cr\u00e9dit</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>D\u00e9bit</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>D\u00e9bit total</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Cr\u00e9dit total </translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Montant net</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Message</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Commentaire </translation>\n+    </message>\n+    <message>\n+        <source>true</source>\n+        <translation>vrai</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>faux</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -1315,9 +1543,85 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Lecture uniquement</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(aucune \u00e9tiquette)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>Toutes</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Aujourd'hui</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Cette semaine</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Ce mois</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Mois dernier</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Cette ann\u00e9e</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>Autres</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copier l'adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copier l'\u00e9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copier le montant</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Valeurs s\u00e9par\u00e9es par des virgules (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Date</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u00c9tiquette</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u00c9chec de l'export</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "b8c89c51af0d51eac6053054b0340c676583107c",
        "filename": "src/qt/locale/bitcoin_it.ts",
        "status": "modified",
        "additions": 638,
        "deletions": 14,
        "changes": 652,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_it.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_it.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -562,11 +562,75 @@\n         <source>Confirmed</source>\n         <translation>Confermato</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copia indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copia l'ID transazione</translation>\n+    </message>\n+    <message>\n+        <source>Lock unspent</source>\n+        <translation>Bloccare non spesi</translation>\n+    </message>\n+    <message>\n+        <source>Unlock unspent</source>\n+        <translation>Sbloccare non spesi</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copia quantit\u00e0</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copia commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copia dopo commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copia byte</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copia trascurabile</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copia resto</translation>\n+    </message>\n+    <message>\n+        <source>(%1 locked)</source>\n+        <translation>(%1 bloccato)</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>s\u00ec</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>no</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(resto)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -702,6 +766,10 @@\n         <source>Error</source>\n         <translation>Errore</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n GB of free space available</source>\n+        <translation><numerusform>GB di spazio libero disponibile</numerusform><numerusform>%n GB di spazio disponibile</numerusform></translation>\n+    </message>\n     <message numerus=\"yes\">\n         <source>(of %n GB needed)</source>\n         <translation><numerusform>(di %nGB richiesti)</numerusform><numerusform>(%n GB richiesti)</numerusform></translation>\n@@ -713,6 +781,10 @@\n         <source>Form</source>\n         <translation>Modulo</translation>\n     </message>\n+    <message>\n+        <source>Unknown...</source>\n+        <translation>Sconosciuto...</translation>\n+    </message>\n     <message>\n         <source>Last block time</source>\n         <translation>Ora del blocco pi\u00f9 recente</translation>\n@@ -1054,6 +1126,14 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>PaymentServer</name>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Richiesta di pagamento scaduta.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Richiesta di pagamento invalida</translation>\n+    </message>\n     </context>\n <context>\n     <name>PeerTableModel</name>\n@@ -1065,7 +1145,11 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Node/Service</source>\n         <translation>Nodo/Servizio</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Ping</source>\n+        <translation>Ping</translation>\n+    </message>\n+</context>\n <context>\n     <name>QObject</name>\n     <message>\n@@ -1104,17 +1188,49 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>%1 ms</source>\n         <translation>%1 ms</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>%n secondo</numerusform><numerusform>%n secondi</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>%n minuto</numerusform><numerusform>%n minuti</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n ora</numerusform><numerusform>%n ore</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n giorno</numerusform><numerusform>%n giorni</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n settimana</numerusform><numerusform>%n settimane</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation>%1 e %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n anno</numerusform><numerusform>%n anni</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n-    </context>\n+    <message>\n+        <source>Error: %1</source>\n+        <translation>Errore: %1</translation>\n+    </message>\n+</context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>Immagine PNG (*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n     <message>\n@@ -1464,7 +1580,23 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Remove</source>\n         <translation>Rimuovi</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy URI</source>\n+        <translation>Copia URI</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>Copia il messaggio</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1483,26 +1615,58 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Salva Immagine...</translation>\n     </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n     <message>\n         <source>Address</source>\n         <translation>Indirizzo</translation>\n     </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Importo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(nessun messaggio)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount requested)</source>\n+        <translation>(nessun importo richiesto)</translation>\n+    </message>\n+    <message>\n+        <source>Requested</source>\n+        <translation>Richiesto</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n@@ -1645,6 +1809,54 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>S&amp;end</source>\n         <translation>&amp;Invia</translation>\n     </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Copia quantit\u00e0</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Copia commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Copia dopo commissione</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Copia byte</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Copia trascurabile</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Copia resto</translation>\n+    </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 a %2</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Richiesta di pagamento scaduta.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n block(s)</source>\n+        <translation><numerusform>%n blocco</numerusform><numerusform>%n blocchi</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Attenzione: Indirizzo Bitcoin non valido</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Unknown change address</source>\n+        <translation>Attenzione: Indirizzo per il resto sconosciuto</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n@@ -1731,7 +1943,11 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n     </context>\n <context>\n     <name>SendConfirmationDialog</name>\n-    </context>\n+    <message>\n+        <source>Yes</source>\n+        <translation>Si</translation>\n+    </message>\n+</context>\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n@@ -1829,7 +2045,55 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Reset all verify message fields</source>\n         <translation>Reimposta tutti i campi della verifica messaggio</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>L'indirizzo inserito non \u00e8 valido.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the address and try again.</source>\n+        <translation>Per favore controlla l'indirizzo e prova di nuovo.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address does not refer to a key.</source>\n+        <translation>L'indirizzo bitcoin inserito non \u00e8 associato a nessuna chiave.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock was cancelled.</source>\n+        <translation>Sblocco del portamonete annullato.</translation>\n+    </message>\n+    <message>\n+        <source>Private key for the entered address is not available.</source>\n+        <translation>La chiave privata per l'indirizzo inserito non \u00e8 disponibile.</translation>\n+    </message>\n+    <message>\n+        <source>Message signing failed.</source>\n+        <translation>Firma messaggio fallita.</translation>\n+    </message>\n+    <message>\n+        <source>Message signed.</source>\n+        <translation>Messaggio firmato.</translation>\n+    </message>\n+    <message>\n+        <source>The signature could not be decoded.</source>\n+        <translation>Non \u00e8 stato possibile decodificare la firma.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>Per favore controlla la firma e prova di nuovo.</translation>\n+    </message>\n+    <message>\n+        <source>The signature did not match the message digest.</source>\n+        <translation>La firma non corrisponde al digest del messaggio.</translation>\n+    </message>\n+    <message>\n+        <source>Message verification failed.</source>\n+        <translation>Verifica messaggio fallita.</translation>\n+    </message>\n+    <message>\n+        <source>Message verified.</source>\n+        <translation>Messaggio verificato.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SplashScreen</name>\n     <message>\n@@ -1846,7 +2110,123 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>TransactionDesc</name>\n-    </context>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1/offline</translation>\n+    </message>\n+    <message>\n+        <source>Status</source>\n+        <translation>Stato</translation>\n+    </message>\n+    <message>\n+        <source>, has not been successfully broadcast yet</source>\n+        <translation>, non \u00e8 ancora stata trasmessa con successo</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Sorgente</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>Generato</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>Da</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>sconosciuto</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>A</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>proprio indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Credito</translation>\n+    </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>non accettate</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>Debito</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Debito totale</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Credito totale</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Commissione transazione</translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Importo netto</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Messaggio</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Commento</translation>\n+    </message>\n+    <message>\n+        <source>Transaction ID</source>\n+        <translation>ID della transazione</translation>\n+    </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>Commerciante</translation>\n+    </message>\n+    <message>\n+        <source>Debug information</source>\n+        <translation>Informazione di debug</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transazione</translation>\n+    </message>\n+    <message>\n+        <source>Inputs</source>\n+        <translation>Input</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Importo</translation>\n+    </message>\n+    <message>\n+        <source>true</source>\n+        <translation>vero</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>falso</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -1856,21 +2236,201 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Tipo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n     </message>\n+    <message>\n+        <source>Offline</source>\n+        <translation>Offline</translation>\n+    </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>Non confermata</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Confermata (%1 conferme)</translation>\n+    </message>\n+    <message>\n+        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n+        <translation>Questo blocco non \u00e8 stato ricevuto da alcun altro nodo e probabilmente non sar\u00e0 accettato!</translation>\n+    </message>\n+    <message>\n+        <source>Generated but not accepted</source>\n+        <translation>Generati, ma non accettati</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Ricevuto tramite</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Inviato a</translation>\n+    </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Pagamento a te stesso</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ottenuto dal mining</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>(n/a)</source>\n+        <translation>(n/d)</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(nessuna etichetta)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n+        <translation>Stato della transazione. Passare con il mouse su questo campo per visualizzare il numero di conferme.</translation>\n+    </message>\n+    <message>\n+        <source>Date and time that the transaction was received.</source>\n+        <translation>Data e ora in cui la transazione \u00e8 stata ricevuta.</translation>\n+    </message>\n+    <message>\n+        <source>Type of transaction.</source>\n+        <translation>Tipo di transazione.</translation>\n+    </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>Indica se un indirizzo di sola lettura sia o meno coinvolto in questa transazione.</translation>\n+    </message>\n+    <message>\n+        <source>User-defined intent/purpose of the transaction.</source>\n+        <translation>Intento/scopo della transazione definito dall'utente.</translation>\n+    </message>\n+    <message>\n+        <source>Amount removed from or added to balance.</source>\n+        <translation>Importo rimosso o aggiunto al saldo.</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>All</source>\n+        <translation>Tutti</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Oggi</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Questa settimana</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Questo mese</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Il mese scorso</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Quest'anno</translation>\n+    </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Intervallo...</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Ricevuto tramite</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Inviato a</translation>\n+    </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>A te stesso</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Ottenuto dal mining</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>Altro</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Inserisci un indirizzo o un'etichetta da cercare</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Importo minimo</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Copia indirizzo</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Copia etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Copia l'importo</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Copia l'ID transazione</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Copia la transazione raw</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>Modifica l'etichetta</translation>\n+    </message>\n+    <message>\n+        <source>Show transaction details</source>\n+        <translation>Mostra i dettagli della transazione</translation>\n+    </message>\n+    <message>\n+        <source>Export Transaction History</source>\n+        <translation>Esporta lo storico delle transazioni</translation>\n+    </message>\n     <message>\n         <source>Comma separated file (*.csv)</source>\n         <translation>Testo CSV (*.csv)</translation>\n     </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Confermato</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Sola lettura</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>Data</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Tipo</translation>\n+    </message>\n     <message>\n         <source>Label</source>\n         <translation>Etichetta</translation>\n@@ -1879,11 +2439,35 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n         <source>Address</source>\n         <translation>Indirizzo</translation>\n     </message>\n+    <message>\n+        <source>ID</source>\n+        <translation>ID</translation>\n+    </message>\n     <message>\n         <source>Exporting Failed</source>\n         <translation>Esportazione Fallita</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Si \u00e8 verificato un errore durante il salvataggio dello storico delle transazioni in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>Esportazione Riuscita</translation>\n+    </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>Lo storico delle transazioni e' stato salvato con successo in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Intervallo:</translation>\n+    </message>\n+    <message>\n+        <source>to</source>\n+        <translation>a</translation>\n+    </message>\n+</context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n     <message>\n@@ -1893,13 +2477,53 @@ Per specificare pi\u00f9 URL separarli con una barra verticale \"|\".</translation>\n </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>Non \u00e8 stato caricato alcun portamonete.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n-    </context>\n+    <message>\n+        <source>Send Coins</source>\n+        <translation>Invia Bitcoin</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n-    </context>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Esporta</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Esporta su file i dati contenuti nella tabella corrente</translation>\n+    </message>\n+    <message>\n+        <source>Backup Wallet</source>\n+        <translation>Backup Portamonete</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Data (*.dat)</source>\n+        <translation>Dati Portamonete (*.dat)</translation>\n+    </message>\n+    <message>\n+        <source>Backup Failed</source>\n+        <translation>Backup Fallito</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Si \u00e8 verificato un errore durante il salvataggio dei dati del portamonete in %1.</translation>\n+    </message>\n+    <message>\n+        <source>Backup Successful</source>\n+        <translation>Backup eseguito con successo</translation>\n+    </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>Il portamonete \u00e8 stato correttamente salvato in %1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>bitcoin-core</name>\n     <message>"
      },
      {
        "sha": "ebb30f13e4b62d1dd3a20716791b385b8a418125",
        "filename": "src/qt/locale/bitcoin_it_IT.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_it_IT.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_it_IT.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_it_IT.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,9 +41,21 @@\n         <source>&amp;Delete</source>\n         <translation>Cancella</translation>\n     </message>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Scegli l'indirizzo a cui inviare denaro</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>Scegli</translation>\n+    </message>\n     </context>\n <context>\n     <name>AddressTableModel</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>AskPassphraseDialog</name>\n@@ -132,6 +144,10 @@\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n@@ -168,6 +184,10 @@\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>Indirizzo</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "7844093e3bb645e0e7dd6726328157d2b6c5f4aa",
        "filename": "src/qt/locale/bitcoin_ms_MY.ts",
        "status": "modified",
        "additions": 333,
        "deletions": 5,
        "changes": 338,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_ms_MY.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_ms_MY.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ms_MY.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,6 +1,10 @@\n <TS language=\"ms_MY\" version=\"2.1\">\n <context>\n     <name>AddressBookPage</name>\n+    <message>\n+        <source>Right-click to edit address or label</source>\n+        <translation>Klik-kanan untuk edit alamat ataupun label</translation>\n+    </message>\n     <message>\n         <source>Create a new address</source>\n         <translation>Cipta alamat baru</translation>\n@@ -17,6 +21,10 @@\n         <source>&amp;Copy</source>\n         <translation>&amp;Salin</translation>\n     </message>\n+    <message>\n+        <source>C&amp;lose</source>\n+        <translation>&amp;Tutup</translation>\n+    </message>\n     <message>\n         <source>Delete the currently selected address from the list</source>\n         <translation>Padam alamat semasa yang dipilih dari senaraiyang dipilih dari senarai</translation>\n@@ -34,25 +42,301 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>&amp;Delete</source>\n         <translation>&amp;Padam</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Pilih alamat untuk hantar koin kepada</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Pilih alamat untuk menerima koin dengan</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>&amp;Pilih</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>alamat-alamat penghantaran</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>alamat-alamat penerimaan</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Ini adalah alamat Bitcoin anda untuk pembayaran. Periksa jumlah dan alamat penerima sebelum membuat penghantaran koin sentiasa.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Ini adalah alamat Bitcoin anda untuk menerima pembayaraan.  Anda disyorkan untuk menguna alamat menerima untuk setiap transaksi.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Salin Aamat</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Salin &amp; Label</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Edit</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eskport Senarai Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Fail dibahagi oleh koma(*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Mengeksport Gagal</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Terdapat ralat semasa cubaan menyimpan senarai alamat kepada %1. Sila cuba lagi.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n-    </context>\n+    <message>\n+        <source>Passphrase Dialog</source>\n+        <translation>Dialog frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>Enter passphrase</source>\n+        <translation>memasukkan frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>New passphrase</source>\n+        <translation>Frasa laluan baru</translation>\n+    </message>\n+    <message>\n+        <source>Repeat new passphrase</source>\n+        <translation>Ulangi frasa laluan baru</translation>\n+    </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Memasukkan frasa laluan baru kepada dompet.&lt;br/&gt;Sila mengunakkan frasa laluan yang&lt;b&gt;mengandungi 10 atau lebih aksara rawak&lt;/b&gt;,ataupun&lt;b&gt;lapan atau lebih perkataan.&lt;/b&gt;</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Dompet encrypt</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>Operasi ini perlukan frasa laluan dompet anda untuk membuka kunci dompet.</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>Membuka kunci dompet</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>Operasi ini memerlukan frasa laluan dompet anda untuk menyahsulit dompet.</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>Menyahsulit dompet</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Menukar frasa laluan</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Memasukkan frasa laluan lama dan frasa laluan baru untuk.</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>Mengesahkan enkripsi dompet</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>Amaran: Jika anda enkripkan dompet anda dan hilangkan frasa laluan, anda akan &lt;b&gt;ANDA AKAN HILANGKAN SEMUA BITCOIN ANDA&lt;/b&gt;!</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Anda pasti untuk membuat enkripsi dompet anda?</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Dompet dienkripsi</translation>\n+    </message>\n+    <message>\n+        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>%1 akan tutup untuk menyelesaikan proses enkripsi. Ingat bahawa enkripsi tidak boleh melidungi sepenuhnya bitcoins anda daripada dicuri oleh malware yang menjangkiti komputer anda.</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>PENTING: Apa-apa sandaran yang anda buat sebelum ini untuk fail dompet anda hendaklah digantikan dengan fail dompet enkripsi yang dijana baru. Untuk sebab-sebab keselamatan , sandaran fail dompet yang belum dibuat enkripsi sebelum ini akan menjadi tidak berguna secepat anda mula guna dompet enkripsi baru.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>Enkripsi dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>Enkripsi dompet gagal kerana ralat dalaman. Dompet anda tidak dienkripkan.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>Frasa laluan yang dibekalkan tidak sepadan.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Pembukaan kunci dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>Frasa laluan dimasukki untuk dekripsi dompet adalah tidak betul.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>Dekripsi dompet gagal</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>Frasa laluan dompet berjaya ditukar.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>Amaran: Kunci Caps Lock buka!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n-    </context>\n+    <message>\n+        <source>IP/Netmask</source>\n+        <translation>IP/Netmask</translation>\n+    </message>\n+    <message>\n+        <source>Banned Until</source>\n+        <translation>Diharamkan sehingga</translation>\n+    </message>\n+</context>\n <context>\n     <name>BitcoinGUI</name>\n+    <message>\n+        <source>Sign &amp;message...</source>\n+        <translation>Tandatangan &amp; mesej...</translation>\n+    </message>\n+    <message>\n+        <source>Synchronizing with network...</source>\n+        <translation>Penyegerakan dengan rangkaian...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Overview</source>\n+        <translation>&amp;Gambaran Keseluruhan</translation>\n+    </message>\n+    <message>\n+        <source>Node</source>\n+        <translation>Nod</translation>\n+    </message>\n+    <message>\n+        <source>Show general overview of wallet</source>\n+        <translation>Tunjuk gambaran keseluruhan umum dompet</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Transactions</source>\n+        <translation>&amp;Transaksi</translation>\n+    </message>\n+    <message>\n+        <source>Browse transaction history</source>\n+        <translation>Menyemak imbas sejarah transaksi </translation>\n+    </message>\n+    <message>\n+        <source>E&amp;xit</source>\n+        <translation>&amp;Keluar</translation>\n+    </message>\n+    <message>\n+        <source>Quit application</source>\n+        <translation>Berhenti aplikasi</translation>\n+    </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>&amp;Mengenai%1</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>Menunjuk informasi mengenai%1</translation>\n+    </message>\n+    <message>\n+        <source>About &amp;Qt</source>\n+        <translation>Mengenai &amp;Qt</translation>\n+    </message>\n+    <message>\n+        <source>Show information about Qt</source>\n+        <translation>Menunjuk informasi megenai Qt</translation>\n+    </message>\n     <message>\n         <source>&amp;Options...</source>\n         <translation>Pilihan</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>Mengubah suai pilihan konfigurasi untuk %1</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Encrypt Wallet...</source>\n+        <translation>&amp;Enkripsi Dompet</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Backup Wallet...</source>\n+        <translation>&amp;Dompet Sandaran...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Change Passphrase...</source>\n+        <translation>&amp;Menukar frasa-laluan</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Sending addresses...</source>\n+        <translation>&amp;Menghantar frasa-laluan</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Receiving addresses...</source>\n+        <translation>&amp;Menerima frasa-laluan...</translation>\n+    </message>\n+    <message>\n+        <source>Open &amp;URI...</source>\n+        <translation>Buka &amp;URI...</translation>\n+    </message>\n+    <message>\n+        <source>Reindexing blocks on disk...</source>\n+        <translation>Reindexi blok pada cakera...</translation>\n+    </message>\n+    <message>\n+        <source>Send coins to a Bitcoin address</source>\n+        <translation>Menghantar koin kepada alamat Bitcoin</translation>\n+    </message>\n+    <message>\n+        <source>Backup wallet to another location</source>\n+        <translation>Wallet sandaran ke lokasi lain</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -113,17 +397,37 @@ Alihkan fail data ke dalam tab semasa</translation>\n         <source>Copy &amp;Address</source>\n         <translation>&amp;Salin Alamat</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n         <source>Balance:</source>\n         <translation>Baki</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     </context>\n@@ -150,9 +454,33 @@ Alihkan fail data ke dalam tab semasa</translation>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(tiada label)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Fail dibahagi oleh koma(*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Label</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Alamat</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Mengeksport Gagal</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "d0f82b2d89cb0c87e36852d33865e9713759a5cf",
        "filename": "src/qt/locale/bitcoin_nb.ts",
        "status": "modified",
        "additions": 135,
        "deletions": 3,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_nb.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_nb.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_nb.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,10 +41,74 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Slett</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Velg adressen \u00e5 sende mynter til</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Velg adressen til \u00e5 motta mynter med</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Utsendingsadresser</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Mottaksadresser</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Dette er dine Bitcoin-adresser for sending av betalinger. Sjekk alltid bel\u00f8pet og mottakeradressen f\u00f8r sending av mynter.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Dette er dine Bitcoin-adresser for \u00e5 sende betalinger med. Det er anbefalt \u00e5 bruke en ny mottaksadresse for hver transaksjon.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kopier Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kopier &amp;Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Rediger</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Eksporter adresseliste</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Kommaseparert fil (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportering feilet</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Det oppstod en feil under lagring av adresselisten til %1. Vennligst pr\u00f8v p\u00e5 nytt.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,6 +127,26 @@\n         <source>Repeat new passphrase</source>\n         <translation>Gjenta ny adgangsfrase</translation>\n     </message>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Oppgi adgangsfrasen til lommeboken.&lt;br/&gt;Vennligst bruk en adgangsfrase med &lt;b&gt;ti eller flere tilfeldige tegn&lt;/b&gt;, eller &lt;b&gt;\u00e5tte eller flere ord&lt;/b&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Krypter lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>L\u00e5s opp lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>Dekrypter lommebok</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Endre adgangsfrase</translation>\n+    </message>\n     </context>\n <context>\n     <name>BanTableModel</name>\n@@ -422,6 +506,10 @@\n         <source>Confirmed</source>\n         <translation>Bekreftet</translation>\n     </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -1302,9 +1390,25 @@\n         <source>&amp;Save Image...</source>\n         <translation>&amp;Lagre Bilde...</translation>\n     </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n@@ -1448,7 +1552,11 @@\n         <source>S&amp;end</source>\n         <translation>S&amp;end</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     <message>\n@@ -1651,9 +1759,33 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(ingen merkelapp)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>Kommaseparert fil (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Merkelapp</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresse</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Eksportering feilet</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>"
      },
      {
        "sha": "6d6d6718fa77db9281fe88e178d34c379dbc9cf9",
        "filename": "src/qt/locale/bitcoin_pl.ts",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_pl.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_pl.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_pl.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -419,7 +419,7 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n active connection(s) to Bitcoin network</source>\n-        <translation><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform></translation>\n+        <translation><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform><numerusform>%n aktywnych po\u0142\u0105cze\u0144 do sieci Bitcoin</numerusform></translation>\n     </message>\n     <message>\n         <source>Indexing blocks on disk...</source>\n@@ -431,7 +431,7 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>Processed %n block(s) of transaction history.</source>\n-        <translation><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform></translation>\n+        <translation><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform><numerusform>Przetworzono %n blok\u00f3w historii transakcji.</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 behind</source>\n@@ -832,11 +832,11 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n GB of free space available</source>\n-        <translation><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform></translation>\n+        <translation><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform><numerusform>%n GB dost\u0119pnego wolnego miejsca</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>(of %n GB needed)</source>\n-        <translation><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform></translation>\n+        <translation><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform><numerusform>(z %n GB potrzebnych)</numerusform></translation>\n     </message>\n </context>\n <context>\n@@ -1325,11 +1325,11 @@\n     </message>\n     <message numerus=\"yes\">\n         <source>%n second(s)</source>\n-        <translation><numerusform>%n sekunda</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform></translation>\n+        <translation><numerusform>%n sekunda</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform><numerusform>%n sekund</numerusform></translation>\n     </message>\n     <message numerus=\"yes\">\n         <source>%n minute(s)</source>\n-        <translation><numerusform>%n minuta</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform></translation>\n+        <translation><numerusform>%n minuta</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform><numerusform>%n minut</numerusform></translation>\n     </message>\n     <message>\n         <source>%1 and %2</source>"
      },
      {
        "sha": "7d013416ff76b9f7087dcba43ef740b2753f7162",
        "filename": "src/qt/locale/bitcoin_ru.ts",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_ru.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_ru.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_ru.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -329,6 +329,10 @@\n         <source>Click to enable network activity again.</source>\n         <translation>\u041a\u043b\u0438\u043a\u043d\u0438\u0442\u0435, \u0447\u0442\u043e\u0431\u044b \u0441\u043d\u043e\u0432\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0441\u0435\u0442\u0435\u0432\u0443\u044e \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c.</translation>\n     </message>\n+    <message>\n+        <source>Syncing Headers (%1%)...</source>\n+        <translation>\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432 (%1%)...</translation>\n+    </message>\n     <message>\n         <source>Reindexing blocks on disk...</source>\n         <translation>\u0418\u0434\u0451\u0442 \u043f\u0435\u0440\u0435\u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0446\u0438\u044f \u0431\u043b\u043e\u043a\u043e\u0432 \u043d\u0430 \u0434\u0438\u0441\u043a\u0435...</translation>\n@@ -3089,6 +3093,14 @@\n         <source>Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)</source>\n         <translation>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u0443, \u043a\u043e\u0433\u0434\u0430 \u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f \u0432 \u0431\u0443\u043c\u0430\u0436\u043d\u0438\u043a\u0435 (%s \u0432 \u043a\u043e\u043c\u0430\u043d\u0434\u0435 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 TxID)</translation>\n     </message>\n+    <message>\n+        <source>Extra transactions to keep in memory for compact block reconstructions (default: %u)</source>\n+        <translation>\u0425\u0440\u0430\u043d\u0438\u0442\u044c \u0432 \u043f\u0430\u043c\u044f\u0442\u0438 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0435\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u)</translation>\n+    </message>\n+    <message>\n+        <source>If this block is in the chain assume that it and its ancestors are valid and potentially skip their script verification (0 to verify all, default: %s, testnet: %s)</source>\n+        <translation>\u0415\u0441\u043b\u0438 \u044d\u0442\u043e\u0442 \u0431\u043b\u043e\u043a \u0432 \u0446\u0435\u043f\u0438, \u0441\u0447\u0438\u0442\u0430\u0442\u044c \u0435\u0433\u043e \u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0431\u043b\u043e\u043a\u0438 \u0432\u0435\u0440\u043d\u044b\u043c\u0438 \u0438 \u043f\u043e\u0442\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0442\u044c \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438\u0445 \u0441\u043a\u0440\u0438\u043f\u0442\u043e\u0432 (0 \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0432\u0441\u0435\u0445, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s, \u0442\u0435\u0441\u0442\u043e\u0432\u0430\u044f \u0441\u0435\u0442\u044c: %s)</translation>\n+    </message>\n     <message>\n         <source>Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)</source>\n         <translation>\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u043e\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0435 \u043e\u0442\u043a\u043b\u043e\u043d\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432. \u041b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043c\u043e\u0436\u0435\u0442 \u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0432\u043f\u0435\u0440\u0435\u0434 \u0438\u043b\u0438 \u043d\u0430\u0437\u0430\u0434 \u043d\u0430 \u044d\u0442\u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %u \u0441\u0435\u043a\u0443\u043d\u0434)</translation>\n@@ -3105,6 +3117,14 @@\n         <source>Please contribute if you find %s useful. Visit %s for further information about the software.</source>\n         <translation>\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u043d\u0435\u0441\u0442\u0438 \u0441\u0432\u043e\u0439 \u0432\u043a\u043b\u0430\u0434, \u0435\u0441\u043b\u0438 \u0432\u044b \u043d\u0430\u0439\u0434\u0435\u0442\u0435 %s \u043f\u043e\u043b\u0435\u0437\u043d\u044b\u043c\u0438. \u041f\u043e\u0441\u0435\u0442\u0438\u0442\u0435  %s \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u043e\u043c \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u0438.</translation>\n     </message>\n+    <message>\n+        <source>Reduce storage requirements by enabling pruning (deleting) of old blocks. This allows the pruneblockchain RPC to be called to delete specific blocks, and enables automatic pruning of old blocks if a target size in MiB is provided. This mode is incompatible with -txindex and -rescan. Warning: Reverting this setting requires re-downloading the entire blockchain. (default: 0 = disable pruning blocks, 1 = allow manual pruning via RPC, &gt;%u = automatically prune block files to stay under the specified target size in MiB)</source>\n+        <translation>\u0423\u043c\u0435\u043d\u044c\u0448\u0438\u0442\u044c \u0440\u0430\u0437\u043c\u0435\u0440 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0437\u0430 \u0441\u0447\u0451\u0442 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u044f (\u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f) \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432. \u0411\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0451\u043d \u0432\u044b\u0437\u043e\u0432 RPC \u043c\u0435\u0442\u043e\u0434\u0430 pruneblockchain \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 \u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043e \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432, \u0435\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0446\u0435\u043b\u0435\u0432\u043e\u0439 \u0440\u0430\u0437\u043c\u0435\u0440 \u0432 \u041c\u0431. \u042d\u0442\u043e\u0442 \u0440\u0435\u0436\u0438\u043c \u043d\u0435\u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c \u0441 -txindex \u0438 -rescan. \u0412\u043d\u0438\u043c\u0430\u043d\u0438\u0435: \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u043e\u043f\u0446\u0438\u0438 \u043e\u0431\u0440\u0430\u0442\u043d\u043e \u043f\u043e\u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043f\u043e\u043b\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0446\u0435\u043f\u0438 \u0431\u043b\u043e\u043a\u043e\u0432. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0 = \u043e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0431\u043b\u043e\u043a\u043e\u0432, 1 = \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442\u044c \u0440\u0443\u0447\u043d\u043e\u0435 \u043e\u0431\u0440\u0435\u0437\u0430\u043d\u0438\u0435 \u0447\u0435\u0440\u0435\u0437 RPC, &gt;%u = \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0440\u0435\u0437\u0430\u0442\u044c \u0444\u0430\u0439\u043b\u044b \u0431\u043b\u043e\u043a\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u043d\u0438 \u0431\u044b\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u043c\u0435\u0440\u0430 \u0432 \u041c\u0431)</translation>\n+    </message>\n+    <message>\n+        <source>Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)</source>\n+        <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043a\u0443\u0440\u0441 \u043a\u043e\u043c\u0438\u0441\u0441\u0438\u0438 (\u0432 %s/\u041a\u0431) \u0434\u043b\u044f  \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0439\u0431 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u0432 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0435\u043c\u044b\u0439 \u0431\u043b\u043e\u043a. (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %s)</translation>\n+    </message>\n     <message>\n         <source>Set the number of script verification threads (%u to %d, 0 = auto, &lt;0 = leave that many cores free, default: %d)</source>\n         <translation>\u0417\u0430\u0434\u0430\u0442\u044c \u0447\u0438\u0441\u043b\u043e \u043f\u043e\u0442\u043e\u043a\u043e\u0432 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u0441\u043a\u0440\u0438\u043f\u0442\u0430 (\u043e\u0442 %u \u0434\u043e %d, 0=\u0430\u0432\u0442\u043e, &lt;0 = \u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0441\u0442\u043e\u043b\u044c\u043a\u043e \u044f\u0434\u0435\u0440 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u043c\u0438, \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: %d)</translation>"
      },
      {
        "sha": "3cd287d3add81a2ddf9c49fbbcbae188cfc7fc11",
        "filename": "src/qt/locale/bitcoin_sk.ts",
        "status": "modified",
        "additions": 1089,
        "deletions": 29,
        "changes": 1118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_sk.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_sk.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sk.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,9 +41,73 @@\n         <source>&amp;Delete</source>\n         <translation>&amp;Zmaza\u0165</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>Zvo\u013ete adresu kam posla\u0165 mince</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>Zvo\u013ete adresu na ktor\u00fa chcete prija\u0165 mince</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>Vybra\u0165</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>Odosielaj\u00face adresy</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>Prij\u00edmaj\u00face adresy</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for sending payments. Always check the amount and the receiving address before sending coins.</source>\n+        <translation>Toto s\u00fa Va\u0161e Bitcoin adresy pre posielanie platieb. V\u017edy skontrolujte sumu a prij\u00edmaciu adresu pred poslan\u00edm minc\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>These are your Bitcoin addresses for receiving payments. It is recommended to use a new receiving address for each transaction.</source>\n+        <translation>Toto s\u00fa va\u0161e Bitcoin adresy pre prij\u00edmanie platieb. Odpor\u00fa\u010da sa pou\u017ei\u0165 v\u017edy nov\u00fa prij\u00edmaciu adresu pre ka\u017ed\u00fa transakciu.</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>&amp;Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>Kop\u00edrova\u0165 &amp;popis</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>&amp;Upravi\u0165</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>Exportova\u0165 zoznam adries</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u010ciarkou oddelovan\u00fd s\u00fabor (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Export zlyhal</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>Nastala chyba pri pokuse ulo\u017ei\u0165 zoznam adries do %1. Sk\u00faste znovu.</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n@@ -67,7 +131,87 @@\n         <source>Repeat new passphrase</source>\n         <translation>Zopakujte nov\u00e9 heslo</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Enter the new passphrase to the wallet.&lt;br/&gt;Please use a passphrase of &lt;b&gt;ten or more random characters&lt;/b&gt;, or &lt;b&gt;eight or more words&lt;/b&gt;.</source>\n+        <translation>Zadajte nov\u00e9 heslo k pe\u0148a\u017eenke.&lt;br/&gt;Pros\u00edm pou\u017eite heslo s d\u013a\u017ekou &lt;b&gt;desa\u0165 alebo viac n\u00e1hodn\u00fdch znakov&lt;/b&gt;, pr\u00edpadne &lt;b&gt;osem alebo viac slov&lt;/b&gt;.</translation>\n+    </message>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>Za\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>T\u00e1to oper\u00e1cia potrebuje heslo k va\u0161ej pe\u0148a\u017eenke aby ju mohla odomkn\u00fa\u0165.</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>Odomkn\u00fa\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>T\u00e1to oper\u00e1cia potrebuje heslo k va\u0161ej pe\u0148a\u017eenke na de\u0161ifrovanie pe\u0148a\u017eenky.</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>De\u0161ifrova\u0165 pe\u0148a\u017eenku</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>Zmena hesla</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>Zadajte star\u00e9 heslo a nov\u00e9 heslo k pe\u0148a\u017eenke.</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>Potvr\u010fte za\u0161ifrovanie pe\u0148a\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>Ste si ist\u00ed, \u017ee si \u017eel\u00e1te za\u0161ifrova\u0165 pe\u0148a\u017eenku?</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>Pe\u0148a\u017eenka za\u0161ifrovan\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>D\u00d4LE\u017dIT\u00c9: V\u0161etky predch\u00e1dzaj\u00face z\u00e1lohy va\u0161ej pe\u0148a\u017eenky, ktor\u00e9 ste vykonali by mali by\u0165 nahraden\u00e9 novo vytvorenou, za\u0161ifrovanou pe\u0148a\u017eenkou. Z bezpe\u010dnostn\u00fdch d\u00f4vodov bude predch\u00e1dzaj\u00faca z\u00e1loha neza\u0161ifrovanej pe\u0148a\u017eenky k ni\u010domu, akon\u00e1hle za\u010dnete pou\u017e\u00edva\u0165 nov\u00fa, za\u0161ifrovan\u00fa pe\u0148a\u017eenku.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u0160ifrovanie pe\u0148a\u017eenky zlyhalo</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u0160ifrovanie pe\u0148a\u017eenky zlyhalo k\u00f4li internej chybe. Va\u0161a pe\u0148a\u017eenka nebola za\u0161ifrovan\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>Zadan\u00e9 hesl\u00e1 nes\u00fahlasia.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>Odomykanie pe\u0148a\u017eenky zlyhalo</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>Zadan\u00e9 heslo pre de\u0161ifrovanie pe\u0148a\u017eenky bolo nespr\u00e1vne.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>Zlyhalo \u0161ifrovanie pe\u0148a\u017eenky.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>Heslo k pe\u0148a\u017eenke bolo \u00faspe\u0161ne zmenen\u00e9.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>Upozornenie: M\u00e1te zapnut\u00fd Caps Lock!</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n     <message>\n@@ -438,11 +582,83 @@\n         <source>Confirmed</source>\n         <translation>Potvrden\u00e9</translation>\n     </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kop\u00edrova\u0165 ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Lock unspent</source>\n+        <translation>Uzamkn\u00fa\u0165 neminut\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Unlock unspent</source>\n+        <translation>Odomkn\u00fa\u0165 neminut\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Copy quantity</source>\n+        <translation>Kop\u00edrova\u0165 mno\u017estvo</translation>\n+    </message>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Kop\u00edrova\u0165 poplatok</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Kop\u00edrova\u0165 po poplatkoch</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Kop\u00edrova\u0165 bajty</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kop\u00edrova\u0165 prach</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Kop\u00edrova\u0165 zmenu</translation>\n+    </message>\n+    <message>\n+        <source>(%1 locked)</source>\n+        <translation>(%1 zamknut\u00fdch)</translation>\n+    </message>\n+    <message>\n+        <source>yes</source>\n+        <translation>\u00e1no</translation>\n+    </message>\n+    <message>\n+        <source>no</source>\n+        <translation>nie</translation>\n+    </message>\n+    <message>\n+        <source>This label turns red if any recipient receives an amount smaller than the current dust threshold.</source>\n+        <translation>Tento popis s\u010dervenie ak ktor\u00fdko\u013evek pr\u00edjemca dostane sumu men\u0161iu ako s\u00fa\u010dasn\u00fd limit pre \"prach\".</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>change from %1 (%2)</source>\n+        <translation>zmena od %1 (%2)</translation>\n+    </message>\n+    <message>\n+        <source>(change)</source>\n+        <translation>(zmena)</translation>\n+    </message>\n+</context>\n <context>\n     <name>EditAddressDialog</name>\n     <message>\n@@ -465,7 +681,39 @@\n         <source>&amp;Address</source>\n         <translation>&amp;Adresa</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>New receiving address</source>\n+        <translation>Nov\u00e1 adresa pre prij\u00edmanie</translation>\n+    </message>\n+    <message>\n+        <source>New sending address</source>\n+        <translation>Nov\u00e1 adresa pre odoslanie</translation>\n+    </message>\n+    <message>\n+        <source>Edit receiving address</source>\n+        <translation>Upravi\u0165 prij\u00edmaj\u00facu adresu</translation>\n+    </message>\n+    <message>\n+        <source>Edit sending address</source>\n+        <translation>Upravi\u0165 odosielaciu adresu</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is not a valid Bitcoin address.</source>\n+        <translation>Vlo\u017een\u00e1 adresa \"%1\" nieje platnou adresou Bitcoin.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address \"%1\" is already in the address book.</source>\n+        <translation>Vlo\u017een\u00e1 adresa \"%1\" sa u\u017e nach\u00e1dza v adres\u00e1ri.</translation>\n+    </message>\n+    <message>\n+        <source>Could not unlock wallet.</source>\n+        <translation>Nepodarilo sa odomkn\u00fa\u0165 pe\u0148a\u017eenku.</translation>\n+    </message>\n+    <message>\n+        <source>New key generation failed.</source>\n+        <translation>Generovanie nov\u00e9ho k\u013e\u00fa\u010da zlyhalo.</translation>\n+    </message>\n+</context>\n <context>\n     <name>FreespaceChecker</name>\n     <message>\n@@ -597,6 +845,10 @@\n         <source>Last block time</source>\n         <translation>\u010cas posledn\u00e9ho bloku</translation>\n     </message>\n+    <message>\n+        <source>Estimated time left until synced</source>\n+        <translation>Odhadovan\u00fd \u010das do ukon\u010denia synchroniz\u00e1cie</translation>\n+    </message>\n     <message>\n         <source>Hide</source>\n         <translation>Skry\u0165</translation>\n@@ -620,7 +872,11 @@\n         <source>Select payment request file</source>\n         <translation>Vyberte s\u00fabor s v\u00fdzvou k platbe</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Select payment request file to open</source>\n+        <translation>Vyberte ktor\u00fd s\u00fabor s v\u00fdzvou na platbu otvori\u0165</translation>\n+    </message>\n+</context>\n <context>\n     <name>OptionsDialog</name>\n     <message>\n@@ -933,7 +1189,91 @@\n </context>\n <context>\n     <name>PaymentServer</name>\n-    </context>\n+    <message>\n+        <source>Payment request error</source>\n+        <translation>Chyba pri vy\u017eiadan\u00ed platby</translation>\n+    </message>\n+    <message>\n+        <source>URI handling</source>\n+        <translation>URI manipul\u00e1cia</translation>\n+    </message>\n+    <message>\n+        <source>Payment request fetch URL is invalid: %1</source>\n+        <translation>URL pre stiahnutie v\u00fdzvy na zaplatenie je neplatn\u00e9: %1</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment address %1</source>\n+        <translation>Neplatn\u00e1 adresa platby %1</translation>\n+    </message>\n+    <message>\n+        <source>URI cannot be parsed! This can be caused by an invalid Bitcoin address or malformed URI parameters.</source>\n+        <translation>URI sa ned\u00e1 analyzova\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 neplatnou Bitcoin adresou alebo zle nastaven\u00fdmi vlastnos\u0165ami URI.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file handling</source>\n+        <translation>Obsluha s\u00faboru s po\u017eiadavkou na platbu</translation>\n+    </message>\n+    <message>\n+        <source>Payment request file cannot be read! This can be caused by an invalid payment request file.</source>\n+        <translation>S\u00fabor s v\u00fdzvou na zaplatenie sa ned\u00e1 \u010d\u00edta\u0165! To m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 aj neplatn\u00fdm s\u00faborom s v\u00fdzvou.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request rejected</source>\n+        <translation>Po\u017eiadavka na platbu zamietnut\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Payment request network doesn't match client network.</source>\n+        <translation>Sie\u0165 po\u017eiadavky na platbu nie je zhodn\u00e1 so sie\u0165ou klienta.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n+    <message>\n+        <source>Payment request is not initialized.</source>\n+        <translation>Po\u017eiadavka na platbu nie je inicializovan\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Unverified payment requests to custom payment scripts are unsupported.</source>\n+        <translation>Program nepodporuje neoveren\u00e9 platobn\u00e9 po\u017eiadavky na vlastn\u00e9 skripty.</translation>\n+    </message>\n+    <message>\n+        <source>Invalid payment request.</source>\n+        <translation>Chybn\u00e1 po\u017eiadavka na platbu.</translation>\n+    </message>\n+    <message>\n+        <source>Requested payment amount of %1 is too small (considered dust).</source>\n+        <translation>Po\u017eadovan\u00e1 suma platby %1 je pr\u00edli\u0161 n\u00edzka (pova\u017eovan\u00e1 za prach).</translation>\n+    </message>\n+    <message>\n+        <source>Refund from %1</source>\n+        <translation>Vr\u00e1tenie z  %1</translation>\n+    </message>\n+    <message>\n+        <source>Payment request %1 is too large (%2 bytes, allowed %3 bytes).</source>\n+        <translation>Po\u017eiadavka na platbu %1 je pr\u00edli\u0161 ve\u013ek\u00e1 (%2 bajtov, povolen\u00e9 je %3 bajtov).</translation>\n+    </message>\n+    <message>\n+        <source>Error communicating with %1: %2</source>\n+        <translation>Chyba komunik\u00e1cie s %1: %2 </translation>\n+    </message>\n+    <message>\n+        <source>Payment request cannot be parsed!</source>\n+        <translation>Po\u017eiadavka na platbu nem\u00f4\u017ee by\u0165 analyzovan\u00e1!</translation>\n+    </message>\n+    <message>\n+        <source>Bad response from server %1</source>\n+        <translation>Zl\u00e1 odpove\u010f zo servera %1</translation>\n+    </message>\n+    <message>\n+        <source>Network request error</source>\n+        <translation>Chyba po\u017eiadavky siete</translation>\n+    </message>\n+    <message>\n+        <source>Payment acknowledged</source>\n+        <translation>Platba potvrden\u00e1</translation>\n+    </message>\n+</context>\n <context>\n     <name>PeerTableModel</name>\n     <message>\n@@ -983,17 +1323,41 @@\n         <source>%1 ms</source>\n         <translation>%1 ms</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n t\u00fd\u017ede\u0148</numerusform><numerusform>%n t\u00fd\u017edne</numerusform><numerusform>%n t\u00fd\u017ed\u0148ov</numerusform></translation>\n+    </message>\n     <message>\n         <source>%1 and %2</source>\n         <translation> %1 a  %2</translation>\n     </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n rok</numerusform><numerusform>%n roky</numerusform><numerusform>%n rokov</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>&amp;Save Image...</source>\n+        <translation>Ulo\u017ei\u0165 obr\u00e1zok...</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Image</source>\n+        <translation>Kop\u00edrova\u0165 obr\u00e1zok</translation>\n+    </message>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>Ulo\u017ei\u0165 QR Code</translation>\n+    </message>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>PNG obr\u00e1zok (*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n     <message>\n@@ -1022,7 +1386,7 @@\n     </message>\n     <message>\n         <source>Datadir</source>\n-        <translation>Zlo\u017eka  s d\u00e1tami</translation>\n+        <translation>Prie\u010dinok s d\u00e1tami</translation>\n     </message>\n     <message>\n         <source>Startup time</source>\n@@ -1225,6 +1589,10 @@\n         <source>Type &lt;b&gt;help&lt;/b&gt; for an overview of available commands.</source>\n         <translation>Nap\u00ed\u0161 &lt;b&gt;help&lt;/b&gt; pre preh\u013ead dostupn\u00fdch pr\u00edkazov.</translation>\n     </message>\n+    <message>\n+        <source>WARNING: Scammers have been active, telling users to type commands here, stealing their wallet contents. Do not use this console without fully understanding the ramification of a command.</source>\n+        <translation>VAROVANIE: Podvodn\u00edci s\u00fa akt\u00edvni a m\u00f4\u017eu nab\u00e1da\u0165 pou\u017e\u00edvate\u013eov nap\u00edsa\u0165 sem pr\u00edkazy, pomocou ktor\u00fdch ukradn\u00fa ich obsah pe\u0148a\u017eenky. Nepou\u017e\u00edvajte t\u00fato konzolu ak nerozumiete presne \u00fa\u010dinkom pr\u00edkazov.</translation>\n+    </message>\n     <message>\n         <source>%1 B</source>\n         <translation>%1 B</translation>\n@@ -1344,7 +1712,19 @@\n         <source>Remove</source>\n         <translation>Odstr\u00e1ni\u0165</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy message</source>\n+        <translation>Kop\u00edrova\u0165 spr\u00e1vu</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+</context>\n <context>\n     <name>ReceiveRequestDialog</name>\n     <message>\n@@ -1363,14 +1743,74 @@\n         <source>&amp;Save Image...</source>\n         <translation>Ulo\u017ei\u0165 obr\u00e1zok...</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Request payment to %1</source>\n+        <translation>Vy\u017eiada\u0165 platbu pre %1</translation>\n+    </message>\n+    <message>\n+        <source>Payment information</source>\n+        <translation>Inform\u00e1cia o platbe</translation>\n+    </message>\n+    <message>\n+        <source>URI</source>\n+        <translation>URI</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Suma</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Resulting URI too long, try to reduce the text for label / message.</source>\n+        <translation>V\u00fdsledn\u00e9 URI je pr\u00edli\u0161 dlh\u00e9, sk\u00faste skr\u00e1ti\u0165 text pre popis alebo spr\u00e1vu.</translation>\n+    </message>\n+    <message>\n+        <source>Error encoding URI into QR Code.</source>\n+        <translation>Chyba k\u00f3dovania URI do QR Code.</translation>\n+    </message>\n+</context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>(no message)</source>\n+        <translation>(\u017eiadna spr\u00e1va)</translation>\n+    </message>\n+    <message>\n+        <source>(no amount requested)</source>\n+        <translation>(nepo\u017eadovan\u00e1 \u017eiadna suma)</translation>\n+    </message>\n+    <message>\n+        <source>Requested</source>\n+        <translation>Po\u017eadovan\u00e9</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsDialog</name>\n     <message>\n@@ -1497,6 +1937,10 @@\n         <source>Dust:</source>\n         <translation>Prach:</translation>\n     </message>\n+    <message>\n+        <source>Confirmation time target:</source>\n+        <translation>Cie\u013eov\u00fd \u010das potvrdenia:</translation>\n+    </message>\n     <message>\n         <source>Clear &amp;All</source>\n         <translation>&amp;Zmaza\u0165 v\u0161etko</translation>\n@@ -1514,16 +1958,108 @@\n         <translation>&amp;Odosla\u0165</translation>\n     </message>\n     <message>\n-        <source>or</source>\n-        <translation>alebo</translation>\n+        <source>Copy quantity</source>\n+        <translation>Kop\u00edrova\u0165 mno\u017estvo</translation>\n     </message>\n     <message>\n-        <source>(no label)</source>\n-        <translation>(bez popisu)</translation>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n     </message>\n-</context>\n-<context>\n-    <name>SendCoinsEntry</name>\n+    <message>\n+        <source>Copy fee</source>\n+        <translation>Kop\u00edrova\u0165 poplatok</translation>\n+    </message>\n+    <message>\n+        <source>Copy after fee</source>\n+        <translation>Kop\u00edrova\u0165 po poplatkoch</translation>\n+    </message>\n+    <message>\n+        <source>Copy bytes</source>\n+        <translation>Kop\u00edrova\u0165 bajty</translation>\n+    </message>\n+    <message>\n+        <source>Copy dust</source>\n+        <translation>Kop\u00edrova\u0165 prach</translation>\n+    </message>\n+    <message>\n+        <source>Copy change</source>\n+        <translation>Kop\u00edrova\u0165 zmenu</translation>\n+    </message>\n+    <message>\n+        <source>%1 to %2</source>\n+        <translation>%1 do %2</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you want to send?</source>\n+        <translation>Ur\u010dite chcete odosla\u0165 transakciu?</translation>\n+    </message>\n+    <message>\n+        <source>Total Amount %1</source>\n+        <translation>Celkov\u00e1 suma %1</translation>\n+    </message>\n+    <message>\n+        <source>or</source>\n+        <translation>alebo</translation>\n+    </message>\n+    <message>\n+        <source>Confirm send coins</source>\n+        <translation>Potvr\u010fte odoslanie minc\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>The recipient address is not valid. Please recheck.</source>\n+        <translation>Adresa pr\u00edjemcu je neplatn\u00e1. Pros\u00edm, overte ju.</translation>\n+    </message>\n+    <message>\n+        <source>The amount to pay must be larger than 0.</source>\n+        <translation>Suma na \u00fahradu mus\u00ed by\u0165 v\u00e4\u010d\u0161ia ako 0.</translation>\n+    </message>\n+    <message>\n+        <source>The amount exceeds your balance.</source>\n+        <translation>Suma je vy\u0161\u0161ia ako V\u00e1\u0161 zostatok.</translation>\n+    </message>\n+    <message>\n+        <source>The total exceeds your balance when the %1 transaction fee is included.</source>\n+        <translation>Celkov\u00e1 suma prevy\u0161uje V\u00e1\u0161 zostatok ak s\u00fa zapo\u010d\u00edtan\u00e9 aj transak\u010dn\u00e9 poplatky %1.</translation>\n+    </message>\n+    <message>\n+        <source>Duplicate address found: addresses should only be used once each.</source>\n+        <translation>Na\u0161la sa duplicitn\u00e1 adresa: ka\u017ed\u00e1 adresa by sa mala pou\u017ei\u0165 len raz.</translation>\n+    </message>\n+    <message>\n+        <source>Transaction creation failed!</source>\n+        <translation>Vytvorenie transakcie zlyhalo!</translation>\n+    </message>\n+    <message>\n+        <source>Payment request expired.</source>\n+        <translation>Vypr\u0161ala platnos\u0165 po\u017eiadavky na platbu.</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>Estimated to begin confirmation within %n block(s).</source>\n+        <translation><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n bloku.</numerusform><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n blokoch.</numerusform><numerusform>Odhadovan\u00fd za\u010diatok potvrdzovania po %n blokoch.</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>Warning: Invalid Bitcoin address</source>\n+        <translation>Varovanie: Neplatn\u00e1 Bitcoin adresa</translation>\n+    </message>\n+    <message>\n+        <source>Warning: Unknown change address</source>\n+        <translation>UPOZORNENIE: Nezn\u00e1ma zmena adresy</translation>\n+    </message>\n+    <message>\n+        <source>Confirm custom change address</source>\n+        <translation>Potvr\u010fte zmenu adresy</translation>\n+    </message>\n+    <message>\n+        <source>The address you selected for change is not part of this wallet. Any or all funds in your wallet may be sent to this address. Are you sure?</source>\n+        <translation>Zadan\u00e1 adresa nie je s\u00fa\u010das\u0165ou tejto pe\u0148a\u017eenky. \u010cas\u0165 alebo v\u0161etky peniaze z pe\u0148a\u017eenky m\u00f4\u017eu by\u0165 odoslan\u00e9 na t\u00fato adresu. Ste si ist\u00fd?</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(bez popisu)</translation>\n+    </message>\n+</context>\n+<context>\n+    <name>SendCoinsEntry</name>\n     <message>\n         <source>A&amp;mount:</source>\n         <translation>Su&amp;ma:</translation>\n@@ -1600,10 +2136,18 @@\n         <source>Memo:</source>\n         <translation>Pozn\u00e1mka:</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Enter a label for this address to add it to your address book</source>\n+        <translation>Zadajte popis pre t\u00fato adresu pre pridanie do adres\u00e1ra</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendConfirmationDialog</name>\n-    </context>\n+    <message>\n+        <source>Yes</source>\n+        <translation>\u00e1no</translation>\n+    </message>\n+</context>\n <context>\n     <name>ShutdownWindow</name>\n     <message>\n@@ -1625,6 +2169,10 @@\n         <source>&amp;Sign Message</source>\n         <translation>&amp;Podp\u00edsa\u0165 Spr\u00e1vu</translation>\n     </message>\n+    <message>\n+        <source>You can sign messages/agreements with your addresses to prove you can receive bitcoins sent to them. Be careful not to sign anything vague or random, as phishing attacks may try to trick you into signing your identity over to them. Only sign fully-detailed statements you agree to.</source>\n+        <translation>M\u00f4\u017eete podp\u00edsa\u0165 spr\u00e1vy svojou adresou a dok\u00e1za\u0165, \u017ee viete prij\u00edma\u0165 mince zaslan\u00e9 na t\u00fato adresu. Bu\u010fte v\u0161ak opatrn\u00ed a podp\u00ed\u0161te len podrobn\u00e9 prehl\u00e1senia, s ktor\u00fdmi plne s\u00fahlas\u00edte, nako\u013eko \u00fatoky typu \"phishing\" V\u00e1s m\u00f4\u017eu l\u00e1ka\u0165 k podp\u00edsaniu nejasn\u00fdch alebo pr\u00edli\u0161 v\u0161eobecn\u00fdch tvrden\u00ed \u010d\u00edm prevezm\u00fa va\u0161u identitu.</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address to sign the message with</source>\n         <translation>Bitcoin adresa pre podp\u00edsanie spr\u00e1vy s</translation>\n@@ -1677,6 +2225,10 @@\n         <source>&amp;Verify Message</source>\n         <translation>O&amp;veri\u0165 spr\u00e1vu...</translation>\n     </message>\n+    <message>\n+        <source>Enter the receiver's address, message (ensure you copy line breaks, spaces, tabs, etc. exactly) and signature below to verify the message. Be careful not to read more into the signature than what is in the signed message itself, to avoid being tricked by a man-in-the-middle attack. Note that this only proves the signing party receives with the address, it cannot prove sendership of any transaction!</source>\n+        <translation>Vlo\u017ete adresu pr\u00edjemcu, spr\u00e1vu (uistite sa, \u017ee presne kop\u00edrujete ukon\u010denia riadkov, medzery, odr\u00e1\u017eky, at\u010f.) a podpis pre potvrdenie spr\u00e1vy. Bu\u010fte opatrn\u00ed a nedom\u00fd\u0161\u013eajte si viac ne\u017e je uveden\u00e9 v samotnej podp\u00edsanej spr\u00e1ve a m\u00f4\u017eete sa tak vyhn\u00fa\u0165 podvodu MITM \u00fatokom. Toto len potvrdzuje, \u017ee podpisuj\u00faca strana m\u00f4\u017ee prij\u00edma\u0165 na tejto adrese, nepotvrdzuje to vlastn\u00edctvo \u017eiadnej transakcie!</translation>\n+    </message>\n     <message>\n         <source>The Bitcoin address the message was signed with</source>\n         <translation>Adresa Bitcoin, ktorou bola podp\u00edsan\u00e1 spr\u00e1va</translation>\n@@ -1693,7 +2245,59 @@\n         <source>Reset all verify message fields</source>\n         <translation>Obnovi\u0165 v\u0161etky polia v overi\u0165 spr\u00e1vu</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Click \"Sign Message\" to generate signature</source>\n+        <translation>Kliknite \"Podp\u00edsa\u0165 spr\u00e1vu\" pre vytvorenie podpisu</translation>\n+    </message>\n+    <message>\n+        <source>The entered address is invalid.</source>\n+        <translation>Zadan\u00e1 adresa je neplatn\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the address and try again.</source>\n+        <translation>Pros\u00edm skontrolujte adresu a sk\u00faste znova.</translation>\n+    </message>\n+    <message>\n+        <source>The entered address does not refer to a key.</source>\n+        <translation>Vlo\u017een\u00e1 adresa nezodpoved\u00e1 \u017eiadnemu k\u013e\u00fa\u010du.</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock was cancelled.</source>\n+        <translation>Odomknutie pe\u0148a\u017eenky bolo zru\u0161en\u00e9.</translation>\n+    </message>\n+    <message>\n+        <source>Private key for the entered address is not available.</source>\n+        <translation>S\u00fakromn\u00fd k\u013e\u00fa\u010d pre zadan\u00fa adresu nieje k dispoz\u00edcii.</translation>\n+    </message>\n+    <message>\n+        <source>Message signing failed.</source>\n+        <translation>Podp\u00edsanie spr\u00e1vy zlyhalo.</translation>\n+    </message>\n+    <message>\n+        <source>Message signed.</source>\n+        <translation>Spr\u00e1va podp\u00edsan\u00e1.</translation>\n+    </message>\n+    <message>\n+        <source>The signature could not be decoded.</source>\n+        <translation>Podpis nie je mo\u017en\u00e9 dek\u00f3dova\u0165.</translation>\n+    </message>\n+    <message>\n+        <source>Please check the signature and try again.</source>\n+        <translation>Pros\u00edm skontrolujte podpis a sk\u00faste znova.</translation>\n+    </message>\n+    <message>\n+        <source>The signature did not match the message digest.</source>\n+        <translation>Podpis sa nezhoduje so zhrnut\u00edm spr\u00e1vy.</translation>\n+    </message>\n+    <message>\n+        <source>Message verification failed.</source>\n+        <translation>Overenie spr\u00e1vy zlyhalo.</translation>\n+    </message>\n+    <message>\n+        <source>Message verified.</source>\n+        <translation>Spr\u00e1va overen\u00e1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>SplashScreen</name>\n     <message>\n@@ -1710,7 +2314,147 @@\n </context>\n <context>\n     <name>TransactionDesc</name>\n-    </context>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>Otvoren\u00e9 do %1</translation>\n+    </message>\n+    <message>\n+        <source>conflicted with a transaction with %1 confirmations</source>\n+        <translation>koliduje s transakciou s %1 potvrdeniami</translation>\n+    </message>\n+    <message>\n+        <source>%1/offline</source>\n+        <translation>%1/offline</translation>\n+    </message>\n+    <message>\n+        <source>0/unconfirmed, %1</source>\n+        <translation>0/nepotvrden\u00e9, %1</translation>\n+    </message>\n+    <message>\n+        <source>%1/unconfirmed</source>\n+        <translation>%1/nepotvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>%1 confirmations</source>\n+        <translation>%1 potvrden\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Status</source>\n+        <translation>Stav</translation>\n+    </message>\n+    <message>\n+        <source>, has not been successfully broadcast yet</source>\n+        <translation>, e\u0161te nebola \u00faspe\u0161ne odoslan\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Source</source>\n+        <translation>Zdroj</translation>\n+    </message>\n+    <message>\n+        <source>Generated</source>\n+        <translation>Vygenerovan\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>From</source>\n+        <translation>Od</translation>\n+    </message>\n+    <message>\n+        <source>unknown</source>\n+        <translation>nezn\u00e1my</translation>\n+    </message>\n+    <message>\n+        <source>To</source>\n+        <translation>do</translation>\n+    </message>\n+    <message>\n+        <source>own address</source>\n+        <translation>vlastn\u00e1 adresa</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n+    <message>\n+        <source>label</source>\n+        <translation>popis</translation>\n+    </message>\n+    <message>\n+        <source>Credit</source>\n+        <translation>Kredit</translation>\n+    </message>\n+    <message>\n+        <source>not accepted</source>\n+        <translation>neprijat\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Debit</source>\n+        <translation>Debet</translation>\n+    </message>\n+    <message>\n+        <source>Total debit</source>\n+        <translation>Celkov\u00fd debet</translation>\n+    </message>\n+    <message>\n+        <source>Total credit</source>\n+        <translation>Celkov\u00fd kredit</translation>\n+    </message>\n+    <message>\n+        <source>Transaction fee</source>\n+        <translation>Transak\u010dn\u00fd poplatok</translation>\n+    </message>\n+    <message>\n+        <source>Net amount</source>\n+        <translation>Suma netto</translation>\n+    </message>\n+    <message>\n+        <source>Message</source>\n+        <translation>Spr\u00e1va</translation>\n+    </message>\n+    <message>\n+        <source>Comment</source>\n+        <translation>Koment\u00e1r</translation>\n+    </message>\n+    <message>\n+        <source>Transaction ID</source>\n+        <translation>ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Merchant</source>\n+        <translation>Kupec</translation>\n+    </message>\n+    <message>\n+        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \"not accepted\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <translation>Vytvoren\u00e9 coins musia dospie\u0165 %1 blokov k\u00fdm m\u00f4\u017eu by\u0165 minut\u00e9. Ke\u010f vytvor\u00edte tento blok, bude rozoslan\u00fd do siete aby bol akceptovan\u00fd do re\u0165aze blokov. Ak sa nedostane re\u0165aze, jeho stav sa zmen\u00ed na \"zamietnut\u00fd\" a nebude sa da\u0165 min\u00fa\u0165. Toto sa m\u00f4\u017ee ob\u010das sta\u0165 ak in\u00e1 n\u00f3da vytvor\u00ed blok pribli\u017ene v tom istom \u010dase.</translation>\n+    </message>\n+    <message>\n+        <source>Debug information</source>\n+        <translation>Ladiace inform\u00e1cie</translation>\n+    </message>\n+    <message>\n+        <source>Transaction</source>\n+        <translation>Transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Inputs</source>\n+        <translation>Vstupy</translation>\n+    </message>\n+    <message>\n+        <source>Amount</source>\n+        <translation>Suma</translation>\n+    </message>\n+    <message>\n+        <source>true</source>\n+        <translation>pravda</translation>\n+    </message>\n+    <message>\n+        <source>false</source>\n+        <translation>nepravda</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionDescDialog</name>\n     <message>\n@@ -1720,14 +2464,254 @@\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>Otvoren\u00e9 do %1</translation>\n+    </message>\n+    <message>\n+        <source>Offline</source>\n+        <translation>Offline</translation>\n+    </message>\n+    <message>\n+        <source>Unconfirmed</source>\n+        <translation>Nepotvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Confirming (%1 of %2 recommended confirmations)</source>\n+        <translation>Potvrdzujem (%1 z %2 odpor\u00fa\u010dan\u00fdch potvrden\u00ed)</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed (%1 confirmations)</source>\n+        <translation>Potvrden\u00e9 (%1 potvrden\u00ed)</translation>\n+    </message>\n+    <message>\n+        <source>Conflicted</source>\n+        <translation>V rozpore</translation>\n+    </message>\n+    <message>\n+        <source>Immature (%1 confirmations, will be available after %2)</source>\n+        <translation>Nezrel\u00e9 (%1 potvrden\u00ed, bude dostupn\u00e9 po %2)</translation>\n+    </message>\n+    <message>\n+        <source>This block was not received by any other nodes and will probably not be accepted!</source>\n+        <translation>Ten blok nebol prijat\u00fd \u017eiadnym in\u00fdm uzlom a pravdepodobne nebude akceptovan\u00fd!</translation>\n+    </message>\n+    <message>\n+        <source>Generated but not accepted</source>\n+        <translation>Vypo\u010d\u00edtan\u00e9 ale neakceptovan\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Prijat\u00e9 s</translation>\n+    </message>\n+    <message>\n+        <source>Received from</source>\n+        <translation>Prijat\u00e9 od</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odoslan\u00e9 na</translation>\n+    </message>\n+    <message>\n+        <source>Payment to yourself</source>\n+        <translation>Platba sebe sam\u00e9mu</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n+    <message>\n+        <source>(n/a)</source>\n+        <translation>(n/a)</translation>\n+    </message>\n     <message>\n         <source>(no label)</source>\n         <translation>(bez popisu)</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Transaction status. Hover over this field to show number of confirmations.</source>\n+        <translation>Stav transakcie. Prejdite ponad toto pole pre zobrazenie po\u010dtu potvrden\u00ed.</translation>\n+    </message>\n+    <message>\n+        <source>Date and time that the transaction was received.</source>\n+        <translation>D\u00e1tum a \u010das prijatia transakcie.</translation>\n+    </message>\n+    <message>\n+        <source>Type of transaction.</source>\n+        <translation>Typ transakcie.</translation>\n+    </message>\n+    <message>\n+        <source>Whether or not a watch-only address is involved in this transaction.</source>\n+        <translation>\u010ci je v tejto transakcii adresy iba na sledovanie.</translation>\n+    </message>\n+    <message>\n+        <source>Amount removed from or added to balance.</source>\n+        <translation>Suma pridan\u00e1 alebo odobran\u00e1 k zostatku.</translation>\n+    </message>\n+</context>\n <context>\n     <name>TransactionView</name>\n-    </context>\n+    <message>\n+        <source>All</source>\n+        <translation>V\u0161etky</translation>\n+    </message>\n+    <message>\n+        <source>Today</source>\n+        <translation>Dnes</translation>\n+    </message>\n+    <message>\n+        <source>This week</source>\n+        <translation>Tento t\u00fd\u017ede\u0148</translation>\n+    </message>\n+    <message>\n+        <source>This month</source>\n+        <translation>Tento mesiac</translation>\n+    </message>\n+    <message>\n+        <source>Last month</source>\n+        <translation>Minul\u00fd mesiac</translation>\n+    </message>\n+    <message>\n+        <source>This year</source>\n+        <translation>Tento rok</translation>\n+    </message>\n+    <message>\n+        <source>Range...</source>\n+        <translation>Rozsah...</translation>\n+    </message>\n+    <message>\n+        <source>Received with</source>\n+        <translation>Prijat\u00e9 s</translation>\n+    </message>\n+    <message>\n+        <source>Sent to</source>\n+        <translation>Odoslan\u00e9 na</translation>\n+    </message>\n+    <message>\n+        <source>To yourself</source>\n+        <translation>Ku mne</translation>\n+    </message>\n+    <message>\n+        <source>Mined</source>\n+        <translation>Vy\u0165a\u017een\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Other</source>\n+        <translation>In\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Zadajte adresu alebo popis pre h\u013eadanie</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Minim\u00e1lna suma</translation>\n+    </message>\n+    <message>\n+        <source>Copy address</source>\n+        <translation>Kop\u00edrova\u0165 adresu</translation>\n+    </message>\n+    <message>\n+        <source>Copy label</source>\n+        <translation>Kop\u00edrova\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Copy amount</source>\n+        <translation>Kop\u00edrova\u0165 sumu</translation>\n+    </message>\n+    <message>\n+        <source>Copy transaction ID</source>\n+        <translation>Kop\u00edrova\u0165 ID transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Copy raw transaction</source>\n+        <translation>Skop\u00edrova\u0165 neupraven\u00fa transakciu</translation>\n+    </message>\n+    <message>\n+        <source>Edit label</source>\n+        <translation>Upravi\u0165 popis</translation>\n+    </message>\n+    <message>\n+        <source>Show transaction details</source>\n+        <translation>Zobrazi\u0165 podrobnosti transakcie</translation>\n+    </message>\n+    <message>\n+        <source>Export Transaction History</source>\n+        <translation>Exportova\u0165 hist\u00f3riu transakci\u00ed</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u010ciarkou oddelovan\u00fd s\u00fabor (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Confirmed</source>\n+        <translation>Potvrden\u00e9</translation>\n+    </message>\n+    <message>\n+        <source>Watch-only</source>\n+        <translation>Iba sledovanie</translation>\n+    </message>\n+    <message>\n+        <source>Date</source>\n+        <translation>D\u00e1tum</translation>\n+    </message>\n+    <message>\n+        <source>Type</source>\n+        <translation>Typ</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>Popis</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>Adresa</translation>\n+    </message>\n+    <message>\n+        <source>ID</source>\n+        <translation>ID</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>Export zlyhal</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the transaction history to %1.</source>\n+        <translation>Vyskytla sa chyba pri pokuse o ulo\u017eenie hist\u00f3rie transakci\u00ed do %1.</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Successful</source>\n+        <translation>Export \u00faspe\u0161n\u00fd</translation>\n+    </message>\n+    <message>\n+        <source>The transaction history was successfully saved to %1.</source>\n+        <translation>Hist\u00f3ria transakci\u00e1 bola \u00faspe\u0161ne ulo\u017een\u00e1 do %1.</translation>\n+    </message>\n+    <message>\n+        <source>Range:</source>\n+        <translation>Rozsah:</translation>\n+    </message>\n+    <message>\n+        <source>to</source>\n+        <translation>do</translation>\n+    </message>\n+</context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n     <message>\n@@ -1737,13 +2721,53 @@\n </context>\n <context>\n     <name>WalletFrame</name>\n-    </context>\n+    <message>\n+        <source>No wallet has been loaded.</source>\n+        <translation>Nie je na\u010d\u00edtan\u00e1 pe\u0148a\u017eenka.</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletModel</name>\n-    </context>\n+    <message>\n+        <source>Send Coins</source>\n+        <translation>Posla\u0165 mince</translation>\n+    </message>\n+</context>\n <context>\n     <name>WalletView</name>\n-    </context>\n+    <message>\n+        <source>&amp;Export</source>\n+        <translation>&amp;Exportova\u0165...</translation>\n+    </message>\n+    <message>\n+        <source>Export the data in the current tab to a file</source>\n+        <translation>Exportova\u0165 d\u00e1ta v aktu\u00e1lnej karte do s\u00faboru</translation>\n+    </message>\n+    <message>\n+        <source>Backup Wallet</source>\n+        <translation>Z\u00e1lohovanie pe\u0148a\u017eenky</translation>\n+    </message>\n+    <message>\n+        <source>Wallet Data (*.dat)</source>\n+        <translation>D\u00e1ta pe\u0148a\u017eenky (*.dat)</translation>\n+    </message>\n+    <message>\n+        <source>Backup Failed</source>\n+        <translation>Z\u00e1lohovanie zlyhalo</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the wallet data to %1.</source>\n+        <translation>Vyskytla sa chyba pri pokuse o ulo\u017eenie d\u00e1t pe\u0148a\u017eenky do %1.</translation>\n+    </message>\n+    <message>\n+        <source>Backup Successful</source>\n+        <translation>Z\u00e1loha \u00faspe\u0161n\u00e1</translation>\n+    </message>\n+    <message>\n+        <source>The wallet data was successfully saved to %1.</source>\n+        <translation>D\u00e1ta pe\u0148a\u017eenky boli \u00faspe\u0161ne ulo\u017een\u00e9 do %1.</translation>\n+    </message>\n+</context>\n <context>\n     <name>bitcoin-core</name>\n     <message>\n@@ -1796,12 +2820,16 @@\n     </message>\n     <message>\n         <source>Bitcoin Core</source>\n-        <translation>Jadro Bitcoin</translation>\n+        <translation>Bitcoin Core</translation>\n     </message>\n     <message>\n         <source>The %s developers</source>\n         <translation>V\u00fdvoj\u00e1ri %s</translation>\n     </message>\n+    <message>\n+        <source>Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)</source>\n+        <translation>Akceptova\u0165 post\u00fapen\u00e9 transakcie od povolen\u00fdch partnerov aj ke\u010f norm\u00e1lne nepostupujete transakcie (predvolen\u00e9: %d)</translation>\n+    </message>\n     <message>\n         <source>Bind to given address and always listen on it. Use [host]:port notation for IPv6</source>\n         <translation>Spoji\u0165 s danou adresou a v\u017edy na nej po\u010d\u00fava\u0165. Pou\u017eite z\u00e1pis [host]:port pre IPv6</translation>\n@@ -1838,6 +2866,22 @@\n         <source>The block database contains a block which appears to be from the future. This may be due to your computer's date and time being set incorrectly. Only rebuild the block database if you are sure that your computer's date and time are correct</source>\n         <translation>Datab\u00e1za blokov obsahuje blok, ktor\u00fd vyzer\u00e1 by\u0165 z bud\u00facnosti. Toto m\u00f4\u017ee by\u0165 sp\u00f4soben\u00e9 nespr\u00e1vnym syst\u00e9mov\u00fdm \u010dasom v\u00e1\u0161ho po\u010d\u00edta\u010da. Obnovujte datab\u00e1zu blokov len ke\u010f ste si ist\u00fd, \u017ee syst\u00e9mov\u00fd \u010das je nastaven\u00fd spr\u00e1vne.</translation>\n     </message>\n+    <message>\n+        <source>This is a pre-release test build - use at your own risk - do not use for mining or merchant applications</source>\n+        <translation>Toto je predbe\u017en\u00e1 testovacia zostava - pou\u017e\u00edvate na vlastn\u00e9 riziko - nepou\u017e\u00edvajte na \u0165a\u017eenie alebo obchodn\u00e9 aplik\u00e1cie</translation>\n+    </message>\n+    <message>\n+        <source>Use UPnP to map the listening port (default: 1 when listening and no -proxy)</source>\n+        <translation>Sk\u00fasi\u0165 pou\u017ei\u0165 UPnP pre mapovanie po\u010d\u00favaj\u00faceho portu (predvolen\u00e9: 1 po\u010das po\u010d\u00favania a bez -proxy)</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.</source>\n+        <translation>Varovanie: Jav\u00ed sa \u017ee sie\u0165 sie\u0165 \u00faplne nes\u00fahlas\u00ed! Niektor\u00ed mineri zjavne maj\u00fa \u0165a\u017ekosti.</translation>\n+    </message>\n+    <message>\n+        <source>Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.</source>\n+        <translation>Varovanie: Zjavne sa \u00faplne nezhodujeme s na\u0161imi peer-mi! Mo\u017eno potrebujete prejs\u0165 na nov\u0161iu verziu alebo ostatn\u00e9 uzly potrebuj\u00fa vy\u0161\u0161iu verziu.</translation>\n+    </message>\n     <message>\n         <source>%s corrupt, salvage failed</source>\n         <translation>%s je po\u0161koden\u00fd, z\u00e1chrana zlyhala</translation>\n@@ -1964,7 +3008,7 @@\n     </message>\n     <message>\n         <source>Location of the auth cookie (default: data dir)</source>\n-        <translation>Poloha overovacieho cookie s\u00faboru (predvolen\u00e1: zlo\u017eka s d\u00e1tami)</translation>\n+        <translation>Umiestnenie overovacieho cookie s\u00faboru (predvolen\u00e1: Prie\u010dinok s d\u00e1tami)</translation>\n     </message>\n     <message>\n         <source>Not enough file descriptors available.</source>\n@@ -2086,6 +3130,10 @@\n         <source>Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)</source>\n         <translation>Vykona\u0165 pr\u00edkaz po prijat\u00ed patri\u010dn\u00e9ho varovania alebo uvid\u00edme ve\u013emi dlh\u00e9 rozdvojenie siete (%s v cmd je nahraden\u00e9 spr\u00e1vou)</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)</source>\n+        <translation>Poplatky (v %s/kB) men\u0161ie ako toto, s\u00fa pova\u017eovan\u00e9 za nulov\u00fd transak\u010dn\u00fd poplatok (predvolen\u00e9: %s)</translation>\n+    </message>\n     <message>\n         <source>If paytxfee is not set, include enough fee so transactions begin confirmation on average within n blocks (default: %u)</source>\n         <translation>Ak nie je nastaven\u00e9 paytxfee, prida\u0165 dostato\u010dn\u00fd poplatok aby sa transakcia za\u010dala potvrdzova\u0165 priemerne v r\u00e1mci bloku (predvolen\u00e9: %u)</translation>\n@@ -2254,6 +3302,10 @@\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation>(1 = zachova\u0165 meta\u00fadaje tx napr. vlastn\u00edka \u00fa\u010dtu a inform\u00e1cie o platobn\u00fdch pr\u00edkazoch, 2 = zahodi\u0165 meta\u00fadaje tx)</translation>\n     </message>\n+    <message>\n+        <source>Fees (in %s/kB) smaller than this are considered zero fee for transaction creation (default: %s)</source>\n+        <translation>Poplatky (v %s/kB) men\u0161ie ako toto, s\u00fa pova\u017eovan\u00e9 za nulov\u00fd transak\u010dn\u00fd poplatok (predvolen\u00e9: %s)</translation>\n+    </message>\n     <message>\n         <source>How thorough the block verification of -checkblocks is (0-4, default: %u)</source>\n         <translation>Ako d\u00f4kladn\u00e9 je -checkblocks overenie blokov (0-4, predvolen\u00e9: %u)</translation>\n@@ -2298,6 +3350,10 @@\n         <source>Warning: Wallet file corrupt, data salvaged! Original %s saved as %s in %s; if your balance or transactions are incorrect you should restore from a backup.</source>\n         <translation>Varovanie: Pe\u0148a\u017eenka po\u0161koden\u00e1, d\u00e1ta boli zachr\u00e1nen\u00e9! Origin\u00e1lna %s ako %s v %s; ak v\u00e1\u0161 zostatok alebo transakcie s\u00fa nespr\u00e1vne, mali by ste obnovi\u0165 z\u00e1lohu.</translation>\n     </message>\n+    <message>\n+        <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n+        <translation>Povoli\u0165 partnerov prip\u00e1jaj\u00facich sa z danej IP adresy (napr. 1.2.3.4) alebo zo siete vo form\u00e1te CIDR (napr. 1.2.3.0/24). M\u00f4\u017ee by\u0165 zadan\u00e9 viackr\u00e1t.</translation>\n+    </message>\n     <message>\n         <source>(default: %s)</source>\n         <translation>(predvolen\u00e9: %s)</translation>\n@@ -2378,6 +3434,10 @@\n         <source>Threshold for disconnecting misbehaving peers (default: %u)</source>\n         <translation>Hranica pre odp\u00e1janie zle sa spr\u00e1vaj\u00facim partnersk\u00fdm uzlom (predvolen\u00e9: %u)</translation>\n     </message>\n+    <message>\n+        <source>Transaction amounts must not be negative</source>\n+        <translation>Sumy transakci\u00ed nesm\u00fa by\u0165 z\u00e1porn\u00e9</translation>\n+    </message>\n     <message>\n         <source>Unknown network specified in -onlynet: '%s'</source>\n         <translation>Nezn\u00e1ma sie\u0165 upresnen\u00e1 v -onlynet: '%s'</translation>"
      },
      {
        "sha": "edd808c9b58489308019e88939472a456c666454",
        "filename": "src/qt/locale/bitcoin_sv.ts",
        "status": "modified",
        "additions": 18,
        "deletions": 2,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_sv.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_sv.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_sv.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -540,7 +540,11 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n         <source>Wallet is &lt;b&gt;encrypted&lt;/b&gt; and currently &lt;b&gt;locked&lt;/b&gt;</source>\n         <translation>Denna pl\u00e5nbok \u00e4r &lt;b&gt;krypterad&lt;/b&gt; och f\u00f6r n\u00e4rvarande &lt;b&gt;l\u00e5st&lt;/b&gt;</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>A fatal error occurred. Bitcoin can no longer continue safely and will quit.</source>\n+        <translation>Ett kritiskt fel uppstod. Bitcoin kan inte forts\u00e4tta att k\u00f6ra s\u00e4kert och kommer att avslutas.</translation>\n+    </message>\n+</context>\n <context>\n     <name>CoinControlDialog</name>\n     <message>\n@@ -679,7 +683,7 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </message>\n     <message>\n         <source>Directory already exists. Add %1 if you intend to create a new directory here.</source>\n-        <translation>Katalogen finns redan. L\u00e4ggtill %1 om du vill skapa en ny katalog h\u00e4r.</translation>\n+        <translation>Katalogen finns redan. L\u00e4gg till %1 om du vill skapa en ny katalog h\u00e4r.</translation>\n     </message>\n     <message>\n         <source>Path already exists, and is not a directory.</source>\n@@ -2099,6 +2103,18 @@ Var v\u00e4nlig och f\u00f6rs\u00f6k igen.</translation>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Enter address or label to search</source>\n+        <translation>Ange en adress eller etikett att s\u00f6ka efter</translation>\n+    </message>\n+    <message>\n+        <source>Min amount</source>\n+        <translation>Minsta belopp</translation>\n+    </message>\n+    <message>\n+        <source>Abandon transaction</source>\n+        <translation>Avbryt transaktionen</translation>\n+    </message>\n     <message>\n         <source>Copy address</source>\n         <translation>Kopiera adress</translation>"
      },
      {
        "sha": "321effc7e136bb69e3a5b47f4078126cb36a29db",
        "filename": "src/qt/locale/bitcoin_tr.ts",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_tr.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_tr.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_tr.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -295,15 +295,15 @@\n     </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n-        <translation>C\u00fczdan\u0131 &amp;\u015eifrele...</translation>\n+        <translation>&amp;C\u00fczdan\u0131 \u015eifrele...</translation>\n     </message>\n     <message>\n         <source>&amp;Backup Wallet...</source>\n-        <translation>C\u00fczdan\u0131 &amp;Yedekle...</translation>\n+        <translation>&amp;C\u00fczdan\u0131 Yedekle...</translation>\n     </message>\n     <message>\n         <source>&amp;Change Passphrase...</source>\n-        <translation>Parolay\u0131 &amp;De\u011fi\u015ftir...</translation>\n+        <translation>&amp;Parolay\u0131 De\u011fi\u015ftir...</translation>\n     </message>\n     <message>\n         <source>&amp;Sending addresses...</source>"
      },
      {
        "sha": "30e59d9260407ad3f05ecac84ee6108ec6560cd3",
        "filename": "src/qt/locale/bitcoin_zh_CN.ts",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_zh_CN.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_zh_CN.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_CN.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -3240,6 +3240,10 @@\n         <source>Wallet %s resides outside data directory %s</source>\n         <translation>\u94b1\u5305 %s \u5728\u5916\u90e8\u7684\u6570\u636e\u76ee\u5f55 %s</translation>\n     </message>\n+    <message>\n+        <source>Wallet debugging/testing options:</source>\n+        <translation>\u94b1\u5305\u8c03\u8bd5/\u6d4b\u8bd5\u9009\u9879\uff1a</translation>\n+    </message>\n     <message>\n         <source>Wallet options:</source>\n         <translation>\u94b1\u5305\u9009\u9879:</translation>"
      },
      {
        "sha": "2049715b856e04116ff6fe6d6a180467fb609377",
        "filename": "src/qt/locale/bitcoin_zh_HK.ts",
        "status": "modified",
        "additions": 368,
        "deletions": 6,
        "changes": 374,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_zh_HK.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/qt/locale/bitcoin_zh_HK.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_zh_HK.ts?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -41,10 +41,70 @@\n         <source>&amp;Delete</source>\n         <translation>\u522a\u9664 &amp;D</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Choose the address to send coins to</source>\n+        <translation>\u9078\u64c7\u8981\u4ed8\u9322\u904e\u53bb\u7684\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Choose the address to receive coins with</source>\n+        <translation>\u9078\u64c7\u8981\u6536\u9322\u7684\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>C&amp;hoose</source>\n+        <translation>\u9078\u64c7 &amp;h</translation>\n+    </message>\n+    <message>\n+        <source>Sending addresses</source>\n+        <translation>\u4ed8\u6b3e\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Receiving addresses</source>\n+        <translation>\u6536\u6b3e\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Copy Address</source>\n+        <translation>\u8907\u88fd\u5730\u5740 &amp;C</translation>\n+    </message>\n+    <message>\n+        <source>Copy &amp;Label</source>\n+        <translation>\u8907\u88fd\u6a19\u8a18 &amp;L</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Edit</source>\n+        <translation>\u7de8\u8f2f &amp;E</translation>\n+    </message>\n+    <message>\n+        <source>Export Address List</source>\n+        <translation>\u532f\u51fa\u5730\u5740\u6e05\u55ae</translation>\n+    </message>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u9017\u865f\u5206\u9694\u6a94 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u532f\u51fa\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>There was an error trying to save the address list to %1. Please try again.</source>\n+        <translation>\u5132\u5b58\u5730\u5740\u5217\u8868\u5230 %1 \u6642\u767c\u751f\u932f\u8aa4\u3002\u8acb\u518d\u8a66\u4e00\u6b21\u3002</translation>\n+    </message>\n+</context>\n <context>\n     <name>AddressTableModel</name>\n-    </context>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n+</context>\n <context>\n     <name>AskPassphraseDialog</name>\n     <message>\n@@ -63,7 +123,91 @@\n         <source>Repeat new passphrase</source>\n         <translation>\u91cd\u8907\u65b0\u5bc6\u78bc</translation>\n     </message>\n-    </context>\n+    <message>\n+        <source>Encrypt wallet</source>\n+        <translation>\u52a0\u5bc6\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to unlock the wallet.</source>\n+        <translation>\u9019\u500b\u52d5\u4f5c\u9700\u8981\u4f60\u7684\u9322\u5305\u5bc6\u78bc\u4f86\u5c07\u9322\u5305\u89e3\u9396\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Unlock wallet</source>\n+        <translation>\u89e3\u9396\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>This operation needs your wallet passphrase to decrypt the wallet.</source>\n+        <translation>\u9019\u500b\u52d5\u4f5c\u9700\u8981\u4f60\u7684\u9322\u5305\u5bc6\u78bc\u4f86\u5c07\u9322\u5305\u89e3\u5bc6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Decrypt wallet</source>\n+        <translation>\u89e3\u5bc6\u9322\u5305</translation>\n+    </message>\n+    <message>\n+        <source>Change passphrase</source>\n+        <translation>\u66f4\u6539\u5bc6\u78bc</translation>\n+    </message>\n+    <message>\n+        <source>Enter the old passphrase and new passphrase to the wallet.</source>\n+        <translation>\u8f38\u5165\u820a\u5bc6\u78bc\u548c\u65b0\u5bc6\u78bc\u81f3\u9322\u5305\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Confirm wallet encryption</source>\n+        <translation>\u78ba\u8a8d\u9322\u5305\u52a0\u5bc6</translation>\n+    </message>\n+    <message>\n+        <source>Warning: If you encrypt your wallet and lose your passphrase, you will &lt;b&gt;LOSE ALL OF YOUR BITCOINS&lt;/b&gt;!</source>\n+        <translation>\u8b66\u544a: \u5982\u679c\u4f60\u5c07\u9322\u5305\u52a0\u5bc6\u5f8c\u53c8\u5fd8\u8a18\u5bc6\u78bc\uff0c\u4f60\u5c31\u6703&lt;b&gt;\u5931\u53bb\u6240\u6709 Bitcoin \u4e86&lt;/b&gt;\uff01</translation>\n+    </message>\n+    <message>\n+        <source>Are you sure you wish to encrypt your wallet?</source>\n+        <translation>\u4f60\u78ba\u5b9a\u8981\u628a\u9322\u5305\u52a0\u5bc6\u55ce\uff1f</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encrypted</source>\n+        <translation>\u9322\u5305\u5df2\u52a0\u5bc6</translation>\n+    </message>\n+    <message>\n+        <source>%1 will close now to finish the encryption process. Remember that encrypting your wallet cannot fully protect your bitcoins from being stolen by malware infecting your computer.</source>\n+        <translation>%1 \u73fe\u5728\u8981\u95dc\u9589\u4f86\u5b8c\u6210\u52a0\u5bc6\u7a0b\u5e8f\u3002\u8acb\u8a18\u5f97\u5c07\u9322\u5305\u52a0\u5bc6\u4e0d\u80fd\u5b8c\u5168\u9632\u6b62\u4f60\u7684 Bitcoins \u7d93\u88ab\u5165\u4fb5\u96fb\u8166\u7684\u60e1\u610f\u7a0b\u5f0f\u5077\u53d6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>IMPORTANT: Any previous backups you have made of your wallet file should be replaced with the newly generated, encrypted wallet file. For security reasons, previous backups of the unencrypted wallet file will become useless as soon as you start using the new, encrypted wallet.</source>\n+        <translation>\u91cd\u8981: \u8acb\u6539\u7528\u65b0\u7522\u751f\u7684\u52a0\u5bc6\u9322\u5305\u6a94\uff0c\u4f86\u53d6\u4ee3\u6240\u4ee5\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u3002\u70ba\u5b89\u5168\u8a08\uff0c\u7576\u4f60\u958b\u59cb\u4f7f\u7528\u65b0\u7684\u52a0\u5bc6\u9322\u5305\u6a94\u5f8c\uff0c\u820a\u9322\u5305\u6a94\u7684\u5099\u4efd\u5c31\u4e0d\u80fd\u518d\u4f7f\u7528\u4e86\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed</source>\n+        <translation>\u9322\u5305\u52a0\u5bc6\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>Wallet encryption failed due to an internal error. Your wallet was not encrypted.</source>\n+        <translation>\u56e0\u5167\u90e8\u932f\u8aa4\u5c0e\u81f4\u9322\u5305\u52a0\u5bc6\u5931\u6557\uff0c\u4f60\u7684\u9322\u5305\u5c1a\u672a\u52a0\u5bc6\u3002</translation>\n+    </message>\n+    <message>\n+        <source>The supplied passphrases do not match.</source>\n+        <translation>\u63d0\u4f9b\u7684\u5bc6\u78bc\u4e0d\u4e00\u81f4\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet unlock failed</source>\n+        <translation>\u9322\u5305\u89e3\u9396\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>The passphrase entered for the wallet decryption was incorrect.</source>\n+        <translation>\u7528\u4f86\u89e3\u5bc6\u9322\u5305\u7684\u5bc6\u78bc\u4e0d\u5c0d\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Wallet decryption failed</source>\n+        <translation>\u9322\u5305\u89e3\u5bc6\u5931\u6557</translation>\n+    </message>\n+    <message>\n+        <source>Wallet passphrase was successfully changed.</source>\n+        <translation>\u9322\u5305\u5bc6\u78bc\u5df2\u6210\u529f\u66f4\u6539\u3002</translation>\n+    </message>\n+    <message>\n+        <source>Warning: The Caps Lock key is on!</source>\n+        <translation>\u8b66\u544a: Caps Lock \u5df2\u555f\u7528\uff01</translation>\n+    </message>\n+</context>\n <context>\n     <name>BanTableModel</name>\n     <message>\n@@ -113,6 +257,14 @@\n         <source>Quit application</source>\n         <translation>\u7d50\u675f\u61c9\u7528\u7a0b\u5f0f</translation>\n     </message>\n+    <message>\n+        <source>&amp;About %1</source>\n+        <translation>\u95dc\u65bc %1 &amp;A</translation>\n+    </message>\n+    <message>\n+        <source>Show information about %1</source>\n+        <translation>\u986f\u793a %1 \u7684\u76f8\u95dc\u8cc7\u8a0a</translation>\n+    </message>\n     <message>\n         <source>About &amp;Qt</source>\n         <translation>\u95dc\u65bc Qt &amp;Q</translation>\n@@ -125,6 +277,10 @@\n         <source>&amp;Options...</source>\n         <translation>\u9078\u9805... &amp;O</translation>\n     </message>\n+    <message>\n+        <source>Modify configuration options for %1</source>\n+        <translation>\u4fee\u6b63 %1 \u7684\u8a2d\u5b9a\u9078\u9805</translation>\n+    </message>\n     <message>\n         <source>&amp;Encrypt Wallet...</source>\n         <translation>\u52a0\u5bc6\u9322\u5305... &amp;E</translation>\n@@ -201,9 +357,51 @@\n         <source>Show or hide the main Window</source>\n         <translation>\u986f\u793a\u6216\u96b1\u85cf\u4e3b\u8996\u7a97</translation>\n     </message>\n+    <message>\n+        <source>&amp;File</source>\n+        <translation>\u6a94\u6848 &amp;F</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Settings</source>\n+        <translation>\u8a2d\u5b9a &amp;S</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Help</source>\n+        <translation>\u8aaa\u660e &amp;H</translation>\n+    </message>\n+    <message>\n+        <source>Request payments (generates QR codes and bitcoin: URIs)</source>\n+        <translation>\u8981\u6c42\u4ed8\u6b3e (\u7522\u751fQR\u78bc bitcoin: URIs)</translation>\n+    </message>\n+    <message>\n+        <source>Indexing blocks on disk...</source>\n+        <translation>\u6b63\u5728\u70ba\u78c1\u789f\u5340\u584a\u5efa\u7acb\u7d22\u5f15...</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u8b66\u544a</translation>\n+    </message>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u8cc7\u8a0a</translation>\n+    </message>\n+    <message>\n+        <source>Date: %1\n+</source>\n+        <translation>\u65e5\u671f: %1\n+</translation>\n+    </message>\n     </context>\n <context>\n     <name>CoinControlDialog</name>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>EditAddressDialog</name>\n@@ -216,6 +414,10 @@\n     </context>\n <context>\n     <name>Intro</name>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n     </context>\n <context>\n     <name>ModalOverlay</name>\n@@ -237,28 +439,144 @@\n     </context>\n <context>\n     <name>QObject</name>\n+    <message>\n+        <source>Enter a Bitcoin address (e.g. %1)</source>\n+        <translation>\u8f38\u5165\u4e00\u500b Bitcoin \u4f4d\u5740 (\u4f8b\u5982 %1)</translation>\n+    </message>\n+    <message>\n+        <source>%1 d</source>\n+        <translation>%1 \u65e5</translation>\n+    </message>\n+    <message>\n+        <source>%1 h</source>\n+        <translation>%1 \u5c0f\u6642</translation>\n+    </message>\n+    <message>\n+        <source>%1 m</source>\n+        <translation>%1 \u5206</translation>\n+    </message>\n+    <message>\n+        <source>%1 s</source>\n+        <translation>%1 \u79d2</translation>\n+    </message>\n+    <message>\n+        <source>None</source>\n+        <translation>\u6c92\u6709</translation>\n+    </message>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>%1 ms</source>\n+        <translation>%1 \u4eb3\u79d2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n second(s)</source>\n+        <translation><numerusform>%n \u79d2</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n minute(s)</source>\n+        <translation><numerusform>%n \u5206\u9418</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n hour(s)</source>\n+        <translation><numerusform>%n \u5c0f\u6642</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n day(s)</source>\n+        <translation><numerusform>%n \u65e5</numerusform></translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n week(s)</source>\n+        <translation><numerusform>%n \u661f\u671f</numerusform></translation>\n+    </message>\n+    <message>\n+        <source>%1 and %2</source>\n+        <translation>%1 \u548c %2</translation>\n+    </message>\n+    <message numerus=\"yes\">\n+        <source>%n year(s)</source>\n+        <translation><numerusform>%n \u5e74</numerusform></translation>\n+    </message>\n     </context>\n <context>\n     <name>QObject::QObject</name>\n     </context>\n <context>\n     <name>QRImageWidget</name>\n-    </context>\n+    <message>\n+        <source>Save QR Code</source>\n+        <translation>\u5132\u5b58 QR \u78bc</translation>\n+    </message>\n+    <message>\n+        <source>PNG Image (*.png)</source>\n+        <translation>PNG \u5f71\u50cf(*.png)</translation>\n+    </message>\n+</context>\n <context>\n     <name>RPCConsole</name>\n+    <message>\n+        <source>N/A</source>\n+        <translation>N/A</translation>\n+    </message>\n+    <message>\n+        <source>&amp;Information</source>\n+        <translation>\u8cc7\u8a0a &amp;I</translation>\n+    </message>\n+    <message>\n+        <source>Debug window</source>\n+        <translation>\u9664\u932f\u8996\u7a97</translation>\n+    </message>\n+    <message>\n+        <source>General</source>\n+        <translation>\u4e00\u822c</translation>\n+    </message>\n+    <message>\n+        <source>Received</source>\n+        <translation>\u5df2\u63a5\u6536</translation>\n+    </message>\n+    <message>\n+        <source>Sent</source>\n+        <translation>\u5df2\u9001\u51fa</translation>\n+    </message>\n+    <message>\n+        <source>Version</source>\n+        <translation>\u7248\u672c</translation>\n+    </message>\n     </context>\n <context>\n     <name>ReceiveCoinsDialog</name>\n     </context>\n <context>\n     <name>ReceiveRequestDialog</name>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n     </context>\n <context>\n     <name>RecentRequestsTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>SendCoinsDialog</name>\n-    </context>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n+</context>\n <context>\n     <name>SendCoinsEntry</name>\n     </context>\n@@ -279,15 +597,47 @@\n     </context>\n <context>\n     <name>TransactionDesc</name>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u958b\u653e\u81f3 %1</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionDescDialog</name>\n     </context>\n <context>\n     <name>TransactionTableModel</name>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Open until %1</source>\n+        <translation>\u958b\u653e\u81f3 %1</translation>\n+    </message>\n+    <message>\n+        <source>(no label)</source>\n+        <translation>(\u7121\u6a19\u8a18)</translation>\n+    </message>\n     </context>\n <context>\n     <name>TransactionView</name>\n+    <message>\n+        <source>Comma separated file (*.csv)</source>\n+        <translation>\u9017\u865f\u5206\u9694\u6a94 (*.csv)</translation>\n+    </message>\n+    <message>\n+        <source>Label</source>\n+        <translation>\u6a19\u8a18</translation>\n+    </message>\n+    <message>\n+        <source>Address</source>\n+        <translation>\u5730\u5740</translation>\n+    </message>\n+    <message>\n+        <source>Exporting Failed</source>\n+        <translation>\u532f\u51fa\u5931\u6557</translation>\n+    </message>\n     </context>\n <context>\n     <name>UnitDisplayStatusBarControl</name>\n@@ -303,5 +653,17 @@\n     </context>\n <context>\n     <name>bitcoin-core</name>\n-    </context>\n+    <message>\n+        <source>Information</source>\n+        <translation>\u8cc7\u8a0a</translation>\n+    </message>\n+    <message>\n+        <source>Warning</source>\n+        <translation>\u8b66\u544a</translation>\n+    </message>\n+    <message>\n+        <source>Error</source>\n+        <translation>\u932f\u8aa4</translation>\n+    </message>\n+</context>\n </TS>\n\\ No newline at end of file"
      },
      {
        "sha": "7cf793e64344061b09d9056e86cedd10d866c50b",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -750,6 +750,10 @@ UniValue submitblock(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n     }\n \n+    if (block.vtx.empty() || !block.vtx[0]->IsCoinBase()) {\n+        throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block does not start with a coinbase\");\n+    }\n+\n     uint256 hash = block.GetHash();\n     bool fBlockPresent = false;\n     {"
      },
      {
        "sha": "7f82a93ca9e67b48ed8cd5bc51f72cf869d61352",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 48,
        "changes": 78,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -23,10 +23,12 @@\n \n #include <univalue.h>\n \n+using namespace std;\n+\n UniValue getconnectioncount(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"getconnectioncount\\n\"\n             \"\\nReturns the number of connections to other nodes.\\n\"\n             \"\\nResult:\\n\"\n@@ -45,7 +47,7 @@ UniValue getconnectioncount(const JSONRPCRequest& request)\n UniValue ping(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"ping\\n\"\n             \"\\nRequests that a ping be sent to all other nodes, to measure ping time.\\n\"\n             \"Results provided in getpeerinfo, pingtime and pingwait fields are decimal seconds.\\n\"\n@@ -68,7 +70,7 @@ UniValue ping(const JSONRPCRequest& request)\n UniValue getpeerinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"getpeerinfo\\n\"\n             \"\\nReturns data about each connected network node as a json array of objects.\\n\"\n             \"\\nResult:\\n\"\n@@ -100,7 +102,7 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n             \"       n,                        (numeric) The heights of blocks we're currently asking from this peer\\n\"\n             \"       ...\\n\"\n             \"    ],\\n\"\n-            \"    \\\"whitelisted\\\": true|false, (boolean) Whether the peer is whitelisted\\n\"\n+            \"    \\\"whitelisted\\\": true|false, (boolean) Whether the peer is whitelisted\\n\"                  \n             \"    \\\"bytessent_per_msg\\\": {\\n\"\n             \"       \\\"addr\\\": n,              (numeric) The total bytes sent aggregated by message type\\n\"\n             \"       ...\\n\"\n@@ -120,7 +122,7 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::vector<CNodeStats> vstats;\n+    vector<CNodeStats> vstats;\n     g_connman->GetNodeStats(vstats);\n \n     UniValue ret(UniValue::VARR);\n@@ -189,12 +191,12 @@ UniValue getpeerinfo(const JSONRPCRequest& request)\n \n UniValue addnode(const JSONRPCRequest& request)\n {\n-    std::string strCommand;\n+    string strCommand;\n     if (request.params.size() == 2)\n         strCommand = request.params[1].get_str();\n     if (request.fHelp || request.params.size() != 2 ||\n         (strCommand != \"onetry\" && strCommand != \"add\" && strCommand != \"remove\"))\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"addnode \\\"node\\\" \\\"add|remove|onetry\\\"\\n\"\n             \"\\nAttempts add or remove a node from the addnode list.\\n\"\n             \"Or try a connection to a node once.\\n\"\n@@ -209,7 +211,7 @@ UniValue addnode(const JSONRPCRequest& request)\n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    std::string strNode = request.params[0].get_str();\n+    string strNode = request.params[0].get_str();\n \n     if (strCommand == \"onetry\")\n     {\n@@ -234,51 +236,31 @@ UniValue addnode(const JSONRPCRequest& request)\n \n UniValue disconnectnode(const JSONRPCRequest& request)\n {\n-    if (request.fHelp || request.params.size() == 0 || request.params.size() >= 3)\n+    if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n-            \"disconnectnode \\\"[address]\\\" [nodeid]\\n\"\n-            \"\\nImmediately disconnects from the specified peer node.\\n\"\n-            \"\\nStrictly one out of 'address' and 'nodeid' can be provided to identify the node.\\n\"\n-            \"\\nTo disconnect by nodeid, either set 'address' to the empty string, or call using the named 'nodeid' argument only.\\n\"\n+            \"disconnectnode \\\"address\\\" \\n\"\n+            \"\\nImmediately disconnects from the specified node.\\n\"\n             \"\\nArguments:\\n\"\n-            \"1. \\\"address\\\"     (string, optional) The IP address/port of the node\\n\"\n-            \"2. \\\"nodeid\\\"      (number, optional) The node ID (see getpeerinfo for node IDs)\\n\"\n+            \"1. \\\"address\\\"     (string, required) The IP address/port of the node\\n\"\n             \"\\nExamples:\\n\"\n             + HelpExampleCli(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n-            + HelpExampleCli(\"disconnectnode\", \"\\\"\\\" 1\")\n             + HelpExampleRpc(\"disconnectnode\", \"\\\"192.168.0.6:8333\\\"\")\n-            + HelpExampleRpc(\"disconnectnode\", \"\\\"\\\", 1\")\n         );\n \n     if(!g_connman)\n         throw JSONRPCError(RPC_CLIENT_P2P_DISABLED, \"Error: Peer-to-peer functionality missing or disabled\");\n \n-    bool success;\n-    const UniValue &address_arg = request.params[0];\n-    const UniValue &id_arg = request.params.size() < 2 ? NullUniValue : request.params[1];\n-\n-    if (!address_arg.isNull() && id_arg.isNull()) {\n-        /* handle disconnect-by-address */\n-        success = g_connman->DisconnectNode(address_arg.get_str());\n-    } else if (!id_arg.isNull() && (address_arg.isNull() || (address_arg.isStr() && address_arg.get_str().empty()))) {\n-        /* handle disconnect-by-id */\n-        NodeId nodeid = (NodeId) id_arg.get_int64();\n-        success = g_connman->DisconnectNode(nodeid);\n-    } else {\n-        throw JSONRPCError(RPC_INVALID_PARAMS, \"Only one of address and nodeid should be provided.\");\n-    }\n-\n-    if (!success) {\n+    bool ret = g_connman->DisconnectNode(request.params[0].get_str());\n+    if (!ret)\n         throw JSONRPCError(RPC_CLIENT_NODE_NOT_CONNECTED, \"Node not found in connected nodes\");\n-    }\n \n     return NullUniValue;\n }\n \n UniValue getaddednodeinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 1)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"getaddednodeinfo ( \\\"node\\\" )\\n\"\n             \"\\nReturns information about the given added node, or all added nodes\\n\"\n             \"(note that onetry addnodes are not listed here)\\n\"\n@@ -346,7 +328,7 @@ UniValue getaddednodeinfo(const JSONRPCRequest& request)\n UniValue getnettotals(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() > 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"getnettotals\\n\"\n             \"\\nReturns information about network traffic, including bytes in, bytes out,\\n\"\n             \"and current time.\\n\"\n@@ -402,7 +384,7 @@ static UniValue GetNetworksInfo()\n         obj.push_back(Pair(\"name\", GetNetworkName(network)));\n         obj.push_back(Pair(\"limited\", IsLimited(network)));\n         obj.push_back(Pair(\"reachable\", IsReachable(network)));\n-        obj.push_back(Pair(\"proxy\", proxy.IsValid() ? proxy.proxy.ToStringIPPort() : std::string()));\n+        obj.push_back(Pair(\"proxy\", proxy.IsValid() ? proxy.proxy.ToStringIPPort() : string()));\n         obj.push_back(Pair(\"proxy_randomize_credentials\", proxy.randomize_credentials));\n         networks.push_back(obj);\n     }\n@@ -412,7 +394,7 @@ static UniValue GetNetworksInfo()\n UniValue getnetworkinfo(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"getnetworkinfo\\n\"\n             \"Returns an object containing various state info regarding P2P networking.\\n\"\n             \"\\nResult:\\n\"\n@@ -435,7 +417,7 @@ UniValue getnetworkinfo(const JSONRPCRequest& request)\n             \"  }\\n\"\n             \"  ,...\\n\"\n             \"  ],\\n\"\n-            \"  \\\"relayfee\\\": x.xxxxxxxx,                (numeric) minimum relay fee for transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n+            \"  \\\"relayfee\\\": x.xxxxxxxx,                (numeric) minimum relay fee for non-free transactions in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"incrementalfee\\\": x.xxxxxxxx,          (numeric) minimum fee increment for mempool limiting or BIP 125 replacement in \" + CURRENCY_UNIT + \"/kB\\n\"\n             \"  \\\"localaddresses\\\": [                    (array) list of local addresses\\n\"\n             \"  {\\n\"\n@@ -487,12 +469,12 @@ UniValue getnetworkinfo(const JSONRPCRequest& request)\n \n UniValue setban(const JSONRPCRequest& request)\n {\n-    std::string strCommand;\n+    string strCommand;\n     if (request.params.size() >= 2)\n         strCommand = request.params[1].get_str();\n     if (request.fHelp || request.params.size() < 2 ||\n         (strCommand != \"add\" && strCommand != \"remove\"))\n-        throw std::runtime_error(\n+        throw runtime_error(\n                             \"setban \\\"subnet\\\" \\\"add|remove\\\" (bantime) (absolute)\\n\"\n                             \"\\nAttempts add or remove a IP/Subnet from the banned list.\\n\"\n                             \"\\nArguments:\\n\"\n@@ -512,7 +494,7 @@ UniValue setban(const JSONRPCRequest& request)\n     CNetAddr netAddr;\n     bool isSubnet = false;\n \n-    if (request.params[0].get_str().find(\"/\") != std::string::npos)\n+    if (request.params[0].get_str().find(\"/\") != string::npos)\n         isSubnet = true;\n \n     if (!isSubnet) {\n@@ -524,7 +506,7 @@ UniValue setban(const JSONRPCRequest& request)\n         LookupSubNet(request.params[0].get_str().c_str(), subNet);\n \n     if (! (isSubnet ? subNet.IsValid() : netAddr.IsValid()) )\n-        throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Invalid IP/Subnet\");\n+        throw JSONRPCError(RPC_CLIENT_NODE_ALREADY_ADDED, \"Error: Invalid IP/Subnet\");\n \n     if (strCommand == \"add\")\n     {\n@@ -544,15 +526,15 @@ UniValue setban(const JSONRPCRequest& request)\n     else if(strCommand == \"remove\")\n     {\n         if (!( isSubnet ? g_connman->Unban(subNet) : g_connman->Unban(netAddr) ))\n-            throw JSONRPCError(RPC_CLIENT_INVALID_IP_OR_SUBNET, \"Error: Unban failed. Requested address/subnet was not previously banned.\");\n+            throw JSONRPCError(RPC_MISC_ERROR, \"Error: Unban failed\");\n     }\n     return NullUniValue;\n }\n \n UniValue listbanned(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n                             \"listbanned\\n\"\n                             \"\\nList all banned IPs/Subnets.\\n\"\n                             \"\\nExamples:\\n\"\n@@ -585,7 +567,7 @@ UniValue listbanned(const JSONRPCRequest& request)\n UniValue clearbanned(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 0)\n-        throw std::runtime_error(\n+        throw runtime_error(\n                             \"clearbanned\\n\"\n                             \"\\nClear all banned IPs.\\n\"\n                             \"\\nExamples:\\n\"\n@@ -603,7 +585,7 @@ UniValue clearbanned(const JSONRPCRequest& request)\n UniValue setnetworkactive(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() != 1) {\n-        throw std::runtime_error(\n+        throw runtime_error(\n             \"setnetworkactive true|false\\n\"\n             \"\\nDisable/enable all p2p network activity.\\n\"\n             \"\\nArguments:\\n\"\n@@ -627,7 +609,7 @@ static const CRPCCommand commands[] =\n     { \"network\",            \"ping\",                   &ping,                   true,  {} },\n     { \"network\",            \"getpeerinfo\",            &getpeerinfo,            true,  {} },\n     { \"network\",            \"addnode\",                &addnode,                true,  {\"node\",\"command\"} },\n-    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"address\", \"nodeid\"} },\n+    { \"network\",            \"disconnectnode\",         &disconnectnode,         true,  {\"address\"} },\n     { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,  {\"node\"} },\n     { \"network\",            \"getnettotals\",           &getnettotals,           true,  {} },\n     { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,  {} },"
      },
      {
        "sha": "332483b1168bb134157e8e408a2e7663c0de920d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -866,7 +866,10 @@ void CTxMemPool::PrioritiseTransaction(const uint256& hash, const CAmount& nFeeD\n             BOOST_FOREACH(txiter descendantIt, setDescendants) {\n                 mapTx.modify(descendantIt, update_ancestor_state(0, nFeeDelta, 0, 0));\n             }\n+<<<<<<< HEAD\n+=======\n             ++nTransactionsUpdated;\n+>>>>>>> master\n         }\n     }\n     LogPrintf(\"PrioritiseTransaction: %s feerate += %s\\n\", hash.ToString(), FormatMoney(nFeeDelta));"
      },
      {
        "sha": "3a61e3498fcf7a84b49524295ab1beb2c6203d70",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -197,8 +197,13 @@ void OpenDebugLog()\n \n     assert(fileout == NULL);\n     assert(vMsgsBeforeOpenLog);\n+<<<<<<< HEAD\n+    boost::filesystem::path pathDebug = GetDataDir() / \"debug.log\";\n+    fileout = fopen(pathDebug.string().c_str(), \"a\");\n+=======\n     fs::path pathDebug = GetDataDir() / \"debug.log\";\n     fileout = fsbridge::fopen(pathDebug, \"a\");\n+>>>>>>> master\n     if (fileout) {\n         setbuf(fileout, NULL); // unbuffered\n         // dump buffered messages from before we opened the log\n@@ -890,4 +895,4 @@ std::string CopyrightHolders(const std::string& strPrefix)\n         strCopyrightHolders += \"\\n\" + strPrefix + \"The Bitcoin Core developers\";\n     }\n     return strCopyrightHolders;\n-}\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "84964d9b65c8b7d3fc25387c8807eb14a3908661",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -3951,7 +3951,11 @@ static const uint64_t MEMPOOL_DUMP_VERSION = 1;\n bool LoadMempool(void)\n {\n     int64_t nExpiryTimeout = GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60;\n+<<<<<<< HEAD\n+    FILE* filestr = fopen((GetDataDir() / \"mempool.dat\").string().c_str(), \"rb\");\n+=======\n     FILE* filestr = fsbridge::fopen(GetDataDir() / \"mempool.dat\", \"rb\");\n+>>>>>>> master\n     CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n     if (file.IsNull()) {\n         LogPrintf(\"Failed to open mempool file from disk. Continuing anyway.\\n\");\n@@ -4031,7 +4035,11 @@ void DumpMempool(void)\n     int64_t mid = GetTimeMicros();\n \n     try {\n+<<<<<<< HEAD\n+        FILE* filestr = fopen((GetDataDir() / \"mempool.dat.new\").string().c_str(), \"wb\");\n+=======\n         FILE* filestr = fsbridge::fopen(GetDataDir() / \"mempool.dat.new\", \"wb\");\n+>>>>>>> master\n         if (!filestr) {\n             return;\n         }"
      },
      {
        "sha": "99c9010f35908daadc07ee4818c788ae3ee08a82",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 0,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -535,6 +535,16 @@ UniValue importwallet(const JSONRPCRequest& request)\n         nTimeBegin = std::min(nTimeBegin, nTime);\n     }\n     file.close();\n+<<<<<<< HEAD\n+    pwalletMain->ShowProgress(\"\", 100); // hide progress dialog in GUI\n+    pwalletMain->UpdateTimeFirstKey(nTimeBegin);\n+\n+    CBlockIndex *pindex = chainActive.FindEarliestAtLeast(nTimeBegin - 7200);\n+\n+    LogPrintf(\"Rescanning last %i blocks\\n\", pindex ? chainActive.Height() - pindex->nHeight + 1 : 0);\n+    pwalletMain->ScanForWalletTransactions(pindex);\n+    pwalletMain->MarkDirty();\n+=======\n     pwallet->ShowProgress(\"\", 100); // hide progress dialog in GUI\n     pwallet->UpdateTimeFirstKey(nTimeBegin);\n \n@@ -543,6 +553,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n     LogPrintf(\"Rescanning last %i blocks\\n\", pindex ? chainActive.Height() - pindex->nHeight + 1 : 0);\n     pwallet->ScanForWalletTransactions(pindex);\n     pwallet->MarkDirty();\n+>>>>>>> master\n \n     if (!fGood)\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error adding some keys to wallet\");\n@@ -1117,6 +1128,13 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     }\n \n     if (fRescan && fRunScan && requests.size()) {\n+<<<<<<< HEAD\n+        CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - 7200, 0)) : chainActive.Genesis();\n+        CBlockIndex* scannedRange = nullptr;\n+        if (pindex) {\n+            scannedRange = pwalletMain->ScanForWalletTransactions(pindex, true);\n+            pwalletMain->ReacceptWalletTransactions();\n+=======\n         CBlockIndex* pindex = nLowestTimestamp > minimumTimestamp ? chainActive.FindEarliestAtLeast(std::max<int64_t>(nLowestTimestamp - TIMESTAMP_WINDOW, 0)) : chainActive.Genesis();\n         CBlockIndex* scannedRange = nullptr;\n         if (pindex) {\n@@ -1144,6 +1162,29 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n                 }\n                 ++i;\n             }\n+>>>>>>> master\n+        }\n+\n+        if (!scannedRange || scannedRange->nHeight > pindex->nHeight) {\n+            std::vector<UniValue> results = response.getValues();\n+            response.clear();\n+            response.setArray();\n+            size_t i = 0;\n+            for (const UniValue& request : requests.getValues()) {\n+                // If key creation date is within the successfully scanned\n+                // range, or if the import result already has an error set, let\n+                // the result stand unmodified. Otherwise replace the result\n+                // with an error message.\n+                if (GetImportTimestamp(request, now) - 7200 >= scannedRange->GetBlockTimeMax() || results.at(i).exists(\"error\")) {\n+                    response.push_back(results.at(i));\n+                } else {\n+                    UniValue result = UniValue(UniValue::VOBJ);\n+                    result.pushKV(\"success\", UniValue(false));\n+                    result.pushKV(\"error\", JSONRPCError(RPC_MISC_ERROR, strprintf(\"Failed to rescan before time %d, transactions may be missing.\", scannedRange->GetBlockTimeMax())));\n+                    response.push_back(std::move(result));\n+                }\n+                ++i;\n+            }\n         }\n     }\n "
      },
      {
        "sha": "9f6c5e4c9cddfb591c77ae9de8649dc913068e39",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -9,7 +9,10 @@\n #include <utility>\n #include <vector>\n \n+<<<<<<< HEAD\n+=======\n #include \"consensus/validation.h\"\n+>>>>>>> master\n #include \"rpc/server.h\"\n #include \"test/test_bitcoin.h\"\n #include \"validation.h\"\n@@ -416,7 +419,11 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n         CKey futureKey;\n         futureKey.MakeNewKey(true);\n         key.pushKV(\"scriptPubKey\", HexStr(GetScriptForRawPubKey(futureKey.GetPubKey())));\n+<<<<<<< HEAD\n+        key.pushKV(\"timestamp\", newTip->GetBlockTimeMax() + 7200);\n+=======\n         key.pushKV(\"timestamp\", newTip->GetBlockTimeMax() + TIMESTAMP_WINDOW);\n+>>>>>>> master\n         key.pushKV(\"internal\", UniValue(true));\n         keys.push_back(key);\n         JSONRPCRequest request;\n@@ -427,6 +434,8 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n         BOOST_CHECK_EQUAL(response.write(), strprintf(\"[{\\\"success\\\":false,\\\"error\\\":{\\\"code\\\":-1,\\\"message\\\":\\\"Failed to rescan before time %d, transactions may be missing.\\\"}},{\\\"success\\\":true}]\", newTip->GetBlockTimeMax()));\n         ::pwalletMain = backup;\n     }\n+<<<<<<< HEAD\n+=======\n \n     // Verify ScanForWalletTransactions does not return null when the scan is\n     // elided due to the nTimeFirstKey optimization.\n@@ -438,6 +447,7 @@ BOOST_FIXTURE_TEST_CASE(rescan, TestChain100Setup)\n         }\n         BOOST_CHECK_EQUAL(newTip, wallet.ScanForWalletTransactions(newTip));\n     }\n+>>>>>>> master\n }\n \n // Verify importwallet RPC starts rescan at earliest block with timestamp\n@@ -458,7 +468,11 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n \n     // Set key birthday to block time increased by the timestamp window, so\n     // rescan will start at the block time.\n+<<<<<<< HEAD\n+    const int64_t KEY_TIME = BLOCK_TIME + 7200;\n+=======\n     const int64_t KEY_TIME = BLOCK_TIME + TIMESTAMP_WINDOW;\n+>>>>>>> master\n     SetMockTime(KEY_TIME);\n     coinbaseTxns.emplace_back(*CreateAndProcessBlock({}, GetScriptForRawPubKey(coinbaseKey.GetPubKey())).vtx[0]);\n \n@@ -500,6 +514,8 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n     ::pwalletMain = pwalletMainBackup;\n }\n \n+<<<<<<< HEAD\n+=======\n // Check that GetImmatureCredit() returns a newly calculated value instead of\n // the cached value after a MarkDirty() call.\n //\n@@ -678,4 +694,5 @@ BOOST_FIXTURE_TEST_CASE(ListCoins, ListCoinsTestingSetup)\n     BOOST_CHECK_EQUAL(list.begin()->second.size(), 2);\n }\n \n+>>>>>>> master\n BOOST_AUTO_TEST_SUITE_END()"
      },
      {
        "sha": "8aae4829a854bbdafd4067743b915f6c619e622d",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1464,12 +1464,21 @@ void CWalletTx::GetAmounts(std::list<COutputEntry>& listReceived,\n  * exist in the wallet will be updated.\n  *\n  * Returns pointer to the first block in the last contiguous range that was\n+<<<<<<< HEAD\n+ * successfully scanned.\n+ *\n+ */\n+CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n+{\n+    CBlockIndex* ret = nullptr;\n+=======\n  * successfully scanned or elided (elided if pIndexStart points at a block\n  * before CWallet::nTimeFirstKey). Returns null if there is no such range, or\n  * the range doesn't include chainActive.Tip().\n  */\n CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate)\n {\n+>>>>>>> master\n     int64_t nNow = GetTime();\n     const CChainParams& chainParams = Params();\n \n@@ -1492,6 +1501,22 @@ CBlockIndex* CWallet::ScanForWalletTransactions(CBlockIndex* pindexStart, bool f\n         {\n             if (pindex->nHeight % 100 == 0 && dProgressTip - dProgressStart > 0.0)\n                 ShowProgress(_(\"Rescanning...\"), std::max(1, std::min(99, (int)((GuessVerificationProgress(chainParams.TxData(), pindex) - dProgressStart) / (dProgressTip - dProgressStart) * 100))));\n+<<<<<<< HEAD\n+\n+            CBlock block;\n+            if (ReadBlockFromDisk(block, pindex, Params().GetConsensus())) {\n+                for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n+                    AddToWalletIfInvolvingMe(*block.vtx[posInBlock], pindex, posInBlock, fUpdate);\n+                }\n+                if (!ret) {\n+                    ret = pindex;\n+                }\n+            } else {\n+                ret = nullptr;\n+            }\n+            pindex = chainActive.Next(pindex);\n+=======\n+>>>>>>> master\n             if (GetTime() >= nNow + 60) {\n                 nNow = GetTime();\n                 LogPrintf(\"Still rescanning. At block %d. Progress=%f\\n\", pindex->nHeight, GuessVerificationProgress(chainParams.TxData(), pindex));"
      },
      {
        "sha": "3e2b54f5ab2d00803812f5b7298c37db47418148",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -914,10 +914,15 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void MarkDirty();\n     bool AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose=true);\n     bool LoadToWallet(const CWalletTx& wtxIn);\n+<<<<<<< HEAD\n+    void SyncTransaction(const CTransaction& tx, const CBlockIndex *pindex, int posInBlock) override;\n+    bool AddToWalletIfInvolvingMe(const CTransaction& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n+=======\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex *pindex, const std::vector<CTransactionRef>& vtxConflicted) override;\n     void BlockDisconnected(const std::shared_ptr<const CBlock>& pblock) override;\n     bool AddToWalletIfInvolvingMe(const CTransactionRef& tx, const CBlockIndex* pIndex, int posInBlock, bool fUpdate);\n+>>>>>>> master\n     CBlockIndex* ScanForWalletTransactions(CBlockIndex* pindexStart, bool fUpdate = false);\n     void ReacceptWalletTransactions();\n     void ResendWalletTransactions(int64_t nBestBlockTime, CConnman* connman) override;"
      },
      {
        "sha": "702a7a71914e6974a9214324ba1e548bc7b44299",
        "filename": "test/functional/import-rescan.py",
        "status": "modified",
        "additions": 9,
        "deletions": 5,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/import-rescan.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/import-rescan.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/import-rescan.py?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -7,11 +7,11 @@\n Test rescan behavior of importaddress, importpubkey, importprivkey, and\n importmulti RPCs with different types of keys and rescan options.\n \n-In the first part of the test, node 0 creates an address for each type of\n-import RPC call and sends BTC to it. Then other nodes import the addresses,\n-and the test makes listtransactions and getbalance calls to confirm that the\n-importing node either did or did not execute rescans picking up the send\n-transactions.\n+In the first part of the test, node 1 creates an address for each type of\n+import RPC call and node 0 sends BTC to it. Then other nodes import the\n+addresses, and the test makes listtransactions and getbalance calls to confirm\n+that the importing node either did or did not execute rescans picking up the\n+send transactions.\n \n In the second part of the test, node 0 sends more BTC to each address, and the\n test makes more listtransactions and getbalance calls to confirm that the\n@@ -116,7 +116,11 @@ def __init__(self):\n         self.num_nodes = 2 + len(IMPORT_NODES)\n \n     def setup_network(self):\n+<<<<<<< HEAD:qa/rpc-tests/import-rescan.py\n+        extra_args = [[\"-debug=1\"] for _ in range(self.num_nodes)]\n+=======\n         extra_args = [[] for _ in range(self.num_nodes)]\n+>>>>>>> master:test/functional/import-rescan.py\n         for i, import_node in enumerate(IMPORT_NODES, 2):\n             if import_node.prune:\n                 extra_args[i] += [\"-prune=1\"]"
      },
      {
        "sha": "a189ba7acd316a40e5ed86cf6a0655c53051f87e",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -96,15 +96,23 @@ def run_test(self):\n \n         # Check that ancestor modified fees includes fee deltas from\n         # prioritisetransaction\n+<<<<<<< HEAD:qa/rpc-tests/mempool_packages.py\n+        self.nodes[0].prioritisetransaction(chain[0], 0, 1000)\n+=======\n         self.nodes[0].prioritisetransaction(chain[0], 1000)\n+>>>>>>> master:test/functional/mempool_packages.py\n         mempool = self.nodes[0].getrawmempool(True)\n         ancestor_fees = 0\n         for x in chain:\n             ancestor_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n         \n         # Undo the prioritisetransaction for later tests\n+<<<<<<< HEAD:qa/rpc-tests/mempool_packages.py\n+        self.nodes[0].prioritisetransaction(chain[0], 0, -1000)\n+=======\n         self.nodes[0].prioritisetransaction(chain[0], -1000)\n+>>>>>>> master:test/functional/mempool_packages.py\n \n         # Check that descendant modified fees includes fee deltas from\n         # prioritisetransaction"
      },
      {
        "sha": "f3e863820985dcaed37ea5754d7ef119d7bced7e",
        "filename": "test/functional/pruning.py",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/pruning.py?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -19,7 +19,11 @@\n # Rescans start at the earliest block up to 2 hours before a key timestamp, so\n # the manual prune RPC avoids pruning blocks in the same window to be\n # compatible with pruning based on key creation time.\n+<<<<<<< HEAD:qa/rpc-tests/pruning.py\n+RESCAN_WINDOW = 2 * 60 * 60\n+=======\n TIMESTAMP_WINDOW = 2 * 60 * 60\n+>>>>>>> master:test/functional/pruning.py\n \n \n def calc_usage(blockdir):\n@@ -229,7 +233,11 @@ def manual_test(self, node_number, use_timestamp):\n \n         def height(index):\n             if use_timestamp:\n+<<<<<<< HEAD:qa/rpc-tests/pruning.py\n+                return node.getblockheader(node.getblockhash(index))[\"time\"] + RESCAN_WINDOW\n+=======\n                 return node.getblockheader(node.getblockhash(index))[\"time\"] + TIMESTAMP_WINDOW\n+>>>>>>> master:test/functional/pruning.py\n             else:\n                 return index\n "
      },
      {
        "sha": "e34d520613734de31500db2f02fcc6c9041c159a",
        "filename": "test/functional/segwit.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/segwit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/segwit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/segwit.py?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -10,6 +10,10 @@\n from test_framework.address import script_to_p2sh, key_to_p2pkh\n from test_framework.script import CScript, OP_HASH160, OP_CHECKSIG, OP_0, hash160, OP_EQUAL, OP_DUP, OP_EQUALVERIFY, OP_1, OP_2, OP_CHECKMULTISIG, OP_TRUE\n from io import BytesIO\n+<<<<<<< HEAD:qa/rpc-tests/segwit.py\n+from test_framework.mininode import ToHex, FromHex, COIN\n+=======\n+>>>>>>> master:test/functional/segwit.py\n \n NODE_0 = 0\n NODE_1 = 1\n@@ -238,7 +242,11 @@ def run_test(self):\n \n         self.nodes[0].generate(1) # Mine a block to clear the gbt cache\n \n+<<<<<<< HEAD:qa/rpc-tests/segwit.py\n+        print(\"Non-segwit miners are able to use GBT response after activation.\")\n+=======\n         self.log.info(\"Non-segwit miners are able to use GBT response after activation.\")\n+>>>>>>> master:test/functional/segwit.py\n         # Create a 3-tx chain: tx1 (non-segwit input, paying to a segwit output) ->\n         #                      tx2 (segwit input, paying to a non-segwit output) ->\n         #                      tx3 (non-segwit input, paying to a non-segwit output).\n@@ -285,7 +293,11 @@ def run_test(self):\n         # Mine a block to clear the gbt cache again.\n         self.nodes[0].generate(1)\n \n+<<<<<<< HEAD:qa/rpc-tests/segwit.py\n+        print(\"Verify behaviour of importaddress, addwitnessaddress and listunspent\")\n+=======\n         self.log.info(\"Verify behaviour of importaddress, addwitnessaddress and listunspent\")\n+>>>>>>> master:test/functional/segwit.py\n \n         # Some public keys to be used later\n         pubkeys = ["
      },
      {
        "sha": "72887092a145c815cf1bec2c0164abf0b8b95b8e",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -292,7 +292,11 @@ def stop_node(node, i):\n     try:\n         node.stop()\n     except http.client.CannotSendRequest as e:\n+<<<<<<< HEAD:qa/rpc-tests/test_framework/util.py\n+        print(\"WARN: Unable to stop node: \" + repr(e))\n+=======\n         logger.exception(\"Unable to stop node\")\n+>>>>>>> master:test/functional/test_framework/util.py\n     return_code = bitcoind_processes[i].wait(timeout=BITCOIND_PROC_WAIT_TIMEOUT)\n     assert_equal(return_code, 0)\n     del bitcoind_processes[i]\n@@ -306,6 +310,8 @@ def set_node_times(nodes, t):\n     for node in nodes:\n         node.setmocktime(t)\n \n+<<<<<<< HEAD:qa/rpc-tests/test_framework/util.py\n+=======\n def disconnect_nodes(from_connection, node_num):\n     for peer_id in [peer['id'] for peer in from_connection.getpeerinfo() if \"testnode%d\" % node_num in peer['subver']]:\n         from_connection.disconnectnode(nodeid=peer_id)\n@@ -317,6 +323,7 @@ def disconnect_nodes(from_connection, node_num):\n     else:\n         raise AssertionError(\"timed out waiting for disconnect\")\n \n+>>>>>>> master:test/functional/test_framework/util.py\n def connect_nodes(from_connection, node_num):\n     ip_port = \"127.0.0.1:\"+str(p2p_port(node_num))\n     from_connection.addnode(ip_port, \"onetry\")"
      }
    ]
  },
  {
    "sha": "e54a345df2d305291924bb3091b681d8304ed98f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTRhMzQ1ZGYyZDMwNTI5MTkyNGJiMzA5MWI2ODFkODMwNGVkOThm",
    "commit": {
      "author": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T12:02:01Z"
      },
      "committer": {
        "name": "Spencer Lievens",
        "email": "silkcoindeveloper@gmail.uk",
        "date": "2017-05-24T12:02:01Z"
      },
      "message": "Initial Rename",
      "tree": {
        "sha": "40fc6d4654abbf79eaf379e2317bbfff3fcb9d21",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/40fc6d4654abbf79eaf379e2317bbfff3fcb9d21"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e54a345df2d305291924bb3091b681d8304ed98f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54a345df2d305291924bb3091b681d8304ed98f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e54a345df2d305291924bb3091b681d8304ed98f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54a345df2d305291924bb3091b681d8304ed98f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e"
      }
    ],
    "stats": {
      "total": 17362,
      "additions": 8669,
      "deletions": 8693
    },
    "files": [
      {
        "sha": "3dd1f003f9110e879466a53d43688013b62f9979",
        "filename": ".github/ISSUE_TEMPLATE.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/.github/ISSUE_TEMPLATE.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/.github/ISSUE_TEMPLATE.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.github/ISSUE_TEMPLATE.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n <!--- Remove sections that do not apply -->\n \n-This issue tracker is only for technical issues related to bitcoin-core.\n+This issue tracker is only for technical issues related to flow-core.\n \n-General bitcoin questions and/or support requests and are best directed to the [Bitcoin StackExchange](https://bitcoin.stackexchange.com).\n+General flow questions and/or support requests and are best directed to the [Flow StackExchange](https://flow.stackexchange.com).\n \n-For reporting security issues, please read instructions at [https://bitcoincore.org/en/contact/](https://bitcoincore.org/en/contact/).\n+For reporting security issues, please read instructions at [https://flowcore.org/en/contact/](https://flowcore.org/en/contact/).\n \n ### Describe the issue\n \n@@ -23,7 +23,7 @@ Tell us what happens instead\n ### Screenshots.\n If the issue is related to the GUI, screenshots can be added to this issue via drag & drop.\n \n-### What version of bitcoin-core are you using?\n+### What version of flow-core are you using?\n List the version number/commit ID, and if it is an official binary, self compiled or a distribution package such as PPA.\n \n ### Machine specs:"
      },
      {
        "sha": "61c2473cb97ad04b80e1a854fa7e8cbda64aec7d",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n *.tar.gz\n \n *.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/test/test_bitcoin_fuzzy\n-src/qt/test/test_bitcoin-qt\n+src/flow\n+src/flowd\n+src/flow-cli\n+src/flow-tx\n+src/test/test_flow\n+src/test/test_flow_fuzzy\n+src/qt/test/test_flow-qt\n \n # autoreconf\n Makefile.in\n@@ -30,8 +30,8 @@ config.log\n config.status\n configure\n libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n+src/config/flow-config.h\n+src/config/flow-config.h.in\n src/config/stamp-h1\n share/setup.nsi\n share/qt/Info.plist\n@@ -74,12 +74,12 @@ src/qt/test/moc*.cpp\n # Compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n+flow-qt\n+Flow-Qt.app\n \n # Unit-tests\n Makefile.test\n-bitcoin-qt_test\n+flow-qt_test\n src/test/buildenv.py\n \n # Resources cpp\n@@ -93,7 +93,7 @@ build\n *.gcno\n *.gcda\n /*.info\n-test_bitcoin.coverage/\n+test_flow.coverage/\n total.coverage/\n coverage_percent.txt\n \n@@ -109,5 +109,5 @@ test/cache/*\n \n /doc/doxygen/\n \n-libbitcoinconsensus.pc\n+libflowconsensus.pc\n contrib/devtools/split-debug.sh"
      },
      {
        "sha": "048be1d7dc834621c2f9cf47265b00878e62aebc",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -17,24 +17,24 @@ env:\n     - CCACHE_TEMPDIR=/tmp/.ccache-temp\n     - CCACHE_COMPRESS=1\n     - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n+    - SDK_URL=https://flowcore.org/depends-sources/sdks\n     - PYTHON_DEBUG=1\n     - WINEDEBUG=fixme-all\n   matrix:\n # ARM\n-    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" CHECK_DOC=1 GOAL=\"install\" FLOW_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Win32\n-    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n+    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" FLOW_CONFIG=\"--enable-reduce-exports\"\n # 32-bit + dash\n-    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+    - HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python3-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" FLOW_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n # Win64\n-    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n-# bitcoind\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"python3 nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" FLOW_CONFIG=\"--enable-reduce-exports\"\n+# flowd\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python3-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" FLOW_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n # No wallet\n-    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3 xvfb\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n+    - HOST=x86_64-unknown-linux-gnu PACKAGES=\"python3 xvfb\" DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" FLOW_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n # Cross-Mac\n-    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n+    - HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" FLOW_CONFIG=\"--enable-gui --enable-reduce-exports\" OSX_SDK=10.11 GOAL=\"deploy\"\n \n before_install:\n     - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n@@ -53,20 +53,20 @@ before_script:\n     # Start xvfb if needed, as documented at https://docs.travis-ci.com/user/gui-and-headless-browsers/#Using-xvfb-to-Run-Tests-That-Require-a-GUI\n     - if [ \"$RUN_TESTS\" = \"true\" -a \"${DEP_OPTS#*NO_QT=1}\" = \"$DEP_OPTS\" ]; then export DISPLAY=:99.0; /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac; fi\n script:\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n-    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"bitcoin/bitcoin\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"flow/flow\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then while read LINE; do travis_retry gpg --keyserver hkp://subset.pool.sks-keyservers.net --recv-keys $LINE; done < contrib/verify-commits/trusted-keys; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"flow/flow\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then git fetch --unshallow; fi\n+    - if [ \"$CHECK_DOC\" = 1 -a \"$TRAVIS_REPO_SLUG\" = \"flow/flow\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then contrib/verify-commits/verify-commits.sh; fi\n     - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`\n     - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n+    - FLOW_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - mkdir build && cd build\n-    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - ../configure --cache-file=config.cache $FLOW_CONFIG_ALL $FLOW_CONFIG || ( cat config.log && false)\n     - make distdir VERSION=$HOST\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n+    - cd flow-$HOST\n+    - ./configure --cache-file=../config.cache $FLOW_CONFIG_ALL $FLOW_CONFIG || ( cat config.log && false)\n     - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n     - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n     - if [ \"$RUN_TESTS\" = \"true\" ]; then make $MAKEJOBS check VERBOSE=1; fi"
      },
      {
        "sha": "bf3917991535068bc352da76b98d4071269fe387",
        "filename": ".tx/config",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n [main]\n host = https://www.transifex.com\n \n-[bitcoin.qt-translation-014x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n+[flow.qt-translation-014x]\n+file_filter = src/qt/locale/flow_<lang>.ts\n+source_file = src/qt/locale/flow_en.ts\n source_lang = en"
      },
      {
        "sha": "68ed24dd6fc2700de2ac102d1927e0edd27d8d32",
        "filename": "CONTRIBUTING.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n-Contributing to Bitcoin Core\n+Contributing to Flow Core\n ============================\n \n-The Bitcoin Core project operates an open contributor model where anyone is\n+The Flow Core project operates an open contributor model where anyone is\n welcome to contribute towards development in the form of peer review, testing\n and patches. This document explains the practical process and guidelines for\n contributing.\n@@ -57,12 +57,12 @@ the pull request affects. Valid areas as:\n \n   - *Consensus* for changes to consensus critical code\n   - *Docs* for changes to the documentation\n-  - *Qt* for changes to bitcoin-qt\n+  - *Qt* for changes to flow-qt\n   - *Mining* for changes to the mining code\n   - *Net* or *P2P* for changes to the peer-to-peer network code\n   - *RPC/REST/ZMQ* for changes to the RPC, REST or ZMQ APIs\n   - *Scripts and tools* for changes to the scripts and tools\n-  - *Tests* for changes to the bitcoin unit tests or QA tests\n+  - *Tests* for changes to the flow unit tests or QA tests\n   - *Trivial* should **only** be used for PRs that do not change generated\n     executable code. Notably, refactors (change of function arguments and code\n     reorganization) and changes in behavior should **not** be marked as trivial.\n@@ -157,11 +157,11 @@ where possible keep them short, uncomplex and easy to verify.\n \"Decision Making\" Process\n -------------------------\n \n-The following applies to code changes to the Bitcoin Core project (and related\n-projects such as libsecp256k1), and is not to be confused with overall Bitcoin\n+The following applies to code changes to the Flow Core project (and related\n+projects such as libsecp256k1), and is not to be confused with overall Flow\n Network Protocol consensus changes.\n \n-Whether a pull request is merged into Bitcoin Core rests with the project merge\n+Whether a pull request is merged into Flow Core rests with the project merge\n maintainers and ultimately the project lead.\n \n Maintainers will take into consideration if a patch is in line with the general\n@@ -179,7 +179,7 @@ In general, all pull requests must:\n   - where bugs are fixed, where possible, there should be unit tests\n     demonstrating the bug and also proving the fix. This helps prevent regression.\n \n-Patches that change Bitcoin consensus rules are considerably more involved than\n+Patches that change Flow consensus rules are considerably more involved than\n normal because they affect the entire ecosystem and so must be preceded by\n extensive mailing list discussions and have a numbered BIP. While each case will\n be different, one should be prepared to expend more time and effort than for\n@@ -220,7 +220,7 @@ higher in terms of discussion and peer review requirements, keeping in mind that\n mistakes could be very costly to the wider community. This includes refactoring\n of consensus critical code.\n \n-Where a patch set proposes to change the Bitcoin consensus, it must have been\n+Where a patch set proposes to change the Flow consensus, it must have been\n discussed extensively on the mailing list and IRC, be accompanied by a widely\n discussed BIP and have a generally widely perceived technical consensus of being\n a worthwhile change based on the judgement of the maintainers.\n@@ -260,7 +260,7 @@ about:\n Release Policy\n --------------\n \n-The project leader is the release manager for each Bitcoin Core release.\n+The project leader is the release manager for each Flow Core release.\n \n Copyright\n ---------"
      },
      {
        "sha": "3cb8c6a0efeeb8551acadd65e574c44b11611a8e",
        "filename": "COPYING",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,6 +1,6 @@\n The MIT License (MIT)\n \n-Copyright (c) 2009-2017 The Bitcoin Core developers\n+Copyright (c) 2009-2017 The Flow Core developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "b196c250f0fc7742545ea5cbd664094ef67bde8b",
        "filename": "INSTALL.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/INSTALL.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/INSTALL.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n-Building Bitcoin\n+Building Flow\n ================\n \n See doc/build-*.md for instructions on building the various\n-elements of the Bitcoin Core reference implementation of Bitcoin.\n+elements of the Flow Core reference implementation of Flow."
      },
      {
        "sha": "316e70931c9427167276d22233b029cc3ec3f915",
        "filename": "Makefile.am",
        "status": "modified",
        "additions": 43,
        "deletions": 43,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -12,20 +12,20 @@ endif\n GZIP_ENV=\"-9n\"\n export PYTHONPATH\n \n-if BUILD_BITCOIN_LIBS\n+if BUILD_FLOW_LIBS\n pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n+pkgconfig_DATA = libflowconsensus.pc\n endif\n \n-BITCOIND_BIN=$(top_builddir)/src/$(BITCOIN_DAEMON_NAME)$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/$(BITCOIN_GUI_NAME)$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/$(BITCOIN_CLI_NAME)$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n+FLOWD_BIN=$(top_builddir)/src/$(FLOW_DAEMON_NAME)$(EXEEXT)\n+FLOW_QT_BIN=$(top_builddir)/src/qt/$(FLOW_GUI_NAME)$(EXEEXT)\n+FLOW_CLI_BIN=$(top_builddir)/src/$(FLOW_CLI_NAME)$(EXEEXT)\n+FLOW_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n \n empty :=\n space := $(empty) $(empty)\n \n-OSX_APP=Bitcoin-Qt.app\n+OSX_APP=Flow-Qt.app\n OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n OSX_DMG = $(OSX_VOLNAME).dmg\n OSX_BACKGROUND_SVG=background.svg\n@@ -34,21 +34,21 @@ OSX_BACKGROUND_IMAGE_DPIS=36 72\n OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n+OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/flow.icns\n OSX_PLIST=$(top_builddir)/share/qt/Info.plist #not installed\n OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n \n DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-DIST_CONTRIB = $(top_srcdir)/contrib/bitcoin-cli.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoin-tx.bash-completion \\\n-\t       $(top_srcdir)/contrib/bitcoind.bash-completion \\\n+DIST_CONTRIB = $(top_srcdir)/contrib/flow-cli.bash-completion \\\n+\t       $(top_srcdir)/contrib/flow-tx.bash-completion \\\n+\t       $(top_srcdir)/contrib/flowd.bash-completion \\\n \t       $(top_srcdir)/contrib/init \\\n \t       $(top_srcdir)/contrib/rpm\n \n BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n            $(top_srcdir)/contrib/devtools/security-check.py\n \n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n+WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/flow.ico \\\n   $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n   $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n   $(top_srcdir)/doc/README_windows.txt\n@@ -60,18 +60,18 @@ OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n   $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n \n COVERAGE_INFO = baseline_filtered_combined.info baseline.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n+  leveldb_baseline.info test_flow_filtered.info total_coverage.info \\\n   baseline_filtered.info functional_test.info functional_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n+  leveldb_baseline_filtered.info test_flow_coverage.info test_flow.info\n \n dist-hook:\n \t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n \n-$(BITCOIN_WIN_INSTALLER): all-recursive\n+$(FLOW_WIN_INSTALLER): all-recursive\n \t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(FLOWD_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(FLOW_QT_BIN) $(top_builddir)/release\n+\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(FLOW_CLI_BIN) $(top_builddir)/release\n \t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n \t  echo error: could not build $@\n \t@echo built $@\n@@ -88,11 +88,11 @@ $(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n+$(OSX_APP)/Contents/Resources/flow.icns: $(OSX_INSTALLER_ICONS)\n \t$(MKDIR_P) $(@D)\n \t$(INSTALL_DATA) $< $@\n \n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n+$(OSX_APP)/Contents/MacOS/Flow-Qt: $(FLOW_QT_BIN)\n \t$(MKDIR_P) $(@D)\n \tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n \n@@ -101,8 +101,8 @@ $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n \techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n \n OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n+  $(OSX_APP)/Contents/Resources/flow.icns $(OSX_APP)/Contents/Info.plist \\\n+  $(OSX_APP)/Contents/MacOS/Flow-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n \n osx_volname:\n \techo $(OSX_VOLNAME) >$@\n@@ -127,7 +127,7 @@ $(APP_DIST_DIR)/Applications:\n \t@rm -f $@\n \t@cd $(@D); $(LN_S) /Applications $(@F)\n \n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n+$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Flow-Qt\n \n $(OSX_DMG): $(APP_DIST_EXTRAS)\n \t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n@@ -142,7 +142,7 @@ $(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIF\n $(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n \t$(PYTHON) $< \"$@\" \"$(OSX_VOLNAME)\"\n \n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n+$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Flow-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n \tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(PYTHON) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n \n deploydir: $(APP_DIST_EXTRAS)\n@@ -153,16 +153,16 @@ appbundle: $(OSX_APP_BUILT)\n deploy: $(OSX_DMG)\n endif\n if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n+deploy: $(FLOW_WIN_INSTALLER)\n endif\n \n-$(BITCOIN_QT_BIN): FORCE\n+$(FLOW_QT_BIN): FORCE\n \t$(MAKE) -C src qt/$(@F)\n \n-$(BITCOIND_BIN): FORCE\n+$(FLOWD_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n-$(BITCOIN_CLI_BIN): FORCE\n+$(FLOW_CLI_BIN): FORCE\n \t$(MAKE) -C src $(@F)\n \n if USE_LCOV\n@@ -182,16 +182,16 @@ leveldb_baseline_filtered.info: leveldb_baseline.info\n baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n \t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n \n-test_bitcoin.info: baseline_filtered_combined.info\n+test_flow.info: baseline_filtered_combined.info\n \t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n+\t$(LCOV) -c -d $(abs_builddir)/src -t test_flow -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n \t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n \n-test_bitcoin_filtered.info: test_bitcoin.info\n+test_flow_filtered.info: test_flow.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-functional_test.info: test_bitcoin_filtered.info\n+functional_test.info: test_flow_filtered.info\n \t-@TIMEOUT=15 python test/functional/test_runner.py $(EXTENDED_FUNCTIONAL_TESTS)\n \t$(LCOV) -c -d $(abs_builddir)/src --t functional-tests -o $@\n \t$(LCOV) -z -d $(abs_builddir)/src\n@@ -200,21 +200,21 @@ functional_test.info: test_bitcoin_filtered.info\n functional_test_filtered.info: functional_test.info\n \t$(LCOV) -r $< \"/usr/include/*\" -o $@\n \n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n+test_flow_coverage.info: baseline_filtered_combined.info test_flow_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_flow_filtered.info -o $@\n \n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info functional_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n+total_coverage.info: baseline_filtered_combined.info test_flow_filtered.info functional_test_filtered.info\n+\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_flow_filtered.info -a functional_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n \n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n+test_flow.coverage/.dirstamp:  test_flow_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n total.coverage/.dirstamp: total_coverage.info\n \t$(GENHTML) -s $< -o $(@D)\n \t@touch $@\n \n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n+cov: test_flow.coverage/.dirstamp total.coverage/.dirstamp\n \n endif\n \n@@ -224,8 +224,8 @@ EXTRA_DIST = $(top_srcdir)/share/genbuild.sh test/functional/test_runner.py test\n \n EXTRA_DIST += \\\n     test/util/bctest.py \\\n-    test/util/bitcoin-util-test.py \\\n-    test/util/data/bitcoin-util-test.json \\\n+    test/util/flow-util-test.py \\\n+    test/util/data/flow-util-test.json \\\n     test/util/data/blanktxv1.hex \\\n     test/util/data/blanktxv1.json \\\n     test/util/data/blanktxv2.hex \\\n@@ -275,7 +275,7 @@ EXTRA_DIST += \\\n     test/util/data/txcreatesignv1.json \\\n     test/util/data/txcreatesignv2.hex\n \n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n+CLEANFILES = $(OSX_DMG) $(FLOW_WIN_INSTALLER)\n \n # This file is problematic for out-of-tree builds if it exists.\n DISTCLEANFILES = test/util/buildenv.pyc\n@@ -285,5 +285,5 @@ DISTCLEANFILES = test/util/buildenv.pyc\n DISTCHECK_CONFIGURE_FLAGS = --enable-man\n \n clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n+\trm -rf coverage_percent.txt test_flow.coverage/ total.coverage/ test/tmp/ cache/ $(OSX_APP)\n \trm -rf test/functional/__pycache__"
      },
      {
        "sha": "86e56778baef2f824919e6e9ee0ceb8df99b0616",
        "filename": "README.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin Core integration/staging tree\n+Flow Core integration/staging tree\n =====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+[![Build Status](https://travis-ci.org/flow/flow.svg?branch=master)](https://travis-ci.org/flow/flow)\n \n-https://bitcoincore.org\n+https://flowcore.org\n \n-What is Bitcoin?\n+What is Flow?\n ----------------\n \n-Bitcoin is an experimental digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n+Flow is an experimental digital currency that enables instant payments to\n+anyone, anywhere in the world. Flow uses peer-to-peer technology to operate\n with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n+out collectively by the network. Flow Core is the name of open source\n software which enables the use of this currency.\n \n For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+the Flow Core software, see https://flow.org/en/download, or read the\n+[original whitepaper](https://flowcore.org/flow.pdf).\n \n License\n -------\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n+Flow Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n information or see https://opensource.org/licenses/MIT.\n \n Development Process\n -------------------\n \n The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n+completely stable. [Tags](https://github.com/flow/flow/tags) are created\n+regularly to indicate new official, stable release versions of Flow Core.\n \n The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n \n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n+The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/flow-dev)\n should be used to discuss complicated or controversial changes before working\n on a patch set.\n \n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n+Developer IRC can be found on Freenode at #flow-core-dev.\n \n Testing\n -------\n@@ -71,12 +71,12 @@ Translations\n ------------\n \n Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n+[Flow Core's Transifex page](https://www.transifex.com/projects/p/flow/).\n \n Translations are periodically pulled from Transifex and merged into the git repository. See the\n [translation process](doc/translation_process.md) for details on how this works.\n \n **Important**: We do not accept translation changes as GitHub pull requests because the next\n pull from Transifex would automatically overwrite them again.\n \n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/flow-translators)."
      },
      {
        "sha": "f707d3d661f7aa3b0b011221c224f91a5cbdc224",
        "filename": "autogen.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "9867cd0d9e12dcce7942af9ca2bcbf802e69eccf",
        "filename": "build-aux/m4/flow_find_bdb48.m4",
        "status": "renamed",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/flow_find_bdb48.m4?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,8 +1,8 @@\n-dnl Copyright (c) 2013-2015 The Bitcoin Core developers\n+dnl Copyright (c) 2013-2015 The Flow Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n+AC_DEFUN([FLOW_FIND_BDB48],[\n   AC_ARG_VAR(BDB_CFLAGS, [C compiler flags for BerkeleyDB, bypasses autodetection])\n   AC_ARG_VAR(BDB_LIBS, [Linker flags for BerkeleyDB, bypasses autodetection])\n \n@@ -47,14 +47,14 @@ AC_DEFUN([BITCOIN_FIND_BDB48],[\n       AC_MSG_RESULT([no])\n       AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n     elif test \"x$bdb48path\" = \"xX\"; then\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n+      FLOW_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n       AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n         AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n       ],[\n         AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n       ])\n     else\n-      BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n+      FLOW_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n       bdbpath=\"${bdb48path}\"\n     fi\n   else",
        "previous_filename": "build-aux/m4/bitcoin_find_bdb48.m4"
      },
      {
        "sha": "cadf47049083e1ab7d1f9dc1f6d1684f50fc8cd8",
        "filename": "build-aux/m4/flow_qt.m4",
        "status": "renamed",
        "additions": 125,
        "deletions": 125,
        "changes": 250,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/flow_qt.m4?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,23 +1,23 @@\n-dnl Copyright (c) 2013-2016 The Bitcoin Core developers\n+dnl Copyright (c) 2013-2016 The Flow Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n+dnl Output: If qt version is auto, set flow_enable_qt to false. Else, exit.\n+AC_DEFUN([FLOW_QT_FAIL],[\n+  if test \"x$flow_qt_want_version\" = \"xauto\" && test x$flow_qt_force != xyes; then\n+    if test x$flow_enable_qt != xno; then\n+      AC_MSG_WARN([$1; flow-qt frontend will not be built])\n     fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n+    flow_enable_qt=no\n+    flow_enable_qt_test=no\n   else\n     AC_MSG_ERROR([$1])\n   fi\n ])\n \n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+AC_DEFUN([FLOW_QT_CHECK],[\n+  if test \"x$flow_enable_qt\" != \"xno\" && test x$flow_qt_want_version != xno; then\n     true\n     $1\n   else\n@@ -26,43 +26,43 @@ AC_DEFUN([BITCOIN_QT_CHECK],[\n   fi\n ])\n \n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n+dnl FLOW_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n dnl Helper for finding the path of programs needed for Qt.\n dnl Inputs: $1: Variable to be set\n dnl Inputs: $2: List of programs to search for\n dnl Inputs: $3: Look for $2 here before $PATH\n dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n+AC_DEFUN([FLOW_QT_PATH_PROGS],[\n+  FLOW_QT_CHECK([\n     if test \"x$3\" != \"x\"; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n     if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n+      FLOW_QT_FAIL([$1 not found])\n     fi\n   ])\n ])\n \n dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n+dnl This must be called before any other FLOW_QT* macros to ensure that\n dnl input variables are set correctly.\n dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n+AC_DEFUN([FLOW_QT_INIT],[\n   dnl enable qt support\n   AC_ARG_WITH([gui],\n     [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n+    [build flow-qt GUI (default=auto, qt5 tried first)])],\n     [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n+     flow_qt_want_version=$withval\n+     if test x$flow_qt_want_version = xyes; then\n+       flow_qt_force=yes\n+       flow_qt_want_version=auto\n      fi\n     ],\n-    [bitcoin_qt_want_version=auto])\n+    [flow_qt_want_version=auto])\n \n   AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n   AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n@@ -83,20 +83,20 @@ dnl Find the appropriate version of Qt libraries and includes.\n dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n+dnl Outputs: See _FLOW_QT_FIND_LIBS_*\n dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n+dnl Outputs: flow_enable_qt, flow_enable_qt_dbus, flow_enable_qt_test\n+AC_DEFUN([FLOW_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n   if test x$use_pkgconfig = x; then\n     use_pkgconfig=yes\n   fi\n \n   if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n+    FLOW_QT_CHECK([_FLOW_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n   else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n+    FLOW_QT_CHECK([_FLOW_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n   fi\n \n   dnl This is ugly and complicated. Yuck. Works as follows:\n@@ -106,48 +106,48 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n   dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n   dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n+  dnl _FLOW_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n   dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n+  FLOW_QT_CHECK([\n   TEMP_CPPFLAGS=$CPPFLAGS\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n+  if test x$flow_qt_got_major_vers = x5; then\n+    _FLOW_QT_IS_STATIC\n+    if test x$flow_cv_static_qt = xyes; then\n+      _FLOW_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+      AC_CACHE_CHECK(for Qt < 5.4, flow_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n           [[#include <QtCore>]],[[\n           #if QT_VERSION >= 0x050400\n           choke;\n           #endif\n           ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n+        [flow_cv_need_acc_widget=yes],\n+        [flow_cv_need_acc_widget=no])\n       ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n+      if test \"x$flow_cv_need_acc_widget\" = \"xyes\"; then\n+        _FLOW_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n+      _FLOW_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n       if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n+        _FLOW_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n       elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n+        _FLOW_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n       elif test x$TARGET_OS = xdarwin; then\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n+        _FLOW_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n       fi\n     fi\n   else\n     if test x$TARGET_OS = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n+      _FLOW_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n          Q_IMPORT_PLUGIN(qjpcodecs)\n          Q_IMPORT_PLUGIN(qtwcodecs)\n@@ -161,13 +161,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   ])\n \n   if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n+    if test x$flow_qt_got_major_vers = x5; then\n       qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n     fi\n   fi\n \n   if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n+    FLOW_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     TEMP_CXXFLAGS=$CXXFLAGS\n@@ -186,7 +186,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     CXXFLAGS=$TEMP_CXXFLAGS\n     ])\n   else\n-    BITCOIN_QT_CHECK([\n+    FLOW_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n@@ -203,39 +203,39 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     ])\n   fi\n \n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n+  FLOW_QT_PATH_PROGS([MOC], [moc-qt${flow_qt_got_major_vers} moc${flow_qt_got_major_vers} moc], $qt_bin_path)\n+  FLOW_QT_PATH_PROGS([UIC], [uic-qt${flow_qt_got_major_vers} uic${flow_qt_got_major_vers} uic], $qt_bin_path)\n+  FLOW_QT_PATH_PROGS([RCC], [rcc-qt${flow_qt_got_major_vers} rcc${flow_qt_got_major_vers} rcc], $qt_bin_path)\n+  FLOW_QT_PATH_PROGS([LRELEASE], [lrelease-qt${flow_qt_got_major_vers} lrelease${flow_qt_got_major_vers} lrelease], $qt_bin_path)\n+  FLOW_QT_PATH_PROGS([LUPDATE], [lupdate-qt${flow_qt_got_major_vers} lupdate${flow_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n \n   MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n   case $host in\n     *darwin*)\n-     BITCOIN_QT_CHECK([\n+     FLOW_QT_CHECK([\n        MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n        base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n        AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n      ])\n     ;;\n     *mingw*)\n-       BITCOIN_QT_CHECK([\n+       FLOW_QT_CHECK([\n          AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n        ])\n   esac\n \n \n   dnl enable qt support\n   AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n+  FLOW_QT_CHECK([\n+    flow_enable_qt=yes\n+    flow_enable_qt_test=yes\n     if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n+      flow_enable_qt_test=no\n     fi\n-    bitcoin_enable_qt_dbus=no\n+    flow_enable_qt_dbus=no\n     if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n+      flow_enable_qt_dbus=yes\n     fi\n     if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n       AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n@@ -244,9 +244,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       AC_MSG_WARN(\"lupdate is required to update qt translations\")\n     fi\n   ],[\n-    bitcoin_enable_qt=no\n+    flow_enable_qt=no\n   ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n+  AC_MSG_RESULT([$flow_enable_qt (Qt${flow_qt_got_major_vers})])\n \n   AC_SUBST(QT_PIE_FLAGS)\n   AC_SUBST(QT_INCLUDES)\n@@ -256,7 +256,7 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   AC_SUBST(QT_DBUS_LIBS)\n   AC_SUBST(QT_TEST_INCLUDES)\n   AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n+  AC_SUBST(QT_SELECT, qt${flow_qt_got_major_vers})\n   AC_SUBST(MOC_DEFS)\n ])\n \n@@ -266,9 +266,9 @@ dnl ----\n \n dnl Internal. Check if the included version of Qt is Qt5.\n dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n+dnl Output: flow_cv_qt5=yes|no\n+AC_DEFUN([_FLOW_QT_CHECK_QT5],[\n+  AC_CACHE_CHECK(for Qt 5, flow_cv_qt5,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -278,17 +278,17 @@ AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n       return 0;\n       #endif\n     ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n+    [flow_cv_qt5=yes],\n+    [flow_cv_qt5=no])\n ])])\n \n dnl Internal. Check if the linked version of Qt was built as static libs.\n dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n+dnl Output: flow_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n+AC_DEFUN([_FLOW_QT_IS_STATIC],[\n+  AC_CACHE_CHECK(for static Qt, flow_cv_static_qt,[\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n     [[#include <QtCore>]],\n     [[\n@@ -298,10 +298,10 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n       choke me\n       #endif\n     ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n+    [flow_cv_static_qt=yes],\n+    [flow_cv_static_qt=no])\n   ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+  if test xflow_cv_static_qt = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -311,7 +311,7 @@ dnl Requires: INCLUDES and LIBS must be populated as necessary.\n dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n dnl Inputs: $2: The libraries that resolve $1.\n dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n+AC_DEFUN([_FLOW_QT_CHECK_STATIC_PLUGINS],[\n   AC_MSG_CHECKING(for static Qt plugins: $2)\n   CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n   LIBS=\"$2 $QT_LIBS $LIBS\"\n@@ -321,16 +321,16 @@ AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n     $1]],\n     [[return 0;]])],\n     [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n+    [AC_MSG_RESULT(no); FLOW_QT_FAIL(Could not resolve: $2)])\n   LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n ])\n \n dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n+dnl Inputs: flow_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n+AC_DEFUN([_FLOW_QT_FIND_STATIC_PLUGINS],[\n+  if test x$flow_qt_got_major_vers = x5; then\n       if test x$qt_plugin_path != x; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n         if test -d \"$qt_plugin_path/accessible\"; then\n@@ -352,17 +352,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n      ])\n      else\n        if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n+         AC_CACHE_CHECK(for Qt >= 5.6, flow_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n              [[#include <QtCore>]],[[\n              #if QT_VERSION < 0x050600\n              choke;\n              #endif\n              ]])],\n-           [bitcoin_cv_need_platformsupport=yes],\n-           [bitcoin_cv_need_platformsupport=no])\n+           [flow_cv_need_platformsupport=yes],\n+           [flow_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+         if test x$flow_cv_need_platformsupport = xyes; then\n+           FLOW_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,FLOW_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n          fi\n        fi\n      fi\n@@ -375,49 +375,49 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n ])\n \n dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n+dnl Inputs: flow_qt_want_version (from --with-gui=). The version to check\n dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n+dnl Inputs: $1: If flow_qt_want_version is \"auto\", check for this version\n dnl         first.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: flow_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n+AC_DEFUN([_FLOW_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n   auto_priority_version=$1\n   if test x$auto_priority_version = x; then\n     auto_priority_version=qt5\n   fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    if test x$flow_qt_want_version = xqt5 ||  ( test x$flow_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      flow_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      flow_qt_got_major_vers=4\n     fi\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    FLOW_QT_CHECK([\n+      if test x$flow_qt_want_version = xqt5 || ( test x$flow_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n         PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+      elif test x$flow_qt_want_version = xqt4 || ( test x$flow_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n         PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n       fi\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n+      if test x$have_qt = xno && test x$flow_qt_want_version = xauto; then\n         if test x$auto_priority_version = xqt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n+          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; flow_qt_got_major_vers=4], [have_qt=no])\n         else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n+          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; flow_qt_got_major_vers=5], [have_qt=no])\n         fi\n       fi\n       if test x$have_qt != xyes; then\n         have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n+        FLOW_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n-    BITCOIN_QT_CHECK([\n+    FLOW_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n       if test x$use_dbus != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n@@ -429,66 +429,66 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n \n dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n+dnl Inputs: flow_qt_want_version (from --with-gui=). The version to use.\n+dnl         If \"auto\", the version will be discovered by _FLOW_QT_CHECK_QT5.\n dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n+dnl Outputs: flow_qt_got_major_vers is set to \"4\" or \"5\".\n dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n+AC_DEFUN([_FLOW_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   TEMP_CPPFLAGS=\"$CPPFLAGS\"\n   TEMP_CXXFLAGS=\"$CXXFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n+  FLOW_QT_CHECK([\n     if test x$qt_include_path != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n+  FLOW_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,FLOW_QT_FAIL(QtCore headers missing))])\n+  FLOW_QT_CHECK([AC_CHECK_HEADER([QApplication],, FLOW_QT_FAIL(QtGui headers missing))])\n+  FLOW_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, FLOW_QT_FAIL(QtNetwork headers missing))])\n \n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n+  FLOW_QT_CHECK([\n+    if test x$flow_qt_want_version = xauto; then\n+      _FLOW_QT_CHECK_QT5\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+    if test x$flow_cv_qt5 = xyes || test x$flow_qt_want_version = xqt5; then\n       QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n+      flow_qt_got_major_vers=5\n     else\n       QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n+      flow_qt_got_major_vers=4\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK([\n+  FLOW_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n     if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n+      AC_CHECK_LIB([imm32],      [main],, FLOW_QT_FAIL(libimm32 not found))\n     fi\n   ])\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+  FLOW_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n+  FLOW_QT_CHECK(AC_SEARCH_LIBS([png_error] ,[qtpng png],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n+  FLOW_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n+  FLOW_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n+  FLOW_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n+  FLOW_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,FLOW_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n+  FLOW_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,FLOW_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n+  FLOW_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,FLOW_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  if test x$flow_qt_got_major_vers = x5; then\n+    FLOW_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,FLOW_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n-  BITCOIN_QT_CHECK([\n+  FLOW_QT_CHECK([\n     LIBS=\n     if test x$qt_lib_path != x; then\n       LIBS=\"-L$qt_lib_path\"",
        "previous_filename": "build-aux/m4/bitcoin_qt.m4"
      },
      {
        "sha": "b21668dfb1e63bcfbd600a03146ddecccea1a00d",
        "filename": "build-aux/m4/flow_subdir_to_include.m4",
        "status": "renamed",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/build-aux/m4/flow_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/flow_subdir_to_include.m4?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n-dnl Copyright (c) 2013-2014 The Bitcoin Core developers\n+dnl Copyright (c) 2013-2014 The Flow Core developers\n dnl Distributed under the MIT software license, see the accompanying\n dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n+dnl FLOW_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n+AC_DEFUN([FLOW_SUBDIR_TO_INCLUDE],[\n   if test \"x$2\" = \"x\"; then\n     AC_MSG_RESULT([default])\n   else",
        "previous_filename": "build-aux/m4/bitcoin_subdir_to_include.m4"
      },
      {
        "sha": "0a366b93da046cb1dade467b91724aebae566490",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 60,
        "deletions": 60,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -7,23 +7,23 @@ define(_CLIENT_VERSION_BUILD, 0)\n define(_CLIENT_VERSION_IS_RELEASE, true)\n define(_COPYRIGHT_YEAR, 2017)\n define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Bitcoin Core]])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n+define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[[Flow Core]])\n+AC_INIT([Flow Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/flow/flow/issues],[flow],[https://flowcore.org/])\n AC_CONFIG_SRCDIR([src/validation.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n+AC_CONFIG_HEADERS([src/config/flow-config.h])\n AC_CONFIG_AUX_DIR([build-aux])\n AC_CONFIG_MACRO_DIR([build-aux/m4])\n \n-BITCOIN_DAEMON_NAME=bitcoind\n-BITCOIN_GUI_NAME=bitcoin-qt\n-BITCOIN_CLI_NAME=bitcoin-cli\n-BITCOIN_TX_NAME=bitcoin-tx\n+FLOW_DAEMON_NAME=flowd\n+FLOW_GUI_NAME=flow-qt\n+FLOW_CLI_NAME=flow-cli\n+FLOW_TX_NAME=flow-tx\n \n AC_CANONICAL_HOST\n \n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n+AH_TOP([#ifndef FLOW_CONFIG_H])\n+AH_TOP([#define FLOW_CONFIG_H])\n+AH_BOTTOM([#endif //FLOW_CONFIG_H])\n \n dnl faketime breaks configure and is only needed for make. Disable it here.\n unset FAKETIME\n@@ -77,7 +77,7 @@ AC_PATH_TOOL(RANLIB, ranlib)\n AC_PATH_TOOL(STRIP, strip)\n AC_PATH_TOOL(GCOV, gcov)\n AC_PATH_PROG(LCOV, lcov)\n-dnl Python 3.x is supported from 3.4 on (see https://github.com/bitcoin/bitcoin/issues/7893)\n+dnl Python 3.x is supported from 3.4 on (see https://github.com/flow/flow/issues/7893)\n AC_PATH_PROGS([PYTHON], [python3.6 python3.5 python3.4 python3 python2.7 python2 python])\n AC_PATH_PROG(GENHTML, genhtml)\n AC_PATH_PROG([GIT], [git])\n@@ -240,21 +240,21 @@ CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n \n AC_ARG_WITH([utils],\n   [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n+  [build flow-cli flow-tx (default=yes)])],\n+  [build_flow_utils=$withval],\n+  [build_flow_utils=yes])\n \n AC_ARG_WITH([libs],\n   [AS_HELP_STRING([--with-libs],\n   [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n+  [build_flow_libs=$withval],\n+  [build_flow_libs=yes])\n \n AC_ARG_WITH([daemon],\n   [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n+  [build flowd daemon (default=yes)])],\n+  [build_flowd=$withval],\n+  [build_flowd=yes])\n \n use_pkgconfig=yes\n case $host in\n@@ -443,7 +443,7 @@ AC_C_BIGENDIAN\n dnl Check for pthread compile/link requirements\n AX_PTHREAD\n \n-# The following macro will add the necessary defines to bitcoin-config.h, but\n+# The following macro will add the necessary defines to flow-config.h, but\n # they also need to be passed down to any subprojects. Pull the results out of\n # the cache and add them to CPPFLAGS.\n AC_SYS_LARGEFILE\n@@ -645,7 +645,7 @@ AC_SUBST(LIBMEMENV)\n \n if test x$enable_wallet != xno; then\n     dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n+    FLOW_FIND_BDB48\n fi\n \n dnl Check for libminiupnpc (optional)\n@@ -657,12 +657,12 @@ if test x$use_upnp != xno; then\n   )\n fi\n \n-BITCOIN_QT_INIT\n+FLOW_QT_INIT\n \n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n+dnl sets $flow_enable_qt, $flow_enable_qt_test, $flow_enable_qt_dbus\n+FLOW_QT_CONFIGURE([$use_pkgconfig], [qt5])\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_flow_utils$build_flowd$flow_enable_qt$use_tests$use_bench = xnonononono; then\n     use_boost=no\n else\n     use_boost=yes\n@@ -844,11 +844,11 @@ if test x$use_pkgconfig = xyes; then\n     [\n       PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n       PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n+      FLOW_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [FLOW_QT_FAIL(libprotobuf not found)])])\n       if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n+        FLOW_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n       fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+      if test x$build_flow_utils$build_flowd$flow_enable_qt$use_tests != xnononono; then\n         PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n         if test x$TARGET_OS != xwindows; then\n           PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n@@ -873,7 +873,7 @@ else\n   AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n   AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n \n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n+  if test x$build_flow_utils$build_flowd$flow_enable_qt$use_tests != xnononono; then\n     AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n     AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n     if test x$TARGET_OS != xwindows; then\n@@ -904,10 +904,10 @@ else\n     esac\n   fi\n \n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n+  FLOW_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], FLOW_QT_FAIL(libprotobuf not found)))\n   if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n+    FLOW_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n+    FLOW_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n   fi\n fi\n \n@@ -922,7 +922,7 @@ dnl univalue check\n \n need_bundled_univalue=yes\n \n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononono; then\n+if test x$build_flow_utils$build_flowd$flow_enable_qt$use_tests$use_bench = xnonononono; then\n   need_bundled_univalue=no\n else\n \n@@ -966,23 +966,23 @@ AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$need_bundled_univalue = xyes])\n AC_SUBST(UNIVALUE_CFLAGS)\n AC_SUBST(UNIVALUE_LIBS)\n \n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n+FLOW_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n \n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n+AC_MSG_CHECKING([whether to build flowd])\n+AM_CONDITIONAL([BUILD_FLOWD], [test x$build_flowd = xyes])\n+AC_MSG_RESULT($build_flowd)\n \n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n+AC_MSG_CHECKING([whether to build utils (flow-cli flow-tx)])\n+AM_CONDITIONAL([BUILD_FLOW_UTILS], [test x$build_flow_utils = xyes])\n+AC_MSG_RESULT($build_flow_utils)\n \n AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n+AM_CONDITIONAL([BUILD_FLOW_LIBS], [test x$build_flow_libs = xyes])\n+if test x$build_flow_libs = xyes; then\n   AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n+  AC_CONFIG_FILES([libflowconsensus.pc:libflowconsensus.pc.in])\n fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n+AC_MSG_RESULT($build_flow_libs)\n \n AC_LANG_POP\n \n@@ -1044,13 +1044,13 @@ fi\n \n dnl these are only used when qt is enabled\n BUILD_TEST_QT=\"\"\n-if test x$bitcoin_enable_qt != xno; then\n+if test x$flow_enable_qt != xno; then\n   dnl enable dbus support\n   AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n+  if test x$flow_enable_qt_dbus != xno; then\n     AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n   fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n+  AC_MSG_RESULT($flow_enable_qt_dbus)\n \n   dnl enable qr support\n   AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n@@ -1073,8 +1073,8 @@ if test x$bitcoin_enable_qt != xno; then\n     AC_MSG_WARN(\"xgettext is required to update qt translations\")\n   fi\n \n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_gui_tests$bitcoin_enable_qt_test = xyesyes; then\n+  AC_MSG_CHECKING([whether to build test_flow-qt])\n+  if test x$use_gui_tests$flow_enable_qt_test = xyesyes; then\n     AC_MSG_RESULT([yes])\n     BUILD_TEST_QT=\"yes\"\n   else\n@@ -1084,7 +1084,7 @@ fi\n \n AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n \n-AC_MSG_CHECKING([whether to build test_bitcoin])\n+AC_MSG_CHECKING([whether to build test_flow])\n if test x$use_tests = xyes; then\n   AC_MSG_RESULT([yes])\n   BUILD_TEST=\"yes\"\n@@ -1100,7 +1100,7 @@ else\n   AC_MSG_RESULT([no])\n fi\n \n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_bench$use_tests = xnononononono; then\n+if test x$build_flow_utils$build_flow_libs$build_flowd$flow_enable_qt$use_bench$use_tests = xnononononono; then\n   AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui --enable-bench or --enable-tests])\n fi\n \n@@ -1109,7 +1109,7 @@ AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n AM_CONDITIONAL([ENABLE_TESTS],[test x$BUILD_TEST = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n+AM_CONDITIONAL([ENABLE_QT],[test x$flow_enable_qt = xyes])\n AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$BUILD_TEST_QT = xyes])\n AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n@@ -1136,10 +1136,10 @@ AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-AC_SUBST(BITCOIN_DAEMON_NAME)\n-AC_SUBST(BITCOIN_GUI_NAME)\n-AC_SUBST(BITCOIN_CLI_NAME)\n-AC_SUBST(BITCOIN_TX_NAME)\n+AC_SUBST(FLOW_DAEMON_NAME)\n+AC_SUBST(FLOW_GUI_NAME)\n+AC_SUBST(FLOW_CLI_NAME)\n+AC_SUBST(FLOW_TX_NAME)\n \n AC_SUBST(RELDFLAGS)\n AC_SUBST(ERROR_CXXFLAGS)\n@@ -1168,7 +1168,7 @@ AC_CONFIG_FILES([test/util/buildenv.py],[chmod +x test/util/buildenv.py])\n AC_CONFIG_FILES([contrib/devtools/split-debug.sh],[chmod +x contrib/devtools/split-debug.sh])\n AC_CONFIG_FILES([doc/Doxyfile])\n AC_CONFIG_LINKS([test/functional/test_runner.py:test/functional/test_runner.py])\n-AC_CONFIG_LINKS([test/util/bitcoin-util-test.py:test/util/bitcoin-util-test.py])\n+AC_CONFIG_LINKS([test/util/flow-util-test.py:test/util/flow-util-test.py])\n AC_CONFIG_LINKS([test/util/bctest.py:test/util/bctest.py])\n \n dnl boost's m4 checks do something really nasty: they export these vars. As a\n@@ -1225,9 +1225,9 @@ esac\n echo \n echo \"Options used to compile and link:\"\n echo \"  with wallet   = $enable_wallet\"\n-echo \"  with gui / qt = $bitcoin_enable_qt\"\n-if test x$bitcoin_enable_qt != xno; then\n-    echo \"    qt version  = $bitcoin_qt_got_major_vers\"\n+echo \"  with gui / qt = $flow_enable_qt\"\n+if test x$flow_enable_qt != xno; then\n+    echo \"    qt version  = $flow_qt_got_major_vers\"\n     echo \"    with qr     = $use_qr\"\n fi\n echo \"  with zmq      = $use_zmq\""
      },
      {
        "sha": "9e1c1a13ef1e14676cc342004010ac6825ce2e7a",
        "filename": "contrib/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -13,7 +13,7 @@ Construct a linear, no-fork, best version of the blockchain.\n \n ### [Qos](/contrib/qos) ###\n \n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Flow network. This means one can have an always-on flowd instance running, and another local flowd/flow-qt instance which connects to this node and receives blocks from it.\n \n ### [Seeds](/contrib/seeds) ###\n Utility to generate the pnSeed[] array that is compiled into the client.\n@@ -22,20 +22,20 @@ Build Tools and Keys\n ---------------------\n \n ### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+Contains files used to package flowd/flow-qt\n+for Debian-based Linux systems. If you compile flowd/flow-qt yourself, there are some useful files here.\n \n ### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n Notes on getting Gitian builds up and running using KVM.\n \n ### [Gitian-keys](/contrib/gitian-keys)\n-PGP keys used for signing Bitcoin Core [Gitian release](/doc/release-process.md) results.\n+PGP keys used for signing Flow Core [Gitian release](/doc/release-process.md) results.\n \n ### [MacDeploy](/contrib/macdeploy) ###\n Scripts and notes for Mac builds. \n \n ### [RPM](/contrib/rpm) ###\n-RPM spec file for building bitcoin-core on RPM based distributions\n+RPM spec file for building flow-core on RPM based distributions\n \n ### [Gitian-build](/contrib/gitian-build.sh) ###\n Script for running full Gitian builds.\n@@ -44,7 +44,7 @@ Test and Verify Tools\n ---------------------\n \n ### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Flow tests.\n \n ### [Verify Binaries](/contrib/verifybinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from bitcoin.org.\n+This script attempts to download and verify the signature file SHA256SUMS.asc from flow.org."
      },
      {
        "sha": "248a15b511af66fe76eaf99ce023d869620d23db",
        "filename": "contrib/debian/README.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,21 +1,21 @@\n \n Debian\n ====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n+This directory contains files used to package flowd/flow-qt\n+for Debian-based Linux systems. If you compile flowd/flow-qt yourself, there are some useful files here.\n \n-## bitcoin: URI support ##\n+## flow: URI support ##\n \n \n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n+flow-qt.desktop  (Gnome / Open Desktop)\n To install:\n \n-\tsudo desktop-file-install bitcoin-qt.desktop\n+\tsudo desktop-file-install flow-qt.desktop\n \tsudo update-desktop-database\n \n If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n+the .desktop file or copy or symlink your flow-qt binary to `/usr/bin`\n+and the `../../share/pixmaps/flow128.png` to `/usr/share/pixmaps`\n \n-bitcoin-qt.protocol (KDE)\n+flow-qt.protocol (KDE)\n "
      },
      {
        "sha": "593d7584ab06d3147dfa56c708d250041472fd32",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,13 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin Core\n-Comment=Connect to the Bitcoin P2P Network\n-Comment[de]=Verbinde mit dem Bitcoin peer-to-peer Netzwerk\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "9a3cc31c09a8fb719315a546fb2144d423ade038",
        "filename": "contrib/debian/bitcoin-qt.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.manpages?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-qt.1"
      },
      {
        "sha": "7acb0b0aea668dd16129434813d05c0306617b68",
        "filename": "contrib/debian/bitcoin-tx.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.bash-completion?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoin-tx.bash-completion\tbitcoin-tx"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "861d49d07022e2468fca7c747d91b7fe4322e1c7",
        "filename": "contrib/debian/bitcoin-tx.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoin-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.manpages?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1 +0,0 @@\n-doc/man/bitcoin-tx.1"
      },
      {
        "sha": "5c69d78fbb0fc73017167bab3d8a1c6a78e85ed9",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,2 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind\n-contrib/bitcoin-cli.bash-completion\tbitcoin-cli"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "bab644ece1369ba4d8896ef507add76aae617d8e",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,2 +0,0 @@\n-doc/man/bitcoind.1\n-doc/man/bitcoin-cli.1"
      },
      {
        "sha": "9a67d3b68eca6b38ebc6aae965e2c1ceb7a11456",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 89,
        "deletions": 89,
        "changes": 178,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,364 +1,364 @@\n-bitcoin (0.14.1-trusty4) trusty; urgency=medium\n+flow (0.14.1-trusty4) trusty; urgency=medium\n \n   * Re-enable UPnP support.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 05 May 2017 13:28:00 -0400\n \n-bitcoin (0.14.1-trusty3) trusty; urgency=medium\n+flow (0.14.1-trusty3) trusty; urgency=medium\n \n   * Build with qt5 if we are on a non-Ubuntu (ie non-Unity) distro.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:13:00 -0400\n \n-bitcoin (0.14.1-trusty2) trusty; urgency=medium\n+flow (0.14.1-trusty2) trusty; urgency=medium\n \n   * Bump minimum boost version in deps.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 04 May 2017 17:12:00 -0400\n \n-bitcoin (0.14.1-trusty1) trusty; urgency=medium\n+flow (0.14.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sat, 22 Apr 2017 17:10:00 -0400\n \n-bitcoin (0.14.0-trusty1) trusty; urgency=medium\n+flow (0.14.0-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 08 Mar 2017 10:30:00 -0500\n \n-bitcoin (0.13.2-trusty1) trusty; urgency=medium\n+flow (0.13.2-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 05 Jan 2017 09:59:00 -0500\n \n-bitcoin (0.13.1-trusty2) trusty; urgency=medium\n+flow (0.13.1-trusty2) trusty; urgency=medium\n \n-  * Revert to Qt4, due to https://github.com/bitcoin/bitcoin/issues/9038\n+  * Revert to Qt4, due to https://github.com/flow/flow/issues/9038\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 31 Oct 2016 11:16:00 -0400\n \n-bitcoin (0.13.1-trusty1) trusty; urgency=medium\n+flow (0.13.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n-  * Backport updated bitcoin-qt.desktop from upstream master\n+  * Backport updated flow-qt.desktop from upstream master\n   * Add zmq dependency\n   * Switch to Qt5 (breaks precise, but that was already broken by C++11)\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Thu, 27 Oct 2016 17:32:00 -0400\n \n-bitcoin (0.13.0-trusty1) trusty; urgency=medium\n+flow (0.13.0-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Sun, 04 Sep 2016 22:09:00 -0400\n \n-bitcoin (0.12.1-trusty1) trusty; urgency=medium\n+flow (0.12.1-trusty1) trusty; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 18 Apr 2016 14:26:00 -0700\n \n-bitcoin (0.12.0-trusty6) trusty; urgency=medium\n+flow (0.12.0-trusty6) trusty; urgency=medium\n \n   * Fix program-options dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 25 Mar 2016 21:41:00 -0700\n \n-bitcoin (0.12.0-trusty5) trusty; urgency=medium\n+flow (0.12.0-trusty5) trusty; urgency=medium\n \n   * Test explicit --with-gui\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n \n-bitcoin (0.12.0-trusty4) trusty; urgency=medium\n+flow (0.12.0-trusty4) trusty; urgency=medium\n \n   * Fix libevent-dev dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 23:25:00 -0800\n \n-bitcoin (0.12.0-trusty3) trusty; urgency=medium\n+flow (0.12.0-trusty3) trusty; urgency=medium\n \n   * Fix precise boost dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:55:00 -0800\n \n-bitcoin (0.12.0-trusty2) trusty; urgency=medium\n+flow (0.12.0-trusty2) trusty; urgency=medium\n \n   * Fix libevent dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:53:00 -0800\n \n-bitcoin (0.12.0-trusty1) trusty; urgency=medium\n+flow (0.12.0-trusty1) trusty; urgency=medium\n \n   * New upstream release\n   * Various updates to contrib/debian were merged, a few were not\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 23 Feb 2015 19:29:00 -0800\n \n-bitcoin (0.11.2-trusty1) trusty; urgency=low\n+flow (0.11.2-trusty1) trusty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 13 Nov 2015 18:39:00 -0800\n \n-bitcoin (0.11.1-trusty2) trusty; urgency=low\n+flow (0.11.1-trusty2) trusty; urgency=low\n \n   * Remove minupnpc builddep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 23:06:00 -1000\n \n-bitcoin (0.11.1-trusty1) trusty; urgency=high\n+flow (0.11.1-trusty1) trusty; urgency=high\n \n   * New upstream release.\n   * Disable all UPnP support.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 14 Oct 2015 13:57:00 -1000\n \n-bitcoin (0.11.0-precise1) precise; urgency=medium\n+flow (0.11.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n \n-bitcoin (0.10.2-precise1) precise; urgency=medium\n+flow (0.10.2-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n \n-bitcoin (0.10.1-precise3) precise; urgency=medium\n+flow (0.10.1-precise3) precise; urgency=medium\n \n   * Fix build dep (include python).\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n \n-bitcoin (0.10.1-precise2) precise; urgency=medium\n+flow (0.10.1-precise2) precise; urgency=medium\n \n   * Fix miniupnpc dep.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n \n-bitcoin (0.10.1-precise1) precise; urgency=medium\n+flow (0.10.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n \n-bitcoin (0.10.0-precise1) precise; urgency=medium\n+flow (0.10.0-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n \n-bitcoin (0.9.4-precise1) precise; urgency=high\n+flow (0.9.4-precise1) precise; urgency=high\n \n   * New upstream releases.\n \n  -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n \n-bitcoin (0.9.3-precise1) precise; urgency=medium\n+flow (0.9.3-precise1) precise; urgency=medium\n \n   * New upstream releases.\n \n  -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n \n-bitcoin (0.9.1-precise1) precise; urgency=medium\n+flow (0.9.1-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Backport pull #4019\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n \n-bitcoin (0.9.0-precise1) precise; urgency=medium\n+flow (0.9.0-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n \n-bitcoin (0.8.6-precise1) precise; urgency=medium\n+flow (0.8.6-precise1) precise; urgency=medium\n \n   * New upstream release.\n   * Make .desktop paths non-fixed (suggested by prusnak@github)\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n \n-bitcoin (0.8.5-precise1) precise; urgency=medium\n+flow (0.8.5-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n \n-bitcoin (0.8.4-precise1) precise; urgency=medium\n+flow (0.8.4-precise1) precise; urgency=medium\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n \n-bitcoin (0.8.3-natty1) natty; urgency=low\n+flow (0.8.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n \n-bitcoin (0.8.2-natty1) natty; urgency=low\n+flow (0.8.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n \n-bitcoin (0.8.1-natty3) natty; urgency=low\n+flow (0.8.1-natty3) natty; urgency=low\n \n   * New pixmaps\n \n  -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n \n-bitcoin (0.8.1-natty2) natty; urgency=low\n+flow (0.8.1-natty2) natty; urgency=low\n \n   * Remove dumb broken launcher script\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n \n-bitcoin (0.8.1-natty1) natty; urgency=low\n+flow (0.8.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n \n-bitcoin (0.8.0-natty1) natty; urgency=low\n+flow (0.8.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n \n-bitcoin (0.7.2-natty1) natty; urgency=low\n+flow (0.7.2-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n \n-bitcoin (0.7.1-natty1) natty; urgency=low\n+flow (0.7.1-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n \n-bitcoin (0.7.0-natty1) natty; urgency=low\n+flow (0.7.0-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n \n-bitcoin (0.6.3-natty1) natty; urgency=low\n+flow (0.6.3-natty1) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n \n-bitcoin (0.6.2-natty1) natty; urgency=low\n+flow (0.6.2-natty1) natty; urgency=low\n \n   * Update package description and launch scripts.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n \n-bitcoin (0.6.2-natty0) natty; urgency=low\n+flow (0.6.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n \n-bitcoin (0.6.1-natty0) natty; urgency=low\n+flow (0.6.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n \n-bitcoin (0.6.0-natty0) natty; urgency=low\n+flow (0.6.0-natty0) natty; urgency=low\n \n   * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n+  * Add GNOME/KDE support for flow-qt's flow: URI support.\n     Thanks to luke-jr for the KDE .protocol file.\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n \n-bitcoin (0.5.3-natty1) natty; urgency=low\n+flow (0.5.3-natty1) natty; urgency=low\n \n   * Mark for upload to PPA.\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n \n-bitcoin (0.5.3-natty0) natty; urgency=low\n+flow (0.5.3-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n+ -- Luke Dashjr <luke+flow+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n \n-bitcoin (0.5.2-natty1) natty; urgency=low\n+flow (0.5.2-natty1) natty; urgency=low\n \n   * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isnt anonymous without\n+    These should never have been there, flow isnt anonymous without\n     a ton of work that virtually no users will ever be willing and\n     capable of doing\n \n  -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n \n-bitcoin (0.5.2-natty0) natty; urgency=low\n+flow (0.5.2-natty0) natty; urgency=low\n \n   * New upstream release.\n \n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n+ -- Luke Dashjr <luke+flow+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n \n-bitcoin (0.5.1-natty0) natty; urgency=low\n+flow (0.5.1-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n \n-bitcoin (0.5.0-natty0) natty; urgency=low\n+flow (0.5.0-natty0) natty; urgency=low\n \n   * New upstream release.\n \n  -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n \n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n+flow (0.5.0~rc7-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n \n  -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n \n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n+flow (0.5.0~rc3-natty0) natty; urgency=low\n \n   * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n+  * Don't set rpcpassword for flow-qt.\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n \n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n+flow (0.5.0~rc1-natty1) natty; urgency=low\n \n-  * Add test_bitcoin to build test\n+  * Add test_flow to build test\n   * Fix clean\n   * Remove uneccessary build-dependancies\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n+flow (0.5.0~rc1-natty0) natty; urgency=low\n \n   * Mark for natty\n   * Fix broken build\n   * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n+  * Remove flow: URL handler until flow actually has support for it (Oops)\n \n  -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n \n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n+flow (0.5.0~rc1-2) experimental; urgency=low\n \n-  * Add bitcoin-qt\n+  * Add flow-qt\n \n  -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n \n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n+flow (0.5.0~rc1-1) experimental; urgency=low\n \n   * New upstream prerelease.\n   * Add Github as alternate upstream source in watch file.\n@@ -369,7 +369,7 @@ bitcoin (0.5.0~rc1-1) experimental; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n \n-bitcoin (0.4.0-1) unstable; urgency=low\n+flow (0.4.0-1) unstable; urgency=low\n \n   * New upstream release.\n   * Stop repackaging source tarballs: No DFSG-violating stripping left.\n@@ -378,7 +378,7 @@ bitcoin (0.4.0-1) unstable; urgency=low\n   * Drop dpkg-source local-options hint: Declared options are default\n     since dpkg-source 1.16.1.\n     + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n+    + Add comment on Flow Developers to catch-all Files section.\n     + Add Files sections for newly readded src/cryptopp/* (new custom\n       BSD-like license), and newly added doc/build-osx.txt and\n       src/makefile.osx (Expat).\n@@ -397,13 +397,13 @@ bitcoin (0.4.0-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n \n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n+flow (0.3.24~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Jonas Smedegaard ]\n   * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n+    + Explicitly mention in long description that flowd contains\n       daemon and command-line interface.\n     + Extend README.Debian with section on lack of GUI, and add primary\n       headline.\n@@ -424,7 +424,7 @@ bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n \n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n+flow (0.3.21~dfsg-2) unstable; urgency=low\n \n   * Enable UPNP support:\n     + Drop patch 1006.\n@@ -433,7 +433,7 @@ bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n \n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n+flow (0.3.21~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n   * Refresh patches.\n@@ -446,7 +446,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n   * Bump policy compliance to standards-version 3.9.2.\n   * Shorten Vcs-Browser paragraph in control file.\n   * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n+  * Stop conflicting with or replace flow-cli: Only transitional, no\n     longer needed.\n   * Link against unversioned berkeleydb. Update NEWS and README.Debian\n     accordingly (and improve wording while at it).\n@@ -458,7 +458,7 @@ bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n \n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n+flow (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n   * Fix have wrapper script execute real binary (not loop executing\n     itself).\n@@ -468,36 +468,36 @@ bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n \n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n+flow (0.3.20.2~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n+  * Fix provide and replace former package name flow-cli.\n     Closes: bug#618439. Thanks to Shane Wegner.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n \n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n+flow (0.3.20.01~dfsg-1) unstable; urgency=low\n \n   * New upstream release.\n \n   [ Micah Anderson ]\n   * Add myself as uploader.\n \n   [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n+  * Add wrapper for flowd to ease initial startup.\n   * Update patches:\n     + Drop patch 2002: Applied upstream.\n     + Add patch 1005 to add phtread linker option.\n       Closes: bug#615619. Thanks to Shane Wegner.\n     + Refresh patches.\n   * Extend copyright years in rules file header.\n   * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n+  * Rename binary package to flowd (from bincoin-cli).\n     Closes: bug#614025. Thanks to Luke-Jr.\n \n  -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n \n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n+flow (0.3.19~dfsg-6) unstable; urgency=low\n \n   * Fix override agressive optimizations.\n   * Fix tighten build-dependencies to really fit backporting to Lenny:\n@@ -508,7 +508,7 @@ bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n \n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n+flow (0.3.19~dfsg-5) unstable; urgency=low\n \n   * Fix lower Boost fallback-build-dependencies to 1.35, really\n     available in Lenny.\n@@ -523,11 +523,11 @@ bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n \n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n+flow (0.3.19~dfsg-4) unstable; urgency=low\n \n   [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n+  * Provide example flow.conf.\n+  * Add flowd(1) and flow.conf(5) man pages.\n \n   [ Jonas Smedegaard ]\n   * Ease backporting:\n@@ -539,7 +539,7 @@ bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n \n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n+flow (0.3.19~dfsg-3) unstable; urgency=low\n \n   * Document in copyright file files excluded from repackaged source.\n   * Update copyright file:\n@@ -554,7 +554,7 @@ bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n \n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n+flow (0.3.19~dfsg-2) unstable; urgency=low\n \n   * Adjust build options to use optimized miner only for amd64. Fixes\n     FTBFS on i386 (and other archs, if compiling anywhere else at all).\n@@ -569,7 +569,7 @@ bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n \n  -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n \n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n+flow (0.3.19~dfsg-1) unstable; urgency=low\n \n   [ Jonas Smedegaard ]\n   * Initial release."
      },
      {
        "sha": "2e3f7db49f36a5f0668f572d4ee8f1fcd0af5a43",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-Source: bitcoin\n+Source: flow\n Section: utils\n Priority: optional\n Maintainer: Matt Corallo <matt@mattcorallo.com>\n@@ -26,45 +26,45 @@ Build-Depends: debhelper,\n  python,\n  libzmq3-dev\n Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: https://flowcore.org/\n+Vcs-Git: git://github.com/flow/flow.git\n+Vcs-Browser: https://github.com/flow/flow\n \n-Package: bitcoind\n+Package: flowd\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Flow is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ This package provides the daemon, flowd, and the CLI tool\n+ flow-cli to interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: flow-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Flow is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n+ This package provides Flow-Qt, a GUI for Flow based on Qt.\n \n-Package: bitcoin-tx\n+Package: flow-tx\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is a free open source peer-to-peer electronic cash system that\n+ Flow is a free open source peer-to-peer electronic cash system that\n  is completely decentralized, without the need for a central server or\n  trusted parties.  Users hold the crypto keys to their own money and\n  transact directly with each other, with the help of a P2P network to\n  check for double-spending.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n+ This package provides flow-tx, a command-line transaction creation\n+ tool which can be used without a flow daemon.  Some means of\n  exchanging minimal transaction data with peers is still required."
      },
      {
        "sha": "de1d4a1830c0a20d251a020444928bc42857acd8",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n-Upstream-Name: Bitcoin\n+Upstream-Name: Flow\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n- irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+ irc://#flow@freenode.net\n+Source: https://github.com/flow/flow\n \n Files: *\n-Copyright: 2009-2017, Bitcoin Core Developers\n+Copyright: 2009-2017, Flow Core Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Flow Core Developers encompasses the current developers listed on flow.org,\n          as well as the numerous contributors to the project.\n \n Files: debian/*\n@@ -78,12 +78,12 @@ License: Expat\n Comment: Modifications of Stephan Hutchings Typicons\n \n Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n+       src/qt/res/icons/flow.*\n+       share/pixmaps/flow*\n+       src/qt/res/src/flow.svg\n Copyright: Bitboy, Jonas Schnelli\n License: public-domain\n-Comment: Site: https://bitcointalk.org/?topic=1756.0\n+Comment: Site: https://flowtalk.org/?topic=1756.0\n \n \n License: Expat"
      },
      {
        "sha": "5e7c83fb64e5f5e4896f064af9f6c7154c851344",
        "filename": "contrib/debian/examples/flow.conf",
        "status": "renamed",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/examples/flow.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/examples/flow.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/flow.conf?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n ##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n+## flow.conf configuration file. Lines beginning with # are comments.\n ##\n  \n # Network-related settings:\n \n-# Run on the test network instead of the real bitcoin network.\n+# Run on the test network instead of the real flow network.\n #testnet=0\n \n # Run a regression test network\n@@ -57,18 +57,18 @@\n #maxconnections=\n \n #\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n+# JSON-RPC options (for controlling a running Flow/flowd process)\n #\n \n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n+# server=1 tells Flow-Qt and flowd to accept JSON-RPC commands\n #server=0\n \n # Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n # This option can be specified multiple times (default: bind to all interfaces)\n #rpcbind=<addr>\n \n # If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n-# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n+# is .cookie and found in the `-datadir` being used for flowd. This option is typically used\n # when the server and client are run as the same user.\n #\n # If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n@@ -80,7 +80,7 @@\n # using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n #\n # ./share/rpcuser/rpcuser.py alice\n-# String to be appended to bitcoin.conf:\n+# String to be appended to flow.conf:\n # rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n # Your password:\n # DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n@@ -92,7 +92,7 @@\n # You can even add multiple entries of these to the server conf file, and client can use any of them:\n # rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n+# How many seconds flow will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. \n #rpcclienttimeout=30\n \n@@ -103,16 +103,16 @@\n # NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n # because the rpcpassword is transmitted over the network unencrypted.\n \n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n+# server=1 tells Flow-Qt to accept JSON-RPC commands.\n+# it is also read by flowd to determine if RPC should be enabled \n #rpcallowip=10.1.1.34/255.255.255.0\n #rpcallowip=1.2.3.4/24\n #rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n \n # Listen for RPC connections on this TCP port:\n #rpcport=8332\n \n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n+# You can use Flow or flowd to send commands to Flow/flowd\n # running on another host using this option:\n #rpcconnect=127.0.0.1\n \n@@ -126,7 +126,7 @@\n # both prior transactions and several dozen future transactions.\n #keypool=100\n \n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n+# Pay an optional transaction fee every time you send flows.  Transactions with fees\n # are more likely than free transactions to be included in generated blocks, so may\n # be validated sooner.\n #paytxfee=0.00\n@@ -140,7 +140,7 @@\n \n # User interface options\n \n-# Start Bitcoin minimized\n+# Start Flow minimized\n #min=1\n \n # Minimize to the system tray",
        "previous_filename": "contrib/debian/examples/bitcoin.conf"
      },
      {
        "sha": "d5b31310b318d0cf42936dfd410c3017c68836b8",
        "filename": "contrib/debian/flow-qt.desktop",
        "status": "added",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-qt.desktop?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,13 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=Flow Core\n+Comment=Connect to the Flow P2P Network\n+Comment[de]=Verbinde mit dem Flow peer-to-peer Netzwerk\n+Comment[fr]=Flow, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Flow, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=flow-qt %u\n+Terminal=false\n+Type=Application\n+Icon=flow128\n+MimeType=x-scheme-handler/flow;\n+Categories=Office;Finance;"
      },
      {
        "sha": "c1f7f59bb2d2440e9d08d2770dc399ee0001ae9f",
        "filename": "contrib/debian/flow-qt.install",
        "status": "added",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-qt.install?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,6 @@\n+usr/local/bin/flow-qt usr/bin\n+share/pixmaps/flow32.xpm usr/share/pixmaps\n+share/pixmaps/flow16.xpm usr/share/pixmaps\n+share/pixmaps/flow128.png usr/share/pixmaps\n+debian/flow-qt.desktop usr/share/applications\n+debian/flow-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "8b256f01248f0ec0d169ad74c6fd7e2dc5d86183",
        "filename": "contrib/debian/flow-qt.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-qt.lintian-overrides?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl\n+flow-qt: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoind.lintian-overrides"
      },
      {
        "sha": "85273e0783360cda8528cd5c843b3764473df804",
        "filename": "contrib/debian/flow-qt.manpages",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-qt.manpages?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1 @@\n+doc/man/flow-qt.1"
      },
      {
        "sha": "657286bde15f9ce7aafbe8a5c1a7fccd014b279e",
        "filename": "contrib/debian/flow-qt.protocol",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-qt.protocol?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,6 +1,6 @@\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=flow-qt '%u'\n+protocol=flow\n input=none\n output=none\n helper=true",
        "previous_filename": "contrib/debian/bitcoin-qt.protocol"
      },
      {
        "sha": "f72e0addb9a9622decb05188d0a61bded3ba2d87",
        "filename": "contrib/debian/flow-tx.bash-completion",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-tx.bash-completion?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1 @@\n+contrib/flow-tx.bash-completion\tflow-tx"
      },
      {
        "sha": "634ca71029a20a9841c6f6281798b35b5e3d7692",
        "filename": "contrib/debian/flow-tx.install",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-tx.install?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1 @@\n+usr/local/bin/flow-tx usr/bin"
      },
      {
        "sha": "beaa655956a499d158546a87fa7aeb2c02bb85b9",
        "filename": "contrib/debian/flow-tx.manpages",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flow-tx.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flow-tx.manpages?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1 @@\n+doc/man/flow-tx.1"
      },
      {
        "sha": "790289c70f8c2a4eaabc1038110c585a14c04e78",
        "filename": "contrib/debian/flowd.bash-completion",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flowd.bash-completion?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,2 @@\n+contrib/flowd.bash-completion\tflowd\n+contrib/flow-cli.bash-completion\tflow-cli"
      },
      {
        "sha": "caabc3cd185648e9329f1604945282fc411127bf",
        "filename": "contrib/debian/flowd.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flowd.examples?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/flow.conf"
      },
      {
        "sha": "6ac4ea1a8027f97e4890d7ae49eab3a1664c23c2",
        "filename": "contrib/debian/flowd.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flowd.install?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,2 @@\n+usr/local/bin/flowd usr/bin\n+usr/local/bin/flow-cli usr/bin"
      },
      {
        "sha": "6d0723e4605fd3eed32ca26455fdc0acdc59bf28",
        "filename": "contrib/debian/flowd.lintian-overrides",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flowd.lintian-overrides?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,2 +1,2 @@\n # Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl\n+flowd: possible-gpl-code-linked-with-openssl",
        "previous_filename": "contrib/debian/bitcoin-qt.lintian-overrides"
      },
      {
        "sha": "853ffc5e38272d45e4c3c0b458647053bda72848",
        "filename": "contrib/debian/flowd.manpages",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/flowd.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/flowd.manpages?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,2 @@\n+doc/man/flowd.1\n+doc/man/flow-cli.1"
      },
      {
        "sha": "aaba0558062288b3e5d39636e63e0842f32c3554",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,16 +1,16 @@\n #!/usr/bin/make -f\n # -*- mode: makefile; coding: utf-8 -*-\n \n-#DEB_MAKE_CHECK_TARGET = test_bitcoin\n-#build/bitcoind::\n-#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n+#DEB_MAKE_CHECK_TARGET = test_flow\n+#build/flowd::\n+#\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_flow)\n \n %:\n \tdh --with bash-completion $@\n \n override_dh_auto_clean:\n \tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/flow-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n \n QT=$(shell dpkg-vendor --derives-from Ubuntu && echo qt4 || echo qt5)\n "
      },
      {
        "sha": "10498b966f7481100187733c19ce5996a7f0747b",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -2,4 +2,4 @@\n version=3\n # use qa.debian.org redirector; see man uscan\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/flow/flow v(.*).tar.gz"
      },
      {
        "sha": "8804a61aa1e4870e9fe1e48f36691acf206fb49f",
        "filename": "contrib/devtools/README.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -23,7 +23,7 @@ git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n copyright\\_header.py\n ====================\n \n-Provides utilities for managing copyright headers of `The Bitcoin Core\n+Provides utilities for managing copyright headers of `The Flow Core\n developers` in repository source files. It has three subcommands:\n \n ```\n@@ -42,31 +42,31 @@ Specifying `verbose` will list the full filenames of files of each category.\n \n copyright\\_header.py update \\<base\\_directory\\> [verbose]\n ---------------------------------------------------------\n-Updates all the copyright headers of `The Bitcoin Core developers` which were\n+Updates all the copyright headers of `The Flow Core developers` which were\n changed in a year more recent than is listed. For example:\n ```\n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+// Copyright (c) <firstYear>-<lastYear> The Flow Core developers\n ```\n will be updated to:\n ```\n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Flow Core developers\n ```\n where `<lastModifiedYear>` is obtained from the `git log` history.\n \n This subcommand also handles copyright headers that have only a single year. In\n those cases:\n ```\n-// Copyright (c) <year> The Bitcoin Core developers\n+// Copyright (c) <year> The Flow Core developers\n ```\n will be updated to:\n ```\n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) <year>-<lastModifiedYear> The Flow Core developers\n ```\n where the update is appropriate.\n \n copyright\\_header.py insert \\<file\\>\n ------------------------------------\n-Inserts a copyright header for `The Bitcoin Core developers` at the top of the\n+Inserts a copyright header for `The Flow Core developers` at the top of the\n file in either Python or C++ style as determined by the file extension. If the\n file is a Python file and it has  `#!` starting the first line, the header is\n inserted in the line below it.\n@@ -76,7 +76,7 @@ The copyright dates will be set to be `<year_introduced>-<current_year>` where\n `<year_introduced>` is equal to `<current_year>`, it will be set as a single\n year rather than two hyphenated years.\n \n-If the file already has a copyright for `The Bitcoin Core developers`, the\n+If the file already has a copyright for `The Flow Core developers`, the\n script will exit.\n \n gen-manpages.sh\n@@ -93,10 +93,10 @@ the commit it claims to have been updated to.\n \n To use, make sure that you have fetched the upstream repository branch in which the subtree is\n maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin-core/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin-core/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin-core/univalue.git (branch master)\n-* for `src/crypto/ctaes`: https://github.com/bitcoin-core/ctaes.git (branch master)\n+* for `src/secp256k1`: https://github.com/flow-core/secp256k1.git (branch master)\n+* for `src/leveldb`: https://github.com/flow-core/leveldb.git (branch flow-fork)\n+* for `src/univalue`: https://github.com/flow-core/univalue.git (branch master)\n+* for `src/crypto/ctaes`: https://github.com/flow-core/ctaes.git (branch master)\n \n Usage: `git-subtree-check.sh DIR (COMMIT)`\n \n@@ -112,7 +112,7 @@ For example:\n   ./github-merge.py 3077\n \n (in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n+flow/flow repository.\n \n What it does:\n * Fetch master and the pull request.\n@@ -130,16 +130,16 @@ couldn't mess with the sources.\n \n Setup\n ---------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n+Configuring the github-merge tool for the flow repository is done in the following way:\n \n-    git config githubmerge.repository bitcoin/bitcoin\n+    git config githubmerge.repository flow/flow\n     git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n     git config --global user.signingkey mykeyid (if you want to GPG sign)\n \n optimize-pngs.py\n ================\n \n-A script to optimize png files in the bitcoin\n+A script to optimize png files in the flow\n repository (requires pngcrush).\n \n security-check.py and test-security-check.py\n@@ -162,10 +162,10 @@ If only supported symbols are used the return value will be 0 and the output wil\n \n If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n \n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n+    .../64/test_flow: symbol memcpy from unsupported version GLIBC_2.14\n+    .../64/test_flow: symbol __fdelt_chk from unsupported version GLIBC_2.15\n+    .../64/test_flow: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n+    .../64/test_flow: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n \n update-translations.py\n ======================"
      },
      {
        "sha": "a5134e713150440e7eae4847767f7168e7a081cd",
        "filename": "contrib/devtools/check-doc.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1bed7d4f371153a5abcba64d2796df8fbdbb9332",
        "filename": "contrib/devtools/commit-script-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/commit-script-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/commit-script-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/commit-script-check.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "57074664897593b858620c8ebc6ebb5d8b0b9f15",
        "filename": "contrib/devtools/copyright_header.py",
        "status": "modified",
        "additions": 26,
        "deletions": 26,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/copyright_header.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/copyright_header.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/copyright_header.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -20,13 +20,13 @@\n     'src/secp256k1/include/secp256k1_ecdh.h',\n     'src/secp256k1/include/secp256k1_recovery.h',\n     'src/secp256k1/include/secp256k1_schnorr.h',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.c',\n-    'src/secp256k1/src/java/org_bitcoin_NativeSecp256k1.h',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.c',\n-    'src/secp256k1/src/java/org_bitcoin_Secp256k1Context.h',\n+    'src/secp256k1/src/java/org_flow_NativeSecp256k1.c',\n+    'src/secp256k1/src/java/org_flow_NativeSecp256k1.h',\n+    'src/secp256k1/src/java/org_flow_Secp256k1Context.c',\n+    'src/secp256k1/src/java/org_flow_Secp256k1Context.h',\n     # auto generated:\n     'src/univalue/lib/univalue_escapes.h',\n-    'src/qt/bitcoinstrings.cpp',\n+    'src/qt/flowstrings.cpp',\n     'src/chainparamsseeds.h',\n     # other external copyrights:\n     'src/tinyformat.h',\n@@ -83,11 +83,11 @@ def compile_copyright_regex(copyright_style, year_style, name):\n \n EXPECTED_HOLDER_NAMES = [\n     \"Satoshi Nakamoto\\n\",\n-    \"The Bitcoin Core developers\\n\",\n-    \"The Bitcoin Core developers \\n\",\n-    \"Bitcoin Core Developers\\n\",\n-    \"the Bitcoin Core developers\\n\",\n-    \"The Bitcoin developers\\n\",\n+    \"The Flow Core developers\\n\",\n+    \"The Flow Core developers \\n\",\n+    \"Flow Core Developers\\n\",\n+    \"the Flow Core developers\\n\",\n+    \"The Flow developers\\n\",\n     \"The LevelDB Authors\\. All rights reserved\\.\\n\",\n     \"BitPay Inc\\.\\n\",\n     \"BitPay, Inc\\.\\n\",\n@@ -277,7 +277,7 @@ def exec_report(base_directory, verbose):\n     $ ./copyright_header.py report <base_directory> [verbose]\n \n Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n+    <base_directory> - The base directory of a flow source code repository.\n     [verbose] - Includes a list of every file of each subcategory in the report.\n \"\"\"\n \n@@ -340,7 +340,7 @@ def write_file_lines(filename, file_lines):\n COPYRIGHT = 'Copyright \\(c\\)'\n YEAR = \"20[0-9][0-9]\"\n YEAR_RANGE = '(%s)(-%s)?' % (YEAR, YEAR)\n-HOLDER = 'The Bitcoin Core developers'\n+HOLDER = 'The Flow Core developers'\n UPDATEABLE_LINE_COMPILED = re.compile(' '.join([COPYRIGHT, YEAR_RANGE, HOLDER]))\n \n def get_updatable_copyright_line(file_lines):\n@@ -408,32 +408,32 @@ def exec_update_header_year(base_directory):\n ################################################################################\n \n UPDATE_USAGE = \"\"\"\n-Updates all the copyright headers of \"The Bitcoin Core developers\" which were\n+Updates all the copyright headers of \"The Flow Core developers\" which were\n changed in a year more recent than is listed. For example:\n \n-// Copyright (c) <firstYear>-<lastYear> The Bitcoin Core developers\n+// Copyright (c) <firstYear>-<lastYear> The Flow Core developers\n \n will be updated to:\n \n-// Copyright (c) <firstYear>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) <firstYear>-<lastModifiedYear> The Flow Core developers\n \n where <lastModifiedYear> is obtained from the 'git log' history.\n \n This subcommand also handles copyright headers that have only a single year. In those cases:\n \n-// Copyright (c) <year> The Bitcoin Core developers\n+// Copyright (c) <year> The Flow Core developers\n \n will be updated to:\n \n-// Copyright (c) <year>-<lastModifiedYear> The Bitcoin Core developers\n+// Copyright (c) <year>-<lastModifiedYear> The Flow Core developers\n \n where the update is appropriate.\n \n Usage:\n     $ ./copyright_header.py update <base_directory>\n \n Arguments:\n-    <base_directory> - The base directory of a bitcoin source code repository.\n+    <base_directory> - The base directory of a flow source code repository.\n \"\"\"\n \n def print_file_action_message(filename, action):\n@@ -458,7 +458,7 @@ def get_header_lines(header, start_year, end_year):\n     return [line + '\\n' for line in lines]\n \n CPP_HEADER = '''\n-// Copyright (c) %s The Bitcoin Core developers\n+// Copyright (c) %s The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -467,7 +467,7 @@ def get_cpp_header_lines_to_insert(start_year, end_year):\n     return reversed(get_header_lines(CPP_HEADER, start_year, end_year))\n \n PYTHON_HEADER = '''\n-# Copyright (c) %s The Bitcoin Core developers\n+# Copyright (c) %s The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -521,7 +521,7 @@ def insert_cpp_header(filename, file_lines, start_year, end_year):\n def exec_insert_header(filename, style):\n     file_lines = read_file_lines(filename)\n     if file_already_has_core_copyright(file_lines):\n-        sys.exit('*** %s already has a copyright by The Bitcoin Core developers'\n+        sys.exit('*** %s already has a copyright by The Flow Core developers'\n                  % (filename))\n     start_year, end_year = get_git_change_year_range(filename)\n     if style == 'python':\n@@ -534,7 +534,7 @@ def exec_insert_header(filename, style):\n ################################################################################\n \n INSERT_USAGE = \"\"\"\n-Inserts a copyright header for \"The Bitcoin Core developers\" at the top of the\n+Inserts a copyright header for \"The Flow Core developers\" at the top of the\n file in either Python or C++ style as determined by the file extension. If the\n file is a Python file and it has a '#!' starting the first line, the header is\n inserted in the line below it.\n@@ -548,14 +548,14 @@ def exec_insert_header(filename, style):\n \n \"<current_year>\"\n \n-If the file already has a copyright for \"The Bitcoin Core developers\", the\n+If the file already has a copyright for \"The Flow Core developers\", the\n script will exit.\n \n Usage:\n     $ ./copyright_header.py insert <file>\n \n Arguments:\n-    <file> - A source file in the bitcoin repository.\n+    <file> - A source file in the flow repository.\n \"\"\"\n \n def insert_cmd(argv):\n@@ -580,7 +580,7 @@ def insert_cmd(argv):\n ################################################################################\n \n USAGE = \"\"\"\n-copyright_header.py - utilities for managing copyright headers of 'The Bitcoin\n+copyright_header.py - utilities for managing copyright headers of 'The Flow\n Core developers' in repository source files.\n \n Usage:"
      },
      {
        "sha": "75362025956fb3f7e70f3f9e209f3b669a930946",
        "filename": "contrib/devtools/gen-manpages.sh",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/gen-manpages.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/gen-manpages.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/gen-manpages.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -4,26 +4,26 @@ TOPDIR=${TOPDIR:-$(git rev-parse --show-toplevel)}\n SRCDIR=${SRCDIR:-$TOPDIR/src}\n MANDIR=${MANDIR:-$TOPDIR/doc/man}\n \n-BITCOIND=${BITCOIND:-$SRCDIR/bitcoind}\n-BITCOINCLI=${BITCOINCLI:-$SRCDIR/bitcoin-cli}\n-BITCOINTX=${BITCOINTX:-$SRCDIR/bitcoin-tx}\n-BITCOINQT=${BITCOINQT:-$SRCDIR/qt/bitcoin-qt}\n+FLOWD=${FLOWD:-$SRCDIR/flowd}\n+FLOWCLI=${FLOWCLI:-$SRCDIR/flow-cli}\n+FLOWTX=${FLOWTX:-$SRCDIR/flow-tx}\n+FLOWQT=${FLOWQT:-$SRCDIR/qt/flow-qt}\n \n-[ ! -x $BITCOIND ] && echo \"$BITCOIND not found or not executable.\" && exit 1\n+[ ! -x $FLOWD ] && echo \"$FLOWD not found or not executable.\" && exit 1\n \n # The autodetected version git tag can screw up manpage output a little bit\n-BTCVER=($($BITCOINCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n+FLWVER=($($FLOWCLI --version | head -n1 | awk -F'[ -]' '{ print $6, $7 }'))\n \n # Create a footer file with copyright content.\n-# This gets autodetected fine for bitcoind if --version-string is not set,\n-# but has different outcomes for bitcoin-qt and bitcoin-cli.\n+# This gets autodetected fine for flowd if --version-string is not set,\n+# but has different outcomes for flow-qt and flow-cli.\n echo \"[COPYRIGHT]\" > footer.h2m\n-$BITCOIND --version | sed -n '1!p' >> footer.h2m\n+$FLOWD --version | sed -n '1!p' >> footer.h2m\n \n-for cmd in $BITCOIND $BITCOINCLI $BITCOINTX $BITCOINQT; do\n+for cmd in $FLOWD $FLOWCLI $FLOWTX $FLOWQT; do\n   cmdname=\"${cmd##*/}\"\n-  help2man -N --version-string=${BTCVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n-  sed -i \"s/\\\\\\-${BTCVER[1]}//g\" ${MANDIR}/${cmdname}.1\n+  help2man -N --version-string=${FLWVER[0]} --include=footer.h2m -o ${MANDIR}/${cmdname}.1 ${cmd}\n+  sed -i \"s/\\\\\\-${FLWVER[1]}//g\" ${MANDIR}/${cmdname}.1\n done\n \n rm -f footer.h2m"
      },
      {
        "sha": "496a8fd84b8c17163865056a9ef896037929489e",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2015 The Bitcoin Core developers\n+# Copyright (c) 2015 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "bff1d03131fbd8ac9cf5ea22e64bc9d4955d0d43",
        "filename": "contrib/devtools/github-merge.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2016-2017 Bitcoin Core Developers\n+# Copyright (c) 2016-2017 Flow Core Developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ef3281b26a1a960e740d19e14eae3a06e606a009",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "38fdd2469ea5c0d7e033d81400ef84f1c83d8461",
        "filename": "contrib/devtools/security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "9fa20cdc6f4409bf64b2ead9ba91da401e0311d1",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -53,7 +53,7 @@\n CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n # Allowed NEEDED libraries\n ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n+# flowd and flow-qt\n b'libgcc_s.so.1', # GCC base support\n b'libc.so.6', # C library\n b'libpthread.so.0', # threading\n@@ -62,7 +62,7 @@\n b'librt.so.1', # real-time (clock)\n b'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n b'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n+# flow-qt only\n b'libX11-xcb.so.1', # part of X11\n b'libX11.so.6', # part of X11\n b'libxcb.so.1', # part of X11"
      },
      {
        "sha": "7bc9ba460b2bfeb31890c3715c10fef30e06f705",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "f88fac1285ba258123cf89a05fe8665e86ac82f1",
        "filename": "contrib/devtools/update-translations.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -26,7 +26,7 @@\n # Name of transifex tool\n TX = 'tx'\n # Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n+SOURCE_LANG = 'flow_en.ts'\n # Directory with locale files\n LOCALE_DIR = 'src/qt/locale'\n # Minimum number of messages for translation to be considered at all"
      },
      {
        "sha": "d4338d833bf873aacd7a22420285085f7e80df3a",
        "filename": "contrib/flow-cli.bash-completion",
        "status": "renamed",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-cli.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-cli.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/flow-cli.bash-completion?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n-# bash programmable completion for bitcoin-cli(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# bash programmable completion for flow-cli(1)\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-# call $bitcoin-cli for RPC\n-_bitcoin_rpc() {\n+# call $flow-cli for RPC\n+_flow_rpc() {\n     # determine already specified args necessary for RPC\n     local rpcargs=()\n     for i in ${COMP_LINE}; do\n@@ -14,23 +14,23 @@ _bitcoin_rpc() {\n                 ;;\n         esac\n     done\n-    $bitcoin_cli \"${rpcargs[@]}\" \"$@\"\n+    $flow_cli \"${rpcargs[@]}\" \"$@\"\n }\n \n # Add wallet accounts to COMPREPLY\n-_bitcoin_accounts() {\n+_flow_accounts() {\n     local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk -F '\"' '{ print $2 }')\n+    accounts=$(_flow_rpc listaccounts | awk -F '\"' '{ print $2 }')\n     COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n }\n \n-_bitcoin_cli() {\n+_flow_cli() {\n     local cur prev words=() cword\n-    local bitcoin_cli\n+    local flow_cli\n \n-    # save and use original argument to invoke bitcoin-cli for -help, help and RPC\n-    # as bitcoin-cli might not be in $PATH\n-    bitcoin_cli=\"$1\"\n+    # save and use original argument to invoke flow-cli for -help, help and RPC\n+    # as flow-cli might not be in $PATH\n+    flow_cli=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -60,7 +60,7 @@ _bitcoin_cli() {\n     if ((cword > 3)); then\n         case ${words[cword-3]} in\n             addmultisigaddress)\n-                _bitcoin_accounts\n+                _flow_accounts\n                 return 0\n                 ;;\n             getbalance|gettxout|importaddress|importpubkey|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n@@ -85,7 +85,7 @@ _bitcoin_cli() {\n                 return 0\n                 ;;\n             move|setaccount)\n-                _bitcoin_accounts\n+                _flow_accounts\n                 return 0\n                 ;;\n         esac\n@@ -101,7 +101,7 @@ _bitcoin_cli() {\n             return 0\n             ;;\n         getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n+            _flow_accounts\n             return 0\n             ;;\n     esac\n@@ -125,12 +125,12 @@ _bitcoin_cli() {\n \n             # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoin_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($flow_cli -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n             fi\n \n             # only parse help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n+                commands=$(_flow_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n             fi\n \n             COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n@@ -143,7 +143,7 @@ _bitcoin_cli() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoin_cli bitcoin-cli\n+complete -F _flow_cli flow-cli\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoin-cli.bash-completion"
      },
      {
        "sha": "0450386708483fa943269fc0869ae9d5138adf6f",
        "filename": "contrib/flow-qt.pro",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/flow-qt.pro?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -18,4 +18,4 @@ FORMS += \\\n     ../src/qt/forms/transactiondescdialog.ui \\\n \n RESOURCES += \\\n-    ../src/qt/bitcoin.qrc\n+    ../src/qt/flow.qrc",
        "previous_filename": "contrib/bitcoin-qt.pro"
      },
      {
        "sha": "7cccf5e9cbf1dceb965ad261882ef1db82d14342",
        "filename": "contrib/flow-tx.bash-completion",
        "status": "renamed",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-tx.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flow-tx.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/flow-tx.bash-completion?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,15 +1,15 @@\n-# bash programmable completion for bitcoin-tx(1)\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# bash programmable completion for flow-tx(1)\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoin_tx() {\n+_flow_tx() {\n     local cur prev words=() cword\n-    local bitcoin_tx\n+    local flow_tx\n \n-    # save and use original argument to invoke bitcoin-tx for -help\n+    # save and use original argument to invoke flow-tx for -help\n     # it might not be in $PATH\n-    bitcoin_tx=\"$1\"\n+    flow_tx=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n =: cur prev words cword\n@@ -27,15 +27,15 @@ _bitcoin_tx() {\n \n     if [[ \"$cword\" == 1 || ( \"$prev\" != \"-create\" && \"$prev\" == -* ) ]]; then\n         # only options (or an uncompletable hex-string) allowed\n-        # parse bitcoin-tx -help for options\n+        # parse flow-tx -help for options\n         local helpopts\n-        helpopts=$($bitcoin_tx -help | sed -e '/^  -/ p' -e d )\n+        helpopts=$($flow_tx -help | sed -e '/^  -/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n     else\n         # only commands are allowed\n         # parse -help for commands\n         local helpcmds\n-        helpcmds=$($bitcoin_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n+        helpcmds=$($flow_tx -help | sed -e '1,/Commands:/d' -e 's/=.*/=/' -e '/^  [a-z]/ p' -e d )\n         COMPREPLY=( $( compgen -W \"$helpcmds\" -- \"$cur\" ) )\n     fi\n \n@@ -46,7 +46,7 @@ _bitcoin_tx() {\n \n     return 0\n } &&\n-complete -F _bitcoin_tx bitcoin-tx\n+complete -F _flow_tx flow-tx\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoin-tx.bash-completion"
      },
      {
        "sha": "00e54a0398799a64fc463313c6a6b96a8827dc35",
        "filename": "contrib/flowd.bash-completion",
        "status": "renamed",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flowd.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/flowd.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/flowd.bash-completion?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,15 +1,15 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-qt(1)\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# bash programmable completion for flowd(1) and flow-qt(1)\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-_bitcoind() {\n+_flowd() {\n     local cur prev words=() cword\n-    local bitcoind\n+    local flowd\n \n-    # save and use original argument to invoke bitcoind for -help\n+    # save and use original argument to invoke flowd for -help\n     # it might not be in $PATH\n-    bitcoind=\"$1\"\n+    flowd=\"$1\"\n \n     COMPREPLY=()\n     _get_comp_words_by_ref -n = cur prev words cword\n@@ -33,7 +33,7 @@ _bitcoind() {\n             # only parse -help if senseful\n             if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n                 local helpopts\n-                helpopts=$($bitcoind -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n+                helpopts=$($flowd -help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n                 COMPREPLY=( $( compgen -W \"$helpopts\" -- \"$cur\" ) )\n             fi\n \n@@ -45,7 +45,7 @@ _bitcoind() {\n             ;;\n     esac\n } &&\n-complete -F _bitcoind bitcoind bitcoin-qt\n+complete -F _flowd flowd flow-qt\n \n # Local variables:\n # mode: shell-script",
        "previous_filename": "contrib/bitcoind.bash-completion"
      },
      {
        "sha": "f3dd1ef7f796349a5c6b052f5644660752258764",
        "filename": "contrib/gitian-build.sh",
        "status": "modified",
        "additions": 33,
        "deletions": 33,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-build.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-build.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-build.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,12 +17,12 @@ osx=true\n SIGNER=\n VERSION=\n commit=false\n-url=https://github.com/bitcoin/bitcoin\n+url=https://github.com/flow/flow\n proc=2\n mem=2000\n lxc=true\n osslTarUrl=http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n-osslPatchUrl=https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+osslPatchUrl=https://flowcore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n scriptName=$(basename -- \"$0\")\n signProg=\"gpg --detach-sign\"\n commitFiles=true\n@@ -31,15 +31,15 @@ commitFiles=true\n read -d '' usage <<- EOF\n Usage: $scriptName [-c|u|v|b|s|B|o|h|j|m|] signer version\n \n-Run this script from the directory containing the bitcoin, gitian-builder, gitian.sigs, and bitcoin-detached-sigs.\n+Run this script from the directory containing the flow, gitian-builder, gitian.sigs, and flow-detached-sigs.\n \n Arguments:\n signer          GPG signer to sign each build assert file\n version\t\tVersion number, commit, or branch to build. If building a commit or branch, the -c option must be specified\n \n Options:\n -c|--commit\tIndicate that the version argument is for a commit or branch\n--u|--url\tSpecify the URL of the repository. Default is https://github.com/bitcoin/bitcoin\n+-u|--url\tSpecify the URL of the repository. Default is https://github.com/flow/flow\n -v|--verify \tVerify the gitian build\n -b|--build\tDo a gitian build\n -s|--sign\tMake signed binaries for Windows and Mac OSX\n@@ -232,8 +232,8 @@ echo ${COMMIT}\n if [[ $setup = true ]]\n then\n     sudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm qemu-utils\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/flow-core/gitian.sigs.git\n+    git clone https://github.com/flow-core/flow-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n     pushd ./gitian-builder\n     if [[ -n \"$USE_LXC\" ]]\n@@ -247,7 +247,7 @@ then\n fi\n \n # Set up build\n-pushd ./bitcoin\n+pushd ./flow\n git fetch\n git checkout ${COMMIT}\n popd\n@@ -256,7 +256,7 @@ popd\n if [[ $build = true ]]\n then\n \t# Make output folder\n-\tmkdir -p ./bitcoin-binaries/${VERSION}\n+\tmkdir -p ./flow-binaries/${VERSION}\n \t\n \t# Build Dependencies\n \techo \"\"\n@@ -266,39 +266,39 @@ then\n \tmkdir -p inputs\n \twget -N -P inputs $osslPatchUrl\n \twget -N -P inputs $osslTarUrl\n-\tmake -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+\tmake -C ../flow/depends download SOURCES_PATH=`pwd`/cache/common\n \n \t# Linux\n \tif [[ $linux = true ]]\n \tthen\n             echo \"\"\n \t    echo \"Compiling ${VERSION} Linux\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-\t    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit flow=${COMMIT} --url flow=${url} ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+\t    mv build/out/flow-*.tar.gz build/out/src/flow-*.tar.gz ../flow-binaries/${VERSION}\n \tfi\n \t# Windows\n \tif [[ $windows = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-\t    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit flow=${COMMIT} --url flow=${url} ../flow/contrib/gitian-descriptors/gitian-win.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-win.yml\n+\t    mv build/out/flow-*-win-unsigned.tar.gz inputs/flow-win-unsigned.tar.gz\n+\t    mv build/out/flow-*.zip build/out/flow-*.exe ../flow-binaries/${VERSION}\n \tfi\n \t# Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Compiling ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -j ${proc} -m ${mem} --commit bitcoin=${COMMIT} --url bitcoin=${url} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-\t    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-\t    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -j ${proc} -m ${mem} --commit flow=${COMMIT} --url flow=${url} ../flow/contrib/gitian-descriptors/gitian-osx.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-osx.yml\n+\t    mv build/out/flow-*-osx-unsigned.tar.gz inputs/flow-osx-unsigned.tar.gz\n+\t    mv build/out/flow-*.tar.gz build/out/flow-*.dmg ../flow-binaries/${VERSION}\n \tfi\n \tpopd\n \n@@ -325,27 +325,27 @@ then\n \techo \"\"\n \techo \"Verifying v${VERSION} Linux\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../flow/contrib/gitian-descriptors/gitian-linux.yml\n \t# Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../flow/contrib/gitian-descriptors/gitian-win.yml\n \t# Mac OSX\t\n \techo \"\"\n \techo \"Verifying v${VERSION} Mac OSX\"\n \techo \"\"\t\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../flow/contrib/gitian-descriptors/gitian-osx.yml\n \t# Signed Windows\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Windows\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n \t# Signed Mac OSX\n \techo \"\"\n \techo \"Verifying v${VERSION} Signed Mac OSX\"\n \techo \"\"\n-\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n+\t./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\t\n \tpopd\n fi\n \n@@ -360,20 +360,20 @@ then\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Windows\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-\t    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-binaries/${VERSION}\n-\t    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-binaries/${VERSION}\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n+\t    mv build/out/flow-*win64-setup.exe ../flow-binaries/${VERSION}\n+\t    mv build/out/flow-*win32-setup.exe ../flow-binaries/${VERSION}\n \tfi\n \t# Sign Mac OSX\n \tif [[ $osx = true ]]\n \tthen\n \t    echo \"\"\n \t    echo \"Signing ${VERSION} Mac OSX\"\n \t    echo \"\"\n-\t    ./bin/gbuild -i --commit signature=${COMMIT} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-\t    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-binaries/${VERSION}/bitcoin-${VERSION}-osx.dmg\n+\t    ./bin/gbuild -i --commit signature=${COMMIT} ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    ./bin/gsign -p $signProg --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n+\t    mv build/out/flow-osx-signed.dmg ../flow-binaries/${VERSION}/flow-${VERSION}-osx.dmg\n \tfi\n \tpopd\n "
      },
      {
        "sha": "7f69282ca295518e58b501ed94b3bfc502bfb638",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -19,7 +19,7 @@ Sanity checks:\n \n Once you've got the right hardware and software:\n \n-    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/flow/flow.git\n     git clone git://github.com/devrandom/gitian-builder.git\n     mkdir gitian-builder/inputs\n     cd gitian-builder/inputs\n@@ -61,5 +61,5 @@ Here's a description of Gavin's setup on OSX 10.6:\n 5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n \n \texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n+\tgit clone git://github.com/flow/flow.git\n \t... etc"
      },
      {
        "sha": "e475738b2616c0301a76e586928371eeef317092",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-linux-0.15\"\n+name: \"flow-linux-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/flow/flow.git\"\n+  \"dir\": \"flow\"\n files: []\n script: |\n \n@@ -113,7 +113,7 @@ script: |\n   chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  cd bitcoin\n+  cd flow\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -136,13 +136,13 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo flow-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find flow-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\""
      },
      {
        "sha": "24daba6ff712e8f380c53ea466d7a6cd005a265d",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,16 +1,16 @@\n ---\n-name: \"bitcoin-dmg-signer\"\n+name: \"flow-dmg-signer\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n packages:\n - \"faketime\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/flow-core/flow-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n+- \"flow-osx-unsigned.tar.gz\"\n script: |\n   WRAP_DIR=$HOME/wrapped\n   mkdir -p ${WRAP_DIR}\n@@ -27,8 +27,8 @@ script: |\n     chmod +x ${WRAP_DIR}/${prog}\n   done\n \n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n+  UNSIGNED=flow-osx-unsigned.tar.gz\n+  SIGNED=flow-osx-signed.dmg\n \n   tar -xf ${UNSIGNED}\n   OSX_VOLNAME=\"$(cat osx_volname)\""
      },
      {
        "sha": "0c44994e78d3c6675986e243f263d6da8c4e5040",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-osx-0.15\"\n+name: \"flow-osx-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -28,8 +28,8 @@ packages:\n - \"python-setuptools\"\n - \"fonts-tuffy\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/flow/flow.git\"\n+  \"dir\": \"flow\"\n files:\n - \"MacOSX10.11.sdk.tar.gz\"\n script: |\n@@ -83,7 +83,7 @@ script: |\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd flow\n   BASEPREFIX=`pwd`/depends\n \n   mkdir -p ${BASEPREFIX}/SDKs\n@@ -105,14 +105,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo flow-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find flow-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   popd\n \n   ORIGPATH=\"$PATH\""
      },
      {
        "sha": "a36a9e80c642cd5f568e095aaafb398dace8c0f5",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-signer\"\n+name: \"flow-win-signer\"\n suites:\n - \"trusty\"\n architectures:\n@@ -8,12 +8,12 @@ packages:\n - \"libssl-dev\"\n - \"autoconf\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin-core/bitcoin-detached-sigs.git\"\n+- \"url\": \"https://github.com/flow-core/flow-detached-sigs.git\"\n   \"dir\": \"signature\"\n files:\n - \"osslsigncode-1.7.1.tar.gz\"\n - \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n+- \"flow-win-unsigned.tar.gz\"\n script: |\n   BUILD_DIR=`pwd`\n   SIGDIR=${BUILD_DIR}/signature/win\n@@ -23,7 +23,7 @@ script: |\n   echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n \n   mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n+  tar -C ${UNSIGNED_DIR} -xf flow-win-unsigned.tar.gz\n \n   tar xf osslsigncode-1.7.1.tar.gz\n   cd osslsigncode-1.7.1"
      },
      {
        "sha": "fababecc47bb1029be9e119ad68796cc93b93c23",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n ---\n-name: \"bitcoin-win-0.15\"\n+name: \"flow-win-0.15\"\n enable_cache: true\n suites:\n - \"trusty\"\n@@ -22,8 +22,8 @@ packages:\n - \"ca-certificates\"\n - \"python\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/flow/flow.git\"\n+  \"dir\": \"flow\"\n files: []\n script: |\n   WRAP_DIR=$HOME/wrapped\n@@ -72,7 +72,7 @@ script: |\n \n   function create_per-host_linker_wrapper {\n   # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n+  # heap, causing non-determinism. See discussion in https://github.com/flow/flow/pull/6900\n   for i in $HOSTS; do\n     mkdir -p ${WRAP_DIR}/${i}\n     for prog in collect2; do\n@@ -101,7 +101,7 @@ script: |\n   create_per-host_linker_wrapper \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n-  cd bitcoin\n+  cd flow\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n@@ -120,14 +120,14 @@ script: |\n   ./autogen.sh\n   CONFIG_SITE=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`/share/config.site ./configure --prefix=/\n   make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n+  SOURCEDIST=`echo flow-*.tar.gz`\n   DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n \n   # Correct tar file order\n   mkdir -p temp\n   pushd temp\n   tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+  find flow-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n   mkdir -p $OUTDIR/src\n   cp ../$SOURCEDIST $OUTDIR/src\n   popd\n@@ -148,7 +148,7 @@ script: |\n     make deploy\n     make install DESTDIR=${INSTALLPATH}\n     rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n+    cp -f flow-*setup*.exe $OUTDIR/\n     cd installed\n     mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n     find . -name \"lib*.la\" -delete\n@@ -164,7 +164,7 @@ script: |\n   cp -rf contrib/windeploy $BUILD_DIR\n   cd $BUILD_DIR/windeploy\n   mkdir unsigned\n-  cp $OUTDIR/bitcoin-*setup-unsigned.exe unsigned/\n+  cp $OUTDIR/flow-*setup-unsigned.exe unsigned/\n   find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n   mv ${OUTDIR}/${DISTNAME}-x86_64-*-debug.zip ${OUTDIR}/${DISTNAME}-win64-debug.zip\n   mv ${OUTDIR}/${DISTNAME}-i686-*-debug.zip ${OUTDIR}/${DISTNAME}-win32-debug.zip"
      },
      {
        "sha": "5e299519afa0163554dc27004ddba1b6c194c83e",
        "filename": "contrib/init/README.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n Sample configuration files for:\n ```\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n+SystemD: flowd.service\n+Upstart: flowd.conf\n+OpenRC:  flowd.openrc\n+         flowd.openrcconf\n+CentOS:  flowd.init\n+OS X:    org.flow.flowd.plist\n ```\n have been made available to assist packagers in creating node packages here.\n "
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 60\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/runscript\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,22 +0,0 @@\n-[Unit]\n-Description=Bitcoin's distributed currency daemon\n-After=network.target\n-\n-[Service]\n-User=bitcoin\n-Group=bitcoin\n-\n-Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n-\n-Restart=always\n-PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "9ba3d0d093b1c44b9e4432ef99fb660ff8ce2cbd",
        "filename": "contrib/init/flowd.conf",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/flowd.conf?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,65 @@\n+description \"Flow Core Daemon\"\n+\n+start on runlevel [2345]\n+stop on starting rc RUNLEVEL=[016]\n+\n+env FLOWD_BIN=\"/usr/bin/flowd\"\n+env FLOWD_USER=\"flow\"\n+env FLOWD_GROUP=\"flow\"\n+env FLOWD_PIDDIR=\"/var/run/flowd\"\n+# upstart can't handle variables constructed with other variables\n+env FLOWD_PIDFILE=\"/var/run/flowd/flowd.pid\"\n+env FLOWD_CONFIGFILE=\"/etc/flow/flow.conf\"\n+env FLOWD_DATADIR=\"/var/lib/flowd\"\n+\n+expect fork\n+\n+respawn\n+respawn limit 5 120\n+kill timeout 60\n+\n+pre-start script\n+    # this will catch non-existent config files\n+    # flowd will check and exit with this very warning, but it can do so\n+    # long after forking, leaving upstart to think everything started fine.\n+    # since this is a commonly encountered case on install, just check and\n+    # warn here.\n+    if ! grep -qs '^rpcpassword=' \"$FLOWD_CONFIGFILE\" ; then\n+        echo \"ERROR: You must set a secure rpcpassword to run flowd.\"\n+        echo \"The setting must appear in $FLOWD_CONFIGFILE\"\n+        echo\n+        echo \"This password is security critical to securing wallets \"\n+        echo \"and must not be the same as the rpcuser setting.\"\n+        echo \"You can generate a suitable random password using the following\"\n+        echo \"command from the shell:\"\n+        echo\n+        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+        echo\n+        echo \"It is also recommended that you also set alertnotify so you are \"\n+        echo \"notified of problems:\"\n+        echo\n+        echo \"ie: alertnotify=echo %%s | mail -s \\\"Flow Alert\\\"\" \\\n+            \"admin@foo.com\"\n+        echo\n+        exit 1\n+    fi\n+\n+    mkdir -p \"$FLOWD_PIDDIR\"\n+    chmod 0755 \"$FLOWD_PIDDIR\"\n+    chown $FLOWD_USER:$FLOWD_GROUP \"$FLOWD_PIDDIR\"\n+    chown $FLOWD_USER:$FLOWD_GROUP \"$FLOWD_CONFIGFILE\"\n+    chmod 0660 \"$FLOWD_CONFIGFILE\"\n+end script\n+\n+exec start-stop-daemon \\\n+    --start \\\n+    --pidfile \"$FLOWD_PIDFILE\" \\\n+    --chuid $FLOWD_USER:$FLOWD_GROUP \\\n+    --exec \"$FLOWD_BIN\" \\\n+    -- \\\n+    -pid=\"$FLOWD_PIDFILE\" \\\n+    -conf=\"$FLOWD_CONFIGFILE\" \\\n+    -datadir=\"$FLOWD_DATADIR\" \\\n+    -disablewallet \\\n+    -daemon\n+"
      },
      {
        "sha": "78e6095de5724820d3c6439d693350d8909dfadf",
        "filename": "contrib/init/flowd.init",
        "status": "renamed",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/flowd.init?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,36 +1,36 @@\n #!/bin/bash\n #\n-#  bitcoind The bitcoin core server.\n+#  flowd The flow core server.\n #\n #\n # chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n+# description: flowd\n+# processname: flowd\n #\n \n # Source function library.\n . /etc/init.d/functions\n \n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n+# you can override defaults in /etc/sysconfig/flowd, see below\n+if [ -f /etc/sysconfig/flowd ]; then\n+        . /etc/sysconfig/flowd\n fi\n \n RETVAL=0\n \n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n+prog=flowd\n+# you can override the lockfile via FLOWD_LOCKFILE in /etc/sysconfig/flowd\n+lockfile=${FLOWD_LOCKFILE-/var/lock/subsys/flowd}\n \n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n+# flowd defaults to /usr/bin/flowd, override with FLOWD_BIN\n+flowd=${FLOWD_BIN-/usr/bin/flowd}\n \n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n+# flowd opts default to -disablewallet, override with FLOWD_OPTS\n+flowd_opts=${FLOWD_OPTS--disablewallet}\n \n start() {\n     echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n+    daemon $DAEMONOPTS $flowd $flowd_opts\n     RETVAL=$?\n     echo\n     [ $RETVAL -eq 0 ] && touch $lockfile",
        "previous_filename": "contrib/init/bitcoind.init"
      },
      {
        "sha": "d946bebfab22178daf167c468f9f55726ec24489",
        "filename": "contrib/init/flowd.openrc",
        "status": "added",
        "additions": 92,
        "deletions": 0,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/flowd.openrc?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,92 @@\n+#!/sbin/runscript\n+\n+# backward compatibility for existing gentoo layout \n+#\n+if [ -d \"/var/lib/flow/.flow\" ]; then\n+\tFLOWD_DEFAULT_DATADIR=\"/var/lib/flow/.flow\"\n+else\n+\tFLOWD_DEFAULT_DATADIR=\"/var/lib/flowd\"\n+fi\n+\n+FLOWD_CONFIGFILE=${FLOWD_CONFIGFILE:-/etc/flow/flow.conf}\n+FLOWD_PIDDIR=${FLOWD_PIDDIR:-/var/run/flowd}\n+FLOWD_PIDFILE=${FLOWD_PIDFILE:-${FLOWD_PIDDIR}/flowd.pid}\n+FLOWD_DATADIR=${FLOWD_DATADIR:-${FLOWD_DEFAULT_DATADIR}}\n+FLOWD_USER=${FLOWD_USER:-${FLOW_USER:-flow}}\n+FLOWD_GROUP=${FLOWD_GROUP:-flow}\n+FLOWD_BIN=${FLOWD_BIN:-/usr/bin/flowd}\n+FLOWD_NICE=${FLOWD_NICE:-${NICELEVEL:-0}}\n+FLOWD_OPTS=\"${FLOWD_OPTS:-${FLOW_OPTS}}\"\n+\n+name=\"Flow Core Daemon\"\n+description=\"Flow cryptocurrency P2P network daemon\"\n+\n+command=\"/usr/bin/flowd\"\n+command_args=\"-pid=\\\"${FLOWD_PIDFILE}\\\" \\\n+\t\t-conf=\\\"${FLOWD_CONFIGFILE}\\\" \\\n+\t\t-datadir=\\\"${FLOWD_DATADIR}\\\" \\\n+\t\t-daemon \\\n+\t\t${FLOWD_OPTS}\"\n+\n+required_files=\"${FLOWD_CONFIGFILE}\"\n+start_stop_daemon_args=\"-u ${FLOWD_USER} \\\n+\t\t\t-N ${FLOWD_NICE} -w 2000\"\n+pidfile=\"${FLOWD_PIDFILE}\"\n+\n+# The retry schedule to use when stopping the daemon. Could be either\n+# a timeout in seconds or multiple signal/timeout pairs (like\n+# \"SIGKILL/180 SIGTERM/300\")\n+retry=\"${FLOWD_SIGTERM_TIMEOUT}\"\n+\n+depend() {\n+\tneed localmount net\n+}\n+\n+# verify\n+# 1) that the datadir exists and is writable (or create it)\n+# 2) that a directory for the pid exists and is writable\n+# 3) ownership and permissions on the config file\n+start_pre() {\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0750 \\\n+\t--owner \"${FLOWD_USER}:${FLOWD_GROUP}\" \\\n+\t\"${FLOWD_DATADIR}\"\n+\n+\tcheckpath \\\n+\t-d \\\n+\t--mode 0755 \\\n+\t--owner \"${FLOWD_USER}:${FLOWD_GROUP}\" \\\n+\t\"${FLOWD_PIDDIR}\"\n+\n+\tcheckpath -f \\\n+\t-o ${FLOWD_USER}:${FLOWD_GROUP} \\\n+\t-m 0660 \\\n+\t${FLOWD_CONFIGFILE}\n+\n+\tcheckconfig || return 1\n+}\n+\n+checkconfig()\n+{\n+\tif ! grep -qs '^rpcpassword=' \"${FLOWD_CONFIGFILE}\" ; then\n+\t\teerror \"\"\n+\t\teerror \"ERROR: You must set a secure rpcpassword to run flowd.\"\n+\t\teerror \"The setting must appear in ${FLOWD_CONFIGFILE}\"\n+\t\teerror \"\"\n+\t\teerror \"This password is security critical to securing wallets \"\n+\t\teerror \"and must not be the same as the rpcuser setting.\"\n+\t\teerror \"You can generate a suitable random password using the following\"\n+\t\teerror \"command from the shell:\"\n+\t\teerror \"\"\n+\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n+\t\teerror \"\"\n+\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n+\t\teerror \"notified of problems:\"\n+\t\teerror \"\"\n+\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Flow Alert\\\"\" \\\n+\t\t\t\"admin@foo.com\"\n+\t\teerror \"\"\n+\t\treturn 1\n+\tfi\n+}"
      },
      {
        "sha": "8bca044027a2981776519c8013e8d76c05aa3b3f",
        "filename": "contrib/init/flowd.openrcconf",
        "status": "added",
        "additions": 33,
        "deletions": 0,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/flowd.openrcconf?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,33 @@\n+# /etc/conf.d/flowd: config file for /etc/init.d/flowd\n+\n+# Config file location\n+#FLOWD_CONFIGFILE=\"/etc/flow/flow.conf\"\n+\n+# What directory to write pidfile to?  (created and owned by $FLOWD_USER)\n+#FLOWD_PIDDIR=\"/var/run/flowd\"\n+\n+# What filename to give the pidfile\n+#FLOWD_PIDFILE=\"${FLOWD_PIDDIR}/flowd.pid\"\n+\n+# Where to write flowd data (be mindful that the blockchain is large)\n+#FLOWD_DATADIR=\"/var/lib/flowd\"\n+\n+# User and group to own flowd process\n+#FLOWD_USER=\"flow\"\n+#FLOWD_GROUP=\"flow\"\n+\n+# Path to flowd executable\n+#FLOWD_BIN=\"/usr/bin/flowd\"\n+\n+# Nice value to run flowd under\n+#FLOWD_NICE=0\n+\n+# Additional options (avoid -conf and -datadir, use flags above)\n+FLOWD_OPTS=\"-disablewallet\"\n+\n+# The timeout in seconds OpenRC will wait for flowd to terminate\n+# after a SIGTERM has been raised.\n+# Note that this will be mapped as argument to start-stop-daemon's\n+# '--retry' option, which means you can specify a retry schedule\n+# here. For more information see man 8 start-stop-daemon.\n+FLOWD_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "11e2a5381982185cbc851d7efbb528f9a976fba1",
        "filename": "contrib/init/flowd.service",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/flowd.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/flowd.service?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,22 @@\n+[Unit]\n+Description=Flow's distributed currency daemon\n+After=network.target\n+\n+[Service]\n+User=flow\n+Group=flow\n+\n+Type=forking\n+PIDFile=/var/lib/flowd/flowd.pid\n+ExecStart=/usr/bin/flowd -daemon -pid=/var/lib/flowd/flowd.pid \\\n+-conf=/etc/flow/flow.conf -datadir=/var/lib/flowd -disablewallet\n+\n+Restart=always\n+PrivateTmp=true\n+TimeoutStopSec=60s\n+TimeoutStartSec=2s\n+StartLimitInterval=120s\n+StartLimitBurst=5\n+\n+[Install]\n+WantedBy=multi-user.target"
      },
      {
        "sha": "4d53cf5fe552e98b540cbc4d54a7ee892e132474",
        "filename": "contrib/init/org.flow.flowd.plist",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/org.flow.flowd.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/init/org.flow.flowd.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.flow.flowd.plist?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,10 +3,10 @@\n <plist version=\"1.0\">\n <dict>\n \t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n+\t<string>org.flow.flowd</string>\n \t<key>ProgramArguments</key>\n \t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n+\t\t<string>/usr/local/bin/flowd</string>\n \t\t<string>-daemon</string>\n \t</array>\n \t<key>RunAtLoad</key>",
        "previous_filename": "contrib/init/org.bitcoin.bitcoind.plist"
      },
      {
        "sha": "c87e62ed283ed8b2936cca23748e913babf12b6f",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n # Linearize\n-Construct a linear, no-fork, best version of the Bitcoin blockchain. The scripts\n+Construct a linear, no-fork, best version of the Flow blockchain. The scripts\n run using Python 3 but are compatible with Python 2.\n \n ## Step 1: Download hash list\n@@ -21,7 +21,7 @@ standalone hash lists but safe to use with linearize-data.py, which will output\n the same data no matter which byte format is chosen.\n \n The `linearize-hashes` script requires a connection, local or remote, to a\n-JSON-RPC server. Running `bitcoind` or `bitcoin-qt -server` will be sufficient.\n+JSON-RPC server. Running `flowd` or `flow-qt -server` will be sufficient.\n \n ## Step 2: Copy local block data\n \n@@ -39,7 +39,7 @@ will be printed.\n respectively, to the current time and to the timestamp of the most recent block\n written to the script's blockchain.\n * `genesis`: The hash of the genesis block in the blockchain.\n-* `input`: bitcoind blocks/ directory containing blkNNNNN.dat\n+* `input`: flowd blocks/ directory containing blkNNNNN.dat\n * `hashlist`: text file containing list of block hashes created by\n linearize-hashes.py.\n * `max_out_sz`: Maximum size for files created by the `output_file` option."
      },
      {
        "sha": "acf4c5365109bb0dada5d259dcdb98c8513f7a3d",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n-# bitcoind RPC settings (linearize-hashes)\n+# flowd RPC settings (linearize-hashes)\n rpcuser=someuser\n rpcpassword=somepassword\n-#datadir=~/.bitcoin\n+#datadir=~/.flow\n host=127.0.0.1\n port=8332\n #port=18332\n@@ -14,12 +14,12 @@ max_height=313000\n # mainnet\n netmagic=f9beb4d9\n genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n+input=/home/example/.flow/blocks\n \n # testnet\n #netmagic=0b110907\n #genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n+#input=/home/example/.flow/testnet3/blocks\n \n # \"output\" option causes blockchain files to be written to the given location,\n # with \"output_file\" ignored. If not used, \"output_file\" is used instead."
      },
      {
        "sha": "37de56ee69bf8408c3b8e2b215afcd3feff683ce",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-data.py: Construct a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #"
      },
      {
        "sha": "3ca27b6751ff452ab8f9b7b46bdb6ecd57e1f341",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -2,7 +2,7 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -27,7 +27,7 @@ def hex_switchEndian(s):\n \tpairList = [s[i:i+2].encode() for i in range(0, len(s), 2)]\n \treturn b''.join(pairList[::-1]).decode()\n \n-class BitcoinRPC:\n+class FlowRPC:\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n \t\tauthpair = authpair.encode('utf-8')\n@@ -69,7 +69,7 @@ def response_is_error(resp_obj):\n \t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n \n def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n+\trpc = FlowRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n \theight = settings['min_height']"
      },
      {
        "sha": "2ec83e21a379173f91b4c2b7c53865f98f034bbc",
        "filename": "contrib/macdeploy/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -11,5 +11,5 @@ This script should not be run manually, instead, after building as usual:\n During the process, the disk image window will pop up briefly where the fancy\n settings are applied. This is normal, please do not interfere.\n \n-When finished, it will produce `Bitcoin-Core.dmg`.\n+When finished, it will produce `Flow-Core.dmg`.\n "
      },
      {
        "sha": "c441f5e8b95c0020e2f51cc27bc7735b314fd27d",
        "filename": "contrib/macdeploy/background.svg",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,7 +3,7 @@\n  \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n \t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n+\tCopyright (c) 2015 The Flow Core developers\n \tDistributed under the MIT software license, see the accompanying\n \tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n \t-->"
      },
      {
        "sha": "1c28c16526e17bf2b85aba20c1f92f7947a563b9",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n from __future__ import division,print_function,unicode_literals\n@@ -28,7 +28,7 @@\n     'gridOffsetX': 0.0,\n     'textSize': 12.0,\n     'viewOptionsVersion': 1,\n-    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n+    'backgroundImageAlias': b'\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07flow\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n     'backgroundColorBlue': 1.0,\n     'iconSize': 96.0,\n     'backgroundColorGreen': 1.0,\n@@ -45,16 +45,16 @@\n alias.volume.name = package_name_ns\n alias.volume.posix_path = '/Volumes/' + package_name_ns\n alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00flowuser:\\x00Documents:\\x00flow:\\x00flow:\\x00' + package_name_ns + '.temp.dmg'\n+alias.volume.disk_image_alias.target.posix_path = 'Users/flowuser/Documents/flow/flow/' + package_name_ns + '.temp.dmg'\n alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n ds['.']['icvp'] = icvp\n \n ds['.']['vSrn'] = ('long', 1)\n \n ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n+ds['Flow-Qt.app']['Iloc'] = (128, 156)\n \n ds.flush()\n ds.close()"
      },
      {
        "sha": "6ca2186801e95ed4402c259815a3c5f2b9d9aea0",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ac24d3bb187c3aa43268b67239cda90ab065595e",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n set -e\n \n ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n+BUNDLE=\"${ROOTDIR}/Flow-Qt.app\"\n CODESIGN=codesign\n TEMPDIR=sign.temp\n TEMPLIST=${TEMPDIR}/signatures.txt"
      },
      {
        "sha": "eb2e37ffe981973ba2995a6d394b56bbd4993751",
        "filename": "contrib/macdeploy/extract-osx-sdk.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/extract-osx-sdk.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/extract-osx-sdk.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/extract-osx-sdk.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "b3cd25545377e5e480461cfe1437ab361bea7ffa",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>Flow-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "ba90ab5abf32d19043baaf420c906120ad169b92",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -155,7 +155,7 @@ class FrameworkInfo(object):\n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = \"Flow-Qt\"\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -603,7 +603,7 @@ else:\n \n # ------------------------------------------------\n \n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", \"Flow-Qt.app\")\n \n if verbose >= 2:\n     print(\"+ Copying source bundle +\")"
      },
      {
        "sha": "609d77cab7fc5d5abe232902a2682895089e9be4",
        "filename": "contrib/qos/README.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n ### QoS (Quality of service) ###\n \n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n+This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Flow network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN.\n \n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n+This means one can have an always-on flowd instance running, and another local flowd/flow-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "de29dddd87b5dbeac7f178608d552ccabfa79247",
        "filename": "contrib/qos/tc.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-# Copyright (c) 2017 The Bitcoin Core developers\n+# Copyright (c) 2017 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #network interface on which to limit traffic\n IF=\"eth0\"\n #limit of the network interface in question\n LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n+#limit outbound Flow protocol traffic to this rate\n LIMIT=\"160kbit\"\n #defines the IPv4 address space for which you wish to disable rate limiting\n LOCALNET_V4=\"192.168.0.0/16\""
      },
      {
        "sha": "4b64d5959953f9cffdc216f806fcad3d3365089d",
        "filename": "contrib/rpm/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n RPM Spec File Notes\n -------------------\n \n-The RPM spec file provided here is for Bitcoin-Core 0.12.0 and builds on CentOS\n+The RPM spec file provided here is for Flow-Core 0.12.0 and builds on CentOS\n 7 with either the CentOS provided OpenSSL library or with LibreSSL as packaged\n at [LibreLAMP.com](https://librelamp.com/). It should hopefully not be too\n difficult to port the RPM spec file to most RPM based Linux distributions.\n@@ -15,15 +15,15 @@ It is considered good form for all sources to reference a URL where the source\n can be downloaded.\n \n Sources 0-9 should be reserved for source code tarballs. `Source0` should\n-reference the release tarball available from https://bitcoin.org/bin/ and\n+reference the release tarball available from https://flow.org/bin/ and\n `Source1` should reference the BerkeleyDB source.\n \n Sources 10-99 are for source files that are maintained in the\n-[Bitcoin git repository](https://github.com/bitcoin/bitcoin) but are not part of\n+[Flow git repository](https://github.com/flow/flow) but are not part of\n the release tarball. Most of these will reside in the `contrib` sub-directory.\n \n Sources 10-19 should be reserved for miscellaneous configuration files.\n-Currently only `Source10` is used, for the example `bitcoin.conf` file.\n+Currently only `Source10` is used, for the example `flow.conf` file.\n \n Sources 20-29 should be reserved for man pages. Currently only `Source20`\n through `Source23` are used.\n@@ -34,21 +34,21 @@ release, the full URL specified in the RPM spec file will not work. You can get\n them from the git repository where you retrieved this file.\n \n Sources 100+ are for files that are not source tarballs and are not maintained\n-in the bitcoin git repository. At present only an SVG version of the Bitcoin\n+in the flow git repository. At present only an SVG version of the Flow\n icon is used.\n \n ## Patches\n \n In general, patches should be avoided. When a packager feels a patch is\n-necessary, the packager should bring the problem to the attention of the bitcoin\n+necessary, the packager should bring the problem to the attention of the flow\n developers so that an official fix to the issue can make it into the next\n release.\n \n-### Patch0 bitcoin-0.12.0-libressl.patch\n+### Patch0 flow-0.12.0-libressl.patch\n \n This patch is only needed if building against LibreSSL. LibreSSL is not the\n standard TLS library on most Linux distributions. The patch will likely not be\n-needed when 0.12.1 is released, a proper fix is already in the Bitcoin git\n+needed when 0.12.1 is released, a proper fix is already in the Flow git\n master branch.\n \n ## BuildRequires\n@@ -62,7 +62,7 @@ most likely to be the case with the Qt packages.\n \n The `build-unix.md` file recommends building against BerkeleyDB 4.8.30. Even if\n that is the version your Linux distribution ships with, it probably is a good\n-idea to build Bitcoin Core against a static version of that library compiled\n+idea to build Flow Core against a static version of that library compiled\n according to the instructions in the `build-unix.md` file so that any changes\n the distribution may make in the future will not result in a problem for users.\n \n@@ -91,15 +91,15 @@ assigned to them in the `touch` command that specifies the time stamp.\n \n ## SVG, PNG, and XPM Icons\n \n-The `bitcoin.svg` file is from the source listed as `Source100`. It is used as\n+The `flow.svg` file is from the source listed as `Source100`. It is used as\n the source for the PNG and XPM files. The generated PNG and XPM files are given\n the same time stamp as the source SVG file as a means of indicating they are\n derived from it.\n \n ## Systemd\n \n This spec file assumes the target distribution uses systemd. That really only\n-matters for the `bitcoin-server` package. At this point, most RPM based\n+matters for the `flow-server` package. At this point, most RPM based\n distributions that still receive vendor updates do in fact use systemd.\n \n The files to control the service are created in the RPM spec file itself using\n@@ -112,7 +112,7 @@ command that specifies the time stamp.\n \n ## SELinux\n \n-The `bitcoin-server` package should have SELinux support. How to properly do\n+The `flow-server` package should have SELinux support. How to properly do\n that *may* vary by distribution and version of distribution.\n \n The SELinux stuff in this RPM spec file *should* be correct for CentOS, RHEL,\n@@ -137,7 +137,7 @@ want the OpenSSL development files.\n LibreSSL (and some newer builds of OpenSSL) do not have support for SSLv3. This\n can cause issues with the Boost package if the Boost package has not been\n patched accordingly. On those distributions, you will either need to build\n-Bitcoin-Core against OpenSSL or use a patched version of Boost in the build\n+Flow-Core against OpenSSL or use a patched version of Boost in the build\n system.\n \n As SSLv3 is no longer safe, distributions that have not patched Boost to work\n@@ -156,8 +156,8 @@ developed on (CentOS 7).\n ## Legacy Credit\n \n This RPM spec file is largely based upon the work of Michael Hampton at\n-[Ringing Liberty](https://www.ringingliberty.com/bitcoin/). He has been\n-packaging Bitcoin for Fedora at least since 2012.\n+[Ringing Liberty](https://www.ringingliberty.com/flow/). He has been\n+packaging Flow for Fedora at least since 2012.\n \n Most of the differences between his packaging and this package are stylistic in\n nature. The major differences:\n@@ -174,9 +174,9 @@ academic.\n specifying a build without the Qt GUI, or specifying which version of the Qt\n libraries to use.\n \n-4. I renamed the `bitcoin` package that contains the Qt GUI to `bitcoin-core` as\n+4. I renamed the `flow` package that contains the Qt GUI to `flow-core` as\n that appears to be how the general population refers to it, in contrast to\n-`bitcoin-xt` or `bitcoin-classic`. I wanted to make sure the general population\n+`flow-xt` or `flow-classic`. I wanted to make sure the general population\n knows what they are getting when installing the GUI package.\n \n As far as minor differences, I generally prefer to assign the file permissions"
      },
      {
        "sha": "555614a06d49ab820fce1e08f723005b26cdcb01",
        "filename": "contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 24,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin-0.12.0-libressl.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin-0.12.0-libressl.patch?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,24 +0,0 @@\n-diff -ur bitcoin-0.12.0.orig/src/init.cpp bitcoin-0.12.0/src/init.cpp\n---- bitcoin-0.12.0.orig/src/init.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/init.cpp\t2016-02-23 06:03:47.133227757 -0800\n-@@ -1075,7 +1075,7 @@\n-     if (fPrintToDebugLog)\n-         OpenDebugLog();\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     LogPrintf(\"Using OpenSSL version %s\\n\", SSLeay_version(SSLEAY_VERSION));\n- #else\n-     LogPrintf(\"Using OpenSSL version %s\\n\", OpenSSL_version(OPENSSL_VERSION));\n-diff -ur bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp bitcoin-0.12.0/src/qt/rpcconsole.cpp\n---- bitcoin-0.12.0.orig/src/qt/rpcconsole.cpp\t2015-12-31 16:00:00.000000000 -0800\n-+++ bitcoin-0.12.0/src/qt/rpcconsole.cpp\t2016-02-23 15:09:42.881126841 -0800\n-@@ -264,7 +264,7 @@\n- \n-     // set library version labels\n- \n--#if (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-+#if defined(LIBRESSL_VERSION_NUMBER) || (OPENSSL_VERSION_NUMBER < 0x10100000L)\n-     ui->openSSLVersion->setText(SSLeay_version(SSLEAY_VERSION));\n- #else\n-     ui->openSSLVersion->setText(OpenSSL_version(OPENSSL_VERSION));"
      },
      {
        "sha": "6f5eef6375255381f7c4552715ffdaf329e4a502",
        "filename": "contrib/rpm/bitcoin.fc",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.fc?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,8 +0,0 @@\n-/usr/bin/bitcoin-cli\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/sbin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-/usr/lib(64)?/bitcoin/bitcoind\t\t--\tgen_context(system_u:object_r:bitcoin_exec_t,s0)\n-\n-/etc/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_conf_t,s0)\n-/var/lib/bitcoin(/.*)?\t\tgen_context(system_u:object_r:bitcoin_var_lib_t,s0)\n-\n-(/var)?/run/bitcoind(/.*)?   gen_context(system_u:object_r:bitcoin_var_run_t,s0)"
      },
      {
        "sha": "d6231c591a24312b3c073f7658533587279aeba7",
        "filename": "contrib/rpm/bitcoin.te",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e/contrib/rpm/bitcoin.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/bitcoin.te?ref=ea4867a4f7b96a09f41d1529d5de5b1edf3f3a4e",
        "patch": "@@ -1,81 +0,0 @@\n-policy_module(bitcoin, 1.100.1)\n-\n-########################################\n-#\n-# Declarations\n-#\n-\n-type bitcoin_t;\n-type bitcoin_exec_t;\n-init_daemon_domain(bitcoin_t, bitcoin_exec_t)\n-\n-permissive bitcoin_t;\n-\n-type bitcoin_initrc_exec_t;\n-init_script_file(bitcoin_initrc_exec_t)\n-\n-type bitcoin_conf_t;\n-files_type(bitcoin_conf_t)\n-\n-type bitcoin_var_lib_t;\n-files_type(bitcoin_var_lib_t)\n-\n-type bitcoin_var_run_t;\n-files_type(bitcoin_var_run_t)\n-\n-type bitcoin_port_t;\n-corenet_port(bitcoin_port_t)\n-\n-########################################\n-#\n-# bitcoin local policy\n-#\n-allow bitcoin_t self:process { fork };\n-\n-allow bitcoin_t self:fifo_file rw_fifo_file_perms;\n-allow bitcoin_t self:unix_stream_socket create_stream_socket_perms;\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-manage_files_pattern(bitcoin_t, bitcoin_conf_t, bitcoin_conf_t)\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_lib_t, bitcoin_var_lib_t)\n-files_var_lib_filetrans(bitcoin_t, bitcoin_var_lib_t, { dir file })\n-\n-manage_dirs_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-manage_files_pattern(bitcoin_t, bitcoin_var_run_t, bitcoin_var_run_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-corenet_all_recvfrom_unlabeled(bitcoin_t)\n-\n-allow bitcoin_t self:tcp_socket create_stream_socket_perms;\n-corenet_tcp_sendrecv_generic_if(bitcoin_t)\n-corenet_tcp_sendrecv_generic_node(bitcoin_t)\n-corenet_tcp_sendrecv_all_ports(bitcoin_t)\n-corenet_tcp_bind_generic_node(bitcoin_t)\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_bind;\n-\n-gen_require(`\n-    type bitcoin_port_t;\n-')\n-allow bitcoin_t bitcoin_port_t:tcp_socket name_connect;\n-\n-domain_use_interactive_fds(bitcoin_t)\n-\n-files_read_etc_files(bitcoin_t)\n-\n-miscfiles_read_localization(bitcoin_t)\n-\n-sysnet_dns_name_resolve(bitcoin_t)\n-\n-allow bitcoin_t bitcoin_exec_t:file execute_no_trans;\n-allow bitcoin_t self:process setsched;\n-corecmd_exec_ls(bitcoin_t)\n-corenet_tcp_connect_http_port(bitcoin_t)\n-dev_read_urand(bitcoin_t)\n-fs_getattr_xattr_fs(bitcoin_t)\n-kernel_read_system_state(bitcoin_t)"
      },
      {
        "sha": "9aca9e626e7481ca0deb5aebf4b3f534ca8ea11a",
        "filename": "contrib/rpm/flow.fc",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.fc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.fc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/flow.fc?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,8 @@\n+/usr/bin/flow-cli\t\t--\tgen_context(system_u:object_r:flow_exec_t,s0)\n+/usr/sbin/flowd\t\t--\tgen_context(system_u:object_r:flow_exec_t,s0)\n+/usr/lib(64)?/flow/flowd\t\t--\tgen_context(system_u:object_r:flow_exec_t,s0)\n+\n+/etc/flow(/.*)?\t\tgen_context(system_u:object_r:flow_conf_t,s0)\n+/var/lib/flow(/.*)?\t\tgen_context(system_u:object_r:flow_var_lib_t,s0)\n+\n+(/var)?/run/flowd(/.*)?   gen_context(system_u:object_r:flow_var_run_t,s0)"
      },
      {
        "sha": "2f8e6021e011f700c0b722c2ce7929abb1989f3c",
        "filename": "contrib/rpm/flow.if",
        "status": "renamed",
        "additions": 35,
        "deletions": 35,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.if",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.if",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/flow.if?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,127 +1,127 @@\n \n-## <summary>policy for bitcoin</summary>\n+## <summary>policy for flow</summary>\n \n \n ########################################\n ## <summary>\n-##\tTransition to bitcoin.\n+##\tTransition to flow.\n ## </summary>\n ## <param name=\"domain\">\n ## <summary>\n ##\tDomain allowed to transition.\n ## </summary>\n ## </param>\n #\n-interface(`bitcoin_domtrans',`\n+interface(`flow_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_t, bitcoin_exec_t;\n+\t\ttype flow_t, flow_exec_t;\n \t')\n \n \tcorecmd_search_bin($1)\n-\tdomtrans_pattern($1, bitcoin_exec_t, bitcoin_t)\n+\tdomtrans_pattern($1, flow_exec_t, flow_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tExecute bitcoin server in the bitcoin domain.\n+##\tExecute flow server in the flow domain.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_initrc_domtrans',`\n+interface(`flow_initrc_domtrans',`\n \tgen_require(`\n-\t\ttype bitcoin_initrc_exec_t;\n+\t\ttype flow_initrc_exec_t;\n \t')\n \n-\tinit_labeled_script_domtrans($1, bitcoin_initrc_exec_t)\n+\tinit_labeled_script_domtrans($1, flow_initrc_exec_t)\n ')\n \n \n ########################################\n ## <summary>\n-##\tSearch bitcoin lib directories.\n+##\tSearch flow lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_search_lib',`\n+interface(`flow_search_lib',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype flow_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_var_lib_t:dir search_dir_perms;\n+\tallow $1 flow_var_lib_t:dir search_dir_perms;\n \tfiles_search_var_lib($1)\n ')\n \n ########################################\n ## <summary>\n-##\tRead bitcoin lib files.\n+##\tRead flow lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_read_lib_files',`\n+interface(`flow_read_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype flow_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tread_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tread_files_pattern($1, flow_var_lib_t, flow_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib files.\n+##\tManage flow lib files.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_files',`\n+interface(`flow_manage_lib_files',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype flow_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_files_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_files_pattern($1, flow_var_lib_t, flow_var_lib_t)\n ')\n \n ########################################\n ## <summary>\n-##\tManage bitcoin lib directories.\n+##\tManage flow lib directories.\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n ##\tDomain allowed access.\n ##\t</summary>\n ## </param>\n #\n-interface(`bitcoin_manage_lib_dirs',`\n+interface(`flow_manage_lib_dirs',`\n \tgen_require(`\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype flow_var_lib_t;\n \t')\n \n \tfiles_search_var_lib($1)\n-\tmanage_dirs_pattern($1, bitcoin_var_lib_t, bitcoin_var_lib_t)\n+\tmanage_dirs_pattern($1, flow_var_lib_t, flow_var_lib_t)\n ')\n \n \n ########################################\n ## <summary>\n ##\tAll of the rules required to administrate\n-##\tan bitcoin environment\n+##\tan flow environment\n ## </summary>\n ## <param name=\"domain\">\n ##\t<summary>\n@@ -135,23 +135,23 @@ interface(`bitcoin_manage_lib_dirs',`\n ## </param>\n ## <rolecap/>\n #\n-interface(`bitcoin_admin',`\n+interface(`flow_admin',`\n \tgen_require(`\n-\t\ttype bitcoin_t;\n-\t\ttype bitcoin_initrc_exec_t;\n-\t\ttype bitcoin_var_lib_t;\n+\t\ttype flow_t;\n+\t\ttype flow_initrc_exec_t;\n+\t\ttype flow_var_lib_t;\n \t')\n \n-\tallow $1 bitcoin_t:process { ptrace signal_perms };\n-\tps_process_pattern($1, bitcoin_t)\n+\tallow $1 flow_t:process { ptrace signal_perms };\n+\tps_process_pattern($1, flow_t)\n \n-\tbitcoin_initrc_domtrans($1)\n+\tflow_initrc_domtrans($1)\n \tdomain_system_change_exemption($1)\n-\trole_transition $2 bitcoin_initrc_exec_t system_r;\n+\trole_transition $2 flow_initrc_exec_t system_r;\n \tallow $2 system_r;\n \n \tfiles_search_var_lib($1)\n-\tadmin_pattern($1, bitcoin_var_lib_t)\n+\tadmin_pattern($1, flow_var_lib_t)\n \n ')\n ",
        "previous_filename": "contrib/rpm/bitcoin.if"
      },
      {
        "sha": "d002b4b3d1332bb7b32814c192474bd1171569b6",
        "filename": "contrib/rpm/flow.spec",
        "status": "renamed",
        "additions": 123,
        "deletions": 123,
        "changes": 246,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.spec",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.spec",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/flow.spec?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -13,31 +13,31 @@\n %endif\n %endif\n \n-Name:\t\tbitcoin\n+Name:\t\tflow\n Version:\t0.12.0\n Release:\t2%{?dist}\n Summary:\tPeer to Peer Cryptographic Currency\n \n Group:\t\tApplications/System\n License:\tMIT\n-URL:\t\thttps://bitcoin.org/\n-Source0:\thttps://bitcoin.org/bin/bitcoin-core-%{version}/bitcoin-%{version}.tar.gz\n+URL:\t\thttps://flow.org/\n+Source0:\thttps://flow.org/bin/flow-core-%{version}/flow-%{version}.tar.gz\n Source1:\thttp://download.oracle.com/berkeley-db/db-%{bdbv}.NC.tar.gz\n \n-Source10:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/debian/examples/bitcoin.conf\n+Source10:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/contrib/debian/examples/flow.conf\n \n #man pages\n-Source20:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoind.1\n-Source21:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-cli.1\n-Source22:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/doc/man/bitcoin-qt.1\n+Source20:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/doc/man/flowd.1\n+Source21:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/doc/man/flow-cli.1\n+Source22:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/doc/man/flow-qt.1\n \n #selinux\n-Source30:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.te\n-# Source31 - what about bitcoin-tx and bench_bitcoin ???\n-Source31:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.fc\n-Source32:\thttps://raw.githubusercontent.com/bitcoin/bitcoin/v%{version}/contrib/rpm/bitcoin.if\n+Source30:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/contrib/rpm/flow.te\n+# Source31 - what about flow-tx and bench_flow ???\n+Source31:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/contrib/rpm/flow.fc\n+Source32:\thttps://raw.githubusercontent.com/flow/flow/v%{version}/contrib/rpm/flow.if\n \n-Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Bitcoin.svg\n+Source100:\thttps://upload.wikimedia.org/wikipedia/commons/4/46/Flow.svg\n \n %if 0%{?_use_libressl:1}\n BuildRequires:\tlibressl-devel\n@@ -50,13 +50,13 @@ BuildRequires:\tautoconf automake libtool\n BuildRequires:\tlibevent-devel\n \n \n-Patch0:\t\tbitcoin-0.12.0-libressl.patch\n+Patch0:\t\tflow-0.12.0-libressl.patch\n \n \n %description\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Flow is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of flows is carried out collectively by the network.\n \n %if %{_buildqt}\n %package core\n@@ -79,42 +79,42 @@ BuildRequires:\t%{_bindir}/inkscape\n BuildRequires:\t%{_bindir}/convert\n \n %description core\n-Bitcoin is a digital cryptographic currency that uses peer-to-peer technology to\n+Flow is a digital cryptographic currency that uses peer-to-peer technology to\n operate with no central authority or banks; managing transactions and the\n-issuing of bitcoins is carried out collectively by the network.\n+issuing of flows is carried out collectively by the network.\n \n This package contains the Qt based graphical client and node. If you are looking\n-to run a Bitcoin wallet, this is probably the package you want.\n+to run a Flow wallet, this is probably the package you want.\n %endif\n \n \n %package libs\n-Summary:\tBitcoin shared libraries\n+Summary:\tFlow shared libraries\n Group:\t\tSystem Environment/Libraries\n \n %description libs\n-This package provides the bitcoinconsensus shared libraries. These libraries\n+This package provides the flowconsensus shared libraries. These libraries\n may be used by third party software to provide consensus verification\n functionality.\n \n Unless you know need this package, you probably do not.\n \n %package devel\n-Summary:\tDevelopment files for bitcoin\n+Summary:\tDevelopment files for flow\n Group:\t\tDevelopment/Libraries\n Requires:\t%{name}-libs = %{version}-%{release}\n \n %description devel\n This package contains the header files and static library for the\n-bitcoinconsensus shared library. If you are developing or compiling software\n+flowconsensus shared library. If you are developing or compiling software\n that wants to link against that library, then you need this package installed.\n \n Most people do not need this package installed.\n \n %package server\n-Summary:\tThe bitcoin daemon\n+Summary:\tThe flow daemon\n Group:\t\tSystem Environment/Daemons\n-Requires:\tbitcoin-utils = %{version}-%{release}\n+Requires:\tflow-utils = %{version}-%{release}\n Requires:\tselinux-policy policycoreutils-python\n Requires(pre):\tshadow-utils\n Requires(post):\t%{_sbindir}/semodule %{_sbindir}/restorecon %{_sbindir}/fixfiles %{_sbindir}/sestatus\n@@ -124,34 +124,34 @@ BuildRequires:\tcheckpolicy\n BuildRequires:\t%{_datadir}/selinux/devel/Makefile\n \n %description server\n-This package provides a stand-alone bitcoin-core daemon. For most users, this\n+This package provides a stand-alone flow-core daemon. For most users, this\n package is only needed if they need a full-node without the graphical client.\n \n Some third party wallet software will want this package to provide the actual\n-bitcoin-core node they use to connect to the network.\n+flow-core node they use to connect to the network.\n \n-If you use the graphical bitcoin-core client then you almost certainly do not\n+If you use the graphical flow-core client then you almost certainly do not\n need this package.\n \n %package utils\n-Summary:\tBitcoin utilities\n+Summary:\tFlow utilities\n Group:\t\tApplications/System\n \n %description utils\n This package provides several command line utilities for interacting with a\n-bitcoin-core daemon.\n+flow-core daemon.\n \n-The bitcoin-cli utility allows you to communicate and control a bitcoin daemon\n-over RPC, the bitcoin-tx utility allows you to create a custom transaction, and\n-the bench_bitcoin utility can be used to perform some benchmarks.\n+The flow-cli utility allows you to communicate and control a flow daemon\n+over RPC, the flow-tx utility allows you to create a custom transaction, and\n+the bench_flow utility can be used to perform some benchmarks.\n \n-This package contains utilities needed by the bitcoin-server package.\n+This package contains utilities needed by the flow-server package.\n \n \n %prep\n %setup -q\n %patch0 -p1 -b .libressl\n-cp -p %{SOURCE10} ./bitcoin.conf.example\n+cp -p %{SOURCE10} ./flow.conf.example\n tar -zxf %{SOURCE1}\n cp -p db-%{bdbv}.NC/LICENSE ./db-%{bdbv}.NC-LICENSE\n mkdir db4 SELinux\n@@ -172,7 +172,7 @@ make %{?_smp_mflags}\n pushd SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile\n-\tmv bitcoin.pp bitcoin.pp.${selinuxvariant}\n+\tmv flow.pp flow.pp.${selinuxvariant}\n \tmake NAME=${selinuxvariant} -f %{_datadir}/selinux/devel/Makefile clean\n done\n popd\n@@ -182,42 +182,42 @@ popd\n make install DESTDIR=%{buildroot}\n \n mkdir -p -m755 %{buildroot}%{_sbindir}\n-mv %{buildroot}%{_bindir}/bitcoind %{buildroot}%{_sbindir}/bitcoind\n+mv %{buildroot}%{_bindir}/flowd %{buildroot}%{_sbindir}/flowd\n \n # systemd stuff\n mkdir -p %{buildroot}%{_tmpfilesdir}\n-cat <<EOF > %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n-d /run/bitcoind 0750 bitcoin bitcoin -\n+cat <<EOF > %{buildroot}%{_tmpfilesdir}/flow.conf\n+d /run/flowd 0750 flow flow -\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/bitcoin.conf\n+touch -a -m -t 201504280000 %{buildroot}%{_tmpfilesdir}/flow.conf\n \n mkdir -p %{buildroot}%{_sysconfdir}/sysconfig\n-cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n-# Provide options to the bitcoin daemon here, for example\n+cat <<EOF > %{buildroot}%{_sysconfdir}/sysconfig/flow\n+# Provide options to the flow daemon here, for example\n # OPTIONS=\"-testnet -disable-wallet\"\n \n OPTIONS=\"\"\n \n # System service defaults.\n # Don't change these unless you know what you're doing.\n-CONFIG_FILE=\"%{_sysconfdir}/bitcoin/bitcoin.conf\"\n-DATA_DIR=\"%{_localstatedir}/lib/bitcoin\"\n-PID_FILE=\"/run/bitcoind/bitcoind.pid\"\n+CONFIG_FILE=\"%{_sysconfdir}/flow/flow.conf\"\n+DATA_DIR=\"%{_localstatedir}/lib/flow\"\n+PID_FILE=\"/run/flowd/flowd.pid\"\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/bitcoin\n+touch -a -m -t 201504280000 %{buildroot}%{_sysconfdir}/sysconfig/flow\n \n mkdir -p %{buildroot}%{_unitdir}\n-cat <<EOF > %{buildroot}%{_unitdir}/bitcoin.service\n+cat <<EOF > %{buildroot}%{_unitdir}/flow.service\n [Unit]\n-Description=Bitcoin daemon\n+Description=Flow daemon\n After=syslog.target network.target\n \n [Service]\n Type=forking\n-ExecStart=%{_sbindir}/bitcoind -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n-EnvironmentFile=%{_sysconfdir}/sysconfig/bitcoin\n-User=bitcoin\n-Group=bitcoin\n+ExecStart=%{_sbindir}/flowd -daemon -conf=\\${CONFIG_FILE} -datadir=\\${DATA_DIR} -pid=\\${PID_FILE} \\$OPTIONS\n+EnvironmentFile=%{_sysconfdir}/sysconfig/flow\n+User=flow\n+Group=flow\n \n Restart=on-failure\n PrivateTmp=true\n@@ -229,63 +229,63 @@ StartLimitBurst=5\n [Install]\n WantedBy=multi-user.target\n EOF\n-touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/bitcoin.service\n+touch -a -m -t 201504280000 %{buildroot}%{_unitdir}/flow.service\n #end systemd stuff\n \n-mkdir %{buildroot}%{_sysconfdir}/bitcoin\n-mkdir -p %{buildroot}%{_localstatedir}/lib/bitcoin\n+mkdir %{buildroot}%{_sysconfdir}/flow\n+mkdir -p %{buildroot}%{_localstatedir}/lib/flow\n \n #SELinux\n for selinuxvariant in %{selinux_variants}; do\n \tinstall -d %{buildroot}%{_datadir}/selinux/${selinuxvariant}\n-\tinstall -p -m 644 SELinux/bitcoin.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/bitcoin.pp\n+\tinstall -p -m 644 SELinux/flow.pp.${selinuxvariant} %{buildroot}%{_datadir}/selinux/${selinuxvariant}/flow.pp\n done\n \n %if %{_buildqt}\n # qt icons\n-install -D -p share/pixmaps/bitcoin.ico %{buildroot}%{_datadir}/pixmaps/bitcoin.ico\n+install -D -p share/pixmaps/flow.ico %{buildroot}%{_datadir}/pixmaps/flow.ico\n install -p share/pixmaps/nsis-header.bmp %{buildroot}%{_datadir}/pixmaps/\n install -p share/pixmaps/nsis-wizard.bmp %{buildroot}%{_datadir}/pixmaps/\n-install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/bitcoin.svg\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin16.png -w16 -h16\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin32.png -w32 -h32\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin64.png -w64 -h64\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin128.png -w128 -h128\n-%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/bitcoin256.png -w256 -h256\n-%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin16.xpm\n-%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin32.xpm\n-%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin64.xpm\n-%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin128.xpm\n-%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/bitcoin256.png %{buildroot}%{_datadir}/pixmaps/bitcoin256.xpm\n+install -p %{SOURCE100} %{buildroot}%{_datadir}/pixmaps/flow.svg\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/flow16.png -w16 -h16\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/flow32.png -w32 -h32\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/flow64.png -w64 -h64\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/flow128.png -w128 -h128\n+%{_bindir}/inkscape %{SOURCE100} --export-png=%{buildroot}%{_datadir}/pixmaps/flow256.png -w256 -h256\n+%{_bindir}/convert -resize 16x16 %{buildroot}%{_datadir}/pixmaps/flow256.png %{buildroot}%{_datadir}/pixmaps/flow16.xpm\n+%{_bindir}/convert -resize 32x32 %{buildroot}%{_datadir}/pixmaps/flow256.png %{buildroot}%{_datadir}/pixmaps/flow32.xpm\n+%{_bindir}/convert -resize 64x64 %{buildroot}%{_datadir}/pixmaps/flow256.png %{buildroot}%{_datadir}/pixmaps/flow64.xpm\n+%{_bindir}/convert -resize 128x128 %{buildroot}%{_datadir}/pixmaps/flow256.png %{buildroot}%{_datadir}/pixmaps/flow128.xpm\n+%{_bindir}/convert %{buildroot}%{_datadir}/pixmaps/flow256.png %{buildroot}%{_datadir}/pixmaps/flow256.xpm\n touch %{buildroot}%{_datadir}/pixmaps/*.png -r %{SOURCE100}\n touch %{buildroot}%{_datadir}/pixmaps/*.xpm -r %{SOURCE100}\n \n # Desktop File - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/applications\n-cat <<EOF > %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+cat <<EOF > %{buildroot}%{_datadir}/applications/flow-core.desktop\n [Desktop Entry]\n Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n+Name=Flow\n+Comment=Flow P2P Cryptocurrency\n+Comment[fr]=Flow, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=Flow, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=flow-qt %u\n Terminal=false\n Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n+Icon=flow128\n+MimeType=x-scheme-handler/flow;\n Categories=Office;Finance;\n EOF\n # change touch date when modifying desktop\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n-%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/bitcoin-core.desktop\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/applications/flow-core.desktop\n+%{_bindir}/desktop-file-validate %{buildroot}%{_datadir}/applications/flow-core.desktop\n \n # KDE protocol - change the touch timestamp if modifying\n mkdir -p %{buildroot}%{_datadir}/kde4/services\n-cat <<EOF > %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+cat <<EOF > %{buildroot}%{_datadir}/kde4/services/flow-core.protocol\n [Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n+exec=flow-qt '%u'\n+protocol=flow\n input=none\n output=none\n helper=true\n@@ -296,58 +296,58 @@ makedir=false\n deleting=false\n EOF\n # change touch date when modifying protocol\n-touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/bitcoin-core.protocol\n+touch -a -m -t 201511100546 %{buildroot}%{_datadir}/kde4/services/flow-core.protocol\n %endif\n \n # man pages\n-install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/bitcoind.1\n-install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/bitcoin-cli.1\n+install -D -p %{SOURCE20} %{buildroot}%{_mandir}/man1/flowd.1\n+install -p %{SOURCE21} %{buildroot}%{_mandir}/man1/flow-cli.1\n %if %{_buildqt}\n-install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/bitcoin-qt.1\n+install -p %{SOURCE22} %{buildroot}%{_mandir}/man1/flow-qt.1\n %endif\n \n # nuke these, we do extensive testing of binaries in %%check before packaging\n rm -f %{buildroot}%{_bindir}/test_*\n \n %check\n make check\n-srcdir=src test/bitcoin-util-test.py\n+srcdir=src test/flow-util-test.py\n test/functional/test_runner.py --extended\n \n %post libs -p /sbin/ldconfig\n \n %postun libs -p /sbin/ldconfig\n \n %pre server\n-getent group bitcoin >/dev/null || groupadd -r bitcoin\n-getent passwd bitcoin >/dev/null ||\n-\tuseradd -r -g bitcoin -d /var/lib/bitcoin -s /sbin/nologin \\\n-\t-c \"Bitcoin wallet server\" bitcoin\n+getent group flow >/dev/null || groupadd -r flow\n+getent passwd flow >/dev/null ||\n+\tuseradd -r -g flow -d /var/lib/flow -s /sbin/nologin \\\n+\t-c \"Flow wallet server\" flow\n exit 0\n \n %post server\n-%systemd_post bitcoin.service\n+%systemd_post flow.service\n # SELinux\n if [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n for selinuxvariant in %{selinux_variants}; do\n-\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/bitcoin.pp &> /dev/null || :\n+\t%{_sbindir}/semodule -s ${selinuxvariant} -i %{_datadir}/selinux/${selinuxvariant}/flow.pp &> /dev/null || :\n done\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 8333\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18332\n-%{_sbindir}/semanage port -a -t bitcoin_port_t -p tcp 18333\n-%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin || :\n+%{_sbindir}/semanage port -a -t flow_port_t -p tcp 8332\n+%{_sbindir}/semanage port -a -t flow_port_t -p tcp 8333\n+%{_sbindir}/semanage port -a -t flow_port_t -p tcp 18332\n+%{_sbindir}/semanage port -a -t flow_port_t -p tcp 18333\n+%{_sbindir}/fixfiles -R flow-server restore &> /dev/null || :\n+%{_sbindir}/restorecon -R %{_localstatedir}/lib/flow || :\n fi\n \n %posttrans server\n %{_bindir}/systemd-tmpfiles --create\n \n %preun server\n-%systemd_preun bitcoin.service\n+%systemd_preun flow.service\n \n %postun server\n-%systemd_postun bitcoin.service\n+%systemd_postun flow.service\n # SELinux\n if [ $1 -eq 0 ]; then\n \tif [ `%{_sbindir}/sestatus |grep -c \"disabled\"` -eq 0 ]; then\n@@ -356,11 +356,11 @@ if [ $1 -eq 0 ]; then\n \t%{_sbindir}/semanage port -d -p tcp 18332\n \t%{_sbindir}/semanage port -d -p tcp 18333\n \tfor selinuxvariant in %{selinux_variants}; do\n-\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r bitcoin &> /dev/null || :\n+\t\t%{_sbindir}/semodule -s ${selinuxvariant} -r flow &> /dev/null || :\n \tdone\n-\t%{_sbindir}/fixfiles -R bitcoin-server restore &> /dev/null || :\n-\t[ -d %{_localstatedir}/lib/bitcoin ] && \\\n-\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/bitcoin &> /dev/null || :\n+\t%{_sbindir}/fixfiles -R flow-server restore &> /dev/null || :\n+\t[ -d %{_localstatedir}/lib/flow ] && \\\n+\t\t%{_sbindir}/restorecon -R %{_localstatedir}/lib/flow &> /dev/null || :\n \tfi\n fi\n \n@@ -371,16 +371,16 @@ rm -rf %{buildroot}\n %files core\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-qt\n-%attr(0644,root,root) %{_datadir}/applications/bitcoin-core.desktop\n-%attr(0644,root,root) %{_datadir}/kde4/services/bitcoin-core.protocol\n+%doc COPYING flow.conf.example doc/README.md doc/bips.md doc/files.md doc/multiwallet-qt.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_bindir}/flow-qt\n+%attr(0644,root,root) %{_datadir}/applications/flow-core.desktop\n+%attr(0644,root,root) %{_datadir}/kde4/services/flow-core.protocol\n %attr(0644,root,root) %{_datadir}/pixmaps/*.ico\n %attr(0644,root,root) %{_datadir}/pixmaps/*.bmp\n %attr(0644,root,root) %{_datadir}/pixmaps/*.svg\n %attr(0644,root,root) %{_datadir}/pixmaps/*.png\n %attr(0644,root,root) %{_datadir}/pixmaps/*.xpm\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-qt.1*\n+%attr(0644,root,root) %{_mandir}/man1/flow-qt.1*\n %endif\n \n %files libs\n@@ -402,30 +402,30 @@ rm -rf %{buildroot}\n %files server\n %defattr(-,root,root,-)\n %license COPYING db-%{bdbv}.NC-LICENSE\n-%doc COPYING bitcoin.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n-%attr(0755,root,root) %{_sbindir}/bitcoind\n-%attr(0644,root,root) %{_tmpfilesdir}/bitcoin.conf\n-%attr(0644,root,root) %{_unitdir}/bitcoin.service\n-%dir %attr(0750,bitcoin,bitcoin) %{_sysconfdir}/bitcoin\n-%dir %attr(0750,bitcoin,bitcoin) %{_localstatedir}/lib/bitcoin\n-%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/bitcoin\n+%doc COPYING flow.conf.example doc/README.md doc/REST-interface.md doc/bips.md doc/dnsseed-policy.md doc/files.md doc/reduce-traffic.md doc/release-notes.md doc/tor.md\n+%attr(0755,root,root) %{_sbindir}/flowd\n+%attr(0644,root,root) %{_tmpfilesdir}/flow.conf\n+%attr(0644,root,root) %{_unitdir}/flow.service\n+%dir %attr(0750,flow,flow) %{_sysconfdir}/flow\n+%dir %attr(0750,flow,flow) %{_localstatedir}/lib/flow\n+%config(noreplace) %attr(0600,root,root) %{_sysconfdir}/sysconfig/flow\n %attr(0644,root,root) %{_datadir}/selinux/*/*.pp\n-%attr(0644,root,root) %{_mandir}/man1/bitcoind.1*\n+%attr(0644,root,root) %{_mandir}/man1/flowd.1*\n \n %files utils\n %defattr(-,root,root,-)\n %license COPYING\n-%doc COPYING bitcoin.conf.example doc/README.md\n-%attr(0755,root,root) %{_bindir}/bitcoin-cli\n-%attr(0755,root,root) %{_bindir}/bitcoin-tx\n-%attr(0755,root,root) %{_bindir}/bench_bitcoin\n-%attr(0644,root,root) %{_mandir}/man1/bitcoin-cli.1*\n+%doc COPYING flow.conf.example doc/README.md\n+%attr(0755,root,root) %{_bindir}/flow-cli\n+%attr(0755,root,root) %{_bindir}/flow-tx\n+%attr(0755,root,root) %{_bindir}/bench_flow\n+%attr(0644,root,root) %{_mandir}/man1/flow-cli.1*\n \n \n \n %changelog\n * Fri Feb 26 2016 Alice Wonder <buildmaster@librelamp.com> - 0.12.0-2\n-- Rename Qt package from bitcoin to bitcoin-core\n+- Rename Qt package from flow to flow-core\n - Make building of the Qt package optional\n - When building the Qt package, default to Qt5 but allow building\n -  against Qt4\n@@ -435,4 +435,4 @@ rm -rf %{buildroot}\n - Initial spec file for 0.12.0 release\n \n # This spec file is written from scratch but a lot of the packaging decisions are directly\n-# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/bitcoin/\n+# based upon the 0.11.2 package spec file from https://www.ringingliberty.com/flow/",
        "previous_filename": "contrib/rpm/bitcoin.spec"
      },
      {
        "sha": "3dd61b34c59f88d562143ff68cd9c4ebd43f393d",
        "filename": "contrib/rpm/flow.te",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.te",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/rpm/flow.te",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/rpm/flow.te?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -0,0 +1,81 @@\n+policy_module(flow, 1.100.1)\n+\n+########################################\n+#\n+# Declarations\n+#\n+\n+type flow_t;\n+type flow_exec_t;\n+init_daemon_domain(flow_t, flow_exec_t)\n+\n+permissive flow_t;\n+\n+type flow_initrc_exec_t;\n+init_script_file(flow_initrc_exec_t)\n+\n+type flow_conf_t;\n+files_type(flow_conf_t)\n+\n+type flow_var_lib_t;\n+files_type(flow_var_lib_t)\n+\n+type flow_var_run_t;\n+files_type(flow_var_run_t)\n+\n+type flow_port_t;\n+corenet_port(flow_port_t)\n+\n+########################################\n+#\n+# flow local policy\n+#\n+allow flow_t self:process { fork };\n+\n+allow flow_t self:fifo_file rw_fifo_file_perms;\n+allow flow_t self:unix_stream_socket create_stream_socket_perms;\n+\n+manage_dirs_pattern(flow_t, flow_conf_t, flow_conf_t)\n+manage_files_pattern(flow_t, flow_conf_t, flow_conf_t)\n+\n+manage_dirs_pattern(flow_t, flow_var_lib_t, flow_var_lib_t)\n+manage_files_pattern(flow_t, flow_var_lib_t, flow_var_lib_t)\n+files_var_lib_filetrans(flow_t, flow_var_lib_t, { dir file })\n+\n+manage_dirs_pattern(flow_t, flow_var_run_t, flow_var_run_t)\n+manage_files_pattern(flow_t, flow_var_run_t, flow_var_run_t)\n+\n+sysnet_dns_name_resolve(flow_t)\n+corenet_all_recvfrom_unlabeled(flow_t)\n+\n+allow flow_t self:tcp_socket create_stream_socket_perms;\n+corenet_tcp_sendrecv_generic_if(flow_t)\n+corenet_tcp_sendrecv_generic_node(flow_t)\n+corenet_tcp_sendrecv_all_ports(flow_t)\n+corenet_tcp_bind_generic_node(flow_t)\n+\n+gen_require(`\n+    type flow_port_t;\n+')\n+allow flow_t flow_port_t:tcp_socket name_bind;\n+\n+gen_require(`\n+    type flow_port_t;\n+')\n+allow flow_t flow_port_t:tcp_socket name_connect;\n+\n+domain_use_interactive_fds(flow_t)\n+\n+files_read_etc_files(flow_t)\n+\n+miscfiles_read_localization(flow_t)\n+\n+sysnet_dns_name_resolve(flow_t)\n+\n+allow flow_t flow_exec_t:file execute_no_trans;\n+allow flow_t self:process setsched;\n+corecmd_exec_ls(flow_t)\n+corenet_tcp_connect_http_port(flow_t)\n+dev_read_urand(flow_t)\n+fs_getattr_xattr_fs(flow_t)\n+kernel_read_system_state(flow_t)"
      },
      {
        "sha": "784024227f562ac378843e09e16dc459a2814f0b",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -8,7 +8,7 @@ and remove old versions as necessary.\n \n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n \n-    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n+    curl -s http://flow.sipa.be/seeds.txt > seeds_main.txt\n     python3 makeseeds.py < seeds_main.txt > nodes_main.txt\n     python3 generate-seeds.py . > ../../src/chainparamsseeds.h\n "
      },
      {
        "sha": "c9f2f0318693d63bd752d951dfd0a30cd793f1e5",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -117,10 +117,10 @@ def main():\n         exit(1)\n     g = sys.stdout\n     indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#ifndef FLOW_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#define FLOW_CHAINPARAMSSEEDS_H\\n')\n     g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n+    g.write(' * List of fixed seed nodes for the flow network\\n')\n     g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n     g.write(' *\\n')\n     g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n@@ -131,7 +131,7 @@ def main():\n     g.write('\\n')\n     with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n         process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n+    g.write('#endif // FLOW_CHAINPARAMSSEEDS_H\\n')\n             \n if __name__ == '__main__':\n     main()"
      },
      {
        "sha": "9d09ef6148396981712d9875c3b22178542ff096",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2013-2017 The Bitcoin Core developers\n+# Copyright (c) 2013-2017 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n@@ -155,7 +155,7 @@ def main():\n     ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n     # Sort by availability (and use last success as tie breaker)\n     ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n+    # Filter out hosts with multiple flow ports, these are likely abusive\n     ips = filtermultiport(ips)\n     # Look up ASNs and limit results, both per ASN and globally.\n     ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)"
      },
      {
        "sha": "05f206c1e2eb47d67c823727942371197941cdb0",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n # List of fixed seed nodes for testnet\n \n # Onion nodes\n-thfsmmn2jbitcoin.onion\n+thfsmmn2jflow.onion\n it2pj4f7657g3rhi.onion\n nkf5e6b7pl4jfd4a.onion\n 4zhkir2ofl7orfom.onion"
      },
      {
        "sha": "7d751513b333cd9dea6d2e9ce28d84daec2fe38e",
        "filename": "contrib/testgen/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,6 +1,6 @@\n ### TestGen ###\n \n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n+Utilities to generate test vectors for the data-driven Flow tests.\n \n Usage: \n "
      },
      {
        "sha": "464763cf3d126eb609f4e1838168941020177830",
        "filename": "contrib/testgen/base58.py",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n-Bitcoin base58 encoding and decoding.\n+Flow base58 encoding and decoding.\n \n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n+Based on https://flowtalk.org/index.php?topic=1026.0 (public domain)\n '''\n import hashlib\n \n@@ -37,7 +37,7 @@ def b58encode(v):\n         long_value = div\n     result = __b58chars[long_value] + result\n \n-    # Bitcoin does a little leading-zero-compression:\n+    # Flow does a little leading-zero-compression:\n     # leading 0-bytes in the input become leading-1s\n     nPad = 0\n     for c in v:\n@@ -97,7 +97,7 @@ def get_bcaddress_version(strAddress):\n     return ord(version)\n \n if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n+    # Test case (from http://gitorious.org/flow/python-base58.git)\n     assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n     _ohai = 'o hai'.encode('ascii')\n     _tmp = b58encode(_ohai)"
      },
      {
        "sha": "1dc4f14c94cf8f5df47b24620f5ff827b4899bc9",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''"
      },
      {
        "sha": "ee50202c4f61b68c61247849d2aabb31444e9785",
        "filename": "contrib/tidy_datadir.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n #!/bin/bash\n-# Copyright (c) 2013 The Bitcoin Core developers\n+# Copyright (c) 2013 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n if [ -d \"$1\" ]; then\n   cd \"$1\"\n else\n   echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n+  echo \"Removes obsolete Flow database files\" >&2\n   exit 1\n fi\n \n@@ -19,22 +19,22 @@ if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/C\n \n case $LEVEL in\n   0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n+    echo \"Error: no Flow datadir detected.\"\n     exit 1\n     ;;\n   1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n+    echo \"Detected old Flow datadir (before 0.7).\"\n     echo \"Nothing to do.\"\n     exit 0\n     ;;\n   2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n+    echo \"Detected Flow 0.7 datadir.\"\n     ;;\n   3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n+    echo \"Detected Flow pre-0.8 datadir.\"\n     ;;\n   4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n+    echo \"Detected Flow 0.8 datadir.\"\n     ;;\n esac\n "
      },
      {
        "sha": "47e0e8f0c8bad3d5f39fccdd61e4eda5038ff3b4",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -8,7 +8,7 @@ VALID=false\n REVSIG=false\n IFS='\n '\n-if [ \"$BITCOIN_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n+if [ \"$FLOW_VERIFY_COMMITS_ALLOW_SHA1\" = 1 ]; then\n \tGPG_RES=\"$(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null)\"\n else\n \t# Note how we've disabled SHA1 with the --weak-digest option, disabling\n@@ -42,7 +42,7 @@ for LINE in $(echo \"$GPG_RES\"); do\n \t\tdone < ./contrib/verify-commits/trusted-keys\n \t\t;;\n \t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n+\t\t[ \"$FLOW_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n \t\tREVSIG=true\n \t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${LINE#* * *}\"\n \t\t;;"
      },
      {
        "sha": "a8db2840914b81134547a02d4dfffc65e3e62a80",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n #!/bin/bash\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n+if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)flow/flow(.git)?$ ]]; then\n     exit 0\n fi\n "
      },
      {
        "sha": "7478d4fbbab999af096b200b6c44d30a16d52d4e",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -51,15 +51,15 @@ while true; do\n \tfi\n \n \tif [ \"$NO_SHA1\" = \"1\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=0\n+\t\texport FLOW_VERIFY_COMMITS_ALLOW_SHA1=0\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_SHA1=1\n+\t\texport FLOW_VERIFY_COMMITS_ALLOW_SHA1=1\n \tfi\n \n \tif [ \"${REVSIG_ALLOWED#*$CURRENT_COMMIT}\" != \"$REVSIG_ALLOWED\" ]; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n+\t\texport FLOW_VERIFY_COMMITS_ALLOW_REVSIG=1\n \telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n+\t\texport FLOW_VERIFY_COMMITS_ALLOW_REVSIG=0\n \tfi\n \n \tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit \"$CURRENT_COMMIT\" > /dev/null; then"
      },
      {
        "sha": "81c6fde47514bc0743512e051ee431ad25526518",
        "filename": "contrib/verifybinaries/README.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verifybinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verifybinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -5,29 +5,29 @@\n Make sure you obtain the proper release signing key and verify the fingerprint with several independent sources.\n \n ```sh\n-$ gpg --fingerprint \"Bitcoin Core binary release signing key\"\n+$ gpg --fingerprint \"Flow Core binary release signing key\"\n pub   4096R/36C2E964 2015-06-24 [expires: 2017-02-13]\n       Key fingerprint = 01EA 5486 DE18 A882 D4C2  6845 90C8 019E 36C2 E964\n-uid                  Wladimir J. van der Laan (Bitcoin Core binary release signing key) <laanwj@gmail.com>\n+uid                  Wladimir J. van der Laan (Flow Core binary release signing key) <laanwj@gmail.com>\n ```\n \n #### Usage:\n \n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n+This script attempts to download the signature file `SHA256SUMS.asc` from https://flow.org.\n \n It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n \n The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n \n \n ```sh\n-./verify.sh bitcoin-core-0.11.2\n-./verify.sh bitcoin-core-0.12.0\n-./verify.sh bitcoin-core-0.13.0-rc3\n+./verify.sh flow-core-0.11.2\n+./verify.sh flow-core-0.12.0\n+./verify.sh flow-core-0.13.0-rc3\n ```\n \n If you do not want to keep the downloaded binaries, specify anything as the second parameter.\n \n ```sh\n-./verify.sh bitcoin-core-0.13.0 delete\n+./verify.sh flow-core-0.13.0 delete\n ```"
      },
      {
        "sha": "e9b894ea4d4c15e3ccf82d932ac350afb7916986",
        "filename": "contrib/verifybinaries/verify.sh",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verifybinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/verifybinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifybinaries/verify.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n #!/bin/bash\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n+###   This script attempts to download the signature file SHA256SUMS.asc from flow.org\n ###   It first checks if the signature passes, and then downloads the files specified in\n ###   the file, and checks if the hashes of these files match those that are specified\n ###   in the signature file.\n@@ -17,13 +17,13 @@ function clean_up {\n    done\n }\n \n-WORKINGDIR=\"/tmp/bitcoin_verify_binaries\"\n+WORKINGDIR=\"/tmp/flow_verify_binaries\"\n TMPFILE=\"hashes.tmp\"\n \n SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n RCSUBDIR=\"test\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n+BASEDIR=\"https://flow.org/bin/\"\n+VERSIONPREFIX=\"flow-core-\"\n RCVERSIONSTRING=\"rc\"\n \n if [ ! -d \"$WORKINGDIR\" ]; then\n@@ -34,7 +34,7 @@ cd \"$WORKINGDIR\"\n \n #test if a version number has been passed as an argument\n if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n+   #let's also check if the version number includes the prefix 'flow-',\n    #  and add this prefix if it doesn't\n    if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n       VERSION=\"$1\"\n@@ -83,7 +83,7 @@ if [ $RET -ne 0 ]; then\n       echo \"Bad signature.\"\n    elif [ $RET -eq 2 ]; then\n       #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n+      echo \"gpg error. Do you have the Flow Core binary release signing key installed?\"\n    fi\n \n    echo \"gpg output:\""
      },
      {
        "sha": "567c112a1bb081d928f7fad0caa82f05f87e526b",
        "filename": "contrib/windeploy/detached-sig-create.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/windeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/windeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/windeploy/detached-sig-create.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2014-2015 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "f45ccaadbccba0eaf7f52899c60d8f31550dbaba",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n \"\"\"\n     ZMQ example using python3's asyncio\n \n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n+    Flow should be started with the command line arguments:\n+        flowd -testnet -daemon \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n@@ -19,7 +19,7 @@\n     alternative is to wrap the contents of `handle` inside `while True`.\n \n     A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+    https://github.com/flow/flow/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n \"\"\"\n \n import binascii"
      },
      {
        "sha": "077587e676fed1cb84fadc53b31ddc87f0f6b258",
        "filename": "contrib/zmq/zmq_sub3.4.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/contrib/zmq/zmq_sub3.4.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/contrib/zmq/zmq_sub3.4.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub3.4.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n #!/usr/bin/env python3\n-# Copyright (c) 2014-2016 The Bitcoin Core developers\n+# Copyright (c) 2014-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n \"\"\"\n     ZMQ example using python3's asyncio\n \n-    Bitcoin should be started with the command line arguments:\n-        bitcoind -testnet -daemon \\\n+    Flow should be started with the command line arguments:\n+        flowd -testnet -daemon \\\n                 -zmqpubhashblock=tcp://127.0.0.1:28332 \\\n                 -zmqpubrawtx=tcp://127.0.0.1:28332 \\\n                 -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n@@ -23,7 +23,7 @@\n     and `await` keywords respectively.\n \n     A blocking example using python 2.7 can be obtained from the git history:\n-    https://github.com/bitcoin/bitcoin/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n+    https://github.com/flow/flow/blob/37a7fe9e440b83e2364d5498931253937abe9294/contrib/zmq/zmq_sub.py\n \"\"\"\n \n import binascii"
      },
      {
        "sha": "fa12e7c538a1d699739d77c2a06bd9deada5a270",
        "filename": "depends/Makefile",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -6,7 +6,7 @@ SDK_PATH ?= $(BASEDIR)/SDKs\n NO_QT ?=\n NO_WALLET ?=\n NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n+FALLBACK_DOWNLOAD_PATH ?= https://flowcore.org/depends-sources\n \n BUILD = $(shell ./config.guess)\n HOST ?= $(BUILD)"
      },
      {
        "sha": "a17ed7d0a37c78eaeb8c818561add633f26cd78d",
        "filename": "depends/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -12,9 +12,9 @@ For example:\n \n     make HOST=x86_64-w64-mingw32 -j4\n \n-A prefix will be generated that's suitable for plugging into Bitcoin's\n+A prefix will be generated that's suitable for plugging into Flow's\n configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n+created. To use it for Flow:\n \n     ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n \n@@ -43,7 +43,7 @@ The following can be set when running make: make FOO=bar\n     BUILD_ID_SALT: Optional salt to use when generating build package ids\n \n If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n+options will be passed to flow's configure. In this case, `--disable-wallet`.\n \n Additional targets:\n "
      },
      {
        "sha": "633433f9f787b1cce3aa0f74348d86f84dd3c073",
        "filename": "depends/description.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n+This is a system of building and caching dependencies necessary for building Flow. \n There are several features that make it different from most similar systems:\n \n ### It is designed to be builder and host agnostic"
      },
      {
        "sha": "95243845fb37ecd3149dc4f8710bc51780659f90",
        "filename": "doc/Doxyfile.in",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/Doxyfile.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/Doxyfile.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile.in?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -32,7 +32,7 @@ DOXYFILE_ENCODING      = UTF-8\n # title of most generated pages and in a few other places.\n # The default value is: My Project.\n \n-PROJECT_NAME           = \"Bitcoin Core\"\n+PROJECT_NAME           = \"Flow Core\"\n \n # The PROJECT_NUMBER tag can be used to enter a project or revision number. This\n # could be handy for archiving the generated documentation or if some version\n@@ -51,7 +51,7 @@ PROJECT_BRIEF          = \"P2P Digital Currency\"\n # pixels and the maximum width should not exceed 200 pixels. Doxygen will copy\n # the logo to the output directory.\n \n-PROJECT_LOGO           = doc/bitcoin_logo_doxygen.png\n+PROJECT_LOGO           = doc/flow_logo_doxygen.png\n \n # The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) path\n # into which the generated documentation will be written. If a relative path is\n@@ -1265,15 +1265,15 @@ DOCSET_FEEDNAME        = \"Doxygen generated docs\"\n # The default value is: org.doxygen.Project.\n # This tag requires that the tag GENERATE_DOCSET is set to YES.\n \n-DOCSET_BUNDLE_ID       = org.bitcoin.Bitcoin-Core\n+DOCSET_BUNDLE_ID       = org.flow.Flow-Core\n \n # The DOCSET_PUBLISHER_ID tag specifies a string that should uniquely identify\n # the documentation publisher. This should be a reverse domain-name style\n # string, e.g. com.mycompany.MyDocSet.documentation.\n # The default value is: org.doxygen.Publisher.\n # This tag requires that the tag GENERATE_DOCSET is set to YES.\n \n-DOCSET_PUBLISHER_ID    = org.bitcoin.Bitcoin-Core\n+DOCSET_PUBLISHER_ID    = org.flow.Flow-Core\n \n # The DOCSET_PUBLISHER_NAME tag identifies the documentation publisher.\n # The default value is: Publisher."
      },
      {
        "sha": "417e0ecf69326db2a65046b4ead3f55f41b428e8",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,41 +1,41 @@\n-Bitcoin Core\n+Flow Core\n =============\n \n Setup\n ---------------------\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Bitcoin transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n+Flow Core is the original Flow client and it builds the backbone of the network. It downloads and, by default, stores the entire history of Flow transactions (which is currently more than 100 GBs); depending on the speed of your computer and network connection, the synchronization process can take anywhere from a few hours to a day or more.\n \n-To download Bitcoin Core, visit [bitcoincore.org](https://bitcoincore.org/en/releases/).\n+To download Flow Core, visit [flowcore.org](https://flowcore.org/en/releases/).\n \n Running\n ---------------------\n-The following are some helpful notes on how to run Bitcoin on your native platform.\n+The following are some helpful notes on how to run Flow on your native platform.\n \n ### Unix\n \n Unpack the files into a directory and run:\n \n-- `bin/bitcoin-qt` (GUI) or\n-- `bin/bitcoind` (headless)\n+- `bin/flow-qt` (GUI) or\n+- `bin/flowd` (headless)\n \n ### Windows\n \n-Unpack the files into a directory, and then run bitcoin-qt.exe.\n+Unpack the files into a directory, and then run flow-qt.exe.\n \n ### OS X\n \n-Drag Bitcoin-Core to your applications folder, and then run Bitcoin-Core.\n+Drag Flow-Core to your applications folder, and then run Flow-Core.\n \n ### Need Help?\n \n-* See the documentation at the [Bitcoin Wiki](https://en.bitcoin.it/wiki/Main_Page)\n+* See the documentation at the [Flow Wiki](https://en.flow.it/wiki/Main_Page)\n for help and more information.\n-* Ask for help on [#bitcoin](http://webchat.freenode.net?channels=bitcoin) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=bitcoin).\n-* Ask for help on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Technical Support board](https://bitcointalk.org/index.php?board=4.0).\n+* Ask for help on [#flow](http://webchat.freenode.net?channels=flow) on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net?channels=flow).\n+* Ask for help on the [FlowTalk](https://flowtalk.org/) forums, in the [Technical Support board](https://flowtalk.org/index.php?board=4.0).\n \n Building\n ---------------------\n-The following are developer notes on how to build Bitcoin on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n+The following are developer notes on how to build Flow on your native platform. They are not complete guides, but include notes on the necessary libraries, compile flags, etc.\n \n - [OS X Build Notes](build-osx.md)\n - [Unix Build Notes](build-unix.md)\n@@ -45,12 +45,12 @@ The following are developer notes on how to build Bitcoin on your native platfor\n \n Development\n ---------------------\n-The Bitcoin repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n+The Flow repo's [root README](/README.md) contains relevant information on the development process and automated testing.\n \n - [Developer Notes](developer-notes.md)\n - [Release Notes](release-notes.md)\n - [Release Process](release-process.md)\n-- [Source Code Documentation (External Link)](https://dev.visucore.com/bitcoin/doxygen/)\n+- [Source Code Documentation (External Link)](https://dev.visucore.com/flow/doxygen/)\n - [Translation Process](translation_process.md)\n - [Translation Strings Policy](translation_strings_policy.md)\n - [Travis CI](travis-ci.md)\n@@ -61,9 +61,9 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Benchmarking](benchmarking.md)\n \n ### Resources\n-* Discuss on the [BitcoinTalk](https://bitcointalk.org/) forums, in the [Development & Technical Discussion board](https://bitcointalk.org/index.php?board=6.0).\n-* Discuss project-specific development on #bitcoin-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-core-dev).\n-* Discuss general Bitcoin development on #bitcoin-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=bitcoin-dev).\n+* Discuss on the [FlowTalk](https://flowtalk.org/) forums, in the [Development & Technical Discussion board](https://flowtalk.org/index.php?board=6.0).\n+* Discuss project-specific development on #flow-core-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=flow-core-dev).\n+* Discuss general Flow development on #flow-dev on Freenode. If you don't have an IRC client use [webchat here](http://webchat.freenode.net/?channels=flow-dev).\n \n ### Miscellaneous\n - [Assets Attribution](assets-attribution.md)"
      },
      {
        "sha": "d00a269794f4eeaf872f4954279f04909781f89d",
        "filename": "doc/README_osx.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/README_osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/README_osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -92,6 +92,6 @@ build process to remain somewhat deterministic. Here's how it works:\n   that have been previously (deterministically) built in order to create a\n   final dmg.\n - The Apple keyholder uses this unsigned app to create a detached signature,\n-  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/bitcoin-core/bitcoin-detached-sigs).\n+  using the script that is also included there. Detached signatures are available from this [repository](https://github.com/flow-core/flow-detached-sigs).\n - Builders feed the unsigned app + detached signature back into Gitian. It\n   uses the pre-built tools to recombine the pieces into a deterministic dmg."
      },
      {
        "sha": "9794b74df7f252a8dbd46620f209ee48516a7cff",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin Core\r\n+Flow Core\r\n =============\r\n \r\n Intro\r\n -----\r\n-Bitcoin is a free open source peer-to-peer electronic cash system that is\r\n+Flow is a free open source peer-to-peer electronic cash system that is\r\n completely decentralized, without the need for a central server or trusted\r\n parties.  Users hold the crypto keys to their own money and transact directly\r\n with each other, with the help of a P2P network to check for double-spending.\r\n \r\n \r\n Setup\r\n -----\r\n-Unpack the files into a directory and run bitcoin-qt.exe.\r\n+Unpack the files into a directory and run flow-qt.exe.\r\n \r\n-Bitcoin Core is the original Bitcoin client and it builds the backbone of the network.\r\n-However, it downloads and stores the entire history of Bitcoin transactions;\r\n+Flow Core is the original Flow client and it builds the backbone of the network.\r\n+However, it downloads and stores the entire history of Flow transactions;\r\n depending on the speed of your computer and network connection, the synchronization\r\n process can take anywhere from a few hours to a day or more.\r\n \r\n-See the bitcoin wiki at:\r\n-  https://en.bitcoin.it/wiki/Main_Page\r\n+See the flow wiki at:\r\n+  https://en.flow.it/wiki/Main_Page\r\n for more help and information.\r"
      },
      {
        "sha": "2338918bfcecc227d38350ad41e296bb9d3e786d",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -51,7 +51,7 @@ Only supports JSON as output format.\n \n The getutxo command allows querying of the UTXO set given a set of outpoints.\n See BIP64 for input and output serialisation:\n-https://github.com/bitcoin/bips/blob/master/bip-0064.mediawiki\n+https://github.com/flow/bips/blob/master/bip-0064.mediawiki\n \n Example:\n ```\n@@ -95,4 +95,4 @@ Only supports JSON as output format.\n \n Risks\n -------------\n-Running a web browser on the same node with a REST enabled bitcoind can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy.\n+Running a web browser on the same node with a REST enabled flowd can be a risk. Accessing prepared XSS websites could read out tx/block data of your node by placing links like `<script src=\"http://127.0.0.1:8332/rest/tx/1234567890.json\">` which might break the nodes privacy."
      },
      {
        "sha": "216893bb89995cd03117fe6ba391cb30b1b9d994",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1 +1 @@\n-The list of assets used in the bitcoin source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright).\n+The list of assets used in the flow source and their attribution can now be found in [contrib/debian/copyright](../contrib/debian/copyright)."
      },
      {
        "sha": "fa2eda7c68f244dbfcc6455c98baffefb599a171",
        "filename": "doc/benchmarking.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/benchmarking.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/benchmarking.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/benchmarking.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n Benchmarking\n ============\n \n-Bitcoin Core has an internal benchmarking framework, with benchmarks\n+Flow Core has an internal benchmarking framework, with benchmarks\n for cryptographic algorithms such as SHA1, SHA256, SHA512 and RIPEMD160. As well as the rolling bloom filter.\n \n-After compiling bitcoin-core, the benchmarks can be run with:\n-`src/bench/bench_bitcoin`\n+After compiling flow-core, the benchmarks can be run with:\n+`src/bench/bench_flow`\n \n The output will look similar to:\n ```"
      },
      {
        "sha": "0cf93f416f0bd0f1684c1dd3fc0b60a62eceefd3",
        "filename": "doc/bips.md",
        "status": "modified",
        "additions": 34,
        "deletions": 34,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,35 +1,35 @@\n-BIPs that are implemented by Bitcoin Core (up-to-date up to **v0.13.0**):\n+BIPs that are implemented by Flow Core (up-to-date up to **v0.13.0**):\n \n-* [`BIP 9`](https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/bitcoin/bitcoin/pull/7575))\n-* [`BIP 11`](https://github.com/bitcoin/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 13`](https://github.com/bitcoin/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 14`](https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/bitcoin/bitcoin/pull/669)).\n-* [`BIP 16`](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/bitcoin/bitcoin/pull/748)).\n-* [`BIP 21`](https://github.com/bitcoin/bips/blob/master/bip-0021.mediawiki): The URI format for Bitcoin payments has been implemented since **v0.6.0** ([PR #176](https://github.com/bitcoin/bitcoin/pull/176)).\n-* [`BIP 22`](https://github.com/bitcoin/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/bitcoin/bitcoin/pull/936)).\n-* [`BIP 23`](https://github.com/bitcoin/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/bitcoin/bitcoin/pull/1816)).\n-* [`BIP 30`](https://github.com/bitcoin/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/bitcoin/bitcoin/pull/915)).\n-* [`BIP 31`](https://github.com/bitcoin/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/bitcoin/bitcoin/pull/1081)).\n-* [`BIP 32`](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/bitcoin/bitcoin/pull/8035)).\n-* [`BIP 34`](https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/bitcoin/bitcoin/pull/1526)).\n-* [`BIP 35`](https://github.com/bitcoin/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/bitcoin/bitcoin/pull/1641)).\n-* [`BIP 37`](https://github.com/bitcoin/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/bitcoin/bitcoin/pull/1795)).\n-* [`BIP 42`](https://github.com/bitcoin/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/bitcoin/bitcoin/pull/3842)).\n-* [`BIP 61`](https://github.com/bitcoin/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/bitcoin/bitcoin/pull/3185)).\n-* [`BIP 65`](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/bitcoin/bitcoin/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/bitcoin/bitcoin/pull/6124).\n-* [`BIP 66`](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/bitcoin/bitcoin/pull/5713)).\n-* [`BIP 68`](https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/bitcoin/bitcoin/pull/7184)), and have been activated since *block 419328*.\n-* [`BIP 70`](https://github.com/bitcoin/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/bitcoin/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/bitcoin/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Bitcoin Core GUI since **v0.9.0** ([PR #5216](https://github.com/bitcoin/bitcoin/pull/5216)).\n-* [`BIP 90`](https://github.com/bitcoin/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/bitcoin/bitcoin/pull/8391)).\n-* [`BIP 111`](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/bitcoin/bitcoin/pull/6579) and [PR #6641](https://github.com/bitcoin/bitcoin/pull/6641)).\n-* [`BIP 112`](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/bitcoin/bitcoin/pull/7524)) and has been activated since *block 419328*.\n-* [`BIP 113`](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/bitcoin/bitcoin/pull/6566)) and have been activated since *block 419328*.\n-* [`BIP 125`](https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/bitcoin/bitcoin/pull/6871)).\n-* [`BIP 130`](https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/bitcoin/bitcoin/pull/6494)).\n-* [`BIP 133`](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/bitcoin/bitcoin/pull/7542)).\n-* [`BIP 141`](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 143`](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 144`](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 145`](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/bitcoin/bitcoin/pull/8149)).\n-* [`BIP 147`](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/bitcoin/bitcoin/pull/8636) and [PR 8937](https://github.com/bitcoin/bitcoin/pull/8937)).\n-* [`BIP 152`](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/bitcoin/bitcoin/pull/8068)).\n+* [`BIP 9`](https://github.com/flow/bips/blob/master/bip-0009.mediawiki): The changes allowing multiple soft-forks to be deployed in parallel have been implemented since **v0.12.1**  ([PR #7575](https://github.com/flow/flow/pull/7575))\n+* [`BIP 11`](https://github.com/flow/bips/blob/master/bip-0011.mediawiki): Multisig outputs are standard since **v0.6.0** ([PR #669](https://github.com/flow/flow/pull/669)).\n+* [`BIP 13`](https://github.com/flow/bips/blob/master/bip-0013.mediawiki): The address format for P2SH addresses has been implemented since **v0.6.0** ([PR #669](https://github.com/flow/flow/pull/669)).\n+* [`BIP 14`](https://github.com/flow/bips/blob/master/bip-0014.mediawiki): The subversion string is being used as User Agent since **v0.6.0** ([PR #669](https://github.com/flow/flow/pull/669)).\n+* [`BIP 16`](https://github.com/flow/bips/blob/master/bip-0016.mediawiki): The pay-to-script-hash evaluation rules have been implemented since **v0.6.0**, and took effect on *April 1st 2012* ([PR #748](https://github.com/flow/flow/pull/748)).\n+* [`BIP 21`](https://github.com/flow/bips/blob/master/bip-0021.mediawiki): The URI format for Flow payments has been implemented since **v0.6.0** ([PR #176](https://github.com/flow/flow/pull/176)).\n+* [`BIP 22`](https://github.com/flow/bips/blob/master/bip-0022.mediawiki): The 'getblocktemplate' (GBT) RPC protocol for mining has been implemented since **v0.7.0** ([PR #936](https://github.com/flow/flow/pull/936)).\n+* [`BIP 23`](https://github.com/flow/bips/blob/master/bip-0023.mediawiki): Some extensions to GBT have been implemented since **v0.10.0rc1**, including longpolling and block proposals ([PR #1816](https://github.com/flow/flow/pull/1816)).\n+* [`BIP 30`](https://github.com/flow/bips/blob/master/bip-0030.mediawiki): The evaluation rules to forbid creating new transactions with the same txid as previous not-fully-spent transactions were implemented since **v0.6.0**, and the rule took effect on *March 15th 2012* ([PR #915](https://github.com/flow/flow/pull/915)).\n+* [`BIP 31`](https://github.com/flow/bips/blob/master/bip-0031.mediawiki): The 'pong' protocol message (and the protocol version bump to 60001) has been implemented since **v0.6.1** ([PR #1081](https://github.com/flow/flow/pull/1081)).\n+* [`BIP 32`](https://github.com/flow/bips/blob/master/bip-0032.mediawiki): Hierarchical Deterministic Wallets has been implemented since **v0.13.0** ([PR #8035](https://github.com/flow/flow/pull/8035)).\n+* [`BIP 34`](https://github.com/flow/bips/blob/master/bip-0034.mediawiki): The rule that requires blocks to contain their height (number) in the coinbase input, and the introduction of version 2 blocks has been implemented since **v0.7.0**. The rule took effect for version 2 blocks as of *block 224413* (March 5th 2013), and version 1 blocks are no longer allowed since *block 227931* (March 25th 2013) ([PR #1526](https://github.com/flow/flow/pull/1526)).\n+* [`BIP 35`](https://github.com/flow/bips/blob/master/bip-0035.mediawiki): The 'mempool' protocol message (and the protocol version bump to 60002) has been implemented since **v0.7.0** ([PR #1641](https://github.com/flow/flow/pull/1641)).\n+* [`BIP 37`](https://github.com/flow/bips/blob/master/bip-0037.mediawiki): The bloom filtering for transaction relaying, partial merkle trees for blocks, and the protocol version bump to 70001 (enabling low-bandwidth SPV clients) has been implemented since **v0.8.0** ([PR #1795](https://github.com/flow/flow/pull/1795)).\n+* [`BIP 42`](https://github.com/flow/bips/blob/master/bip-0042.mediawiki): The bug that would have caused the subsidy schedule to resume after block 13440000 was fixed in **v0.9.2** ([PR #3842](https://github.com/flow/flow/pull/3842)).\n+* [`BIP 61`](https://github.com/flow/bips/blob/master/bip-0061.mediawiki): The 'reject' protocol message (and the protocol version bump to 70002) was added in **v0.9.0** ([PR #3185](https://github.com/flow/flow/pull/3185)).\n+* [`BIP 65`](https://github.com/flow/bips/blob/master/bip-0065.mediawiki): The CHECKLOCKTIMEVERIFY softfork was merged in **v0.12.0** ([PR #6351](https://github.com/flow/flow/pull/6351)), and backported to **v0.11.2** and **v0.10.4**. Mempool-only CLTV was added in [PR #6124](https://github.com/flow/flow/pull/6124).\n+* [`BIP 66`](https://github.com/flow/bips/blob/master/bip-0066.mediawiki): The strict DER rules and associated version 3 blocks have been implemented since **v0.10.0** ([PR #5713](https://github.com/flow/flow/pull/5713)).\n+* [`BIP 68`](https://github.com/flow/bips/blob/master/bip-0068.mediawiki): Sequence locks have been implemented as of **v0.12.1**  ([PR #7184](https://github.com/flow/flow/pull/7184)), and have been activated since *block 419328*.\n+* [`BIP 70`](https://github.com/flow/bips/blob/master/bip-0070.mediawiki) [`71`](https://github.com/flow/bips/blob/master/bip-0071.mediawiki) [`72`](https://github.com/flow/bips/blob/master/bip-0072.mediawiki): Payment Protocol support has been available in Flow Core GUI since **v0.9.0** ([PR #5216](https://github.com/flow/flow/pull/5216)).\n+* [`BIP 90`](https://github.com/flow/bips/blob/master/bip-0090.mediawiki): Trigger mechanism for activation of BIPs 34, 65, and 66 has been simplified to block height checks since **v0.14.0** ([PR #8391](https://github.com/flow/flow/pull/8391)).\n+* [`BIP 111`](https://github.com/flow/bips/blob/master/bip-0111.mediawiki): `NODE_BLOOM` service bit added, and enforced for all peer versions as of **v0.13.0** ([PR #6579](https://github.com/flow/flow/pull/6579) and [PR #6641](https://github.com/flow/flow/pull/6641)).\n+* [`BIP 112`](https://github.com/flow/bips/blob/master/bip-0112.mediawiki): The CHECKSEQUENCEVERIFY opcode has been implemented since **v0.12.1** ([PR #7524](https://github.com/flow/flow/pull/7524)) and has been activated since *block 419328*.\n+* [`BIP 113`](https://github.com/flow/bips/blob/master/bip-0113.mediawiki): Median time past lock-time calculations have been implemented since **v0.12.1** ([PR #6566](https://github.com/flow/flow/pull/6566)) and have been activated since *block 419328*.\n+* [`BIP 125`](https://github.com/flow/bips/blob/master/bip-0125.mediawiki): Opt-in full replace-by-fee signaling honoured in mempool and mining as of **v0.12.0** ([PR 6871](https://github.com/flow/flow/pull/6871)).\n+* [`BIP 130`](https://github.com/flow/bips/blob/master/bip-0130.mediawiki): direct headers announcement is negotiated with peer versions `>=70012` as of **v0.12.0** ([PR 6494](https://github.com/flow/flow/pull/6494)).\n+* [`BIP 133`](https://github.com/flow/bips/blob/master/bip-0133.mediawiki): feefilter messages are respected and sent for peer versions `>=70013` as of **v0.13.0** ([PR 7542](https://github.com/flow/flow/pull/7542)).\n+* [`BIP 141`](https://github.com/flow/bips/blob/master/bip-0141.mediawiki): Segregated Witness (Consensus Layer) as of **v0.13.0** ([PR 8149](https://github.com/flow/flow/pull/8149)), and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/flow/flow/pull/8937)).\n+* [`BIP 143`](https://github.com/flow/bips/blob/master/bip-0143.mediawiki): Transaction Signature Verification for Version 0 Witness Program as of **v0.13.0** ([PR 8149](https://github.com/flow/flow/pull/8149)) and defined for mainnet as of **v0.13.1** ([PR 8937](https://github.com/flow/flow/pull/8937)).\n+* [`BIP 144`](https://github.com/flow/bips/blob/master/bip-0144.mediawiki): Segregated Witness as of **0.13.0** ([PR 8149](https://github.com/flow/flow/pull/8149)).\n+* [`BIP 145`](https://github.com/flow/bips/blob/master/bip-0145.mediawiki): getblocktemplate updates for Segregated Witness as of **v0.13.0** ([PR 8149](https://github.com/flow/flow/pull/8149)).\n+* [`BIP 147`](https://github.com/flow/bips/blob/master/bip-0147.mediawiki): NULLDUMMY softfork as of **v0.13.1** ([PR 8636](https://github.com/flow/flow/pull/8636) and [PR 8937](https://github.com/flow/flow/pull/8937)).\n+* [`BIP 152`](https://github.com/flow/bips/blob/master/bip-0152.mediawiki): Compact block transfer and related optimizations are used as of **v0.13.0** ([PR 8068](https://github.com/flow/flow/pull/8068))."
      },
      {
        "sha": "745aaaa8860825dbe9b83a4cba6cfe13418489c8",
        "filename": "doc/build-openbsd.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -2,7 +2,7 @@ OpenBSD build guide\n ======================\n (updated for OpenBSD 6.0)\n \n-This guide describes how to build bitcoind and command-line utilities on OpenBSD.\n+This guide describes how to build flowd and command-line utilities on OpenBSD.\n \n As OpenBSD is most common as a server OS, we will not bother with the GUI.\n \n@@ -18,7 +18,7 @@ pkg_add automake # (select highest version, e.g. 1.15)\n pkg_add python # (select highest version, e.g. 3.5)\n ```\n \n-The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Bitcoin Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n+The default C++ compiler that comes with OpenBSD 5.9 is g++ 4.2. This version is old (from 2007), and is not able to compile the current version of Flow Core, primarily as it has no C++11 support, but even before there were issues. So here we will be installing a newer compiler.\n \n GCC\n -------\n@@ -35,16 +35,16 @@ This compiler will not overwrite the system compiler, it will be installed as `e\n \n Do not use `pkg_add boost`! The boost version installed thus is compiled using the `g++` compiler not `eg++`, which will result in a conflict between `/usr/local/lib/libestdc++.so.XX.0` and `/usr/lib/libstdc++.so.XX.0`, resulting in a test crash:\n \n-    test_bitcoin:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n+    test_flow:/usr/lib/libstdc++.so.57.0: /usr/local/lib/libestdc++.so.17.0 : WARNING: symbol(_ZN11__gnu_debug17_S_debug_me ssagesE) size mismatch, relink your program\n     ...\n     Segmentation fault (core dumped)\n \n-This makes it necessary to build boost, or at least the parts used by Bitcoin Core, manually:\n+This makes it necessary to build boost, or at least the parts used by Flow Core, manually:\n \n ```\n-# Pick some path to install boost to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BOOST_PREFIX=\"${BITCOIN_ROOT}/boost\"\n+# Pick some path to install boost to, here we create a directory within the flow directory\n+FLOW_ROOT=$(pwd)\n+BOOST_PREFIX=\"${FLOW_ROOT}/boost\"\n mkdir -p $BOOST_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -58,7 +58,7 @@ cd boost_1_61_0\n # Also here: https://gist.githubusercontent.com/laanwj/bf359281dc319b8ff2e1/raw/92250de8404b97bb99d72ab898f4a8cb35ae1ea3/patch-boost_test_impl_execution_monitor_ipp.patch\n patch -p0 < /usr/ports/devel/boost/patches/patch-boost_test_impl_execution_monitor_ipp\n \n-# Build w/ minimum configuration necessary for bitcoin\n+# Build w/ minimum configuration necessary for flow\n echo 'using gcc : : eg++ : <cxxflags>\"-fvisibility=hidden -fPIC\" <linkflags>\"\" <archiver>\"ar\" <striper>\"strip\"  <ranlib>\"ranlib\" <rc>\"\" : ;' > user-config.jam\n config_opts=\"runtime-link=shared threadapi=pthread threading=multi link=static variant=release --layout=tagged --build-type=complete --user-config=user-config.jam -sNO_BZIP2=1\"\n ./bootstrap.sh --without-icu --with-libraries=chrono,filesystem,program_options,system,thread,test\n@@ -74,9 +74,9 @@ See \"Berkeley DB\" in [build_unix.md](build_unix.md) for instructions on how to b\n You cannot use the BerkeleyDB library from ports, for the same reason as boost above (g++/libstd++ incompatibility).\n \n ```bash\n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BITCOIN_ROOT=$(pwd)\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the flow directory\n+FLOW_ROOT=$(pwd)\n+BDB_PREFIX=\"${FLOW_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -99,7 +99,7 @@ The standard ulimit restrictions in OpenBSD are very strict:\n     data(kbytes)         1572864\n \n This is, unfortunately, no longer enough to compile some `.cpp` files in the project,\n-at least with gcc 4.9.3 (see issue https://github.com/bitcoin/bitcoin/issues/6658).\n+at least with gcc 4.9.3 (see issue https://github.com/flow/flow/issues/6658).\n If your user is in the `staff` group the limit can be raised with:\n \n     ulimit -d 3000000\n@@ -108,7 +108,7 @@ The change will only affect the current shell and processes spawned by it. To\n make the change system-wide, change `datasize-cur` and `datasize-max` in\n `/etc/login.conf`, and reboot.\n \n-### Building Bitcoin Core\n+### Building Flow Core\n \n **Important**: use `gmake`, not `make`. The non-GNU `make` will exit with a horrible error.\n \n@@ -163,9 +163,9 @@ gmake\n However, this does not appear to work. Compilation succeeds, but link fails\n with many 'local symbol discarded' errors:\n \n-    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n-    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libbitcoin_util.a(libbitcoin_util_a-random.o)\n+    local symbol 150: discarded in section `.text._ZN10tinyformat6detail14FormatIterator6finishEv' from libflow_util.a(libflow_util_a-random.o)\n+    local symbol 151: discarded in section `.text._ZN10tinyformat6detail14FormatIterator21streamStateFromFormatERSoRjPKcii' from libflow_util.a(libflow_util_a-random.o)\n+    local symbol 152: discarded in section `.text._ZN10tinyformat6detail12convertToIntIA13_cLb0EE6invokeERA13_Kc' from libflow_util.a(libflow_util_a-random.o)\n \n According to similar reported errors this is a binutils (ld) issue in 2.15, the\n version installed by OpenBSD 5.7:"
      },
      {
        "sha": "de749ba7eb7caa66861c7ccf53603805deae5a59",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -24,17 +24,17 @@ If you want to build the disk image with `make deploy` (.dmg / optional), you ne\n \n NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-Build Bitcoin Core\n+Build Flow Core\n ------------------------\n \n-1. Clone the bitcoin source code and cd into `bitcoin`\n+1. Clone the flow source code and cd into `flow`\n \n-        git clone https://github.com/bitcoin/bitcoin\n-        cd bitcoin\n+        git clone https://github.com/flow/flow\n+        cd flow\n \n-2.  Build bitcoin-core:\n+2.  Build flow-core:\n \n-    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+    Configure and build the headless flow binaries as well as the GUI (if Qt is found).\n \n     You can disable the GUI build by passing `--without-gui` to configure.\n \n@@ -53,37 +53,37 @@ Build Bitcoin Core\n Running\n -------\n \n-Bitcoin Core is now available at `./src/bitcoind`\n+Flow Core is now available at `./src/flowd`\n \n Before running, it's recommended you create an RPC configuration file.\n \n-    echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    echo -e \"rpcuser=flowrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Flow/flow.conf\"\n \n-    chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+    chmod 600 \"/Users/${USER}/Library/Application Support/Flow/flow.conf\"\n \n-The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+The first time you run flowd, it will start downloading the blockchain. This process could take several hours.\n \n You can monitor the download process by looking at the debug.log file:\n \n-    tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n+    tail -f $HOME/Library/Application\\ Support/Flow/debug.log\n \n Other commands:\n -------\n \n-    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n-    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n-    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+    ./src/flowd -daemon # Starts the flow daemon.\n+    ./src/flow-cli --help # Outputs a list of command-line options.\n+    ./src/flow-cli help # Outputs a list of RPC commands when the daemon is running.\n \n Using Qt Creator as IDE\n ------------------------\n-You can use Qt Creator as an IDE, for bitcoin development.\n+You can use Qt Creator as an IDE, for flow development.\n Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n Uncheck everything except Qt Creator during the installation process.\n \n 1. Make sure you installed everything through Homebrew mentioned above\n 2. Do a proper ./configure --enable-debug\n 3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+4. Enter \"flow-qt\" as project name, enter src/qt as location\n 5. Leave the file selection as it is\n 6. Confirm the \"summary page\"\n 7. In the \"Projects\" tab select \"Manage Kits...\"\n@@ -96,4 +96,4 @@ Notes\n \n * Tested on OS X 10.8 through 10.12 on 64-bit Intel processors only.\n \n-* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)\n+* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/flow/flow/issues/7714)"
      },
      {
        "sha": "ae5d1f90f42a7e70dc1aaec29fab67f035dbb6e7",
        "filename": "doc/build-unix.md",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n UNIX BUILD NOTES\n ====================\n-Some notes on how to build Bitcoin Core in Unix.\n+Some notes on how to build Flow Core in Unix.\n \n (for OpenBSD specific instructions, see [build-openbsd.md](build-openbsd.md))\n \n Note\n ---------------------\n-Always use absolute paths to configure and compile bitcoin and the dependencies,\n+Always use absolute paths to configure and compile flow and the dependencies,\n for example, when specifying the path of the dependency:\n \n \t../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n@@ -24,7 +24,7 @@ make\n make install # optional\n ```\n \n-This will build bitcoin-qt as well if the dependencies are met.\n+This will build flow-qt as well if the dependencies are met.\n \n Dependencies\n ---------------------\n@@ -55,7 +55,7 @@ Memory Requirements\n --------------------\n \n C++ compilers are memory-hungry. It is recommended to have at least 1.5 GB of\n-memory available when compiling Bitcoin Core. On systems with less, gcc can be\n+memory available when compiling Flow Core. On systems with less, gcc can be\n tuned to conserve memory with additional CXXFLAGS:\n \n \n@@ -81,11 +81,11 @@ install necessary parts of boost:\n \n BerkeleyDB is required for the wallet.\n \n-**For Ubuntu only:** db4.8 packages are available [here](https://launchpad.net/~bitcoin/+archive/bitcoin).\n+**For Ubuntu only:** db4.8 packages are available [here](https://launchpad.net/~flow/+archive/flow).\n You can add the repository and install using the following commands:\n \n     sudo apt-get install software-properties-common\n-    sudo add-apt-repository ppa:bitcoin/bitcoin\n+    sudo add-apt-repository ppa:flow/flow\n     sudo apt-get update\n     sudo apt-get install libdb4.8-dev libdb4.8++-dev\n \n@@ -94,7 +94,7 @@ BerkeleyDB 5.1 or later, which break binary wallet compatibility with the distri\n are based on BerkeleyDB 4.8. If you do not care about wallet compatibility,\n pass `--with-incompatible-bdb` to configure.\n \n-See the section \"Disable-wallet mode\" to build Bitcoin Core without wallet.\n+See the section \"Disable-wallet mode\" to build Flow Core without wallet.\n \n Optional (see --with-miniupnpc and --enable-upnp-default):\n \n@@ -107,7 +107,7 @@ ZMQ dependencies (provides ZMQ API 4.x):\n Dependencies for the GUI: Ubuntu & Debian\n -----------------------------------------\n \n-If you want to build Bitcoin-Qt, make sure that the required packages for Qt development\n+If you want to build Flow-Qt, make sure that the required packages for Qt development\n are installed. Either Qt 5 or Qt 4 are necessary to build the GUI.\n If both Qt 4 and Qt 5 are installed, Qt 5 will be used. Pass `--with-gui=qt4` to configure to choose Qt4.\n To build without GUI pass `--without-gui`.\n@@ -124,7 +124,7 @@ libqrencode (optional) can be installed with:\n \n     sudo apt-get install libqrencode-dev\n \n-Once these are installed, they will be found by configure and a bitcoin-qt executable will be\n+Once these are installed, they will be found by configure and a flow-qt executable will be\n built by default.\n \n Dependency Build Instructions: Fedora\n@@ -147,7 +147,7 @@ libqrencode (optional) can be installed with:\n \n Notes\n -----\n-The release is built with GCC and then \"strip bitcoind\" to strip the debug\n+The release is built with GCC and then \"strip flowd\" to strip the debug\n symbols, which reduces the executable size by about 90%.\n \n \n@@ -168,10 +168,10 @@ Berkeley DB\n It is recommended to use Berkeley DB 4.8. If you have to build it yourself:\n \n ```bash\n-BITCOIN_ROOT=$(pwd)\n+FLOW_ROOT=$(pwd)\n \n-# Pick some path to install BDB to, here we create a directory within the bitcoin directory\n-BDB_PREFIX=\"${BITCOIN_ROOT}/db4\"\n+# Pick some path to install BDB to, here we create a directory within the flow directory\n+BDB_PREFIX=\"${FLOW_ROOT}/db4\"\n mkdir -p $BDB_PREFIX\n \n # Fetch the source and verify that it is not tampered with\n@@ -186,8 +186,8 @@ cd db-4.8.30.NC/build_unix/\n ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX\n make install\n \n-# Configure Bitcoin Core to use our own-built instance of BDB\n-cd $BITCOIN_ROOT\n+# Configure Flow Core to use our own-built instance of BDB\n+cd $FLOW_ROOT\n ./autogen.sh\n ./configure LDFLAGS=\"-L${BDB_PREFIX}/lib/\" CPPFLAGS=\"-I${BDB_PREFIX}/include/\" # (other args...)\n ```\n@@ -205,7 +205,7 @@ If you need to build Boost yourself:\n \n Security\n --------\n-To help make your bitcoin installation more secure by making certain attacks impossible to\n+To help make your flow installation more secure by making certain attacks impossible to\n exploit even if a vulnerability is found, binaries are hardened by default.\n This can be disabled with:\n \n@@ -229,7 +229,7 @@ Hardening enables the following features:\n \n     To test that you have built PIE executable, install scanelf, part of paxutils, and use:\n \n-    \tscanelf -e ./bitcoin\n+    \tscanelf -e ./flow\n \n     The output should contain:\n \n@@ -238,13 +238,13 @@ Hardening enables the following features:\n \n * Non-executable Stack\n     If the stack is executable then trivial stack based buffer overflow exploits are possible if\n-    vulnerable buffers are found. By default, bitcoin should be built with a non-executable stack\n+    vulnerable buffers are found. By default, flow should be built with a non-executable stack\n     but if one of the libraries it uses asks for an executable stack or someone makes a mistake\n     and uses a compiler extension which requires an executable stack, it will silently build an\n     executable without the non-executable stack protection.\n \n     To verify that the stack is non-executable after compiling use:\n-    `scanelf -e ./bitcoin`\n+    `scanelf -e ./flow`\n \n     the output should contain:\n \tSTK/REL/PTL\n@@ -254,7 +254,7 @@ Hardening enables the following features:\n \n Disable-wallet mode\n --------------------\n-When the intention is to run only a P2P node without a wallet, bitcoin may be compiled in\n+When the intention is to run only a P2P node without a wallet, flow may be compiled in\n disable-wallet mode with:\n \n     ./configure --disable-wallet\n@@ -276,17 +276,17 @@ Setup and Build Example: Arch Linux\n This example lists the steps necessary to setup and build a command line only, non-wallet distribution of the latest changes on Arch Linux:\n \n     pacman -S git base-devel boost libevent python\n-    git clone https://github.com/bitcoin/bitcoin.git\n-    cd bitcoin/\n+    git clone https://github.com/flow/flow.git\n+    cd flow/\n     ./autogen.sh\n     ./configure --disable-wallet --without-gui --without-miniupnpc\n     make check\n \n Note:\n Enabling wallet support requires either compiling against a Berkeley DB newer than 4.8 (package `db`) using `--with-incompatible-bdb`,\n or building and depending on a local version of Berkeley DB 4.8. The readily available Arch Linux packages are currently built using\n-`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/bitcoin/trunk/PKGBUILD).\n-As mentioned above, when maintaining portability of the wallet between the standard Bitcoin Core distributions and independently built\n+`--with-incompatible-bdb` according to the [PKGBUILD](https://projects.archlinux.org/svntogit/community.git/tree/flow/trunk/PKGBUILD).\n+As mentioned above, when maintaining portability of the wallet between the standard Flow Core distributions and independently built\n node software is desired, Berkeley DB 4.8 must be used.\n \n \n@@ -334,7 +334,7 @@ For the wallet (optional):\n This will give a warning \"configure: WARNING: Found Berkeley DB other\n than 4.8; wallets opened by this build will not be portable!\", but as FreeBSD never\n had a binary release, this may not matter. If backwards compatibility\n-with 4.8-built Bitcoin Core is needed follow the steps under \"Berkeley DB\" above.\n+with 4.8-built Flow Core is needed follow the steps under \"Berkeley DB\" above.\n \n Then build using:\n "
      },
      {
        "sha": "e5ecb6c781cabcc16d1154be8a0c6354065f4721",
        "filename": "doc/build-windows.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n WINDOWS BUILD NOTES\n ====================\n \n-Below are some notes on how to build Bitcoin Core for Windows.\n+Below are some notes on how to build Flow Core for Windows.\n \n Most developers use cross-compilation from Ubuntu to build executables for\n Windows. This is also used to build the release binaries.\n@@ -99,6 +99,6 @@ Installation\n After building using the Windows subsystem it can be useful to copy the compiled\n executables to a directory on the windows drive in the same directory structure\n as they appear in the release `.zip` archive. This can be done in the following\n-way. This will install to `c:\\workspace\\bitcoin`, for example:\n+way. This will install to `c:\\workspace\\flow`, for example:\n \n-    make install DESTDIR=/mnt/c/workspace/bitcoin\n+    make install DESTDIR=/mnt/c/workspace/flow"
      },
      {
        "sha": "900968009e1a26ccf26a6f7ae8d5bd24332abd8a",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -128,7 +128,7 @@ to see it.\n \n **testnet and regtest modes**\n \n-Run with the -testnet option to run with \"play bitcoins\" on the test network, if you\n+Run with the -testnet option to run with \"play flows\" on the test network, if you\n are testing multi-machine code that needs to operate across the internet.\n \n If you are testing something that can run on one machine, run with the -regtest option.\n@@ -137,7 +137,7 @@ that run in -regtest mode.\n \n **DEBUG_LOCKORDER**\n \n-Bitcoin Core is a multithreaded application, and deadlocks or other multithreading bugs\n+Flow Core is a multithreaded application, and deadlocks or other multithreading bugs\n can be very difficult to track down. Compiling with -DDEBUG_LOCKORDER (configure\n CXXFLAGS=\"-DDEBUG_LOCKORDER -g\") inserts run-time checks to keep track of which locks\n are held, and adds warnings to the debug.log file if inconsistencies are detected.\n@@ -186,7 +186,7 @@ Threads\n \n - ThreadRPCServer : Remote procedure call handler, listens on port 8332 for connections and services them.\n \n-- BitcoinMiner : Generates bitcoins (if wallet is enabled).\n+- FlowMiner : Generates flows (if wallet is enabled).\n \n - Shutdown : Does an orderly shutdown of everything.\n \n@@ -196,7 +196,7 @@ Ignoring IDE/editor files\n In closed-source environments in which everyone uses the same IDE it is common\n to add temporary files it produces to the project-wide `.gitignore` file.\n \n-However, in open source software such as Bitcoin Core, where everyone uses\n+However, in open source software such as Flow Core, where everyone uses\n their own editors/IDE/tools, it is less common. Only you know what files your\n editor produces and this may change from version to version. The canonical way\n to do this is thus to create your local gitignore. Add this to `~/.gitconfig`:\n@@ -226,9 +226,9 @@ Development guidelines\n ============================\n \n A few non-style-related recommendations for developers, as well as points to\n-pay attention to for reviewers of Bitcoin Core code.\n+pay attention to for reviewers of Flow Core code.\n \n-General Bitcoin Core\n+General Flow Core\n ----------------------\n \n - New features should be exposed on RPC first, then can be made available in the GUI\n@@ -338,7 +338,7 @@ Strings and formatting\n \n - For `strprintf`, `LogPrint`, `LogPrintf` formatting characters don't need size specifiers\n \n-  - *Rationale*: Bitcoin Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n+  - *Rationale*: Flow Core uses tinyformat, which is type safe. Leave them out to avoid confusion\n \n Variable names\n --------------\n@@ -421,12 +421,12 @@ Subtrees\n \n Several parts of the repository are subtrees of software maintained elsewhere.\n \n-Some of these are maintained by active developers of Bitcoin Core, in which case changes should probably go\n+Some of these are maintained by active developers of Flow Core, in which case changes should probably go\n directly upstream without being PRed directly against the project.  They will be merged back in the next\n subtree merge.\n \n Others are external projects without a tight relationship with our project.  Changes to these should also\n-be sent upstream but bugfixes may also be prudent to PR against Bitcoin Core so that they can be integrated\n+be sent upstream but bugfixes may also be prudent to PR against Flow Core so that they can be integrated\n quickly.  Cosmetic changes should be purely taken upstream.\n \n There is a tool in contrib/devtools/git-subtree-check.sh to check a subtree directory for consistency with\n@@ -438,10 +438,10 @@ Current subtrees include:\n   - Upstream at https://github.com/google/leveldb ; Maintained by Google, but open important PRs to Core to avoid delay\n \n - src/libsecp256k1\n-  - Upstream at https://github.com/bitcoin-core/secp256k1/ ; actively maintaned by Core contributors.\n+  - Upstream at https://github.com/flow-core/secp256k1/ ; actively maintaned by Core contributors.\n \n - src/crypto/ctaes\n-  - Upstream at https://github.com/bitcoin-core/ctaes ; actively maintained by Core contributors.\n+  - Upstream at https://github.com/flow-core/ctaes ; actively maintained by Core contributors.\n \n - src/univalue\n   - Upstream at https://github.com/jgarzik/univalue ; report important PRs to Core to avoid delay.\n@@ -489,7 +489,7 @@ Git and GitHub tips\n \n         [remote \"upstream-pull\"]\n                 fetch = +refs/pull/*:refs/remotes/upstream-pull/*\n-                url = git@github.com:bitcoin/bitcoin.git\n+                url = git@github.com:flow/flow.git\n \n   This will add an `upstream-pull` remote to your git repository, which can be fetched using `git fetch --all`\n   or `git fetch upstream-pull`. Afterwards, you can use `upstream-pull/NUMBER/head` in arguments to `git show`,\n@@ -537,7 +537,7 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n - Try not to overload methods on argument type. E.g. don't make `getblock(true)` and `getblock(\"hash\")`\n   do different things.\n \n-  - *Rationale*: This is impossible to use with `bitcoin-cli`, and can be surprising to users.\n+  - *Rationale*: This is impossible to use with `flow-cli`, and can be surprising to users.\n \n   - *Exception*: Some RPC calls can take both an `int` and `bool`, most notably when a bool was switched\n     to a multi-value, or due to other historical reasons. **Always** have false map to 0 and\n@@ -556,7 +556,7 @@ A few guidelines for introducing and reviewing new RPC interfaces:\n \n - Add every non-string RPC argument `(method, idx, name)` to the table `vRPCConvertParams` in `rpc/client.cpp`.\n \n-  - *Rationale*: `bitcoin-cli` and the GUI debug console use this table to determine how to\n+  - *Rationale*: `flow-cli` and the GUI debug console use this table to determine how to\n     convert a plaintext command line to JSON. If the types don't match, the method can be unusable\n     from there.\n "
      },
      {
        "sha": "de140db49d5f15e408bca6007ce90774fb8005a6",
        "filename": "doc/dnsseed-policy.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n Expectations for DNS Seed operators\n ====================================\n \n-Bitcoin Core attempts to minimize the level of trust in DNS seeds,\n+Flow Core attempts to minimize the level of trust in DNS seeds,\n but DNS seeds still pose a small amount of risk for the network.\n As such, DNS seeds must be run by entities which have some minimum\n-level of trust within the Bitcoin community.\n+level of trust within the Flow community.\n \n-Other implementations of Bitcoin software may also use the same\n+Other implementations of Flow software may also use the same\n seeds and may be more exposed. In light of this exposure, this\n document establishes some basic expectations for operating dnsseeds.\n \n@@ -16,7 +16,7 @@ and not sell or transfer control of the DNS seed. Any hosting services\n contracted by the operator are equally expected to uphold these expectations.\n \n 1. The DNS seed results must consist exclusively of fairly selected and\n-functioning Bitcoin nodes from the public network to the best of the\n+functioning Flow nodes from the public network to the best of the\n operator's understanding and capability.\n \n 2. For the avoidance of doubt, the results may be randomized but must not\n@@ -26,7 +26,7 @@ urgent technical necessity and disclosed.\n 3. The results may not be served with a DNS TTL of less than one minute.\n \n 4. Any logging of DNS queries should be only that which is necessary\n-for the operation of the service or urgent health of the Bitcoin\n+for the operation of the service or urgent health of the Flow\n network and must not be retained longer than necessary nor disclosed\n to any third party.\n \n@@ -42,13 +42,13 @@ details of their operating practices.\n related to the DNS seed operation.\n \n If these expectations cannot be satisfied the operator should\n-discontinue providing services and contact the active Bitcoin\n+discontinue providing services and contact the active Flow\n Core development team as well as posting on\n-[bitcoin-dev](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev).\n+[flow-dev](https://lists.linuxfoundation.org/mailman/listinfo/flow-dev).\n \n Behavior outside of these expectations may be reasonable in some\n situations but should be discussed in public in advance.\n \n See also\n ----------\n-- [bitcoin-seeder](https://github.com/sipa/bitcoin-seeder) is a reference implementation of a DNS seed.\n+- [flow-seeder](https://github.com/sipa/flow-seeder) is a reference implementation of a DNS seed."
      },
      {
        "sha": "cd64d2adc53c0f42f83dd929a0ae35f21858bc75",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,14 +1,14 @@\n \n * banlist.dat: stores the IPs/Subnets of banned nodes\n-* bitcoin.conf: contains configuration settings for bitcoind or bitcoin-qt\n-* bitcoind.pid: stores the process id of bitcoind while running\n+* flow.conf: contains configuration settings for flowd or flow-qt\n+* flowd.pid: stores the process id of flowd while running\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n * chainstate/*; block chain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n-* debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n+* debug.log: contains debug information and general logging generated by flowd or flow-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n * mempool.dat: dump of the mempool's transactions; since 0.14.0.\n * peers.dat: peer IP address database (custom format); since 0.7.0"
      },
      {
        "sha": "258be86edee2372033763742c513309761248f1b",
        "filename": "doc/flow_logo_doxygen.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/flow_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/flow_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/flow_logo_doxygen.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "doc/bitcoin_logo_doxygen.png"
      },
      {
        "sha": "9a88554f8a95451b04a95f00b8938d924eb4bfbc",
        "filename": "doc/fuzzing.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/fuzzing.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/fuzzing.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/fuzzing.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n-Fuzz-testing Bitcoin Core\n+Fuzz-testing Flow Core\n ==========================\n \n-A special test harness `test_bitcoin_fuzzy` is provided to provide an easy\n+A special test harness `test_flow_fuzzy` is provided to provide an easy\n entry point for fuzzers and the like. In this document we'll describe how to\n use it with AFL.\n \n@@ -20,13 +20,13 @@ export AFLPATH=$PWD\n Instrumentation\n ----------------\n \n-To build Bitcoin Core using AFL instrumentation (this assumes that the\n+To build Flow Core using AFL instrumentation (this assumes that the\n `AFLPATH` was set as above):\n ```\n ./configure --disable-ccache --disable-shared --enable-tests CC=${AFLPATH}/afl-gcc CXX=${AFLPATH}/afl-g++\n export AFL_HARDEN=1\n cd src/\n-make test/test_bitcoin_fuzzy\n+make test/test_flow_fuzzy\n ```\n We disable ccache because we don't want to pollute the ccache with instrumented\n objects, and similarly don't want to use non-instrumented cached objects linked\n@@ -35,7 +35,7 @@ in.\n The fuzzing can be sped up significantly (~200x) by using `afl-clang-fast` and\n `afl-clang-fast++` in place of `afl-gcc` and `afl-g++` when compiling. When\n compiling using `afl-clang-fast`/`afl-clang-fast++` the resulting\n-`test_bitcoin_fuzzy` binary will be instrumented in such a way that the AFL\n+`test_flow_fuzzy` binary will be instrumented in such a way that the AFL\n features \"persistent mode\" and \"deferred forkserver\" can be used. See\n https://github.com/mcarpenter/afl/tree/master/llvm_mode for details.\n \n@@ -55,7 +55,7 @@ AFLOUT=$PWD/outputs\n \n Example inputs are available from:\n \n-- https://download.visucore.com/bitcoin/bitcoin_fuzzy_in.tar.xz\n+- https://download.visucore.com/flow/flow_fuzzy_in.tar.xz\n - http://strateman.ninja/fuzzing.tar.xz\n \n Extract these (or other starting inputs) into the `inputs` directory before starting fuzzing.\n@@ -65,7 +65,7 @@ Fuzzing\n \n To start the actual fuzzing use:\n ```\n-$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_bitcoin_fuzzy\n+$AFLPATH/afl-fuzz -i ${AFLIN} -o ${AFLOUT} -m52 -- test/test_flow_fuzzy\n ```\n \n You may have to change a few kernel parameters to test optimally - `afl-fuzz`"
      },
      {
        "sha": "147dc4b389d974257049f9de53bcbefcc1c79a27",
        "filename": "doc/gitian-building.md",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,17 +1,17 @@\n Gitian building\n ================\n \n-*Setup instructions for a Gitian build of Bitcoin Core using a Debian VM or physical system.*\n+*Setup instructions for a Gitian build of Flow Core using a Debian VM or physical system.*\n \n-Gitian is the deterministic build process that is used to build the Bitcoin\n+Gitian is the deterministic build process that is used to build the Flow\n Core executables. It provides a way to be reasonably sure that the\n executables are really built from the source on GitHub. It also makes sure that\n the same, tested dependencies are used and statically built into the executable.\n \n Multiple developers build the source code by following a specific descriptor\n (\"recipe\"), cryptographically sign the result, and upload the resulting signature.\n These results are compared and only if they match, the build is accepted and uploaded\n-to bitcoin.org.\n+to flow.org.\n \n More independent Gitian builders are needed, which is why this guide exists.\n It is preferred you follow these steps yourself instead of using someone else's\n@@ -26,7 +26,7 @@ Table of Contents\n - [Installing Gitian](#installing-gitian)\n - [Setting up the Gitian image](#setting-up-the-gitian-image)\n - [Getting and building the inputs](#getting-and-building-the-inputs)\n-- [Building Bitcoin Core](#building-bitcoin-core)\n+- [Building Flow Core](#building-flow-core)\n - [Building an alternative repository](#building-an-alternative-repository)\n - [Signing externally](#signing-externally)\n - [Uploading signatures](#uploading-signatures)\n@@ -41,7 +41,7 @@ Debian Linux was chosen as the host distribution because it has a lightweight in\n Any kind of virtualization can be used, for example:\n - [VirtualBox](https://www.virtualbox.org/) (covered by this guide)\n - [KVM](http://www.linux-kvm.org/page/Main_Page)\n-- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-bitcoin-host/README.md).\n+- [LXC](https://linuxcontainers.org/), see also [Gitian host docker container](https://github.com/gdm85/tenku/tree/master/docker/gitian-flow-host/README.md).\n \n You can also install Gitian on actual hardware instead of using virtualization.\n \n@@ -305,12 +305,12 @@ cd ..\n \n **Note**: When sudo asks for a password, enter the password for the user *debian* not for *root*.\n \n-Clone the git repositories for bitcoin and Gitian.\n+Clone the git repositories for flow and Gitian.\n \n ```bash\n git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/bitcoin/bitcoin\n-git clone https://github.com/bitcoin-core/gitian.sigs.git\n+git clone https://github.com/flow/flow\n+git clone https://github.com/flow-core/gitian.sigs.git\n ```\n \n Setting up the Gitian image\n@@ -339,16 +339,16 @@ Getting and building the inputs\n At this point you have two options, you can either use the automated script (found in [contrib/gitian-build.sh](/contrib/gitian-build.sh)) or you could manually do everything by following this guide. If you're using the automated script, then run it with the \"--setup\" command. Afterwards, run it with the \"--build\" command (example: \"contrib/gitian-build.sh -b signer 0.13.0\"). Otherwise ignore this.\n \n Follow the instructions in [doc/release-process.md](release-process.md#fetch-and-create-inputs-first-time-or-when-dependency-versions-change)\n-in the bitcoin repository under 'Fetch and create inputs' to install sources which require\n+in the flow repository under 'Fetch and create inputs' to install sources which require\n manual intervention. Also optionally follow the next step: 'Seed the Gitian sources cache\n and offline git repositories' which will fetch the remaining files required for building\n offline.\n \n-Building Bitcoin Core\n+Building Flow Core\n ----------------\n \n-To build Bitcoin Core (for Linux, OS X and Windows) just follow the steps under 'perform\n-Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the bitcoin repository.\n+To build Flow Core (for Linux, OS X and Windows) just follow the steps under 'perform\n+Gitian builds' in [doc/release-process.md](release-process.md#perform-gitian-builds) in the flow repository.\n \n This may take some time as it will build all the dependencies needed for each descriptor.\n These dependencies will be cached after a successful build to avoid rebuilding them when possible.\n@@ -362,12 +362,12 @@ tail -f var/build.log\n \n Output from `gbuild` will look something like\n \n-    Initialized empty Git repository in /home/debian/gitian-builder/inputs/bitcoin/.git/\n+    Initialized empty Git repository in /home/debian/gitian-builder/inputs/flow/.git/\n     remote: Counting objects: 57959, done.\n     remote: Total 57959 (delta 0), reused 0 (delta 0), pack-reused 57958\n     Receiving objects: 100% (57959/57959), 53.76 MiB | 484.00 KiB/s, done.\n     Resolving deltas: 100% (41590/41590), done.\n-    From https://github.com/bitcoin/bitcoin\n+    From https://github.com/flow/flow\n     ... (new tags, new branch etc)\n     --- Building for trusty amd64 ---\n     Stopping target if it is up\n@@ -393,18 +393,18 @@ and inputs.\n \n For example:\n ```bash\n-URL=https://github.com/laanwj/bitcoin.git\n+URL=https://github.com/laanwj/flow.git\n COMMIT=2014_03_windows_unicode_path\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-./bin/gbuild --commit bitcoin=${COMMIT} --url bitcoin=${URL} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+./bin/gbuild --commit flow=${COMMIT} --url flow=${URL} ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+./bin/gbuild --commit flow=${COMMIT} --url flow=${URL} ../flow/contrib/gitian-descriptors/gitian-win.yml\n+./bin/gbuild --commit flow=${COMMIT} --url flow=${URL} ../flow/contrib/gitian-descriptors/gitian-osx.yml\n ```\n \n Building fully offline\n -----------------------\n \n For building fully offline including attaching signatures to unsigned builds, the detached-sigs repository\n-and the bitcoin git repository with the desired tag must both be available locally, and then gbuild must be\n+and the flow git repository with the desired tag must both be available locally, and then gbuild must be\n told where to find them. It also requires an apt-cacher-ng which is fully-populated but set to offline mode, or\n manually disabling gitian-builder's use of apt-get to update the VM build environment.\n \n@@ -423,7 +423,7 @@ cd /path/to/gitian-builder\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get update\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root \\\n   -e DEBIAN_FRONTEND=noninteractive apt-get --no-install-recommends -y install \\\n-  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../bitcoin/contrib/gitian-descriptors/*|sort|uniq )\n+  $( sed -ne '/^packages:/,/[^-] .*/ {/^- .*/{s/\"//g;s/- //;p}}' ../flow/contrib/gitian-descriptors/*|sort|uniq )\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root apt-get -q -y purge grub\n LXC_ARCH=amd64 LXC_SUITE=trusty on-target -u root -e DEBIAN_FRONTEND=noninteractive apt-get -y dist-upgrade\n ```\n@@ -443,12 +443,12 @@ Then when building, override the remote URLs that gbuild would otherwise pull fr\n ```bash\n \n cd /some/root/path/\n-git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+git clone https://github.com/flow-core/flow-detached-sigs.git\n \n-BTCPATH=/some/root/path/bitcoin\n-SIGPATH=/some/root/path/bitcoin-detached-sigs\n+FLWPATH=/some/root/path/flow\n+SIGPATH=/some/root/path/flow-detached-sigs\n \n-./bin/gbuild --url bitcoin=${BTCPATH},signature=${SIGPATH} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n+./bin/gbuild --url flow=${FLWPATH},signature=${SIGPATH} ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n ```\n \n Signing externally\n@@ -463,9 +463,9 @@ When you execute `gsign` you will get an error from GPG, which can be ignored. C\n in `gitian.sigs` to your signing machine and do\n \n ```bash\n-    gpg --detach-sign ${VERSION}-linux/${SIGNER}/bitcoin-linux-build.assert\n-    gpg --detach-sign ${VERSION}-win/${SIGNER}/bitcoin-win-build.assert\n-    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/bitcoin-osx-build.assert\n+    gpg --detach-sign ${VERSION}-linux/${SIGNER}/flow-linux-build.assert\n+    gpg --detach-sign ${VERSION}-win/${SIGNER}/flow-win-build.assert\n+    gpg --detach-sign ${VERSION}-osx-unsigned/${SIGNER}/flow-osx-build.assert\n ```\n \n This will create the `.sig` files that can be committed together with the `.assert` files to assert your\n@@ -475,5 +475,5 @@ Uploading signatures\n ---------------------\n \n After building and signing you can push your signatures (both the `.assert` and `.assert.sig` files) to the\n-[bitcoin-core/gitian.sigs](https://github.com/bitcoin-core/gitian.sigs/) repository, or if that's not possible create a pull\n+[flow-core/gitian.sigs](https://github.com/flow-core/gitian.sigs/) repository, or if that's not possible create a pull\n request. You can also mail the files to Wladimir (laanwj@gmail.com) and he will commit them."
      },
      {
        "sha": "7ce46c08b56f670287dd91e26ca78463af7985c8",
        "filename": "doc/init.md",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,50 +1,50 @@\n-Sample init scripts and service configuration for bitcoind\n+Sample init scripts and service configuration for flowd\n ==========================================================\n \n Sample scripts and configuration files for systemd, Upstart and OpenRC\n can be found in the contrib/init folder.\n \n-    contrib/init/bitcoind.service:    systemd service unit configuration\n-    contrib/init/bitcoind.openrc:     OpenRC compatible SysV style init script\n-    contrib/init/bitcoind.openrcconf: OpenRC conf.d file\n-    contrib/init/bitcoind.conf:       Upstart service configuration file\n-    contrib/init/bitcoind.init:       CentOS compatible SysV style init script\n+    contrib/init/flowd.service:    systemd service unit configuration\n+    contrib/init/flowd.openrc:     OpenRC compatible SysV style init script\n+    contrib/init/flowd.openrcconf: OpenRC conf.d file\n+    contrib/init/flowd.conf:       Upstart service configuration file\n+    contrib/init/flowd.init:       CentOS compatible SysV style init script\n \n 1. Service User\n ---------------------------------\n \n-All three Linux startup configurations assume the existence of a \"bitcoin\" user\n+All three Linux startup configurations assume the existence of a \"flow\" user\n and group.  They must be created before attempting to use these scripts.\n-The OS X configuration assumes bitcoind will be set up for the current user.\n+The OS X configuration assumes flowd will be set up for the current user.\n \n 2. Configuration\n ---------------------------------\n \n-At a bare minimum, bitcoind requires that the rpcpassword setting be set\n+At a bare minimum, flowd requires that the rpcpassword setting be set\n when running as a daemon.  If the configuration file does not exist or this\n-setting is not set, bitcoind will shutdown promptly after startup.\n+setting is not set, flowd will shutdown promptly after startup.\n \n This password does not have to be remembered or typed as it is mostly used\n-as a fixed token that bitcoind and client programs read from the configuration\n+as a fixed token that flowd and client programs read from the configuration\n file, however it is recommended that a strong and secure password be used\n as this password is security critical to securing the wallet should the\n wallet be enabled.\n \n-If bitcoind is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n+If flowd is run with the \"-server\" flag (set by default), and no rpcpassword is set,\n it will use a special cookie file for authentication. The cookie is generated with random\n content when the daemon starts, and deleted when it exits. Read access to this file\n controls who can access it through RPC.\n \n By default the cookie is stored in the data directory, but it's location can be overridden\n with the option '-rpccookiefile'.\n \n-This allows for running bitcoind without having to do any manual configuration.\n+This allows for running flowd without having to do any manual configuration.\n \n `conf`, `pid`, and `wallet` accept relative paths which are interpreted as\n relative to the data directory. `wallet` *only* supports relative paths.\n \n For an example configuration file that describes the configuration settings,\n-see `contrib/debian/examples/bitcoin.conf`.\n+see `contrib/debian/examples/flow.conf`.\n \n 3. Paths\n ---------------------------------\n@@ -53,24 +53,24 @@ see `contrib/debian/examples/bitcoin.conf`.\n \n All three configurations assume several paths that might need to be adjusted.\n \n-Binary:              `/usr/bin/bitcoind`  \n-Configuration file:  `/etc/bitcoin/bitcoin.conf`  \n-Data directory:      `/var/lib/bitcoind`  \n-PID file:            `/var/run/bitcoind/bitcoind.pid` (OpenRC and Upstart) or `/var/lib/bitcoind/bitcoind.pid` (systemd)  \n-Lock file:           `/var/lock/subsys/bitcoind` (CentOS)  \n+Binary:              `/usr/bin/flowd`  \n+Configuration file:  `/etc/flow/flow.conf`  \n+Data directory:      `/var/lib/flowd`  \n+PID file:            `/var/run/flowd/flowd.pid` (OpenRC and Upstart) or `/var/lib/flowd/flowd.pid` (systemd)  \n+Lock file:           `/var/lock/subsys/flowd` (CentOS)  \n \n The configuration file, PID directory (if applicable) and data directory\n-should all be owned by the bitcoin user and group.  It is advised for security\n+should all be owned by the flow user and group.  It is advised for security\n reasons to make the configuration file and data directory only readable by the\n-bitcoin user and group.  Access to bitcoin-cli and other bitcoind rpc clients\n+flow user and group.  Access to flow-cli and other flowd rpc clients\n can then be controlled by group membership.\n \n 3b) Mac OS X\n \n-Binary:              `/usr/local/bin/bitcoind`  \n-Configuration file:  `~/Library/Application Support/Bitcoin/bitcoin.conf`  \n-Data directory:      `~/Library/Application Support/Bitcoin`\n-Lock file:           `~/Library/Application Support/Bitcoin/.lock`\n+Binary:              `/usr/local/bin/flowd`  \n+Configuration file:  `~/Library/Application Support/Flow/flow.conf`  \n+Data directory:      `~/Library/Application Support/Flow`\n+Lock file:           `~/Library/Application Support/Flow/.lock`\n \n 4. Installing Service Configuration\n -----------------------------------\n@@ -81,42 +81,42 @@ Installing this .service file consists of just copying it to\n /usr/lib/systemd/system directory, followed by the command\n `systemctl daemon-reload` in order to update running systemd configuration.\n \n-To test, run `systemctl start bitcoind` and to enable for system startup run\n-`systemctl enable bitcoind`\n+To test, run `systemctl start flowd` and to enable for system startup run\n+`systemctl enable flowd`\n \n 4b) OpenRC\n \n-Rename bitcoind.openrc to bitcoind and drop it in /etc/init.d.  Double\n+Rename flowd.openrc to flowd and drop it in /etc/init.d.  Double\n check ownership and permissions and make it executable.  Test it with\n-`/etc/init.d/bitcoind start` and configure it to run on startup with\n-`rc-update add bitcoind`\n+`/etc/init.d/flowd start` and configure it to run on startup with\n+`rc-update add flowd`\n \n 4c) Upstart (for Debian/Ubuntu based distributions)\n \n-Drop bitcoind.conf in /etc/init.  Test by running `service bitcoind start`\n+Drop flowd.conf in /etc/init.  Test by running `service flowd start`\n it will automatically start on reboot.\n \n NOTE: This script is incompatible with CentOS 5 and Amazon Linux 2014 as they\n use old versions of Upstart and do not supply the start-stop-daemon utility.\n \n 4d) CentOS\n \n-Copy bitcoind.init to /etc/init.d/bitcoind. Test by running `service bitcoind start`.\n+Copy flowd.init to /etc/init.d/flowd. Test by running `service flowd start`.\n \n-Using this script, you can adjust the path and flags to the bitcoind program by\n-setting the BITCOIND and FLAGS environment variables in the file\n-/etc/sysconfig/bitcoind. You can also use the DAEMONOPTS environment variable here.\n+Using this script, you can adjust the path and flags to the flowd program by\n+setting the FLOWD and FLAGS environment variables in the file\n+/etc/sysconfig/flowd. You can also use the DAEMONOPTS environment variable here.\n \n 4e) Mac OS X\n \n-Copy org.bitcoin.bitcoind.plist into ~/Library/LaunchAgents. Load the launch agent by\n-running `launchctl load ~/Library/LaunchAgents/org.bitcoin.bitcoind.plist`.\n+Copy org.flow.flowd.plist into ~/Library/LaunchAgents. Load the launch agent by\n+running `launchctl load ~/Library/LaunchAgents/org.flow.flowd.plist`.\n \n-This Launch Agent will cause bitcoind to start whenever the user logs in.\n+This Launch Agent will cause flowd to start whenever the user logs in.\n \n-NOTE: This approach is intended for those wanting to run bitcoind as the current user.\n-You will need to modify org.bitcoin.bitcoind.plist if you intend to use it as a\n-Launch Daemon with a dedicated bitcoin user.\n+NOTE: This approach is intended for those wanting to run flowd as the current user.\n+You will need to modify org.flow.flowd.plist if you intend to use it as a\n+Launch Daemon with a dedicated flow user.\n \n 5. Auto-respawn\n -----------------------------------"
      },
      {
        "sha": "10b5fb1a6cd7a8f08f03164ccf49c8983b7998d4",
        "filename": "doc/man/Makefile.am",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/Makefile.am?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n dist_man1_MANS=\n \n-if BUILD_BITCOIND\n-  dist_man1_MANS+=bitcoind.1\n+if BUILD_FLOWD\n+  dist_man1_MANS+=flowd.1\n endif\n \n if ENABLE_QT\n-  dist_man1_MANS+=bitcoin-qt.1\n+  dist_man1_MANS+=flow-qt.1\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  dist_man1_MANS+=bitcoin-cli.1 bitcoin-tx.1\n+if BUILD_FLOW_UTILS\n+  dist_man1_MANS+=flow-cli.1 flow-tx.1\n endif"
      },
      {
        "sha": "65a87482d902914d46d6befefdf37ce7f69459c8",
        "filename": "doc/man/flow-cli.1",
        "status": "renamed",
        "additions": 13,
        "deletions": 13,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/flow-cli.1?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,17 +1,17 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-CLI \"1\" \"February 2017\" \"bitcoin-cli v0.14.99.0\" \"User Commands\"\n+.TH FLOW-CLI \"1\" \"February 2017\" \"flow-cli v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-cli \\- manual page for bitcoin-cli v0.14.99.0\n+flow-cli \\- manual page for flow-cli v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core RPC client version v0.14.99.0\n+Flow Core RPC client version v0.14.99.0\n .SS \"Usage:\"\n .TP\n-bitcoin\\-cli [options] <command> [params]\n-Send command to Bitcoin Core\n+flow\\-cli [options] <command> [params]\n+Send command to Flow Core\n .IP\n-bitcoin\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Bitcoin Core (with named arguments)\n-bitcoin\\-cli [options] help                List commands\n-bitcoin\\-cli [options] help <command>      Get help for a command\n+flow\\-cli [options] \\fB\\-named\\fR <command> [name=value] ... Send command to Flow Core (with named arguments)\n+flow\\-cli [options] help                List commands\n+flow\\-cli [options] help <command>      Get help for a command\n .SH OPTIONS\n .HP\n \\-?\n@@ -20,7 +20,7 @@ This help message\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: flow.conf)\n .HP\n \\fB\\-datadir=\\fR<dir>\n .IP\n@@ -71,11 +71,11 @@ Timeout during HTTP requests (default: 900)\n Read extra arguments from standard input, one per line until EOF/Ctrl\\-D\n (recommended for sensitive information such as passphrases)\n .SH COPYRIGHT\n-Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Flow Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Flow Core useful. Visit\n+<https://flowcore.org> for further information about the software.\n+The source code is available from <https://github.com/flow/flow>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-cli.1"
      },
      {
        "sha": "2b177e72af58e8db5f5a4f8cf7e85494bd7382d3",
        "filename": "doc/man/flow-qt.1",
        "status": "renamed",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/flow-qt.1?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-QT \"1\" \"February 2017\" \"bitcoin-qt v0.14.99.0\" \"User Commands\"\n+.TH FLW-QT \"1\" \"February 2017\" \"flow-qt v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-qt \\- manual page for bitcoin-qt v0.14.99.0\n+flow-qt \\- manual page for flow-qt v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core version v0.14.99.0 (64\\-bit)\n+Flow Core version v0.14.99.0 (64\\-bit)\n Usage:\n .IP\n-bitcoin\\-qt [command\\-line options]\n+flow\\-qt [command\\-line options]\n .SH OPTIONS\n .HP\n \\-?\n@@ -38,7 +38,7 @@ testnet:\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: flow.conf)\n .HP\n \\fB\\-datadir=\\fR<dir>\n .IP\n@@ -81,7 +81,7 @@ leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n .IP\n-Specify pid file (default: bitcoind.pid)\n+Specify pid file (default: flowd.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n@@ -284,17 +284,17 @@ Set key pool size to <n> (default: 100)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n+A fee rate (in FLW/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for\n+Fees (in FLW/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n .HP\n \\fB\\-paytxfee=\\fR<amt>\n .IP\n-Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+Fee (in FLW/kB) to add to transactions you send (default: 0.00)\n .HP\n \\fB\\-rescan\\fR\n .IP\n@@ -393,12 +393,12 @@ Prepend debug output with timestamp (default: 1)\n .HP\n \\fB\\-minrelaytxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+Fees (in FLW/kB) smaller than this are considered zero fee for relaying,\n mining and transaction creation (default: 0.00001)\n .HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+Maximum total fees (in FLW) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n .HP\n@@ -453,7 +453,7 @@ Set maximum size of high\\-priority/low\\-fee transactions in bytes\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n-Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+Set lowest fee rate (in FLW/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n@@ -535,11 +535,11 @@ Show splash screen on startup (default: 1)\n .IP\n Reset all settings changed in the GUI\n .SH COPYRIGHT\n-Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Flow Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Flow Core useful. Visit\n+<https://flowcore.org> for further information about the software.\n+The source code is available from <https://github.com/flow/flow>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-qt.1"
      },
      {
        "sha": "3a27684b29459f26d3e5d3676b4792cb95cb95e5",
        "filename": "doc/man/flow-tx.1",
        "status": "renamed",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-tx.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flow-tx.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/flow-tx.1?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,16 +1,16 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIN-TX \"1\" \"February 2017\" \"bitcoin-tx v0.14.99.0\" \"User Commands\"\n+.TH FLOW-TX \"1\" \"February 2017\" \"flow-tx v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoin-tx \\- manual page for bitcoin-tx v0.14.99.0\n+flow-tx \\- manual page for flow-tx v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core bitcoin\\-tx utility version v0.14.99.0\n+Flow Core flow\\-tx utility version v0.14.99.0\n .SS \"Usage:\"\n .TP\n-bitcoin\\-tx [options] <hex\\-tx> [commands]\n-Update hex\\-encoded bitcoin transaction\n+flow\\-tx [options] <hex\\-tx> [commands]\n+Update hex\\-encoded flow transaction\n .TP\n-bitcoin\\-tx [options] \\fB\\-create\\fR [commands]\n-Create hex\\-encoded bitcoin transaction\n+flow\\-tx [options] \\fB\\-create\\fR [commands]\n+Create hex\\-encoded flow transaction\n .SH OPTIONS\n .HP\n \\-?\n@@ -107,11 +107,11 @@ set=NAME:JSON\\-STRING\n .IP\n Set register NAME to given JSON\\-STRING\n .SH COPYRIGHT\n-Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Flow Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Flow Core useful. Visit\n+<https://flowcore.org> for further information about the software.\n+The source code is available from <https://github.com/flow/flow>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoin-tx.1"
      },
      {
        "sha": "196918157b06789d445066a6775d9c59b6728cff",
        "filename": "doc/man/flowd.1",
        "status": "renamed",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flowd.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/man/flowd.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/man/flowd.1?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n .\\\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.4.\n-.TH BITCOIND \"1\" \"February 2017\" \"bitcoind v0.14.99.0\" \"User Commands\"\n+.TH FLOWD \"1\" \"February 2017\" \"flowd v0.14.99.0\" \"User Commands\"\n .SH NAME\n-bitcoind \\- manual page for bitcoind v0.14.99.0\n+flowd \\- manual page for flowd v0.14.99.0\n .SH DESCRIPTION\n-Bitcoin Core Daemon version v0.14.99.0\n+Flow Core Daemon version v0.14.99.0\n .SS \"Usage:\"\n .TP\n-bitcoind [options]\n-Start Bitcoin Core Daemon\n+flowd [options]\n+Start Flow Core Daemon\n .SH OPTIONS\n .HP\n \\-?\n@@ -39,7 +39,7 @@ testnet:\n .HP\n \\fB\\-conf=\\fR<file>\n .IP\n-Specify configuration file (default: bitcoin.conf)\n+Specify configuration file (default: flow.conf)\n .HP\n \\fB\\-daemon\\fR\n .IP\n@@ -86,7 +86,7 @@ leave that many cores free, default: 0)\n .HP\n \\fB\\-pid=\\fR<file>\n .IP\n-Specify pid file (default: bitcoind.pid)\n+Specify pid file (default: flowd.pid)\n .HP\n \\fB\\-prune=\\fR<n>\n .IP\n@@ -289,17 +289,17 @@ Set key pool size to <n> (default: 100)\n .HP\n \\fB\\-fallbackfee=\\fR<amt>\n .IP\n-A fee rate (in BTC/kB) that will be used when fee estimation has\n+A fee rate (in FLW/kB) that will be used when fee estimation has\n insufficient data (default: 0.0002)\n .HP\n \\fB\\-mintxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for\n+Fees (in FLW/kB) smaller than this are considered zero fee for\n transaction creation (default: 0.00001)\n .HP\n \\fB\\-paytxfee=\\fR<amt>\n .IP\n-Fee (in BTC/kB) to add to transactions you send (default: 0.00)\n+Fee (in FLW/kB) to add to transactions you send (default: 0.00)\n .HP\n \\fB\\-rescan\\fR\n .IP\n@@ -398,12 +398,12 @@ Prepend debug output with timestamp (default: 1)\n .HP\n \\fB\\-minrelaytxfee=\\fR<amt>\n .IP\n-Fees (in BTC/kB) smaller than this are considered zero fee for relaying,\n+Fees (in FLW/kB) smaller than this are considered zero fee for relaying,\n mining and transaction creation (default: 0.00001)\n .HP\n \\fB\\-maxtxfee=\\fR<amt>\n .IP\n-Maximum total fees (in BTC) to use in a single wallet transaction or raw\n+Maximum total fees (in FLW) to use in a single wallet transaction or raw\n transaction; setting this too low may abort large transactions\n (default: 0.10)\n .HP\n@@ -458,7 +458,7 @@ Set maximum size of high\\-priority/low\\-fee transactions in bytes\n .HP\n \\fB\\-blockmintxfee=\\fR<amt>\n .IP\n-Set lowest fee rate (in BTC/kB) for transactions to be included in block\n+Set lowest fee rate (in FLW/kB) for transactions to be included in block\n creation. (default: 0.00001)\n .PP\n RPC server options:\n@@ -514,11 +514,11 @@ option can be specified multiple times\n .IP\n Set the number of threads to service RPC calls (default: 4)\n .SH COPYRIGHT\n-Copyright (C) 2009-2017 The Bitcoin Core developers\n+Copyright (C) 2009-2017 The Flow Core developers\n \n-Please contribute if you find Bitcoin Core useful. Visit\n-<https://bitcoincore.org> for further information about the software.\n-The source code is available from <https://github.com/bitcoin/bitcoin>.\n+Please contribute if you find Flow Core useful. Visit\n+<https://flowcore.org> for further information about the software.\n+The source code is available from <https://github.com/flow/flow>.\n \n This is experimental software.\n Distributed under the MIT software license, see the accompanying file COPYING",
        "previous_filename": "doc/man/bitcoind.1"
      },
      {
        "sha": "9b5803d09508041270a68406dd0465261c8acfbd",
        "filename": "doc/reduce-traffic.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,7 +3,7 @@ Reduce Traffic\n \n Some node operators need to deal with bandwidth caps imposed by their ISPs.\n \n-By default, bitcoin-core allows up to 125 connections to different peers, 8 of\n+By default, flow-core allows up to 125 connections to different peers, 8 of\n which are outbound. You can therefore, have at most 117 inbound connections.\n \n The default settings can result in relatively significant traffic consumption.\n@@ -33,5 +33,5 @@ blocks and transactions to fewer nodes.\n ## 3. Reduce maximum connections (`-maxconnections=<num>`)\n \n Reducing the maximum connected nodes to a minimum could be desirable if traffic\n-limits are tiny. Keep in mind that bitcoin's trustless model works best if you are\n+limits are tiny. Keep in mind that flow's trustless model works best if you are\n connected to a handful of nodes."
      },
      {
        "sha": "a71ad47c3358db74ae9a0ac7eb819d3d3dd69566",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,30 +1,30 @@\n-Bitcoin Core version 0.14.x is now available from:\n+Flow Core version 0.14.x is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.x/>\n+  <https://flow.org/bin/flow-core-0.14.x/>\n \n This is a new minor version release, including various bugfixes and\n performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n-Bitcoin Core is extensively tested on multiple operating systems using\n+Flow Core is extensively tested on multiple operating systems using\n the Linux kernel, macOS 10.8+, and Windows Vista and later.\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n No attempt is made to prevent installing or running the software on Windows XP, you\n can still do so at your own risk but be aware that there are known instabilities and issues.\n Please do not report issues about Windows XP to the issue tracker.\n \n-Bitcoin Core should also work on most other Unix-like systems but is not\n+Flow Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n Notable changes\n@@ -49,4 +49,4 @@ Credits\n Thanks to everyone who directly contributed to this release:\n \n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "a8fa3657b8ca9d8a933ce44ae6aea2ff8f7f3103",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "modified",
        "additions": 46,
        "deletions": 46,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.0 is now available from:\n+Flow Core version 0.10.0 is now available from:\n \n-  https://bitcoin.org/bin/0.10.0/\n+  https://flow.org/bin/0.10.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrading warning\n ---------------------\n \n Because release 0.10.0 makes use of headers-first synchronization and parallel\n block download (see further), the block files and databases are not\n-backwards-compatible with older versions of Bitcoin Core or other software:\n+backwards-compatible with older versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -50,7 +50,7 @@ Notable changes\n Faster synchronization\n ----------------------\n \n-Bitcoin Core now uses 'headers-first synchronization'. This means that we first\n+Flow Core now uses 'headers-first synchronization'. This means that we first\n ask peers for block headers (a total of 27 megabytes, as of December 2014) and\n validate those. In a second stage, when the headers have been discovered, we\n download the blocks. However, as we already know about the whole chain in\n@@ -172,7 +172,7 @@ improved by making the signatures constant time and deterministic.\n \n This change is a result of switching signing to use libsecp256k1\n instead of OpenSSL. Libsecp256k1 is a cryptographic library\n-optimized for the curve Bitcoin uses which was created by Bitcoin\n+optimized for the curve Flow uses which was created by Flow\n Core developer Pieter Wuille.\n \n There exist attacks[1] against most ECC implementations where an\n@@ -187,7 +187,7 @@ long time, but this functionality has still not made its\n way into a released version of OpenSSL. Libsecp256k1 achieves\n significantly stronger protection: As far as we're aware this is\n the only deployed implementation of constant time signing for\n-the curve Bitcoin uses and we have reason to believe that\n+the curve Flow uses and we have reason to believe that\n libsecp256k1 is better tested and more thoroughly reviewed\n than the implementation in OpenSSL.\n \n@@ -222,21 +222,21 @@ addresses need to added to the wallet before the payment, though.\n Consensus library\n -----------------\n \n-Starting from 0.10.0, the Bitcoin Core distribution includes a consensus library.\n+Starting from 0.10.0, the Flow Core distribution includes a consensus library.\n \n The purpose of this library is to make the verification functionality that is\n-critical to Bitcoin's consensus available to other applications, e.g. to language\n-bindings such as [python-bitcoinlib](https://pypi.python.org/pypi/python-bitcoinlib) or\n+critical to Flow's consensus available to other applications, e.g. to language\n+bindings such as [python-flowlib](https://pypi.python.org/pypi/python-flowlib) or\n alternative node implementations.\n \n-This library is called `libbitcoinconsensus.so` (or, `.dll` for Windows).\n-Its interface is defined in the C header [bitcoinconsensus.h](https://github.com/bitcoin/bitcoin/blob/0.10/src/script/bitcoinconsensus.h).\n+This library is called `libflowconsensus.so` (or, `.dll` for Windows).\n+Its interface is defined in the C header [flowconsensus.h](https://github.com/flow/flow/blob/0.10/src/script/flowconsensus.h).\n \n In its initial version the API includes two functions:\n \n-- `bitcoinconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n+- `flowconsensus_verify_script` verifies a script. It returns whether the indicated input of the provided serialized transaction \n correctly spends the passed scriptPubKey under additional constraints indicated by flags\n-- `bitcoinconsensus_version` returns the API version, currently at an experimental `0`\n+- `flowconsensus_version` returns the API version, currently at an experimental `0`\n \n The functionality is planned to be extended to e.g. UTXO management in upcoming releases, but the interface\n for existing methods should remain stable.\n@@ -247,42 +247,42 @@ Standard script rules relaxed for P2SH addresses\n The IsStandard() rules have been almost completely removed for P2SH\n redemption scripts, allowing applications to make use of any valid\n script type, such as \"n-of-m OR y\", hash-locked oracle addresses, etc.\n-While the Bitcoin protocol has always supported these types of script,\n+While the Flow protocol has always supported these types of script,\n actually using them on mainnet has been previously inconvenient as\n-standard Bitcoin Core nodes wouldn't relay them to miners, nor would\n+standard Flow Core nodes wouldn't relay them to miners, nor would\n most miners include them in blocks they mined.\n \n-bitcoin-tx\n+flow-tx\n ----------\n \n-It has been observed that many of the RPC functions offered by bitcoind are\n-\"pure functions\", and operate independently of the bitcoind wallet. This\n+It has been observed that many of the RPC functions offered by flowd are\n+\"pure functions\", and operate independently of the flowd wallet. This\n included many of the RPC \"raw transaction\" API functions, such as\n createrawtransaction.\n \n-bitcoin-tx is a newly introduced command line utility designed to enable easy\n-manipulation of bitcoin transactions. A summary of its operation may be\n-obtained via \"bitcoin-tx --help\" Transactions may be created or signed in a\n+flow-tx is a newly introduced command line utility designed to enable easy\n+manipulation of flow transactions. A summary of its operation may be\n+obtained via \"flow-tx --help\" Transactions may be created or signed in a\n manner similar to the RPC raw tx API. Transactions may be updated, deleting\n inputs or outputs, or appending new inputs and outputs. Custom scripts may be\n-easily composed using a simple text notation, borrowed from the bitcoin test\n+easily composed using a simple text notation, borrowed from the flow test\n suite.\n \n This tool may be used for experimenting with new transaction types, signing\n multi-party transactions, and many other uses. Long term, the goal is to\n deprecate and remove \"pure function\" RPC API calls, as those do not require a\n server round-trip to execute.\n \n-Other utilities \"bitcoin-key\" and \"bitcoin-script\" have been proposed, making\n+Other utilities \"flow-key\" and \"flow-script\" have been proposed, making\n key and script operations easily accessible via command line.\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Flow Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Flow\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -292,10 +292,10 @@ achieving its 951/1001 status.\n The `prioritisetransaction` RPC method has been added to enable miners to\n manipulate the priority of transactions on an individual basis.\n \n-Bitcoin Core now supports BIP 22 long polling, so mining software can be\n+Flow Core now supports BIP 22 long polling, so mining software can be\n notified immediately of new templates rather than having to poll periodically.\n \n-Support for BIP 23 block proposals is now available in Bitcoin Core's\n+Support for BIP 23 block proposals is now available in Flow Core's\n `getblocktemplate` method. This enables miners to check the basic validity of\n their next block before expending work on it, reducing risks of accidental\n hardforks or mining invalid blocks.\n@@ -313,9 +313,9 @@ AllowFreeThreshold(), in which case they are relayed subject to the rate limiter\n BIP 66: strict DER encoding for signatures\n ------------------------------------------\n \n-Bitcoin Core 0.10 implements BIP 66, which introduces block version 3, and a new\n+Flow Core 0.10 implements BIP 66, which introduces block version 3, and a new\n consensus rule, which prohibits non-DER signatures. Such transactions have been\n-non-standard since Bitcoin v0.8.0 (released in February 2013), but were\n+non-standard since Flow v0.8.0 (released in February 2013), but were\n technically still permitted inside blocks.\n \n This change breaks the dependency on OpenSSL's signature parsing, and is\n@@ -337,10 +337,10 @@ Detailed release notes follow. This overview includes changes that affect extern\n behavior, not code moves, refactors or string updates.\n \n RPC:\n-- `f923c07` Support IPv6 lookup in bitcoin-cli even when IPv6 only bound on localhost\n+- `f923c07` Support IPv6 lookup in flow-cli even when IPv6 only bound on localhost\n - `b641c9c` Fix addnode \"onetry\": Connect with OpenNetworkConnection\n - `171ca77` estimatefee / estimatepriority RPC methods\n-- `b750cf1` Remove cli functionality from bitcoind\n+- `b750cf1` Remove cli functionality from flowd\n - `f6984e8` Add \"chain\" to getmininginfo, improve help in getblockchaininfo\n - `99ddc6c` Add nLocalServices info to RPC getinfo\n - `cf0c47b` Remove getwork() RPC call\n@@ -391,7 +391,7 @@ Command-line options:\n - `4278b1d` Clarify error message when invalid -rpcallowip\n - `6b407e4` -datadir is now allowed in config files\n - `bdd5b58` Add option `-sysperms` to disable 077 umask (create new files with system default umask)\n-- `cbe39a3` Add \"bitcoin-tx\" command line utility and supporting modules\n+- `cbe39a3` Add \"flow-tx\" command line utility and supporting modules\n - `dbca89b` Trigger -alertnotify if network is upgrading without you\n - `ad96e7c` Make -reindex cope with out-of-order blocks\n - `16d5194` Skip reindexed blocks individually\n@@ -465,7 +465,7 @@ P2P protocol and network code:\n - `35e408f` Regard connection failures as attempt for addrman\n - `a3a7317` Introduce 10 minute block download timeout\n - `3022e7d` Require sufficent priority for relay of free transactions\n-- `58fda4d` Update seed IPs, based on bitcoin.sipa.be crawler data\n+- `58fda4d` Update seed IPs, based on flow.sipa.be crawler data\n - `18021d0` Remove bitnodes.io from dnsseeds.\n \n Validation:\n@@ -492,13 +492,13 @@ Build system:\n - `9ce0774` build: Fix windows configure when using --with-qt-libdir\n - `ea96475` build: Add mention of --disable-wallet to bdb48 error messages\n - `1dec09b` depends: add shared dependency builder\n-- `c101c76` build: Add --with-utils (bitcoin-cli and bitcoin-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n+- `c101c76` build: Add --with-utils (flow-cli and flow-tx, default=yes). Help string consistency tweaks. Target sanity check fix\n - `e432a5f` build: add option for reducing exports (v2)\n - `6134b43` Fixing condition 'sabotaging' MSVC build\n - `af0bd5e` osx: fix signing to make Gatekeeper happy (again)\n - `a7d1f03` build: fix dynamic boost check when --with-boost= is used\n - `d5fd094` build: fix qt test build when libprotobuf is in a non-standard path\n-- `2cf5f16` Add libbitcoinconsensus library\n+- `2cf5f16` Add libflowconsensus library\n - `914868a` build: add a deterministic dmg signer \n - `2d375fe` depends: bump openssl to 1.0.1k\n - `b7a4ecc` Build: Only check for boost when building code that requires it\n@@ -522,7 +522,7 @@ Wallet:\n GUI:\n - `c21c74b` osx: Fix missing dock menu with qt5\n - `b90711c` Fix Transaction details shows wrong To:\n-- `516053c` Make links in 'About Bitcoin Core' clickable\n+- `516053c` Make links in 'About Flow Core' clickable\n - `bdc83e8` Ensure payment request network matches client network\n - `65f78a1` Add GUI view of peer information\n - `06a91d9` VerifyDB progress reporting\n@@ -539,7 +539,7 @@ GUI:\n - `7007402` Implement SI-style (thin space) thoudands separator\n - `91cce17` Use fixed-point arithmetic in amount spinbox\n - `bdba2dd` Remove an obscure option no-one cares about\n-- `bd0aa10` Replace the temporary file hack currently used to change Bitcoin-Qt's dock icon (OS X) with a buffer-based solution\n+- `bd0aa10` Replace the temporary file hack currently used to change Flow-Qt's dock icon (OS X) with a buffer-based solution\n - `94e1b9e` Re-work overviewpage UI\n - `8bfdc9a` Better looking trayicon\n - `b197bf3` disable tray interactions when client model set to 0\n@@ -585,8 +585,8 @@ Tests:\n - `4cac5db` script tests: value with trailing 0x00 is true\n - `89101c6` script test: test case for 5-byte bools\n - `d2d9dc0` script tests: add tests for CHECKMULTISIG limits\n-- `d789386` Add \"it works\" test for bitcoin-tx\n-- `df4d61e` Add bitcoin-tx tests\n+- `d789386` Add \"it works\" test for flow-tx\n+- `df4d61e` Add flow-tx tests\n - `aa41ac2` Test IsPushOnly() with invalid push\n - `6022b5d` Make `script_{valid,invalid}.json` validation flags configurable\n - `8138cbe` Add automatic script test generation, and actual checksig tests\n@@ -598,7 +598,7 @@ Tests:\n - `2b62e17` Clearly separate PUSHDATA and numeric argument MINIMALDATA tests\n - `16d78bd` Add valid invert of invalid every numeric opcode tests\n - `f635269` tests: enable alertnotify test for Windows\n-- `7a41614` tests: allow rpc-tests to get filenames for bitcoind and bitcoin-cli from the environment\n+- `7a41614` tests: allow rpc-tests to get filenames for flowd and flow-cli from the environment\n - `5122ea7` tests: fix forknotify.py on windows\n - `fa7f8cd` tests: remove old pull-tester scripts\n - `7667850` tests: replace the old (unused since Travis) tests with new rpc test scripts\n@@ -624,7 +624,7 @@ Tests:\n Miscellaneous:\n - `122549f` Fix incorrect checkpoint data for testnet3\n - `5bd02cf` Log used config file to debug.log on startup\n-- `68ba85f` Updated Debian example bitcoin.conf with config from wiki + removed some cruft and updated comments\n+- `68ba85f` Updated Debian example flow.conf with config from wiki + removed some cruft and updated comments\n - `e5ee8f0` Remove -beta suffix\n - `38405ac` Add comment regarding experimental-use service bits\n - `be873f6` Issue warning if collecting RandSeed data failed\n@@ -635,7 +635,7 @@ Miscellaneous:\n - `cd01a5e` Enable paranoid corruption checks in LevelDB >= 1.16\n - `9365937` Add comment about never updating nTimeOffset past 199 samples\n - `403c1bf` contrib: remove getwork-based pyminer (as getwork API call has been removed)\n-- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate bitcoind\n+- `0c3e101` contrib: Added systemd .service file in order to help distributions integrate flowd\n - `0a0878d` doc: Add new DNSseed policy\n - `2887bff` Update coding style and add .clang-format\n - `5cbda4f` Changed LevelDB cursors to use scoped pointers to ensure destruction when going out of scope\n@@ -758,5 +758,5 @@ Thanks to everyone who contributed to this release:\n - Yoichi Hirai\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/).\n "
      },
      {
        "sha": "2043616d611f5e2ad8e818349732176dd97d15b3",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.1 is now available from:\n+Flow Core version 0.10.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.1/>\n+  <https://flow.org/bin/flow-core-0.10.1/>\n \n This is a new minor version release, bringing bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -48,7 +48,7 @@ Notable changes\n \n This is a minor release and hence there are no notable changes.\n For the notable changes in 0.10, refer to the release notes for the\n-0.10.0 release at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+0.10.0 release at https://github.com/flow/flow/blob/v0.10.0/doc/release-notes.md\n \n 0.10.1 Change log\n =================\n@@ -140,4 +140,4 @@ And all those who contributed additional code review and/or security research:\n - Sergio Demian Lerner\n - Sharon Goldberg\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "d99dbe0ec0932f24262ed41459d785fd11eccb36",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.2 is now available from:\n+Flow Core version 0.10.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.2/>\n+  <https://flow.org/bin/flow-core-0.10.2/>\n \n This is a new minor version release, bringing minor bug fixes and translation \n updates. It is recommended to upgrade to this version.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -47,12 +47,12 @@ Notable changes\n ===============\n \n This fixes a serious problem on Windows with data directories that have non-ASCII\n-characters (https://github.com/bitcoin/bitcoin/issues/6078).\n+characters (https://github.com/flow/flow/issues/6078).\n \n For other platforms there are no notable changes.\n \n For the notable changes in 0.10, refer to the release notes\n-at https://github.com/bitcoin/bitcoin/blob/v0.10.0/doc/release-notes.md\n+at https://github.com/flow/flow/blob/v0.10.0/doc/release-notes.md\n \n 0.10.2 Change log\n =================\n@@ -83,4 +83,4 @@ And all those who contributed additional code review and/or security research:\n - Pieter Wuille\n - vayvanne\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "cee6673f3a3f0bc5de5b4d2ba2b49a34f6ed2e96",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.10.3 is now available from:\n+Flow Core version 0.10.3 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.3/>\n+  <https://flow.org/bin/flow-core-0.10.3/>\n \n This is a new minor version release, bringing security fixes and translation \n updates. It is recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -60,7 +60,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/flow/flow/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -75,26 +75,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed flow software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Flow Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Flowj has done so for a similar span of time.\n+Flowjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Flow Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/flow/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -107,7 +107,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11.0\n+(see https://github.com/flow/flow/pull/6793, as well as the 0.11.0\n release notes, in which this value was suggested)\n \n 0.10.3 Change log\n@@ -162,4 +162,4 @@ And all those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "dc6f833966d1da2f11eb2f83cf95b887337d0683",
        "filename": "doc/release-notes/release-notes-0.10.4.md",
        "status": "modified",
        "additions": 17,
        "deletions": 17,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.10.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.4.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin Core version 0.10.4 is now available from:\n+Flow Core version 0.10.4 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.10.4/>\n+  <https://flow.org/bin/flow-core-0.10.4/>\n \n This is a new minor version release, bringing bug fixes, the BIP65\n (CLTV) consensus change, and relay policy preparation for BIP113. It is\n recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -18,15 +18,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -68,24 +68,24 @@ specified point in the future.\n    blocks if they comply with the BIP65 rules for CLTV.\n \n For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n+<https://github.com/flow/flow/pull/6351>\n \n Graphs showing the progress towards block version 4 adoption may be\n found at the URLs below:\n \n - Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+  consensus enforcement: <http://flow.sipa.be/ver-50k.png>\n \n - Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+  earliest possible BIP65 consensus-enforced block: <http://flow.sipa.be/ver-2k.png>\n \n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+**Notice to miners:** Flow Core\u2019s block templates are now for\n version 4 blocks only, and any mining software relying on its\n getblocktemplate must be updated in parallel to use libblkmaker either\n version FIXME or any version from FIXME onward.\n \n - If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  Flow Core, which must be done prior to BIP65 achieving its 951/1001\n   status.\n \n - If you are mining with the stratum mining protocol: this does not\n@@ -95,19 +95,19 @@ version FIXME or any version from FIXME onward.\n   will affect you at the pool operator\u2019s discretion, which must be no\n   later than BIP65 achieving its 951/1001 status.\n \n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+[BIP65]: https://github.com/flow/bips/blob/master/bip-0065.mediawiki\n \n Windows bug fix for corrupted UTXO database on unclean shutdowns\n ----------------------------------------------------------------\n \n Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+entire blockchain after an unclean shutdown of Flow Core on Windows\n (or an unclean shutdown of Windows itself). Although unclean shutdowns\n remain unsafe, this release no longer relies on memory-mapped files for\n the UTXO database, which significantly reduced the frequency of unclean\n shutdowns leading to required reindexes during testing.\n \n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+For more information, see: <https://github.com/flow/flow/pull/6917>\n \n Other fixes for database corruption on Windows are expected in the\n next major release.\n@@ -129,8 +129,8 @@ git merge commit are mentioned.\n - #6953 `a2f2fb6` build: disable -Wself-assign\n - #6953 `cf67d8b` Bugfix: Allow mining on top of old tip blocks for testnet (fixes testnet-in-a-box use case)\n - #6953 `b3964e3` Drop \"with minimal dependencies\" from description\n-- #6953 `43c2789` Split bitcoin-tx into its own package\n-- #6953 `dfe0d4d` Include bitcoin-tx binary on Debian/Ubuntu\n+- #6953 `43c2789` Split flow-tx into its own package\n+- #6953 `dfe0d4d` Include flow-tx binary on Debian/Ubuntu\n - #6953 `612efe8` [Qt] Raise debug window when requested\n - #6953 `3ad96bd` Fix locking in GetTransaction\n - #6953 `9c81005` Fix spelling of Qt\n@@ -169,4 +169,4 @@ Thanks to everyone who directly contributed to this release:\n \n And those who contributed additional code review and/or security research.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "75a8378a9bee8dd0a4b8ee67dfe8fe80b41688cb",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.0 is now available from:\n+Flow Core version 0.11.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.0/>\n+  <https://flow.org/bin/flow-core-0.11.0/>\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -58,7 +58,7 @@ possible to change a few configuration options to work around this. The growth\n of the mempool can be monitored with the RPC command `getmempoolinfo`.\n \n One is to increase the minimum transaction relay fee `minrelaytxfee`, which\n-defaults to 0.00001. This will cause transactions with fewer BTC/kB fee to be\n+defaults to 0.00001. This will cause transactions with fewer FLW/kB fee to be\n rejected, and thus fewer transactions entering the mempool.\n \n The other is to restrict the relaying of free transactions with\n@@ -67,7 +67,7 @@ free transactions (with enough priority) will be accepted. It defaults to 15.\n Reducing this number reduces the speed at which the mempool can grow due\n to free transactions.\n \n-For example, add the following to `bitcoin.conf`:\n+For example, add the following to `flow.conf`:\n \n     minrelaytxfee=0.00005 \n     limitfreerelay=5\n@@ -82,11 +82,11 @@ Block file pruning\n \n This release supports running a fully validating node without maintaining a copy \n of the raw block and undo data on disk. To recap, there are four types of data \n-related to the blockchain in the bitcoin system: the raw blocks as received over \n+related to the blockchain in the flow system: the raw blocks as received over \n the network (blk???.dat), the undo data (rev???.dat), the block index and the \n UTXO set (both LevelDB databases). The databases are built from the raw data.\n \n-Block pruning allows Bitcoin Core to delete the raw block and undo data once \n+Block pruning allows Flow Core to delete the raw block and undo data once \n it's been validated and used to build the databases. At that point, the raw data \n is used only to relay blocks to other nodes, to handle reorganizations, to look \n up old transactions (if -txindex is enabled or via the RPC/REST interfaces), or \n@@ -95,7 +95,7 @@ all blocks in the blockchain.\n \n The user specifies how much space to allot for block & undo files. The minimum \n allowed is 550MB. Note that this is in addition to whatever is required for the \n-block index and UTXO databases. The minimum was chosen so that Bitcoin Core will \n+block index and UTXO databases. The minimum was chosen so that Flow Core will \n be able to maintain at least 288 blocks on disk (two days worth of blocks at 10 \n minutes per block). In rare instances it is possible that the amount of space \n used will exceed the pruning target in order to keep the required last 288 \n@@ -192,7 +192,7 @@ transaction (re)broadcast:\n One such application is selective Tor usage, where the node runs on the normal\n internet but transactions are broadcasted over Tor.\n \n-For an example script see [bitcoin-submittx](https://github.com/laanwj/bitcoin-submittx).\n+For an example script see [flow-submittx](https://github.com/laanwj/flow-submittx).\n \n Privacy: Stream isolation for Tor\n ----------------------------------\n@@ -297,7 +297,7 @@ git merge commit are mentioned.\n \n ### Build system\n - #5501 `c76c9d2` Add mips, mipsel and aarch64 to depends platforms\n-- #5334 `cf87536` libbitcoinconsensus: Add pkg-config support\n+- #5334 `cf87536` libflowconsensus: Add pkg-config support\n - #5514 `ed11d53` Fix 'make distcheck'\n - #5505 `a99ef7d` Build winshutdownmonitor.cpp on Windows only\n - #5582 `e8a6639` Osx toolchain update\n@@ -309,7 +309,7 @@ git merge commit are mentioned.\n - #5149 `c7abfa5` Add script to verify all merge commits are signed\n - #6082 `7abbb7e` qt: disable qt tests when one of the checks for the gui fails\n - #6244 `0401aa2` configure: Detect (and reject) LibreSSL\n-- #6269 `95aca44` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures\n+- #6269 `95aca44` gitian: Use the new flow-detached-sigs git repo for OSX signatures\n - #6285 `ef1d506` Fix scheduler build with some boost versions.\n - #6280 `25c2216` depends: fix Boost 1.55 build on GCC 5\n - #6303 `b711599` gitian: add a gitian-win-signer descriptor\n@@ -346,8 +346,8 @@ git merge commit are mentioned.\n - #5626 `ab0d798` Fix icon sizes and column width\n - #5683 `c7b22aa` add new osx dmg background picture\n - #5620 `7823598` Payment request expiration bug fix\n-- #5729 `9c4a5a5` Allow unit changes for read-only BitcoinAmountField\n-- #5753 `0f44672` Add bitcoin logo to about screen\n+- #5729 `9c4a5a5` Allow unit changes for read-only FlowAmountField\n+- #5753 `0f44672` Add flow logo to about screen\n - #5629 `a956586` Prevent amount overflow problem with payment requests\n - #5830 `215475a` Don't save geometry for options and about/help window\n - #5793 `d26f0b2` Honor current network when creating autostart link\n@@ -392,21 +392,21 @@ git merge commit are mentioned.\n - #5366 `47a79bb` No longer check osx compatibility in RenameThread\n - #5689 `07f4386` openssl: abstract out OPENSSL_cleanse\n - #5708 `8b298ca` Add list of implemented BIPs\n-- #5809 `46bfbe7` Add bitcoin-cli man page\n+- #5809 `46bfbe7` Add flow-cli man page\n - #5839 `86eb461` keys: remove libsecp256k1 verification until it's actually supported\n - #5749 `d734d87` Help messages correctly formatted (79 chars)\n - #5884 `7077fe6` BUGFIX: Stack around the variable 'rv' was corrupted\n-- #5849 `41259ca` contrib/init/bitcoind.openrc: Compatibility with previous OpenRC init script variables\n+- #5849 `41259ca` contrib/init/flowd.openrc: Compatibility with previous OpenRC init script variables\n - #5950 `41113e3` Fix locale fallback and guard tests against invalid locale settings\n - #5965 `7c6bfb1` Add git-subtree-check.sh script\n - #6033 `1623f6e` FreeBSD, OpenBSD thread renaming\n - #6064 `b46e7c2` Several changes to mruset\n - #6104 `3e2559c` Show an init message while activating best chain\n - #6125 `351f73e` Clean up parsing of bool command line args\n - #5964 `b4c219b` Lightweight task scheduler\n-- #6116 `30dc3c1` [OSX] rename Bitcoin-Qt.app to Bitcoin-Core.app\n+- #6116 `30dc3c1` [OSX] rename Flow-Qt.app to Flow-Core.app\n - #6168 `b3024f0` contrib/linearize: Support linearization of testnet blocks\n-- #6098 `7708fcd` Update Windows resource files (and add one for bitcoin-tx)\n+- #6098 `7708fcd` Update Windows resource files (and add one for flow-tx)\n - #6159 `e1412d3` Catch errors on datadir lock and pidfile delete\n - #6186 `182686c` Fix two problems in CSubnet parsing\n - #6174 `df992b9` doc: add translation strings policy\n@@ -427,7 +427,7 @@ Thanks to everyone who directly contributed to this release:\n - azeteki\n - Ben Holden-Crowther\n - bikinibabe\n-- BitcoinPRReadingGroup\n+- FlowPRReadingGroup\n - Blake Jakopovic\n - BtcDrak\n - charlescharles\n@@ -501,5 +501,5 @@ And all those who contributed additional code review and/or security research:\n \n - Sergio Demian Lerner\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/).\n "
      },
      {
        "sha": "8309d019e2bc0be2badd90dda41eb52905fe4546",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "modified",
        "additions": 16,
        "deletions": 16,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.11.1 is now available from:\n+Flow Core version 0.11.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.1/>\n+  <https://flow.org/bin/flow-core-0.11.1/>\n \n This is a new minor version release, bringing security fixes. It is recommended\n to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,15 +17,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -61,7 +61,7 @@ using distribution provided packages.\n Additionally, upnp has been disabled by default. This may result in a lower\n number of reachable nodes on IPv4, however this prevents future libupnpc\n vulnerabilities from being a structural risk to the network\n-(see https://github.com/bitcoin/bitcoin/pull/6795).\n+(see https://github.com/flow/flow/pull/6795).\n \n Test for LowS signatures before relaying\n -----------------------------------------\n@@ -76,26 +76,26 @@ for nuisance malleability on SIGHASH_ALL P2PKH transactions. On the down-side\n it will block most transactions made by sufficiently out of date software.\n \n Unlike the other avenues to change txids on transactions this\n-one was randomly violated by all deployed bitcoin software prior to\n+one was randomly violated by all deployed flow software prior to\n its discovery. So, while other malleability vectors where made\n non-standard as soon as they were discovered, this one has remained\n permitted. Even BIP62 did not propose applying this rule to\n old version transactions, but conforming implementations have become\n much more common since BIP62 was initially written.\n \n-Bitcoin Core has produced compatible signatures since a28fb70e in\n+Flow Core has produced compatible signatures since a28fb70e in\n September 2013, but this didn't make it into a release until 0.9\n-in March 2014; Bitcoinj has done so for a similar span of time.\n-Bitcoinjs and electrum have been more recently updated.\n+in March 2014; Flowj has done so for a similar span of time.\n+Flowjs and electrum have been more recently updated.\n \n This does not replace the need for BIP62 or similar, as miners can\n still cooperate to break transactions.  Nor does it replace the\n need for wallet software to handle malleability sanely[1]. This\n only eliminates the cheap and irritating DOS attack.\n \n-[1] On the Malleability of Bitcoin Transactions\n+[1] On the Malleability of Flow Transactions\n Marcin Andrychowicz, Stefan Dziembowski, Daniel Malinowski, \u0141ukasz Mazurek\n-http://fc15.ifca.ai/preproceedings/bitcoin/paper_9.pdf\n+http://fc15.ifca.ai/preproceedings/flow/paper_9.pdf\n \n Minimum relay fee default increase\n -----------------------------------\n@@ -108,7 +108,7 @@ outrageous memory usage on nodes due to the mempool ballooning. This is a\n temporary measure, bridging the time until a dynamic method for determining\n this fee is merged (which will be in 0.12).\n \n-(see https://github.com/bitcoin/bitcoin/pull/6793, as well as the 0.11\n+(see https://github.com/flow/flow/pull/6793, as well as the 0.11\n release notes, in which this value was suggested)\n \n 0.11.1 Change log\n@@ -124,7 +124,7 @@ git merge commit are mentioned.\n - #6384 `8e5a969` qt: Force TLS1.0+ for SSL connections\n - #6471 `92401c2` Depends: bump to qt 5.5\n - #6224 `93b606a` Be even stricter in processing unrequested blocks\n-- #6571 `100ac4e` libbitcoinconsensus: avoid a crash in multi-threaded environments\n+- #6571 `100ac4e` libflowconsensus: avoid a crash in multi-threaded environments\n - #6545 `649f5d9` Do not store more than 200 timedata samples.\n - #6694 `834e299` [QT] fix thin space word wrap line break issue\n - #6703 `1cd7952` Backport bugfixes to 0.11\n@@ -168,5 +168,5 @@ And those who contributed additional code review and/or security research:\n - timothy on IRC for reporting the issue\n - Vulnerability in miniupnp discovered by Aleksandar Nikolic of Cisco Talos\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/).\n "
      },
      {
        "sha": "e85043e71c3539cf1aec56799ef053c2aedfee6d",
        "filename": "doc/release-notes/release-notes-0.11.2.md",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.11.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin Core version 0.11.2 is now available from:\n+Flow Core version 0.11.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.11.2/>\n+  <https://flow.org/bin/flow-core-0.11.2/>\n \n This is a new minor version release, bringing bug fixes, the BIP65\n (CLTV) consensus change, and relay policy preparation for BIP113. It is\n recommended to upgrade to this version as soon as possible.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -18,15 +18,15 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n ------------------\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -68,24 +68,24 @@ specified point in the future.\n    blocks if they comply with the BIP65 rules for CLTV.\n \n For more information about the soft-forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/6351>\n+<https://github.com/flow/flow/pull/6351>\n \n Graphs showing the progress towards block version 4 adoption may be\n found at the URLs below:\n \n - Block versions over the last 50,000 blocks as progress towards BIP65\n-  consensus enforcement: <http://bitcoin.sipa.be/ver-50k.png>\n+  consensus enforcement: <http://flow.sipa.be/ver-50k.png>\n \n - Block versions over the last 2,000 blocks showing the days to the\n-  earliest possible BIP65 consensus-enforced block: <http://bitcoin.sipa.be/ver-2k.png>\n+  earliest possible BIP65 consensus-enforced block: <http://flow.sipa.be/ver-2k.png>\n \n-**Notice to miners:** Bitcoin Core\u2019s block templates are now for\n+**Notice to miners:** Flow Core\u2019s block templates are now for\n version 4 blocks only, and any mining software relying on its\n getblocktemplate must be updated in parallel to use libblkmaker either\n version 0.4.3 or any version from 0.5.2 onward.\n \n - If you are solo mining, this will affect you the moment you upgrade\n-  Bitcoin Core, which must be done prior to BIP65 achieving its 951/1001\n+  Flow Core, which must be done prior to BIP65 achieving its 951/1001\n   status.\n \n - If you are mining with the stratum mining protocol: this does not\n@@ -95,12 +95,12 @@ version 0.4.3 or any version from 0.5.2 onward.\n   will affect you at the pool operator\u2019s discretion, which must be no\n   later than BIP65 achieving its 951/1001 status.\n \n-[BIP65]: https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki\n+[BIP65]: https://github.com/flow/bips/blob/master/bip-0065.mediawiki\n \n BIP113 mempool-only locktime enforcement using GetMedianTimePast()\n ----------------------------------------------------------------\n \n-Bitcoin transactions currently may specify a locktime indicating when\n+Flow transactions currently may specify a locktime indicating when\n they may be added to a valid block.  Current consensus rules require\n that blocks have a block header time greater than the locktime specified\n in any transaction in that block.\n@@ -143,19 +143,19 @@ forward. To compensate, subtract one hour (3,600 seconds) from your\n locktimes to allow those transactions to be included in mempools at\n approximately the expected time.\n \n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n+[BIP113]: https://github.com/flow/bips/blob/master/bip-0113.mediawiki\n \n Windows bug fix for corrupted UTXO database on unclean shutdowns\n ----------------------------------------------------------------\n \n Several Windows users reported that they often need to reindex the\n-entire blockchain after an unclean shutdown of Bitcoin Core on Windows\n+entire blockchain after an unclean shutdown of Flow Core on Windows\n (or an unclean shutdown of Windows itself). Although unclean shutdowns\n remain unsafe, this release no longer relies on memory-mapped files for\n the UTXO database, which significantly reduced the frequency of unclean\n shutdowns leading to required reindexes during testing.\n \n-For more information, see: <https://github.com/bitcoin/bitcoin/pull/6917>\n+For more information, see: <https://github.com/flow/flow/pull/6917>\n \n Other fixes for database corruption on Windows are expected in the\n next major release.\n@@ -176,8 +176,8 @@ git merge commit are mentioned.\n - #6351 `6af25b0` Add BIP65 to getblockchaininfo softforks list\n - #6688 `01878c9` Fix locking in GetTransaction\n - #6653 `b3eaa30` [Qt] Raise debug window when requested\n-- #6600 `1e672ae` Debian/Ubuntu: Include bitcoin-tx binary\n-- #6600 `2394f4d` Debian/Ubuntu: Split bitcoin-tx into its own package\n+- #6600 `1e672ae` Debian/Ubuntu: Include flow-tx binary\n+- #6600 `2394f4d` Debian/Ubuntu: Split flow-tx into its own package\n - #5987 `33d6825` Bugfix: Allow mining on top of old tip blocks for testnet\n - #6852 `21e58b8` build: make sure OpenSSL heeds noexecstack\n - #6846 `af6edac` alias `-h` for `--help`\n@@ -214,4 +214,4 @@ Thanks to everyone who directly contributed to this release:\n \n And those who contributed additional code review and/or security research.\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "f48cd304b5ba9ab421c18388b27156f21017b170",
        "filename": "doc/release-notes/release-notes-0.12.0.md",
        "status": "modified",
        "additions": 54,
        "deletions": 54,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.12.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.12.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-Bitcoin Core version 0.12.0 is now available from:\n+Flow Core version 0.12.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.12.0/>\n+  <https://flow.org/bin/flow-core-0.12.0/>\n \n This is a new major version release, bringing new features and other improvements.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -16,8 +16,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n -----------------\n@@ -26,7 +26,7 @@ Downgrade warning\n \n Because release 0.10.0 and later makes use of headers-first synchronization and\n parallel block download (see further), the block files and databases are not\n-backwards-compatible with pre-0.10 versions of Bitcoin Core or other software:\n+backwards-compatible with pre-0.10 versions of Flow Core or other software:\n \n * Blocks will be stored on disk out of order (in the order they are\n received, really), which makes it incompatible with some tools or\n@@ -48,10 +48,10 @@ This does not affect wallet forward or backward compatibility.\n \n Because release 0.12.0 and later will obfuscate the chainstate on every\n fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n+pre-0.12 versions of Flow Core or other software.\n \n If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n+you will need to reindex when you first start Flow Core version 0.11 or\n earlier.\n \n Notable changes\n@@ -60,8 +60,8 @@ Notable changes\n Signature validation using libsecp256k1\n ---------------------------------------\n \n-ECDSA signatures inside Bitcoin transactions now use validation using\n-[libsecp256k1](https://github.com/bitcoin-core/secp256k1) instead of OpenSSL.\n+ECDSA signatures inside Flow transactions now use validation using\n+[libsecp256k1](https://github.com/flow-core/secp256k1) instead of OpenSSL.\n \n Depending on the platform, this means a significant speedup for raw signature\n validation speed. The advantage is largest on x86_64, where validation is over\n@@ -98,7 +98,7 @@ Direct headers announcement (BIP 130)\n -------------------------------------\n \n Between compatible peers, [BIP 130]\n-(https://github.com/bitcoin/bips/blob/master/bip-0130.mediawiki)\n+(https://github.com/flow/bips/blob/master/bip-0130.mediawiki)\n direct headers announcement is used. This means that blocks are advertised by\n announcing their headers directly, instead of just announcing the hash. In a\n reorganization, all new headers are sent, instead of just the new tip. This\n@@ -107,15 +107,15 @@ can often prevent an extra roundtrip before the actual block is downloaded.\n Memory pool limiting\n --------------------\n \n-Previous versions of Bitcoin Core had their mempool limited by checking\n+Previous versions of Flow Core had their mempool limited by checking\n a transaction's fees against the node's minimum relay fee. There was no\n upper bound on the size of the mempool and attackers could send a large\n number of transactions paying just slighly more than the default minimum\n relay fee to crash nodes with relatively low RAM. A temporary workaround\n-for previous versions of Bitcoin Core was to raise the default minimum\n+for previous versions of Flow Core was to raise the default minimum\n relay fee.\n \n-Bitcoin Core 0.12 will have a strict maximum size on the mempool. The\n+Flow Core 0.12 will have a strict maximum size on the mempool. The\n default value is 300 MB and can be configured with the `-maxmempool`\n parameter. Whenever a transaction would cause the mempool to exceed\n its maximum size, the transaction that (along with in-mempool descendants) has\n@@ -124,7 +124,7 @@ minimum relay feerate will be increased to match this feerate plus the initial\n minimum relay feerate. The initial minimum relay feerate is set to\n 1000 satoshis per kB.\n \n-Bitcoin Core 0.12 also introduces new default policy limits on the length and\n+Flow Core 0.12 also introduces new default policy limits on the length and\n size of unconfirmed transaction chains that are allowed in the mempool\n (generally limiting the length of unconfirmed chains to 25 transactions, with a\n total size of 101 KB).  These limits can be overriden using command line\n@@ -134,11 +134,11 @@ Opt-in Replace-by-fee transactions\n ----------------------------------\n \n It is now possible to replace transactions in the transaction memory pool of\n-Bitcoin Core 0.12 nodes. Bitcoin Core will only allow replacement of\n+Flow Core 0.12 nodes. Flow Core will only allow replacement of\n transactions which have any of their inputs' `nSequence` number set to less\n than `0xffffffff - 1`.  Moreover, a replacement transaction may only be\n accepted when it pays sufficient fee, as described in [BIP 125]\n-(https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki).\n+(https://github.com/flow/bips/blob/master/bip-0125.mediawiki).\n \n Transaction replacement can be disabled with a new command line option,\n `-mempoolreplacement=0`.  Transactions signaling replacement under BIP125 will\n@@ -156,7 +156,7 @@ updated RPC calls `gettransaction` and `listtransactions`, which now have an\n additional field in the output indicating if a transaction is replaceable under\n BIP125 (\"bip125-replaceable\").\n \n-Note that the wallet in Bitcoin Core 0.12 does not yet have support for\n+Note that the wallet in Flow Core 0.12 does not yet have support for\n creating transactions that would be replaceable under BIP 125.\n \n \n@@ -173,7 +173,7 @@ overridden with the option `-rpccookiefile`.\n This is similar to Tor's CookieAuthentication: see\n https://www.torproject.org/docs/tor-manual.html.en\n \n-This allows running bitcoind without having to do any manual configuration.\n+This allows running flowd without having to do any manual configuration.\n \n Relay: Any sequence of pushdatas in OP_RETURN outputs now allowed\n -----------------------------------------------------------------\n@@ -196,14 +196,14 @@ returned (previously all relevant hashes were returned).\n Relay and Mining: Priority transactions\n ---------------------------------------\n \n-Bitcoin Core has a heuristic 'priority' based on coin value and age. This\n+Flow Core has a heuristic 'priority' based on coin value and age. This\n calculation is used for relaying of transactions which do not pay the\n minimum relay fee, and can be used as an alternative way of sorting\n-transactions for mined blocks. Bitcoin Core will relay transactions with\n+transactions for mined blocks. Flow Core will relay transactions with\n insufficient fees depending on the setting of `-limitfreerelay=<r>` (default:\n `r=15` kB per minute) and `-blockprioritysize=<s>`.\n \n-In Bitcoin Core 0.12, when mempool limit has been reached a higher minimum\n+In Flow Core 0.12, when mempool limit has been reached a higher minimum\n relay fee takes effect to limit memory usage. Transactions which do not meet\n this higher effective minimum relay fee will not be relayed or mined even if\n they rank highly according to the priority heuristic.\n@@ -224,7 +224,7 @@ Note, however, that if mining priority transactions is left disabled, the\n priority delta will be ignored and only the fee metric will be effective.\n \n This internal automatic prioritization handling is being considered for removal\n-entirely in Bitcoin Core 0.13, and it is at this time undecided whether the\n+entirely in Flow Core 0.13, and it is at this time undecided whether the\n more accurate priority calculation for chained unconfirmed transactions will be\n restored. Community direction on this topic is particularly requested to help\n set project priorities.\n@@ -234,23 +234,23 @@ Automatically use Tor hidden services\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Flow Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authorization is available),\n-Bitcoin Core automatically creates a hidden service to listen on, without\n-manual configuration. Bitcoin Core will also use Tor automatically to connect\n+Flow Core automatically creates a hidden service to listen on, without\n+manual configuration. Flow Core will also use Tor automatically to connect\n to other .onion nodes if the control socket can be successfully opened. This\n will positively affect the number of available .onion nodes and their usage.\n \n-This new feature is enabled by default if Bitcoin Core is listening, and\n+This new feature is enabled by default if Flow Core is listening, and\n a connection to Tor can be made. It can be configured with the `-listenonion`,\n `-torcontrol` and `-torpassword` settings. To show verbose debugging\n information, pass `-debug=tor`.\n \n Notifications through ZMQ\n -------------------------\n \n-Bitcoind can now (optionally) asynchronously notify clients through a\n+Flowd can now (optionally) asynchronously notify clients through a\n ZMQ-based PUB socket of the arrival of new transactions and blocks.\n This feature requires installation of the ZMQ C API library 4.x and\n configuring its use through the command line or configuration file.\n@@ -263,8 +263,8 @@ Various improvements have been made to how the wallet calculates\n transaction fees.\n \n Users can decide to pay a predefined fee rate by setting `-paytxfee=<n>`\n-(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Bitcoin\n-Core to use floating fees. By default, Bitcoin Core will use floating\n+(or `settxfee <n>` rpc during runtime). A value of `n=0` signals Flow\n+Core to use floating fees. By default, Flow Core will use floating\n fees.\n \n Based on past transaction data, floating fees approximate the fees\n@@ -273,11 +273,11 @@ with `-txconfirmtarget=<m>` (default: `2`).\n \n Sometimes, it is not possible to give good estimates, or an estimate\n at all. Therefore, a fallback value can be set with `-fallbackfee=<f>`\n-(default: `0.0002` BTC/kB).\n+(default: `0.0002` FLW/kB).\n \n-At all times, Bitcoin Core will cap fees at `-maxtxfee=<x>` (default:\n-0.10) BTC.\n-Furthermore, Bitcoin Core will never create transactions paying less than\n+At all times, Flow Core will cap fees at `-maxtxfee=<x>` (default:\n+0.10) FLW.\n+Furthermore, Flow Core will never create transactions paying less than\n the current minimum relay fee.\n Finally, a user can set the minimum fee rate for all transactions with\n `-mintxfee=<i>`, which defaults to 1000 satoshis per kB.\n@@ -320,7 +320,7 @@ However, rescans as well as the RPCs `importwallet`, `importaddress`,\n `importprivkey` are disabled.\n \n To enable block pruning set `prune=<N>` on the command line or in\n-`bitcoin.conf`, where `N` is the number of MiB to allot for\n+`flow.conf`, where `N` is the number of MiB to allot for\n raw block & undo data.\n \n A value of 0 disables pruning. The minimal value above 0 is 550. Your\n@@ -331,13 +331,13 @@ practice. In future releases, a higher value may also help the network\n as a whole: stored blocks could be served to other nodes.\n \n For further information about pruning, you may also consult the [release\n-notes of v0.11.0](https://github.com/bitcoin/bitcoin/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n+notes of v0.11.0](https://github.com/flow/flow/blob/v0.11.0/doc/release-notes.md#block-file-pruning).\n \n `NODE_BLOOM` service bit\n ------------------------\n \n Support for the `NODE_BLOOM` service bit, as described in [BIP\n-111](https://github.com/bitcoin/bips/blob/master/bip-0111.mediawiki), has been\n+111](https://github.com/flow/bips/blob/master/bip-0111.mediawiki), has been\n added to the P2P protocol code.\n \n BIP 111 defines a service bit to allow peers to advertise that they support\n@@ -369,7 +369,7 @@ RPC: Low-level API changes\n * The `asm` property of each scriptSig now contains the decoded signature hash\n   type for each signature that provides a valid defined hash type.\n \n-* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+* OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP 65](https://github.com/flow/bips/blob/master/bip-0065.mediawiki)\n \n The following items contain assembly representations of scriptSig signatures\n and are affected by this change:\n@@ -379,7 +379,7 @@ and are affected by this change:\n - RPC `decodescript`\n - REST `/rest/tx/` (JSON format)\n - REST `/rest/block/` (JSON format when including extended tx details)\n-- `bitcoin-tx -json`\n+- `flow-tx -json`\n \n For example, the `scriptSig.asm` property of a transaction input that\n previously showed an assembly representation of:\n@@ -429,16 +429,16 @@ caching. A sample config for apache2 could look like:\n     SSLCertificateFile /etc/apache2/ssl/server.crt\n     SSLCertificateKeyFile /etc/apache2/ssl/server.key\n \n-    <Location /bitcoinrpc>\n+    <Location /flowrpc>\n         ProxyPass http://127.0.0.1:8332/\n         ProxyPassReverse http://127.0.0.1:8332/\n         # optional enable digest auth\n         # AuthType Digest\n         # ...\n \n-        # optional bypass bitcoind rpc basic auth\n+        # optional bypass flowd rpc basic auth\n         # RequestHeader set Authorization \"Basic <hash>\"\n-        # get the <hash> from the shell with: base64 <<< bitcoinrpc:<password>\n+        # get the <hash> from the shell with: base64 <<< flowrpc:<password>\n     </Location>\n \n     # Or, balance the load:\n@@ -459,7 +459,7 @@ Other P2P Changes\n -----------------\n \n The list of banned peers is now stored on disk rather than in memory.\n-Restarting bitcoind will no longer clear out the list of banned peers; instead\n+Restarting flowd will no longer clear out the list of banned peers; instead\n a new RPC call (`clearbanned`) can be used to manually clear the list.  The new\n `setban` RPC call can also be used to manually ban or unban a peer.\n \n@@ -637,14 +637,14 @@ git merge commit are mentioned.\n ### Build system\n \n - #6210 `0e4f2a0` build: disable optional use of gmp in internal secp256k1 build (Wladimir J. van der Laan)\n-- #6214 `87406aa` [OSX] revert renaming of Bitcoin-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n+- #6214 `87406aa` [OSX] revert renaming of Flow-Qt.app and use CFBundleDisplayName (partial revert of #6116) (Jonas Schnelli)\n - #6218 `9d67b10` build/gitian misc updates (Cory Fields)\n-- #6269 `d4565b6` gitian: Use the new bitcoin-detached-sigs git repo for OSX signatures (Cory Fields)\n+- #6269 `d4565b6` gitian: Use the new flow-detached-sigs git repo for OSX signatures (Cory Fields)\n - #6418 `d4a910c` Add autogen.sh to source tarball. (randy-waterhouse)\n - #6373 `1ae3196` depends: non-qt bumps for 0.12 (Cory Fields)\n - #6434 `059b352` Preserve user-passed CXXFLAGS with --enable-debug (Gavin Andresen)\n - #6501 `fee6554` Misc build fixes (Cory Fields)\n-- #6600 `ef4945f` Include bitcoin-tx binary on Debian/Ubuntu (Zak Wilcox)\n+- #6600 `ef4945f` Include flow-tx binary on Debian/Ubuntu (Zak Wilcox)\n - #6619 `4862708` depends: bump miniupnpc and ccache (Michael Ford)\n - #6801 `ae69a75` [depends] Latest config.guess and config.sub (Michael Ford)\n - #6938 `193f7b5` build: If both Qt4 and Qt5 are installed, use Qt5 (Wladimir J. van der Laan)\n@@ -719,7 +719,7 @@ git merge commit are mentioned.\n - #6337 `0564c5b` Testing infrastructure: mocktime fixes (Gavin Andresen)\n - #6350 `60abba1` add unit tests for the decodescript rpc (mruddy)\n - #5881 `3203a08` Fix and improve txn_doublespend.py test (Tom Harding)\n-- #6390 `6a73d66` tests: Fix bitcoin-tx signing test case (Wladimir J. van der Laan)\n+- #6390 `6a73d66` tests: Fix flow-tx signing test case (Wladimir J. van der Laan)\n - #6368 `7fc25c2` CLTV: Add more tests to improve coverage (Esteban Ordano)\n - #6414 `5121c68` Fix intermittent test failure, reduce test time (Tom Harding)\n - #6417 `44fa82d` [QA] fix possible reorg issue in (fund)rawtransaction(s).py RPC test (Jonas Schnelli)\n@@ -732,7 +732,7 @@ git merge commit are mentioned.\n - #6509 `bb4faee` Fix race condition on test node shutdown (Casey Rodarmor)\n - #6523 `561f8af` Add p2p-fullblocktest.py (Casey Rodarmor)\n - #6590 `981fd92` Fix stale socket rebinding and re-enable python tests for Windows (Cory Fields)\n-- #6730 `cb4d6d0` build: Remove dependency of bitcoin-cli on secp256k1 (Wladimir J. van der Laan)\n+- #6730 `cb4d6d0` build: Remove dependency of flow-cli on secp256k1 (Wladimir J. van der Laan)\n - #6616 `5ab5dca` Regression Tests: Migrated rpc-tests.sh to all Python rpc-tests.py (Peter Tschipper)\n - #6720 `d479311` Creates unittests for addrman, makes addrman more testable. (Ethan Heilman)\n - #6853 `c834f56` Added fPowNoRetargeting field to Consensus::Params (Eric Lombrozo)\n@@ -750,7 +750,7 @@ git merge commit are mentioned.\n - #7063 `6abf6eb` [Tests] Add prioritisetransaction RPC test (Suhas Daftuar)\n - #7137 `16f4a6e` Tests: Explicitly set chain limits in replace-by-fee test (Suhas Daftuar)\n - #7216 `9572e49` Removed offline testnet DNSSeed 'alexykot.me'. (tnull)\n-- #7209 `f3ad812` test: don't override BITCOIND and BITCOINCLI if they're set (Wladimir J. van der Laan)\n+- #7209 `f3ad812` test: don't override FLOWD and FLOWCLI if they're set (Wladimir J. van der Laan)\n - #7226 `301f16a` Tests: Add more tests to p2p-fullblocktest (Suhas Daftuar)\n - #7153 `9ef7c54` [Tests] Add mempool_limit.py test (Jonas Schnelli)\n - #7170 `453c567` tests: Disable Tor interaction (Wladimir J. van der Laan)\n@@ -764,15 +764,15 @@ git merge commit are mentioned.\n - #5975 `1fea667` Consensus: Decouple ContextualCheckBlockHeader from checkpoints (Jorge Tim\u00f3n)\n - #6061 `eba2f06` Separate Consensus::CheckTxInputs and GetSpendHeight in CheckInputs (Jorge Tim\u00f3n)\n - #5994 `786ed11` detach wallet from miner (Jonas Schnelli)\n-- #6387 `11576a5` [bitcoin-cli] improve error output (Jonas Schnelli)\n-- #6401 `6db53b4` Add BITCOIND_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n-- #6430 `b01981e` doc: add documentation for shared library libbitcoinconsensus (Braydon Fuller)\n+- #6387 `11576a5` [flow-cli] improve error output (Jonas Schnelli)\n+- #6401 `6db53b4` Add FLOWD_SIGTERM_TIMEOUT to OpenRC init scripts (Florian Schmaus)\n+- #6430 `b01981e` doc: add documentation for shared library libflowconsensus (Braydon Fuller)\n - #6372 `dcc495e` Update Linearize tool to support Windows paths; fix variable scope; update README and example configuration (Paul Georgiou)\n - #6453 `8fe5cce` Separate core memory usage computation in core_memusage.h (Pieter Wuille)\n - #6149 `633fe10` Buffer log messages and explicitly open logs (Adam Weiss)\n - #6488 `7cbed7f` Avoid leaking file descriptors in RegisterLoad (Casey Rodarmor)\n - #6497 `a2bf40d` Make sure LogPrintf strings are line-terminated (Wladimir J. van der Laan)\n-- #6504 `b6fee6b` Rationalize currency unit to \"BTC\" (Ross Nicoll)\n+- #6504 `b6fee6b` Rationalize currency unit to \"FLW\" (Ross Nicoll)\n - #6507 `9bb4dd8` Removed contrib/bitrpc (Casey Rodarmor)\n - #6527 `41d650f` Use unique name for AlertNotify tempfile (Casey Rodarmor)\n - #6561 `e08a7d9` limitedmap fixes and tests (Casey Rodarmor)\n@@ -891,4 +891,4 @@ Thanks to everyone who directly contributed to this release:\n - Zak Wilcox\n - zathras-crypto\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "4d3e597a8b6d881b87a4f84f0a85bc5c02b0bf66",
        "filename": "doc/release-notes/release-notes-0.12.1.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.12.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.12.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.12.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.12.1 is now available from:\n+Flow Core version 0.12.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.12.1/>\n+  <https://flow.org/bin/flow-core-0.12.1/>\n \n This is a new minor version release, including the BIP9, BIP68 and BIP112\n softfork, various bugfixes and updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n Upgrading and downgrading\n =========================\n@@ -17,8 +17,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Downgrade warning\n -----------------\n@@ -27,10 +27,10 @@ Downgrade warning\n \n Because release 0.12.0 and later will obfuscate the chainstate on every\n fresh sync or reindex, the chainstate is not backwards-compatible with\n-pre-0.12 versions of Bitcoin Core or other software.\n+pre-0.12 versions of Flow Core or other software.\n \n If you want to downgrade after you have done a reindex with 0.12.0 or later,\n-you will need to reindex when you first start Bitcoin Core version 0.11 or\n+you will need to reindex when you first start Flow Core version 0.11 or\n earlier.\n \n Notable changes\n@@ -49,15 +49,15 @@ bits together with setting bit 0 to indicate support for this combined\n deployment, shown as \"csv\" in the `getblockchaininfo` RPC call.\n \n For more information about the soft forking change, please see\n-<https://github.com/bitcoin/bitcoin/pull/7648>\n+<https://github.com/flow/flow/pull/7648>\n \n This specific backport pull-request can be viewed at\n-<https://github.com/bitcoin/bitcoin/pull/7543>\n+<https://github.com/flow/flow/pull/7543>\n \n-[BIP9]: https://github.com/bitcoin/bips/blob/master/bip-0009.mediawiki\n-[BIP68]: https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki\n-[BIP112]: https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki\n-[BIP113]: https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki\n+[BIP9]: https://github.com/flow/bips/blob/master/bip-0009.mediawiki\n+[BIP68]: https://github.com/flow/bips/blob/master/bip-0068.mediawiki\n+[BIP112]: https://github.com/flow/bips/blob/master/bip-0112.mediawiki\n+[BIP113]: https://github.com/flow/bips/blob/master/bip-0113.mediawiki\n \n BIP68 soft fork to enforce sequence locks for relative locktime\n ---------------------------------------------------------------\n@@ -68,27 +68,27 @@ invalid for a defined period of time after confirmation of its corresponding\n outpoint.\n \n For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7184>\n+<https://github.com/flow/flow/pull/7184>\n \n BIP112 soft fork to enforce OP_CHECKSEQUENCEVERIFY\n --------------------------------------------------\n \n [BIP112][] redefines the existing OP_NOP3 as OP_CHECKSEQUENCEVERIFY (CSV)\n-for a new opcode in the Bitcoin scripting system that in combination with\n+for a new opcode in the Flow scripting system that in combination with\n [BIP68][] allows execution pathways of a script to be restricted based\n on the age of the output being spent.\n \n For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/7524>\n+<https://github.com/flow/flow/pull/7524>\n \n BIP113 locktime enforcement soft fork\n -------------------------------------\n \n-Bitcoin Core 0.11.2 previously introduced mempool-only locktime\n+Flow Core 0.11.2 previously introduced mempool-only locktime\n enforcement using GetMedianTimePast(). This release seeks to\n consensus enforce the rule.\n \n-Bitcoin transactions currently may specify a locktime indicating when\n+Flow transactions currently may specify a locktime indicating when\n they may be added to a valid block.  Current consensus rules require\n that blocks have a block header time greater than the locktime specified\n in any transaction in that block.\n@@ -132,7 +132,7 @@ locktimes to allow those transactions to be included in mempools at\n approximately the expected time.\n \n For more information about the implementation, see\n-<https://github.com/bitcoin/bitcoin/pull/6566>\n+<https://github.com/flow/flow/pull/6566>\n \n Miscellaneous\n -------------\n@@ -194,5 +194,5 @@ Thanks to everyone who directly contributed to this release:\n - Suhas Daftuar\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/).\n "
      },
      {
        "sha": "0432c94e449f2fe1e362ac63b2bd22e30a163235",
        "filename": "doc/release-notes/release-notes-0.13.0.md",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,28 +1,28 @@\n-Bitcoin Core version 0.13.0 is now available from:\n+Flow Core version 0.13.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.13.0/>\n+  <https://flow.org/bin/flow-core-0.13.0/>\n \n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n+updates will be released anymore. Without security updates, using a flow\n wallet on a XP machine is irresponsible at least.\n \n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+In addition to that, with 0.12.x there have been varied reports of Flow Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/flow/flow/issues/7681#issuecomment-217439891)\n what the source of these crashes is, but it is likely that upstream\n libraries such as Qt are no longer being tested on XP.\n \n@@ -48,21 +48,21 @@ For this reason the default was changed to 300 MiB in this release.\n For nodes on low-memory systems, the database cache can be changed back to\n 100 MiB (or to another value) by either:\n \n-- Adding `dbcache=100` in bitcoin.conf\n+- Adding `dbcache=100` in flow.conf\n - Changing it in the GUI under `Options \u2192 Size of database cache`\n \n Note that the database cache setting has the most performance impact\n during initial sync of a node, and when catching up after downtime.\n \n \n-bitcoin-cli: arguments privacy\n+flow-cli: arguments privacy\n ------------------------------\n \n The RPC command line client gained a new argument, `-stdin`\n to read extra arguments from standard input, one per line until EOF/Ctrl-D.\n For example:\n \n-    $ src/bitcoin-cli -stdin walletpassphrase\n+    $ src/flow-cli -stdin walletpassphrase\n     mysecretcode\n     120\n     ..... press Ctrl-D here to end input\n@@ -76,7 +76,7 @@ table by any user on the system.\n C++11 and Python 3\n ------------------\n \n-Various code modernizations have been done. The Bitcoin Core code base has\n+Various code modernizations have been done. The Flow Core code base has\n started using C++11. This means that a C++11-capable compiler is now needed for\n building. Effectively this means GCC 4.7 or higher, or Clang 3.3 or higher.\n \n@@ -95,9 +95,9 @@ executables.\n \n The following extra files can be found in the download directory or torrent:\n \n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n+- `flow-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n   the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n+- `flow-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n   the 64-bit ARMv8-A architecture.\n \n ARM builds are still experimental. If you have problems on a certain device or\n@@ -122,7 +122,7 @@ in PR 8068.\n The primary goal is reducing the bandwidth spikes at relay time, though in many\n cases it also reduces propagation delay. It is automatically enabled between\n compatible peers.\n-[BIP 152](https://github.com/bitcoin/bips/blob/master/bip-0152.mediawiki)\n+[BIP 152](https://github.com/flow/bips/blob/master/bip-0152.mediawiki)\n \n As a side-effect, ordinary non-mining nodes will download and upload blocks\n faster if those blocks were produced by miners using similar transaction\n@@ -156,23 +156,23 @@ You can't disable HD key generation once you have created a HD wallet.\n \n There is no distinction between internal (change) and external keys.\n \n-HD wallets are incompatible with older versions of Bitcoin Core.\n+HD wallets are incompatible with older versions of Flow Core.\n \n-[Pull request](https://github.com/bitcoin/bitcoin/pull/8035/files), [BIP 32](https://github.com/bitcoin/bips/blob/master/bip-0032.mediawiki)\n+[Pull request](https://github.com/flow/flow/pull/8035/files), [BIP 32](https://github.com/flow/bips/blob/master/bip-0032.mediawiki)\n \n \n Segregated Witness\n ------------------\n \n The code preparations for Segregated Witness (\"segwit\"), as described in [BIP\n-141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki), [BIP\n-143](https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki), [BIP\n-144](https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki), and [BIP\n-145](https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki) are\n+141](https://github.com/flow/bips/blob/master/bip-0141.mediawiki), [BIP\n+143](https://github.com/flow/bips/blob/master/bip-0143.mediawiki), [BIP\n+144](https://github.com/flow/bips/blob/master/bip-0144.mediawiki), and [BIP\n+145](https://github.com/flow/bips/blob/master/bip-0145.mediawiki) are\n finished and included in this release.  However, BIP 141 does not yet specify\n activation parameters on mainnet, and so this release does not support segwit\n use on mainnet.  Testnet use is supported, and after BIP 141 is updated with\n-proposed parameters, a future release of Bitcoin Core is expected that\n+proposed parameters, a future release of Flow Core is expected that\n implements those parameters for mainnet.\n \n Furthermore, because segwit activation is not yet specified for mainnet,\n@@ -199,7 +199,7 @@ The command line option `-blockmaxsize` remains an option to specify the\n maximum number of serialized bytes in a generated block.  In addition, the new\n command line option `-blockmaxweight` has been added, which specifies the\n maximum \"block weight\" of a generated block, as defined by [BIP 141 (Segregated\n-Witness)] (https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki).\n+Witness)] (https://github.com/flow/bips/blob/master/bip-0141.mediawiki).\n \n In preparation for Segregated Witness, the mining algorithm has been modified\n to optimize transaction selection for a given block weight, rather than a given\n@@ -216,7 +216,7 @@ support `-blockmaxsize` performs additional computation to ensure that\n constraint is met.  (Note that for mainnet, in this release, the equivalent\n parameter for `-blockmaxweight` would be four times the desired\n `-blockmaxsize`.  See [BIP 141]\n-(https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki) for additional\n+(https://github.com/flow/bips/blob/master/bip-0141.mediawiki) for additional\n details.)\n \n In the future, the `-blockmaxsize` option may be removed, as block creation is\n@@ -232,7 +232,7 @@ files on disk. These two have now been split up, so that all blocks are known\n before validation starts. This was necessary to make certain optimizations that\n are available during normal synchronizations also available during reindexing.\n \n-The two phases are distinct in the Bitcoin-Qt GUI. During the first one,\n+The two phases are distinct in the Flow-Qt GUI. During the first one,\n \"Reindexing blocks on disk\" is shown. During the second (slower) one,\n \"Processing blocks on disk\" is shown.\n \n@@ -277,7 +277,7 @@ Low-level P2P changes\n - The optional new p2p message \"feefilter\" is implemented and the protocol\n   version is bumped to 70013. Upon receiving a feefilter message from a peer,\n   a node will not send invs for any transactions which do not meet the filter\n-  feerate. [BIP 133](https://github.com/bitcoin/bips/blob/master/bip-0133.mediawiki)\n+  feerate. [BIP 133](https://github.com/flow/bips/blob/master/bip-0133.mediawiki)\n \n - The P2P alert system has been removed in PR #7692 and the `alert` P2P message\n   is no longer supported.\n@@ -326,10 +326,10 @@ Low-level RPC changes\n - Asm script outputs replacements for OP_NOP2 and OP_NOP3\n \n   - OP_NOP2 has been renamed to OP_CHECKLOCKTIMEVERIFY by [BIP \n-65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki)\n+65](https://github.com/flow/bips/blob/master/bip-0065.mediawiki)\n \n   - OP_NOP3 has been renamed to OP_CHECKSEQUENCEVERIFY by [BIP \n-112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki)\n+112](https://github.com/flow/bips/blob/master/bip-0112.mediawiki)\n \n   - The following outputs are affected by this change:\n \n@@ -338,7 +338,7 @@ Low-level RPC changes\n     - RPC `decodescript`\n     - REST `/rest/tx/` (JSON format)\n     - REST `/rest/block/` (JSON format when including extended tx details)\n-    - `bitcoin-tx -json`\n+    - `flow-tx -json`\n \n - The sorting of the output of the `getrawmempool` output has changed.\n \n@@ -358,7 +358,7 @@ Low-level ZMQ changes\n   listeners to detect lost notifications.\n   The sequence number is always the last element in a multi-part ZMQ notification and\n   therefore backward compatible. Each message type has its own counter.\n-  PR [#7762](https://github.com/bitcoin/bitcoin/pull/7762).\n+  PR [#7762](https://github.com/flow/flow/pull/7762).\n \n \n 0.13.0 Change log\n@@ -375,7 +375,7 @@ git merge commit are mentioned.\n - #7326 `2cd004b` Fix typo, wrong information in gettxout help text (paveljanik)\n - #7222 `82429d0` Indicate which transactions are signaling opt-in RBF (sdaftuar)\n - #7480 `b49a623` Changed getnetworkhps value to double to avoid overflow (instagibbs)\n-- #7550 `8b958ab` Input-from-stdin mode for bitcoin-cli (laanwj)\n+- #7550 `8b958ab` Input-from-stdin mode for flow-cli (laanwj)\n - #7670 `c9a1265` Use cached block hash in blockToJSON() (rat4)\n - #7726 `9af69fa` Correct importaddress help reference to importpubkey (CypherGrue)\n - #7766 `16555b6` Register calls where they are defined (laanwj)\n@@ -395,7 +395,7 @@ git merge commit are mentioned.\n - #7967 `8c1e49b` Add feerate option to `fundrawtransaction` (jonasschnelli)\n - #8118 `9b6a48c` Reduce unnecessary hashing in `signrawtransaction` (jonasnick)\n - #7957 `79004d4` Add support for transaction sequence number (jonasschnelli)\n-- #8153 `75ec320` `fundrawtransaction` feeRate: Use BTC/kB (MarcoFalke)\n+- #8153 `75ec320` `fundrawtransaction` feeRate: Use FLW/kB (MarcoFalke)\n - #7292 `7ce9ac5` Expose ancestor/descendant information over RPC (sdaftuar)\n - #8171 `62fcf27` Fix createrawtx sequence number unsigned int parsing (jonasschnelli)\n - #7892 `9c3d0fa` Add full UTF-8 support to RPC (laanwj)\n@@ -540,7 +540,7 @@ git merge commit are mentioned.\n - #7604 `354b03d` build: Remove spurious dollar sign. Fixes #7189 (dooglus)\n - #7605 `7f001bd` Remove openssl info from init/log and from Qt debug window (jonasschnelli)\n - #7628 `87d6562` Add 'copy full transaction details' option (ericshawlinux)\n-- #7613 `3798e5d` Add autocomplete to bitcoin-qt's console window (GamerSg)\n+- #7613 `3798e5d` Add autocomplete to flow-qt's console window (GamerSg)\n - #7668 `b24266c` Fix history deletion bug after font size change (achow101)\n - #7680 `41d2dfa` Remove reflection from `about` icon (laanwj)\n - #7686 `f034bce` Remove 0-fee from send dialog (MarcoFalke)\n@@ -557,13 +557,13 @@ git merge commit are mentioned.\n - #8014 `77b49ac` Sort transactions by date (Tyler-Hardin)\n - #8073 `eb2f6f7` askpassphrasedialog: Clear pass fields on accept (rat4)\n - #8129 `ee1533e` Fix RPC console auto completer (UdjinM6)\n-- #7636 `fb0ac48` Add bitcoin address label to request payment QR code (makevoid)\n+- #7636 `fb0ac48` Add flow address label to request payment QR code (makevoid)\n - #8231 `760a6c7` Fix a bug where the SplashScreen will not be hidden during startup (jonasschnelli)\n-- #8256 `af2421c` BUG: bitcoin-qt crash (fsb4000)\n-- #8257 `ff03c50` Do not ask a UI question from bitcoind (sipa)\n+- #8256 `af2421c` BUG: flow-qt crash (fsb4000)\n+- #8257 `ff03c50` Do not ask a UI question from flowd (sipa)\n - #8288 `91abb77` Network-specific example address (laanwj)\n - #7707 `a914968` UI support for abandoned transactions (jonasschnelli)\n-- #8207 `f7a403b` Add a link to the Bitcoin-Core repository and website to the About Dialog (MarcoFalke)\n+- #8207 `f7a403b` Add a link to the Flow-Core repository and website to the About Dialog (MarcoFalke)\n - #8281 `6a87eb0` Remove client name from debug window (laanwj)\n - #8407 `45eba4b` Add dbcache migration path (jonasschnelli)\n \n@@ -650,7 +650,7 @@ git merge commit are mentioned.\n - #8038 `e2bf830` Various minor fixes (MarcoFalke)\n - #8072 `1b87e5b` Travis: 'make check' in parallel and verbose (theuni)\n - #8056 `8844ef1` Remove hardcoded \"4 nodes\" from test_framework (MarcoFalke)\n-- #8047 `37f9a1f` Test_framework: Set wait-timeout for bitcoind procs (MarcoFalke)\n+- #8047 `37f9a1f` Test_framework: Set wait-timeout for flowd procs (MarcoFalke)\n - #8095 `6700cc9` Test framework: only cleanup on successful test runs (sdaftuar)\n - #8098 `06bd4f6` Test_framework: Append portseed to tmpdir (MarcoFalke)\n - #8104 `6ff2c8d` Add timeout to sync_blocks() and sync_mempools() (sdaftuar)\n@@ -660,7 +660,7 @@ git merge commit are mentioned.\n - #8090 `a2df115` Adding P2SH(p2pkh) script test case (Christewart)\n - #7992 `ec45cc5` Extend #7956 with one more test (TheBlueMatt)\n - #8139 `ae5575b` Fix interrupted HTTP RPC connection workaround for Python 3.5+ (sipa)\n-- #8164 `0f24eaf` [Bitcoin-Tx] fix missing test fixtures, fix 32bit atoi issue (jonasschnelli)\n+- #8164 `0f24eaf` [Flow-Tx] fix missing test fixtures, fix 32bit atoi issue (jonasschnelli)\n - #8166 `0b5279f` Src/test: Do not shadow local variables (paveljanik)\n - #8141 `44c1b1c` Continuing port of java comparison tool (mrbandrews)\n - #8201 `36b7400` fundrawtransaction: Fix race, assert amounts (MarcoFalke)\n@@ -670,7 +670,7 @@ git merge commit are mentioned.\n - #8216 `0d41d70` Assert 'changePosition out of bounds'  (MarcoFalke)\n - #8222 `961893f` Enable mempool consistency checks in unit tests (sipa)\n - #7751 `84370d5` test_framework: python3.4 authproxy compat (laanwj)\n-- #7744 `d8e862a` test_framework: detect failure of bitcoind startup (laanwj)\n+- #7744 `d8e862a` test_framework: detect failure of flowd startup (laanwj)\n - #8280 `115735d` Increase sync_blocks() timeouts in pruning.py (MarcoFalke)\n - #8340 `af9b7a9` Solve trivial merge conflict in p2p-segwit.py (MarcoFalke)\n - #8067 `3e4cf8f` Travis: use slim generic image, and some fixups (theuni)\n@@ -707,7 +707,7 @@ git merge commit are mentioned.\n - #7791 `e30a5b0` Change Precise to Trusty in gitian-building.md (JeremyRand)\n - #7838 `8bb5d3d` Update gitian build guide to debian 8.4.0 (fanquake)\n - #7855 `b778e59` Replace precise with trusty (MarcoFalke)\n-- #7975 `fc23fee` Update bitcoin-core GitHub links (MarcoFalke)\n+- #7975 `fc23fee` Update flow-core GitHub links (MarcoFalke)\n - #8034 `e3a8207` Add basic git squash workflow (fanquake)\n - #7813 `214ec0b` Update port in tor.md (MarcoFalke)\n - #8193 `37c9830` Use Debian 8.5 in the gitian-build guide (fanquake)\n@@ -865,4 +865,4 @@ Thanks to everyone who directly contributed to this release:\n - Wladimir J. van der Laan\n - Yuri Zhykin\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "b551f8baa5bd9940f9b3807ec7bd6316012593c0",
        "filename": "doc/release-notes/release-notes-0.13.1.md",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,29 +1,29 @@\n-Bitcoin Core version 0.13.1 is now available from:\n+Flow Core version 0.13.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.13.1/>\n+  <https://flow.org/bin/flow-core-0.13.1/>\n \n This is a new minor version release, including activation parameters for the\n segwit softfork, various bugfixes and performance improvements, as well as\n updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n+updates will be released anymore. Without security updates, using a flow\n wallet on a XP machine is irresponsible at least.\n \n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+In addition to that, with 0.12.x there have been varied reports of Flow Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/flow/flow/issues/7681#issuecomment-217439891)\n what the source of these crashes is, but it is likely that upstream\n libraries such as Qt are no longer being tested on XP.\n \n@@ -56,9 +56,9 @@ covered by the txid. This provides several immediate benefits:\n   identifier (txid) of transactions without referencing the witness, which can\n   sometimes be changed by third-parties (such as miners) or by co-signers in a\n   multisig spend. This solves all known cases of unwanted transaction\n-  malleability, which is a problem that makes programming Bitcoin wallet\n+  malleability, which is a problem that makes programming Flow wallet\n   software more difficult and which seriously complicates the design of smart\n-  contracts for Bitcoin.\n+  contracts for Flow.\n \n - **Capacity increase:** Segwit transactions contain new fields that are not\n   part of the data currently used to calculate the size of a block, which\n@@ -72,7 +72,7 @@ covered by the txid. This provides several immediate benefits:\n   following section for details).\n \n - **Weighting data based on how it affects node performance:** Some parts of\n-  each Bitcoin block need to be stored by nodes in order to validate future\n+  each Flow block need to be stored by nodes in order to validate future\n   blocks; other parts of a block can be immediately forgotten (pruned) or used\n   only for helping other nodes sync their copy of the block chain.  One large\n   part of the immediately prunable data are transaction signatures (witnesses),\n@@ -89,8 +89,8 @@ covered by the txid. This provides several immediate benefits:\n   (such as hardware wallets), reduces the amount of data the signature\n   generator needs to download, and allows the signature generator to operate\n   more quickly.  This is made possible by having the generator sign the amount\n-  of bitcoins they think they are spending, and by having full nodes refuse to\n-  accept those signatures unless the amount of bitcoins being spent is exactly\n+  of flows they think they are spending, and by having full nodes refuse to\n+  accept those signatures unless the amount of flows being spent is exactly\n   the same as was signed.  For non-segwit transactions, wallets instead had to\n   download the complete previous transactions being spent for every payment\n   they made, which could be a slow operation on hardware wallets and in other\n@@ -105,7 +105,7 @@ covered by the txid. This provides several immediate benefits:\n   different signature method that doesn't suffer from this problem and doesn't\n   have any unwanted side-effects.\n \n-- **Increased security for multisig:** Bitcoin addresses (both P2PKH addresses\n+- **Increased security for multisig:** Flow addresses (both P2PKH addresses\n   that start with a '1' and P2SH addresses that start with a '3') use a hash\n   function known as RIPEMD-160.  For P2PKH addresses, this provides about 160\n   bits of security---which is beyond what cryptographers believe can be broken\n@@ -115,34 +115,34 @@ covered by the txid. This provides several immediate benefits:\n   Segwit allows advanced transactions to use the SHA256 hash function instead,\n   which provides about 128 bits of security  (that is 281 trillion times as\n   much security as 80 bits and is equivalent to the maximum bits of security\n-  believed to be provided by Bitcoin's choice of parameters for its Elliptic\n+  believed to be provided by Flow's choice of parameters for its Elliptic\n   Curve Digital Security Algorithm [ECDSA].)\n \n - **More efficient almost-full-node security** Satoshi Nakamoto's original\n-  Bitcoin paper describes a method for allowing newly-started full nodes to\n+  Flow paper describes a method for allowing newly-started full nodes to\n   skip downloading and validating some data from historic blocks that are\n   protected by large amounts of proof of work.  Unfortunately, Nakamoto's\n   method can't guarantee that a newly-started node using this method will\n-  produce an accurate copy of Bitcoin's current ledger (called the UTXO set),\n+  produce an accurate copy of Flow's current ledger (called the UTXO set),\n   making the node vulnerable to falling out of consensus with other nodes.\n   Although the problems with Nakamoto's method can't be fixed in a soft fork,\n   Segwit accomplishes something similar to his original proposal: it makes it\n   possible for a node to optionally skip downloading some blockchain data\n   (specifically, the segregated witnesses) while still ensuring that the node\n   can build an accurate copy of the UTXO set for the block chain with the most\n   proof of work.  Segwit enables this capability at the consensus layer, but\n-  note that Bitcoin Core does not provide an option to use this capability as\n+  note that Flow Core does not provide an option to use this capability as\n   of this 0.13.1 release.\n \n - **Script versioning:** Segwit makes it easy for future soft forks to allow\n-  Bitcoin users to individually opt-in to almost any change in the Bitcoin\n+  Flow users to individually opt-in to almost any change in the Flow\n   Script language when those users receive new transactions.  Features\n-  currently being researched by Bitcoin Core contributors that may use this\n+  currently being researched by Flow Core contributors that may use this\n   capability include support for Schnorr signatures, which can improve the\n   privacy and efficiency of multisig transactions (or transactions with\n   multiple inputs), and Merklized Abstract Syntax Trees (MAST), which can\n   improve the privacy and efficiency of scripts with two or more conditions.\n-  Other Bitcoin community members are studying several other improvements\n+  Other Flow community members are studying several other improvements\n   that can be made using script versioning.\n \n Activation for the segwit soft fork is being managed using BIP9\n@@ -159,13 +159,13 @@ For more information about segwit, please see the [segwit FAQ][], the\n operator, please see the [versionbits FAQ][] for information about\n signaling support for a soft fork.\n \n-[Segwit FAQ]: https://bitcoincore.org/en/2016/01/26/segwit-benefits/\n-[segwit wallet developers guide]: https://bitcoincore.org/en/segwit_wallet_dev/\n-[BIP141]: https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki\n-[BIP143]: https://github.com/bitcoin/bips/blob/master/bip-0143.mediawiki\n-[BIP144]: https://github.com/bitcoin/bips/blob/master/bip-0144.mediawiki\n-[BIP145]: https://github.com/bitcoin/bips/blob/master/bip-0145.mediawiki\n-[versionbits FAQ]: https://bitcoincore.org/en/2016/06/08/version-bits-miners-faq/\n+[Segwit FAQ]: https://flowcore.org/en/2016/01/26/segwit-benefits/\n+[segwit wallet developers guide]: https://flowcore.org/en/segwit_wallet_dev/\n+[BIP141]: https://github.com/flow/bips/blob/master/bip-0141.mediawiki\n+[BIP143]: https://github.com/flow/bips/blob/master/bip-0143.mediawiki\n+[BIP144]: https://github.com/flow/bips/blob/master/bip-0144.mediawiki\n+[BIP145]: https://github.com/flow/bips/blob/master/bip-0145.mediawiki\n+[versionbits FAQ]: https://flowcore.org/en/2016/06/08/version-bits-miners-faq/\n \n \n Null dummy soft fork\n@@ -183,7 +183,7 @@ a third-party to insert data into other people's transactions, changing\n the transaction's txid (called transaction malleability) and possibly\n causing other problems.\n \n-Since Bitcoin Core 0.10.0, nodes have defaulted to only relaying and\n+Since Flow Core 0.10.0, nodes have defaulted to only relaying and\n mining transactions whose dummy element was a null value (0x00, also\n called OP_0).  The null dummy soft fork turns this relay rule into a\n consensus rule both for non-segwit transactions and segwit transactions,\n@@ -196,7 +196,7 @@ as segwit.\n \n For more information, please see [BIP147][].\n \n-[BIP147]: https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki\n+[BIP147]: https://github.com/flow/bips/blob/master/bip-0147.mediawiki\n \n Low-level RPC changes\n ---------------------\n@@ -215,9 +215,9 @@ is provided below.\n \n The following extra files can be found in the download directory or torrent:\n \n-- `bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n+- `flow-${VERSION}-arm-linux-gnueabihf.tar.gz`: Linux binaries targeting\n   the 32-bit ARMv7-A architecture.\n-- `bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n+- `flow-${VERSION}-aarch64-linux-gnu.tar.gz`: Linux binaries targeting\n   the 64-bit ARMv8-A architecture.\n \n ARM builds are still experimental. If you have problems on a certain device or\n@@ -243,7 +243,7 @@ git merge commit are mentioned.\n \n ### Consensus\n - #8636 `9dfa0c8` Implement NULLDUMMY softfork (BIP147) (jl2012)\n-- #8848 `7a34a46` Add NULLDUMMY verify flag in bitcoinconsensus.h (jl2012)\n+- #8848 `7a34a46` Add NULLDUMMY verify flag in flowconsensus.h (jl2012)\n - #8937 `8b66659` Define start and end time for segwit deployment (sipa)\n \n ### RPC and other APIs\n@@ -275,13 +275,13 @@ git merge commit are mentioned.\n - #8612 `2215c22` Check for compatibility with download in FindNextBlocksToDownload (sipa)\n - #8606 `bbf379b` Fix some locks (sipa)\n - #8594 `ab295bb` Do not add random inbound peers to addrman (gmaxwell)\n-- #8940 `5b4192b` Add x9 service bit support to dnsseed.bluematt.me, seed.bitcoinstats.com (TheBlueMatt, cdecker)\n+- #8940 `5b4192b` Add x9 service bit support to dnsseed.bluematt.me, seed.flowstats.com (TheBlueMatt, cdecker)\n - #8944 `685e4c7` Remove bogus assert on number of oubound connections. (TheBlueMatt)\n - #8949 `0dbc48a` Be more agressive in getting connections to peers with relevant services (gmaxwell)\n \n ### Build system\n-- #8293 `fa5b249` Allow building libbitcoinconsensus without any univalue (luke-jr)\n-- #8492 `8b0bdd3` Allow building bench_bitcoin by itself (luke-jr)\n+- #8293 `fa5b249` Allow building libflowconsensus without any univalue (luke-jr)\n+- #8492 `8b0bdd3` Allow building bench_flow by itself (luke-jr)\n - #8563 `147003c` Add configure check for -latomic (ajtowns)\n - #8626 `ea51b0f` Berkeley DB v6 compatibility fix (netsafe)\n - #8520 `75f2065` Remove check for `openssl/ec.h` (laanwj)\n@@ -320,24 +320,24 @@ git merge commit are mentioned.\n - #8418 `ff893aa` Add tests for compact blocks (sdaftuar)\n - #8803 `375437c` Ping regularly in p2p-segwit.py to keep connection alive (jl2012)\n - #8827 `9bbe66e` Split up slow RPC calls to avoid pruning test timeouts (sdaftuar)\n-- #8829 `2a8bca4` Add bitcoin-tx JSON tests (jnewbery)\n+- #8829 `2a8bca4` Add flow-tx JSON tests (jnewbery)\n - #8834 `1dd1783` blockstore: Switch to dumb dbm (MarcoFalke)\n - #8835 `d87227d` nulldummy.py: Don't run unused code (MarcoFalke)\n-- #8836 `eb18cc1` bitcoin-util-test.py should fail if the output file is empty (jnewbery)\n+- #8836 `eb18cc1` flow-util-test.py should fail if the output file is empty (jnewbery)\n - #8839 `31ab2f8` Avoid ConnectionResetErrors during RPC tests (laanwj)\n - #8840 `cbc3fe5` Explicitly set encoding to utf8 when opening text files (laanwj)\n - #8841 `3e4abb5` Fix nulldummy test (jl2012)\n - #8854 `624a007` Fix race condition in p2p-compactblocks test (sdaftuar)\n - #8857 `1f60d45` mininode: Only allow named args in wait_until (MarcoFalke)\n-- #8860 `0bee740` util: Move wait_bitcoinds() into stop_nodes() (MarcoFalke)\n+- #8860 `0bee740` util: Move wait_flowds() into stop_nodes() (MarcoFalke)\n - #8882 `b73f065` Fix race conditions in p2p-compactblocks.py and sendheaders.py (sdaftuar)\n - #8904 `cc6f551` Fix compact block shortids for a test case (dagurval)\n \n ### Documentation\n - #8754 `0e2c6bd` Target protobuf 2.6 in OS X build notes. (fanquake)\n - #8461 `b17a3f9` Document return value of networkhashps for getmininginfo RPC endpoint (jlopp)\n - #8512 `156e305` Corrected JSON typo on setban of net.cpp (sevastos)\n-- #8683 `8a7d7ff` Fix incorrect file name bitcoin.qrc  (bitcoinsSG)\n+- #8683 `8a7d7ff` Fix incorrect file name flow.qrc  (flowsSG)\n - #8891 `5e0dd9e` Update bips.md for Segregated Witness (fanquake)\n - #8545 `863ae74` Update git-subtree-check.sh README (MarcoFalke)\n - #8607 `486650a` Fix doxygen off-by-one comments, fix typos (MarcoFalke)\n@@ -352,7 +352,7 @@ git merge commit are mentioned.\n - #8742 `d31ac72` Specify Protobuf version 2 in paymentrequest.proto (fanquake)\n - #8414,#8558,#8676,#8700,#8701,#8702 Add missing copyright headers (isle2983, kazcw)\n - #8899 `4ed2627` Fix wake from sleep issue with Boost 1.59.0 (fanquake)\n-- #8817 `bcf3806` update bitcoin-tx to output witness data (jnewbery)\n+- #8817 `bcf3806` update flow-tx to output witness data (jnewbery)\n - #8513 `4e5fc31` Fix a type error that would not compile on OSX. (JeremyRubin)\n - #8392 `30eac2d` Fix several node initialization issues (sipa)\n - #8548 `305d8ac` Use `__func__` to get function name for output printing (MarcoFalke)\n@@ -407,4 +407,4 @@ Thanks to everyone who directly contributed to this release:\n - whythat\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "9b739c08a4c0ef1f95ac6b5945566db07d2a4e32",
        "filename": "doc/release-notes/release-notes-0.13.2.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.13.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.13.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,28 +1,28 @@\n-Bitcoin Core version 0.13.2 is now available from:\n+Flow Core version 0.13.2 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.13.2/>\n+  <https://flow.org/bin/flow-core-0.13.2/>\n \n This is a new minor version release, including various bugfixes and\n performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n an OS initially released in 2001. This means that not even critical security\n-updates will be released anymore. Without security updates, using a bitcoin\n+updates will be released anymore. Without security updates, using a flow\n wallet on a XP machine is irresponsible at least.\n \n-In addition to that, with 0.12.x there have been varied reports of Bitcoin Core\n-randomly crashing on Windows XP. It is [not clear](https://github.com/bitcoin/bitcoin/issues/7681#issuecomment-217439891)\n+In addition to that, with 0.12.x there have been varied reports of Flow Core\n+randomly crashing on Windows XP. It is [not clear](https://github.com/flow/flow/issues/7681#issuecomment-217439891)\n what the source of these crashes is, but it is likely that upstream\n libraries such as Qt are no longer being tested on XP.\n \n@@ -111,7 +111,7 @@ git merge commit are mentioned.\n - #8972 `6f86b53` Make warnings label selectable (jonasschnelli) (MarcoFalke)\n - #9185 `6d70a73` Fix coincontrol sort issue (jonasschnelli)\n - #9094 `5f3a12c` Use correct conversion function for boost::path datadir (laanwj)\n-- #8908 `4a974b2` Update bitcoin-qt.desktop (s-matthew-english)\n+- #8908 `4a974b2` Update flow-qt.desktop (s-matthew-english)\n - #9190 `dc46b10` Plug many memory leaks (laanwj)\n \n ### Wallet\n@@ -134,7 +134,7 @@ git merge commit are mentioned.\n - #8838 `094848b` Calculate size and weight of block correctly in CreateNewBlock() (jnewbery)\n - #8920 `40169dc` Set minimum required Boost to 1.47.0 (fanquake)\n - #9251 `a710a43` Improvement of documentation of command line parameter 'whitelist' (wodry)\n-- #8932 `106da69` Allow bitcoin-tx to create v2 transactions (btcdrak)\n+- #8932 `106da69` Allow flow-tx to create v2 transactions (btcdrak)\n - #8929 `12428b4` add software-properties-common (sigwo)\n - #9120 `08d1c90` bug: Missed one \"return false\" in recent refactoring in #9067 (UdjinM6)\n - #9067 `f85ee01` Fix exit codes (UdjinM6)\n@@ -175,4 +175,4 @@ Thanks to everyone who directly contributed to this release:\n - Wladimir J. van der Laan\n - wodry\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "d0ebe0976cacb70ad2c379ad279e6812fe211c82",
        "filename": "doc/release-notes/release-notes-0.14.0.md",
        "status": "modified",
        "additions": 30,
        "deletions": 30,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.14.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.14.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,30 +1,30 @@\n-Bitcoin Core version 0.14.0 is now available from:\n+Flow Core version 0.14.0 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.0/>\n+  <https://flow.org/bin/flow-core-0.14.0/>\n \n This is a new major version release, including new features, various bugfixes\n and performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n-Bitcoin Core is extensively tested on multiple operating systems using\n+Flow Core is extensively tested on multiple operating systems using\n the Linux kernel, macOS 10.8+, and Windows Vista and later.\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n No attempt is made to prevent installing or running the software on Windows XP, you\n can still do so at your own risk but be aware that there are known instabilities and issues.\n Please do not report issues about Windows XP to the issue tracker.\n \n-Bitcoin Core should also work on most other Unix-like systems but is not\n+Flow Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n Notable changes\n@@ -55,7 +55,7 @@ improved, leading to much shorter sync and initial block download times.\n Manual Pruning\n --------------\n \n-Bitcoin Core has supported automatically pruning the blockchain since 0.11. Pruning\n+Flow Core has supported automatically pruning the blockchain since 0.11. Pruning\n the blockchain allows for significant storage space savings as the vast majority of\n the downloaded data can be discarded after processing so very little of it remains\n on the disk.\n@@ -96,7 +96,7 @@ ZMQ On Windows\n \n Previously the ZeroMQ notification system was unavailable on Windows\n due to various issues with ZMQ. These have been fixed upstream and\n-now ZMQ can be used on Windows. Please see [this document](https://github.com/bitcoin/bitcoin/blob/master/doc/zmq.md) for\n+now ZMQ can be used on Windows. Please see [this document](https://github.com/flow/flow/blob/master/doc/zmq.md) for\n help with using ZMQ in general.\n \n Nested RPC Commands in Debug Console\n@@ -129,7 +129,7 @@ the same thing as the GUI icon. The command takes one boolean parameter,\n Out-of-sync Modal Info Layer\n ----------------------------\n \n-When Bitcoin Core is out-of-sync on startup, a semi-transparent information\n+When Flow Core is out-of-sync on startup, a semi-transparent information\n layer will be shown over top of the normal display. This layer contains\n details about the current sync progress and estimates the amount of time\n remaining to finish syncing. This layer can also be hidden and subsequently\n@@ -138,19 +138,19 @@ unhidden by clicking on the progress bar at the bottom of the window.\n Support for JSON-RPC Named Arguments\n ------------------------------------\n \n-Commands sent over the JSON-RPC interface and through the `bitcoin-cli` binary\n+Commands sent over the JSON-RPC interface and through the `flow-cli` binary\n can now use named arguments. This follows the [JSON-RPC specification](http://www.jsonrpc.org/specification)\n for passing parameters by-name with an object.\n \n-`bitcoin-cli` has been updated to support this by parsing `name=value` arguments\n+`flow-cli` has been updated to support this by parsing `name=value` arguments\n when the `-named` option is given.\n \n Some examples:\n \n-    src/bitcoin-cli -named help command=\"help\"\n-    src/bitcoin-cli -named getblockhash height=0\n-    src/bitcoin-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-    src/bitcoin-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n+    src/flow-cli -named help command=\"help\"\n+    src/flow-cli -named getblockhash height=0\n+    src/flow-cli -named getblock blockhash=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n+    src/flow-cli -named sendtoaddress address=\"(snip)\" amount=\"1.0\" subtractfeefromamount=true\n \n The order of arguments doesn't matter in this case. Named arguments are also\n useful to leave out arguments that should stay at their default value. The\n@@ -189,7 +189,7 @@ commands such as `prioritisetransaction` so that those changes will not be lost.\n Final Alert\n -----------\n \n-The Alert System was [disabled and deprecated](https://bitcoin.org/en/alert/2016-11-01-alert-retirement) in Bitcoin Core 0.12.1 and removed in 0.13.0. \n+The Alert System was [disabled and deprecated](https://flow.org/en/alert/2016-11-01-alert-retirement) in Flow Core 0.12.1 and removed in 0.13.0. \n The Alert System was retired with a maximum sequence final alert which causes any nodes\n supporting the Alert System to display a static hard-coded \"Alert Key Compromised\" message which also\n prevents any other alerts from overriding it. This final alert is hard-coded into this release\n@@ -241,8 +241,8 @@ Low-level RPC changes\n    the mempool or if `txindex` is enabled.\n \n  - A new RPC command `getmemoryinfo` has been added which will return information\n-   about the memory usage of Bitcoin Core. This was added in conjunction with\n-   optimizations to memory management. See [Pull #8753](https://github.com/bitcoin/bitcoin/pull/8753)\n+   about the memory usage of Flow Core. This was added in conjunction with\n+   optimizations to memory management. See [Pull #8753](https://github.com/flow/flow/pull/8753)\n    for more information.\n \n  - A new RPC command `bumpfee` has been added which allows replacing an\n@@ -367,7 +367,7 @@ and git merge commit are mentioned.\n - #8421 `b77bb95` httpserver: drop boost dependency (theuni)\n - #8638 `f061415` rest.cpp: change `HTTP_INTERNAL_SERVER_ERROR` to `HTTP_BAD_REQUEST` (djpnewton)\n - #8272 `91990ee` Make the dummy argument to getaddednodeinfo optional (sipa)\n-- #8722 `bb843ad` bitcoin-cli: More detailed error reporting (laanwj)\n+- #8722 `bb843ad` flow-cli: More detailed error reporting (laanwj)\n - #6996 `7f71a3c` Add preciousblock RPC (sipa)\n - #8788 `97c7f73` Give RPC commands more information about the RPC request (jonasschnelli)\n - #7948 `5d2c8e5` Augment getblockchaininfo bip9\\_softforks data (mruddy)\n@@ -626,14 +626,14 @@ and git merge commit are mentioned.\n - #8680 `666eaf0` Address Travis spurious failures (theuni)\n - #8789 `e31a43c` pull-tester: Only print output when failed (MarcoFalke)\n - #8810 `14e8f99` tests: Add exception error message for JSONRPCException (laanwj)\n-- #8830 `ef0801b` test: Add option to run bitcoin-util-test.py manually (jnewbery)\n-- #8881 `e66cc1d` Add some verbose logging to bitcoin-util-test.py (jnewbery)\n+- #8830 `ef0801b` test: Add option to run flow-util-test.py manually (jnewbery)\n+- #8881 `e66cc1d` Add some verbose logging to flow-util-test.py (jnewbery)\n - #8922 `0329511` Send segwit-encoded blocktxn messages in p2p-compactblocks (TheBlueMatt)\n - #8873 `74dc388` Add microbenchmarks to profile more code paths (ryanofsky)\n - #9032 `6a8be7b` test: Add format-dependent comparison to bctest (laanwj)\n-- #9023 `774db92` Add logging to bitcoin-util-test.py (jnewbery)\n+- #9023 `774db92` Add logging to flow-util-test.py (jnewbery)\n - #9065 `c9bdf9a` Merge `doc/unit-tests.md` into `src/test/README.md` (laanwj)\n-- #9069 `ed64bce` Clean up bctest.py and bitcoin-util-test.py (jnewbery)\n+- #9069 `ed64bce` Clean up bctest.py and flow-util-test.py (jnewbery)\n - #9095 `b8f43e3` test: Fix test\\_random includes (MarcoFalke)\n - #8894 `faec09b` Testing: Include fRelay in mininode version messages (jnewbery)\n - #9097 `e536499` Rework `sync_*` and preciousblock.py (MarcoFalke)\n@@ -665,7 +665,7 @@ and git merge commit are mentioned.\n - #9628 `f895023` Increase a sync\\_blocks timeout in pruning.py (sdaftuar)\n - #9638 `a7ea2f8` Actually test assertions in pruning.py (MarcoFalke)\n - #9647 `e99f0d7` Skip RAII event tests if libevent is built without `event_set_mem_functions` (luke-jr)\n-- #9691 `fc67cd2` Init ECC context for `test_bitcoin_fuzzy` (gmaxwell)\n+- #9691 `fc67cd2` Init ECC context for `test_flow_fuzzy` (gmaxwell)\n - #9712 `d304fef` bench: Fix initialization order in registration (laanwj)\n - #9707 `b860915` Fix RPC failure testing (jnewbery)\n - #9269 `43e8150` Align struct COrphan definition (sipa)\n@@ -711,25 +711,25 @@ and git merge commit are mentioned.\n - #8965 `23e03f8` Mention that PPA doesn't support Debian (anduck)\n - #9115 `bfc7aad` Mention reporting security issues responsibly (paveljanik)\n - #9840 `08e0690` Update sendfrom RPC help to correct coin selection misconception (ryanofsky)\n-- #9865 `289204f` Change bitcoin address in RPC help message (marijnfs)\n+- #9865 `289204f` Change flow address in RPC help message (marijnfs)\n \n ### Miscellaneous\n - #8274 `7a2d402` util: Update tinyformat (laanwj)\n - #8291 `5cac8b1` util: CopyrightHolders: Check for untranslated substitution (MarcoFalke)\n - #8557 `44691f3` contrib: Rework verifybinaries (MarcoFalke)\n - #8621 `e8ed6eb` contrib: python: Don't use shell=True (MarcoFalke)\n-- #8813 `fb24d7e` bitcoind: Daemonize using daemon(3) (laanwj)\n+- #8813 `fb24d7e` flowd: Daemonize using daemon(3) (laanwj)\n - #9004 `67728a3` Clarify `listenonion` (unsystemizer)\n - #8674 `bae81b8` tools for analyzing, updating and adding copyright headers in source files (isle2983)\n - #8976 `8c6218a` libconsensus: Add input validation of flags (laanwj)\n - #9112 `46027e8` Avoid ugly exception in log on unknown inv type (laanwj)\n-- #8837 `2108911` Allow bitcoin-tx to parse partial transactions (jnewbery)\n+- #8837 `2108911` Allow flow-tx to parse partial transactions (jnewbery)\n - #9204 `74ced54` Clarify CreateTransaction error messages (instagibbs)\n-- #9265 `31bcc66` bitcoin-cli: Make error message less confusing (laanwj)\n+- #9265 `31bcc66` flow-cli: Make error message less confusing (laanwj)\n - #9303 `72bf1b3` Update comments in ctaes (sipa)\n - #9417 `c4b7d4f` Do not evaluate hidden LogPrint arguments (sipa)\n - #9506 `593a00c` RFC: Improve style for if indentation (sipa)\n-- #8883 `d5d4ad8` Add all standard TXO types to bitcoin-tx (jnewbery)\n+- #8883 `d5d4ad8` Add all standard TXO types to flow-tx (jnewbery)\n - #9531 `23281a4` Release notes for estimation changes  (morcos)\n - #9486 `f62bc10` Make peer=%d log prints consistent (TheBlueMatt)\n - #9552 `41cb05c` Add IPv6 support to qos.sh (jamesmacwhite)\n@@ -870,4 +870,4 @@ Thanks to everyone who directly contributed to this release:\n - wodry\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "a1fc084ad04c4dfd3062d15d10f61f2c1d280cb3",
        "filename": "doc/release-notes/release-notes-0.14.1.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.14.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.14.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.14.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,30 +1,30 @@\n-Bitcoin Core version 0.14.1 is now available from:\n+Flow Core version 0.14.1 is now available from:\n \n-  <https://bitcoin.org/bin/bitcoin-core-0.14.1/>\n+  <https://flow.org/bin/flow-core-0.14.1/>\n \n This is a new minor version release, including various bugfixes and\n performance improvements, as well as updated translations.\n \n Please report bugs using the issue tracker at github:\n \n-  <https://github.com/bitcoin/bitcoin/issues>\n+  <https://github.com/flow/flow/issues>\n \n To receive security and update notifications, please subscribe to:\n \n-  <https://bitcoincore.org/en/list/announcements/join/>\n+  <https://flowcore.org/en/list/announcements/join/>\n \n Compatibility\n ==============\n \n-Bitcoin Core is extensively tested on multiple operating systems using\n+Flow Core is extensively tested on multiple operating systems using\n the Linux kernel, macOS 10.8+, and Windows Vista and later.\n \n Microsoft ended support for Windows XP on [April 8th, 2014](https://www.microsoft.com/en-us/WindowsForBusiness/end-of-xp-support),\n No attempt is made to prevent installing or running the software on Windows XP, you\n can still do so at your own risk but be aware that there are known instabilities and issues.\n Please do not report issues about Windows XP to the issue tracker.\n \n-Bitcoin Core should also work on most other Unix-like systems but is not\n+Flow Core should also work on most other Unix-like systems but is not\n frequently tested on them.\n \n Notable changes\n@@ -75,7 +75,7 @@ this parameter.\n \n Additional information relating to running on low-memory systems can be found\n here:\n-[reducing-bitcoind-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n+[reducing-flowd-memory-usage.md](https://gist.github.com/laanwj/efe29c7661ce9b6620a7).\n \n 0.14.1 Change log\n =================\n@@ -117,7 +117,7 @@ git merge commit are mentioned.\n ### Miscellaneous\n - #10037 `4d8e660` Trivial: Fix typo in help getrawtransaction RPC (keystrike)\n - #10120 `e4c9a90` util: Work around (virtual) memory exhaustion on 32-bit w/ glibc (laanwj)\n-- #10130 `ecc5232` bitcoin-tx input verification (awemany, jnewbery)\n+- #10130 `ecc5232` flow-tx input verification (awemany, jnewbery)\n \n Credits\n =======\n@@ -139,5 +139,5 @@ Thanks to everyone who directly contributed to this release:\n - Suhas Daftuar\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/).\n "
      },
      {
        "sha": "28561dd6905879cfac795430ee7d03dbef6edf4f",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -7,7 +7,7 @@ Features:\n * Recovers and continues if an exception is caused by a message you received.  Other nodes shouldn't be able to cause an exception, and it hasn't happened before, but if a way is found to cause an exception, this would keep it from being used to stop network nodes.\n \n If you have json-rpc code that checks the contents of the error string, you need to change it to expect error objects of the form {\"code\":<number>,\"message\":<string>}, which is the standard.  See this thread:\n-http://www.bitcoin.org/smf/index.php?topic=969.0\n+http://www.flow.org/smf/index.php?topic=969.0\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.12/\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.3.12/"
      },
      {
        "sha": "12d5ca4aebc13d4c42247d5149353faf3b286914",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -12,15 +12,15 @@ Gavin Andresen:\n * Clean shutdown on SIGTERM on Linux.\n \n Download:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.13/\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.3.13/\n \n (Thanks Laszlo for the Mac OSX build!)\n \n Note:\n The SSE2 auto-detect in the Linux 64-bit version doesn't work with AMD in 64-bit mode.  Please try this instead and let me know if it gets it right:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.1-specialbuild-linux64.tar.gz\n+http://www.flow.org/download/flow-0.3.13.1-specialbuild-linux64.tar.gz\n \n You can still control the SSE2 use manually with -4way and -4way=0.\n \n Version 0.3.13.2 (SVN rev 161) has improvements for the case where you already had 0/unconfirmed transactions that you might have already spent.  Here's a Windows build of it:\n-http://www.bitcoin.org/download/bitcoin-0.3.13.2-win32-setup.exe\n+http://www.flow.org/download/flow-0.3.13.2-win32-setup.exe"
      },
      {
        "sha": "5e09a4694d0bc767e502bf09d1f73a07f2e64e77",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n Version 0.3.14 is now available\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.14/\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.3.14/\n \n Changes:\n * Key pool feature for safer wallet backup"
      },
      {
        "sha": "aac8fed1f27e0a21b44f24faa5e9fa251f24e4bd",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,6 +1,6 @@\n * paytxfee switch is now per KB, so it adds the correct fee for large transactions\n * sending avoids using coins with less than 6 confirmations if it can\n-* BitcoinMiner processes transactions in priority order based on age of dependencies\n+* FlowMiner processes transactions in priority order based on age of dependencies\n * make sure generation doesn't start before block 74000 downloaded\n * bugfixes by Dean Gores\n * testnet, keypoololdest and paytxfee added to getinfo"
      },
      {
        "sha": "90076e836f910d2f1f9fffad5778ecdd9ee4cad4",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,7 +3,7 @@ Changes:\n * IsStandard() check to only include known transaction types in blocks\n * Jgarzik's optimisation to speed up the initial block download a little\n \n-The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.bitcoin.org/smf/index.php?topic=1886.0).  \n+The main addition in this release is the Accounts-Based JSON-RPC commands that Gavin's been working on (more details at http://www.flow.org/smf/index.php?topic=1886.0).  \n * getaccountaddress\n * sendfrom\n * move"
      },
      {
        "sha": "a4b1c7d0d993e8e77d4b06a19f4e4044ea693f02",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,13 +3,13 @@ worse as people upgraded, so I cherry-picked the bug fix and created a minor rel\n \n The Amazon Machine Images I used to do the builds are available:\n \n-  ami-38a05251   Bitcoin-v0.3.20.2 Mingw    (Windows; Administrator password 'bitcoin development')\n-  ami-30a05259   Bitcoin_0.3.20.2 Linux32\n-  ami-8abc4ee3   Bitcoin_0.3.20.2 Linux64\n+  ami-38a05251   Flow-v0.3.20.2 Mingw    (Windows; Administrator password 'flow development')\n+  ami-30a05259   Flow_0.3.20.2 Linux32\n+  ami-8abc4ee3   Flow_0.3.20.2 Linux64\n \n (mac build will be done soon)\n \n-If you have already downloaded version 0.3.20.1, please either add this to your bitcoin.conf file:\n+If you have already downloaded version 0.3.20.1, please either add this to your flow.conf file:\n \n   maxsendbuffer=10000\n   maxreceivebuffer=10000"
      },
      {
        "sha": "740d5366a8f54b77744249d5745610d576501883",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,22 +1,22 @@\n Please checkout the git integration branch from:\n \n-https://github.com/bitcoin/bitcoin\n+https://github.com/flow/flow\n \n ... and help test.  The new features that need testing are:\n \n-* -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n+* -nolisten : https://github.com/flow/flow/pull/11\n * -rescan : scan block chain for missing wallet transactions\n-* -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n-* RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n-* listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10\n+* -printtoconsole : https://github.com/flow/flow/pull/37\n+* RPC gettransaction details : https://github.com/flow/flow/pull/24\n+* listtransactions new features : https://github.com/flow/flow/pull/10\n \n Bug fixes that also need testing:\n \n-* -maxconnections= : https://github.com/bitcoin/bitcoin/pull/42\n-* RPC listaccounts minconf : https://github.com/bitcoin/bitcoin/pull/27\n-* RPC move, add time to output : https://github.com/bitcoin/bitcoin/pull/21\n+* -maxconnections= : https://github.com/flow/flow/pull/42\n+* RPC listaccounts minconf : https://github.com/flow/flow/pull/27\n+* RPC move, add time to output : https://github.com/flow/flow/pull/21\n * ...and several improvements to --help output.\n \n This needs more testing on Windows!  Please drop me a quick private message, email, or IRC message if you are able to do some testing.  If you find bugs, please open an issue at:\n \n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues"
      },
      {
        "sha": "a8be2fef8f7723d0771a8c73342b2b24b7c80ac9",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,19 +1,19 @@\n-Binaries for Bitcoin version 0.3.21 are available at:\n-  https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.21/\n+Binaries for Flow version 0.3.21 are available at:\n+  https://sourceforge.net/projects/flow/files/Flow/flow-0.3.21/\n \n Changes and new features from the 0.3.20 release include:\n \n-* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running bitcoin or bitcoind with the - -upnp=1 command line switch or using the Options dialog box.\n+* Universal Plug and Play support.  Enable automatic opening of a port for incoming connections by running flow or flowd with the - -upnp=1 command line switch or using the Options dialog box.\n \n-* Support for full-precision bitcoin amounts.  You can now send, and bitcoin will display, bitcoin amounts smaller than 0.01.  However, sending fewer than 0.01 bitcoins still requires a 0.01 bitcoin fee (so you can send 1.0001 bitcoins without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n+* Support for full-precision flow amounts.  You can now send, and flow will display, flow amounts smaller than 0.01.  However, sending fewer than 0.01 flows still requires a 0.01 flow fee (so you can send 1.0001 flows without a fee, but you will be asked to pay a fee if you try to send 0.0001).\n \n-* A new method of finding bitcoin nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n+* A new method of finding flow nodes to connect with, via DNS A records. Use the -dnsseed option to enable.\n \n-For developers, changes to bitcoin's remote-procedure-call API:\n+For developers, changes to flow's remote-procedure-call API:\n \n-* New rpc command \"sendmany\" to send bitcoins to more than one address in a single transaction.\n+* New rpc command \"sendmany\" to send flows to more than one address in a single transaction.\n \n-* Several bug fixes, including a serious intermittent bug that would sometimes cause bitcoind to stop accepting rpc requests. \n+* Several bug fixes, including a serious intermittent bug that would sometimes cause flowd to stop accepting rpc requests. \n \n * -logtimestamps option, to add a timestamp to each line in debug.log.\n "
      },
      {
        "sha": "581cb16cf62bdb43e9dea5ecf14ed6dbf0e9adbe",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Download URL: https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.22/\n+Download URL: https://sourceforge.net/projects/flow/files/Flow/flow-0.3.22/\n \n This is largely a bugfix and TX fee schedule release.  We also hope to make 0.3.23 a quick release, to fix problems that the network has seen due to explosive growth in the past week.\n \n Notable changes:\n-* Client will accept and relay TX's with 0.0005 BTC fee schedule (users still pay 0.01 BTC per kb, until next version)\n+* Client will accept and relay TX's with 0.0005 FLW fee schedule (users still pay 0.01 FLW per kb, until next version)\n * Non-standard transactions accepted on testnet\n * Source code tree reorganized (prep for autotools build)\n * Remove \"Generate Coins\" option from GUI, and remove 4way SSE miner.  Internal reference CPU miner remains available, but users are directed to external miners for best hash production.\n-* IRC is overflowing.  Client now bootstraps to channels #bitcoin00 - #bitcoin99\n+* IRC is overflowing.  Client now bootstraps to channels #flow00 - #flow99\n * DNS names now may be used with -addnode, -connect (requires -dns to enable)\n \n RPC changes:"
      },
      {
        "sha": "5d4821f5bd0dfb8f779f48ce22458a235e9847a2",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n-Win32, Linux, MacOSX and source releases for bitcoin v0.3.23 have been uploaded to\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.23/\n+Win32, Linux, MacOSX and source releases for flow v0.3.23 have been uploaded to\n+https://sourceforge.net/projects/flow/files/Flow/flow-0.3.23/\n \n-This is another quick bugfix release, trying to deal with the influx of new bitcoin users.\n+This is another quick bugfix release, trying to deal with the influx of new flow users.\n \n Main items of note:\n \n * P2P connect-to-node logic changed to reduce timeout a bit.  The network saw a huge influx of new users, who do not permit incoming connections.  This change is a short-term hack, to more quickly hunt for useful P2P connections.  Better \"leaf node\" logic is in the works, but this should let us limp along until then.  One may use -upnp to properly forward ports, and help the network.\n * Transaction fee reduced to 0.0005 for new transactions\n-* Client will relay transactions with fees as low as 0.0001 BTC\n+* Client will relay transactions with fees as low as 0.0001 FLW"
      },
      {
        "sha": "f01e8c9a2ba0084d86f01740c0b78dc1c8c8eac1",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n-Bitcoin v0.3.24 is now available for download at\n-https://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.24/\n+Flow v0.3.24 is now available for download at\n+https://sourceforge.net/projects/flow/files/Flow/flow-0.3.24/\n \n-This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/bitcoin/bitcoin/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n+This is another bug fix release.  We had hoped to have wallet encryption ready for release, but more urgent fixes for existing clients were needed -- most notably block download problems were getting severe.  Wallet encryption is ready for testing at https://github.com/flow/flow/pull/352 for the git-savvy, and hopefully will follow shortly in the next release, v0.4.\n \n Notable fixes in v0.3.24, and the main reasons for this release:\n \n@@ -13,8 +13,8 @@ Notable changes in v0.3.24:\n \n C1) DNS seeding enabled by default.\n \n-C2) UPNP enabled by default in the GUI client.  The percentage of bitcoin clients that accept incoming connections is quite small, and that is a problem.  This should help.  bitcoind, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n+C2) UPNP enabled by default in the GUI client.  The percentage of flow clients that accept incoming connections is quite small, and that is a problem.  This should help.  flowd, and unofficial builds, are unchanged (though we encourage use of \"-upnp\" to help the network!)\n \n-C3) Initial unit testing framework.  Bitcoin sorely needs automated tests, and this is a beginning.  Contributions welcome.\n+C3) Initial unit testing framework.  Flow sorely needs automated tests, and this is a beginning.  Contributions welcome.\n \n C4) Internal wallet code cleanup.  While invisible to an end user, this change provides the basis for v0.4's wallet encryption."
      },
      {
        "sha": "c64fbf6dd4145add1f52fb1e73facfee12361283",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.4.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.0/\n+Flow version 0.4.0 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.4.0/\n \n The main feature in this release is wallet private key encryption;\n you can set a passphrase that must be entered before sending coins.\n See below for more information; if you decide to encrypt your wallet,\n WRITE DOWN YOUR PASSPHRASE AND PUT IT IN A SECURE LOCATION. If you\n-forget or lose your wallet passphrase, you lose your bitcoins.\n-Previous versions of bitcoin are unable to read encrypted wallets,\n+forget or lose your wallet passphrase, you lose your flows.\n+Previous versions of flow are unable to read encrypted wallets,\n and will crash on startup if the wallet is encrypted.\n \n-Also note: bitcoin version 0.4 uses a newer version of Berkeley DB\n+Also note: flow version 0.4 uses a newer version of Berkeley DB\n (bdb version 4.8) than previous versions (bdb 4.7). If you upgrade\n-to version 0.4 and then revert back to an earlier version of bitcoin\n+to version 0.4 and then revert back to an earlier version of flow\n the it may be unable to start because bdb 4.7 cannot read bdb 4.8\n \"log\" files.\n \n \n Notable bug fixes from version 0.3.24:\n \n-Fix several bitcoin-becomes-unresponsive bugs due to multithreading\n+Fix several flow-becomes-unresponsive bugs due to multithreading\n deadlocks.\n \n Optimize database writes for large (lots of inputs) transactions\n@@ -27,44 +27,44 @@ Optimize database writes for large (lots of inputs) transactions\n \n Wallet Encryption\n \n-Bitcoin supports native wallet encryption so that people who steal your\n-wallet file don't automatically get access to all of your Bitcoins.\n+Flow supports native wallet encryption so that people who steal your\n+wallet file don't automatically get access to all of your Flows.\n In order to enable this feature, choose \"Encrypt Wallet\" from the\n Options menu.  You will be prompted to enter a passphrase, which\n will be used as the key to encrypt your wallet and will be needed\n-every time you wish to send Bitcoins.  If you lose this passphrase,\n-you will lose access to spend all of the bitcoins in your wallet,\n-no one, not even the Bitcoin developers can recover your Bitcoins.\n+every time you wish to send Flows.  If you lose this passphrase,\n+you will lose access to spend all of the flows in your wallet,\n+no one, not even the Flow developers can recover your Flows.\n This means you are responsible for your own security, store your\n passphrase in a secure location and do not forget it.\n \n-Remember that the encryption built into bitcoin only encrypts the\n-actual keys which are required to send your bitcoins, not the full\n+Remember that the encryption built into flow only encrypts the\n+actual keys which are required to send your flows, not the full\n wallet.  This means that someone who steals your wallet file will\n be able to see all the addresses which belong to you, as well as the\n relevant transactions, you are only protected from someone spending\n your coins.\n \n It is recommended that you backup your wallet file before you\n-encrypt your wallet.  To do this, close the Bitcoin client and\n-copy the wallet.dat file from ~/.bitcoin/ on Linux, /Users/(user\n-name)/Application Support/Bitcoin/ on Mac OSX, and %APPDATA%/Bitcoin/\n-on Windows (that is /Users/(user name)/AppData/Roaming/Bitcoin on\n+encrypt your wallet.  To do this, close the Flow client and\n+copy the wallet.dat file from ~/.flow/ on Linux, /Users/(user\n+name)/Application Support/Flow/ on Mac OSX, and %APPDATA%/Flow/\n+on Windows (that is /Users/(user name)/AppData/Roaming/Flow on\n Windows Vista and 7 and /Documents and Settings/(user name)/Application\n-Data/Bitcoin on Windows XP).  Once you have copied that file to a\n-safe location, reopen the Bitcoin client and Encrypt your wallet.\n+Data/Flow on Windows XP).  Once you have copied that file to a\n+safe location, reopen the Flow client and Encrypt your wallet.\n If everything goes fine, delete the backup and enjoy your encrypted\n wallet.  Note that once you encrypt your wallet, you will never be\n-able to go back to a version of the Bitcoin client older than 0.4.\n+able to go back to a version of the Flow client older than 0.4.\n \n Keep in mind that you are always responsible for your own security.\n All it takes is a slightly more advanced wallet-stealing trojan which\n installs a keylogger to steal your wallet passphrase as you enter it\n-in addition to your wallet file and you have lost all your Bitcoins.\n+in addition to your wallet file and you have lost all your Flows.\n Wallet encryption cannot keep you safe if you do not practice\n good security, such as running up-to-date antivirus software, only\n-entering your wallet passphrase in the Bitcoin client and using the\n+entering your wallet passphrase in the Flow client and using the\n same passphrase only as your wallet passphrase.\n \n-See the doc/README file in the bitcoin source for technical details\n+See the doc/README file in the flow source for technical details\n of wallet encryption."
      },
      {
        "sha": "015a7377196b483df69ae1213343fda1ce42b7ac",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,38 +1,38 @@\n-Bitcoin version 0.4.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.4.1/\n+Flow version 0.4.1 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.4.1/\n \n This is a bugfix only release based on 0.4.0.\n \n Please report bugs by replying to this forum thread.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Flow version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run wxbitcoin or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run wxflow or flowd the wallet will be rewritten, Flow will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your flows to yourself using a new flow address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Flow are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new flow address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Flow and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-wxBitcoin: new address visible on main window\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new flow address.\n+wxFlow: new address visible on main window\n+flowd: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send all of your flows to the new flow address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Flow, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new flow address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your flows.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug."
      },
      {
        "sha": "e2d7821ef3f8aa3a541f491525282c7a904ebdb2",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,21 +1,21 @@\n-bitcoind version 0.4.3 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.3/ (until Gavin uploads to SourceForge)\n+flowd version 0.4.3 is now available for download at:\n+http://luke.dashjr.org/programs/flow/files/flowd-0.4.3/ (until Gavin uploads to SourceForge)\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxFlow GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.3#.tar.gz\n+http://gitorious.org/flow/flowd-stable/archive-tarball/v0.4.3#.tar.gz\n \n BUG FIXES\n \n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+No longer accept inbound connections over the internet when Flow is being used with Tor (identity leak).\n+Use the correct base transaction fee of 0.0005 FLW for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 FLW which was only meant to be relayed).\n Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr).\n "
      },
      {
        "sha": "f2ad06aca4fe6b9eb009ddb98d2a24fe781fea49",
        "filename": "doc/release-notes/release-notes-0.4.4.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.4.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,15 +1,15 @@\n-Bitcoin version 0.4.4 is now available for download at:\n-http://luke.dashjr.org/programs/bitcoin/files/bitcoind-0.4.4/\n+Flow version 0.4.4 is now available for download at:\n+http://luke.dashjr.org/programs/flow/files/flowd-0.4.4/\n \n This is a bugfix-only release based on 0.4.0.\n \n-Please note that the wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please note that the wxFlow GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n Please report bugs for the daemon only using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.4.4#.tar.gz\n+http://gitorious.org/flow/flowd-stable/archive-tarball/v0.4.4#.tar.gz\n \n BUG FIXES\n \n@@ -24,7 +24,7 @@ Several shutdown issues have been fixed.\n Check that keys stored in the wallet are valid at startup, and if not,\n report corruption.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n+If no password is specified to flowd, recommend a secure password.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000.\n "
      },
      {
        "sha": "ad71b445c030c87764f92a3b2165c656f4b96bf9",
        "filename": "doc/release-notes/release-notes-0.4.6.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.4.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.6.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind version 0.4.6 is now available for download at:\n+flowd version 0.4.6 is now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+flowd and Flow-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxFlow GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Flow-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Flow-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Flow-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Flow-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Flow-Qt)\n+Correct sign message flow address tooltip. Fixes #1050 (Flow-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Flow-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Flow-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "76db5f72ff9aba9a0c660676d5b4a3e66721b67c",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "modified",
        "additions": 20,
        "deletions": 20,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,45 +1,45 @@\n-Bitcoin version 0.5.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.0/\n+Flow version 0.5.0 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.5.0/\n \n The major change for this release is a completely new graphical interface that uses the Qt user interface toolkit.\n \n This release include German, Spanish, Spanish-Castilian, Norwegian and Dutch translations. More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/flow/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n-For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep bitcoin up-to-date.  Just type \"sudo apt-add-repository ppa:bitcoin/bitcoin\" in your terminal, then install the bitcoin-qt package.\n+For Ubuntu users, there is a new ppa maintained by Matt Corallo which you can add to your system so that it will automatically keep flow up-to-date.  Just type \"sudo apt-add-repository ppa:flow/flow\" in your terminal, then install the flow-qt package.\n \n MAJOR BUG FIX  (CVE-2011-4447)\n \n-The wallet encryption feature introduced in Bitcoin version 0.4.0 did not sufficiently secure the private keys. An attacker who\n+The wallet encryption feature introduced in Flow version 0.4.0 did not sufficiently secure the private keys. An attacker who\n managed to get a copy of your encrypted wallet.dat file might be able to recover some or all of the unencrypted keys and steal the\n associated coins.\n \n-If you have a previously encrypted wallet.dat, the first time you run bitcoin-qt or bitcoind the wallet will be rewritten, Bitcoin will\n+If you have a previously encrypted wallet.dat, the first time you run flow-qt or flowd the wallet will be rewritten, Flow will\n shut down, and you will be prompted to restart it to run with the new, properly encrypted file.\n \n If you had a previously encrypted wallet.dat that might have been copied or stolen (for example, you backed it up to a public\n-location) you should send all of your bitcoins to yourself using a new bitcoin address and stop using any previously generated addresses.\n+location) you should send all of your flows to yourself using a new flow address and stop using any previously generated addresses.\n \n-Wallets encrypted with this version of Bitcoin are written properly.\n+Wallets encrypted with this version of Flow are written properly.\n \n-Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new bitcoin address; to be certain that the\n+Technical note: the encrypted wallet's 'keypool' will be regenerated the first time you request a new flow address; to be certain that the\n new private keys are properly backed up you should:\n \n-1. Run Bitcoin and let it rewrite the wallet.dat file\n+1. Run Flow and let it rewrite the wallet.dat file\n \n-2. Run it again, then ask it for a new bitcoin address.\n-Bitcoin-Qt: Address Book, then New Address...\n-bitcoind: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n+2. Run it again, then ask it for a new flow address.\n+Flow-Qt: Address Book, then New Address...\n+flowd: run the 'walletpassphrase' RPC command to unlock the wallet,  then run the 'getnewaddress' RPC command.\n \n-3. If your encrypted wallet.dat may have been copied or stolen, send  all of your bitcoins to the new bitcoin address.\n+3. If your encrypted wallet.dat may have been copied or stolen, send  all of your flows to the new flow address.\n \n-4. Shut down Bitcoin, then backup the wallet.dat file.\n-IMPORTANT: be sure to request a new bitcoin address before backing up, so that the 'keypool' is regenerated and backed up.\n+4. Shut down Flow, then backup the wallet.dat file.\n+IMPORTANT: be sure to request a new flow address before backing up, so that the 'keypool' is regenerated and backed up.\n \n-\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your bitcoins.\n+\"Security in depth\" is always a good idea, so choosing a secure location for the backup and/or encrypting the backup before uploading it is recommended. And as in previous releases, if your machine is infected by malware there are several ways an attacker might steal your flows.\n \n Thanks to Alan Reiner (etotheipi) for finding and reporting this bug.\n \n@@ -51,7 +51,7 @@ MAJOR GUI CHANGES\n \n Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n \n-Drag and drop support for bitcoin: URIs on web pages.\n+Drag and drop support for flow: URIs on web pages.\n \n Export transactions as a .csv file.\n \n@@ -63,7 +63,7 @@ getmemorypool : new RPC command, provides everything needed to construct a block\n \n listsinceblock : new RPC command, list transactions since given block\n \n-signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a bitcoin address.\n+signmessage/verifymessage : new RPC commands to sign a message with one of your private keys or verify that a message signed by the private key associated with a flow address.\n \n GENERAL CHANGES\n "
      },
      {
        "sha": "7e1bcb47c8e3fbc1dbe2cceb5546bf9a55ef913a",
        "filename": "doc/release-notes/release-notes-0.5.1.md",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,43 +1,43 @@\n-Bitcoin version 0.5.1 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/\n+Flow version 0.5.1 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.5.1/\n \n This is a bugfix-only release.\n \n This release includes 13 translations, including 5 new translations:\n Italian, Hungarian, Ukranian, Portuguese (Brazilian) and Simplified Chinese.\n More translations are welcome; join the project at Transifex if you can help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/flow/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.5.1  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.5.1  # .zip\n+https://github.com/flow/flow/tarball/v0.5.1  # .tar.gz\n+https://github.com/flow/flow/zipball/v0.5.1  # .zip\n \n For Ubuntu users, there is a new ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+flow up-to-date.  Just type\n+sudo apt-add-repository ppa:flow/flow\n+in your terminal, then install the flow-qt package.\n \n \n BUG FIXES\n \n Re-enable SSL support for the JSON-RPC interface (it was unintentionally\n disabled for the 0.5.0 release binaries).\n \n-The code that finds peers via \"dns seeds\" no longer stops bitcoin startup\n+The code that finds peers via \"dns seeds\" no longer stops flow startup\n if one of the dns seed machines is down.\n \n Tooltips on the transaction list view were rendering incorrectly (as black boxes\n or with a transparent background).\n \n-Prevent a denial-of-service attack involving flooding a bitcoin node with\n+Prevent a denial-of-service attack involving flooding a flow node with\n orphan blocks.\n \n The wallet passphrase dialog now warns you if the caps lock key was pressed.\n \n-Improved searching in addresses and labels in bitcoin-qt.\n+Improved searching in addresses and labels in flow-qt."
      },
      {
        "sha": "6a2e9a7352c283c483e3ed1f66c59c62ceff9f2b",
        "filename": "doc/release-notes/release-notes-0.5.2.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin version 0.5.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.2/\n+Flow version 0.5.2 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.5.2/\n \n This is a bugfix-only release based on 0.5.1.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.2#.tar.gz\n+http://gitorious.org/flow/flowd-stable/archive-tarball/v0.5.2#.tar.gz\n \n BUG FIXES\n \n Check all transactions in blocks after the last checkpoint (0.5.0 and 0.5.1 skipped checking ECDSA signatures during initial blockchain download).\n Cease locking memory used by non-sensitive information (this caused a huge performance hit on some platforms, especially noticable during initial blockchain download; this was\n not a security vulnerability).\n Fixed some address-handling deadlocks (client freezes).\n-No longer accept inbound connections over the internet when Bitcoin is being used with Tor (identity leak).\n+No longer accept inbound connections over the internet when Flow is being used with Tor (identity leak).\n Re-enable SSL support for the JSON-RPC interface (it was unintentionally disabled for the 0.5.0 and 0.5.1 release Linux binaries).\n-Use the correct base transaction fee of 0.0005 BTC for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 BTC which was only meant to be relayed).\n+Use the correct base transaction fee of 0.0005 FLW for accepting transactions into mined blocks (since 0.4.0, it was incorrectly accepting 0.0001 FLW which was only meant to be relayed).\n Don't show \"IP\" for transactions which are not necessarily IP transactions.\n Add new DNS seeds (maintained by Pieter Wuille and Luke Dashjr)."
      },
      {
        "sha": "58025872576a83453ceb3cf08127e0990f3ca36d",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin version 0.5.3 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.3/\n+Flow version 0.5.3 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.5.3/\n \n This is a bugfix-only release based on 0.5.1.\n It also includes a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n+http://gitorious.org/flow/flowd-stable/archive-tarball/v0.5.3#.tar.gz\n \n PROTOCOL UPDATES\n \n BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n-On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n+On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Flow easier, and will not affect normal mode.\n \n BUG FIXES\n \n@@ -24,19 +24,19 @@ Resolved multiple bugs preventing long-term unlocking of encrypted wallets\n Only send local IP in \"version\" messages if it is globally routable (ie, not private), and try to get such an IP from UPnP if applicable.\n Reannounce UPnP port forwards every 20 minutes, to workaround routers expiring old entries, and allow the -upnp option to override any stored setting.\n Skip splash screen when -min is used, and fix Minimize to Tray function.\n-Do not blank \"label\" in Bitcoin-Qt \"Send\" tab, if the user has already entered something.\n+Do not blank \"label\" in Flow-Qt \"Send\" tab, if the user has already entered something.\n Correct various labels and messages.\n Various memory leaks and potential null pointer deferences have been fixed.\n-Handle invalid Bitcoin URIs using \"bitcoin://\" instead of \"bitcoin:\".\n+Handle invalid Flow URIs using \"flow://\" instead of \"flow:\".\n Several shutdown issues have been fixed.\n Revert to \"global progress indication\", as starting from zero every time was considered too confusing for many users.\n Check that keys stored in the wallet are valid at startup, and if not, report corruption.\n Enable accessible widgets on Windows, so that people with screen readers such as NVDA can make sense of it.\n Various build fixes.\n-If no password is specified to bitcoind, recommend a secure password.\n-Automatically focus and scroll to new \"Send coins\" entries in Bitcoin-Qt.\n-Show a message box for --help on Windows, for Bitcoin-Qt.\n+If no password is specified to flowd, recommend a secure password.\n+Automatically focus and scroll to new \"Send coins\" entries in Flow-Qt.\n+Show a message box for --help on Windows, for Flow-Qt.\n Add missing \"About Qt\" menu option to show built-in Qt About dialog.\n-Don't show \"-daemon\" as an option for Bitcoin-Qt, since it isn't available.\n+Don't show \"-daemon\" as an option for Flow-Qt, since it isn't available.\n Update hard-coded fallback seed nodes, choosing recent ones with long uptime and versions at least 0.4.0.\n Add checkpoint at block 168,000."
      },
      {
        "sha": "7f9fb0457c745e9ca150a3082c7155aed93980d7",
        "filename": "doc/release-notes/release-notes-0.5.4.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.4.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,14 +1,14 @@\n-Bitcoin version 0.5.4 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.4/\n+Flow version 0.5.4 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.5.4/\n NOTE: 0.5.4rc3 is being renamed to 0.5.4 final with no changes.\n \n This is a bugfix-only release in the 0.5.x series, plus a few protocol updates.\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Stable source code is hosted at Gitorious:\n-http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.4#.tar.gz\n+http://gitorious.org/flow/flowd-stable/archive-tarball/v0.5.4#.tar.gz\n \n PROTOCOL UPDATES\n \n@@ -22,16 +22,16 @@ Fix broken testnet mining.\n Stop excess inventory relay during initial block download.\n When disconnecting a node, clear the received buffer so that we do not process any already received messages.\n Yet another attempt at implementing \"minimize to tray\" that works on all operating systems.\n-Fix Bitcoin-Qt notifications under Growl 1.3.\n-Increase required age of Bitcoin-Qt's \"not up to date\" status from 30 to 90 minutes.\n+Fix Flow-Qt notifications under Growl 1.3.\n+Increase required age of Flow-Qt's \"not up to date\" status from 30 to 90 minutes.\n Implemented missing verifications that led to crash on entering some wrong passphrases for encrypted wallets.\n Fix default filename suffixes in GNOME save dialog.\n Make the \"Send coins\" tab use the configured unit type, even on the first attempt.\n Print detailed wallet loading errors to debug.log when it is corrupt.\n Allocate exactly the amount of space needed for signing transactions, instead of a fixed 10k buffer.\n Workaround for improbable memory access violation.\n Check wallet's minimum version before trying to load it.\n-Remove wxBitcoin properly when installing Bitcoin-Qt over it. (Windows)\n+Remove wxFlow properly when installing Flow-Qt over it. (Windows)\n Detail reorganization information better in debug log.\n Use a messagebox to display the error when -server is provided without configuring a RPC password.\n Testing suite build now honours provided CXXFLAGS."
      },
      {
        "sha": "14e177d28c57968668aa7ff268b4dabba96773b9",
        "filename": "doc/release-notes/release-notes-0.5.5.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.5.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.5.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,37 +1,37 @@\n-bitcoind and Bitcoin-Qt version 0.5.5 are now available for download at:\n+flowd and Flow-Qt version 0.5.5 are now available for download at:\n Windows: installer | zip (sig)\n Source: tar.gz\n-bitcoind and Bitcoin-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n+flowd and Flow-Qt version 0.6.0.7 are also tagged in git, but it is recommended to upgrade to 0.6.1.\n \n These are bugfix-only releases.\n \n-Please report bugs by replying to this forum thread. Note that the 0.4.x wxBitcoin GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n+Please report bugs by replying to this forum thread. Note that the 0.4.x wxFlow GUI client is no longer maintained nor supported. If someone would like to step up to maintain this, they should contact Luke-Jr.\n \n BUG FIXES\n \n Version 0.6.0 allowed importing invalid \"private keys\", which would be unspendable; 0.6.0.7 will now verify the private key is valid, and refuse to import an invalid one\n Verify status of encrypt/decrypt calls to detect failed padding\n Check blocks for duplicate transactions earlier. Fixes #1167\n Upgrade Windows builds to OpenSSL 1.0.1b\n-Set label when selecting an address that already has a label. Fixes #1080 (Bitcoin-Qt)\n+Set label when selecting an address that already has a label. Fixes #1080 (Flow-Qt)\n JSON-RPC listtransactions's from/count handling is now fixed\n Optimize and fix multithreaded access, when checking whether we already know about transactions\n Fix potential networking deadlock\n Proper support for Growl 1.3 notifications\n Display an error, rather than crashing, if encoding a QR Code failed (0.6.0.7)\n-Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Bitcoin-Qt)\n+Don't erroneously set \"Display addresses\" for users who haven't explicitly enabled it (Flow-Qt)\n Some non-ASCII input in JSON-RPC expecting hexadecimal may have been misinterpreted rather than rejected\n Missing error condition checking added\n-Do not show green tick unless all known blocks are downloaded. Fixes #921 (Bitcoin-Qt)\n+Do not show green tick unless all known blocks are downloaded. Fixes #921 (Flow-Qt)\n Increase time ago of last block for \"up to date\" status from 30 to 90 minutes\n-Show a message box when runaway exception happens (Bitcoin-Qt)\n+Show a message box when runaway exception happens (Flow-Qt)\n Use a messagebox to display the error when -server is provided without providing a rpc password\n-Show error message instead of exception crash when unable to bind RPC port (Bitcoin-Qt)\n-Correct sign message bitcoin address tooltip. Fixes #1050 (Bitcoin-Qt)\n+Show error message instead of exception crash when unable to bind RPC port (Flow-Qt)\n+Correct sign message flow address tooltip. Fixes #1050 (Flow-Qt)\n Removed \"(no label)\" from QR Code dialog titlebar if we have no label (0.6.0.7)\n Removed an ugly line break in tooltip for mature transactions (0.6.0.7)\n-Add missing tooltip and key shortcut in settings dialog (part of #1088) (Bitcoin-Qt)\n+Add missing tooltip and key shortcut in settings dialog (part of #1088) (Flow-Qt)\n Work around issue in boost::program_options that prevents from compiling in clang\n Fixed bugs occurring only on platforms with unsigned characters (such as ARM).\n-Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Bitcoin-Qt)\n+Rename make_windows_icon.py to .sh as it is a shell script. Fixes #1099 (Flow-Qt)\n Various trivial internal corrections to types used for counting/size loops and warnings"
      },
      {
        "sha": "59190a5b6edc0665e8aa5134da620536e02ca5c6",
        "filename": "doc/release-notes/release-notes-0.6.0.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,25 +1,25 @@\n-Bitcoin version 0.6.0 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.0/test/\n+Flow version 0.6.0 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.6.0/test/\n \n This release includes more than 20 language localizations.\n More translations are welcome; join the\n project at Transifex to help:\n-https://www.transifex.net/projects/p/bitcoin/\n+https://www.transifex.net/projects/p/flow/\n \n Please report bugs using the issue tracker at github:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n Project source code is hosted at github; we are no longer\n distributing .tar.gz files here, you can get them\n directly from github:\n-https://github.com/bitcoin/bitcoin/tarball/v0.6.0  # .tar.gz\n-https://github.com/bitcoin/bitcoin/zipball/v0.6.0  # .zip\n+https://github.com/flow/flow/tarball/v0.6.0  # .tar.gz\n+https://github.com/flow/flow/zipball/v0.6.0  # .zip\n \n For Ubuntu users, there is a ppa maintained by Matt Corallo which\n you can add to your system so that it will automatically keep\n-bitcoin up-to-date.  Just type\n-sudo apt-add-repository ppa:bitcoin/bitcoin\n-in your terminal, then install the bitcoin-qt package.\n+flow up-to-date.  Just type\n+sudo apt-add-repository ppa:flow/flow\n+in your terminal, then install the flow-qt package.\n \n \n KNOWN ISSUES\n@@ -30,38 +30,38 @@ because database writes are queued to speed up download\n time.\n \n \n-NEW FEATURES SINCE BITCOIN VERSION 0.5\n+NEW FEATURES SINCE FLOW VERSION 0.5\n \n Initial network synchronization should be much faster\n (one or two hours on a typical machine instead of ten or more\n hours).\n \n Backup Wallet menu option.\n \n-Bitcoin-Qt can display and save QR codes for sending\n+Flow-Qt can display and save QR codes for sending\n and receiving addresses.\n \n New context menu on addresses to copy/edit/delete them.\n \n New Sign Message dialog that allows you to prove that you\n-own a bitcoin address by creating a digital\n+own a flow address by creating a digital\n signature.\n \n New wallets created with this version will\n use 33-byte 'compressed' public keys instead of\n 65-byte public keys, resulting in smaller\n-transactions and less traffic on the bitcoin\n+transactions and less traffic on the flow\n network. The shorter keys are already supported\n by the network but wallet.dat files containing\n short keys are not compatible with earlier\n-versions of Bitcoin-Qt/bitcoind.\n+versions of Flow-Qt/flowd.\n \n New command-line argument -blocknotify=<command>\n that will spawn a shell process to run <command> \n when a new block is accepted.\n \n New command-line argument -splash=0 to disable\n-Bitcoin-Qt's initial splash screen\n+Flow-Qt's initial splash screen\n \n validateaddress JSON-RPC api command output includes\n two new fields for addresses in the wallet:\n@@ -104,11 +104,11 @@ attacks were fixed.\n \n NOT YET IMPLEMENTED FEATURES\n \n-Support for clicking on bitcoin: URIs and\n-opening/launching Bitcoin-Qt is available only on Linux,\n+Support for clicking on flow: URIs and\n+opening/launching Flow-Qt is available only on Linux,\n and only if you configure your desktop to launch\n-Bitcoin-Qt. All platforms support dragging and dropping\n-bitcoin: URIs onto the Bitcoin-Qt window to start\n+Flow-Qt. All platforms support dragging and dropping\n+flow: URIs onto the Flow-Qt window to start\n payment.\n \n \n@@ -117,21 +117,21 @@ PRELIMINARY SUPPORT FOR MULTISIGNATURE TRANSACTIONS\n This release has preliminary support for multisignature\n transactions-- transactions that require authorization\n from more than one person or device before they\n-will be accepted by the bitcoin network.\n+will be accepted by the flow network.\n \n Prior to this release, multisignature transactions\n were considered 'non-standard' and were ignored;\n with this release multisignature transactions are\n considered standard and will start to be relayed\n and accepted into blocks.\n \n-It is expected that future releases of Bitcoin-Qt\n+It is expected that future releases of Flow-Qt\n will support the creation of multisignature transactions,\n once enough of the network has upgraded so relaying\n and validating them is robust.\n \n For this release, creation and testing of multisignature\n-transactions is limited to the bitcoin test network using\n+transactions is limited to the flow test network using\n the \"addmultisigaddress\" JSON-RPC api call.\n \n Short multisignature address support is included in this"
      },
      {
        "sha": "df9e0d7fc37645f36d8817bcc6a21f43011b76da",
        "filename": "doc/release-notes/release-notes-0.6.2.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n-Bitcoin version 0.6.2 is now available for download at:\n-http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.2/\n+Flow version 0.6.2 is now available for download at:\n+http://sourceforge.net/projects/flow/files/Flow/flow-0.6.2/\n \n This is a bug-fix and code-cleanup release, with no major new features.\n \n Please report bugs using the github issue tracker at:\n-https://github.com/bitcoin/bitcoin/issues\n+https://github.com/flow/flow/issues\n \n \n NOTABLE CHANGES\n@@ -14,7 +14,7 @@ portable to different data directories by default. If you need a\n portable blkindex.dat file then run with the new -detachdb=1 option\n or the \"Detach databases at shutdown\" GUI preference.\n \n-Fixed https://github.com/bitcoin/bitcoin/issues/1065, a bug that\n+Fixed https://github.com/flow/flow/issues/1065, a bug that\n could cause long-running nodes to crash.\n \n Mac and Windows binaries are compiled against OpenSSL 1.0.1b (Linux"
      },
      {
        "sha": "91d1616365c4dc747ac47308bcdc5284b3eebd89",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,29 +1,29 @@\n-Bitcoin version 0.6.3 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.6.3/\n+Flow version 0.6.3 is now available for download at:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.6.3/\n \n This is a bug-fix release, with no new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n CHANGE SUMMARY\n \n Fixed a serious denial-of-service attack that could cause the\n-bitcoin process to become unresponsive. Thanks to Sergio Lerner\n+flow process to become unresponsive. Thanks to Sergio Lerner\n for finding and responsibly reporting the problem. (CVE-2012-3789)\n \n Optimized the process of checking transaction signatures, to\n speed up processing of new block messages and make propagating\n blocks across the network faster.\n \n-Fixed an obscure bug that could cause the bitcoin process to get\n+Fixed an obscure bug that could cause the flow process to get\n stuck on an invalid block-chain, if the invalid chain was\n hundreds of blocks long.\n \n-Bitcoin-Qt no longer automatically selects the first address\n+Flow-Qt no longer automatically selects the first address\n in the address book (Issue #1384).\n \n-Fixed minimize-to-dock behavior of Bitcoin-Qt on the Mac.\n+Fixed minimize-to-dock behavior of Flow-Qt on the Mac.\n \n Added a block checkpoint at block 185,333 to speed up initial\n blockchain download."
      },
      {
        "sha": "a2b798656d165fddbcd26dfb2c03d19cd1de57bb",
        "filename": "doc/release-notes/release-notes-0.7.0.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,24 +1,24 @@\n-Bitcoin version 0.7.0 is now available for download at:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.0/\n+Flow version 0.7.0 is now available for download at:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.7.0/\n \n-We recommend that everybody running prior versions of bitcoind/Bitcoin-Qt\n+We recommend that everybody running prior versions of flowd/Flow-Qt\n upgrade to this release, except for users running Mac OSX 10.5.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.0  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.0  # .zip\n+  https://github.com/flow/flow/tarball/v0.7.0  # .tar.gz\n+  https://github.com/flow/flow/zipball/v0.7.0  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n-bitcoin up-to-date.  Just type\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+flow up-to-date.  Just type\n+  sudo apt-add-repository ppa:flow/flow\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the flow-qt package:\n+  sudo apt-get install flow-qt\n \n \n How to Upgrade\n@@ -27,10 +27,10 @@ If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n Code:\n-/Applications/Bitcoin-Qt\n+/Applications/Flow-Qt\n (on Mac) or\n Code:\n-bitcoind/bitcoin-qt\n+flowd/flow-qt\n (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n@@ -45,14 +45,14 @@ Incompatible Changes\n   and 'getrawmempool' commands.\n * Remove deprecated RPC 'getblocknumber'\n \n-Bitcoin Improvement Proposals implemented\n+Flow Improvement Proposals implemented\n \n BIP 22 - 'getblocktemplate', 'submitblock' RPCs\n BIP 34 - block version 2, height in coinbase\n BIP 35 - 'mempool' message, extended 'getdata' message behavior\n \n \n-Core bitcoin handling and blockchain database\n+Core flow handling and blockchain database\n \n * Reduced CPU usage, by eliminating some redundant hash calculations\n * Cache signature verifications, to eliminate redundant signature checks\n@@ -109,7 +109,7 @@ Qt GUI\n * Add 2 labels to the overviewpage that display Wallet and Transaction status (obsolete or current)\n * Extend the optionsdialog (e.g. language selection) and re-work it to a tabbed UI\n * Merge sign/verify message into a single window with tabbed UI\n-* Ensure a changed bitcoin unit immediately updates all GUI elements that use units\n+* Ensure a changed flow unit immediately updates all GUI elements that use units\n * Update QR Code dialog\n * Improve error reporting at startup\n * Fine-grained UI updates for a much smoother UI during block downloads\n@@ -119,8 +119,8 @@ Qt GUI\n * Much better translations\n * Override progress bar design on platforms with segmented progress bars to assist with readability\n * Added 'immature balance' display on the overview page\n-* (Windows only): enable ASLR and DEP for bitcoin-qt.exe\n-* (Windows only): add meta-data to bitcoin-qt.exe (e.g. description)\n+* (Windows only): enable ASLR and DEP for flow-qt.exe\n+* (Windows only): add meta-data to flow-qt.exe (e.g. description)\n \n Internal codebase\n \n@@ -131,7 +131,7 @@ Internal codebase\n Miscellaneous\n \n * Reopen debug.log upon SIGHUP\n-* Bash programmable completion for bitcoind(1)\n+* Bash programmable completion for flowd(1)\n * On supported OS's, each thread is given a useful name\n \n "
      },
      {
        "sha": "8084e43f9abaa20e3ea8e5e03b3155b5bab36cda",
        "filename": "doc/release-notes/release-notes-0.7.1.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,23 +1,23 @@\n-Bitcoin version 0.7.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.1/\n+Flow version 0.7.1 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.7.1/\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n Project source code is hosted at github; you can get\n source-only tarballs/zipballs directly from there:\n-  https://github.com/bitcoin/bitcoin/tarball/v0.7.1  # .tar.gz\n-  https://github.com/bitcoin/bitcoin/zipball/v0.7.1  # .zip\n+  https://github.com/flow/flow/tarball/v0.7.1  # .tar.gz\n+  https://github.com/flow/flow/zipball/v0.7.1  # .zip\n \n Ubuntu Linux users can use the \"Personal Package Archive\" (PPA)\n maintained by Matt Corallo to automatically keep \n up-to-date.  Just type:\n-  sudo apt-add-repository ppa:bitcoin/bitcoin\n+  sudo apt-add-repository ppa:flow/flow\n   sudo apt-get update\n-in your terminal, then install the bitcoin-qt package:\n-  sudo apt-get install bitcoin-qt\n+in your terminal, then install the flow-qt package:\n+  sudo apt-get install flow-qt\n \n KNOWN ISSUES\n ------------\n@@ -30,7 +30,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -75,7 +75,7 @@ Dependency changes\n Bug fixes\n ---------\n \n-* Clicking on a bitcoin: URI on Windows should now launch Bitcoin-Qt properly.\n+* Clicking on a flow: URI on Windows should now launch Flow-Qt properly.\n \n * When running -testnet, use RPC port 18332 by default.\n "
      },
      {
        "sha": "a00318d18f948a52f15a45144133d17875a2f7fe",
        "filename": "doc/release-notes/release-notes-0.7.2.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.7.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.7.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,18 +1,18 @@\n-Bitcoin version 0.7.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.7.2\n+Flow version 0.7.2 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.7.2\n \n This is a bug-fix minor release.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you were running on Linux with a version that might have been compiled\n with a different version of Berkeley DB (for example, if you were using an\n@@ -40,7 +40,7 @@ Bug fixes\n   database twice.\n \n * Fix use-after-free problems in initialization and shutdown, the latter of\n-  which caused Bitcoin-Qt to crash on Windows when exiting.\n+  which caused Flow-Qt to crash on Windows when exiting.\n \n * Correct library linking so building on Windows natively works.\n "
      },
      {
        "sha": "0361663b33cc11ad6d289f0d9517c1d44dbbf26c",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.0 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.0/\n+Flow-Qt version 0.8.0 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.0/\n \n This is a major release designed to improve performance and handle the\n increasing volume of transactions on the network.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n The first time you run after the upgrade a re-indexing process will be\n started that will take anywhere from 30 minutes to several hours,\n@@ -31,7 +31,7 @@ details).\n Improvements\n ------------\n \n-Mac and Windows binaries are signed with certificates owned by the Bitcoin\n+Mac and Windows binaries are signed with certificates owned by the Flow\n Foundation, to be compatible with the new security features in OSX 10.8 and\n Windows 8.\n \n@@ -61,7 +61,7 @@ contrib/spendfrom is a python-language command-line utility that demonstrates\n how to use the \"raw transactions\" JSON-RPC api to send coins received from particular\n addresses (also known as \"coin control\").\n \n-New/changed settings (command-line or bitcoin.conf file)\n+New/changed settings (command-line or flow.conf file)\n --------------------------------------------------------\n \n dbcache : controls LevelDB memory usage."
      },
      {
        "sha": "1ffc4fa15c6548e50390fc076c92d7de905c8155",
        "filename": "doc/release-notes/release-notes-0.8.1.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt/bitcoind version 0.8.1 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.1/\n+Flow-Qt/flowd version 0.8.1 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.1/\n \n This is a maintenance release that adds a new network rule to avoid\n a chain-forking incompatibility with versions 0.7.2 and earlier.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.1 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "2b57e60ac7f27bf2d973ec0b3b9130267a1dbaa1",
        "filename": "doc/release-notes/release-notes-0.8.2.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,19 +1,19 @@\n-Bitcoin-Qt version 0.8.2 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.2/\n+Flow-Qt version 0.8.2 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.2/\n \n This is a maintenance release that fixes many bugs and includes\n a few small new features.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n \n How to Upgrade\n \n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.2 your blockchain files will be re-indexed, which will take\n@@ -24,12 +24,12 @@ your machine.\n \n Fee Policy changes\n \n-The default fee for low-priority transactions is lowered from 0.0005 BTC \n+The default fee for low-priority transactions is lowered from 0.0005 FLW \n (for each 1,000 bytes in the transaction; an average transaction is\n-about 500 bytes) to 0.0001 BTC.\n+about 500 bytes) to 0.0001 FLW.\n \n Payments (transaction outputs) of 0.543 times the minimum relay fee\n-(0.00005430 BTC) are now considered 'non-standard', because storing them\n+(0.00005430 FLW) are now considered 'non-standard', because storing them\n costs the network more than they are worth and spending them will usually\n cost their owner more in transaction fees than they are worth.\n \n@@ -43,7 +43,7 @@ with code that automatically calculates and suggests appropriate fees in the\n 0.9 release and note that if you set a fee policy significantly different from\n the rest of the network your transactions may never confirm.\n \n-Bitcoin-Qt changes\n+Flow-Qt changes\n \n * New icon and splash screen\n * Improve reporting of synchronization process\n@@ -58,7 +58,7 @@ Bitcoin-Qt changes\n   to current translations\n \n MacOSX:\n-* OSX support for click-to-pay (bitcoin:) links\n+* OSX support for click-to-pay (flow:) links\n * Fix GUI disappearing problem on MacOSX (issue #1522)\n \n Linux/Unix:\n@@ -97,8 +97,8 @@ Wallet compatibility/rescuing\n \n Known Bugs\n \n-* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Bitcoin-Qt debug\n-console will cause Bitcoin-Qt to crash. Run Bitcoin-Qt with the -server command-line\n+* Entering the 'getblocktemplate' or 'getwork' RPC commands into the Flow-Qt debug\n+console will cause Flow-Qt to crash. Run Flow-Qt with the -server command-line\n option to workaround.\n \n Thanks to everybody who contributed to the 0.8.2 release!"
      },
      {
        "sha": "1da81a91aa9752d467a69f32c4990307b8e13448",
        "filename": "doc/release-notes/release-notes-0.8.3.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.3 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.3/\n+Flow-Qt version 0.8.3 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.3/\n \n This is a maintenance release to fix a denial-of-service attack that\n can cause nodes to crash.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n 0.8.3 Release notes\n "
      },
      {
        "sha": "72c3dd4f4afbcccae4bd0e7701afce7976ba8bce",
        "filename": "doc/release-notes/release-notes-0.8.4.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.4.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.4 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.4/\n+Flow-Qt version 0.8.4 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.4/\n \n This is a maintenance release to fix a critical bug and three\n security issues; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.4 your blockchain files will be re-indexed, which will take\n@@ -29,12 +29,12 @@ Security issues\n \n An attacker could send a series of messages that resulted in\n an integer division-by-zero error in the Bloom Filter handling\n-code, causing the Bitcoin-Qt or bitcoind process to crash.\n+code, causing the Flow-Qt or flowd process to crash.\n Bloom filters were introduced with version 0.8, so versions 0.8.0\n through 0.8.3 are vulnerable to this critical denial-of-service attack.\n \n A constant-time algorithm is now used to check RPC password\n-guess attempts; fixes https://github.com/bitcoin/bitcoin/issues/2838\n+guess attempts; fixes https://github.com/flow/flow/issues/2838\n (CVE-2013-4165)\n \n Implement a better fix for the fill-memory-with-orphan-transactions\n@@ -55,11 +55,11 @@ OSX: use 'FD_FULLSYNC' with LevelDB, which will (hopefully!)\n prevent the database corruption issues many people have\n experienced on OSX.\n \n-Linux: clicking on bitcoin: links was broken if you were using\n+Linux: clicking on flow: links was broken if you were using\n a Gnome-based desktop.\n \n Fix a hang-at-shutdown bug that only affects users that compile\n-their own version of Bitcoin against Boost versions 1.50-1.52.\n+their own version of Flow against Boost versions 1.50-1.52.\n \n Other changes\n -------------"
      },
      {
        "sha": "9c8d1b05314bbc9b96014010880d9651b62fdb61",
        "filename": "doc/release-notes/release-notes-0.8.5.md",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.5.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-Bitcoin-Qt version 0.8.5 is now available from:\n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.5/\n+Flow-Qt version 0.8.5 is now available from:\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.5/\n \n This is a maintenance release to fix a critical bug;\n we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n \n How to Upgrade\n@@ -14,7 +14,7 @@ How to Upgrade\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.5 your blockchain files will be re-indexed, which will take"
      },
      {
        "sha": "44d077dc2c84ef8ea286f7e36a05075b5cd82886",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-Bitcoin-Qt version 0.8.6 final is now available from:\n+Flow-Qt version 0.8.6 final is now available from:\n \n-  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.8.6/\n+  http://sourceforge.net/projects/flow/files/Flow/flow-0.8.6/\n \n This is a maintenance release to fix a critical bug; we urge all users to upgrade.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n@@ -16,7 +16,7 @@ If you already downloaded 0.8.6rc1 you do not need to re-download. This release\n If you are running an older version, shut it down. Wait\n until it has completely shut down (which might take a few minutes for older\n versions), then run the installer (on Windows) or just copy over\n-/Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+/Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you\n run 0.8.6 your blockchain files will be re-indexed, which will take\n@@ -47,7 +47,7 @@ your machine.\n \n - Additional debug.log logging for diagnosis of network problems, log timestamps by default\n \n-- Fix Bitcoin-Qt startup crash when clicking dock icon on OSX \n+- Fix Flow-Qt startup crash when clicking dock icon on OSX \n \n - Fix memory leaks in CKey::SetCompactSignature() and Key::SignCompact()\n \n@@ -63,4 +63,4 @@ Warning\n   Hence it is recommended to use a 64-bit executable if possible.\n   A 64-bit executable for Windows is planned for 0.9.\n \n-Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/bitcoin/bitcoin.org/pull/279).\n+Note: Gavin Andresen's GPG signing key for SHA256SUMS.asc has been changed from  key id 1FC730C1 to sub key 7BF6E212 (see https://github.com/flow/flow.org/pull/279)."
      },
      {
        "sha": "e63aeff360018a670af5217f7a01957a9d6941d5",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.0 is now available from:\n+Flow Core version 0.9.0 is now available from:\n \n-  https://bitcoin.org/bin/0.9.0/\n+  https://flow.org/bin/0.9.0/\n \n This is a new major version release, bringing both new features and\n bug fixes.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), uninstall all\n-earlier versions of Bitcoin, then run the installer (on Windows) or just copy\n-over /Applications/Bitcoin-Qt (on Mac) or bitcoind/bitcoin-qt (on Linux).\n+earlier versions of Flow, then run the installer (on Windows) or just copy\n+over /Applications/Flow-Qt (on Mac) or flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.0 your blockchain files will be re-indexed, which will take anywhere from \n 30 minutes to several hours, depending on the speed of your machine.\n \n-On Windows, do not forget to uninstall all earlier versions of the Bitcoin\n+On Windows, do not forget to uninstall all earlier versions of the Flow\n client first, especially if you are switching to the 64-bit version.\n \n Windows 64-bit installer\n@@ -59,11 +59,11 @@ Also, the first time you run a 0.8.x release on a 0.9 wallet it will rescan\n the blockchain for missing spent coins, which will take a long time (tens\n of minutes on a typical machine).\n \n-Rebranding to Bitcoin Core\n+Rebranding to Flow Core\n ---------------------------\n \n-To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n-have renamed the reference client to Bitcoin Core.\n+To reduce confusion between Flow-the-network and Flow-the-software we\n+have renamed the reference client to Flow Core.\n \n \n OP_RETURN and data in the block chain\n@@ -74,7 +74,7 @@ blockchain.  This change is not an endorsement of storing data in the\n blockchain.  The OP_RETURN change creates a provably-prunable output,\n to avoid data storage schemes -- some of which were already deployed --\n that were storing arbitrary data such as images as forever-unspendable\n-TX outputs, bloating bitcoin's UTXO database.\n+TX outputs, bloating flow's UTXO database.\n \n Storing arbitrary data in the blockchain is still a bad idea; it is less\n costly and far more efficient to store non-currency data elsewhere.\n@@ -85,20 +85,20 @@ Autotools build system\n For 0.9.0 we switched to an autotools-based build system instead of individual\n (q)makefiles.\n \n-Using the standard \"./autogen.sh; ./configure; make\" to build Bitcoin-Qt and\n-bitcoind makes it easier for experienced open source developers to contribute \n+Using the standard \"./autogen.sh; ./configure; make\" to build Flow-Qt and\n+flowd makes it easier for experienced open source developers to contribute \n to the project.\n \n Be sure to check doc/build-*.md for your platform before building from source.\n \n-Bitcoin-cli\n+Flow-cli\n -------------\n \n-Another change in the 0.9 release is moving away from the bitcoind executable\n+Another change in the 0.9 release is moving away from the flowd executable\n functioning both as a server and as a RPC client. The RPC client functionality\n-(\"tell the running bitcoin daemon to do THIS\") was split into a separate\n-executable, 'bitcoin-cli'. The RPC client code will eventually be removed from\n-bitcoind, but will be kept for backwards compatibility for a release or two.\n+(\"tell the running flow daemon to do THIS\") was split into a separate\n+executable, 'flow-cli'. The RPC client code will eventually be removed from\n+flowd, but will be kept for backwards compatibility for a release or two.\n \n `walletpassphrase` RPC\n -----------------------\n@@ -143,7 +143,7 @@ Transaction Fees\n \n This release drops the default fee required to relay transactions across the\n network and for miners to consider the transaction in their blocks to\n-0.01mBTC per kilobyte.\n+0.01mFLW per kilobyte.\n \n Note that getting a transaction relayed across the network does NOT guarantee\n that the transaction will be accepted by a miner; by default, miners fill\n@@ -156,7 +156,7 @@ the mintxfee setting to determine which low-priority transactions should\n be considered for inclusion in blocks.\n \n The wallet code still uses a default fee for low-priority transactions of\n-0.1mBTC per kilobyte. During periods of heavy transaction volume, even this\n+0.1mFLW per kilobyte. During periods of heavy transaction volume, even this\n fee may not be enough to get transactions confirmed quickly; the mintxfee\n option may be used to override the default.\n \n@@ -197,13 +197,13 @@ Command-line options:\n - New option: -nospendzeroconfchange to never spend unconfirmed change outputs\n - New option: -zapwallettxes to rebuild the wallet's transaction information\n - Rename option '-tor' to '-onion' to better reflect what it does\n-- Add '-disablewallet' mode to let bitcoind run entirely without wallet (when\n+- Add '-disablewallet' mode to let flowd run entirely without wallet (when\n   built with wallet)\n - Update default '-rpcsslciphers' to include TLSv1.2\n - make '-logtimestamps' default on and rework help-message\n - RPC client option: '-rpcwait', to wait for server start\n - Remove '-logtodebugger'\n-- Allow `-noserver` with bitcoind\n+- Allow `-noserver` with flowd\n \n Block-chain handling and storage:\n \n@@ -239,7 +239,7 @@ Mining:\n \n Protocol and network:\n \n-- Drop the fee required to relay a transaction to 0.01mBTC per kilobyte\n+- Drop the fee required to relay a transaction to 0.01mFLW per kilobyte\n - Send tx relay flag with version\n - New 'reject' P2P message (BIP 0061, see\n   https://gist.github.com/gavinandresen/7079034 for draft)\n@@ -254,7 +254,7 @@ Protocol and network:\n - Improve logging of failed connections\n - Bump protocol version to 70002\n - Add some additional logging to give extra network insight\n-- Added new DNS seed from bitcoinstats.com\n+- Added new DNS seed from flowstats.com\n \n Validation:\n \n@@ -295,26 +295,26 @@ GUI:\n - Add Coin Control Features\n - Improve receive coins workflow: make the 'Receive' tab into a form to request\n   payments, and move historical address list functionality to File menu.\n-- Rebrand to `Bitcoin Core`\n+- Rebrand to `Flow Core`\n - Move initialization/shutdown to a thread. This prevents \"Not responding\"\n   messages during startup. Also show a window during shutdown.\n - Don't regenerate autostart link on every client startup\n-- Show and store message of normal bitcoin:URI\n+- Show and store message of normal flow:URI\n - Fix richtext detection hang issue on very old Qt versions\n - OS X: Make use of the 10.8+ user notification center to display Growl-like \n   notifications\n - OS X: Added NSHighResolutionCapable flag to Info.plist for better font\n   rendering on Retina displays.\n-- OS X: Fix bitcoin-qt startup crash when clicking dock icon\n-- Linux: Fix Gnome bitcoin: URI handler\n+- OS X: Fix flow-qt startup crash when clicking dock icon\n+- Linux: Fix Gnome flow: URI handler\n \n Miscellaneous:\n \n - Add Linux script (contrib/qos/tc.sh) to limit outgoing bandwidth\n - Add '-regtest' mode, similar to testnet but private with instant block\n   generation with 'setgenerate' RPC.\n - Add 'linearize.py' script to contrib, for creating bootstrap.dat\n-- Add separate bitcoin-cli client\n+- Add separate flow-cli client\n \n Credits\n --------"
      },
      {
        "sha": "bad268256f320edfb4688d388ae582da0156b843",
        "filename": "doc/release-notes/release-notes-0.9.1.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,27 +1,27 @@\n-Bitcoin Core version 0.9.1 is now available from:\n+Flow Core version 0.9.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.1/\n+  https://flow.org/bin/0.9.1/\n \n This is a security update. It is recommended to upgrade to this release\n as soon as possible.\n \n It is especially important to upgrade if you currently have version\n 0.9.0 installed and are using the graphical interface OR you are using\n-bitcoind from any pre-0.9.1 version, and have enabled SSL for RPC and\n+flowd from any pre-0.9.1 version, and have enabled SSL for RPC and\n have configured allowip to allow rpc connections from potentially\n hostile hosts.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -33,7 +33,7 @@ If you are upgrading from version 0.7.2 or earlier, the first time you run\n No code changes were made between 0.9.0 and 0.9.1. Only the dependencies were changed.\n \n - Upgrade OpenSSL to 1.0.1g. This release fixes the following vulnerabilities which can\n-  affect the Bitcoin Core software:\n+  affect the Flow Core software:\n \n   - CVE-2014-0160 (\"heartbleed\")\n     A missing bounds check in the handling of the TLS heartbeat extension can"
      },
      {
        "sha": "33e5e700c47f55c465adf51aa6e06274d1ccc931",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2.1 is now available from:\n+Flow Core version 0.9.2.1 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2.1/\n+  https://flow.org/bin/0.9.2.1/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2.1 your blockchain files will be re-indexed, which will take anywhere from \n@@ -93,7 +93,7 @@ Protocol and network code:\n Wallet:\n \n - Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Lower paytxfee warning threshold from 0.25 FLW to 0.01 FLW\n - Fix importwallet nTimeFirstKey (trigger necessary rescans)\n - Log BerkeleyDB version at startup\n - CWallet init fix\n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start flow on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "cb1132cabc8418eb109e6150df0e76cbce0689c1",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,22 +1,22 @@\n-Bitcoin Core version 0.9.2 is now available from:\n+Flow Core version 0.9.2 is now available from:\n \n-  https://bitcoin.org/bin/0.9.2/\n+  https://flow.org/bin/0.9.2/\n \n This is a new minor version release, bringing mostly bug fixes and some minor\n improvements. OpenSSL has been updated because of a security issue (CVE-2014-0224).\n Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n --------------\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.2 your blockchain files will be re-indexed, which will take anywhere from \n@@ -93,7 +93,7 @@ Protocol and network code:\n Wallet:\n \n - Make GetAvailableCredit run GetHash() only once per transaction (performance improvement)\n-- Lower paytxfee warning threshold from 0.25 BTC to 0.01 BTC\n+- Lower paytxfee warning threshold from 0.25 FLW to 0.01 FLW\n - Fix importwallet nTimeFirstKey (trigger necessary rescans)\n - Log BerkeleyDB version at startup\n - CWallet init fix\n@@ -130,7 +130,7 @@ GUI:\n - Catch Windows shutdown events while client is running\n - Optionally add third party links to transaction context menu\n - Check for !pixmap() before trying to export QR code (avoids crashes when no QR code could be generated)\n-- Fix \"Start bitcoin on system login\"\n+- Fix \"Start flow on system login\"\n \n Miscellaneous:\n "
      },
      {
        "sha": "ef6457fdb826d011fe844762772ba3554f71fd24",
        "filename": "doc/release-notes/release-notes-0.9.3.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.3.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n-Bitcoin Core version 0.9.3 is now available from:\n+Flow Core version 0.9.3 is now available from:\n \n-  https://bitcoin.org/bin/0.9.3/\n+  https://flow.org/bin/0.9.3/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n Upgrading and downgrading\n ==========================\n@@ -17,8 +17,8 @@ How to Upgrade\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n If you are upgrading from version 0.7.2 or earlier, the first time you run\n 0.9.3 your blockchain files will be re-indexed, which will take anywhere from \n@@ -70,7 +70,7 @@ GUI:\n Miscellaneous:\n - key.cpp: fail with a friendlier message on missing ssl EC support\n - Remove bignum dependency for scripts\n-- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Bitcoin Core)\n+- Upgrade OpenSSL to 1.0.1i (see https://www.openssl.org/news/secadv_20140806.txt - just to be sure, no critical issues for Flow Core)\n - Upgrade miniupnpc to 1.9.20140701\n - Fix boost detection in build system on some platforms\n \n@@ -98,4 +98,4 @@ Thanks to everyone who contributed to this release:\n - Wladimir J. van der Laan\n - Zak Wilcox\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "ec9f41efae90e332d81c5fe98e1b9729c2bb8ca2",
        "filename": "doc/release-notes/release-notes-0.9.4.md",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.4.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.4.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.4.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,39 +1,39 @@\n-Bitcoin Core version 0.9.4 is now available from:\n+Flow Core version 0.9.4 is now available from:\n \n-  https://bitcoin.org/bin/0.9.4/\n+  https://flow.org/bin/0.9.4/\n \n This is a new minor version release, bringing only bug fixes and updated\n translations. Upgrading to this release is recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n OpenSSL Warning\n ================\n \n OpenSSL 1.0.0p / 1.0.1k was recently released and is being pushed out by\n various operating system maintainers. Review by Gregory Maxwell determined that\n-this update is incompatible with the Bitcoin system and could lead to consensus\n+this update is incompatible with the Flow system and could lead to consensus\n forks.\n \n-Bitcoin Core released binaries from https://bitcoin.org are unaffected,\n+Flow Core released binaries from https://flow.org are unaffected,\n as are any built with the gitian deterministic build system.\n \n However, if you are running either\n \n-- The Ubuntu PPA from https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin\n-- A third-party or self-compiled Bitcoin Core\n+- The Ubuntu PPA from https://launchpad.net/~flow/+archive/ubuntu/flow\n+- A third-party or self-compiled Flow Core\n \n-upgrade to Bitcoin Core 0.9.4, which includes a workaround, **before** updating\n+upgrade to Flow Core 0.9.4, which includes a workaround, **before** updating\n OpenSSL.\n \n The incompatibility is due to the OpenSSL update changing the\n@@ -92,4 +92,4 @@ Thanks to who contributed to this release, at least:\n - Sergio Demian Lerner\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "d736c9bdb7ec0b5d86979c2173f613f99ce1c79e",
        "filename": "doc/release-notes/release-notes-0.9.5.md",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.5.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-notes/release-notes-0.9.5.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.5.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,33 +1,33 @@\n-Bitcoin Core version 0.9.5 is now available from:\n+Flow Core version 0.9.5 is now available from:\n \n-  https://bitcoin.org/bin/0.9.5/\n+  https://flow.org/bin/0.9.5/\n \n This is a new minor version release, with the goal of backporting BIP66. There\n are also a few bug fixes and updated translations. Upgrading to this release is\n recommended.\n \n Please report bugs using the issue tracker at github:\n \n-  https://github.com/bitcoin/bitcoin/issues\n+  https://github.com/flow/flow/issues\n \n How to Upgrade\n ===============\n \n If you are running an older version, shut it down. Wait until it has completely\n shut down (which might take a few minutes for older versions), then run the\n-installer (on Windows) or just copy over /Applications/Bitcoin-Qt (on Mac) or\n-bitcoind/bitcoin-qt (on Linux).\n+installer (on Windows) or just copy over /Applications/Flow-Qt (on Mac) or\n+flowd/flow-qt (on Linux).\n \n Notable changes\n ================\n \n Mining and relay policy enhancements\n ------------------------------------\n \n-Bitcoin Core's block templates are now for version 3 blocks only, and any mining\n+Flow Core's block templates are now for version 3 blocks only, and any mining\n software relying on its `getblocktemplate` must be updated in parallel to use\n libblkmaker either version 0.4.2 or any version from 0.5.1 onward.\n-If you are solo mining, this will affect you the moment you upgrade Bitcoin\n+If you are solo mining, this will affect you the moment you upgrade Flow\n Core, which must be done prior to BIP66 achieving its 951/1001 status.\n If you are mining with the stratum mining protocol: this does not affect you.\n If you are mining with the getblocktemplate protocol to a pool: this will affect\n@@ -57,4 +57,4 @@ Thanks to who contributed to this release, at least:\n - Pieter Wuille\n - Wladimir J. van der Laan\n \n-As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/bitcoin/).\n+As well as everyone that helped translating on [Transifex](https://www.transifex.com/projects/p/flow/)."
      },
      {
        "sha": "a6484cb89bc9c3ab02d467d7abc3cfb7272dbda6",
        "filename": "doc/release-process.md",
        "status": "modified",
        "additions": 75,
        "deletions": 75,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/release-process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-process.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -3,9 +3,9 @@ Release Process\n \n Before every release candidate:\n \n-* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/bitcoin/bitcoin/blob/master/doc/translation_process.md#synchronising-translations).\n+* Update translations (ping wumpus on IRC) see [translation_process.md](https://github.com/flow/flow/blob/master/doc/translation_process.md#synchronising-translations).\n \n-* Update manpages, see [gen-manpages.sh](https://github.com/bitcoin/bitcoin/blob/master/contrib/devtools/README.md#gen-manpagessh).\n+* Update manpages, see [gen-manpages.sh](https://github.com/flow/flow/blob/master/contrib/devtools/README.md#gen-manpagessh).\n \n Before every minor and major release:\n \n@@ -21,7 +21,7 @@ Before every minor and major release:\n \n Before every major release:\n \n-* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/bitcoin/bitcoin/pull/7415) for an example.\n+* Update hardcoded [seeds](/contrib/seeds/README.md), see [this pull request](https://github.com/flow/flow/pull/7415) for an example.\n * Update [`BLOCK_CHAIN_SIZE`](/src/qt/intro.cpp) to the current size plus some overhead.\n * Update `src/chainparams.cpp` chainTxData with statistics about the transaction count and rate.\n * Update version of `contrib/gitian-descriptors/*.yml`: usually one'd want to do this on master after branching off the release - but be sure to at least do it before a new major release\n@@ -33,12 +33,12 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n Check out the source code in the following directory hierarchy.\n \n     cd /path/to/your/toplevel/build\n-    git clone https://github.com/bitcoin-core/gitian.sigs.git\n-    git clone https://github.com/bitcoin-core/bitcoin-detached-sigs.git\n+    git clone https://github.com/flow-core/gitian.sigs.git\n+    git clone https://github.com/flow-core/flow-detached-sigs.git\n     git clone https://github.com/devrandom/gitian-builder.git\n-    git clone https://github.com/bitcoin/bitcoin.git\n+    git clone https://github.com/flow/flow.git\n \n-### Bitcoin maintainers/release engineers, suggestion for writing release notes\n+### Flow maintainers/release engineers, suggestion for writing release notes\n \n Write release notes. git shortlog helps a lot, for example:\n \n@@ -61,7 +61,7 @@ If you're using the automated script (found in [contrib/gitian-build.sh](/contri\n \n Setup Gitian descriptors:\n \n-    pushd ./bitcoin\n+    pushd ./flow\n     export SIGNER=(your Gitian key, ie bluematt, sipa, etc)\n     export VERSION=(new version, e.g. 0.8.0)\n     git fetch\n@@ -84,7 +84,7 @@ Ensure gitian-builder is up-to-date:\n \n     pushd ./gitian-builder\n     mkdir -p inputs\n-    wget -P inputs https://bitcoincore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n+    wget -P inputs https://flowcore.org/cfields/osslsigncode-Backports-to-1.7.1.patch\n     wget -P inputs http://downloads.sourceforge.net/project/osslsigncode/osslsigncode/osslsigncode-1.7.1.tar.gz\n     popd\n \n@@ -95,58 +95,58 @@ Create the OS X SDK tarball, see the [OS X readme](README_osx.md) for details, a\n By default, Gitian will fetch source files as needed. To cache them ahead of time:\n \n     pushd ./gitian-builder\n-    make -C ../bitcoin/depends download SOURCES_PATH=`pwd`/cache/common\n+    make -C ../flow/depends download SOURCES_PATH=`pwd`/cache/common\n     popd\n \n Only missing files will be fetched, so this is safe to re-run for each build.\n \n NOTE: Offline builds must use the --url flag to ensure Gitian fetches only from local URLs. For example:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --url bitcoin=/path/to/bitcoin,signature=/path/to/sigs {rest of arguments}\n+    ./bin/gbuild --url flow=/path/to/flow,signature=/path/to/sigs {rest of arguments}\n     popd\n \n The gbuild invocations below <b>DO NOT DO THIS</b> by default.\n \n-### Build and sign Bitcoin Core for Linux, Windows, and OS X:\n+### Build and sign Flow Core for Linux, Windows, and OS X:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    mv build/out/bitcoin-*.tar.gz build/out/src/bitcoin-*.tar.gz ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    mv build/out/bitcoin-*-win-unsigned.tar.gz inputs/bitcoin-win-unsigned.tar.gz\n-    mv build/out/bitcoin-*.zip build/out/bitcoin-*.exe ../\n-\n-    ./bin/gbuild --memory 3000 --commit bitcoin=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n-    mv build/out/bitcoin-*-osx-unsigned.tar.gz inputs/bitcoin-osx-unsigned.tar.gz\n-    mv build/out/bitcoin-*.tar.gz build/out/bitcoin-*.dmg ../\n+    ./bin/gbuild --memory 3000 --commit flow=v${VERSION} ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-linux --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+    mv build/out/flow-*.tar.gz build/out/src/flow-*.tar.gz ../\n+\n+    ./bin/gbuild --memory 3000 --commit flow=v${VERSION} ../flow/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-unsigned --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-win.yml\n+    mv build/out/flow-*-win-unsigned.tar.gz inputs/flow-win-unsigned.tar.gz\n+    mv build/out/flow-*.zip build/out/flow-*.exe ../\n+\n+    ./bin/gbuild --memory 3000 --commit flow=v${VERSION} ../flow/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-unsigned --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-osx.yml\n+    mv build/out/flow-*-osx-unsigned.tar.gz inputs/flow-osx-unsigned.tar.gz\n+    mv build/out/flow-*.tar.gz build/out/flow-*.dmg ../\n     popd\n \n Build output expected:\n \n-  1. source tarball (`bitcoin-${VERSION}.tar.gz`)\n-  2. linux 32-bit and 64-bit dist tarballs (`bitcoin-${VERSION}-linux[32|64].tar.gz`)\n-  3. windows 32-bit and 64-bit unsigned installers and dist zips (`bitcoin-${VERSION}-win[32|64]-setup-unsigned.exe`, `bitcoin-${VERSION}-win[32|64].zip`)\n-  4. OS X unsigned installer and dist tarball (`bitcoin-${VERSION}-osx-unsigned.dmg`, `bitcoin-${VERSION}-osx64.tar.gz`)\n+  1. source tarball (`flow-${VERSION}.tar.gz`)\n+  2. linux 32-bit and 64-bit dist tarballs (`flow-${VERSION}-linux[32|64].tar.gz`)\n+  3. windows 32-bit and 64-bit unsigned installers and dist zips (`flow-${VERSION}-win[32|64]-setup-unsigned.exe`, `flow-${VERSION}-win[32|64].zip`)\n+  4. OS X unsigned installer and dist tarball (`flow-${VERSION}-osx-unsigned.dmg`, `flow-${VERSION}-osx64.tar.gz`)\n   5. Gitian signatures (in `gitian.sigs/${VERSION}-<linux|{win,osx}-unsigned>/(your Gitian key)/`)\n \n ### Verify other gitian builders signatures to your own. (Optional)\n \n Add other gitian builders keys to your gpg keyring, and/or refresh keys.\n \n-    gpg --import bitcoin/contrib/gitian-keys/*.pgp\n+    gpg --import flow/contrib/gitian-keys/*.pgp\n     gpg --refresh-keys\n \n Verify the signatures\n \n     pushd ./gitian-builder\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../bitcoin/contrib/gitian-descriptors/gitian-linux.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-win.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../bitcoin/contrib/gitian-descriptors/gitian-osx.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-linux ../flow/contrib/gitian-descriptors/gitian-linux.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-unsigned ../flow/contrib/gitian-descriptors/gitian-win.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-unsigned ../flow/contrib/gitian-descriptors/gitian-osx.yml\n     popd\n \n ### Next steps:\n@@ -167,22 +167,22 @@ Codesigner only: Create Windows/OS X detached signatures:\n \n Codesigner only: Sign the osx binary:\n \n-    transfer bitcoin-osx-unsigned.tar.gz to osx for signing\n-    tar xf bitcoin-osx-unsigned.tar.gz\n+    transfer flow-osx-unsigned.tar.gz to osx for signing\n+    tar xf flow-osx-unsigned.tar.gz\n     ./detached-sig-create.sh -s \"Key ID\"\n     Enter the keychain password and authorize the signature\n     Move signature-osx.tar.gz back to the gitian host\n \n Codesigner only: Sign the windows binaries:\n \n-    tar xf bitcoin-win-unsigned.tar.gz\n+    tar xf flow-win-unsigned.tar.gz\n     ./detached-sig-create.sh -key /path/to/codesign.key\n     Enter the passphrase for the key when prompted\n     signature-win.tar.gz will be created\n \n Codesigner only: Commit the detached codesign payloads:\n \n-    cd ~/bitcoin-detached-sigs\n+    cd ~/flow-detached-sigs\n     checkout the appropriate branch for this release series\n     rm -rf *\n     tar xf signature-osx.tar.gz\n@@ -195,25 +195,25 @@ Codesigner only: Commit the detached codesign payloads:\n Non-codesigners: wait for Windows/OS X detached signatures:\n \n - Once the Windows/OS X builds each have 3 matching signatures, they will be signed with their respective release keys.\n-- Detached signatures will then be committed to the [bitcoin-detached-sigs](https://github.com/bitcoin-core/bitcoin-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n+- Detached signatures will then be committed to the [flow-detached-sigs](https://github.com/flow-core/flow-detached-sigs) repository, which can be combined with the unsigned apps to create signed binaries.\n \n Create (and optionally verify) the signed OS X binary:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../bitcoin/contrib/gitian-descriptors/gitian-osx-signer.yml\n-    mv build/out/bitcoin-osx-signed.dmg ../bitcoin-${VERSION}-osx.dmg\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-osx-signed --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-osx-signed ../flow/contrib/gitian-descriptors/gitian-osx-signer.yml\n+    mv build/out/flow-osx-signed.dmg ../flow-${VERSION}-osx.dmg\n     popd\n \n Create (and optionally verify) the signed Windows binaries:\n \n     pushd ./gitian-builder\n-    ./bin/gbuild -i --commit signature=v${VERSION} ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../bitcoin/contrib/gitian-descriptors/gitian-win-signer.yml\n-    mv build/out/bitcoin-*win64-setup.exe ../bitcoin-${VERSION}-win64-setup.exe\n-    mv build/out/bitcoin-*win32-setup.exe ../bitcoin-${VERSION}-win32-setup.exe\n+    ./bin/gbuild -i --commit signature=v${VERSION} ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gsign --signer $SIGNER --release ${VERSION}-win-signed --destination ../gitian.sigs/ ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n+    ./bin/gverify -v -d ../gitian.sigs/ -r ${VERSION}-win-signed ../flow/contrib/gitian-descriptors/gitian-win-signer.yml\n+    mv build/out/flow-*win64-setup.exe ../flow-${VERSION}-win64-setup.exe\n+    mv build/out/flow-*win32-setup.exe ../flow-${VERSION}-win32-setup.exe\n     popd\n \n Commit your signature for the signed OS X/Windows binaries:\n@@ -235,23 +235,23 @@ sha256sum * > SHA256SUMS\n \n The list of files should be:\n ```\n-bitcoin-${VERSION}-aarch64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-arm-linux-gnueabihf.tar.gz\n-bitcoin-${VERSION}-i686-pc-linux-gnu.tar.gz\n-bitcoin-${VERSION}-x86_64-linux-gnu.tar.gz\n-bitcoin-${VERSION}-osx64.tar.gz\n-bitcoin-${VERSION}-osx.dmg\n-bitcoin-${VERSION}.tar.gz\n-bitcoin-${VERSION}-win32-setup.exe\n-bitcoin-${VERSION}-win32.zip\n-bitcoin-${VERSION}-win64-setup.exe\n-bitcoin-${VERSION}-win64.zip\n+flow-${VERSION}-aarch64-linux-gnu.tar.gz\n+flow-${VERSION}-arm-linux-gnueabihf.tar.gz\n+flow-${VERSION}-i686-pc-linux-gnu.tar.gz\n+flow-${VERSION}-x86_64-linux-gnu.tar.gz\n+flow-${VERSION}-osx64.tar.gz\n+flow-${VERSION}-osx.dmg\n+flow-${VERSION}.tar.gz\n+flow-${VERSION}-win32-setup.exe\n+flow-${VERSION}-win32.zip\n+flow-${VERSION}-win64-setup.exe\n+flow-${VERSION}-win64.zip\n ```\n The `*-debug*` files generated by the gitian build contain debug symbols\n for troubleshooting by developers. It is assumed that anyone that is interested\n in debugging can run gitian to generate the files for themselves. To avoid\n end-user confusion about which file to pick, as well as save storage\n-space *do not upload these to the bitcoin.org server, nor put them in the torrent*.\n+space *do not upload these to the flow.org server, nor put them in the torrent*.\n \n - GPG-sign it, delete the unsigned file:\n ```\n@@ -261,49 +261,49 @@ rm SHA256SUMS\n (the digest algorithm is forced to sha256 to avoid confusion of the `Hash:` header that GPG adds with the SHA256 used for the files)\n Note: check that SHA256SUMS itself doesn't end up in SHA256SUMS, which is a spurious/nonsensical entry.\n \n-- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the bitcoin.org server\n-  into `/var/www/bin/bitcoin-core-${VERSION}`\n+- Upload zips and installers, as well as `SHA256SUMS.asc` from last step, to the flow.org server\n+  into `/var/www/bin/flow-core-${VERSION}`\n \n - A `.torrent` will appear in the directory after a few minutes. Optionally help seed this torrent. To get the `magnet:` URI use:\n ```bash\n transmission-show -m <torrent file>\n ```\n Insert the magnet URI into the announcement sent to mailing lists. This permits\n-people without access to `bitcoin.org` to download the binary distribution.\n+people without access to `flow.org` to download the binary distribution.\n Also put it into the `optional_magnetlink:` slot in the YAML file for\n-bitcoin.org (see below for bitcoin.org update instructions).\n+flow.org (see below for flow.org update instructions).\n \n-- Update bitcoin.org version\n+- Update flow.org version\n \n-  - First, check to see if the Bitcoin.org maintainers have prepared a\n-    release: https://github.com/bitcoin-dot-org/bitcoin.org/labels/Releases\n+  - First, check to see if the Flow.org maintainers have prepared a\n+    release: https://github.com/flow-dot-org/flow.org/labels/Releases\n \n       - If they have, it will have previously failed their Travis CI\n         checks because the final release files weren't uploaded.\n         Trigger a Travis CI rebuild---if it passes, merge.\n \n-  - If they have not prepared a release, follow the Bitcoin.org release\n-    instructions: https://github.com/bitcoin-dot-org/bitcoin.org#release-notes\n+  - If they have not prepared a release, follow the Flow.org release\n+    instructions: https://github.com/flow-dot-org/flow.org#release-notes\n \n   - After the pull request is merged, the website will automatically show the newest version within 15 minutes, as well\n     as update the OS download links. Ping @saivann/@harding (saivann/harding on Freenode) in case anything goes wrong\n \n - Announce the release:\n \n-  - bitcoin-dev and bitcoin-core-dev mailing list\n+  - flow-dev and flow-core-dev mailing list\n \n-  - Bitcoin Core announcements list https://bitcoincore.org/en/list/announcements/join/\n+  - Flow Core announcements list https://flowcore.org/en/list/announcements/join/\n \n-  - bitcoincore.org blog post\n+  - flowcore.org blog post\n \n-  - Update title of #bitcoin on Freenode IRC\n+  - Update title of #flow on Freenode IRC\n \n-  - Optionally twitter, reddit /r/Bitcoin, ... but this will usually sort out itself\n+  - Optionally twitter, reddit /r/Flow, ... but this will usually sort out itself\n \n-  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~bitcoin/+archive/ubuntu/bitcoin)\n+  - Notify BlueMatt so that he can start building [the PPAs](https://launchpad.net/~flow/+archive/ubuntu/flow)\n \n   - Archive release notes for the new version to `doc/release-notes/` (branch `master` and branch of the release)\n \n-  - Create a [new GitHub release](https://github.com/bitcoin/bitcoin/releases/new) with a link to the archived release notes.\n+  - Create a [new GitHub release](https://github.com/flow/flow/releases/new) with a link to the archived release notes.\n \n   - Celebrate"
      },
      {
        "sha": "d0f0b459a64fb4a67f3c9a68fe6df52f2ee4058d",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 22,
        "deletions": 22,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,21 +1,21 @@\n Shared Libraries\n ================\n \n-## bitcoinconsensus\n+## flowconsensus\n \n-The purpose of this library is to make the verification functionality that is critical to Bitcoin's consensus available to other applications, e.g. to language bindings.\n+The purpose of this library is to make the verification functionality that is critical to Flow's consensus available to other applications, e.g. to language bindings.\n \n ### API\n \n-The interface is defined in the C header `bitcoinconsensus.h` located in  `src/script/bitcoinconsensus.h`.\n+The interface is defined in the C header `flowconsensus.h` located in  `src/script/flowconsensus.h`.\n \n #### Version\n \n-`bitcoinconsensus_version` returns an `unsigned int` with the API version *(currently at an experimental `0`)*.\n+`flowconsensus_version` returns an `unsigned int` with the API version *(currently at an experimental `0`)*.\n \n #### Script Validation\n \n-`bitcoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n+`flowconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n \n ##### Parameters\n - `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n@@ -24,26 +24,26 @@ The interface is defined in the C header `bitcoinconsensus.h` located in  `src/s\n - `unsigned int txToLen` - The number of bytes for the `txTo`.\n - `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.\n - `unsigned int flags` - The script validation flags *(see below)*.\n-- `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n+- `flowconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n \n ##### Script Flags\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki)) compliance\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY` - Enforce NULLDUMMY ([BIP147](https://github.com/bitcoin/bips/blob/master/bip-0147.mediawiki))\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY` - Enable CHECKLOCKTIMEVERIFY ([BIP65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki))\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY` - Enable CHECKSEQUENCEVERIFY ([BIP112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki))\n-- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS` - Enable WITNESS ([BIP141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki))\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/flow/bips/blob/master/bip-0016.mediawiki)) subscripts\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_DERSIG` - Enforce strict DER ([BIP66](https://github.com/flow/bips/blob/master/bip-0066.mediawiki)) compliance\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY` - Enforce NULLDUMMY ([BIP147](https://github.com/flow/bips/blob/master/bip-0147.mediawiki))\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY` - Enable CHECKLOCKTIMEVERIFY ([BIP65](https://github.com/flow/bips/blob/master/bip-0065.mediawiki))\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY` - Enable CHECKSEQUENCEVERIFY ([BIP112](https://github.com/flow/bips/blob/master/bip-0112.mediawiki))\n+- `flowconsensus_SCRIPT_FLAGS_VERIFY_WITNESS` - Enable WITNESS ([BIP141](https://github.com/flow/bips/blob/master/bip-0141.mediawiki))\n \n ##### Errors\n-- `bitcoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `bitcoinconsensus_verify_script` for the verification status)*\n-- `bitcoinconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n-- `bitcoinconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n-- `bitcoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n-- `bitcoinconsensus_ERR_AMOUNT_REQUIRED` - Input amount is required if WITNESS is used\n+- `flowconsensus_ERR_OK` - No errors with input parameters *(see the return value of `flowconsensus_verify_script` for the verification status)*\n+- `flowconsensus_ERR_TX_INDEX` - An invalid index for `txTo`\n+- `flowconsensus_ERR_TX_SIZE_MISMATCH` - `txToLen` did not match with the size of `txTo`\n+- `flowconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n+- `flowconsensus_ERR_AMOUNT_REQUIRED` - Input amount is required if WITNESS is used\n \n ### Example Implementations\n-- [NBitcoin](https://github.com/NicolasDorier/NBitcoin/blob/master/NBitcoin/Script.cs#L814) (.NET Bindings)\n-- [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n-- [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n-- [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)\n+- [NFlow](https://github.com/NicolasDorier/NFlow/blob/master/NFlow/Script.cs#L814) (.NET Bindings)\n+- [node-libflowconsensus](https://github.com/bitpay/node-libflowconsensus) (Node.js Bindings)\n+- [java-libflowconsensus](https://github.com/dexX7/java-libflowconsensus) (Java Bindings)\n+- [flowconsensus-php](https://github.com/Bit-Wasp/flowconsensus-php) (PHP Bindings)"
      },
      {
        "sha": "4a66d0c2d6545beb83d7b191a5c4d57f8f0bef24",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 21,
        "deletions": 21,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,16 +1,16 @@\n-TOR SUPPORT IN BITCOIN\n+TOR SUPPORT IN FLOW\n ======================\n \n-It is possible to run Bitcoin as a Tor hidden service, and connect to such services.\n+It is possible to run Flow as a Tor hidden service, and connect to such services.\n \n The following directions assume you have a Tor proxy running on port 9050. Many distributions default to having a SOCKS proxy listening on port 9050, but others may not. In particular, the Tor Browser Bundle defaults to listening on port 9150. See [Tor Project FAQ:TBBSocksPort](https://www.torproject.org/docs/faq.html.en#TBBSocksPort) for how to properly\n configure Tor.\n \n \n-1. Run bitcoin behind a Tor proxy\n+1. Run flow behind a Tor proxy\n ---------------------------------\n \n-The first step is running Bitcoin behind a Tor proxy. This will already make all\n+The first step is running Flow behind a Tor proxy. This will already make all\n outgoing connections be anonymized, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n@@ -31,27 +31,27 @@ outgoing connections be anonymized, but more is possible.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n \n-\t./bitcoin -proxy=127.0.0.1:9050\n+\t./flow -proxy=127.0.0.1:9050\n \n \n-2. Run a bitcoin hidden server\n+2. Run a flow hidden server\n ------------------------------\n \n If you configure your Tor system accordingly, it is possible to make your node also\n reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n config file):\n \n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n+\tHiddenServiceDir /var/lib/tor/flow-service/\n \tHiddenServicePort 8333 127.0.0.1:8333\n \tHiddenServicePort 18333 127.0.0.1:18333\n \n The directory can be different of course, but (both) port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default).\n+your flowd's P2P listen port (8333 by default).\n \n-\t-externalip=X   You can tell bitcoin about its publicly reachable address using\n+\t-externalip=X   You can tell flow about its publicly reachable address using\n \t                this option, and this can be a .onion address. Given the above\n \t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. Onion addresses are given\n+\t                /var/lib/tor/flow-service/hostname. Onion addresses are given\n \t                preference for your node to advertise itself with, for connections\n \t                coming from unroutable addresses (such as 127.0.0.1, where the\n \t                Tor proxy typically runs).\n@@ -68,57 +68,57 @@ your bitcoind's P2P listen port (8333 by default).\n \n In a typical situation, where you're only reachable via Tor, this should suffice:\n \n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n+\t./flowd -proxy=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -listen\n \n (obviously, replace the Onion address with your own). It should be noted that you still\n listen on all devices and another node could establish a clearnet connection, when knowing\n your address. To mitigate this, additionally bind the address of your Tor proxy:\n \n-\t./bitcoind ... -bind=127.0.0.1\n+\t./flowd ... -bind=127.0.0.1\n \n If you don't care too much about hiding your node, and want to be reachable on IPv4\n as well, use `discover` instead:\n \n-\t./bitcoind ... -discover\n+\t./flowd ... -discover\n \n and open port 8333 on your firewall (or use -upnp).\n \n If you only want to use Tor to reach onion addresses, but not use it as a proxy\n for normal IPv4/IPv6 communication, use:\n \n-\t./bitcoin -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n+\t./flow -onion=127.0.0.1:9050 -externalip=57qr3yd1nyntf5k.onion -discover\n \n 3. Automatically listen on Tor\n --------------------------------\n \n Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n API, to create and destroy 'ephemeral' hidden services programmatically.\n-Bitcoin Core has been updated to make use of this.\n+Flow Core has been updated to make use of this.\n \n This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates a hidden service to listen on. This will positively \n+Flow Core automatically creates a hidden service to listen on. This will positively \n affect the number of available .onion nodes.\n \n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n+This new feature is enabled by default if Flow Core is listening (`-listen`), and\n requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n To show verbose debugging information, pass `-debug=tor`.\n \n Connecting to Tor's control socket API requires one of two authentication methods to be \n-configured. For cookie authentication the user running bitcoind must have write access \n+configured. For cookie authentication the user running flowd must have write access \n to the `CookieAuthFile` specified in Tor configuration. In some cases this is \n preconfigured and the creation of a hidden service is automatic. If permission problems \n are seen with `-debug=tor` they can be resolved by adding both the user running tor and \n-the user running bitcoind to the same group and setting permissions appropriately. On \n-Debian-based systems the user running bitcoind can be added to the debian-tor group, \n+the user running flowd to the same group and setting permissions appropriately. On \n+Debian-based systems the user running flowd can be added to the debian-tor group, \n which has the appropriate permissions. An alternative authentication method is the use \n of the `-torpassword` flag and a `hash-password` which can be enabled and specified in \n Tor configuration.\n \n 4. Privacy recommendations\n ---------------------------\n \n-- Do not add anything but bitcoin ports to the hidden service created in section 2.\n+- Do not add anything but flow ports to the hidden service created in section 2.\n   If you run a web service too, create a new hidden service for that.\n   Otherwise it is trivial to link them, which may reduce privacy. Hidden\n   services created automatically (as in section 3) always have only one port"
      },
      {
        "sha": "363d9022a612d4be8fe3b0a70be9acb550227931",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,28 +1,28 @@\n Translations\n ============\n \n-The Bitcoin-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Bitcoin-Core makes use of the Transifex online translation management tool.\n+The Flow-Core project has been designed to support multiple localisations. This makes adding new phrases, and completely new languages easily achievable. For managing all application translations, Flow-Core makes use of the Transifex online translation management tool.\n \n ### Helping to translate (using Transifex)\n Transifex is setup to monitor the GitHub repo for updates, and when code containing new translations is found, Transifex will process any changes. It may take several hours after a pull-request has been merged, to appear in the Transifex web interface.\n \n-Multiple language support is critical in assisting Bitcoin\u2019s global adoption, and growth. One of Bitcoin\u2019s greatest strengths is cross-border money transfers, any help making that easier is greatly appreciated.\n+Multiple language support is critical in assisting Flow\u2019s global adoption, and growth. One of Flow\u2019s greatest strengths is cross-border money transfers, any help making that easier is greatly appreciated.\n \n-See the [Transifex Bitcoin project](https://www.transifex.com/projects/p/bitcoin/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n+See the [Transifex Flow project](https://www.transifex.com/projects/p/flow/) to assist in translations. You should also join the translation mailing list for announcements - see details below.\n \n ### Writing code with translations\n We use automated scripts to help extract translations in both Qt, and non-Qt source files. It is rarely necessary to manually edit the files in `src/qt/locale/`. The translation source files must adhere to the following format:\n-`bitcoin_xx_YY.ts or bitcoin_xx.ts`\n+`flow_xx_YY.ts or flow_xx.ts`\n \n-`src/qt/locale/bitcoin_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `bitcoin_en.ts`.\n+`src/qt/locale/flow_en.ts` is treated in a special way. It is used as the source for all other translations. Whenever a string in the source code is changed, this file must be updated to reflect those changes. A custom script is used to extract strings from the non-Qt parts. This script makes use of `gettext`, so make sure that utility is installed (ie, `apt-get install gettext` on Ubuntu/Debian). Once this has been updated, `lupdate` (included in the Qt SDK) is used to update `flow_en.ts`.\n \n-To automatically regenerate the `bitcoin_en.ts` file, run the following commands:\n+To automatically regenerate the `flow_en.ts` file, run the following commands:\n ```sh\n cd src/\n make translate\n ```\n \n-`contrib/bitcoin-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n+`contrib/flow-qt.pro` takes care of generating `.qm` (binary compiled) files from `.ts` (source files) files. It\u2019s mostly automated, and you shouldn\u2019t need to worry about it.\n \n **Example Qt translation**\n ```cpp\n@@ -36,14 +36,14 @@ When an updated source file is merged into the GitHub repo, Transifex will autom\n \n To create the pull-request, use the following commands:\n ```\n-git add src/qt/bitcoinstrings.cpp src/qt/locale/bitcoin_en.ts\n+git add src/qt/flowstrings.cpp src/qt/locale/flow_en.ts\n git commit\n ```\n \n ### Creating a Transifex account\n Visit the [Transifex Signup](https://www.transifex.com/signup/) page to create an account. Take note of your username and password, as they will be required to configure the command-line tool.\n \n-You can find the Bitcoin translation project at [https://www.transifex.com/projects/p/bitcoin/](https://www.transifex.com/projects/p/bitcoin/).\n+You can find the Flow translation project at [https://www.transifex.com/projects/p/flow/](https://www.transifex.com/projects/p/flow/).\n \n ### Installing the Transifex client command-line tool\n The client it used to fetch updated translations. If you are having problems, or need more details, see [http://docs.transifex.com/developer/client/setup](http://docs.transifex.com/developer/client/setup)\n@@ -68,24 +68,24 @@ username = USERNAME\n \n Please see [http://docs.transifex.com/developer/client/setup#windows](http://docs.transifex.com/developer/client/setup#windows) for details on installation.\n \n-The Transifex Bitcoin project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n+The Transifex Flow project config file is included as part of the repo. It can be found at `.tx/config`, however you shouldn\u2019t need change anything.\n \n ### Synchronising translations\n To assist in updating translations, we have created a script to help.\n \n 1. `python contrib/devtools/update-translations.py`\n-2. Update `src/qt/bitcoin_locale.qrc` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n+2. Update `src/qt/flow_locale.qrc` manually or via\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(flow_\\(.*\\)\\).ts/<file alias=\"\\2\">locale\\/\\1.qm<\\/file>/'`\n 3. Update `src/Makefile.qt.include` manually or via\n-   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(bitcoin_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n+   `ls src/qt/locale/*ts|xargs -n1 basename|sed 's/\\(flow_\\(.*\\)\\).ts/  qt\\/locale\\/\\1.ts \\\\/'`\n 4. `git add` new translations from `src/qt/locale/`\n \n **Do not directly download translations** one by one from the Transifex website, as we do a few post-processing steps before committing the translations.\n \n ### Handling Plurals (in source files)\n When new plurals are added to the source file, it's important to do the following steps:\n \n-1. Open `bitcoin_en.ts` in Qt Linguist (included in the Qt SDK)\n+1. Open `flow_en.ts` in Qt Linguist (included in the Qt SDK)\n 2. Search for `%n`, which will take you to the parts in the translation that use plurals\n 3. Look for empty `English Translation (Singular)` and `English Translation (Plural)` fields\n 4. Add the appropriate strings for the singular and plural form of the base string\n@@ -94,18 +94,18 @@ When new plurals are added to the source file, it's important to do the followin\n 7. Save the source file\n \n ### Translating a new language\n-To create a new language template, you will need to edit the languages manifest file `src/qt/bitcoin_locale.qrc` and add a new entry. Below is an example of the English language entry.\n+To create a new language template, you will need to edit the languages manifest file `src/qt/flow_locale.qrc` and add a new entry. Below is an example of the English language entry.\n \n ```xml\n <qresource prefix=\"/translations\">\n-    <file alias=\"en\">locale/bitcoin_en.qm</file>\n+    <file alias=\"en\">locale/flow_en.qm</file>\n     ...\n </qresource>\n ```\n \n **Note:** that the language translation file **must end in `.qm`** (the compiled extension), and not `.ts`.\n \n ### Questions and general assistance\n-The Bitcoin-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #bitcoin-core-dev`.\n+The Flow-Core translation maintainers include *tcatm, seone, Diapolo, wumpus and luke-jr*. You can find them, and others, in the Freenode IRC chatroom - `irc.freenode.net #flow-core-dev`.\n \n-If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/bitcoin-translators. Announcements will be posted during application pre-releases to notify translators to check for updates.\n+If you are a translator, you should also subscribe to the mailing list, https://groups.google.com/forum/#!forum/flow-translators. Announcements will be posted during application pre-releases to notify translators to check for updates."
      },
      {
        "sha": "775499786630f8f72917fff8d5425509db0cb322",
        "filename": "doc/translation_strings_policy.md",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/translation_strings_policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/translation_strings_policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_strings_policy.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n Translation Strings Policy\n ===========================\n \n-This document provides guidelines for internationalization of the Bitcoin Core software.\n+This document provides guidelines for internationalization of the Flow Core software.\n \n How to translate?\n ------------------\n@@ -85,10 +85,10 @@ In Qt code use tr's third argument for optional plurality. For example:\n This adds `<numerusform>`s to the respective `.ts` file, which can be translated separately depending on the language. In English, this is simply:\n \n     <message numerus=\"yes\">\n-        <source>%n active connection(s) to Bitcoin network</source>\n+        <source>%n active connection(s) to Flow network</source>\n         <translation>\n-            <numerusform>%n active connection to Bitcoin network</numerusform>\n-            <numerusform>%n active connections to Bitcoin network</numerusform>\n+            <numerusform>%n active connection to Flow network</numerusform>\n+            <numerusform>%n active connections to Flow network</numerusform>\n         </translation>\n     </message>\n \n@@ -106,4 +106,4 @@ The second example reduces the number of pluralized words that translators have\n \n During a string freeze (often before a major release), no translation strings are to be added, modified or removed.\n \n-This can be checked by executing `make translate` in the `src` directory, then verifying that `bitcoin_en.ts` remains unchanged.\n+This can be checked by executing `make translate` in the `src` directory, then verifying that `flow_en.ts` remains unchanged."
      },
      {
        "sha": "98fec2d689f23d1cd3fdc86b43f72aeda6be1ed7",
        "filename": "doc/travis-ci.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/travis-ci.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/travis-ci.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/travis-ci.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -32,7 +32,7 @@ trigger cache-invalidation and rebuilds as necessary.\n \n These caches can be manually removed if necessary. This is one of the very few\n manual operations that is possible with Travis, and it can be done by the\n-Bitcoin Core committer via the Travis web interface.\n+Flow Core committer via the Travis web interface.\n \n In some cases, secure strings may be needed for hiding sensitive info such as\n private keys or URLs. The travis client may be used to create these strings:"
      },
      {
        "sha": "0196724b04351b778e673ea5518654c3a32cbe04",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -5,8 +5,8 @@ connections, inter-process communication, and shared-memory,\n providing various message-oriented semantics such as publish/subscribe,\n request/reply, and push/pull.\n \n-The Bitcoin Core daemon can be configured to act as a trusted \"border\n-router\", implementing the bitcoin wire protocol and relay, making\n+The Flow Core daemon can be configured to act as a trusted \"border\n+router\", implementing the flow wire protocol and relay, making\n consensus decisions, maintaining the local blockchain database,\n broadcasting locally generated transactions into the network, and\n providing a queryable RPC interface to interact on a polled basis for\n@@ -33,7 +33,7 @@ buffering or reassembly.\n \n ## Prerequisites\n \n-The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n+The ZeroMQ feature in Flow Core requires ZeroMQ API version 4.x or\n newer. Typically, it is packaged by distributions as something like\n *libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n \n@@ -45,7 +45,7 @@ operation.\n \n By default, the ZeroMQ feature is automatically compiled in if the\n necessary prerequisites are found.  To disable, use --disable-zmq\n-during the *configure* step of building bitcoind:\n+during the *configure* step of building flowd:\n \n     $ ./configure --disable-zmq (other options)\n \n@@ -66,16 +66,16 @@ address. The same address can be used in more than one notification.\n \n For instance:\n \n-    $ bitcoind -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n-               -zmqpubrawtx=ipc:///tmp/bitcoind.tx.raw\n+    $ flowd -zmqpubhashtx=tcp://127.0.0.1:28332 \\\n+               -zmqpubrawtx=ipc:///tmp/flowd.tx.raw\n \n Each PUB notification has a topic and body, where the header\n corresponds to the notification type. For instance, for the\n notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the hexadecimal transaction hash (32\n bytes).\n \n-These options can also be provided in bitcoin.conf.\n+These options can also be provided in flow.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the\n [ZeroMQ API](http://api.zeromq.org/4-0:_start).\n@@ -87,9 +87,9 @@ arriving. Please see `contrib/zmq/zmq_sub.py` for a working example.\n \n ## Remarks\n \n-From the perspective of bitcoind, the ZeroMQ socket is write-only; PUB\n+From the perspective of flowd, the ZeroMQ socket is write-only; PUB\n sockets don't even have a read function. Thus, there is no state\n-introduced into bitcoind directly. Furthermore, no information is\n+introduced into flowd directly. Furthermore, no information is\n broadcast that wasn't already received from the public P2P network.\n \n No authentication or authorization is done on connecting clients; it\n@@ -102,5 +102,5 @@ retrieve the chain from the last known block to the new tip.\n \n There are several possibilities that ZMQ notification can get lost\n during transmission depending on the communication type your are\n-using. Bitcoind appends an up-counting sequence number to each\n+using. Flowd appends an up-counting sequence number to each\n notification which allows listeners to detect lost notifications."
      },
      {
        "sha": "33149decfc3fd24b8eb47df630823674592efb40",
        "filename": "libbitcoinconsensus.pc.in",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/libbitcoinconsensus.pc.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/libbitcoinconsensus.pc.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/libbitcoinconsensus.pc.in?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -4,8 +4,8 @@ libdir=@libdir@\n includedir=@includedir@\n \n Name: @PACKAGE_NAME@ consensus library\n-Description: Library for the Bitcoin consensus protocol.\n+Description: Library for the Flow consensus protocol.\n Version: @PACKAGE_VERSION@\n-Libs: -L${libdir} -lbitcoinconsensus\n+Libs: -L${libdir} -lflowconsensus\n Cflags: -I${includedir}\n Requires.private: libcrypto"
      },
      {
        "sha": "3046f1a32c15853a7b861508f870356fc5a5c267",
        "filename": "share/certs/FlowFoundation_Apple_Cert.pem",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/FlowFoundation_Apple_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/FlowFoundation_Apple_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/FlowFoundation_Apple_Cert.pem?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: Developer ID Application: BITCOIN FOUNDATION, INC., THE\n+    friendlyName: Developer ID Application: FLOW FOUNDATION, INC., THE\n     localKeyID: 6B 9C 6C A8 A5 73 70 70 E2 57 A3 49 D8 62 FB 97 C7 A5 5D 5E \n-subject=/UID=PBV4GLS9J4/CN=Developer ID Application: BITCOIN FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=BITCOIN FOUNDATION, INC., THE/C=US\n+subject=/UID=PBV4GLS9J4/CN=Developer ID Application: FLOW FOUNDATION, INC., THE/OU=PBV4GLS9J4/O=FLOW FOUNDATION, INC., THE/C=US\n issuer=/CN=Developer ID Certification Authority/OU=Apple Certification Authority/O=Apple Inc./C=US\n -----BEGIN CERTIFICATE-----\n MIIFhzCCBG+gAwIBAgIIJ0r1rumyfZAwDQYJKoZIhvcNAQELBQAweTEtMCsGA1UE",
        "previous_filename": "share/certs/BitcoinFoundation_Apple_Cert.pem"
      },
      {
        "sha": "aadb7dbb6df03319c06ed9489eb424a402a22d04",
        "filename": "share/certs/FlowFoundation_Comodo_Cert.pem",
        "status": "renamed",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/FlowFoundation_Comodo_Cert.pem",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/FlowFoundation_Comodo_Cert.pem",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/FlowFoundation_Comodo_Cert.pem?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n Bag Attributes\n-    friendlyName: The Bitcoin Foundation, Inc.'s COMODO CA Limited ID\n+    friendlyName: The Flow Foundation, Inc.'s COMODO CA Limited ID\n     localKeyID: 8C 94 64 E3 B5 B0 41 89 5B 89 B0 57 CC 74 B9 44 E5 B2 92 66 \n-subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Bitcoin Foundation, Inc./CN=The Bitcoin Foundation, Inc.\n+subject=/C=US/postalCode=98104-1444/ST=WA/L=Seattle/street=Suite 300/street=71 Columbia St/O=The Flow Foundation, Inc./CN=The Flow Foundation, Inc.\n issuer=/C=GB/ST=Greater Manchester/L=Salford/O=COMODO CA Limited/CN=COMODO Code Signing CA 2\n -----BEGIN CERTIFICATE-----\n MIIFeDCCBGCgAwIBAgIRAJVYMd+waOER7lUqtiz3M2IwDQYJKoZIhvcNAQEFBQAw",
        "previous_filename": "share/certs/BitcoinFoundation_Comodo_Cert.pem"
      },
      {
        "sha": "9d3cb4dd99fdef19fb30a8dc09560280188444ce",
        "filename": "share/certs/PrivateKeyNotes.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/PrivateKeyNotes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/certs/PrivateKeyNotes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/certs/PrivateKeyNotes.md?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -7,7 +7,7 @@ signing requests.\n \n For OSX, the private key was generated by Keychain.app on Gavin's main work machine.\n The key and certificate is in a separate, passphrase-protected keychain file that is\n-unlocked to sign the Bitcoin-Qt.app bundle.\n+unlocked to sign the Flow-Qt.app bundle.\n \n For Windows, the private key was generated by Firefox running on Gavin's main work machine.\n The key and certificate were exported into a separate, passphrase-protected PKCS#12 file, and\n@@ -17,7 +17,7 @@ Threat analysis\n --\n \n Gavin is a single point of failure. He could be coerced to divulge the secret signing keys,\n-allowing somebody to distribute a Bitcoin-Qt.app or bitcoin-qt-setup.exe with a valid\n+allowing somebody to distribute a Flow-Qt.app or flow-qt-setup.exe with a valid\n signature but containing a malicious binary.\n \n Or the machine Gavin uses to sign the binaries could be compromised, either remotely or\n@@ -34,7 +34,7 @@ or divulge the private keys).\n \n Windows binaries are reproducibly 'gitian-built', and the setup.exe file created\n by the NSIS installer system is a 7zip archive, so you could check to make sure\n-that the bitcoin-qt.exe file inside the installer had not been tampered with.\n+that the flow-qt.exe file inside the installer had not been tampered with.\n However, an attacker could modify the installer's code, so when the setup.exe\n was run it compromised users' systems. A volunteer to write an auditing tool\n that checks the setup.exe for tampering, and checks the files in it against"
      },
      {
        "sha": "0662743cb2a7546b55a2aeee269dedeeddd38017",
        "filename": "share/genbuild.sh",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/genbuild.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/genbuild.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/genbuild.sh?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/bin/sh\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -23,7 +23,7 @@ git_check_in_repo() {\n \n DESC=\"\"\n SUFFIX=\"\"\n-if [ \"${BITCOIN_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n+if [ \"${FLOW_GENBUILD_NO_GIT}\" != \"1\" -a -e \"$(which git 2>/dev/null)\" -a \"$(git rev-parse --is-inside-work-tree 2>/dev/null)\" = \"true\" ] && git_check_in_repo share/genbuild.sh; then\n     # clean 'dirty' status of touched files that haven't been modified\n     git diff >/dev/null 2>/dev/null \n "
      },
      {
        "sha": "f5480f41616a81cc3b65d0625f4f5e6f01a2f861",
        "filename": "share/pixmaps/flow.ico",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow.ico",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow.ico",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow.ico?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin.ico"
      },
      {
        "sha": "5537479095c62d1fd4ab69ea7cf90b6596dacd39",
        "filename": "share/pixmaps/flow.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin16.png"
      },
      {
        "sha": "55039b1c920d2c73de7384ece75f0a7b3d147676",
        "filename": "share/pixmaps/flow128.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow128.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow128.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow128.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin128.png"
      },
      {
        "sha": "a73c48e1bed6285c35c350eb565a69b6cb0e4f07",
        "filename": "share/pixmaps/flow128.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow128.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow128.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow128.xpm?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *flow___[] = {\n /* columns rows colors chars-per-pixel */\n \"128 128 250 2\",\n \"   c #845415\",",
        "previous_filename": "share/pixmaps/bitcoin128.xpm"
      },
      {
        "sha": "f4fbe44a0c3bd45fe74f52ee5c15ab452d924204",
        "filename": "share/pixmaps/flow16.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow16.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow16.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow16.xpm?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *flow__[] = {\n /* columns rows colors chars-per-pixel */\n \"16 16 159 2\",\n \"   c #CA7C1E\",",
        "previous_filename": "share/pixmaps/bitcoin16.xpm"
      },
      {
        "sha": "1d42116ef1199d86749d17f1740121a659262f4a",
        "filename": "share/pixmaps/flow256.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow256.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow256.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow256.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin256.png"
      },
      {
        "sha": "2ecd5a7a138fc86ec9af13e3c0ba3662798425b9",
        "filename": "share/pixmaps/flow256.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow256.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow256.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow256.xpm?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin___[] = {\n+static char *flow___[] = {\n /* columns rows colors chars-per-pixel */\n \"256 256 203 2\",\n \"   c #BE741B\",",
        "previous_filename": "share/pixmaps/bitcoin256.xpm"
      },
      {
        "sha": "367abfcc8e0f48779b51a99d03f3389f216c6c8c",
        "filename": "share/pixmaps/flow32.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow32.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow32.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow32.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin32.png"
      },
      {
        "sha": "82d9b40ac6b4cafd0dc5d2ca5439d7bc61d420f7",
        "filename": "share/pixmaps/flow32.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow32.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow32.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow32.xpm?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *flow__[] = {\n /* columns rows colors chars-per-pixel */\n \"32 32 102 2\",\n \"   c #CC7D1D\",",
        "previous_filename": "share/pixmaps/bitcoin32.xpm"
      },
      {
        "sha": "08c676ae4afe56ca8baf2a517ef3b598e82a79f3",
        "filename": "share/pixmaps/flow64.png",
        "status": "renamed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow64.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow64.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow64.png?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "previous_filename": "share/pixmaps/bitcoin64.png"
      },
      {
        "sha": "f0c8a909a998f23545901dcaaf464194e7ceff2a",
        "filename": "share/pixmaps/flow64.xpm",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow64.xpm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/pixmaps/flow64.xpm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/pixmaps/flow64.xpm?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n /* XPM */\n-static char *bitcoin__[] = {\n+static char *flow__[] = {\n /* columns rows colors chars-per-pixel */\n \"64 64 172 2\",\n \"   c #8F6319\",",
        "previous_filename": "share/pixmaps/bitcoin64.xpm"
      },
      {
        "sha": "841c709fb682fe490e998fd13d8c791beb31c8df",
        "filename": "share/qt/Info.plist.in",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/qt/Info.plist.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/qt/Info.plist.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/Info.plist.in?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -11,7 +11,7 @@\n   </array>\n \n   <key>CFBundleIconFile</key>\n-  <string>bitcoin.icns</string>\n+  <string>flow.icns</string>\n \n   <key>CFBundlePackageType</key>\n   <string>APPL</string>\n@@ -29,27 +29,27 @@\n   <string>????</string>\n \n   <key>CFBundleExecutable</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Flow-Qt</string>\n   \n   <key>CFBundleName</key>\n-  <string>Bitcoin-Qt</string>\n+  <string>Flow-Qt</string>\n \n   <key>LSHasLocalizedDisplayName</key>\n   <true/>\n \n   <key>CFBundleIdentifier</key>\n-  <string>org.bitcoinfoundation.Bitcoin-Qt</string>\n+  <string>org.flowfoundation.Flow-Qt</string>\n \n   <key>CFBundleURLTypes</key>\n   <array>\n     <dict>\n       <key>CFBundleTypeRole</key>\n       <string>Editor</string>\n       <key>CFBundleURLName</key>\n-      <string>org.bitcoin.BitcoinPayment</string>\n+      <string>org.flow.FlowPayment</string>\n       <key>CFBundleURLSchemes</key>\n       <array>\n-        <string>bitcoin</string>\n+        <string>flow</string>\n       </array>\n     </dict>\n   </array>\n@@ -58,20 +58,20 @@\n   <array>\n     <dict>\n       <key>UTTypeIdentifier</key>\n-      <string>org.bitcoin.paymentrequest</string>\n+      <string>org.flow.paymentrequest</string>\n       <key>UTTypeDescription</key>\n-      <string>Bitcoin payment request</string>\n+      <string>Flow payment request</string>\n       <key>UTTypeConformsTo</key>\n       <array>\n         <string>public.data</string>\n       </array>\n       <key>UTTypeTagSpecification</key>\n       <dict>\n         <key>public.mime-type</key>\n-        <string>application/x-bitcoin-payment-request</string>\n+        <string>application/x-flow-payment-request</string>\n         <key>public.filename-extension</key>\n         <array>\n-          <string>bitcoinpaymentrequest</string>\n+          <string>flowpaymentrequest</string>\n         </array>\n       </dict>\n     </dict>\n@@ -84,7 +84,7 @@\n       <string>Editor</string>\n       <key>LSItemContentTypes</key>\n       <array>\n-        <string>org.bitcoin.paymentrequest</string>\n+        <string>org.flow.paymentrequest</string>\n       </array>\n       <key>LSHandlerRank</key>\n       <string>Owner</string>"
      },
      {
        "sha": "8f5981256a282c31b7a142b729b07c657ed13c8f",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python\n-# Copyright (c) 2012-2016 The Bitcoin Core developers\n+# Copyright (c) 2012-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n '''\n@@ -12,7 +12,7 @@\n import os\n import sys\n \n-OUT_CPP=\"qt/bitcoinstrings.cpp\"\n+OUT_CPP=\"qt/flowstrings.cpp\"\n EMPTY=['\"\"']\n \n def parse_po(text):\n@@ -76,14 +76,14 @@ def parse_po(text):\n #define UNUSED\n #endif\n \"\"\")\n-f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n-f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n-f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n+f.write('static const char UNUSED *flow_strings[] = {\\n')\n+f.write('QT_TRANSLATE_NOOP(\"flow-core\", \"%s\"),\\n' % (os.getenv('PACKAGE_NAME'),))\n+f.write('QT_TRANSLATE_NOOP(\"flow-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS'),))\n if os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION') != os.getenv('PACKAGE_NAME'):\n-    f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n+    f.write('QT_TRANSLATE_NOOP(\"flow-core\", \"%s\"),\\n' % (os.getenv('COPYRIGHT_HOLDERS_SUBSTITUTION'),))\n messages.sort(key=operator.itemgetter(0))\n for (msgid, msgstr) in messages:\n     if msgid != EMPTY:\n-        f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n+        f.write('QT_TRANSLATE_NOOP(\"flow-core\", %s),\\n' % ('\\n'.join(msgid)))\n f.write('};\\n')\n f.close()"
      },
      {
        "sha": "8dabdcdfc924d06890a6f1f3a83d13ce6f96ac84",
        "filename": "share/rpcuser/rpcuser.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/rpcuser/rpcuser.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/rpcuser/rpcuser.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/rpcuser/rpcuser.py?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2 \n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying \n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -36,6 +36,6 @@\n m = hmac.new(bytearray(salt, 'utf-8'), bytearray(password, 'utf-8'), digestmod)\n result = m.hexdigest()\n \n-print(\"String to be appended to bitcoin.conf:\")\n+print(\"String to be appended to flow.conf:\")\n print(\"rpcauth=\"+username+\":\"+salt+\"$\"+result)\n print(\"Your password:\\n\"+password)"
      },
      {
        "sha": "ecde74118d98980d11e57de96bad422000872c16",
        "filename": "share/setup.nsi.in",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/share/setup.nsi.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/share/setup.nsi.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/setup.nsi.in?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -10,7 +10,7 @@ SetCompressor /SOLID lzma\n !define URL @PACKAGE_URL@\n \n # MUI Symbol Definitions\n-!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/bitcoin.ico\"\n+!define MUI_ICON \"@abs_top_srcdir@/share/pixmaps/flow.ico\"\n !define MUI_WELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_HEADERIMAGE\n !define MUI_HEADERIMAGE_RIGHT\n@@ -20,7 +20,7 @@ SetCompressor /SOLID lzma\n !define MUI_STARTMENUPAGE_REGISTRY_KEY ${REGKEY}\n !define MUI_STARTMENUPAGE_REGISTRY_VALUENAME StartMenuGroup\n !define MUI_STARTMENUPAGE_DEFAULTFOLDER \"@PACKAGE_NAME@\"\n-!define MUI_FINISHPAGE_RUN $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n+!define MUI_FINISHPAGE_RUN $INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\n !define MUI_UNICON \"${NSISDIR}\\Contrib\\Graphics\\Icons\\modern-uninstall.ico\"\n !define MUI_UNWELCOMEFINISHPAGE_BITMAP \"@abs_top_srcdir@/share/pixmaps/nsis-wizard.bmp\"\n !define MUI_UNFINISHPAGE_NOAUTOCLOSE\n@@ -50,9 +50,9 @@ Var StartMenuGroup\n # Installer attributes\n OutFile @abs_top_srcdir@/@PACKAGE_TARNAME@-${VERSION}-win@WINDOWS_BITS@-setup.exe\n !if \"@WINDOWS_BITS@\" == \"64\"\n-InstallDir $PROGRAMFILES64\\Bitcoin\n+InstallDir $PROGRAMFILES64\\Flow\n !else\n-InstallDir $PROGRAMFILES\\Bitcoin\n+InstallDir $PROGRAMFILES\\Flow\n !endif\n CRCCheck on\n XPStyle on\n@@ -73,12 +73,12 @@ ShowUninstDetails show\n Section -Main SEC0000\n     SetOutPath $INSTDIR\n     SetOverwrite on\n-    File @abs_top_srcdir@/release/@BITCOIN_GUI_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@FLOW_GUI_NAME@@EXEEXT@\n     File /oname=COPYING.txt @abs_top_srcdir@/COPYING\n     File /oname=readme.txt @abs_top_srcdir@/doc/README_windows.txt\n     SetOutPath $INSTDIR\\daemon\n-    File @abs_top_srcdir@/release/@BITCOIN_DAEMON_NAME@@EXEEXT@\n-    File @abs_top_srcdir@/release/@BITCOIN_CLI_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@FLOW_DAEMON_NAME@@EXEEXT@\n+    File @abs_top_srcdir@/release/@FLOW_CLI_NAME@@EXEEXT@\n     SetOutPath $INSTDIR\\doc\n     File /r @abs_top_srcdir@/doc\\*.*\n     SetOutPath $INSTDIR\n@@ -91,8 +91,8 @@ Section -post SEC0001\n     WriteUninstaller $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_BEGIN Application\n     CreateDirectory $SMPROGRAMS\\$StartMenuGroup\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n-    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" 1\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\" $INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\n+    CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\" \"$INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\" \"-testnet\" \"$INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\" 1\n     CreateShortcut \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\" $INSTDIR\\uninstall.exe\n     !insertmacro MUI_STARTMENU_WRITE_END\n     WriteRegStr HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" DisplayName \"$(^Name)\"\n@@ -104,9 +104,9 @@ Section -post SEC0001\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoModify 1\n     WriteRegDWORD HKCU \"SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\$(^Name)\" NoRepair 1\n     WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"URL Protocol\" \"\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Bitcoin\"\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n-    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\" \"%1\"'\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\" \"\" \"URL:Flow\"\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\DefaultIcon\" \"\" $INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\n+    WriteRegStr HKCR \"@PACKAGE_TARNAME@\\shell\\open\\command\" \"\" '\"$INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\" \"%1\"'\n SectionEnd\n \n # Macro for selecting uninstaller sections\n@@ -124,7 +124,7 @@ done${UNSECTION_ID}:\n \n # Uninstaller sections\n Section /o -un.Main UNSEC0000\n-    Delete /REBOOTOK $INSTDIR\\@BITCOIN_GUI_NAME@@EXEEXT@\n+    Delete /REBOOTOK $INSTDIR\\@FLOW_GUI_NAME@@EXEEXT@\n     Delete /REBOOTOK $INSTDIR\\COPYING.txt\n     Delete /REBOOTOK $INSTDIR\\readme.txt\n     RMDir /r /REBOOTOK $INSTDIR\\daemon\n@@ -137,7 +137,7 @@ Section -un.post UNSEC0001\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\Uninstall $(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\$(^Name).lnk\"\n     Delete /REBOOTOK \"$SMPROGRAMS\\$StartMenuGroup\\@PACKAGE_NAME@ (testnet, @WINDOWS_BITS@-bit).lnk\"\n-    Delete /REBOOTOK \"$SMSTARTUP\\Bitcoin.lnk\"\n+    Delete /REBOOTOK \"$SMSTARTUP\\Flow.lnk\"\n     Delete /REBOOTOK $INSTDIR\\uninstall.exe\n     Delete /REBOOTOK $INSTDIR\\debug.log\n     Delete /REBOOTOK $INSTDIR\\db.log"
      },
      {
        "sha": "878d8555435e6c1a38f7669224fcb1a3d9a43864",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 119,
        "deletions": 119,
        "changes": 238,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,29 +18,29 @@ else\n LIBUNIVALUE = $(UNIVALUE_LIBS)\n endif\n \n-BITCOIN_CONFIG_INCLUDES=-I$(builddir)/config\n-BITCOIN_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n+FLOW_CONFIG_INCLUDES=-I$(builddir)/config\n+FLOW_INCLUDES=-I$(builddir) -I$(builddir)/obj $(BDB_CPPFLAGS) $(BOOST_CPPFLAGS) $(LEVELDB_CPPFLAGS) $(CRYPTO_CFLAGS) $(SSL_CFLAGS)\n \n-BITCOIN_INCLUDES += -I$(srcdir)/secp256k1/include\n-BITCOIN_INCLUDES += $(UNIVALUE_CFLAGS)\n+FLOW_INCLUDES += -I$(srcdir)/secp256k1/include\n+FLOW_INCLUDES += $(UNIVALUE_CFLAGS)\n \n-LIBBITCOIN_SERVER=libbitcoin_server.a\n-LIBBITCOIN_COMMON=libbitcoin_common.a\n-LIBBITCOIN_CONSENSUS=libbitcoin_consensus.a\n-LIBBITCOIN_CLI=libbitcoin_cli.a\n-LIBBITCOIN_UTIL=libbitcoin_util.a\n-LIBBITCOIN_CRYPTO=crypto/libbitcoin_crypto.a\n-LIBBITCOINQT=qt/libbitcoinqt.a\n+LIBFLOW_SERVER=libflow_server.a\n+LIBFLOW_COMMON=libflow_common.a\n+LIBFLOW_CONSENSUS=libflow_consensus.a\n+LIBFLOW_CLI=libflow_cli.a\n+LIBFLOW_UTIL=libflow_util.a\n+LIBFLOW_CRYPTO=crypto/libflow_crypto.a\n+LIBFLOWQT=qt/libflowqt.a\n LIBSECP256K1=secp256k1/libsecp256k1.la\n \n if ENABLE_ZMQ\n-LIBBITCOIN_ZMQ=libbitcoin_zmq.a\n+LIBFLOW_ZMQ=libflow_zmq.a\n endif\n-if BUILD_BITCOIN_LIBS\n-LIBBITCOINCONSENSUS=libbitcoinconsensus.la\n+if BUILD_FLOW_LIBS\n+LIBFLOWCONSENSUS=libflowconsensus.la\n endif\n if ENABLE_WALLET\n-LIBBITCOIN_WALLET=libbitcoin_wallet.a\n+LIBFLOW_WALLET=libflow_wallet.a\n endif\n \n $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n@@ -49,33 +49,33 @@ $(LIBSECP256K1): $(wildcard secp256k1/src/*) $(wildcard secp256k1/include/*)\n # Make is not made aware of per-object dependencies to avoid limiting building parallelization\n # But to build the less dependent modules first, we manually select their order here:\n EXTRA_LIBRARIES += \\\n-  $(LIBBITCOIN_CRYPTO) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_CLI) \\\n-  $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_ZMQ)\n+  $(LIBFLOW_CRYPTO) \\\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_COMMON) \\\n+  $(LIBFLOW_CONSENSUS) \\\n+  $(LIBFLOW_SERVER) \\\n+  $(LIBFLOW_CLI) \\\n+  $(LIBFLOW_WALLET) \\\n+  $(LIBFLOW_ZMQ)\n \n-lib_LTLIBRARIES = $(LIBBITCOINCONSENSUS)\n+lib_LTLIBRARIES = $(LIBFLOWCONSENSUS)\n \n bin_PROGRAMS =\n noinst_PROGRAMS =\n TESTS =\n BENCHMARKS =\n \n-if BUILD_BITCOIND\n-  bin_PROGRAMS += bitcoind\n+if BUILD_FLOWD\n+  bin_PROGRAMS += flowd\n endif\n \n-if BUILD_BITCOIN_UTILS\n-  bin_PROGRAMS += bitcoin-cli bitcoin-tx\n+if BUILD_FLOW_UTILS\n+  bin_PROGRAMS += flow-cli flow-tx\n endif\n \n .PHONY: FORCE check-symbols check-security\n-# bitcoin core #\n-BITCOIN_CORE_H = \\\n+# flow core #\n+FLOW_CORE_H = \\\n   addrdb.h \\\n   addrman.h \\\n   base58.h \\\n@@ -174,12 +174,12 @@ obj/build.h: FORCE\n \t@$(MKDIR_P) $(builddir)/obj\n \t@$(top_srcdir)/share/genbuild.sh \"$(abs_top_builddir)/src/obj/build.h\" \\\n \t  \"$(abs_top_srcdir)\"\n-libbitcoin_util_a-clientversion.$(OBJEXT): obj/build.h\n+libflow_util_a-clientversion.$(OBJEXT): obj/build.h\n \n-# server: shared between bitcoind and bitcoin-qt\n-libbitcoin_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n-libbitcoin_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_server_a_SOURCES = \\\n+# server: shared between flowd and flow-qt\n+libflow_server_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(MINIUPNPC_CPPFLAGS) $(EVENT_CFLAGS) $(EVENT_PTHREADS_CFLAGS)\n+libflow_server_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_server_a_SOURCES = \\\n   addrdb.cpp \\\n   addrman.cpp \\\n   bloom.cpp \\\n@@ -216,23 +216,23 @@ libbitcoin_server_a_SOURCES = \\\n   validation.cpp \\\n   validationinterface.cpp \\\n   versionbits.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(FLOW_CORE_H)\n \n if ENABLE_ZMQ\n-libbitcoin_zmq_a_CPPFLAGS = $(BITCOIN_INCLUDES) $(ZMQ_CFLAGS)\n-libbitcoin_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_zmq_a_SOURCES = \\\n+libflow_zmq_a_CPPFLAGS = $(FLOW_INCLUDES) $(ZMQ_CFLAGS)\n+libflow_zmq_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_zmq_a_SOURCES = \\\n   zmq/zmqabstractnotifier.cpp \\\n   zmq/zmqnotificationinterface.cpp \\\n   zmq/zmqpublishnotifier.cpp\n endif\n \n \n-# wallet: shared between bitcoind and bitcoin-qt, but only linked\n+# wallet: shared between flowd and flow-qt, but only linked\n # when wallet enabled\n-libbitcoin_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_wallet_a_SOURCES = \\\n+libflow_wallet_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+libflow_wallet_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_wallet_a_SOURCES = \\\n   wallet/crypter.cpp \\\n   wallet/db.cpp \\\n   wallet/feebumper.cpp \\\n@@ -241,12 +241,12 @@ libbitcoin_wallet_a_SOURCES = \\\n   wallet/wallet.cpp \\\n   wallet/walletdb.cpp \\\n   policy/rbf.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(FLOW_CORE_H)\n \n # crypto primitives library\n-crypto_libbitcoin_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_CONFIG_INCLUDES)\n-crypto_libbitcoin_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-crypto_libbitcoin_crypto_a_SOURCES = \\\n+crypto_libflow_crypto_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_CONFIG_INCLUDES)\n+crypto_libflow_crypto_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+crypto_libflow_crypto_a_SOURCES = \\\n   crypto/aes.cpp \\\n   crypto/aes.h \\\n   crypto/chacha20.h \\\n@@ -266,9 +266,9 @@ crypto_libbitcoin_crypto_a_SOURCES = \\\n   crypto/sha512.h\n \n # consensus: shared between all executables that validate any consensus rules.\n-libbitcoin_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_consensus_a_SOURCES = \\\n+libflow_consensus_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+libflow_consensus_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_consensus_a_SOURCES = \\\n   amount.h \\\n   arith_uint256.cpp \\\n   arith_uint256.h \\\n@@ -285,7 +285,7 @@ libbitcoin_consensus_a_SOURCES = \\\n   primitives/transaction.h \\\n   pubkey.cpp \\\n   pubkey.h \\\n-  script/bitcoinconsensus.cpp \\\n+  script/flowconsensus.cpp \\\n   script/interpreter.cpp \\\n   script/interpreter.h \\\n   script/script.cpp \\\n@@ -300,10 +300,10 @@ libbitcoin_consensus_a_SOURCES = \\\n   utilstrencodings.h \\\n   version.h\n \n-# common: shared between bitcoind, and bitcoin-qt and non-server tools\n-libbitcoin_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_common_a_SOURCES = \\\n+# common: shared between flowd, and flow-qt and non-server tools\n+libflow_common_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+libflow_common_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_common_a_SOURCES = \\\n   base58.cpp \\\n   chainparams.cpp \\\n   coins.cpp \\\n@@ -320,14 +320,14 @@ libbitcoin_common_a_SOURCES = \\\n   script/sign.cpp \\\n   script/standard.cpp \\\n   warnings.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(FLOW_CORE_H)\n \n # util: shared between all executables.\n # This library *must* be included to make sure that the glibc\n # backward-compatibility objects and their sanity checks are linked.\n-libbitcoin_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_util_a_SOURCES = \\\n+libflow_util_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+libflow_util_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_util_a_SOURCES = \\\n   support/lockedpool.cpp \\\n   chainparamsbase.cpp \\\n   clientversion.cpp \\\n@@ -344,100 +344,100 @@ libbitcoin_util_a_SOURCES = \\\n   utilmoneystr.cpp \\\n   utilstrencodings.cpp \\\n   utiltime.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(FLOW_CORE_H)\n \n if GLIBC_BACK_COMPAT\n-libbitcoin_util_a_SOURCES += compat/glibc_compat.cpp\n+libflow_util_a_SOURCES += compat/glibc_compat.cpp\n endif\n \n-# cli: shared between bitcoin-cli and bitcoin-qt\n-libbitcoin_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-libbitcoin_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-libbitcoin_cli_a_SOURCES = \\\n+# cli: shared between flow-cli and flow-qt\n+libflow_cli_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+libflow_cli_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflow_cli_a_SOURCES = \\\n   rpc/client.cpp \\\n-  $(BITCOIN_CORE_H)\n+  $(FLOW_CORE_H)\n \n-nodist_libbitcoin_util_a_SOURCES = $(srcdir)/obj/build.h\n+nodist_libflow_util_a_SOURCES = $(srcdir)/obj/build.h\n #\n \n-# bitcoind binary #\n-bitcoind_SOURCES = bitcoind.cpp\n-bitcoind_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoind_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoind_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# flowd binary #\n+flowd_SOURCES = flowd.cpp\n+flowd_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+flowd_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+flowd_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoind_SOURCES += bitcoind-res.rc\n+flowd_SOURCES += flowd-res.rc\n endif\n \n-bitcoind_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n+flowd_LDADD = \\\n+  $(LIBFLOW_SERVER) \\\n+  $(LIBFLOW_COMMON) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_WALLET) \\\n-  $(LIBBITCOIN_ZMQ) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_WALLET) \\\n+  $(LIBFLOW_ZMQ) \\\n+  $(LIBFLOW_CONSENSUS) \\\n+  $(LIBFLOW_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1)\n \n-bitcoind_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n+flowd_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS) $(ZMQ_LIBS)\n \n-# bitcoin-cli binary #\n-bitcoin_cli_SOURCES = bitcoin-cli.cpp\n-bitcoin_cli_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CFLAGS)\n-bitcoin_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# flow-cli binary #\n+flow_cli_SOURCES = flow-cli.cpp\n+flow_cli_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(EVENT_CFLAGS)\n+flow_cli_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+flow_cli_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_cli_SOURCES += bitcoin-cli-res.rc\n+flow_cli_SOURCES += flow-cli-res.rc\n endif\n \n-bitcoin_cli_LDADD = \\\n-  $(LIBBITCOIN_CLI) \\\n+flow_cli_LDADD = \\\n+  $(LIBFLOW_CLI) \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CRYPTO)\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_CRYPTO)\n \n-bitcoin_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n+flow_cli_LDADD += $(BOOST_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(EVENT_LIBS)\n #\n \n-# bitcoin-tx binary #\n-bitcoin_tx_SOURCES = bitcoin-tx.cpp\n-bitcoin_tx_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-bitcoin_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bitcoin_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# flow-tx binary #\n+flow_tx_SOURCES = flow-tx.cpp\n+flow_tx_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+flow_tx_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+flow_tx_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n if TARGET_WINDOWS\n-bitcoin_tx_SOURCES += bitcoin-tx-res.rc\n+flow_tx_SOURCES += flow-tx-res.rc\n endif\n \n-bitcoin_tx_LDADD = \\\n+flow_tx_LDADD = \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBFLOW_COMMON) \\\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_CONSENSUS) \\\n+  $(LIBFLOW_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-bitcoin_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+flow_tx_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-# bitcoinconsensus library #\n-if BUILD_BITCOIN_LIBS\n-include_HEADERS = script/bitcoinconsensus.h\n-libbitcoinconsensus_la_SOURCES = $(crypto_libbitcoin_crypto_a_SOURCES) $(libbitcoin_consensus_a_SOURCES)\n+# flowconsensus library #\n+if BUILD_FLOW_LIBS\n+include_HEADERS = script/flowconsensus.h\n+libflowconsensus_la_SOURCES = $(crypto_libflow_crypto_a_SOURCES) $(libflow_consensus_a_SOURCES)\n \n if GLIBC_BACK_COMPAT\n-  libbitcoinconsensus_la_SOURCES += compat/glibc_compat.cpp\n+  libflowconsensus_la_SOURCES += compat/glibc_compat.cpp\n endif\n \n-libbitcoinconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n-libbitcoinconsensus_la_LIBADD = $(LIBSECP256K1)\n-libbitcoinconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_BITCOIN_INTERNAL\n-libbitcoinconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+libflowconsensus_la_LDFLAGS = $(AM_LDFLAGS) -no-undefined $(RELDFLAGS)\n+libflowconsensus_la_LIBADD = $(LIBSECP256K1)\n+libflowconsensus_la_CPPFLAGS = $(AM_CPPFLAGS) -I$(builddir)/obj -I$(srcdir)/secp256k1/include -DBUILD_FLOW_INTERNAL\n+libflowconsensus_la_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n \n endif\n #\n@@ -468,12 +468,12 @@ DISTCLEANFILES = obj/build.h\n EXTRA_DIST = $(CTAES_DIST)\n \n \n-config/bitcoin-config.h: config/stamp-h1\n+config/flow-config.h: config/stamp-h1\n \t@$(MAKE) -C $(top_builddir) $(subdir)/$(@)\n-config/stamp-h1: $(top_srcdir)/$(subdir)/config/bitcoin-config.h.in $(top_builddir)/config.status\n+config/stamp-h1: $(top_srcdir)/$(subdir)/config/flow-config.h.in $(top_builddir)/config.status\n \t$(AM_V_at)$(MAKE) -C $(top_builddir) $(subdir)/$(@)\n-$(top_srcdir)/$(subdir)/config/bitcoin-config.h.in:  $(am__configure_deps)\n-\t$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/bitcoin-config.h.in\n+$(top_srcdir)/$(subdir)/config/flow-config.h.in:  $(am__configure_deps)\n+\t$(AM_V_at)$(MAKE) -C $(top_srcdir) $(subdir)/config/flow-config.h.in\n \n clean-local:\n \t-$(MAKE) -C secp256k1 clean"
      },
      {
        "sha": "9f878aad513ab09e326916b7b8554de64d7c6339",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 24,
        "deletions": 24,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,17 +1,17 @@\n-# Copyright (c) 2015-2016 The Bitcoin Core developers\n+# Copyright (c) 2015-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += bench/bench_bitcoin\n+bin_PROGRAMS += bench/bench_flow\n BENCH_SRCDIR = bench\n-BENCH_BINARY = bench/bench_bitcoin$(EXEEXT)\n+BENCH_BINARY = bench/bench_flow$(EXEEXT)\n \n RAW_TEST_FILES = \\\n   bench/data/block413567.raw\n GENERATED_TEST_FILES = $(RAW_TEST_FILES:.raw=.raw.h)\n \n-bench_bench_bitcoin_SOURCES = \\\n-  bench/bench_bitcoin.cpp \\\n+bench_bench_flow_SOURCES = \\\n+  bench/bench_flow.cpp \\\n   bench/bench.cpp \\\n   bench/bench.h \\\n   bench/checkblock.cpp \\\n@@ -28,46 +28,46 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/perf.h \\\n   bench/prevector_destructor.cpp\n \n-nodist_bench_bench_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_bench_bench_flow_SOURCES = $(GENERATED_TEST_FILES)\n \n-bench_bench_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n-bench_bench_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-bench_bench_bitcoin_LDADD = \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+bench_bench_flow_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(EVENT_CLFAGS) $(EVENT_PTHREADS_CFLAGS) -I$(builddir)/bench/\n+bench_bench_flow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+bench_bench_flow_LDADD = \\\n+  $(LIBFLOW_SERVER) \\\n+  $(LIBFLOW_COMMON) \\\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_CONSENSUS) \\\n+  $(LIBFLOW_CRYPTO) \\\n   $(LIBLEVELDB) \\\n   $(LIBMEMENV) \\\n   $(LIBSECP256K1) \\\n   $(LIBUNIVALUE)\n \n if ENABLE_ZMQ\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+bench_bench_flow_LDADD += $(LIBFLOW_ZMQ) $(ZMQ_LIBS)\n endif\n \n if ENABLE_WALLET\n-bench_bench_bitcoin_SOURCES += bench/coin_selection.cpp\n-bench_bench_bitcoin_LDADD += $(LIBBITCOIN_WALLET) $(LIBBITCOIN_CRYPTO)\n+bench_bench_flow_SOURCES += bench/coin_selection.cpp\n+bench_bench_flow_LDADD += $(LIBFLOW_WALLET) $(LIBFLOW_CRYPTO)\n endif\n \n-bench_bench_bitcoin_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-bench_bench_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+bench_bench_flow_LDADD += $(BOOST_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n+bench_bench_flow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-CLEAN_BITCOIN_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_FLOW_BENCH = bench/*.gcda bench/*.gcno $(GENERATED_TEST_FILES)\n \n-CLEANFILES += $(CLEAN_BITCOIN_BENCH)\n+CLEANFILES += $(CLEAN_FLOW_BENCH)\n \n bench/checkblock.cpp: bench/data/block413567.raw.h\n \n-bitcoin_bench: $(BENCH_BINARY)\n+flow_bench: $(BENCH_BINARY)\n \n bench: $(BENCH_BINARY) FORCE\n \t$(BENCH_BINARY)\n \n-bitcoin_bench_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_BENCH) $(bench_bench_bitcoin_OBJECTS) $(BENCH_BINARY)\n+flow_bench_clean : FORCE\n+\trm -f $(CLEAN_FLOW_BENCH) $(bench_bench_flow_OBJECTS) $(BENCH_BINARY)\n \n %.raw.h: %.raw\n \t@$(MKDIR_P) $(@D)"
      },
      {
        "sha": "421c0ad944da40052ff0939619697b13282c506c",
        "filename": "src/Makefile.leveldb.include",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.leveldb.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.leveldb.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.leveldb.include?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-# Copyright (c) 2016 The Bitcoin Core developers\n+# Copyright (c) 2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a3a8dfb4975be35fa5eb92cd61bc565767becd4e",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 147,
        "deletions": 147,
        "changes": 294,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,98 +1,98 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/bitcoin-qt\n-EXTRA_LIBRARIES += qt/libbitcoinqt.a\n+bin_PROGRAMS += qt/flow-qt\n+EXTRA_LIBRARIES += qt/libflowqt.a\n \n-# bitcoin qt core #\n+# flow qt core #\n QT_TS = \\\n-  qt/locale/bitcoin_af.ts \\\n-  qt/locale/bitcoin_af_ZA.ts \\\n-  qt/locale/bitcoin_ar.ts \\\n-  qt/locale/bitcoin_be_BY.ts \\\n-  qt/locale/bitcoin_bg_BG.ts \\\n-  qt/locale/bitcoin_bg.ts \\\n-  qt/locale/bitcoin_ca_ES.ts \\\n-  qt/locale/bitcoin_ca.ts \\\n-  qt/locale/bitcoin_ca@valencia.ts \\\n-  qt/locale/bitcoin_cs.ts \\\n-  qt/locale/bitcoin_cy.ts \\\n-  qt/locale/bitcoin_da.ts \\\n-  qt/locale/bitcoin_de.ts \\\n-  qt/locale/bitcoin_el_GR.ts \\\n-  qt/locale/bitcoin_el.ts \\\n-  qt/locale/bitcoin_en_GB.ts \\\n-  qt/locale/bitcoin_en.ts \\\n-  qt/locale/bitcoin_eo.ts \\\n-  qt/locale/bitcoin_es_AR.ts \\\n-  qt/locale/bitcoin_es_CL.ts \\\n-  qt/locale/bitcoin_es_CO.ts \\\n-  qt/locale/bitcoin_es_DO.ts \\\n-  qt/locale/bitcoin_es_ES.ts \\\n-  qt/locale/bitcoin_es_MX.ts \\\n-  qt/locale/bitcoin_es.ts \\\n-  qt/locale/bitcoin_es_UY.ts \\\n-  qt/locale/bitcoin_es_VE.ts \\\n-  qt/locale/bitcoin_et_EE.ts \\\n-  qt/locale/bitcoin_et.ts \\\n-  qt/locale/bitcoin_eu_ES.ts \\\n-  qt/locale/bitcoin_fa_IR.ts \\\n-  qt/locale/bitcoin_fa.ts \\\n-  qt/locale/bitcoin_fi.ts \\\n-  qt/locale/bitcoin_fr_CA.ts \\\n-  qt/locale/bitcoin_fr_FR.ts \\\n-  qt/locale/bitcoin_fr.ts \\\n-  qt/locale/bitcoin_gl.ts \\\n-  qt/locale/bitcoin_he.ts \\\n-  qt/locale/bitcoin_hi_IN.ts \\\n-  qt/locale/bitcoin_hr.ts \\\n-  qt/locale/bitcoin_hu.ts \\\n-  qt/locale/bitcoin_id_ID.ts \\\n-  qt/locale/bitcoin_it_IT.ts \\\n-  qt/locale/bitcoin_it.ts \\\n-  qt/locale/bitcoin_ja.ts \\\n-  qt/locale/bitcoin_ka.ts \\\n-  qt/locale/bitcoin_kk_KZ.ts \\\n-  qt/locale/bitcoin_ko_KR.ts \\\n-  qt/locale/bitcoin_ku_IQ.ts \\\n-  qt/locale/bitcoin_ky.ts \\\n-  qt/locale/bitcoin_la.ts \\\n-  qt/locale/bitcoin_lt.ts \\\n-  qt/locale/bitcoin_lv_LV.ts \\\n-  qt/locale/bitcoin_mk_MK.ts \\\n-  qt/locale/bitcoin_mn.ts \\\n-  qt/locale/bitcoin_ms_MY.ts \\\n-  qt/locale/bitcoin_nb.ts \\\n-  qt/locale/bitcoin_ne.ts \\\n-  qt/locale/bitcoin_nl.ts \\\n-  qt/locale/bitcoin_pam.ts \\\n-  qt/locale/bitcoin_pl.ts \\\n-  qt/locale/bitcoin_pt_BR.ts \\\n-  qt/locale/bitcoin_pt_PT.ts \\\n-  qt/locale/bitcoin_ro_RO.ts \\\n-  qt/locale/bitcoin_ro.ts \\\n-  qt/locale/bitcoin_ru_RU.ts \\\n-  qt/locale/bitcoin_ru.ts \\\n-  qt/locale/bitcoin_sk.ts \\\n-  qt/locale/bitcoin_sl_SI.ts \\\n-  qt/locale/bitcoin_sq.ts \\\n-  qt/locale/bitcoin_sr@latin.ts \\\n-  qt/locale/bitcoin_sr.ts \\\n-  qt/locale/bitcoin_sv.ts \\\n-  qt/locale/bitcoin_ta.ts \\\n-  qt/locale/bitcoin_th_TH.ts \\\n-  qt/locale/bitcoin_tr_TR.ts \\\n-  qt/locale/bitcoin_tr.ts \\\n-  qt/locale/bitcoin_uk.ts \\\n-  qt/locale/bitcoin_ur_PK.ts \\\n-  qt/locale/bitcoin_uz@Cyrl.ts \\\n-  qt/locale/bitcoin_vi.ts \\\n-  qt/locale/bitcoin_vi_VN.ts \\\n-  qt/locale/bitcoin_zh_CN.ts \\\n-  qt/locale/bitcoin_zh_HK.ts \\\n-  qt/locale/bitcoin_zh.ts \\\n-  qt/locale/bitcoin_zh_TW.ts\n+  qt/locale/flow_af.ts \\\n+  qt/locale/flow_af_ZA.ts \\\n+  qt/locale/flow_ar.ts \\\n+  qt/locale/flow_be_BY.ts \\\n+  qt/locale/flow_bg_BG.ts \\\n+  qt/locale/flow_bg.ts \\\n+  qt/locale/flow_ca_ES.ts \\\n+  qt/locale/flow_ca.ts \\\n+  qt/locale/flow_ca@valencia.ts \\\n+  qt/locale/flow_cs.ts \\\n+  qt/locale/flow_cy.ts \\\n+  qt/locale/flow_da.ts \\\n+  qt/locale/flow_de.ts \\\n+  qt/locale/flow_el_GR.ts \\\n+  qt/locale/flow_el.ts \\\n+  qt/locale/flow_en_GB.ts \\\n+  qt/locale/flow_en.ts \\\n+  qt/locale/flow_eo.ts \\\n+  qt/locale/flow_es_AR.ts \\\n+  qt/locale/flow_es_CL.ts \\\n+  qt/locale/flow_es_CO.ts \\\n+  qt/locale/flow_es_DO.ts \\\n+  qt/locale/flow_es_ES.ts \\\n+  qt/locale/flow_es_MX.ts \\\n+  qt/locale/flow_es.ts \\\n+  qt/locale/flow_es_UY.ts \\\n+  qt/locale/flow_es_VE.ts \\\n+  qt/locale/flow_et_EE.ts \\\n+  qt/locale/flow_et.ts \\\n+  qt/locale/flow_eu_ES.ts \\\n+  qt/locale/flow_fa_IR.ts \\\n+  qt/locale/flow_fa.ts \\\n+  qt/locale/flow_fi.ts \\\n+  qt/locale/flow_fr_CA.ts \\\n+  qt/locale/flow_fr_FR.ts \\\n+  qt/locale/flow_fr.ts \\\n+  qt/locale/flow_gl.ts \\\n+  qt/locale/flow_he.ts \\\n+  qt/locale/flow_hi_IN.ts \\\n+  qt/locale/flow_hr.ts \\\n+  qt/locale/flow_hu.ts \\\n+  qt/locale/flow_id_ID.ts \\\n+  qt/locale/flow_it_IT.ts \\\n+  qt/locale/flow_it.ts \\\n+  qt/locale/flow_ja.ts \\\n+  qt/locale/flow_ka.ts \\\n+  qt/locale/flow_kk_KZ.ts \\\n+  qt/locale/flow_ko_KR.ts \\\n+  qt/locale/flow_ku_IQ.ts \\\n+  qt/locale/flow_ky.ts \\\n+  qt/locale/flow_la.ts \\\n+  qt/locale/flow_lt.ts \\\n+  qt/locale/flow_lv_LV.ts \\\n+  qt/locale/flow_mk_MK.ts \\\n+  qt/locale/flow_mn.ts \\\n+  qt/locale/flow_ms_MY.ts \\\n+  qt/locale/flow_nb.ts \\\n+  qt/locale/flow_ne.ts \\\n+  qt/locale/flow_nl.ts \\\n+  qt/locale/flow_pam.ts \\\n+  qt/locale/flow_pl.ts \\\n+  qt/locale/flow_pt_BR.ts \\\n+  qt/locale/flow_pt_PT.ts \\\n+  qt/locale/flow_ro_RO.ts \\\n+  qt/locale/flow_ro.ts \\\n+  qt/locale/flow_ru_RU.ts \\\n+  qt/locale/flow_ru.ts \\\n+  qt/locale/flow_sk.ts \\\n+  qt/locale/flow_sl_SI.ts \\\n+  qt/locale/flow_sq.ts \\\n+  qt/locale/flow_sr@latin.ts \\\n+  qt/locale/flow_sr.ts \\\n+  qt/locale/flow_sv.ts \\\n+  qt/locale/flow_ta.ts \\\n+  qt/locale/flow_th_TH.ts \\\n+  qt/locale/flow_tr_TR.ts \\\n+  qt/locale/flow_tr.ts \\\n+  qt/locale/flow_uk.ts \\\n+  qt/locale/flow_ur_PK.ts \\\n+  qt/locale/flow_uz@Cyrl.ts \\\n+  qt/locale/flow_vi.ts \\\n+  qt/locale/flow_vi_VN.ts \\\n+  qt/locale/flow_zh_CN.ts \\\n+  qt/locale/flow_zh_HK.ts \\\n+  qt/locale/flow_zh.ts \\\n+  qt/locale/flow_zh_TW.ts\n \n QT_FORMS_UI = \\\n   qt/forms/addressbookpage.ui \\\n@@ -118,10 +118,10 @@ QT_MOC_CPP = \\\n   qt/moc_addresstablemodel.cpp \\\n   qt/moc_askpassphrasedialog.cpp \\\n   qt/moc_bantablemodel.cpp \\\n-  qt/moc_bitcoinaddressvalidator.cpp \\\n-  qt/moc_bitcoinamountfield.cpp \\\n-  qt/moc_bitcoingui.cpp \\\n-  qt/moc_bitcoinunits.cpp \\\n+  qt/moc_flowaddressvalidator.cpp \\\n+  qt/moc_flowamountfield.cpp \\\n+  qt/moc_flowgui.cpp \\\n+  qt/moc_flowunits.cpp \\\n   qt/moc_callback.cpp \\\n   qt/moc_clientmodel.cpp \\\n   qt/moc_coincontroldialog.cpp \\\n@@ -161,36 +161,36 @@ QT_MOC_CPP = \\\n   qt/moc_walletmodel.cpp \\\n   qt/moc_walletview.cpp\n \n-BITCOIN_MM = \\\n+FLOW_MM = \\\n   qt/macdockiconhandler.mm \\\n   qt/macnotificationhandler.mm\n \n QT_MOC = \\\n-  qt/bitcoin.moc \\\n-  qt/bitcoinamountfield.moc \\\n+  qt/flow.moc \\\n+  qt/flowamountfield.moc \\\n   qt/callback.moc \\\n   qt/intro.moc \\\n   qt/overviewpage.moc \\\n   qt/rpcconsole.moc\n \n-QT_QRC_CPP = qt/qrc_bitcoin.cpp\n-QT_QRC = qt/bitcoin.qrc\n-QT_QRC_LOCALE_CPP = qt/qrc_bitcoin_locale.cpp\n-QT_QRC_LOCALE = qt/bitcoin_locale.qrc\n+QT_QRC_CPP = qt/qrc_flow.cpp\n+QT_QRC = qt/flow.qrc\n+QT_QRC_LOCALE_CPP = qt/qrc_flow_locale.cpp\n+QT_QRC_LOCALE = qt/flow_locale.qrc\n \n PROTOBUF_CC = qt/paymentrequest.pb.cc\n PROTOBUF_H = qt/paymentrequest.pb.h\n PROTOBUF_PROTO = qt/paymentrequest.proto\n \n-BITCOIN_QT_H = \\\n+FLOW_QT_H = \\\n   qt/addressbookpage.h \\\n   qt/addresstablemodel.h \\\n   qt/askpassphrasedialog.h \\\n   qt/bantablemodel.h \\\n-  qt/bitcoinaddressvalidator.h \\\n-  qt/bitcoinamountfield.h \\\n-  qt/bitcoingui.h \\\n-  qt/bitcoinunits.h \\\n+  qt/flowaddressvalidator.h \\\n+  qt/flowamountfield.h \\\n+  qt/flowgui.h \\\n+  qt/flowunits.h \\\n   qt/callback.h \\\n   qt/clientmodel.h \\\n   qt/coincontroldialog.h \\\n@@ -242,9 +242,9 @@ RES_ICONS = \\\n   qt/res/icons/address-book.png \\\n   qt/res/icons/about.png \\\n   qt/res/icons/about_qt.png \\\n-  qt/res/icons/bitcoin.ico \\\n-  qt/res/icons/bitcoin_testnet.ico \\\n-  qt/res/icons/bitcoin.png \\\n+  qt/res/icons/flow.ico \\\n+  qt/res/icons/flow_testnet.ico \\\n+  qt/res/icons/flow.png \\\n   qt/res/icons/chevron.png \\\n   qt/res/icons/clock1.png \\\n   qt/res/icons/clock2.png \\\n@@ -294,12 +294,12 @@ RES_ICONS = \\\n   qt/res/icons/warning.png \\\n   qt/res/icons/verify.png\n \n-BITCOIN_QT_BASE_CPP = \\\n+FLOW_QT_BASE_CPP = \\\n   qt/bantablemodel.cpp \\\n-  qt/bitcoinaddressvalidator.cpp \\\n-  qt/bitcoinamountfield.cpp \\\n-  qt/bitcoingui.cpp \\\n-  qt/bitcoinunits.cpp \\\n+  qt/flowaddressvalidator.cpp \\\n+  qt/flowamountfield.cpp \\\n+  qt/flowgui.cpp \\\n+  qt/flowunits.cpp \\\n   qt/clientmodel.cpp \\\n   qt/csvmodelwriter.cpp \\\n   qt/guiutil.cpp \\\n@@ -318,9 +318,9 @@ BITCOIN_QT_BASE_CPP = \\\n   qt/trafficgraphwidget.cpp \\\n   qt/utilitydialog.cpp\n \n-BITCOIN_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp\n+FLOW_QT_WINDOWS_CPP = qt/winshutdownmonitor.cpp\n \n-BITCOIN_QT_WALLET_CPP = \\\n+FLOW_QT_WALLET_CPP = \\\n   qt/addressbookpage.cpp \\\n   qt/addresstablemodel.cpp \\\n   qt/askpassphrasedialog.cpp \\\n@@ -348,31 +348,31 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/walletmodeltransaction.cpp \\\n   qt/walletview.cpp\n \n-BITCOIN_QT_CPP = $(BITCOIN_QT_BASE_CPP)\n+FLOW_QT_CPP = $(FLOW_QT_BASE_CPP)\n if TARGET_WINDOWS\n-BITCOIN_QT_CPP += $(BITCOIN_QT_WINDOWS_CPP)\n+FLOW_QT_CPP += $(FLOW_QT_WINDOWS_CPP)\n endif\n if ENABLE_WALLET\n-BITCOIN_QT_CPP += $(BITCOIN_QT_WALLET_CPP)\n+FLOW_QT_CPP += $(FLOW_QT_WALLET_CPP)\n endif\n \n RES_IMAGES = \n \n RES_MOVIES = $(wildcard $(srcdir)/qt/res/movies/spinner-*.png)\n \n-BITCOIN_RC = qt/res/bitcoin-qt-res.rc\n+FLOW_RC = qt/res/flow-qt-res.rc\n \n-BITCOIN_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n+FLOW_QT_INCLUDES = -I$(builddir)/qt -I$(srcdir)/qt -I$(srcdir)/qt/forms \\\n   -I$(builddir)/qt/forms -DQT_NO_KEYWORDS\n \n-qt_libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_libflowqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(FLOW_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_DBUS_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_libbitcoinqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_libflowqt_a_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_libbitcoinqt_a_SOURCES = $(BITCOIN_QT_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) \\\n+qt_libflowqt_a_SOURCES = $(FLOW_QT_CPP) $(FLOW_QT_H) $(QT_FORMS_UI) \\\n   $(QT_QRC) $(QT_QRC_LOCALE) $(QT_TS) $(PROTOBUF_PROTO) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES)\n \n-nodist_qt_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n+nodist_qt_libflowqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC) $(PROTOBUF_CC) \\\n   $(PROTOBUF_H) $(QT_QRC_CPP) $(QT_QRC_LOCALE_CPP)\n \n # forms/foo.h -> forms/ui_foo.h\n@@ -381,71 +381,71 @@ QT_FORMS_H=$(join $(dir $(QT_FORMS_UI)),$(addprefix ui_, $(notdir $(QT_FORMS_UI:\n # Most files will depend on the forms and moc files as includes. Generate them\n # before anything else.\n $(QT_MOC): $(QT_FORMS_H)\n-$(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) : | $(QT_MOC)\n+$(qt_libflowqt_a_OBJECTS) $(qt_flow_qt_OBJECTS) : | $(QT_MOC)\n \n #Generating these with a half-written protobuf header leads to wacky results.\n #This makes sure it's done.\n $(QT_MOC): $(PROTOBUF_H)\n $(QT_MOC_CPP): $(PROTOBUF_H)\n \n-# bitcoin-qt binary #\n-qt_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+# flow-qt binary #\n+qt_flow_qt_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(FLOW_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(PROTOBUF_CFLAGS) $(QR_CFLAGS)\n-qt_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_flow_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-qt_bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+qt_flow_qt_SOURCES = qt/flow.cpp\n if TARGET_DARWIN\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_MM)\n+  qt_flow_qt_SOURCES += $(FLOW_MM)\n endif\n if TARGET_WINDOWS\n-  qt_bitcoin_qt_SOURCES += $(BITCOIN_RC)\n+  qt_flow_qt_SOURCES += $(FLOW_RC)\n endif\n-qt_bitcoin_qt_LDADD = qt/libbitcoinqt.a $(LIBBITCOIN_SERVER)\n+qt_flow_qt_LDADD = qt/libflowqt.a $(LIBFLOW_SERVER)\n if ENABLE_WALLET\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_flow_qt_LDADD += $(LIBFLOW_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_flow_qt_LDADD += $(LIBFLOW_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+qt_flow_qt_LDADD += $(LIBFLOW_CLI) $(LIBFLOW_COMMON) $(LIBFLOW_UTIL) $(LIBFLOW_CONSENSUS) $(LIBFLOW_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(QT_LIBS) $(QT_DBUS_LIBS) $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_bitcoin_qt_LIBTOOLFLAGS = --tag CXX\n+qt_flow_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_flow_qt_LIBTOOLFLAGS = --tag CXX\n \n #locale/foo.ts -> locale/foo.qm\n QT_QM=$(QT_TS:.ts=.qm)\n \n SECONDARY: $(QT_QM)\n \n-$(srcdir)/qt/bitcoinstrings.cpp: $(libbitcoin_server_a_SOURCES) $(libbitcoin_wallet_a_SOURCES) $(libbitcoin_common_a_SOURCES) $(libbitcoin_zmq_a_SOURCES) $(libbitcoin_consensus_a_SOURCES) $(libbitcoin_util_a_SOURCES)\n+$(srcdir)/qt/flowstrings.cpp: $(libflow_server_a_SOURCES) $(libflow_wallet_a_SOURCES) $(libflow_common_a_SOURCES) $(libflow_zmq_a_SOURCES) $(libflow_consensus_a_SOURCES) $(libflow_util_a_SOURCES)\n \t@test -n $(XGETTEXT) || echo \"xgettext is required for updating translations\"\n \t$(AM_V_GEN) cd $(srcdir); XGETTEXT=$(XGETTEXT) PACKAGE_NAME=\"$(PACKAGE_NAME)\" COPYRIGHT_HOLDERS=\"$(COPYRIGHT_HOLDERS)\" COPYRIGHT_HOLDERS_SUBSTITUTION=\"$(COPYRIGHT_HOLDERS_SUBSTITUTION)\" $(PYTHON) ../share/qt/extract_strings_qt.py $^\n \n-translate: $(srcdir)/qt/bitcoinstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(BITCOIN_QT_BASE_CPP) qt/bitcoin.cpp $(BITCOIN_QT_WINDOWS_CPP) $(BITCOIN_QT_WALLET_CPP) $(BITCOIN_QT_H) $(BITCOIN_MM)\n+translate: $(srcdir)/qt/flowstrings.cpp $(QT_FORMS_UI) $(QT_FORMS_UI) $(FLOW_QT_BASE_CPP) qt/flow.cpp $(FLOW_QT_WINDOWS_CPP) $(FLOW_QT_WALLET_CPP) $(FLOW_QT_H) $(FLOW_MM)\n \t@test -n $(LUPDATE) || echo \"lupdate is required for updating translations\"\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/bitcoin_en.ts\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(LUPDATE) $^ -locations relative -no-obsolete -ts $(srcdir)/qt/locale/flow_en.ts\n \n $(QT_QRC_LOCALE_CPP): $(QT_QRC_LOCALE) $(QT_QM)\n \t@test -f $(RCC)\n \t@cp -f $< $(@D)/temp_$(<F)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin_locale $(@D)/temp_$(<F) | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name flow_locale $(@D)/temp_$(<F) | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \t@rm $(@D)/temp_$(<F)\n \n $(QT_QRC_CPP): $(QT_QRC) $(QT_FORMS_H) $(RES_ICONS) $(RES_IMAGES) $(RES_MOVIES) $(PROTOBUF_H)\n \t@test -f $(RCC)\n-\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name bitcoin $< | \\\n+\t$(AM_V_GEN) QT_SELECT=$(QT_SELECT) $(RCC) -name flow $< | \\\n \t  $(SED) -e '/^\\*\\*.*Created:/d' -e '/^\\*\\*.*by:/d' > $@\n \n-CLEAN_QT = $(nodist_qt_libbitcoinqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n+CLEAN_QT = $(nodist_qt_libflowqt_a_SOURCES) $(QT_QM) $(QT_FORMS_H) qt/*.gcda qt/*.gcno\n \n CLEANFILES += $(CLEAN_QT)\n \n-bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_QT) $(qt_libbitcoinqt_a_OBJECTS) $(qt_bitcoin_qt_OBJECTS) qt/bitcoin-qt$(EXEEXT) $(LIBBITCOINQT)\n+flow_qt_clean: FORCE\n+\trm -f $(CLEAN_QT) $(qt_libflowqt_a_OBJECTS) $(qt_flow_qt_OBJECTS) qt/flow-qt$(EXEEXT) $(LIBFLOWQT)\n \n-bitcoin_qt : qt/bitcoin-qt$(EXEEXT)\n+flow_qt : qt/flow-qt$(EXEEXT)\n \n ui_%.h: %.ui\n \t@test -f $(UIC)"
      },
      {
        "sha": "24dc61f047a069278470f89c5e9b85ca73ea01bb",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 25,
        "deletions": 25,
        "changes": 50,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-bin_PROGRAMS += qt/test/test_bitcoin-qt\n-TESTS += qt/test/test_bitcoin-qt\n+bin_PROGRAMS += qt/test/test_flow-qt\n+TESTS += qt/test/test_flow-qt\n \n TEST_QT_MOC_CPP = \\\n   qt/test/moc_compattests.cpp \\\n@@ -24,56 +24,56 @@ TEST_QT_H = \\\n   qt/test/paymentservertests.h \\\n   qt/test/wallettests.h\n \n-TEST_BITCOIN_CPP = \\\n-  test/test_bitcoin.cpp \\\n+TEST_FLOW_CPP = \\\n+  test/test_flow.cpp \\\n   test/testutil.cpp\n \n-TEST_BITCOIN_H = \\\n-  test/test_bitcoin.h \\\n+TEST_FLOW_H = \\\n+  test/test_flow.h \\\n   test/testutil.h\n \n-qt_test_test_bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(BITCOIN_QT_INCLUDES) \\\n+qt_test_test_flow_qt_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) $(FLOW_QT_INCLUDES) \\\n   $(QT_INCLUDES) $(QT_TEST_INCLUDES) $(PROTOBUF_CFLAGS)\n \n-qt_test_test_bitcoin_qt_SOURCES = \\\n+qt_test_test_flow_qt_SOURCES = \\\n   qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n   qt/test/uritests.cpp \\\n   $(TEST_QT_H) \\\n-  $(TEST_BITCOIN_CPP) \\\n-  $(TEST_BITCOIN_H)\n+  $(TEST_FLOW_CPP) \\\n+  $(TEST_FLOW_H)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_SOURCES += \\\n+qt_test_test_flow_qt_SOURCES += \\\n   qt/test/paymentservertests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp\n endif\n \n-nodist_qt_test_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+nodist_qt_test_test_flow_qt_SOURCES = $(TEST_QT_MOC_CPP)\n \n-qt_test_test_bitcoin_qt_LDADD = $(LIBBITCOINQT) $(LIBBITCOIN_SERVER)\n+qt_test_test_flow_qt_LDADD = $(LIBFLOWQT) $(LIBFLOW_SERVER)\n if ENABLE_WALLET\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_WALLET)\n+qt_test_test_flow_qt_LDADD += $(LIBFLOW_WALLET)\n endif\n if ENABLE_ZMQ\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_ZMQ) $(ZMQ_LIBS)\n+qt_test_test_flow_qt_LDADD += $(LIBFLOW_ZMQ) $(ZMQ_LIBS)\n endif\n-qt_test_test_bitcoin_qt_LDADD += $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n+qt_test_test_flow_qt_LDADD += $(LIBFLOW_CLI) $(LIBFLOW_COMMON) $(LIBFLOW_UTIL) $(LIBFLOW_CONSENSUS) $(LIBFLOW_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) \\\n   $(LIBMEMENV) $(BOOST_LIBS) $(QT_DBUS_LIBS) $(QT_TEST_LIBS) $(QT_LIBS) \\\n   $(QR_LIBS) $(PROTOBUF_LIBS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS) $(LIBSECP256K1) \\\n   $(EVENT_PTHREADS_LIBS) $(EVENT_LIBS)\n-qt_test_test_bitcoin_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n-qt_test_test_bitcoin_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n+qt_test_test_flow_qt_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(QT_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+qt_test_test_flow_qt_CXXFLAGS = $(AM_CXXFLAGS) $(QT_PIE_FLAGS)\n \n-CLEAN_BITCOIN_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n+CLEAN_FLOW_QT_TEST = $(TEST_QT_MOC_CPP) qt/test/*.gcda qt/test/*.gcno\n \n-CLEANFILES += $(CLEAN_BITCOIN_QT_TEST)\n+CLEANFILES += $(CLEAN_FLOW_QT_TEST)\n \n-test_bitcoin_qt : qt/test/test_bitcoin-qt$(EXEEXT)\n+test_flow_qt : qt/test/test_flow-qt$(EXEEXT)\n \n-test_bitcoin_qt_check : qt/test/test_bitcoin-qt$(EXEEXT) FORCE\n+test_flow_qt_check : qt/test/test_flow-qt$(EXEEXT) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-test_bitcoin_qt_clean: FORCE\n-\trm -f $(CLEAN_BITCOIN_QT_TEST) $(qt_test_test_bitcoin_qt_OBJECTS)\n+test_flow_qt_clean: FORCE\n+\trm -f $(CLEAN_FLOW_QT_TEST) $(qt_test_test_flow_qt_OBJECTS)"
      },
      {
        "sha": "ee0024d31cf99afb1fda8340216dd91cb9ee72cd",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 41,
        "deletions": 41,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-# Copyright (c) 2013-2016 The Bitcoin Core developers\n+# Copyright (c) 2013-2016 The Flow Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-TESTS += test/test_bitcoin\n-bin_PROGRAMS += test/test_bitcoin\n-noinst_PROGRAMS += test/test_bitcoin_fuzzy\n+TESTS += test/test_flow\n+bin_PROGRAMS += test/test_flow\n+noinst_PROGRAMS += test/test_flow_fuzzy\n TEST_SRCDIR = test\n-TEST_BINARY=test/test_bitcoin$(EXEEXT)\n+TEST_BINARY=test/test_flow$(EXEEXT)\n \n JSON_TEST_FILES = \\\n   test/data/script_tests.json \\\n@@ -21,8 +21,8 @@ RAW_TEST_FILES =\n \n GENERATED_TEST_FILES = $(JSON_TEST_FILES:.json=.json.h) $(RAW_TEST_FILES:.raw=.raw.h)\n \n-# test_bitcoin binary #\n-BITCOIN_TESTS =\\\n+# test_flow binary #\n+FLOW_TESTS =\\\n   test/arith_uint256_tests.cpp \\\n   test/scriptnum10.h \\\n   test/addrman_tests.cpp \\\n@@ -71,9 +71,9 @@ BITCOIN_TESTS =\\\n   test/sigopcount_tests.cpp \\\n   test/skiplist_tests.cpp \\\n   test/streams_tests.cpp \\\n-  test/test_bitcoin.cpp \\\n-  test/test_bitcoin.h \\\n-  test/test_bitcoin_main.cpp \\\n+  test/test_flow.cpp \\\n+  test/test_flow.h \\\n+  test/test_flow_main.cpp \\\n   test/test_random.h \\\n   test/testutil.cpp \\\n   test/testutil.h \\\n@@ -87,68 +87,68 @@ BITCOIN_TESTS =\\\n   test/util_tests.cpp\n \n if ENABLE_WALLET\n-BITCOIN_TESTS += \\\n+FLOW_TESTS += \\\n   wallet/test/wallet_test_fixture.cpp \\\n   wallet/test/wallet_test_fixture.h \\\n   wallet/test/accounting_tests.cpp \\\n   wallet/test/wallet_tests.cpp \\\n   wallet/test/crypto_tests.cpp\n endif\n \n-test_test_bitcoin_SOURCES = $(BITCOIN_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n-test_test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n-test_test_bitcoin_LDADD = $(LIBBITCOIN_SERVER) $(LIBBITCOIN_CLI) $(LIBBITCOIN_COMMON) $(LIBBITCOIN_UTIL) $(LIBBITCOIN_CONSENSUS) $(LIBBITCOIN_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n+test_test_flow_SOURCES = $(FLOW_TESTS) $(JSON_TEST_FILES) $(RAW_TEST_FILES)\n+test_test_flow_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES) -I$(builddir)/test/ $(TESTDEFS) $(EVENT_CFLAGS)\n+test_test_flow_LDADD = $(LIBFLOW_SERVER) $(LIBFLOW_CLI) $(LIBFLOW_COMMON) $(LIBFLOW_UTIL) $(LIBFLOW_CONSENSUS) $(LIBFLOW_CRYPTO) $(LIBUNIVALUE) $(LIBLEVELDB) $(LIBMEMENV) \\\n   $(BOOST_LIBS) $(BOOST_UNIT_TEST_FRAMEWORK_LIB) $(LIBSECP256K1) $(EVENT_LIBS) $(EVENT_PTHREADS_LIBS)\n-test_test_bitcoin_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_flow_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n if ENABLE_WALLET\n-test_test_bitcoin_LDADD += $(LIBBITCOIN_WALLET)\n+test_test_flow_LDADD += $(LIBFLOW_WALLET)\n endif\n \n-test_test_bitcoin_LDADD += $(LIBBITCOIN_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n-test_test_bitcoin_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n+test_test_flow_LDADD += $(LIBFLOW_CONSENSUS) $(BDB_LIBS) $(SSL_LIBS) $(CRYPTO_LIBS) $(MINIUPNPC_LIBS)\n+test_test_flow_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS) -static\n \n if ENABLE_ZMQ\n-test_test_bitcoin_LDADD += $(ZMQ_LIBS)\n+test_test_flow_LDADD += $(ZMQ_LIBS)\n endif\n #\n \n-# test_bitcoin_fuzzy binary #\n-test_test_bitcoin_fuzzy_SOURCES = test/test_bitcoin_fuzzy.cpp\n-test_test_bitcoin_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n-test_test_bitcoin_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n-test_test_bitcoin_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+# test_flow_fuzzy binary #\n+test_test_flow_fuzzy_SOURCES = test/test_flow_fuzzy.cpp\n+test_test_flow_fuzzy_CPPFLAGS = $(AM_CPPFLAGS) $(FLOW_INCLUDES)\n+test_test_flow_fuzzy_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_test_flow_fuzzy_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n \n-test_test_bitcoin_fuzzy_LDADD = \\\n+test_test_flow_fuzzy_LDADD = \\\n   $(LIBUNIVALUE) \\\n-  $(LIBBITCOIN_SERVER) \\\n-  $(LIBBITCOIN_COMMON) \\\n-  $(LIBBITCOIN_UTIL) \\\n-  $(LIBBITCOIN_CONSENSUS) \\\n-  $(LIBBITCOIN_CRYPTO) \\\n+  $(LIBFLOW_SERVER) \\\n+  $(LIBFLOW_COMMON) \\\n+  $(LIBFLOW_UTIL) \\\n+  $(LIBFLOW_CONSENSUS) \\\n+  $(LIBFLOW_CRYPTO) \\\n   $(LIBSECP256K1)\n \n-test_test_bitcoin_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n+test_test_flow_fuzzy_LDADD += $(BOOST_LIBS) $(CRYPTO_LIBS)\n #\n \n-nodist_test_test_bitcoin_SOURCES = $(GENERATED_TEST_FILES)\n+nodist_test_test_flow_SOURCES = $(GENERATED_TEST_FILES)\n \n-$(BITCOIN_TESTS): $(GENERATED_TEST_FILES)\n+$(FLOW_TESTS): $(GENERATED_TEST_FILES)\n \n-CLEAN_BITCOIN_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n+CLEAN_FLOW_TEST = test/*.gcda test/*.gcno $(GENERATED_TEST_FILES)\n \n-CLEANFILES += $(CLEAN_BITCOIN_TEST)\n+CLEANFILES += $(CLEAN_FLOW_TEST)\n \n-bitcoin_test: $(TEST_BINARY)\n+flow_test: $(TEST_BINARY)\n \n-bitcoin_test_check: $(TEST_BINARY) FORCE\n+flow_test_check: $(TEST_BINARY) FORCE\n \t$(MAKE) check-TESTS TESTS=$^\n \n-bitcoin_test_clean : FORCE\n-\trm -f $(CLEAN_BITCOIN_TEST) $(test_test_bitcoin_OBJECTS) $(TEST_BINARY)\n+flow_test_clean : FORCE\n+\trm -f $(CLEAN_FLOW_TEST) $(test_test_flow_OBJECTS) $(TEST_BINARY)\n \n check-local:\n-\t@echo \"Running test/util/bitcoin-util-test.py...\"\n-\t$(PYTHON) $(top_builddir)/test/util/bitcoin-util-test.py\n+\t@echo \"Running test/util/flow-util-test.py...\"\n+\t$(PYTHON) $(top_builddir)/test/util/flow-util-test.py\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C secp256k1 check\n if EMBEDDED_UNIVALUE\n \t$(AM_V_at)$(MAKE) $(AM_MAKEFLAGS) -C univalue check"
      },
      {
        "sha": "fe7a8fed59985ae4f32e46a1d1f0a9252f051a7c",
        "filename": "src/addrdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/addrdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/addrdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "0b2c6a9c1eaa8a6162b917ad8ee9a3ee7d8cf88f",
        "filename": "src/addrdb.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/addrdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/addrdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrdb.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ADDRDB_H\n-#define BITCOIN_ADDRDB_H\n+#ifndef FLOW_ADDRDB_H\n+#define FLOW_ADDRDB_H\n \n #include \"fs.h\"\n #include \"serialize.h\"\n@@ -99,4 +99,4 @@ class CBanDB\n     bool Read(banmap_t& banSet);\n };\n \n-#endif // BITCOIN_ADDRDB_H\n+#endif // FLOW_ADDRDB_H"
      },
      {
        "sha": "b4d536b248dadcd1bbedfbe9a8d82569606f6f13",
        "filename": "src/addrman.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/addrman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/addrman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2012 Pieter Wuille\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "afda41fd36c4c8c5823849b7044064a573d246bb",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2012 Pieter Wuille\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ADDRMAN_H\n-#define BITCOIN_ADDRMAN_H\n+#ifndef FLOW_ADDRMAN_H\n+#define FLOW_ADDRMAN_H\n \n #include \"netaddress.h\"\n #include \"protocol.h\"\n@@ -598,4 +598,4 @@ class CAddrMan\n \n };\n \n-#endif // BITCOIN_ADDRMAN_H\n+#endif // FLOW_ADDRMAN_H"
      },
      {
        "sha": "56d513c9727544398f8a07e19f0a10dd74399796",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_AMOUNT_H\n-#define BITCOIN_AMOUNT_H\n+#ifndef FLOW_AMOUNT_H\n+#define FLOW_AMOUNT_H\n \n #include <stdint.h>\n \n@@ -16,8 +16,8 @@ static const CAmount CENT = 1000000;\n \n /** No amount larger than this (in satoshi) is valid.\n  *\n- * Note that this constant is *not* the total money supply, which in Bitcoin\n- * currently happens to be less than 21,000,000 BTC for various reasons, but\n+ * Note that this constant is *not* the total money supply, which in Flow\n+ * currently happens to be less than 21,000,000 FLW for various reasons, but\n  * rather a sanity check. As this sanity check is used by consensus-critical\n  * validation code, the exact value of the MAX_MONEY constant is consensus\n  * critical; in unusual circumstances like a(nother) overflow bug that allowed\n@@ -26,4 +26,4 @@ static const CAmount CENT = 1000000;\n static const CAmount MAX_MONEY = 21000000 * COIN;\n inline bool MoneyRange(const CAmount& nValue) { return (nValue >= 0 && nValue <= MAX_MONEY); }\n \n-#endif //  BITCOIN_AMOUNT_H\n+#endif //  FLOW_AMOUNT_H"
      },
      {
        "sha": "f7c0a6d996eb56e596a954d99e2eaa709ba2e49e",
        "filename": "src/arith_uint256.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/arith_uint256.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/arith_uint256.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7c7d33445e3d31fb43b24ee190c11360735e9efc",
        "filename": "src/arith_uint256.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/arith_uint256.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/arith_uint256.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/arith_uint256.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_ARITH_UINT256_H\n-#define BITCOIN_ARITH_UINT256_H\n+#ifndef FLOW_ARITH_UINT256_H\n+#define FLOW_ARITH_UINT256_H\n \n #include <assert.h>\n #include <cstring>\n@@ -272,7 +272,7 @@ class arith_uint256 : public base_uint<256> {\n      * Thus 0x1234560000 is compact (0x05123456)\n      * and  0xc0de000000 is compact (0x0600c0de)\n      *\n-     * Bitcoin only uses this \"compact\" format for encoding difficulty\n+     * Flow only uses this \"compact\" format for encoding difficulty\n      * targets, which are unsigned 256bit quantities.  Thus, all the\n      * complexities of the sign bit and using base 256 are probably an\n      * implementation accident.\n@@ -287,4 +287,4 @@ class arith_uint256 : public base_uint<256> {\n uint256 ArithToUint256(const arith_uint256 &);\n arith_uint256 UintToArith256(const uint256 &);\n \n-#endif // BITCOIN_ARITH_UINT256_H\n+#endif // FLOW_ARITH_UINT256_H"
      },
      {
        "sha": "0f8e8f8be3d7d2556a1f885c8e26ee0f1999a60e",
        "filename": "src/base58.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 18,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2014-2016 The Bitcoin Core developers\n+// Copyright (c) 2014-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -212,13 +212,13 @@ int CBase58Data::CompareTo(const CBase58Data& b58) const\n \n namespace\n {\n-class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n+class CFlowAddressVisitor : public boost::static_visitor<bool>\n {\n private:\n-    CBitcoinAddress* addr;\n+    CFlowAddress* addr;\n \n public:\n-    CBitcoinAddressVisitor(CBitcoinAddress* addrIn) : addr(addrIn) {}\n+    CFlowAddressVisitor(CFlowAddress* addrIn) : addr(addrIn) {}\n \n     bool operator()(const CKeyID& id) const { return addr->Set(id); }\n     bool operator()(const CScriptID& id) const { return addr->Set(id); }\n@@ -227,37 +227,37 @@ class CBitcoinAddressVisitor : public boost::static_visitor<bool>\n \n } // anon namespace\n \n-bool CBitcoinAddress::Set(const CKeyID& id)\n+bool CFlowAddress::Set(const CKeyID& id)\n {\n     SetData(Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS), &id, 20);\n     return true;\n }\n \n-bool CBitcoinAddress::Set(const CScriptID& id)\n+bool CFlowAddress::Set(const CScriptID& id)\n {\n     SetData(Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS), &id, 20);\n     return true;\n }\n \n-bool CBitcoinAddress::Set(const CTxDestination& dest)\n+bool CFlowAddress::Set(const CTxDestination& dest)\n {\n-    return boost::apply_visitor(CBitcoinAddressVisitor(this), dest);\n+    return boost::apply_visitor(CFlowAddressVisitor(this), dest);\n }\n \n-bool CBitcoinAddress::IsValid() const\n+bool CFlowAddress::IsValid() const\n {\n     return IsValid(Params());\n }\n \n-bool CBitcoinAddress::IsValid(const CChainParams& params) const\n+bool CFlowAddress::IsValid(const CChainParams& params) const\n {\n     bool fCorrectSize = vchData.size() == 20;\n     bool fKnownVersion = vchVersion == params.Base58Prefix(CChainParams::PUBKEY_ADDRESS) ||\n                          vchVersion == params.Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n     return fCorrectSize && fKnownVersion;\n }\n \n-CTxDestination CBitcoinAddress::Get() const\n+CTxDestination CFlowAddress::Get() const\n {\n     if (!IsValid())\n         return CNoDestination();\n@@ -271,7 +271,7 @@ CTxDestination CBitcoinAddress::Get() const\n         return CNoDestination();\n }\n \n-bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n+bool CFlowAddress::GetKeyID(CKeyID& keyID) const\n {\n     if (!IsValid() || vchVersion != Params().Base58Prefix(CChainParams::PUBKEY_ADDRESS))\n         return false;\n@@ -281,40 +281,40 @@ bool CBitcoinAddress::GetKeyID(CKeyID& keyID) const\n     return true;\n }\n \n-bool CBitcoinAddress::IsScript() const\n+bool CFlowAddress::IsScript() const\n {\n     return IsValid() && vchVersion == Params().Base58Prefix(CChainParams::SCRIPT_ADDRESS);\n }\n \n-void CBitcoinSecret::SetKey(const CKey& vchSecret)\n+void CFlowSecret::SetKey(const CKey& vchSecret)\n {\n     assert(vchSecret.IsValid());\n     SetData(Params().Base58Prefix(CChainParams::SECRET_KEY), vchSecret.begin(), vchSecret.size());\n     if (vchSecret.IsCompressed())\n         vchData.push_back(1);\n }\n \n-CKey CBitcoinSecret::GetKey()\n+CKey CFlowSecret::GetKey()\n {\n     CKey ret;\n     assert(vchData.size() >= 32);\n     ret.Set(vchData.begin(), vchData.begin() + 32, vchData.size() > 32 && vchData[32] == 1);\n     return ret;\n }\n \n-bool CBitcoinSecret::IsValid() const\n+bool CFlowSecret::IsValid() const\n {\n     bool fExpectedFormat = vchData.size() == 32 || (vchData.size() == 33 && vchData[32] == 1);\n     bool fCorrectVersion = vchVersion == Params().Base58Prefix(CChainParams::SECRET_KEY);\n     return fExpectedFormat && fCorrectVersion;\n }\n \n-bool CBitcoinSecret::SetString(const char* pszSecret)\n+bool CFlowSecret::SetString(const char* pszSecret)\n {\n     return CBase58Data::SetString(pszSecret) && IsValid();\n }\n \n-bool CBitcoinSecret::SetString(const std::string& strSecret)\n+bool CFlowSecret::SetString(const std::string& strSecret)\n {\n     return SetString(strSecret.c_str());\n }"
      },
      {
        "sha": "081819955b0f941471f6600031494b3d784da6be",
        "filename": "src/base58.h",
        "status": "modified",
        "additions": 19,
        "deletions": 19,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/base58.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/base58.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/base58.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -11,8 +11,8 @@\n  * - E-mail usually won't line-break if there's no punctuation to break at.\n  * - Double-clicking selects the whole string as one word if it's all alphanumeric.\n  */\n-#ifndef BITCOIN_BASE58_H\n-#define BITCOIN_BASE58_H\n+#ifndef FLOW_BASE58_H\n+#define FLOW_BASE58_H\n \n #include \"chainparams.h\"\n #include \"key.h\"\n@@ -95,24 +95,24 @@ class CBase58Data\n     bool operator> (const CBase58Data& b58) const { return CompareTo(b58) >  0; }\n };\n \n-/** base58-encoded Bitcoin addresses.\n+/** base58-encoded Flow addresses.\n  * Public-key-hash-addresses have version 0 (or 111 testnet).\n  * The data vector contains RIPEMD160(SHA256(pubkey)), where pubkey is the serialized public key.\n  * Script-hash-addresses have version 5 (or 196 testnet).\n  * The data vector contains RIPEMD160(SHA256(cscript)), where cscript is the serialized redemption script.\n  */\n-class CBitcoinAddress : public CBase58Data {\n+class CFlowAddress : public CBase58Data {\n public:\n     bool Set(const CKeyID &id);\n     bool Set(const CScriptID &id);\n     bool Set(const CTxDestination &dest);\n     bool IsValid() const;\n     bool IsValid(const CChainParams &params) const;\n \n-    CBitcoinAddress() {}\n-    CBitcoinAddress(const CTxDestination &dest) { Set(dest); }\n-    CBitcoinAddress(const std::string& strAddress) { SetString(strAddress); }\n-    CBitcoinAddress(const char* pszAddress) { SetString(pszAddress); }\n+    CFlowAddress() {}\n+    CFlowAddress(const CTxDestination &dest) { Set(dest); }\n+    CFlowAddress(const std::string& strAddress) { SetString(strAddress); }\n+    CFlowAddress(const char* pszAddress) { SetString(pszAddress); }\n \n     CTxDestination Get() const;\n     bool GetKeyID(CKeyID &keyID) const;\n@@ -122,7 +122,7 @@ class CBitcoinAddress : public CBase58Data {\n /**\n  * A base58-encoded secret key\n  */\n-class CBitcoinSecret : public CBase58Data\n+class CFlowSecret : public CBase58Data\n {\n public:\n     void SetKey(const CKey& vchSecret);\n@@ -131,11 +131,11 @@ class CBitcoinSecret : public CBase58Data\n     bool SetString(const char* pszSecret);\n     bool SetString(const std::string& strSecret);\n \n-    CBitcoinSecret(const CKey& vchSecret) { SetKey(vchSecret); }\n-    CBitcoinSecret() {}\n+    CFlowSecret(const CKey& vchSecret) { SetKey(vchSecret); }\n+    CFlowSecret() {}\n };\n \n-template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtKeyBase : public CBase58Data\n+template<typename K, int Size, CChainParams::Base58Type Type> class CFlowExtKeyBase : public CBase58Data\n {\n public:\n     void SetKey(const K &key) {\n@@ -153,18 +153,18 @@ template<typename K, int Size, CChainParams::Base58Type Type> class CBitcoinExtK\n         return ret;\n     }\n \n-    CBitcoinExtKeyBase(const K &key) {\n+    CFlowExtKeyBase(const K &key) {\n         SetKey(key);\n     }\n \n-    CBitcoinExtKeyBase(const std::string& strBase58c) {\n+    CFlowExtKeyBase(const std::string& strBase58c) {\n         SetString(strBase58c.c_str(), Params().Base58Prefix(Type).size());\n     }\n \n-    CBitcoinExtKeyBase() {}\n+    CFlowExtKeyBase() {}\n };\n \n-typedef CBitcoinExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_SECRET_KEY> CBitcoinExtKey;\n-typedef CBitcoinExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_PUBLIC_KEY> CBitcoinExtPubKey;\n+typedef CFlowExtKeyBase<CExtKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_SECRET_KEY> CFlowExtKey;\n+typedef CFlowExtKeyBase<CExtPubKey, BIP32_EXTKEY_SIZE, CChainParams::EXT_PUBLIC_KEY> CFlowExtPubKey;\n \n-#endif // BITCOIN_BASE58_H\n+#endif // FLOW_BASE58_H"
      },
      {
        "sha": "6d231aea4418778baff5ff9a55857df5c5245cb5",
        "filename": "src/bench/.gitignore",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/.gitignore?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1 +1 @@\n-bench_bitcoin\n+bench_flow"
      },
      {
        "sha": "9ed12a71f782ebe3e28880921ee6182aac6f00eb",
        "filename": "src/bench/Examples.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/Examples.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/Examples.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/Examples.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "39b407806a9f329e8ce25b150247971d9d1f06dc",
        "filename": "src/bench/base58.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/base58.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/base58.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/base58.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a5e59743fc3bb4be7c4fdcc8fe2a0242007eb33f",
        "filename": "src/bench/bench.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ec7bbdf3069c6a305957c0838f8a645baaebf7a2",
        "filename": "src/bench/bench.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_BENCH_BENCH_H\n-#define BITCOIN_BENCH_BENCH_H\n+#ifndef FLOW_BENCH_BENCH_H\n+#define FLOW_BENCH_BENCH_H\n \n #include <functional>\n #include <limits>\n@@ -78,4 +78,4 @@ namespace benchmark {\n #define BENCHMARK(n) \\\n     benchmark::BenchRunner BOOST_PP_CAT(bench_, BOOST_PP_CAT(__LINE__, n))(BOOST_PP_STRINGIZE(n), n);\n \n-#endif // BITCOIN_BENCH_BENCH_H\n+#endif // FLOW_BENCH_BENCH_H"
      },
      {
        "sha": "a76522191f406d729a7c834e05fd023c0246372f",
        "filename": "src/bench/bench_flow.cpp",
        "status": "renamed",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench_flow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/bench_flow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/bench_flow.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n ",
        "previous_filename": "src/bench/bench_bitcoin.cpp"
      },
      {
        "sha": "74921e485e72201d48467cdb4a5577991d702492",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -52,7 +52,7 @@ SetupDummyInputs(CBasicKeyStore& keystoreRet, CCoinsViewCache& coinsRet)\n // many times micro-benchmarks of the database showed completely different\n // characteristics than e.g. reindex timings. But that's not a requirement of\n // every benchmark.\"\n-// (https://github.com/bitcoin/bitcoin/issues/7883#issuecomment-224807484)\n+// (https://github.com/flow/flow/issues/7883#issuecomment-224807484)\n static void CCoinsCaching(benchmark::State& state)\n {\n     CBasicKeyStore keystore;"
      },
      {
        "sha": "52780b7a8da16eee6f7822ee6aba3aae611b63d2",
        "filename": "src/bench/checkblock.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/checkblock.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/checkblock.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkblock.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "325fa61a34229e1a5057ce096295988c0b464b4a",
        "filename": "src/bench/checkqueue.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/checkqueue.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/checkqueue.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/checkqueue.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c56e2591c2aaec7bfbb35838ca546fc85aa3c718",
        "filename": "src/bench/coin_selection.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/coin_selection.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/coin_selection.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/coin_selection.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -30,7 +30,7 @@ static void addCoin(const CAmount& nValue, const CWallet& wallet, std::vector<CO\n // the hardest, as you need a wider selection of scenarios, just testing the\n // same one over and over isn't too useful. Generating random isn't useful\n // either for measurements.\"\n-// (https://github.com/bitcoin/bitcoin/issues/7883#issuecomment-224807484)\n+// (https://github.com/flow/flow/issues/7883#issuecomment-224807484)\n static void CoinSelection(benchmark::State& state)\n {\n     const CWallet wallet;"
      },
      {
        "sha": "5d25f18103ecd55ac468a078c3009bffc556fde9",
        "filename": "src/bench/crypto_hash.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/crypto_hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/crypto_hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/crypto_hash.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5aba62df3c0bfa370262ed94f317ae123894a9e1",
        "filename": "src/bench/lockedpool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/lockedpool.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6df027f07c6adefc6c638fde910d14b3c99fa3d9",
        "filename": "src/bench/mempool_eviction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/mempool_eviction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/mempool_eviction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/mempool_eviction.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2016 The Bitcoin Core developers\n+// Copyright (c) 2011-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "6c88c868c7e72afed56a1fe4e4c2b3f3d122fc4f",
        "filename": "src/bench/perf.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/perf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/perf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/perf.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "fb9aa449e5d937cde35b44f6b48fa03efafcfc53",
        "filename": "src/bench/perf.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/perf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/perf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/perf.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "1ccb933441e342cd2d21e9d5b36128d45d8618ed",
        "filename": "src/bench/prevector_destructor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/prevector_destructor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/prevector_destructor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector_destructor.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015-2017 The Bitcoin Core developers\n+// Copyright (c) 2015-2017 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "5c8443145c221e65f656f7758ea43f1caa3795bb",
        "filename": "src/bench/rollingbloom.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/rollingbloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/rollingbloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/rollingbloom.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "c962058d6b942291f3e6a59792570831f574e8ea",
        "filename": "src/bench/verify_script.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/verify_script.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bench/verify_script.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/verify_script.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"bench.h\"\n #include \"key.h\"\n #if defined(HAVE_CONSENSUS_LIB)\n-#include \"script/bitcoinconsensus.h\"\n+#include \"script/flowconsensus.h\"\n #endif\n #include \"script/script.h\"\n #include \"script/sign.h\"\n@@ -89,7 +89,7 @@ static void VerifyScriptBench(benchmark::State& state)\n #if defined(HAVE_CONSENSUS_LIB)\n         CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n         stream << txSpend;\n-        int csuccess = bitcoinconsensus_verify_script_with_amount(\n+        int csuccess = flowconsensus_verify_script_with_amount(\n             txCredit.vout[0].scriptPubKey.data(),\n             txCredit.vout[0].scriptPubKey.size(),\n             txCredit.vout[0].nValue,"
      },
      {
        "sha": "c0406bbdae8c6079cda3edaf24d6b497562393f2",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "8da5cbd2bf1299770fe97ced3fd44141022f1cf0",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2016 The Bitcoin Core developers\n+// Copyright (c) 2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_BLOCK_ENCODINGS_H\n-#define BITCOIN_BLOCK_ENCODINGS_H\n+#ifndef FLOW_BLOCK_ENCODINGS_H\n+#define FLOW_BLOCK_ENCODINGS_H\n \n #include \"primitives/block.h\"\n "
      },
      {
        "sha": "15fb273d58bde4afb96f616084289d8c15dff15c",
        "filename": "src/bloom.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bloom.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bloom.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "ff41f78a67e82d4f29cda3817491afc8a62a40c5",
        "filename": "src/bloom.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/bloom.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/bloom.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bloom.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_BLOOM_H\n-#define BITCOIN_BLOOM_H\n+#ifndef FLOW_BLOOM_H\n+#define FLOW_BLOOM_H\n \n #include \"serialize.h\"\n \n@@ -140,4 +140,4 @@ class CRollingBloomFilter\n     int nHashFuncs;\n };\n \n-#endif // BITCOIN_BLOOM_H\n+#endif // FLOW_BLOOM_H"
      },
      {
        "sha": "4fc7ccce162933c85f500aede0e4f2b5a9a0efe7",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "0cba6d9d7986d33864df77428b79621ccc185d63",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAIN_H\n-#define BITCOIN_CHAIN_H\n+#ifndef FLOW_CHAIN_H\n+#define FLOW_CHAIN_H\n \n #include \"arith_uint256.h\"\n #include \"primitives/block.h\"\n@@ -488,4 +488,4 @@ class CChain {\n     CBlockIndex* FindEarliestAtLeast(int64_t nTime) const;\n };\n \n-#endif // BITCOIN_CHAIN_H\n+#endif // FLOW_CHAIN_H"
      },
      {
        "sha": "57a0d544ef262a4f67e27d4167956546021f23cb",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -126,11 +126,11 @@ class CMainParams : public CChainParams {\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n         // Note that of those with the service bits flag, most only support a subset of possible options\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.sipa.be\", \"seed.bitcoin.sipa.be\", true)); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.push_back(CDNSSeedData(\"flow.sipa.be\", \"seed.flow.sipa.be\", true)); // Pieter Wuille, only supports x1, x5, x9, and xd\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"dnsseed.bluematt.me\", true)); // Matt Corallo, only supports x9\n-        vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.bitcoin.dashjr.org\")); // Luke Dashjr\n-        vSeeds.push_back(CDNSSeedData(\"bitcoinstats.com\", \"seed.bitcoinstats.com\", true)); // Christian Decker, supports x1 - xf\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.jonasschnelli.ch\", \"seed.bitcoin.jonasschnelli.ch\", true)); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.push_back(CDNSSeedData(\"dashjr.org\", \"dnsseed.flow.dashjr.org\")); // Luke Dashjr\n+        vSeeds.push_back(CDNSSeedData(\"flowstats.com\", \"seed.flowstats.com\", true)); // Christian Decker, supports x1 - xf\n+        vSeeds.push_back(CDNSSeedData(\"flow.jonasschnelli.ch\", \"seed.flow.jonasschnelli.ch\", true)); // Jonas Schnelli, only supports x1, x5, x9, and xd\n         vSeeds.push_back(CDNSSeedData(\"petertodd.org\", \"seed.btc.petertodd.org\", true)); // Peter Todd, only supports x1, x5, x9, and xd\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n@@ -226,10 +226,10 @@ class CTestNetParams : public CChainParams {\n         vFixedSeeds.clear();\n         vSeeds.clear();\n         // nodes with support for servicebits filtering should be at the top\n-        vSeeds.push_back(CDNSSeedData(\"testnetbitcoin.jonasschnelli.ch\", \"testnet-seed.bitcoin.jonasschnelli.ch\", true));\n+        vSeeds.push_back(CDNSSeedData(\"testnetflow.jonasschnelli.ch\", \"testnet-seed.flow.jonasschnelli.ch\", true));\n         vSeeds.push_back(CDNSSeedData(\"petertodd.org\", \"seed.tbtc.petertodd.org\", true));\n         vSeeds.push_back(CDNSSeedData(\"bluematt.me\", \"testnet-seed.bluematt.me\"));\n-        vSeeds.push_back(CDNSSeedData(\"bitcoin.schildbach.de\", \"testnet-seed.bitcoin.schildbach.de\"));\n+        vSeeds.push_back(CDNSSeedData(\"flow.schildbach.de\", \"testnet-seed.flow.schildbach.de\"));\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);"
      },
      {
        "sha": "9dc852d8c0d52540f321fdf5a7b8ccef41f8c4b7",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAINPARAMS_H\n-#define BITCOIN_CHAINPARAMS_H\n+#ifndef FLOW_CHAINPARAMS_H\n+#define FLOW_CHAINPARAMS_H\n \n #include \"chainparamsbase.h\"\n #include \"consensus/params.h\"\n@@ -39,7 +39,7 @@ struct ChainTxData {\n \n /**\n  * CChainParams defines various tweakable parameters of a given instance of the\n- * Bitcoin system. There are three: the main network on which people trade goods\n+ * Flow system. There are three: the main network on which people trade goods\n  * and services, the public test network which gets reset from time to time and\n  * a regression test mode which is intended for private networks only. It has\n  * minimal difficulty to ensure that blocks can be found instantly.\n@@ -120,4 +120,4 @@ void SelectParams(const std::string& chain);\n  */\n void UpdateBIP9Parameters(Consensus::DeploymentPos d, int64_t nStartTime, int64_t nTimeout);\n \n-#endif // BITCOIN_CHAINPARAMS_H\n+#endif // FLOW_CHAINPARAMS_H"
      },
      {
        "sha": "4dcf75ecf3d96700d20c04e221c0cdc467c473af",
        "filename": "src/chainparamsbase.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2015 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "a75a3eb8ee2cfbcc12ff1abfccf1afa82037f63b",
        "filename": "src/chainparamsbase.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsbase.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,17 +1,17 @@\n-// Copyright (c) 2014-2015 The Bitcoin Core developers\n+// Copyright (c) 2014-2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHAINPARAMSBASE_H\n-#define BITCOIN_CHAINPARAMSBASE_H\n+#ifndef FLOW_CHAINPARAMSBASE_H\n+#define FLOW_CHAINPARAMSBASE_H\n \n #include <memory>\n #include <string>\n #include <vector>\n \n /**\n- * CBaseChainParams defines the base parameters (shared between bitcoin-cli and bitcoind)\n- * of a given instance of the Bitcoin system.\n+ * CBaseChainParams defines the base parameters (shared between flow-cli and flowd)\n+ * of a given instance of the Flow system.\n  */\n class CBaseChainParams\n {\n@@ -59,4 +59,4 @@ void SelectBaseParams(const std::string& chain);\n  */\n std::string ChainNameFromCommandLine();\n \n-#endif // BITCOIN_CHAINPARAMSBASE_H\n+#endif // FLOW_CHAINPARAMSBASE_H"
      },
      {
        "sha": "ec0ab15e65c13d3497b3ede1d25606c26675584d",
        "filename": "src/chainparamsseeds.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsseeds.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/chainparamsseeds.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparamsseeds.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,7 +1,7 @@\n-#ifndef BITCOIN_CHAINPARAMSSEEDS_H\n-#define BITCOIN_CHAINPARAMSSEEDS_H\n+#ifndef FLOW_CHAINPARAMSSEEDS_H\n+#define FLOW_CHAINPARAMSSEEDS_H\n /**\n- * List of fixed seed nodes for the bitcoin network\n+ * List of fixed seed nodes for the flow network\n  * AUTOGENERATED by contrib/seeds/generate-seeds.py\n  *\n  * Each line contains a 16-byte IPv6 address and a port.\n@@ -1187,4 +1187,4 @@ static SeedSpec6 pnSeed6_test[] = {\n     {{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0x47,0xb1,0xe4,0x55,0xd1,0xb0,0x14,0x3f,0xb6,0xdb}, 18333},\n     {{0xfd,0x87,0xd8,0x7e,0xeb,0x43,0xa0,0x60,0x9e,0x46,0x54,0xdb,0x61,0x3b,0xb2,0x6f}, 18333}\n };\n-#endif // BITCOIN_CHAINPARAMSSEEDS_H\n+#endif // FLOW_CHAINPARAMSSEEDS_H"
      },
      {
        "sha": "f21c3a0e60d44f42f3833b5dcdae79f04b942310",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "0f7053ea5da64cf6527d8b56fbcb8494cee41239",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHECKPOINTS_H\n-#define BITCOIN_CHECKPOINTS_H\n+#ifndef FLOW_CHECKPOINTS_H\n+#define FLOW_CHECKPOINTS_H\n \n #include \"uint256.h\"\n \n@@ -24,4 +24,4 @@ CBlockIndex* GetLastCheckpoint(const CCheckpointData& data);\n \n } //namespace Checkpoints\n \n-#endif // BITCOIN_CHECKPOINTS_H\n+#endif // FLOW_CHECKPOINTS_H"
      },
      {
        "sha": "3f69dc8c6218329a3acfb73c6f91c4c86afe635e",
        "filename": "src/checkqueue.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/checkqueue.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/checkqueue.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkqueue.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2012-2015 The Bitcoin Core developers\n+// Copyright (c) 2012-2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CHECKQUEUE_H\n-#define BITCOIN_CHECKQUEUE_H\n+#ifndef FLOW_CHECKQUEUE_H\n+#define FLOW_CHECKQUEUE_H\n \n #include \"sync.h\"\n \n@@ -216,4 +216,4 @@ class CCheckQueueControl\n     }\n };\n \n-#endif // BITCOIN_CHECKQUEUE_H\n+#endif // FLOW_CHECKQUEUE_H"
      },
      {
        "sha": "0ef8af128a35810b4fe67c498dc37763f817e491",
        "filename": "src/clientversion.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/clientversion.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/clientversion.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -10,7 +10,7 @@\n \n /**\n  * Name of client reported in the 'version' message. Report the same name\n- * for both bitcoind and bitcoin-core, to make it harder for attackers to\n+ * for both flowd and flow-core, to make it harder for attackers to\n  * target servers or GUI users specifically.\n  */\n const std::string CLIENT_NAME(\"Satoshi\");\n@@ -83,7 +83,7 @@ std::string FormatFullVersion()\n }\n \n /** \n- * Format the subversion field according to BIP 14 spec (https://github.com/bitcoin/bips/blob/master/bip-0014.mediawiki) \n+ * Format the subversion field according to BIP 14 spec (https://github.com/flow/bips/blob/master/bip-0014.mediawiki) \n  */\n std::string FormatSubVersion(const std::string& name, int nClientVersion, const std::vector<std::string>& comments)\n {"
      },
      {
        "sha": "90a29f063b71ac6dc1b314b0de20ffb034854cc8",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,19 +1,19 @@\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CLIENTVERSION_H\n-#define BITCOIN_CLIENTVERSION_H\n+#ifndef FLOW_CLIENTVERSION_H\n+#define FLOW_CLIENTVERSION_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #else\n \n /**\n  * client versioning and copyright year\n  */\n \n-//! These need to be macros, as clientversion.cpp's and bitcoin*-res.rc's voodoo requires it\n+//! These need to be macros, as clientversion.cpp's and flow*-res.rc's voodoo requires it\n #define CLIENT_VERSION_MAJOR 0\n #define CLIENT_VERSION_MINOR 14\n #define CLIENT_VERSION_REVISION 1\n@@ -41,7 +41,7 @@\n #define COPYRIGHT_STR \"2009-\" STRINGIZE(COPYRIGHT_YEAR) \" \" COPYRIGHT_HOLDERS_FINAL\n \n /**\n- * bitcoind-res.rc includes this file, but it cannot cope with real c++ code.\n+ * flowd-res.rc includes this file, but it cannot cope with real c++ code.\n  * WINDRES_PREPROC is defined to indicate that its pre-processor is running.\n  * Anything other than a define should be guarded below.\n  */\n@@ -66,4 +66,4 @@ std::string FormatSubVersion(const std::string& name, int nClientVersion, const\n \n #endif // WINDRES_PREPROC\n \n-#endif // BITCOIN_CLIENTVERSION_H\n+#endif // FLOW_CLIENTVERSION_H"
      },
      {
        "sha": "f1e3470d6e483cf92680ab34005c1df9c16c7fd5",
        "filename": "src/coins.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/coins.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/coins.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2012-2016 The Bitcoin Core developers\n+// Copyright (c) 2012-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "e94c01a84965a83a6bcb5c896fa4a7b9c0277fc9",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COINS_H\n-#define BITCOIN_COINS_H\n+#ifndef FLOW_COINS_H\n+#define FLOW_COINS_H\n \n #include \"primitives/transaction.h\"\n #include \"compressor.h\"\n@@ -47,7 +47,7 @@\n  *    - code = 4 (vout[1] is not spent, and 0 non-zero bytes of bitvector follow)\n  *    - unspentness bitvector: as 0 non-zero bytes follow, it has length 0\n  *    - vout[1]: 835800816115944e077fe7c803cfa57f29b36bf87c1d35\n- *               * 8358: compact amount representation for 60000000000 (600 BTC)\n+ *               * 8358: compact amount representation for 60000000000 (600 FLW)\n  *               * 00: special txout type pay-to-pubkey-hash\n  *               * 816115944e077fe7c803cfa57f29b36bf87c1d35: address uint160\n  *    - height = 203998\n@@ -63,11 +63,11 @@\n  *                2 (1, +1 because both bit 1 and bit 2 are unset) non-zero bitvector bytes follow)\n  *  - unspentness bitvector: bits 2 (0x04) and 14 (0x4000) are set, so vout[2+2] and vout[14+2] are unspent\n  *  - vout[4]: 86ef97d5790061b01caab50f1b8e9c50a5057eb43c2d9563a4ee\n- *             * 86ef97d579: compact amount representation for 234925952 (2.35 BTC)\n+ *             * 86ef97d579: compact amount representation for 234925952 (2.35 FLW)\n  *             * 00: special txout type pay-to-pubkey-hash\n  *             * 61b01caab50f1b8e9c50a5057eb43c2d9563a4ee: address uint160\n  *  - vout[16]: bbd123008c988f1a4a4de2161e0f50aac7f17e7f9555caa4\n- *              * bbd123: compact amount representation for 110397 (0.001 BTC)\n+ *              * bbd123: compact amount representation for 110397 (0.001 FLW)\n  *              * 00: special txout type pay-to-pubkey-hash\n  *              * 8c988f1a4a4de2161e0f50aac7f17e7f9555caa4: address uint160\n  *  - height = 120891\n@@ -448,7 +448,7 @@ class CCoinsViewCache : public CCoinsViewBacked\n     size_t DynamicMemoryUsage() const;\n \n     /** \n-     * Amount of bitcoins coming in to a transaction\n+     * Amount of flows coming in to a transaction\n      * Note that lightweight clients may not know anything besides the hash of previous transactions,\n      * so may not be able to calculate this.\n      *\n@@ -473,4 +473,4 @@ class CCoinsViewCache : public CCoinsViewBacked\n     CCoinsViewCache(const CCoinsViewCache &);\n };\n \n-#endif // BITCOIN_COINS_H\n+#endif // FLOW_COINS_H"
      },
      {
        "sha": "534c9188a02f10fed99c92a509974c5b13b1753d",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,13 +1,13 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_H\n-#define BITCOIN_COMPAT_H\n+#ifndef FLOW_COMPAT_H\n+#define FLOW_COMPAT_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #ifdef WIN32\n@@ -84,4 +84,4 @@ bool static inline IsSelectableSocket(SOCKET s) {\n #endif\n }\n \n-#endif // BITCOIN_COMPAT_H\n+#endif // FLOW_COMPAT_H"
      },
      {
        "sha": "0c0c181bd8d5096d2bd7d313eeddab5240f7e947",
        "filename": "src/compat/byteswap.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/byteswap.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/byteswap.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/byteswap.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-// Copyright (c) 2014-2016 The Bitcoin Core developers\n+// Copyright (c) 2014-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_BYTESWAP_H\n-#define BITCOIN_COMPAT_BYTESWAP_H\n+#ifndef FLOW_COMPAT_BYTESWAP_H\n+#define FLOW_COMPAT_BYTESWAP_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #include <stdint.h>\n@@ -63,4 +63,4 @@ inline uint64_t bswap_64(uint64_t x)\n \n #endif // defined(__APPLE__)\n \n-#endif // BITCOIN_COMPAT_BYTESWAP_H\n+#endif // FLOW_COMPAT_BYTESWAP_H"
      },
      {
        "sha": "2df1225fd19f3119bdc59239ac4a6fb8d809961c",
        "filename": "src/compat/endian.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/endian.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/endian.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/endian.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,12 +1,12 @@\n-// Copyright (c) 2014-2016 The Bitcoin Core developers\n+// Copyright (c) 2014-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_ENDIAN_H\n-#define BITCOIN_COMPAT_ENDIAN_H\n+#ifndef FLOW_COMPAT_ENDIAN_H\n+#define FLOW_COMPAT_ENDIAN_H\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #include <stdint.h>\n@@ -193,4 +193,4 @@ inline uint64_t le64toh(uint64_t little_endian_64bits)\n \n #endif // WORDS_BIGENDIAN\n \n-#endif // BITCOIN_COMPAT_ENDIAN_H\n+#endif // FLOW_COMPAT_ENDIAN_H"
      },
      {
        "sha": "f6cb5f6464d397c1fe6d6ce831d98859328d9643",
        "filename": "src/compat/glibc_compat.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibc_compat.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibc_compat.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_compat.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #include <cstddef>"
      },
      {
        "sha": "d2de7f1b7d84d1c2304efe04eb925f2022bd73f1",
        "filename": "src/compat/glibc_sanity.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibc_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibc_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibc_sanity.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #include <cstddef>"
      },
      {
        "sha": "5e0abd07570c64a4c8b6d275b2e23fa76e693d9a",
        "filename": "src/compat/glibcxx_sanity.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibcxx_sanity.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/glibcxx_sanity.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/glibcxx_sanity.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "16d6979e216fc30a9de912ac6770a728c13f1886",
        "filename": "src/compat/sanity.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/sanity.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/sanity.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/sanity.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,11 +1,11 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPAT_SANITY_H\n-#define BITCOIN_COMPAT_SANITY_H\n+#ifndef FLOW_COMPAT_SANITY_H\n+#define FLOW_COMPAT_SANITY_H\n \n bool glibc_sanity_test();\n bool glibcxx_sanity_test();\n \n-#endif // BITCOIN_COMPAT_SANITY_H\n+#endif // FLOW_COMPAT_SANITY_H"
      },
      {
        "sha": "0c8722c6c6561f5dc5f77d4d795b9dbdd99e3dd7",
        "filename": "src/compat/strnlen.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/strnlen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compat/strnlen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat/strnlen.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #if defined(HAVE_CONFIG_H)\n-#include \"config/bitcoin-config.h\"\n+#include \"config/flow-config.h\"\n #endif\n \n #include <cstring>"
      },
      {
        "sha": "a72ec5fe6e5b072e10c8dc16e1e897b11eb6b6a9",
        "filename": "src/compressor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compressor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compressor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2014 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "7def0ff3762c64b063c70fddf7363dc1f6eaa7ba",
        "filename": "src/compressor.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/compressor.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/compressor.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compressor.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_COMPRESSOR_H\n-#define BITCOIN_COMPRESSOR_H\n+#ifndef FLOW_COMPRESSOR_H\n+#define FLOW_COMPRESSOR_H\n \n #include \"primitives/transaction.h\"\n #include \"script/script.h\"\n@@ -118,4 +118,4 @@ class CTxOutCompressor\n     }\n };\n \n-#endif // BITCOIN_COMPRESSOR_H\n+#endif // FLOW_COMPRESSOR_H"
      },
      {
        "sha": "210234c035e5de9d15ff6b572bc372e7d1de264a",
        "filename": "src/consensus/consensus.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/consensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/consensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/consensus.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CONSENSUS_CONSENSUS_H\n-#define BITCOIN_CONSENSUS_CONSENSUS_H\n+#ifndef FLOW_CONSENSUS_CONSENSUS_H\n+#define FLOW_CONSENSUS_CONSENSUS_H\n \n #include <stdint.h>\n \n@@ -28,4 +28,4 @@ enum {\n     LOCKTIME_MEDIAN_TIME_PAST = (1 << 1),\n };\n \n-#endif // BITCOIN_CONSENSUS_CONSENSUS_H\n+#endif // FLOW_CONSENSUS_CONSENSUS_H"
      },
      {
        "sha": "13b5f0c15af0687b8727bbda125924cf672bfc7b",
        "filename": "src/consensus/merkle.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/merkle.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/merkle.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -101,7 +101,7 @@ static void MerkleComputation(const std::vector<uint256>& leaves, uint256* proot\n     bool matchh = matchlevel == level;\n     while (count != (((uint32_t)1) << level)) {\n         // If we reach this point, h is an inner value that is not the top.\n-        // We combine it with itself (Bitcoin's special rule for odd levels in\n+        // We combine it with itself (Flow's special rule for odd levels in\n         // the tree) to produce a higher level one.\n         if (pbranch && matchh) {\n             pbranch->push_back(h);"
      },
      {
        "sha": "903c65332c27c706f236cdc2b2ddb136ced69343",
        "filename": "src/consensus/merkle.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/merkle.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/merkle.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/merkle.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2015 The Bitcoin Core developers\n+// Copyright (c) 2015 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_MERKLE\n-#define BITCOIN_MERKLE\n+#ifndef FLOW_MERKLE\n+#define FLOW_MERKLE\n \n #include <stdint.h>\n #include <vector>"
      },
      {
        "sha": "9bf76509b984b277e9f3c1e9cd63f9d6c1596a8a",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CONSENSUS_PARAMS_H\n-#define BITCOIN_CONSENSUS_PARAMS_H\n+#ifndef FLOW_CONSENSUS_PARAMS_H\n+#define FLOW_CONSENSUS_PARAMS_H\n \n #include \"uint256.h\"\n #include <map>\n@@ -66,4 +66,4 @@ struct Params {\n };\n } // namespace Consensus\n \n-#endif // BITCOIN_CONSENSUS_PARAMS_H\n+#endif // FLOW_CONSENSUS_PARAMS_H"
      },
      {
        "sha": "2c92ef87d1c5bc39ca77d83692b6bf44e49585af",
        "filename": "src/consensus/tx_verify.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/tx_verify.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/tx_verify.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.cpp?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2017-2017 The Bitcoin Core developers\n+// Copyright (c) 2017-2017 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n "
      },
      {
        "sha": "23cb8729b8d667530b45b3ca21eec9f1b4521c79",
        "filename": "src/consensus/tx_verify.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/tx_verify.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/tx_verify.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/tx_verify.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2017-2017 The Bitcoin Core developers\n+// Copyright (c) 2017-2017 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CONSENSUS_TX_VERIFY_H\n-#define BITCOIN_CONSENSUS_TX_VERIFY_H\n+#ifndef FLOW_CONSENSUS_TX_VERIFY_H\n+#define FLOW_CONSENSUS_TX_VERIFY_H\n \n #include <stdint.h>\n #include <vector>\n@@ -75,4 +75,4 @@ bool EvaluateSequenceLocks(const CBlockIndex& block, std::pair<int, int64_t> loc\n  */\n bool SequenceLocks(const CTransaction &tx, int flags, std::vector<int>* prevHeights, const CBlockIndex& block);\n \n-#endif // BITCOIN_CONSENSUS_TX_VERIFY_H\n+#endif // FLOW_CONSENSUS_TX_VERIFY_H"
      },
      {
        "sha": "d72394e70dbf055f0c9d0c669c507002c3c25597",
        "filename": "src/consensus/validation.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,10 +1,10 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CONSENSUS_VALIDATION_H\n-#define BITCOIN_CONSENSUS_VALIDATION_H\n+#ifndef FLOW_CONSENSUS_VALIDATION_H\n+#define FLOW_CONSENSUS_VALIDATION_H\n \n #include <string>\n \n@@ -85,4 +85,4 @@ class CValidationState {\n     std::string GetDebugMessage() const { return strDebugMessage; }\n };\n \n-#endif // BITCOIN_CONSENSUS_VALIDATION_H\n+#endif // FLOW_CONSENSUS_VALIDATION_H"
      },
      {
        "sha": "7025c20aae71ef1f386cd097bc27a14c126dbacc",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2009-2016 The Bitcoin Core developers\n+// Copyright (c) 2009-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CORE_IO_H\n-#define BITCOIN_CORE_IO_H\n+#ifndef FLOW_CORE_IO_H\n+#define FLOW_CORE_IO_H\n \n #include <string>\n #include <vector>\n@@ -30,4 +30,4 @@ std::string EncodeHexTx(const CTransaction& tx, const int serializeFlags = 0);\n void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n \n-#endif // BITCOIN_CORE_IO_H\n+#endif // FLOW_CORE_IO_H"
      },
      {
        "sha": "74c135f62e77491c187c7fbc5d9001af9f868d9e",
        "filename": "src/core_memusage.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54a345df2d305291924bb3091b681d8304ed98f/src/core_memusage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54a345df2d305291924bb3091b681d8304ed98f/src/core_memusage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_memusage.h?ref=e54a345df2d305291924bb3091b681d8304ed98f",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2015-2016 The Bitcoin Core developers\n+// Copyright (c) 2015-2016 The Flow Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-#ifndef BITCOIN_CORE_MEMUSAGE_H\n-#define BITCOIN_CORE_MEMUSAGE_H\n+#ifndef FLOW_CORE_MEMUSAGE_H\n+#define FLOW_CORE_MEMUSAGE_H\n \n #include \"primitives/transaction.h\"\n #include \"primitives/block.h\"\n@@ -63,4 +63,4 @@ static inline size_t RecursiveDynamicUsage(const CBlockLocator& locator) {\n     return memusage::DynamicUsage(locator.vHave);\n }\n \n-#endif // BITCOIN_CORE_MEMUSAGE_H\n+#endif // FLOW_CORE_MEMUSAGE_H"
      }
    ]
  }
]