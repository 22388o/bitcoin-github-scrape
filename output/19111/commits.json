[
  {
    "sha": "fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTljNjc1NTkxODZmNTQxNmMxYzBiMjZjMGExZDVlNzJjMjM0Y2Ni",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-29T21:21:56Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-05-29T21:22:07Z"
      },
      "message": "Limit scope of all global std::once_flag",
      "tree": {
        "sha": "2d1978db3244baeaf39831857bb9929cf9740dfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d1978db3244baeaf39831857bb9929cf9740dfa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiTXgv7BR9B71hL0a08JeB0/+70LP0Q5fudcMyhKhCr1rm5JpiDdZlz5Uk5SWLM\nrlAL1BpPxAKLtM7FDsxyS6cN93msSCfdjkt/il/tP/IM339HKHrVR44TM97LsH3r\nFc74O5X/bE5dCsqZkSfPtf0Jgy4oQd7DMC+3ZTSQeDpQy59FSPYj8G7hDwbHNOQW\n2HhSZQg7/OOvoor3V2CSkp6E6GEt6swF0+W/wpEiMDs8XoG1JKHYiD77v37c+prm\nN/aM34mveeEPpQ36Ym6iyvjFb4ERFRCkT5vr7u89QhdspWsG80rTSjmxYNkpvV3y\nqGVhhpaUFFtgrFT1GQr/DIdok1qdKCWP8WY0DQ86gLlgaTl23qQFifXZJL01VhQQ\nrJctM0xync8BUzz4NgjQTgqyxkkmV5rS2GEjtIPEYibFtubjXICJSzbDK6aU8nne\nKOtO8eHjVzDjEznB+SQHKb0T954c+3xtpLkhe/Ihy87XGytMxxlXUknwKa3mFpNN\n8+WvEXoz\n=Xz7N\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d1978db3244baeaf39831857bb9929cf9740dfa\nparent cb88de3e3d37842199a17ba3d36838fc69fbe573\nauthor MarcoFalke <falke.marco@gmail.com> 1590787316 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1590787327 -0400\n\nLimit scope of all global std::once_flag\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cb88de3e3d37842199a17ba3d36838fc69fbe573",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cb88de3e3d37842199a17ba3d36838fc69fbe573",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cb88de3e3d37842199a17ba3d36838fc69fbe573"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 4,
      "deletions": 5
    },
    "files": [
      {
        "sha": "844f62cbc67f73ee1643caa119c2dd12eb436202",
        "filename": "src/rpc/server.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/rpc/server.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/rpc/server.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/server.cpp?ref=fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
        "patch": "@@ -22,8 +22,6 @@\n \n static RecursiveMutex cs_rpcWarmup;\n static std::atomic<bool> g_rpc_running{false};\n-static std::once_flag g_rpc_interrupt_flag;\n-static std::once_flag g_rpc_stop_flag;\n static bool fRPCInWarmup GUARDED_BY(cs_rpcWarmup) = true;\n static std::string rpcWarmupStatus GUARDED_BY(cs_rpcWarmup) = \"RPC server started\";\n /* Timer-creating functions */\n@@ -295,6 +293,7 @@ void StartRPC()\n \n void InterruptRPC()\n {\n+    static std::once_flag g_rpc_interrupt_flag;\n     // This function could be called twice if the GUI has been started with -server=1.\n     std::call_once(g_rpc_interrupt_flag, []() {\n         LogPrint(BCLog::RPC, \"Interrupting RPC\\n\");\n@@ -305,6 +304,7 @@ void InterruptRPC()\n \n void StopRPC()\n {\n+    static std::once_flag g_rpc_stop_flag;\n     // This function could be called twice if the GUI has been started with -server=1.\n     assert(!g_rpc_running);\n     std::call_once(g_rpc_stop_flag, []() {"
      },
      {
        "sha": "b4f392116ceda3afd25008cfa36d8b20deb3de9d",
        "filename": "src/support/lockedpool.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/support/lockedpool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/support/lockedpool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.cpp?ref=fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
        "patch": "@@ -29,7 +29,6 @@\n #endif\n \n LockedPoolManager* LockedPoolManager::_instance = nullptr;\n-std::once_flag LockedPoolManager::init_flag;\n \n /*******************************************************************************/\n // Utilities"
      },
      {
        "sha": "b9e2e99d1aba27b44f7dec7f890902fbf433b98f",
        "filename": "src/support/lockedpool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/support/lockedpool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9c67559186f5416c1c0b26c0a1d5e72c234ccb/src/support/lockedpool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/support/lockedpool.h?ref=fa9c67559186f5416c1c0b26c0a1d5e72c234ccb",
        "patch": "@@ -221,7 +221,8 @@ class LockedPoolManager : public LockedPool\n     /** Return the current instance, or create it once */\n     static LockedPoolManager& Instance()\n     {\n-        std::call_once(LockedPoolManager::init_flag, LockedPoolManager::CreateInstance);\n+        static std::once_flag init_flag;\n+        std::call_once(init_flag, LockedPoolManager::CreateInstance);\n         return *LockedPoolManager::_instance;\n     }\n \n@@ -234,7 +235,6 @@ class LockedPoolManager : public LockedPool\n     static bool LockingFailed();\n \n     static LockedPoolManager* _instance;\n-    static std::once_flag init_flag;\n };\n \n #endif // BITCOIN_SUPPORT_LOCKEDPOOL_H"
      }
    ]
  }
]