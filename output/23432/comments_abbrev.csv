DrahtBot,2021-11-04 08:33:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23561](https://github.com/bitcoin/bitcoin/pull/23561) (BIP324: Handshake prerequisites by dhruv)\n\nIf you consider this",https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-960551809,960551809,
hebasto,2021-11-05 09:20:13,"Wrt a failed Win64 cross-compiled [build](https://cirrus-ci.com/task/6688875159486464).\n\nI've managed to successfully link `libbitcoinconsensus.la` with the following patch:\n```diff\n--- a/src/Makefile.am\n+++ b/src/Makefile.am\n@@ -507,8 +507,6 @@ libbitcoin_consensus_a_SOURCES = \\n   primitives/transaction.h \\n   pubkey.cpp \\n   pubkey.h \\n-  random.cpp \\n-  random.h \\n   sc",https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-961739929,961739929,
dhruv,2021-11-06 20:07:50,"Thank you for the review and suggestions, @hebasto, @sipa. Addressed the comments, ready for further review.",https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-962503500,962503500,
dhruv,2021-11-06 23:30:09,Pushed again to fix a CI issue. I had forgotten to appropriately rollback my Makefile.am changes.\n\nReady for review.,https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-962523722,962523722,
dhruv,2021-11-19 22:59:27,Removed randomness used in a fuzz test that was not derived from the fuzz seed. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-974526751,974526751,
dhruv,2021-11-25 17:28:39,Addressed review comments from @sipa and @MarcoFalke. Ready for further review.,https://github.com/bitcoin/bitcoin/pull/23432#issuecomment-979375906,979375906,
sipa,2021-11-06 05:02:46,"It's a pretty unfortunate I think that the whole random module needs to be included in libbitcoinconsensus just because it include pubkey (which then wouldn't be part of libbitcoinconsensus), and this adds a dependency on randomness to pubkey.\n\nAlternatives are putting the conversion between pubkey and ellsq encoding in a different modulo than pubkey, or passing in randomness explicitly as arg",https://github.com/bitcoin/bitcoin/pull/23432#discussion_r744076619,744076619,src/pubkey.cpp
sipa,2021-11-06 05:03:51,"There is no reason to support uncompressed public keys here I think.\n\nEDIT: added a missing negation",https://github.com/bitcoin/bitcoin/pull/23432#discussion_r744076675,744076675,src/pubkey.cpp
dhruv,2021-11-06 20:07:15,Done. Passing in random bytes to `EllSqEncode` now.,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r744163402,744163402,src/pubkey.cpp
dhruv,2021-11-06 20:07:20,Done.,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r744163419,744163419,src/pubkey.cpp
sipa,2021-11-23 21:32:23,"You could do a stronger test here: start with a pubkey drawn from the fuzz data, and if it is valid, elligator encode it (with additional randomness drawn from the fuzz data), decode it, and see if it matches the original pubkey.",https://github.com/bitcoin/bitcoin/pull/23432#discussion_r755518221,755518221,src/test/fuzz/key.cpp
MarcoFalke,2021-11-23 21:38:26,"random_uint256 is uniformly distributed, making it harder for the fuzz engine to discover potential edge cases",https://github.com/bitcoin/bitcoin/pull/23432#discussion_r755521829,755521829,src/test/fuzz/key.cpp
MarcoFalke,2021-11-23 21:41:15,You may install `clang-format` and run the https://github.com/bitcoin/bitcoin/tree/master/contrib/devtools#clang-format-diffpy script to preempt whitespace nitpicking.,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r755523359,755523359,src/test/fuzz/key.cpp
dhruv,2021-11-25 17:27:36,Thanks. Done!,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r757057925,757057925,src/test/fuzz/key.cpp
dhruv,2021-11-25 17:27:58,Makes sense. Fixed. I ended up combining the encode/decode fuzzing.,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r757058102,757058102,src/test/fuzz/key.cpp
dhruv,2021-11-25 17:28:09,Done.,https://github.com/bitcoin/bitcoin/pull/23432#discussion_r757058173,757058173,src/test/fuzz/key.cpp
