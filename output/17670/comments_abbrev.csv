MarcoFalke,2019-12-05 03:02:48,"ACK fbf5ec5d41cbc1ea05f6baa7d1b32f30ff964301 ðŸŒµ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK fbf5ec5d41cbc1ea05f6baa7d1b32f30ff964301 ðŸŒµ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUghXQwAoCDLTgpi3i37G/cRRPYrnTZM1tqOGrFIIiUTl3D3hzpfAApUR3",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-561945789,561945789,
DrahtBot,2019-12-05 05:05:15,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17627](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17627.html) (Suppress false positive warning about unini",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-561970619,561970619,
laanwj,2019-12-05 08:41:54,"ACK fbf5ec5d41cbc1ea05f6baa7d1b32f30ff964301\n\nHow can we avoid these kind of things from creeping in in the future, is there something like a initialization-order-sanitizer?\n",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562028895,562028895,
practicalswift,2019-12-05 09:02:08,"@laanwj AddressSanitizer has `ASAN_OPTIONS=check_initialization_order=true` which I believe we're not using (yet) :)  There is also `ASAN_OPTIONS=strict_init_order=true`.\n\nAnother case where better use of available tooling perhaps could help us avoid C++ sharp edges? :)",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562035813,562035813,
laanwj,2019-12-05 14:15:42,Needs rebase due to #17507 (as expected),https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562146918,562146918,
DrahtBot,2019-12-05 14:29:32,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562152799,562152799,
promag,2019-12-05 14:35:37,"ACK after rebase. \n\n> This guarantees (through the existing GetRNGState() function\n\nUseful comment `GetRNGState()` regarding thread safety:\n\n```cpp\n    // This C++11 idiom relies on the guarantee that static variable are initialized\n    // on first call, even when multiple parallel calls are permitted.\n```\n\nTested that this removes the ASan error:\n```\n==3770==ERROR: Addre",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562155412,562155412,
sipa,2019-12-05 17:52:07,Rebased.,https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562239856,562239856,
MarcoFalke,2019-12-05 18:19:03,"re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79 ðŸ¥ˆ\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 8bda0960f94dfb6462fc810cd61a8a065730eb79 ðŸ¥ˆ\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj2gwv/V0fADNVUtMFbOxW1ejThYoP5Ir6sken6DMGwd6DF80Dn1Kr",https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562250922,562250922,
sipsorcery,2019-12-05 20:36:15,re-ACK 8bda0960f94dfb6462fc810cd61a8a065730eb79.,https://github.com/bitcoin/bitcoin/pull/17670#issuecomment-562306778,562306778,
MarcoFalke,2019-12-05 02:07:40,"style-nit:\n\n```suggestion\nvoid RandAddEvent(const uint32_t event_info) noexcept\n```",https://github.com/bitcoin/bitcoin/pull/17670#discussion_r354079442,354079442,src/random.cpp
sipa,2019-12-05 02:20:57,In that case we'd also want it in the .h definition.,https://github.com/bitcoin/bitcoin/pull/17670#discussion_r354082125,354082125,src/random.cpp
sipa,2019-12-05 02:30:36,"Added, also to a few other functions.",https://github.com/bitcoin/bitcoin/pull/17670#discussion_r354084149,354084149,src/random.cpp
