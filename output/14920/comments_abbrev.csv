DrahtBot,2018-12-11T06:19:41Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18397 (build: Fix libevent linking for bench_bitcoin binary by hebasto)\n* #18361 (build: Make the help string for --with",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446086080,446086080,
practicalswift,2018-12-11T07:18:09Z,"Concept ACK\n\nThanks for working on this!",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446097469,446097469,
laanwj,2018-12-11T11:28:48Z,"I think this can be useful for warnings.\n\nWhich compilers/versions is `-isystem` compatible with? does it need to be optional/tested?",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446169827,446169827,
Empact,2018-12-11T23:54:22Z,"For GCC, it has been available since 1994, the egcs days. https://github.com/gcc-mirror/gcc/commit/0330c077aec77a65faee5ba84eb84c721f92c223\n\nFor Clang, has been in the codebase since at least 2009, coinciding with 2.7, though it wasn't mentioned in the release notes I checked. https://github.com/llvm-mirror/clang/commit/33a33d8abd7a3d49eacc05e40c00b00634bf1ee9\n\nMSVC has had a version of th",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446408204,446408204,
Empact,2018-12-12T01:01:50Z,"Another option is `-cxx-isystem`, but I'm not sure there's a good reason to prefer it. Does build with all `-isystem` replaced with `-cxx-isystem` under current clang.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446421772,446421772,
fanquake,2018-12-12T16:23:22Z,"Concept ACK\nCompiled on macOS, this doesn't have the problem with warnings that #13914 did.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446648893,446648893,
laanwj,2018-12-13T12:41:23Z,"> For GCC, it has been available since 1994, the egcs days. gcc-mirror/gcc@0330c07 \n> For Clang, has been in the codebase since at least 2009, coinciding  with 2.7, though it wasn't mentioned in the release notes I checked. llvm-mirror/clang@33a33d8 \n\nTIL! Thanks for checking. That's far back enough, given that the minimum releases supported according to `dependencies.md` are gcc 4.8 and cla",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446954713,446954713,
laanwj,2018-12-13T13:02:35Z,utACK—would be nice if @theuni could take a look at the build system changes.,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-446960646,446960646,
Empact,2018-12-14T11:39:55Z,"~In `Makefile.leveldb.include`, I split `LEVELDB_CPPFLAGS_INT` from `LEVELDB_CPPFLAGS`, and only gave the latter `isystem` treatment. The former is used for building leveldb as a lib, in which case the includes are not system includes.~\n\nI dropped the leveldb changes as leveldb is built with the warning options via `AM_CXXFLAGS`. Can be addressed separately as needed.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-447300360,447300360,
fanquake,2019-01-04T11:21:35Z,"Looks like this has issues on two of the Travis linux builds (re-ran to make sure).\n\n[build](https://travis-ci.org/bitcoin/bitcoin/jobs/474239060):\n```\nchecking miniupnpc/upnpcommands.h usability... yes\nchecking miniupnpc/upnpcommands.h presence... yes\nchecking for miniupnpc/upnpcommands.h... yes\nchecking for upnpDiscover in -lminiupnpc... (cached) yes\nchecking miniupnpc/upnperrors",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-451418527,451418527,
Empact,2019-01-05T07:10:06Z,"Thanks, the redirection issue was a dash incompatibility, and the boost issue was a case of `-isystem/usr/include` (see below). I updated any include that could resolve to /usr/include to run through the new`BITCOIN_SYSTEM_INCLUDE` function.\n\nThis is ready for review.\n\n```\nconfigure:29481: checking whether the Boost::System library is available\nconfigure:29506: clang++ -std=c++11 -c  -",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-451633945,451633945,
practicalswift,2019-01-05T10:14:26Z,utACK 72878aac48e87e17646fa1889c554e229d76c7bb,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-451643426,451643426,
Empact,2019-01-07T19:03:25Z,Added Qt Dbus and Qt Test `isystem` treatment.,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-452044542,452044542,
practicalswift,2019-01-07T21:07:46Z,utACK d4baebfc06bf375b64f30298b685b4d66f32cae8,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-452082163,452082163,
theuni,2019-01-08T23:52:05Z,"I'm really not a fan of disabling warnings for 3rd party headers, but I'm not completely opposed. I'm more afraid that this will be one of those changes that causes lots of subtle future grief due to edge-cases in libtool, automake, ccache, non-glibc builds, dependency generation (gcc's ""-M*"" options), etc.\n\nClang has the ""system-header-prefix"" option, which could be hooked up to depends with ",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-452505849,452505849,
Empact,2019-01-09T00:20:25Z,"Can you elaborate on what sorts of issues you expect? One option is to apply `isystem` as a build option (by running everything through `BITCOIN_SYSTEM_INCLUDE`). Then we could enable the stricter checks only if `isystem` is enabled, but keep the existing arrangement otherwise.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-452511701,452511701,
Empact,2019-01-09T03:14:20Z,"Updated to put these changes behind `--enable-isystem`. Also added `-Werror=documentation` for when `--enable-werror` is also specified.\n\nThe idea is to eventually error on all warnings when both are specified, so we can have a travis run which strictly applies all warnings.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-452556717,452556717,
theuni,2019-01-11T00:32:12Z,"On second thought, as long as it's off by default, concept ACK. Thanks for the compromise :)",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-453318340,453318340,
Empact,2019-01-20T04:57:09Z,Rebased for #15175 ,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-455837935,455837935,
practicalswift,2019-01-20T08:32:46Z,"utACK 1433ed22dad8940e1339d741039d5882196e37b0\n\nWhat about enabling isystem for the macOS 10.10 Travis job? That way we'll guard against broken Doxygen comments getting merged.\n\n```\ndiff --git a/.travis.yml b/.travis.yml\nindex 6181726fb..bdde7bbf7 100644\n--- a/.travis.yml\n+++ b/.travis.yml\n@@ -132,9 +132,9 @@ jobs:\n       name: 'macOS 10.10  [GOAL: deploy]'\n       env: >-\n ",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-455847324,455847324,
laanwj,2019-01-22T12:27:25Z,"I think this caused the MacOSX job to fail (restarted it just in case it's a transient error)\n\nEdit: apparently that was the case it's passing now",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-456381955,456381955,
Empact,2019-01-22T17:55:35Z,@theuni would you take another look? I believe I’ve addressed your feedback.,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-456497501,456497501,
practicalswift,2019-01-22T21:25:11Z,"utACK 535bf5a4f4a9a5a99e188a2f38e9d129e61e5b94\n\nVery nice! Let’s get this merged! :-)",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-456569235,456569235,
theuni,2019-01-22T23:56:49Z,"I believe you'll need to remove these two lines before this works correctly with depends builds:\nhttps://github.com/bitcoin/bitcoin/blob/master/depends/config.site.in#L61\n\nThat should be OK, because all depends should be found anyway without requiring those paths.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-456611986,456611986,
theuni,2019-01-23T19:31:15Z,"> I believe you'll need to remove these two lines before this works correctly with depends builds:\n> https://github.com/bitcoin/bitcoin/blob/master/depends/config.site.in#L61\n> \n> That should be OK, because all depends should be found anyway without requiring those paths.\n\nNevermind on this. The -isystem that inevitably gets added later will override the ""-I"" added here.\n\nI'll remove",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-456935401,456935401,
practicalswift,2019-01-24T08:30:36Z,utACK c0ee524b77eacd3e7a2c31be9a722c467d876293,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-457109971,457109971,
DrahtBot,2019-01-26T18:54:51Z,<!--a722867cd34abeea1fadc8d60700f111-->\nGitian builds for commit ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f (master):\n * `fbdd9c4b4d378ae2718ec2f4ef8260aa...` [bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz](https://drahtbot.space/gitian/bitcoin/bitcoin/ab46fe6ec1b37e88c5a06ee7a06ab31cbd18304f/bitcoin-0.17.99-aarch64-linux-gnu-debug.tar.gz)\n * `7f9a76f58b7cb8580cc642ad0322967c...` [bitcoin-0.17.9,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-457855861,457855861,
Empact,2019-02-09T23:48:09Z,Rebased due to conflicts in #15377,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-462090242,462090242,
Empact,2019-03-05T05:37:21Z,Rebased due to conflicts in #15112,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-469545367,469545367,
Empact,2019-03-07T15:22:38Z,Fix documentation errors added in #14978 bd0dbe8763fc3029cf96531c9ccaba280b939445,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-470568302,470568302,
Empact,2019-03-07T16:23:59Z,"Fix more documentation errors, including some added in #14021.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-470593163,470593163,
practicalswift,2019-03-07T20:12:26Z,"utACK b51f4e14137e45d8d52fbf0b925287dde45ee97b\n\nLet's move forward with this one :-)",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-470676253,470676253,
Empact,2019-06-05T13:42:55Z,@theuni could you take another look at this?,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-499088243,499088243,
Empact,2019-06-05T14:08:11Z,"Rebased, squashed the latter two commits, fixed a net_processing.cpp doc error introduced in #15141",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-499098448,499098448,
Empact,2019-06-05T14:10:31Z,"@dongcarl could you take a look at this, given your recent build investigations?",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-499099449,499099449,
Sjors,2019-11-20T11:38:35Z,"Concept ACK\n\nNeeds rebase now that openssl and protobuf are gone.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-555966368,555966368,
Sjors,2019-11-20T11:50:37Z,"Consider cherry-picking the reverse of f327e82b0266b9ac455c8b82434528d670eee6a8 (but moved under the` use_isystem"" = ""xyes""` check)",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-555970684,555970684,
vasild,2020-02-21T17:39:00Z,"ACK 572db3ce8 I tested this on FreeBSD 12 with clang 9 and it works as expected: `-I` is replaced with `-isystem`, excellent!\n\nThis PR does 2 things - add a new `./configure` option (first commit 572db3ce8) and add a new warning flag (second commit 875f8e2c2).\n\nNACK 875f8e2c2 I do not like that the new warning flag is enabled only if this and that configure options are turned on or off. 87",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-589757119,589757119,
Empact,2020-02-21T18:14:01Z,"> I do not like that the new warning flag is enabled only if this and that configure options are turned on or off.\n\nHere `--enable-isystem` here has two modes: if `--enable-werror` is active, it will enable `-Werror=*`, if not, it will enable `-W*`. The difference being whether or not to error on a related failure.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-589770385,589770385,
DrahtBot,2020-03-26T10:24:55Z,<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-604348158,604348158,
fanquake,2021-04-06T06:48:47Z,"Thanks for the contributions here, however I'm going to enable `-Wdocumentation` using a different approach.",https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-813870748,813870748,
MarcoFalke,2021-04-06T07:07:33Z,#21613 ,https://github.com/bitcoin/bitcoin/pull/14920#issuecomment-813881682,813881682,
Empact,2019-01-09T03:16:31Z,Note I changed this for consistency with the option.,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246248586,246248586,configure.ac
theuni,2019-01-10T23:25:07Z,"Missing ```;```s between assignments. I'm actually not sure why ```have_qt``` works.\n\n(These are missing in a few other places too, but I won't bother pointing out each one)",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246958196,246958196,build-aux/m4/bitcoin_qt.m4
theuni,2019-01-10T23:29:41Z,"To be safe, I believe you need to AC_INCLUDE or AC_REQUIRE BITCOIN_SYSTEM_INCLUDE first.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246959275,246959275,build-aux/m4/bitcoin_subdir_to_include.m4
theuni,2019-01-10T23:43:05Z,"```/usr/include``` is not sufficient, that won't work for cross toolchains. Instead, the compiler's build-in system paths will need to be dumped using something like ```${CXX} -x c++ -Wp,-v < /dev/null```, and added iteratively.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246961866,246961866,build-aux/m4/bitcoin_system_include.m4
theuni,2019-01-10T23:50:35Z,"This would also break if any include dir ever includes an ""-I"", like: ```/home/Foo-I/```",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246963570,246963570,build-aux/m4/bitcoin_system_include.m4
theuni,2019-01-10T23:52:44Z,Could you move this inside of the ```enable_werror``` check above to keep related things in the same place?,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246963929,246963929,configure.ac
theuni,2019-01-10T23:55:24Z,This needs to check against ```-Wno-documentation``` instead. See the note above.,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246964453,246964453,configure.ac
theuni,2019-01-10T23:57:59Z,"The entire port section can be removed. I'm not sure if macports is even maintained anymore, and we for sure no longer make any attempt to keep it working.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246964938,246964938,configure.ac
theuni,2019-01-11T00:30:14Z,These changes should be done outside of ax_boost_base.m4. This is an upstream file.,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r246970283,246970283,build-aux/m4/ax_boost_base.m4
Empact,2019-01-16T06:43:39Z,"I'm skeptical, I don't find docs or use of `AC_INCLUDE`, and `AC_REQUIRE` is about requiring that a function be called. I think this is good thanks to `AC_CONFIG_MACRO_DIR`.\nhttps://www.gnu.org/software/autoconf/manual/autoconf-2.67/html_node/Prerequisite-Macros.html\nhttps://www.gnu.org/software/automake/manual/html_node/Local-Macros.html",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248166003,248166003,build-aux/m4/bitcoin_subdir_to_include.m4
Empact,2019-01-16T09:03:29Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248197822,248197822,build-aux/m4/ax_boost_base.m4
Empact,2019-01-16T09:03:54Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248197947,248197947,configure.ac
Empact,2019-01-16T09:10:30Z,Opened #15175 for separate consideration.,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248199971,248199971,configure.ac
Empact,2019-01-16T09:20:52Z,"Fixed the `-I` issue, and I'd prefer to leave the cross toolchain issue aside. The goal being CI runs, initially, then perhaps broad support in the future.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248203314,248203314,build-aux/m4/bitcoin_system_include.m4
Empact,2019-01-16T09:22:13Z,"I believe this is correct - it's the non-`werror`, with-`isystem` case. So it activates `-Wdocumentation` as a non-error.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248203776,248203776,configure.ac
Empact,2019-01-16T09:23:48Z,"Added `;`, except after `BITCOIN_SYSTEM_INCLUDE`, which evaluates to an `if` statement.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r248204292,248204292,build-aux/m4/bitcoin_qt.m4
Empact,2019-01-20T04:57:00Z,Now merged. 👍 ,https://github.com/bitcoin/bitcoin/pull/14920#discussion_r249265040,249265040,configure.ac
theuni,2019-01-22T23:16:38Z,"You can just use ```test ""x$enable_werror"" = xyes``` here, no need for the new variable.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r249999075,249999075,configure.ac
theuni,2019-01-22T23:22:18Z,"Yes, you're right.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r250000413,250000413,build-aux/m4/bitcoin_subdir_to_include.m4
Empact,2019-01-23T09:42:24Z,"Ah good point - I dropped `werror_enabled`, as it was extraneous. I do think testing that isystem is active & werror is inactive is appropriate here, as this is the warn-but-don't-error isystem case. Added some comments to further clarify and connect the cases.",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r250117822,250117822,configure.ac
vasild,2020-02-21T17:15:28Z,"Nit: `test ""x$2"" != ""x""` seems unnecessary? If `$2` is empty, then the below `echo | sed ...` would still assign an empty string to `$1`?",https://github.com/bitcoin/bitcoin/pull/14920#discussion_r382703836,382703836,build-aux/m4/bitcoin_system_include.m4
