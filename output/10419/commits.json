[
  {
    "sha": "efc2e3302d9df87bca5116f15bcbee000ccfb67f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZmMyZTMzMDJkOWRmODdiY2E1MTE2ZjE1YmNiZWUwMDBjY2ZiNjdm",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-05-18T07:50:11Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2017-05-23T11:22:40Z"
      },
      "message": "[trivial] Fix three recently introduced typos\n\n```\n$ git blame src/policy/fees.cpp | grep becuase\n3810e976 (2017-03-07 11:33:44 -0500 789)          * checks for 2*target becuase we are taking the max over all time\n$ git blame src/policy/fees.h | grep successfullly\n2d2e1705 (2017-04-12 12:29:03 -0400  54)  * representing that a tx was successfullly confirmed in less than or equal to\n$ git blame src/wallet/feebumper.cpp | grep \"hasen't\"\na3878374 (2017-05-11 09:34:39 +0200 258)     // make sure the transaction still has no descendants and hasen't been mined in the meantime\n```",
      "tree": {
        "sha": "01ab79dbcde809772b1359792a530d25cce0961a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01ab79dbcde809772b1359792a530d25cce0961a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/efc2e3302d9df87bca5116f15bcbee000ccfb67f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efc2e3302d9df87bca5116f15bcbee000ccfb67f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/efc2e3302d9df87bca5116f15bcbee000ccfb67f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/efc2e3302d9df87bca5116f15bcbee000ccfb67f/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e4775167cb4b15e6a37290d27009386efb1e5e97",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4775167cb4b15e6a37290d27009386efb1e5e97",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4775167cb4b15e6a37290d27009386efb1e5e97"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7998fc712b79bf36b5079c174f915e0963f73258",
        "filename": "src/policy/fees.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/policy/fees.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/policy/fees.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.cpp?ref=efc2e3302d9df87bca5116f15bcbee000ccfb67f",
        "patch": "@@ -786,7 +786,7 @@ CFeeRate CBlockPolicyEstimator::estimateSmartFee(int confTarget, int *answerFoun\n          * This is necessary to preserve monotonically increasing estimates.\n          * For non-conservative estimates we do the same thing for 2*target, but\n          * for conservative estimates we want to skip these shorter horizons\n-         * checks for 2*target becuase we are taking the max over all time\n+         * checks for 2*target because we are taking the max over all time\n          * horizons so we already have monotonically increasing estimates and\n          * the purpose of conservative estimates is not to let short term\n          * fluctuations lower our estimates by too much."
      },
      {
        "sha": "e99fec2c39398d81b01024e6dd0a10665908e57e",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=efc2e3302d9df87bca5116f15bcbee000ccfb67f",
        "patch": "@@ -51,7 +51,7 @@ class TxConfirmStats;\n  * blocks.  This is is tracked in 3 different data sets each up to a maximum\n  * number of periods. Within each data set we have an array of counters in each\n  * feerate bucket and we increment all the counters from Y' up to max periods\n- * representing that a tx was successfullly confirmed in less than or equal to\n+ * representing that a tx was successfully confirmed in less than or equal to\n  * that many periods. We want to save a history of this information, so at any\n  * time we have a counter of the total number of transactions that happened in a\n  * given feerate bucket and the total number that were confirmed in each of the"
      },
      {
        "sha": "99120d290cb59f8d3e9f7c3f9e5df39393550ac1",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/efc2e3302d9df87bca5116f15bcbee000ccfb67f/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=efc2e3302d9df87bca5116f15bcbee000ccfb67f",
        "patch": "@@ -255,7 +255,7 @@ bool CFeeBumper::commit(CWallet *pWallet)\n     }\n     CWalletTx& oldWtx = pWallet->mapWallet[txid];\n \n-    // make sure the transaction still has no descendants and hasen't been mined in the meantime\n+    // make sure the transaction still has no descendants and hasn't been mined in the meantime\n     if (!preconditionChecks(pWallet, oldWtx)) {\n         return false;\n     }"
      }
    ]
  }
]