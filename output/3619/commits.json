[
  {
    "sha": "7398f4a796522f896ccc65b2e9adb109e9346020",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3Mzk4ZjRhNzk2NTIyZjg5NmNjYzY1YjJlOWFkYjEwOWU5MzQ2MDIw",
    "commit": {
      "author": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-02-03T06:23:20Z"
      },
      "committer": {
        "name": "Cozz Lovan",
        "email": "cozzlovan@yahoo.com",
        "date": "2014-03-25T12:09:20Z"
      },
      "message": "improve command-line options output",
      "tree": {
        "sha": "3675b880b38bafa6355b977dae25ce829ec44ede",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3675b880b38bafa6355b977dae25ce829ec44ede"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7398f4a796522f896ccc65b2e9adb109e9346020",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7398f4a796522f896ccc65b2e9adb109e9346020",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7398f4a796522f896ccc65b2e9adb109e9346020",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7398f4a796522f896ccc65b2e9adb109e9346020/comments",
    "author": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "cozz",
      "id": 2814559,
      "node_id": "MDQ6VXNlcjI4MTQ1NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2814559?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cozz",
      "html_url": "https://github.com/cozz",
      "followers_url": "https://api.github.com/users/cozz/followers",
      "following_url": "https://api.github.com/users/cozz/following{/other_user}",
      "gists_url": "https://api.github.com/users/cozz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cozz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cozz/subscriptions",
      "organizations_url": "https://api.github.com/users/cozz/orgs",
      "repos_url": "https://api.github.com/users/cozz/repos",
      "events_url": "https://api.github.com/users/cozz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cozz/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e3f5d4338d0305a398817279e36ef2d0cfd2fd2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e3f5d4338d0305a398817279e36ef2d0cfd2fd2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e3f5d4338d0305a398817279e36ef2d0cfd2fd2b"
      }
    ],
    "stats": {
      "total": 158,
      "additions": 94,
      "deletions": 64
    },
    "files": [
      {
        "sha": "1c6411706b7710c953a82a1861f06a752449aa03",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 86,
        "deletions": 58,
        "changes": 144,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7398f4a796522f896ccc65b2e9adb109e9346020/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7398f4a796522f896ccc65b2e9adb109e9346020/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7398f4a796522f896ccc65b2e9adb109e9346020",
        "patch": "@@ -190,98 +190,126 @@ std::string HelpMessage(HelpMessageMode hmm)\n {\n     string strUsage = _(\"Options:\") + \"\\n\";\n     strUsage += \"  -?                     \" + _(\"This help message\") + \"\\n\";\n+    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n+    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n+    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n+    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification of -checkblocks is (0-4, default: 3)\") + \"\\n\";\n     strUsage += \"  -conf=<file>           \" + _(\"Specify configuration file (default: bitcoin.conf)\") + \"\\n\";\n+    if (hmm == HMM_BITCOIND)\n+    {\n+#if !defined(WIN32)\n+        strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n+#endif\n+    }\n     strUsage += \"  -datadir=<dir>         \" + _(\"Specify data directory\") + \"\\n\";\n-    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n-    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n-    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n     strUsage += \"  -dbcache=<n>           \" + strprintf(_(\"Set database cache size in megabytes (%d to %d, default: %d)\"), nMinDbCache, nMaxDbCache, nDefaultDbCache) + \"\\n\";\n-    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n-    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n-    strUsage += \"  -socks=<n>             \" + _(\"Select SOCKS version for -proxy (4 or 5, default: 5)\") + \"\\n\";\n-    strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n-    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \"\\n\";\n-    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n-    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n+    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n+    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n+    strUsage += \"  -pid=<file>            \" + _(\"Specify pid file (default: bitcoind.pid)\") + \"\\n\";\n+    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n+\n+    strUsage += \"\\n\" + _(\"Connection options:\") + \"\\n\";\n     strUsage += \"  -addnode=<ip>          \" + _(\"Add a node to connect to and attempt to keep the connection open\") + \"\\n\";\n+    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n+    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n     strUsage += \"  -connect=<ip>          \" + _(\"Connect only to the specified node(s)\") + \"\\n\";\n-    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n-    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n-    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n     strUsage += \"  -discover              \" + _(\"Discover own IP address (default: 1 when listening and no -externalip)\") + \"\\n\";\n-    strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n-    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n-    strUsage += \"  -bind=<addr>           \" + _(\"Bind to given address and always listen on it. Use [host]:port notation for IPv6\") + \"\\n\";\n+    strUsage += \"  -dns                   \" + _(\"Allow DNS lookups for -addnode, -seednode and -connect\") + \" \" + _(\"(default: 1)\") + \"\\n\";\n     strUsage += \"  -dnsseed               \" + _(\"Find peers using DNS lookup (default: 1 unless -connect)\") + \"\\n\";\n-    strUsage += \"  -banscore=<n>          \" + _(\"Threshold for disconnecting misbehaving peers (default: 100)\") + \"\\n\";\n-    strUsage += \"  -bantime=<n>           \" + _(\"Number of seconds to keep misbehaving peers from reconnecting (default: 86400)\") + \"\\n\";\n+    strUsage += \"  -externalip=<ip>       \" + _(\"Specify your own public address\") + \"\\n\";\n+    strUsage += \"  -listen                \" + _(\"Accept connections from outside (default: 1 if no -proxy or -connect)\") + \"\\n\";\n+    strUsage += \"  -maxconnections=<n>    \" + _(\"Maintain at most <n> connections to peers (default: 125)\") + \"\\n\";\n     strUsage += \"  -maxreceivebuffer=<n>  \" + _(\"Maximum per-connection receive buffer, <n>*1000 bytes (default: 5000)\") + \"\\n\";\n     strUsage += \"  -maxsendbuffer=<n>     \" + _(\"Maximum per-connection send buffer, <n>*1000 bytes (default: 1000)\") + \"\\n\";\n+    strUsage += \"  -onion=<ip:port>       \" + _(\"Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: -proxy)\") + \"\\n\";\n+    strUsage += \"  -onlynet=<net>         \" + _(\"Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\") + \"\\n\";\n+    strUsage += \"  -port=<port>           \" + _(\"Listen for connections on <port> (default: 8333 or testnet: 18333)\") + \"\\n\";\n+    strUsage += \"  -proxy=<ip:port>       \" + _(\"Connect through SOCKS proxy\") + \"\\n\";\n+    strUsage += \"  -seednode=<ip>         \" + _(\"Connect to a node to retrieve peer addresses, and disconnect\") + \"\\n\";\n+    strUsage += \"  -socks=<n>             \" + _(\"Select SOCKS version for -proxy (4 or 5, default: 5)\") + \"\\n\";\n+    strUsage += \"  -timeout=<n>           \" + _(\"Specify connection timeout in milliseconds (default: 5000)\") + \"\\n\";\n #ifdef USE_UPNP\n #if USE_UPNP\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 1 when listening)\") + \"\\n\";\n #else\n     strUsage += \"  -upnp                  \" + _(\"Use UPnP to map the listening port (default: 0)\") + \"\\n\";\n #endif\n #endif\n+\n+#ifdef ENABLE_WALLET\n+    strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n+    strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n+    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n+    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -spendzeroconfchange   \" + _(\"Spend unconfirmed change when sending transactions (default: 1)\") + \"\\n\";\n+    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \" \" + _(\"on startup\") + \"\\n\";\n+    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \" \" + _(\"(default: wallet.dat)\") + \"\\n\";\n+    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n+    strUsage += \"  -zapwallettxes         \" + _(\"Clear list of wallet transactions (diagnostic tool; implies -rescan)\") + \"\\n\";\n+#endif\n+\n+    strUsage += \"\\n\" + _(\"Debugging/Testing options:\") + \"\\n\";\n+    if (GetBoolArg(\"-help-debug\", false))\n+    {\n+        strUsage += \"  -benchmark             \" + _(\"Show benchmark information (default: 0)\") + \"\\n\";\n+        strUsage += \"  -checkpoints           \" + _(\"Only accept block chain matching built-in checkpoints (default: 1)\") + \"\\n\";\n+        strUsage += \"  -dblogsize=<n>         \" + _(\"Flush database activity from memory pool to disk log every <n> megabytes (default: 100)\") + \"\\n\";\n+        strUsage += \"  -disablesafemode       \" + _(\"Disable safemode, override a real safe mode event (default: 0)\") + \"\\n\";\n+        strUsage += \"  -testsafemode          \" + _(\"Force safe mode (default: 0)\") + \"\\n\";\n+        strUsage += \"  -dropmessagestest=<n>  \" + _(\"Randomly drop 1 of every <n> network messages\") + \"\\n\";\n+        strUsage += \"  -fuzzmessagestest=<n>  \" + _(\"Randomly fuzz 1 of every <n> network messages\") + \"\\n\";\n+        strUsage += \"  -flushwallet           \" + _(\"Run a thread to flush wallet periodically (default: 1)\") + \"\\n\";\n+    }\n     strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n     strUsage += \"                         \" + _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"<category> can be:\");\n     strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n     if (hmm == HMM_BITCOIN_QT)\n+        strUsage += \", qt\";\n+    strUsage += \".\\n\";\n+    strUsage += \"  -gen                   \" + _(\"Generate coins (default: 0)\") + \"\\n\";\n+    strUsage += \"  -genproclimit=<n>      \" + _(\"Set the processor limit for when generation is on (-1 = unlimited, default: -1)\") + \"\\n\";\n+    strUsage += \"  -help-debug            \" + _(\"Show all debugging options (usage: --help -help-debug)\") + \"\\n\";\n+    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n+    if (GetBoolArg(\"-help-debug\", false))\n     {\n-        strUsage += \", qt.\\n\";\n+        strUsage += \"  -limitfreerelay=<n>    \" + _(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default:15)\") + \"\\n\";\n+        strUsage += \"  -maxsigcachesize=<n>   \" + _(\"Limit size of signature cache to <n> entries (default: 50000)\") + \"\\n\";\n     }\n-    else\n+    strUsage += \"  -mintxfee=<amt>        \" + _(\"Fees smaller than this are considered zero fee (for transaction creation) (default:\") + \" \" + FormatMoney(CTransaction::nMinTxFee) + \")\" + \"\\n\";\n+    strUsage += \"  -minrelaytxfee=<amt>   \" + _(\"Fees smaller than this are considered zero fee (for relaying) (default:\") + \" \" + FormatMoney(CTransaction::nMinRelayTxFee) + \")\" + \"\\n\";\n+    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n+    if (GetBoolArg(\"-help-debug\", false))\n     {\n-        strUsage += \".\\n\";\n+        strUsage += \"  -printblock=<hash>     \" + _(\"Print block on startup, if found in block index\") + \"\\n\";\n+        strUsage += \"  -printblocktree        \" + _(\"Print block tree on startup (default: 0)\") + \"\\n\";\n+        strUsage += \"  -printpriority         \" + _(\"Log transaction priority and fee per kB when mining blocks (default: 0)\") + \"\\n\";\n+        strUsage += \"  -privdb                \" + _(\"Sets the DB_PRIVATE flag in the wallet db environment (default: 1)\") + \"\\n\";\n+        strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n+        strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n+        strUsage += \"                         \" + _(\"In this mode -genproclimit controls how many blocks are generated immediately.\") + \"\\n\";\n     }\n-    strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp (default: 1)\") + \"\\n\";\n     strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n-    strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n-    strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n-    strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n-    strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n+    strUsage += \"  -testnet               \" + _(\"Use the test network\") + \"\\n\";\n \n-    if (hmm == HMM_BITCOIND)\n-    {\n-#if !defined(WIN32)\n-        strUsage += \"  -daemon                \" + _(\"Run in the background as a daemon and accept commands\") + \"\\n\";\n-#endif\n-    }\n+    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n+    strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n+    strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";\n+    strUsage += \"  -blockprioritysize=<n> \" + strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE) + \"\\n\";\n \n+    strUsage += \"\\n\" + _(\"RPC server options:\") + \"\\n\";\n+    strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n     strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcport=<port>        \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n     strUsage += \"  -rpcallowip=<ip>       \" + _(\"Allow JSON-RPC connections from specified IP address\") + \"\\n\";\n     strUsage += \"  -rpcthreads=<n>        \" + _(\"Set the number of threads to service RPC calls (default: 4)\") + \"\\n\";\n-    strUsage += \"  -blocknotify=<cmd>     \" + _(\"Execute command when the best block changes (%s in cmd is replaced by block hash)\") + \"\\n\";\n-    strUsage += \"  -alertnotify=<cmd>     \" + _(\"Execute command when a relevant alert is received or we see a really long fork (%s in cmd is replaced by message)\") + \"\\n\";\n-    strUsage += \"  -keypool=<n>           \" + _(\"Set key pool size to <n> (default: 100)\") + \"\\n\";\n-    strUsage += \"  -checkblocks=<n>       \" + _(\"How many blocks to check at startup (default: 288, 0 = all)\") + \"\\n\";\n-    strUsage += \"  -checklevel=<n>        \" + _(\"How thorough the block verification is (0-4, default: 3)\") + \"\\n\";\n-    strUsage += \"  -txindex               \" + _(\"Maintain a full transaction index (default: 0)\") + \"\\n\";\n-    strUsage += \"  -loadblock=<file>      \" + _(\"Imports blocks from external blk000??.dat file\") + \"\\n\";\n-    strUsage += \"  -reindex               \" + _(\"Rebuild block chain index from current blk000??.dat files\") + \"\\n\";\n-    strUsage += \"  -par=<n>               \" + _(\"Set the number of script verification threads (up to 16, 0 = auto, <0 = leave that many cores free, default: 0)\") + \"\\n\";\n-#ifdef ENABLE_WALLET\n-    strUsage += \"\\n\" + _(\"Wallet options:\") + \"\\n\";\n-    strUsage += \"  -disablewallet         \" + _(\"Do not load the wallet and disable wallet RPC calls\") + \"\\n\";\n-    strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per kB to add to transactions you send\") + \"\\n\";\n-    strUsage += \"  -rescan                \" + _(\"Rescan the block chain for missing wallet transactions\") + \"\\n\";\n-    strUsage += \"  -zapwallettxes         \" + _(\"Clear list of wallet transactions (diagnostic tool; implies -rescan)\") + \"\\n\";\n-    strUsage += \"  -salvagewallet         \" + _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \"\\n\";\n-    strUsage += \"  -upgradewallet         \" + _(\"Upgrade wallet to latest format\") + \"\\n\";\n-    strUsage += \"  -wallet=<file>         \" + _(\"Specify wallet file (within data directory)\") + \"\\n\";\n-    strUsage += \"  -walletnotify=<cmd>    \" + _(\"Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\") + \"\\n\";\n-    strUsage += \"  -spendzeroconfchange   \" + _(\"Spend unconfirmed change when sending transactions (default: 1)\") + \"\\n\";\n-#endif\n-    strUsage += \"\\n\" + _(\"Block creation options:\") + \"\\n\";\n-    strUsage += \"  -blockminsize=<n>      \" + _(\"Set minimum block size in bytes (default: 0)\") + \"\\n\";\n-    strUsage += \"  -blockmaxsize=<n>      \" + strprintf(_(\"Set maximum block size in bytes (default: %d)\"), DEFAULT_BLOCK_MAX_SIZE) + \"\\n\";\n-    strUsage += \"  -blockprioritysize=<n> \" + strprintf(_(\"Set maximum size of high-priority/low-fee transactions in bytes (default: %d)\"), DEFAULT_BLOCK_PRIORITY_SIZE) + \"\\n\";\n \n-    strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n+    strUsage += \"\\n\" + _(\"RPC SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n     strUsage += \"  -rpcssl                                  \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n     strUsage += \"  -rpcsslcertificatechainfile=<file.cert>  \" + _(\"Server certificate file (default: server.cert)\") + \"\\n\";\n     strUsage += \"  -rpcsslprivatekeyfile=<file.pem>         \" + _(\"Server private key (default: server.pem)\") + \"\\n\";"
      },
      {
        "sha": "7a546734d34b1ec9601eec06eb25212d126ebf41",
        "filename": "src/qt/utilitydialog.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7398f4a796522f896ccc65b2e9adb109e9346020/src/qt/utilitydialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7398f4a796522f896ccc65b2e9adb109e9346020/src/qt/utilitydialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/utilitydialog.cpp?ref=7398f4a796522f896ccc65b2e9adb109e9346020",
        "patch": "@@ -72,10 +72,11 @@ HelpMessageDialog::HelpMessageDialog(QWidget *parent) :\n     coreOptions = QString::fromStdString(HelpMessage(HMM_BITCOIN_QT));\n \n     uiOptions = tr(\"UI options\") + \":\\n\" +\n-        \"  -lang=<lang>           \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n-        \"  -min                   \" + tr(\"Start minimized\") + \"\\n\" +\n-        \"  -splash                \" + tr(\"Show splash screen on startup (default: 1)\") + \"\\n\" +\n-        \"  -choosedatadir         \" + tr(\"Choose data directory on startup (default: 0)\");\n+        \"  -choosedatadir            \" + tr(\"Choose data directory on startup (default: 0)\") + \"\\n\" +\n+        \"  -lang=<lang>              \" + tr(\"Set language, for example \\\"de_DE\\\" (default: system locale)\") + \"\\n\" +\n+        \"  -min                      \" + tr(\"Start minimized\") + \"\\n\" +\n+        \"  -rootcertificates=<file>  \" + tr(\"Set SSL root certificates for payment request (default: -system-)\") + \"\\n\" +\n+        \"  -splash                   \" + tr(\"Show splash screen on startup (default: 1)\");\n \n     ui->helpMessageLabel->setFont(GUIUtil::bitcoinAddressFont());\n "
      },
      {
        "sha": "8620a87297ae198070abbc8f1b2cd4f072e9f5fb",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7398f4a796522f896ccc65b2e9adb109e9346020/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7398f4a796522f896ccc65b2e9adb109e9346020/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=7398f4a796522f896ccc65b2e9adb109e9346020",
        "patch": "@@ -265,11 +265,12 @@ std::string HelpMessageCli(bool mainProgram)\n     strUsage += \"  -rpcconnect=<ip>       \" + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\") + \"\\n\";\n     strUsage += \"  -rpcport=<port>        \" + _(\"Connect to JSON-RPC on <port> (default: 8332 or testnet: 18332)\") + \"\\n\";\n     strUsage += \"  -rpcwait               \" + _(\"Wait for RPC server to start\") + \"\\n\";\n-    strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n-    strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n \n     if(mainProgram)\n     {\n+        strUsage += \"  -rpcuser=<user>        \" + _(\"Username for JSON-RPC connections\") + \"\\n\";\n+        strUsage += \"  -rpcpassword=<pw>      \" + _(\"Password for JSON-RPC connections\") + \"\\n\";\n+\n         strUsage += \"\\n\" + _(\"SSL options: (see the Bitcoin Wiki for SSL setup instructions)\") + \"\\n\";\n         strUsage += \"  -rpcssl                \" + _(\"Use OpenSSL (https) for JSON-RPC connections\") + \"\\n\";\n     }"
      }
    ]
  }
]