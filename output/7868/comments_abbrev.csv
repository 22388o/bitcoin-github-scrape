dcousens,2016-04-13T02:59:14Z,"concept ACK, light utACK 825de38\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-209204518,209204518,
jonasschnelli,2016-04-13T06:46:30Z,Concept ACK.\n,https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-209257826,209257826,
instagibbs,2016-04-13T20:09:06Z,"meta-comment: Is there an issue open with all the various things to be done for p2p refactor, for a higher-level view? I'd like to review but my knowledge of p2p part of Core is weak. I think a higher-level view may help me review. \n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-209625121,209625121,
theuni,2016-04-14T17:33:16Z,"@instagibbs good point. I have another RFC PR coming up today, that will be a good place to discuss general scope/goals. I'll begin writing something up.\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-210067911,210067911,
sipa,2016-04-14T18:10:58Z,Concept ACK; utACK apart from one comment\n,https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-210081516,210081516,
laanwj,2016-04-15T06:45:20Z,"utACK, good to see DNS lookup being decoupled from connecting.\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-210308628,210308628,
theuni,2016-04-18T01:51:41Z,"Updated for @sipa's comment.\n\n@instagibbs I didn't manage to get it ready last week as hoped, but a PR that looks similar to https://github.com/theuni/bitcoin/tree/net-refactor12 plus a lengthy explanation is hopefully coming up in the next day or two. That work aims to segregate the p2p functionality from the rest of the code so that it can be replaced in chunks without interfering with other s",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-211152258,211152258,
instagibbs,2016-04-18T12:16:01Z,"concept ACK, lightly tACK\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-211353716,211353716,
theuni,2016-04-20T17:14:56Z,"Addressed @sipa's concern above (I hope). For reference, the following mainnet seeds don't currently resolve their names properly (for me, anyway), so they end up grouped together with sources of [::]:\n\n```\nxf2.org\nbluematt.me\n```\n\nI've confirmed that seed results are added to addrman that way before and after this change. I'll work on fixing that in a follow-up pull-request.\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-212519655,212519655,
sipa,2016-04-21T05:14:16Z,"utACK d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77\n\nMeta question: I am right to expect that there will be follow-ups that split the Lookup functions in resolving ones and non-resolving ones, and make the CNetAddr constructors only depend in the non-resolving ones?\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-212748318,212748318,
theuni,2016-04-21T05:17:10Z,"@sipa yep, exactly.\n",https://github.com/bitcoin/bitcoin/pull/7868#issuecomment-212749075,212749075,
dcousens,2016-04-13T02:58:23Z,nit: inconsistent `{` indentation\n,https://github.com/bitcoin/bitcoin/pull/7868#discussion_r59486765,59486765,src/netbase.cpp
sipa,2016-04-14T17:40:46Z,"If the Lookup fails, shouldn't the InitError below trigger as well?\n",https://github.com/bitcoin/bitcoin/pull/7868#discussion_r59759375,59759375,src/init.cpp
theuni,2016-04-15T23:55:23Z,"Yes, good catch.\n",https://github.com/bitcoin/bitcoin/pull/7868#discussion_r59956174,59956174,src/init.cpp
sipa,2016-04-20T09:53:28Z,"That's not actually correct. The ""source IP"" the addresses get assigned to should be stable over multiple runs, as the DNS seed is seen as a potential attacker who is only allowed to modify a certain subset of entries. If the IP changes over time, that protection disappears.\n",https://github.com/bitcoin/bitcoin/pull/7868#discussion_r60380159,60380159,src/net.cpp
theuni,2016-04-20T15:57:21Z,"@sipa To clarify, I meant that each dns seed should have a corresponding stable ""source"" dummy ip. Something like this: https://github.com/theuni/bitcoin/commit/792b0f5da618ea51ecd7b21db633faa6743c1e68\n\nI see now that the second resolve is happening on seed.name rather than seed.host, so the resolve isn't actually arbitrary. That was just poor reading on my account.\n\nI'll add back the second r",https://github.com/bitcoin/bitcoin/pull/7868#discussion_r60436559,60436559,src/net.cpp
