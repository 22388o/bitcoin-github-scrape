[
  {
    "sha": "e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOWZjNzFlNWZhNmYwZDc5OTFiYWM2MTZiOWZlZDZhODBlNzdhOGQ3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-13T00:23:16Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-17T21:37:36Z"
      },
      "message": "net: require lookup functions to specify all arguments\n\nTo make it clear where DNS resolves are happening",
      "tree": {
        "sha": "e8685157e827889383718cb48b3dbc1db05f6bd7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e8685157e827889383718cb48b3dbc1db05f6bd7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73fc922ed64333d45f18d8a448f30cfa2ae0281e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73fc922ed64333d45f18d8a448f30cfa2ae0281e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73fc922ed64333d45f18d8a448f30cfa2ae0281e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "6ab6ef819d077caaf9580e34d3ac3de1a2607828",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
        "patch": "@@ -1443,7 +1443,7 @@ void ThreadDNSAddressSeed()\n         } else {\n             vector<CNetAddr> vIPs;\n             vector<CAddress> vAdd;\n-            if (LookupHost(seed.host.c_str(), vIPs))\n+            if (LookupHost(seed.host.c_str(), vIPs, 0, true))\n             {\n                 BOOST_FOREACH(const CNetAddr& ip, vIPs)\n                 {\n@@ -1884,7 +1884,7 @@ void static Discover(boost::thread_group& threadGroup)\n     if (gethostname(pszHostName, sizeof(pszHostName)) != SOCKET_ERROR)\n     {\n         vector<CNetAddr> vaddr;\n-        if (LookupHost(pszHostName, vaddr))\n+        if (LookupHost(pszHostName, vaddr, 0, true))\n         {\n             BOOST_FOREACH (const CNetAddr &addr, vaddr)\n             {"
      },
      {
        "sha": "4529f9822914c91a0e16bec22abe3228d4605849",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
        "patch": "@@ -206,9 +206,9 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut);\n bool IsProxy(const CNetAddr &addr);\n bool SetNameProxy(const proxyType &addrProxy);\n bool HaveNameProxy();\n-bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions = 0, bool fAllowLookup = true);\n-bool Lookup(const char *pszName, CService& addr, int portDefault = 0, bool fAllowLookup = true);\n-bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault = 0, bool fAllowLookup = true, unsigned int nMaxSolutions = 0);\n+bool LookupHost(const char *pszName, std::vector<CNetAddr>& vIP, unsigned int nMaxSolutions, bool fAllowLookup);\n+bool Lookup(const char *pszName, CService& addr, int portDefault, bool fAllowLookup);\n+bool Lookup(const char *pszName, std::vector<CService>& vAddr, int portDefault, bool fAllowLookup, unsigned int nMaxSolutions);\n bool LookupNumeric(const char *pszName, CService& addr, int portDefault = 0);\n bool ConnectSocket(const CService &addr, SOCKET& hSocketRet, int nTimeout, bool *outProxyConnectionFailed = 0);\n bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest, int portDefault, int nTimeout, bool *outProxyConnectionFailed = 0);"
      }
    ]
  },
  {
    "sha": "a98cd1fc86eac1e5e5a09830028233dbce1dae70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOThjZDFmYzg2ZWFjMWU1ZTVhMDk4MzAwMjgyMzNkYmNlMWRhZTcw",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-13T00:38:06Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-20T17:07:19Z"
      },
      "message": "net: manually resolve dns seed sources\n\nNote: Some seeds aren't actually returning an IP for their name entries, so\nthey're being added to addrman with a source of [::].\n\nThis commit shouldn't change that behavior, for better or worse.",
      "tree": {
        "sha": "42c2b46fc37e2d960b1a218a282890ac2b8cbcc8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42c2b46fc37e2d960b1a218a282890ac2b8cbcc8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a98cd1fc86eac1e5e5a09830028233dbce1dae70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a98cd1fc86eac1e5e5a09830028233dbce1dae70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a98cd1fc86eac1e5e5a09830028233dbce1dae70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a98cd1fc86eac1e5e5a09830028233dbce1dae70/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e9fc71e5fa6f0d7991bac616b9fed6a80e77a8d7"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 9,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7dec8fc1cf5993717fd89c3be24c0fd81a3bbbbe",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a98cd1fc86eac1e5e5a09830028233dbce1dae70/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a98cd1fc86eac1e5e5a09830028233dbce1dae70/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a98cd1fc86eac1e5e5a09830028233dbce1dae70",
        "patch": "@@ -1454,7 +1454,15 @@ void ThreadDNSAddressSeed()\n                     found++;\n                 }\n             }\n-            addrman.Add(vAdd, CNetAddr(seed.name, true));\n+            // TODO: The seed name resolve may fail, yielding an IP of [::], which results in\n+            // addrman assigning the same source to results from different seeds.\n+            // This should switch to a hard-coded stable dummy IP for each seed name, so that the\n+            // resolve is not required at all.\n+            if (!vIPs.empty()) {\n+                CService seedSource;\n+                Lookup(seed.name.c_str(), seedSource, 0, true);\n+                addrman.Add(vAdd, seedSource);\n+            }\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "367569926a9b15c05ba8d56c554880b8f5614f71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjc1Njk5MjZhOWIxNWMwNWJhOGQ1NmM1NTQ4ODBiOGY1NjE0Zjcx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-13T00:41:39Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-20T17:08:19Z"
      },
      "message": "net: resolve outside of storage structures\n\nRather than allowing CNetAddr/CService/CSubNet to launch DNS queries, require\nthat addresses are already resolved.\n\nThis greatly simplifies async resolve logic, and makes it harder to\naccidentally leak DNS queries.",
      "tree": {
        "sha": "b4f20ad827bb2becb7df3fe0258c9f9b312c9a0e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4f20ad827bb2becb7df3fe0258c9f9b312c9a0e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/367569926a9b15c05ba8d56c554880b8f5614f71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367569926a9b15c05ba8d56c554880b8f5614f71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/367569926a9b15c05ba8d56c554880b8f5614f71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367569926a9b15c05ba8d56c554880b8f5614f71/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a98cd1fc86eac1e5e5a09830028233dbce1dae70",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a98cd1fc86eac1e5e5a09830028233dbce1dae70",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a98cd1fc86eac1e5e5a09830028233dbce1dae70"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 10,
      "deletions": 7
    },
    "files": [
      {
        "sha": "80527b782e986934c613e9af31a62c5b438666ce",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/367569926a9b15c05ba8d56c554880b8f5614f71/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/367569926a9b15c05ba8d56c554880b8f5614f71/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=367569926a9b15c05ba8d56c554880b8f5614f71",
        "patch": "@@ -1156,10 +1156,11 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n \n     if (mapArgs.count(\"-externalip\")) {\n         BOOST_FOREACH(const std::string& strAddr, mapMultiArgs[\"-externalip\"]) {\n-            CService addrLocal(strAddr, GetListenPort(), fNameLookup);\n-            if (!addrLocal.IsValid())\n+            CService addrLocal;\n+            if (Lookup(strAddr.c_str(), addrLocal, GetListenPort(), fNameLookup) && addrLocal.IsValid())\n+                AddLocal(addrLocal, LOCAL_MANUAL);\n+            else\n                 return InitError(ResolveErrMsg(\"externalip\", strAddr));\n-            AddLocal(CService(strAddr, GetListenPort(), fNameLookup), LOCAL_MANUAL);\n         }\n     }\n "
      },
      {
        "sha": "1855d0a2e833b241785dcc33d12adae8b2d30af0",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 4,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/367569926a9b15c05ba8d56c554880b8f5614f71/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/367569926a9b15c05ba8d56c554880b8f5614f71/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=367569926a9b15c05ba8d56c554880b8f5614f71",
        "patch": "@@ -614,10 +614,12 @@ bool ConnectSocketByName(CService &addr, SOCKET& hSocketRet, const char *pszDest\n     proxyType nameProxy;\n     GetNameProxy(nameProxy);\n \n-    CService addrResolved(CNetAddr(strDest, fNameLookup && !HaveNameProxy()), port);\n-    if (addrResolved.IsValid()) {\n-        addr = addrResolved;\n-        return ConnectSocket(addr, hSocketRet, nTimeout);\n+    CService addrResolved;\n+    if (Lookup(strDest.c_str(), addrResolved, port, fNameLookup && !HaveNameProxy())) {\n+        if (addrResolved.IsValid()) {\n+            addr = addrResolved;\n+            return ConnectSocket(addr, hSocketRet, nTimeout);\n+        }\n     }\n \n     addr = CService(\"0.0.0.0:0\");"
      }
    ]
  },
  {
    "sha": "d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzlmNWI0MjVkOGZjMWJmM2I3ZjMzZDM1NjI1ZmZkOGQ3YTNjZDc3",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-13T00:48:29Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-20T17:08:19Z"
      },
      "message": "net: disable resolving from storage structures\n\nCNetAddr/CService/CSubnet can no longer resolve DNS.",
      "tree": {
        "sha": "915b34e43de28e551052fd08f66fa76ee5912171",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/915b34e43de28e551052fd08f66fa76ee5912171"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "367569926a9b15c05ba8d56c554880b8f5614f71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/367569926a9b15c05ba8d56c554880b8f5614f71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/367569926a9b15c05ba8d56c554880b8f5614f71"
      }
    ],
    "stats": {
      "total": 44,
      "additions": 22,
      "deletions": 22
    },
    "files": [
      {
        "sha": "b44a8b16e20cc377d7290c0be2b8954ff2d14304",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
        "patch": "@@ -688,19 +688,19 @@ CNetAddr::CNetAddr(const struct in6_addr& ipv6Addr, const uint32_t scope)\n     scopeId = scope;\n }\n \n-CNetAddr::CNetAddr(const char *pszIp, bool fAllowLookup)\n+CNetAddr::CNetAddr(const char *pszIp)\n {\n     Init();\n     std::vector<CNetAddr> vIP;\n-    if (LookupHost(pszIp, vIP, 1, fAllowLookup))\n+    if (LookupHost(pszIp, vIP, 1, false))\n         *this = vIP[0];\n }\n \n-CNetAddr::CNetAddr(const std::string &strIp, bool fAllowLookup)\n+CNetAddr::CNetAddr(const std::string &strIp)\n {\n     Init();\n     std::vector<CNetAddr> vIP;\n-    if (LookupHost(strIp.c_str(), vIP, 1, fAllowLookup))\n+    if (LookupHost(strIp.c_str(), vIP, 1, false))\n         *this = vIP[0];\n }\n \n@@ -1123,35 +1123,35 @@ bool CService::SetSockAddr(const struct sockaddr *paddr)\n     }\n }\n \n-CService::CService(const char *pszIpPort, bool fAllowLookup)\n+CService::CService(const char *pszIpPort)\n {\n     Init();\n     CService ip;\n-    if (Lookup(pszIpPort, ip, 0, fAllowLookup))\n+    if (Lookup(pszIpPort, ip, 0, false))\n         *this = ip;\n }\n \n-CService::CService(const char *pszIpPort, int portDefault, bool fAllowLookup)\n+CService::CService(const char *pszIpPort, int portDefault)\n {\n     Init();\n     CService ip;\n-    if (Lookup(pszIpPort, ip, portDefault, fAllowLookup))\n+    if (Lookup(pszIpPort, ip, portDefault, false))\n         *this = ip;\n }\n \n-CService::CService(const std::string &strIpPort, bool fAllowLookup)\n+CService::CService(const std::string &strIpPort)\n {\n     Init();\n     CService ip;\n-    if (Lookup(strIpPort.c_str(), ip, 0, fAllowLookup))\n+    if (Lookup(strIpPort.c_str(), ip, 0, false))\n         *this = ip;\n }\n \n-CService::CService(const std::string &strIpPort, int portDefault, bool fAllowLookup)\n+CService::CService(const std::string &strIpPort, int portDefault)\n {\n     Init();\n     CService ip;\n-    if (Lookup(strIpPort.c_str(), ip, portDefault, fAllowLookup))\n+    if (Lookup(strIpPort.c_str(), ip, portDefault, false))\n         *this = ip;\n }\n \n@@ -1245,7 +1245,7 @@ CSubNet::CSubNet():\n     memset(netmask, 0, sizeof(netmask));\n }\n \n-CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n+CSubNet::CSubNet(const std::string &strSubnet)\n {\n     size_t slash = strSubnet.find_last_of('/');\n     std::vector<CNetAddr> vIP;\n@@ -1255,7 +1255,7 @@ CSubNet::CSubNet(const std::string &strSubnet, bool fAllowLookup)\n     memset(netmask, 255, sizeof(netmask));\n \n     std::string strAddress = strSubnet.substr(0, slash);\n-    if (LookupHost(strAddress.c_str(), vIP, 1, fAllowLookup))\n+    if (LookupHost(strAddress.c_str(), vIP, 1, false))\n     {\n         network = vIP[0];\n         if (slash != strSubnet.npos)"
      },
      {
        "sha": "65187a17cfd54f951a7e8e959da4323136c9891a",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
        "patch": "@@ -49,8 +49,8 @@ class CNetAddr\n     public:\n         CNetAddr();\n         CNetAddr(const struct in_addr& ipv4Addr);\n-        explicit CNetAddr(const char *pszIp, bool fAllowLookup = false);\n-        explicit CNetAddr(const std::string &strIp, bool fAllowLookup = false);\n+        explicit CNetAddr(const char *pszIp);\n+        explicit CNetAddr(const std::string &strIp);\n         void Init();\n         void SetIP(const CNetAddr& ip);\n \n@@ -119,7 +119,7 @@ class CSubNet\n \n     public:\n         CSubNet();\n-        explicit CSubNet(const std::string &strSubnet, bool fAllowLookup = false);\n+        explicit CSubNet(const std::string &strSubnet);\n \n         //constructor for single ip subnet (<ipv4>/32 or <ipv6>/128)\n         explicit CSubNet(const CNetAddr &addr);\n@@ -154,10 +154,10 @@ class CService : public CNetAddr\n         CService(const CNetAddr& ip, unsigned short port);\n         CService(const struct in_addr& ipv4Addr, unsigned short port);\n         CService(const struct sockaddr_in& addr);\n-        explicit CService(const char *pszIpPort, int portDefault, bool fAllowLookup = false);\n-        explicit CService(const char *pszIpPort, bool fAllowLookup = false);\n-        explicit CService(const std::string& strIpPort, int portDefault, bool fAllowLookup = false);\n-        explicit CService(const std::string& strIpPort, bool fAllowLookup = false);\n+        explicit CService(const char *pszIpPort, int portDefault);\n+        explicit CService(const char *pszIpPort);\n+        explicit CService(const std::string& strIpPort, int portDefault);\n+        explicit CService(const std::string& strIpPort);\n         void Init();\n         void SetPort(unsigned short portIn);\n         unsigned short GetPort() const;"
      },
      {
        "sha": "47d834c7b4eff0203b577a64eb2de84f4b371d99",
        "filename": "src/torcontrol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/torcontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77/src/torcontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/torcontrol.cpp?ref=d39f5b425d8fc1bf3b7f33d35625ffd8d7a3cd77",
        "patch": "@@ -438,7 +438,7 @@ void TorController::add_onion_cb(TorControlConnection& conn, const TorControlRep\n                 private_key = i->second;\n         }\n \n-        service = CService(service_id+\".onion\", GetListenPort(), false);\n+        service = CService(service_id+\".onion\", GetListenPort());\n         LogPrintf(\"tor: Got service ID %s, advertising service %s\\n\", service_id, service.ToString());\n         if (WriteBinaryFile(GetPrivateKeyFile(), private_key)) {\n             LogPrint(\"tor\", \"tor: Cached service private key to %s\\n\", GetPrivateKeyFile());"
      }
    ]
  }
]