[
  {
    "sha": "fad327ca65ef30cee2027f1e62d597f0b1c1b641",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQzMjdjYTY1ZWYzMGNlZTIwMjdmMWU2MmQ1OTdmMGIxYzFiNjQx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-07T18:13:57Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-07T18:07:02Z"
      },
      "message": "fuzz: net permission flags in net processing",
      "tree": {
        "sha": "b4a9fd2dbe33bcbadfc3dc0cca009f8a6ebf3da5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4a9fd2dbe33bcbadfc3dc0cca009f8a6ebf3da5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad327ca65ef30cee2027f1e62d597f0b1c1b641",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiayAv+JGoE+LrJCgUA/yUobIIh2m9I0kKw+43dvLAJOdiwpZmhAV/24v6k9zw8\niWc0bciCJmX374kcrHqm1pyCqZTEWQafKG7SrH/k7hbg2A3Qj/iKofTFWUMFRf1z\ndOH1HSt5AEWVsB6t4LDnpsD4DYF+8GQ6I8JGn12JI91r6s3/FS2gFkxN5oWdw2pT\nARJZYzhDGwXHQqUH0QxkvmsTlRM+daAI3uXkPN0y5lcq76mxAG/qYOys6th4rXL7\nAszbaE3s4AYNy7dvIFa7hvgrS9zs2ZBJ3UPKAlg7PzwMfHGBDFPSJyW5Tl4qjZxS\nxdcKjGmRMgkZ8caqMBeee/CiaESCEtX6UZyKyQILAtfPzQuJw+gbvUUCjlIi5zjy\nb2ff4BR2i96JgGwthdFhrUoCaLpjq0TfstV52QNzs3rVzvACeT0diT0nde3jNKJe\nhOCA2UpwDEVQG26nk0PEUcfswsjiVg+nLwUF3M8q0v0U68KdYVzSpf5jZ/vYBeAL\n94NK5Slv\n=u+f9\n-----END PGP SIGNATURE-----",
        "payload": "tree b4a9fd2dbe33bcbadfc3dc0cca009f8a6ebf3da5\nparent 3a6acd1772100d71de45355381d0d6ccf1320748\nauthor MarcoFalke <falke.marco@gmail.com> 1610043237 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1610042822 +0100\n\nfuzz: net permission flags in net processing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad327ca65ef30cee2027f1e62d597f0b1c1b641",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad327ca65ef30cee2027f1e62d597f0b1c1b641",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad327ca65ef30cee2027f1e62d597f0b1c1b641/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a6acd1772100d71de45355381d0d6ccf1320748",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a6acd1772100d71de45355381d0d6ccf1320748",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a6acd1772100d71de45355381d0d6ccf1320748"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 21,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8ae184e473f02a1a18f590842f62348bd80f04bb",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fad327ca65ef30cee2027f1e62d597f0b1c1b641",
        "patch": "@@ -402,7 +402,7 @@ class CNode\n     std::unique_ptr<TransportDeserializer> m_deserializer;\n     std::unique_ptr<TransportSerializer> m_serializer;\n \n-    // socket\n+    NetPermissionFlags m_permissionFlags{PF_NONE};\n     std::atomic<ServiceFlags> nServices{NODE_NONE};\n     SOCKET hSocket GUARDED_BY(cs_hSocket);\n     /** Total size of all vSendMsg entries */\n@@ -636,7 +636,6 @@ class CNode\n     //! service advertisements.\n     const ServiceFlags nLocalServices;\n \n-    NetPermissionFlags m_permissionFlags{ PF_NONE };\n     std::list<CNetMessage> vRecvMsg;  // Used only by SocketHandler thread\n \n     mutable RecursiveMutex cs_addrName;"
      },
      {
        "sha": "58637662c5690ae5b2797ded9e7b82dacb86474c",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=fad327ca65ef30cee2027f1e62d597f0b1c1b641",
        "patch": "@@ -65,9 +65,8 @@ void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO\n     const bool jump_out_of_ibd{fuzzed_data_provider.ConsumeBool()};\n     if (jump_out_of_ibd) chainstate.JumpOutOfIbd();\n     CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider).release();\n+    FillNode(fuzzed_data_provider, p2p_node);\n     p2p_node.fSuccessfullyConnected = true;\n-    p2p_node.nVersion = PROTOCOL_VERSION;\n-    p2p_node.SetCommonVersion(PROTOCOL_VERSION);\n     connman.AddTestNode(p2p_node);\n     g_setup->m_node.peerman->InitializeNode(&p2p_node);\n "
      },
      {
        "sha": "db52da2f7e3945cde8a7f9bc8c6891099a1461a5",
        "filename": "src/test/fuzz/process_messages.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/process_messages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/process_messages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_messages.cpp?ref=fad327ca65ef30cee2027f1e62d597f0b1c1b641",
        "patch": "@@ -49,11 +49,10 @@ FUZZ_TARGET_INIT(process_messages, initialize_process_messages)\n     for (int i = 0; i < num_peers_to_add; ++i) {\n         peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n         CNode& p2p_node = *peers.back();\n+        FillNode(fuzzed_data_provider, p2p_node);\n \n         p2p_node.fSuccessfullyConnected = true;\n         p2p_node.fPauseSend = false;\n-        p2p_node.nVersion = PROTOCOL_VERSION;\n-        p2p_node.SetCommonVersion(PROTOCOL_VERSION);\n         g_setup->m_node.peerman->InitializeNode(&p2p_node);\n \n         connman.AddTestNode(p2p_node);"
      },
      {
        "sha": "4e8e5018950046349d710a98f0dbee9ac29aef78",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 18,
        "deletions": 1,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad327ca65ef30cee2027f1e62d597f0b1c1b641/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fad327ca65ef30cee2027f1e62d597f0b1c1b641",
        "patch": "@@ -296,7 +296,7 @@ inline CAddress ConsumeAddress(FuzzedDataProvider& fuzzed_data_provider) noexcep\n }\n \n template <bool ReturnUniquePtr = false>\n-auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = nullopt) noexcept\n+auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<NodeId>& node_id_in = std::nullopt) noexcept\n {\n     const NodeId node_id = node_id_in.value_or(fuzzed_data_provider.ConsumeIntegral<NodeId>());\n     const ServiceFlags local_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n@@ -316,6 +316,23 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\n }\n inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }\n \n+inline void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in = std::nullopt) noexcept\n+{\n+    const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n+    const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\n+    const int32_t version = version_in.value_or(fuzzed_data_provider.ConsumeIntegral<int32_t>());\n+    const bool filter_txs = fuzzed_data_provider.ConsumeBool();\n+\n+    node.nServices = remote_services;\n+    node.m_permissionFlags = permission_flags;\n+    node.nVersion = version;\n+    node.SetCommonVersion(version);\n+    if (node.m_tx_relay != nullptr) {\n+        LOCK(node.m_tx_relay->cs_filter);\n+        node.m_tx_relay->fRelayTxes = filter_txs;\n+    }\n+}\n+\n inline void InitializeFuzzingContext(const std::string& chain_name = CBaseChainParams::REGTEST)\n {\n     static const BasicTestingSetup basic_testing_setup{chain_name, {\"-nodebuglogfile\"}};"
      }
    ]
  }
]