[
  {
    "sha": "fc44cb108b8d2d701fd453657d0837b1e539bcb7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYzQ0Y2IxMDhiOGQyZDcwMWZkNDUzNjU3ZDA4MzdiMWU1MzliY2I3",
    "commit": {
      "author": {
        "name": "Conor Scott",
        "email": "conor.r.scott.88@gmail.com",
        "date": "2018-02-18T15:51:17Z"
      },
      "committer": {
        "name": "Conor Scott",
        "email": "conor.r.scott.88@gmail.com",
        "date": "2018-02-26T00:02:44Z"
      },
      "message": "[RPC] Add list of child transactions to verbose output of getrawmempool",
      "tree": {
        "sha": "83b5ea86e3b99bf1462cc951d1790b7469742004",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/83b5ea86e3b99bf1462cc951d1790b7469742004"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fc44cb108b8d2d701fd453657d0837b1e539bcb7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc44cb108b8d2d701fd453657d0837b1e539bcb7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fc44cb108b8d2d701fd453657d0837b1e539bcb7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc44cb108b8d2d701fd453657d0837b1e539bcb7/comments",
    "author": {
      "login": "conscott",
      "id": 14220652,
      "node_id": "MDQ6VXNlcjE0MjIwNjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conscott",
      "html_url": "https://github.com/conscott",
      "followers_url": "https://api.github.com/users/conscott/followers",
      "following_url": "https://api.github.com/users/conscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/conscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
      "organizations_url": "https://api.github.com/users/conscott/orgs",
      "repos_url": "https://api.github.com/users/conscott/repos",
      "events_url": "https://api.github.com/users/conscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "conscott",
      "id": 14220652,
      "node_id": "MDQ6VXNlcjE0MjIwNjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conscott",
      "html_url": "https://github.com/conscott",
      "followers_url": "https://api.github.com/users/conscott/followers",
      "following_url": "https://api.github.com/users/conscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/conscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
      "organizations_url": "https://api.github.com/users/conscott/orgs",
      "repos_url": "https://api.github.com/users/conscott/repos",
      "events_url": "https://api.github.com/users/conscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4528f74fc202aa8ff152ff24f8319338fdaf3fd6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4528f74fc202aa8ff152ff24f8319338fdaf3fd6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4528f74fc202aa8ff152ff24f8319338fdaf3fd6"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6db70890c9a70649ed82a1a3de859f74ac17b540",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fc44cb108b8d2d701fd453657d0837b1e539bcb7/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fc44cb108b8d2d701fd453657d0837b1e539bcb7/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=fc44cb108b8d2d701fd453657d0837b1e539bcb7",
        "patch": "@@ -372,6 +372,9 @@ std::string EntryDescriptionString()\n            \"    \\\"wtxid\\\" : hash,         (string) hash of serialized transaction, including witness data\\n\"\n            \"    \\\"depends\\\" : [           (array) unconfirmed transactions used as inputs for this transaction\\n\"\n            \"        \\\"transactionid\\\",    (string) parent transaction id\\n\"\n+           \"       ... ]\\n\"\n+           \"    \\\"spentby\\\" : [           (array) unconfirmed transactions spending outputs from this transaction\\n\"\n+           \"        \\\"transactionid\\\",    (string) child transaction id\\n\"\n            \"       ... ]\\n\";\n }\n \n@@ -406,6 +409,15 @@ void entryToJSON(UniValue &info, const CTxMemPoolEntry &e)\n     }\n \n     info.pushKV(\"depends\", depends);\n+\n+    UniValue spent(UniValue::VARR);\n+    const CTxMemPool::txiter &it = mempool.mapTx.find(tx.GetHash());\n+    const CTxMemPool::setEntries &setChildren = mempool.GetMemPoolChildren(it);\n+    for (const CTxMemPool::txiter &childiter : setChildren) {\n+        spent.push_back(childiter->GetTx().GetHash().ToString());\n+    }\n+\n+    info.pushKV(\"spentby\", spent);\n }\n \n UniValue mempoolToJSON(bool fVerbose)"
      }
    ]
  },
  {
    "sha": "1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZGZiNGU3ZDc1M2U5MjgyYzg5ZDU1YmRlMzU4YjhhZDk2ZDNiZmMy",
    "commit": {
      "author": {
        "name": "Conor Scott",
        "email": "conor.r.scott.88@gmail.com",
        "date": "2018-02-18T15:54:20Z"
      },
      "committer": {
        "name": "Conor Scott",
        "email": "conor.r.scott.88@gmail.com",
        "date": "2018-02-26T00:02:54Z"
      },
      "message": "[Tests] Check output of parent/child tx list from getrawmempool, getmempooldescendants, getmempoolancestors, and REST interface",
      "tree": {
        "sha": "e3e98fbf6dc7c4c55bbe1d2881b8519f047e1528",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3e98fbf6dc7c4c55bbe1d2881b8519f047e1528"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2/comments",
    "author": {
      "login": "conscott",
      "id": 14220652,
      "node_id": "MDQ6VXNlcjE0MjIwNjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conscott",
      "html_url": "https://github.com/conscott",
      "followers_url": "https://api.github.com/users/conscott/followers",
      "following_url": "https://api.github.com/users/conscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/conscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
      "organizations_url": "https://api.github.com/users/conscott/orgs",
      "repos_url": "https://api.github.com/users/conscott/repos",
      "events_url": "https://api.github.com/users/conscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "conscott",
      "id": 14220652,
      "node_id": "MDQ6VXNlcjE0MjIwNjUy",
      "avatar_url": "https://avatars.githubusercontent.com/u/14220652?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/conscott",
      "html_url": "https://github.com/conscott",
      "followers_url": "https://api.github.com/users/conscott/followers",
      "following_url": "https://api.github.com/users/conscott/following{/other_user}",
      "gists_url": "https://api.github.com/users/conscott/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/conscott/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/conscott/subscriptions",
      "organizations_url": "https://api.github.com/users/conscott/orgs",
      "repos_url": "https://api.github.com/users/conscott/repos",
      "events_url": "https://api.github.com/users/conscott/events{/privacy}",
      "received_events_url": "https://api.github.com/users/conscott/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fc44cb108b8d2d701fd453657d0837b1e539bcb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fc44cb108b8d2d701fd453657d0837b1e539bcb7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fc44cb108b8d2d701fd453657d0837b1e539bcb7"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 46,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9c94175cfdad9fd10737db3a0430346ee53a045b",
        "filename": "test/functional/interface_rest.py",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2/test/functional/interface_rest.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2/test/functional/interface_rest.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_rest.py?ref=1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
        "patch": "@@ -295,8 +295,10 @@ def run_test(self):\n         # check that there are our submitted transactions in the TX memory pool\n         json_string = http_get_call(url.hostname, url.port, '/rest/mempool/contents'+self.FORMAT_SEPARATOR+'json')\n         json_obj = json.loads(json_string)\n-        for tx in txs:\n+        for i, tx in enumerate(txs):\n             assert_equal(tx in json_obj, True)\n+            assert_equal(json_obj[tx]['spentby'], txs[i+1:i+2])\n+            assert_equal(json_obj[tx]['depends'], txs[i-1:i])\n \n         # now mine the transactions\n         newblockhash = self.nodes[1].generate(1)"
      },
      {
        "sha": "8880db80021012ebad9440c46720d02857ef1b8a",
        "filename": "test/functional/mempool_packages.py",
        "status": "modified",
        "additions": 43,
        "deletions": 3,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2/test/functional/mempool_packages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2/test/functional/mempool_packages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_packages.py?ref=1dfb4e7d753e9282c89d55bde358b8ad96d3bfc2",
        "patch": "@@ -47,14 +47,18 @@ def run_test(self):\n             value = sent_value\n             chain.append(txid)\n \n-        # Check mempool has MAX_ANCESTORS transactions in it, and descendant\n+        # Check mempool has MAX_ANCESTORS transactions in it, and descendant and ancestor\n         # count and fees should look correct\n         mempool = self.nodes[0].getrawmempool(True)\n         assert_equal(len(mempool), MAX_ANCESTORS)\n         descendant_count = 1\n         descendant_fees = 0\n         descendant_size = 0\n \n+        ancestor_size = sum([mempool[tx]['size'] for tx in mempool])\n+        ancestor_count = MAX_ANCESTORS\n+        ancestor_fees = sum([mempool[tx]['fee'] for tx in mempool])\n+\n         descendants = []\n         ancestors = list(chain)\n         for x in reversed(chain):\n@@ -71,14 +75,43 @@ def run_test(self):\n             assert_equal(mempool[x]['descendantsize'], descendant_size)\n             descendant_count += 1\n \n+            # Check that ancestor calculations are correct\n+            assert_equal(mempool[x]['ancestorcount'], ancestor_count)\n+            assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN)\n+            assert_equal(mempool[x]['ancestorsize'], ancestor_size)\n+            ancestor_size -= mempool[x]['size']\n+            ancestor_fees -= mempool[x]['fee']\n+            ancestor_count -= 1\n+\n+            # Check that parent/child list is correct\n+            assert_equal(mempool[x]['spentby'], descendants[-1:])\n+            assert_equal(mempool[x]['depends'], ancestors[-2:-1])\n+\n             # Check that getmempooldescendants is correct\n             assert_equal(sorted(descendants), sorted(self.nodes[0].getmempooldescendants(x)))\n+\n+            # Check getmempooldescendants verbose output is correct\n+            for descendant, dinfo in self.nodes[0].getmempooldescendants(x, True).items():\n+                assert_equal(dinfo['depends'], [chain[chain.index(descendant)-1]])\n+                if dinfo['descendantcount'] > 1:\n+                    assert_equal(dinfo['spentby'], [chain[chain.index(descendant)+1]])\n+                else:\n+                    assert_equal(dinfo['spentby'], [])\n             descendants.append(x)\n \n             # Check that getmempoolancestors is correct\n             ancestors.remove(x)\n             assert_equal(sorted(ancestors), sorted(self.nodes[0].getmempoolancestors(x)))\n \n+            # Check that getmempoolancestors verbose output is correct\n+            for ancestor, ainfo in self.nodes[0].getmempoolancestors(x, True).items():\n+                assert_equal(ainfo['spentby'], [chain[chain.index(ancestor)+1]])\n+                if ainfo['ancestorcount'] > 1:\n+                    assert_equal(ainfo['depends'], [chain[chain.index(ancestor)-1]])\n+                else:\n+                    assert_equal(ainfo['depends'], [])\n+\n+\n         # Check that getmempoolancestors/getmempooldescendants correctly handle verbose=true\n         v_ancestors = self.nodes[0].getmempoolancestors(chain[-1], True)\n         assert_equal(len(v_ancestors), len(chain)-1)\n@@ -100,7 +133,7 @@ def run_test(self):\n         for x in chain:\n             ancestor_fees += mempool[x]['fee']\n             assert_equal(mempool[x]['ancestorfees'], ancestor_fees * COIN + 1000)\n-        \n+\n         # Undo the prioritisetransaction for later tests\n         self.nodes[0].prioritisetransaction(txid=chain[0], fee_delta=-1000)\n \n@@ -149,6 +182,7 @@ def run_test(self):\n         vout = utxo[1]['vout']\n \n         transaction_package = []\n+        tx_children = []\n         # First create one parent tx with 10 children\n         (txid, sent_value) = self.chain_transaction(self.nodes[0], txid, vout, value, fee, 10)\n         parent_transaction = txid\n@@ -159,11 +193,17 @@ def run_test(self):\n         for i in range(MAX_DESCENDANTS - 1):\n             utxo = transaction_package.pop(0)\n             (txid, sent_value) = self.chain_transaction(self.nodes[0], utxo['txid'], utxo['vout'], utxo['amount'], fee, 10)\n+            if utxo['txid'] is parent_transaction:\n+                tx_children.append(txid)\n             for j in range(10):\n                 transaction_package.append({'txid': txid, 'vout': j, 'amount': sent_value})\n \n         mempool = self.nodes[0].getrawmempool(True)\n         assert_equal(mempool[parent_transaction]['descendantcount'], MAX_DESCENDANTS)\n+        assert_equal(sorted(mempool[parent_transaction]['spentby']), sorted(tx_children))\n+\n+        for child in tx_children:\n+            assert_equal(mempool[child]['depends'], [parent_transaction])\n \n         # Sending one more chained transaction will fail\n         utxo = transaction_package.pop(0)\n@@ -232,7 +272,7 @@ def run_test(self):\n         signedtx = self.nodes[0].signrawtransactionwithwallet(rawtx)\n         txid = self.nodes[0].sendrawtransaction(signedtx['hex'])\n         sync_mempools(self.nodes)\n-        \n+\n         # Now try to disconnect the tip on each node...\n         self.nodes[1].invalidateblock(self.nodes[1].getbestblockhash())\n         self.nodes[0].invalidateblock(self.nodes[0].getbestblockhash())"
      }
    ]
  }
]