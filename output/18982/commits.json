[
  {
    "sha": "b604c5c8b5892842f13dee89ae31812a28ab25d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNjA0YzVjOGI1ODkyODQyZjEzZGVlODlhZTMxODEyYTI4YWIyNWQx",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-05-15T13:23:55Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-05-15T13:23:55Z"
      },
      "message": "wallet: Minimal fix to restore conflicted transaction notifications\n\nThis fix is a based on the fix by Antoine Riard <ariard@student.42.fr> in\nhttps://github.com/bitcoin/bitcoin/pull/18600.\n\nUnlike that PR, which implements some new behavior, this just restores previous\nwallet notification and status behavior for transactions removed from the\nmempool because they conflict with transactions in a block. The behavior was\naccidentally changed in two `CWallet::BlockConnected` updates:\na31be09bfd77eed497a8e251d31358e16e2f2eb1 and\n7e89994133725125dddbfa8d45484e3b9ed51c6e from\nhttps://github.com/bitcoin/bitcoin/pull/16624, causing issue\nhttps://github.com/bitcoin/bitcoin/issues/18325.\n\nThe change here could be improved and replaced with a more comprehensive\ncleanup, so it includes a detailed comment explaining future considerations.\n\nFixes #18325\n\nCo-authored-by: Antoine Riard <ariard@student.42.fr>",
      "tree": {
        "sha": "2a840e68c508b36c4a4e91a4cdf5ab9fa56db1af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2a840e68c508b36c4a4e91a4cdf5ab9fa56db1af"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b604c5c8b5892842f13dee89ae31812a28ab25d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b604c5c8b5892842f13dee89ae31812a28ab25d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b604c5c8b5892842f13dee89ae31812a28ab25d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b604c5c8b5892842f13dee89ae31812a28ab25d1/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2f6866cca3e0c3c74f94f2df50ed3243158ea32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2f6866cca3e0c3c74f94f2df50ed3243158ea32",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2f6866cca3e0c3c74f94f2df50ed3243158ea32"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 55,
      "deletions": 19
    },
    "files": [
      {
        "sha": "d1b8528d137d59cc936c3906bc4dca78332a05c7",
        "filename": "doc/release-notes-18982.md",
        "status": "added",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/doc/release-notes-18982.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/doc/release-notes-18982.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-18982.md?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -0,0 +1,8 @@\n+Notification changes\n+--------------------\n+\n+`-walletnotify` notifications are now sent for wallet transactions that are\n+removed from the mempool because they conflict with a new block. These\n+notifications were sent previously before the v0.19 release, but had been\n+broken since that release (bug\n+[#18325](https://github.com/bitcoin/bitcoin/issues/18325))."
      },
      {
        "sha": "d1e04b114d40b04af41fc8f0b76b67a712613aea",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -63,9 +63,9 @@ class NotificationsProxy : public CValidationInterface\n     {\n         m_notifications->transactionAddedToMempool(tx);\n     }\n-    void TransactionRemovedFromMempool(const CTransactionRef& tx) override\n+    void TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) override\n     {\n-        m_notifications->transactionRemovedFromMempool(tx);\n+        m_notifications->transactionRemovedFromMempool(tx, reason);\n     }\n     void BlockConnected(const std::shared_ptr<const CBlock>& block, const CBlockIndex* index) override\n     {"
      },
      {
        "sha": "61d7ddb9340f6c1cfb4d649e83276a421ac96dd4",
        "filename": "src/interfaces/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/interfaces/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/interfaces/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.h?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -20,6 +20,7 @@ class CRPCCommand;\n class CScheduler;\n class Coin;\n class uint256;\n+enum class MemPoolRemovalReason;\n enum class RBFTransactionState;\n struct bilingual_str;\n struct CBlockLocator;\n@@ -239,7 +240,7 @@ class Chain\n     public:\n         virtual ~Notifications() {}\n         virtual void transactionAddedToMempool(const CTransactionRef& tx) {}\n-        virtual void transactionRemovedFromMempool(const CTransactionRef& ptx) {}\n+        virtual void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {}\n         virtual void blockConnected(const CBlock& block, int height) {}\n         virtual void blockDisconnected(const CBlock& block, int height) {}\n         virtual void updatedBlockTip() {}"
      },
      {
        "sha": "7d8eb8a32353ff50f5ce279c681f6e0cd565e44d",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -410,7 +410,7 @@ void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n         // for any reason except being included in a block. Clients interested\n         // in transactions included in blocks can subscribe to the BlockConnected\n         // notification.\n-        GetMainSignals().TransactionRemovedFromMempool(it->GetSharedTx());\n+        GetMainSignals().TransactionRemovedFromMempool(it->GetSharedTx(), reason);\n     }\n \n     const uint256 hash = it->GetTx().GetHash();"
      },
      {
        "sha": "22d13704fbf843f2c98583c4b2b98b5530eb5cd0",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -208,9 +208,9 @@ void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n                           ptx->GetWitnessHash().ToString());\n }\n \n-void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n-    auto event = [ptx, this] {\n-        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionRemovedFromMempool(ptx); });\n+void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {\n+    auto event = [ptx, reason, this] {\n+        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionRemovedFromMempool(ptx, reason); });\n     };\n     ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n                           ptx->GetHash().ToString(),"
      },
      {
        "sha": "b35f01c4bb55412ff1dfedc3f22f5977d1c56686",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -21,6 +21,7 @@ class CConnman;\n class CValidationInterface;\n class uint256;\n class CScheduler;\n+enum class MemPoolRemovalReason;\n \n /** Register subscriber */\n void RegisterValidationInterface(CValidationInterface* callbacks);\n@@ -129,7 +130,7 @@ class CValidationInterface {\n      *\n      * Called on a background thread.\n      */\n-    virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx) {}\n+    virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {}\n     /**\n      * Notifies listeners of a block being connected.\n      * Provides a vector of transactions evicted from the mempool as a result.\n@@ -197,7 +198,7 @@ class CMainSignals {\n \n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef &);\n-    void TransactionRemovedFromMempool(const CTransactionRef &);\n+    void TransactionRemovedFromMempool(const CTransactionRef &, MemPoolRemovalReason);\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);"
      },
      {
        "sha": "b95d8ea752a50f9c05785d8c42e99bb36634cd0c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 2,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -21,6 +21,7 @@\n #include <script/descriptor.h>\n #include <script/script.h>\n #include <script/signingprovider.h>\n+#include <txmempool.h>\n #include <util/bip32.h>\n #include <util/check.h>\n #include <util/error.h>\n@@ -1111,12 +1112,42 @@ void CWallet::transactionAddedToMempool(const CTransactionRef& ptx) {\n     }\n }\n \n-void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx) {\n+void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {\n     LOCK(cs_wallet);\n     auto it = mapWallet.find(ptx->GetHash());\n     if (it != mapWallet.end()) {\n         it->second.fInMempool = false;\n     }\n+    // Handle transactions that were removed from the mempool because they\n+    // conflict with transactions in a newly connected block.\n+    if (reason == MemPoolRemovalReason::CONFLICT) {\n+        // Call SyncNotifications, so external -walletnotify notifications will\n+        // be triggered for these transactions. Set Status::UNCONFIRMED instead\n+        // of Status::CONFLICTED for a few reasons:\n+        //\n+        // 1. The transactionRemovedFromMempool callback does not currently\n+        //    provide the conflicting block's hash and height, and for backwards\n+        //    compatibility reasons it may not be not safe to store conflicted\n+        //    wallet transactions with a null block hash. See\n+        //    https://github.com/bitcoin/bitcoin/pull/18600#discussion_r420195993.\n+        // 2. For most of these transactions, the wallet's internal conflict\n+        //    detection in the blockConnected handler will subsequently call\n+        //    MarkConflicted and update them with CONFLICTED status anyway. This\n+        //    applies to any wallet transaction that has inputs spent in the\n+        //    block, or that has ancestors in the wallet with inputs spent by\n+        //    the block.\n+        // 3. Longstanding behavior since the sync implementation in\n+        //    https://github.com/bitcoin/bitcoin/pull/9371 and the prior sync\n+        //    implementation before that was to mark these transactions\n+        //    unconfirmed rather than conflicted.\n+        //\n+        // Nothing described above should be seen as an unchangeable requirement\n+        // when improving this code in the future. The wallet's heuristics for\n+        // distinguishing between conflicted and unconfirmed transactions are\n+        // imperfect, and could be improved in general, see\n+        // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n+        SyncTransaction(ptx, {CWalletTx::Status::UNCONFIRMED, /* block height  */ 0, /* block hash */ {}, /* index */ 0});\n+    }\n }\n \n void CWallet::blockConnected(const CBlock& block, int height)\n@@ -1129,7 +1160,7 @@ void CWallet::blockConnected(const CBlock& block, int height)\n     for (size_t index = 0; index < block.vtx.size(); index++) {\n         CWalletTx::Confirmation confirm(CWalletTx::Status::CONFIRMED, height, block_hash, index);\n         SyncTransaction(block.vtx[index], confirm);\n-        transactionRemovedFromMempool(block.vtx[index]);\n+        transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK);\n     }\n }\n "
      },
      {
        "sha": "7d605beb786ea71c8118ce5d42774f4c237718ef",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -923,7 +923,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n         uint256 last_failed_block;\n     };\n     ScanResult ScanForWalletTransactions(const uint256& start_block, int start_height, Optional<int> max_height, const WalletRescanReserver& reserver, bool fUpdate);\n-    void transactionRemovedFromMempool(const CTransactionRef &ptx) override;\n+    void transactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) override;\n     void ReacceptWalletTransactions() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void ResendWalletTransactions();\n     struct Balance {"
      },
      {
        "sha": "fb0c7ceed4c00db2a225ea7a8af1f2e47c83d940",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b604c5c8b5892842f13dee89ae31812a28ab25d1/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b604c5c8b5892842f13dee89ae31812a28ab25d1/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "patch": "@@ -125,20 +125,15 @@ def run_test(self):\n \n             # Bump tx2 as bump2 and generate a block on node 0 while\n             # disconnected, then reconnect and check for notifications on node 1\n-            # about newly confirmed bump2 and newly conflicted tx2. Currently\n-            # only the bump2 notification is sent. Ideally, notifications would\n-            # be sent both for bump2 and tx2, which was the previous behavior\n-            # before being broken by an accidental change in PR\n-            # https://github.com/bitcoin/bitcoin/pull/16624. The bug is reported\n-            # in issue https://github.com/bitcoin/bitcoin/issues/18325.\n+            # about newly confirmed bump2 and newly conflicted tx2.\n             disconnect_nodes(self.nodes[0], 1)\n             bump2 = self.nodes[0].bumpfee(tx2)[\"txid\"]\n             self.nodes[0].generatetoaddress(1, ADDRESS_BCRT1_UNSPENDABLE)\n             assert_equal(self.nodes[0].gettransaction(bump2)[\"confirmations\"], 1)\n             assert_equal(tx2 in self.nodes[1].getrawmempool(), True)\n             connect_nodes(self.nodes[0], 1)\n             self.sync_blocks()\n-            self.expect_wallet_notify([bump2])\n+            self.expect_wallet_notify([bump2, tx2])\n             assert_equal(self.nodes[1].gettransaction(bump2)[\"confirmations\"], 1)\n \n         # TODO: add test for `-alertnotify` large fork notifications"
      }
    ]
  },
  {
    "sha": "7eaf86d3bfc83f2beb3ef449707d5156853126fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWFmODZkM2JmYzgzZjJiZWIzZWY0NDk3MDdkNTE1Njg1MzEyNmZi",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-05-22T20:30:07Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-05-22T20:30:07Z"
      },
      "message": "trivial: Suggested cleanups to surrounding code\n\nhttps://github.com/bitcoin/bitcoin/pull/18982#pullrequestreview-416974841",
      "tree": {
        "sha": "b600be494bcc436d8bd6a02e77dd0a769367347e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b600be494bcc436d8bd6a02e77dd0a769367347e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7eaf86d3bfc83f2beb3ef449707d5156853126fb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eaf86d3bfc83f2beb3ef449707d5156853126fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7eaf86d3bfc83f2beb3ef449707d5156853126fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7eaf86d3bfc83f2beb3ef449707d5156853126fb/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b604c5c8b5892842f13dee89ae31812a28ab25d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b604c5c8b5892842f13dee89ae31812a28ab25d1"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 24,
      "deletions": 28
    },
    "files": [
      {
        "sha": "3dfbcc581cd2af38a7d0aad631384548b41fa4d1",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=7eaf86d3bfc83f2beb3ef449707d5156853126fb",
        "patch": "@@ -199,22 +199,22 @@ void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockInd\n                           fInitialDownload);\n }\n \n-void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n-    auto event = [ptx, this] {\n-        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionAddedToMempool(ptx); });\n+void CMainSignals::TransactionAddedToMempool(const CTransactionRef& tx) {\n+    auto event = [tx, this] {\n+        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionAddedToMempool(tx); });\n     };\n     ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n-                          ptx->GetHash().ToString(),\n-                          ptx->GetWitnessHash().ToString());\n+                          tx->GetHash().ToString(),\n+                          tx->GetWitnessHash().ToString());\n }\n \n-void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {\n-    auto event = [ptx, reason, this] {\n-        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionRemovedFromMempool(ptx, reason); });\n+void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {\n+    auto event = [tx, reason, this] {\n+        m_internals->Iterate([&](CValidationInterface& callbacks) { callbacks.TransactionRemovedFromMempool(tx, reason); });\n     };\n     ENQUEUE_AND_LOG_EVENT(event, \"%s: txid=%s wtxid=%s\", __func__,\n-                          ptx->GetHash().ToString(),\n-                          ptx->GetWitnessHash().ToString());\n+                          tx->GetHash().ToString(),\n+                          tx->GetWitnessHash().ToString());\n }\n \n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex) {"
      },
      {
        "sha": "e96f2883fc538444640022dd92bbe5046a19cf6b",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=7eaf86d3bfc83f2beb3ef449707d5156853126fb",
        "patch": "@@ -97,7 +97,7 @@ class CValidationInterface {\n      *\n      * Called on a background thread.\n      */\n-    virtual void TransactionAddedToMempool(const CTransactionRef &ptxn) {}\n+    virtual void TransactionAddedToMempool(const CTransactionRef& tx) {}\n     /**\n      * Notifies listeners of a transaction leaving mempool.\n      *\n@@ -130,7 +130,7 @@ class CValidationInterface {\n      *\n      * Called on a background thread.\n      */\n-    virtual void TransactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {}\n+    virtual void TransactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {}\n     /**\n      * Notifies listeners of a block being connected.\n      * Provides a vector of transactions evicted from the mempool as a result.\n@@ -197,8 +197,8 @@ class CMainSignals {\n \n \n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n-    void TransactionAddedToMempool(const CTransactionRef &);\n-    void TransactionRemovedFromMempool(const CTransactionRef &, MemPoolRemovalReason);\n+    void TransactionAddedToMempool(const CTransactionRef&);\n+    void TransactionRemovedFromMempool(const CTransactionRef&, MemPoolRemovalReason);\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);"
      },
      {
        "sha": "862eb9b77f48139adae2c19f616295b7b3c6d110",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 13,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7eaf86d3bfc83f2beb3ef449707d5156853126fb",
        "patch": "@@ -1101,20 +1101,19 @@ void CWallet::SyncTransaction(const CTransactionRef& ptx, CWalletTx::Confirmatio\n     MarkInputsDirty(ptx);\n }\n \n-void CWallet::transactionAddedToMempool(const CTransactionRef& ptx) {\n+void CWallet::transactionAddedToMempool(const CTransactionRef& tx) {\n     LOCK(cs_wallet);\n-    CWalletTx::Confirmation confirm(CWalletTx::Status::UNCONFIRMED, /* block_height */ 0, {}, /* nIndex */ 0);\n-    SyncTransaction(ptx, confirm);\n+    SyncTransaction(tx, {CWalletTx::Status::UNCONFIRMED, /* block height */ 0, /* block hash */ {}, /* index */ 0});\n \n-    auto it = mapWallet.find(ptx->GetHash());\n+    auto it = mapWallet.find(tx->GetHash());\n     if (it != mapWallet.end()) {\n         it->second.fInMempool = true;\n     }\n }\n \n-void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) {\n+void CWallet::transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) {\n     LOCK(cs_wallet);\n-    auto it = mapWallet.find(ptx->GetHash());\n+    auto it = mapWallet.find(tx->GetHash());\n     if (it != mapWallet.end()) {\n         it->second.fInMempool = false;\n     }\n@@ -1146,7 +1145,7 @@ void CWallet::transactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolR\n         // distinguishing between conflicted and unconfirmed transactions are\n         // imperfect, and could be improved in general, see\n         // https://github.com/bitcoin-core/bitcoin-devwiki/wiki/Wallet-Transaction-Conflict-Tracking\n-        SyncTransaction(ptx, {CWalletTx::Status::UNCONFIRMED, /* block height  */ 0, /* block hash */ {}, /* index */ 0});\n+        SyncTransaction(tx, {CWalletTx::Status::UNCONFIRMED, /* block height */ 0, /* block hash */ {}, /* index */ 0});\n     }\n }\n \n@@ -1158,8 +1157,7 @@ void CWallet::blockConnected(const CBlock& block, int height)\n     m_last_block_processed_height = height;\n     m_last_block_processed = block_hash;\n     for (size_t index = 0; index < block.vtx.size(); index++) {\n-        CWalletTx::Confirmation confirm(CWalletTx::Status::CONFIRMED, height, block_hash, index);\n-        SyncTransaction(block.vtx[index], confirm);\n+        SyncTransaction(block.vtx[index], {CWalletTx::Status::CONFIRMED, height, block_hash, (int)index});\n         transactionRemovedFromMempool(block.vtx[index], MemPoolRemovalReason::BLOCK);\n     }\n }\n@@ -1175,8 +1173,7 @@ void CWallet::blockDisconnected(const CBlock& block, int height)\n     m_last_block_processed_height = height - 1;\n     m_last_block_processed = block.hashPrevBlock;\n     for (const CTransactionRef& ptx : block.vtx) {\n-        CWalletTx::Confirmation confirm(CWalletTx::Status::UNCONFIRMED, /* block_height */ 0, {}, /* nIndex */ 0);\n-        SyncTransaction(ptx, confirm);\n+        SyncTransaction(ptx, {CWalletTx::Status::UNCONFIRMED, /* block height */ 0, /* block hash */ {}, /* index */ 0});\n     }\n }\n \n@@ -1716,8 +1713,7 @@ CWallet::ScanResult CWallet::ScanForWalletTransactions(const uint256& start_bloc\n                 break;\n             }\n             for (size_t posInBlock = 0; posInBlock < block.vtx.size(); ++posInBlock) {\n-                CWalletTx::Confirmation confirm(CWalletTx::Status::CONFIRMED, block_height, block_hash, posInBlock);\n-                SyncTransaction(block.vtx[posInBlock], confirm, fUpdate);\n+                SyncTransaction(block.vtx[posInBlock], {CWalletTx::Status::CONFIRMED, block_height, block_hash, (int)posInBlock}, fUpdate);\n             }\n             // scan succeeded, record block as most recent successfully scanned\n             result.last_scanned_block = block_hash;"
      },
      {
        "sha": "350d731b83573d2f9f732d9440b5b6fbfe8ab173",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7eaf86d3bfc83f2beb3ef449707d5156853126fb/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7eaf86d3bfc83f2beb3ef449707d5156853126fb",
        "patch": "@@ -923,7 +923,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n         uint256 last_failed_block;\n     };\n     ScanResult ScanForWalletTransactions(const uint256& start_block, int start_height, Optional<int> max_height, const WalletRescanReserver& reserver, bool fUpdate);\n-    void transactionRemovedFromMempool(const CTransactionRef &ptx, MemPoolRemovalReason reason) override;\n+    void transactionRemovedFromMempool(const CTransactionRef& tx, MemPoolRemovalReason reason) override;\n     void ReacceptWalletTransactions() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     void ResendWalletTransactions();\n     struct Balance {"
      }
    ]
  }
]