[
  {
    "sha": "0a263e47d1b987ab6ca7beda28634a2943b97465",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYTI2M2U0N2QxYjk4N2FiNmNhN2JlZGEyODYzNGEyOTQzYjk3NDY1",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-05-19T08:14:15Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2014-05-20T04:52:02Z"
      },
      "message": "Correct indentation",
      "tree": {
        "sha": "44b261d6a8482c0883b5af9af7c726ae17f5498f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44b261d6a8482c0883b5af9af7c726ae17f5498f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0a263e47d1b987ab6ca7beda28634a2943b97465",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a263e47d1b987ab6ca7beda28634a2943b97465",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0a263e47d1b987ab6ca7beda28634a2943b97465",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0a263e47d1b987ab6ca7beda28634a2943b97465/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a99f9be0ebd4062fd73648d525b2c7961f845580",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a99f9be0ebd4062fd73648d525b2c7961f845580",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a99f9be0ebd4062fd73648d525b2c7961f845580"
      }
    ],
    "stats": {
      "total": 45,
      "additions": 22,
      "deletions": 23
    },
    "files": [
      {
        "sha": "e2932c6243ad38af0d87c094acc5b549bd8668a3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 23,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0a263e47d1b987ab6ca7beda28634a2943b97465/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0a263e47d1b987ab6ca7beda28634a2943b97465/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0a263e47d1b987ab6ca7beda28634a2943b97465",
        "patch": "@@ -3410,31 +3410,30 @@ void static ProcessGetData(CNode* pfrom)\n                         pfrom->hashContinue = 0;\n                     }\n                 }\n-            }\n-            else if (inv.IsKnownType())\n-            {\n-                // Send stream from relay memory\n-                bool pushed = false;\n-                {\n-                    LOCK(cs_mapRelay);\n-                    map<CInv, CDataStream>::iterator mi = mapRelay.find(inv);\n-                    if (mi != mapRelay.end()) {\n-                        pfrom->PushMessage(inv.GetCommand(), (*mi).second);\n-                        pushed = true;\n+            } else {\n+                if (inv.IsKnownType()) {\n+                    // Send stream from relay memory\n+                    bool pushed = false;\n+                    {\n+                        LOCK(cs_mapRelay);\n+                        map<CInv, CDataStream>::iterator mi = mapRelay.find(inv);\n+                        if (mi != mapRelay.end()) {\n+                            pfrom->PushMessage(inv.GetCommand(), (*mi).second);\n+                            pushed = true;\n+                        }\n                     }\n-                }\n-                if (!pushed && inv.type == MSG_TX) {\n-                    CTransaction tx;\n-                    if (mempool.lookup(inv.hash, tx)) {\n-                        CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n-                        ss.reserve(1000);\n-                        ss << tx;\n-                        pfrom->PushMessage(\"tx\", ss);\n-                        pushed = true;\n+                    if (!pushed && inv.type == MSG_TX) {\n+                        CTransaction tx;\n+                        if (mempool.lookup(inv.hash, tx)) {\n+                            CDataStream ss(SER_NETWORK, PROTOCOL_VERSION);\n+                            ss.reserve(1000);\n+                            ss << tx;\n+                            pfrom->PushMessage(\"tx\", ss);\n+                            pushed = true;\n+                        }\n                     }\n-                }\n-                if (!pushed) {\n-                    vNotFound.push_back(inv);\n+                    if (!pushed)\n+                        vNotFound.push_back(inv);\n                 }\n             }\n "
      }
    ]
  }
]