[
  {
    "sha": "46340b3337b7ef9fa68030e9c4b2092a25874837",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NjM0MGIzMzM3YjdlZjlmYTY4MDMwZTljNGIyMDkyYTI1ODc0ODM3",
    "commit": {
      "author": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2018-07-07T15:19:29Z"
      },
      "committer": {
        "name": "Akio Nakamura",
        "email": "nakamura@dgtechnologies.co.jp",
        "date": "2018-07-20T08:57:01Z"
      },
      "message": "[bench] Add benchmark for unserialize prevector\n\nThis patch adds 2 benchmarks to measure for performance of\nthe unserialization of prevector.",
      "tree": {
        "sha": "bc9311ee5759e129f81faa8f70b0cc90d49dbe31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bc9311ee5759e129f81faa8f70b0cc90d49dbe31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/46340b3337b7ef9fa68030e9c4b2092a25874837",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46340b3337b7ef9fa68030e9c4b2092a25874837",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/46340b3337b7ef9fa68030e9c4b2092a25874837",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/46340b3337b7ef9fa68030e9c4b2092a25874837/comments",
    "author": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "AkioNak",
      "id": 24285095,
      "node_id": "MDQ6VXNlcjI0Mjg1MDk1",
      "avatar_url": "https://avatars.githubusercontent.com/u/24285095?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AkioNak",
      "html_url": "https://github.com/AkioNak",
      "followers_url": "https://api.github.com/users/AkioNak/followers",
      "following_url": "https://api.github.com/users/AkioNak/following{/other_user}",
      "gists_url": "https://api.github.com/users/AkioNak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AkioNak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AkioNak/subscriptions",
      "organizations_url": "https://api.github.com/users/AkioNak/orgs",
      "repos_url": "https://api.github.com/users/AkioNak/repos",
      "events_url": "https://api.github.com/users/AkioNak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AkioNak/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4a3e8c5aa6a5d8dda15a76d644b2a9f0f40cdec7"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 28,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7986d0da797bd5cd295b30ccbb355cd43fe036c7",
        "filename": "src/bench/prevector.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 0,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/46340b3337b7ef9fa68030e9c4b2092a25874837/src/bench/prevector.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/46340b3337b7ef9fa68030e9c4b2092a25874837/src/bench/prevector.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/prevector.cpp?ref=46340b3337b7ef9fa68030e9c4b2092a25874837",
        "patch": "@@ -4,12 +4,17 @@\n \n #include <compat.h>\n #include <prevector.h>\n+#include <serialize.h>\n+#include <streams.h>\n \n #include <bench/bench.h>\n \n struct nontrivial_t {\n     int x;\n     nontrivial_t() :x(-1) {}\n+    ADD_SERIALIZE_METHODS\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {READWRITE(x);}\n };\n static_assert(!IS_TRIVIALLY_CONSTRUCTIBLE<nontrivial_t>::value,\n               \"expected nontrivial_t to not be trivially constructible\");\n@@ -62,6 +67,28 @@ static void PrevectorResize(benchmark::State& state)\n     }\n }\n \n+template <typename T>\n+static void PrevectorDeserialize(benchmark::State& state)\n+{\n+    CDataStream s0(SER_NETWORK, 0);\n+    prevector<28, T> t0;\n+    t0.resize(28);\n+    for (auto x = 0; x < 900; ++x) {\n+        s0 << t0;\n+    }\n+    t0.resize(100);\n+    for (auto x = 0; x < 101; ++x) {\n+        s0 << t0;\n+    }\n+    while (state.KeepRunning()) {\n+        prevector<28, T> t1;\n+        for (auto x = 0; x < 1000; ++x) {\n+            s0 >> t1;\n+        }\n+        s0.Init(SER_NETWORK, 0);\n+    }\n+}\n+\n #define PREVECTOR_TEST(name, nontrivops, trivops)                       \\\n     static void Prevector ## name ## Nontrivial(benchmark::State& state) { \\\n         Prevector ## name<nontrivial_t>(state);                         \\\n@@ -75,3 +102,4 @@ static void PrevectorResize(benchmark::State& state)\n PREVECTOR_TEST(Clear, 28300, 88600)\n PREVECTOR_TEST(Destructor, 28800, 88900)\n PREVECTOR_TEST(Resize, 28900, 90300)\n+PREVECTOR_TEST(Deserialize, 6800, 52000)"
      }
    ]
  }
]