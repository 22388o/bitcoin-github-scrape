jrawsthorne,2021-02-14 01:46:03,"> Thanks for adding this. If the API is bumped, take care to notify library users through mentioning the change in 0.22 release note (`doc/release-noted.md`)\n\n@ariard Thanks for the review. Do you have a suggestion about which section the change should be mentioned in?",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-778706812,778706812,
ariard,2021-02-14 22:06:25,"@jrawsthorne ""Tools and Utilities"" sounds good to me.",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-778849336,778849336,
DrahtBot,2021-03-02 11:39:28,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22440 by JeremyRubin\n\nIf you consider this pull request important, please also help to review the conflicting pull requ",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-788845197,788845197,
DrahtBot,2021-03-15 16:50:05,<!--4a62be1de6b64f3ed646cdc7932c8cf5-->\nüïµÔ∏è @harding has been requested to review this pull request as specified in the REVIEWERS file.,https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-799574662,799574662,
ariard,2021-04-16 16:50:55,Code Review ACK 7c85ec9. Changes from last ACK is complying VerifyScript call to new MissingDataBehavior introduced by b77b0cc and mention of rust-bitcoin lib.,https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-821306887,821306887,
ariard,2021-04-26 17:33:19,"@jrawsthorne I think this needs rebase, but that would be cool to land this for downstream projects.",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-827020410,827020410,
jrawsthorne,2021-04-26 17:44:14,"Thanks @ariard, rebased",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-827026932,827026932,
ariard,2021-04-30 13:59:49,"Code Review ACK 096ab5c.\n\nDiff since last ack is swallowing release-note changes.",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-830115608,830115608,
ariard,2021-04-30 14:00:53,"@SomberNight I guess you're also interested to for downstream support, if you have time to review again, that would be cool :) ",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-830116356,830116356,
jrawsthorne,2021-06-13 13:29:22,"Thanks for your review @sipa, I've addressed your comments. Also pinging @ariard ",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-860211279,860211279,
DrahtBot,2021-07-21 10:00:55,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/21158#issuecomment-884060971,884060971,
ariard,2021-02-13 13:09:38,"I would advice introducing the code style changes in their own commit. Also, I think it's clearer to keep the `Tx` prefix, you have other class of inputs in the codebase beyond transaction like hash elements.",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r575665561,575665561,src/script/bitcoinconsensus.cpp
ariard,2021-02-13 13:37:11,"Have a look on b7dbeb2, I think you should bump the API version, at least it was done for segwit support.\n\nI think you should also add a commit to document this change in `doc/shared-libraries.md`.",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r575668119,575668119,src/script/bitcoinconsensus.cpp
ariard,2021-02-13 13:40:52,Check the equality between inputs/outputs against `tx.vin.size()` (a `bitcoinconsensus_ERR_OUTP_INDEX` ?),https://github.com/bitcoin/bitcoin/pull/21158#discussion_r575668577,575668577,src/script/bitcoinconsensus.cpp
SomberNight,2021-02-17 05:56:28,"there is a typo in the function name\n```suggestion\n`bitcoinconsensus_verify_script`, `bitcoinconsensus_verify_script_with_amount` and `bitcoinconsensus_verify_script_with_spent_outputs` return an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n```",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r577344462,577344462,doc/shared-libraries.md
SomberNight,2021-02-17 05:59:00,"same as above, typo in function name",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r577345442,577345442,doc/shared-libraries.md
ariard,2021-02-23 15:39:01,Can you update this to point to `rust-bitcoinconsensus` :) ?,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r581144674,581144674,doc/shared-libraries.md
sipa,2021-06-13 03:48:28,Generally macro statements aren't indented like the code they're included in.,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r650464544,650464544,src/test/script_tests.cpp
sipa,2021-06-13 03:56:01,BIP341-342 (343 isn't a thing).,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r650465133,650465133,src/script/bitcoinconsensus.h
jrawsthorne,2021-06-13 13:28:06,"Oops, fixed in d82e5de6a41794cc8fd1e3afaa12af26bb7be926",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r650526893,650526893,src/script/bitcoinconsensus.h
jrawsthorne,2021-06-13 13:28:10,"Thanks, didn't know that. Fixed in d82e5de6a41794cc8fd1e3afaa12af26bb7be926",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r650526906,650526906,src/test/script_tests.cpp
luke-jr,2021-06-23 01:56:04,Might be nicer to let the caller pass in an array rather than have to serialise the vector?,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r656702135,656702135,src/script/bitcoinconsensus.cpp
luke-jr,2021-06-23 01:56:52,This leaves me guessing how to call this function.,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r656702414,656702414,doc/shared-libraries.md
jrawsthorne,2021-07-04 11:17:43,Correct me if I'm wrong but I thought it would have to be a vector and that can't be exposed as part of the C API,https://github.com/bitcoin/bitcoin/pull/21158#discussion_r663488098,663488098,src/script/bitcoinconsensus.cpp
jrawsthorne,2021-07-04 11:17:45,"Do you want to add something like ""serialized as a vector of TxOut"" or something more substantial?",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r663488100,663488100,doc/shared-libraries.md
sipa,2021-08-20 18:18:37,"It could take in a pointer to an array of {pointer to utxo, length} structs or so, as well as the number of inputs. That's not particularly convenient to use, but neither is the current interface (as it probably requires serialization code on the caller side).",https://github.com/bitcoin/bitcoin/pull/21158#discussion_r693136247,693136247,src/script/bitcoinconsensus.cpp
