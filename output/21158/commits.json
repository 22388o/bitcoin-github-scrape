[
  {
    "sha": "78447f3d11cca92e6cad7099e20a217097e43452",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODQ0N2YzZDExY2NhOTJlNmNhZDcwOTllMjBhMjE3MDk3ZTQzNDUy",
    "commit": {
      "author": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-02-14T23:08:14Z"
      },
      "committer": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-06-12T20:40:57Z"
      },
      "message": "refactor: Rename variables in preparation for generic deserialization",
      "tree": {
        "sha": "ef064461b33519b9733ffdeb37f4744dea7ca008",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ef064461b33519b9733ffdeb37f4744dea7ca008"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/78447f3d11cca92e6cad7099e20a217097e43452",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78447f3d11cca92e6cad7099e20a217097e43452",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/78447f3d11cca92e6cad7099e20a217097e43452",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78447f3d11cca92e6cad7099e20a217097e43452/comments",
    "author": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0e5fbf6fad854ad03ce092ff5f1582166e5b24e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0e5fbf6fad854ad03ce092ff5f1582166e5b24e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0e5fbf6fad854ad03ce092ff5f1582166e5b24e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "f51a3c574930a4482cc1a7ea44f1a757686a16fb",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/78447f3d11cca92e6cad7099e20a217097e43452/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/78447f3d11cca92e6cad7099e20a217097e43452/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=78447f3d11cca92e6cad7099e20a217097e43452",
        "patch": "@@ -12,14 +12,14 @@\n \n namespace {\n \n-/** A class that deserializes a single CTransaction one time. */\n+/** A class that deserializes a generic object. */\n class TxInputStream\n {\n public:\n-    TxInputStream(int nVersionIn, const unsigned char *txTo, size_t txToLen) :\n+    TxInputStream(int nVersionIn, const unsigned char *data, size_t dataLen) :\n     m_version(nVersionIn),\n-    m_data(txTo),\n-    m_remaining(txToLen)\n+    m_data(data),\n+    m_remaining(dataLen)\n     {}\n \n     void read(char* pch, size_t nSize)"
      }
    ]
  },
  {
    "sha": "d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkODJlNWRlNmE0MTc5NGNjOGZkMWUzYWZhYTEyYWYyNmJiN2JlOTI2",
    "commit": {
      "author": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-02-14T23:09:15Z"
      },
      "committer": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-06-13T13:07:44Z"
      },
      "message": "lib: Add Taproot support to libconsensus",
      "tree": {
        "sha": "36c7279644b0cf913de677f678e923ba496fd094",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36c7279644b0cf913de677f678e923ba496fd094"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/comments",
    "author": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "78447f3d11cca92e6cad7099e20a217097e43452",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/78447f3d11cca92e6cad7099e20a217097e43452",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/78447f3d11cca92e6cad7099e20a217097e43452"
      }
    ],
    "stats": {
      "total": 110,
      "additions": 106,
      "deletions": 4
    },
    "files": [
      {
        "sha": "954e25b66bece99d1e3f1f8f448ad31c4eb0ffbd",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 2,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
        "patch": "@@ -75,6 +75,7 @@ static bool verify_flags(unsigned int flags)\n \n static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, CAmount amount,\n                                     const unsigned char *txTo        , unsigned int txToLen,\n+                                    const unsigned char *spentOutputs, unsigned int spentOutputsLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err)\n {\n     if (!verify_flags(flags)) {\n@@ -83,6 +84,14 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n     try {\n         TxInputStream stream(PROTOCOL_VERSION, txTo, txToLen);\n         CTransaction tx(deserialize, stream);\n+        std::vector<CTxOut> spent_outputs;\n+        if (spentOutputs != nullptr) {\n+            TxInputStream spent_outputs_stream(PROTOCOL_VERSION, spentOutputs, spentOutputsLen);\n+            spent_outputs_stream >> spent_outputs;\n+            if (spent_outputs.size() != tx.vin.size()) {\n+                return set_error(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_MISMATCH);\n+            }\n+        }\n         if (nIn >= tx.vin.size())\n             return set_error(err, bitcoinconsensus_ERR_TX_INDEX);\n         if (GetSerializeSize(tx, PROTOCOL_VERSION) != txToLen)\n@@ -92,18 +101,41 @@ static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptP\n         set_error(err, bitcoinconsensus_ERR_OK);\n \n         PrecomputedTransactionData txdata(tx);\n+\n+        if (spentOutputs != nullptr && flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT) {\n+            txdata.Init(tx, std::move(spent_outputs));\n+        }\n+\n         return VerifyScript(tx.vin[nIn].scriptSig, CScript(scriptPubKey, scriptPubKey + scriptPubKeyLen), &tx.vin[nIn].scriptWitness, flags, TransactionSignatureChecker(&tx, nIn, amount, txdata, MissingDataBehavior::FAIL), nullptr);\n     } catch (const std::exception&) {\n         return set_error(err, bitcoinconsensus_ERR_TX_DESERIALIZE); // Error deserializing\n     }\n }\n \n+int bitcoinconsensus_verify_script_with_spent_outputs(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, int64_t amount,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    const unsigned char *spentOutputs, unsigned int spentOutputsLen,\n+                                    unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err)\n+{\n+    if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT && spentOutputs == nullptr) {\n+        return set_error(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+    }\n+    CAmount am(amount);\n+    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, spentOutputs, spentOutputsLen, nIn, flags, err);\n+}\n+\n int bitcoinconsensus_verify_script_with_amount(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, int64_t amount,\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err)\n {\n+    if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT) {\n+        return set_error(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+    }\n+\n     CAmount am(amount);\n-    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n+    const unsigned char *spentOutputs = nullptr;\n+    unsigned int spentOutputsLen = 0;\n+    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, spentOutputs, spentOutputsLen, nIn, flags, err);\n }\n \n \n@@ -115,8 +147,14 @@ int bitcoinconsensus_verify_script(const unsigned char *scriptPubKey, unsigned i\n         return set_error(err, bitcoinconsensus_ERR_AMOUNT_REQUIRED);\n     }\n \n+    if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT) {\n+        return set_error(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+    }\n+\n     CAmount am(0);\n-    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, nIn, flags, err);\n+    const unsigned char *spentOutputs = nullptr;\n+    unsigned int spentOutputsLen = 0;\n+    return ::verify_script(scriptPubKey, scriptPubKeyLen, am, txTo, txToLen, spentOutputs, spentOutputsLen, nIn, flags, err);\n }\n \n unsigned int bitcoinconsensus_version()"
      },
      {
        "sha": "3c86f0073b0f0d814b65ecb1f0731924dbfbcc54",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
        "patch": "@@ -31,7 +31,7 @@\n extern \"C\" {\n #endif\n \n-#define BITCOINCONSENSUS_API_VER 1\n+#define BITCOINCONSENSUS_API_VER 2\n \n typedef enum bitcoinconsensus_error_t\n {\n@@ -41,6 +41,8 @@ typedef enum bitcoinconsensus_error_t\n     bitcoinconsensus_ERR_TX_DESERIALIZE,\n     bitcoinconsensus_ERR_AMOUNT_REQUIRED,\n     bitcoinconsensus_ERR_INVALID_FLAGS,\n+    bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED,\n+    bitcoinconsensus_ERR_SPENT_OUTPUTS_MISMATCH\n } bitcoinconsensus_error;\n \n /** Script verification flags */\n@@ -53,9 +55,11 @@ enum\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT             = (1U << 17), // enable TAPROOT (BIPs 341 & 342)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n                                                                bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n-                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n+                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS |\n+                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT\n };\n \n /// Returns 1 if the input nIn of the serialized transaction pointed to by\n@@ -70,6 +74,11 @@ EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_amount(const unsigned char\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n \n+EXPORT_SYMBOL int bitcoinconsensus_verify_script_with_spent_outputs(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, int64_t amount,\n+                                    const unsigned char *txTo        , unsigned int txToLen,\n+                                    const unsigned char *spentOutputs, unsigned int spentOutputsLen,\n+                                    unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err);\n+\n EXPORT_SYMBOL unsigned int bitcoinconsensus_version();\n \n #ifdef __cplusplus"
      },
      {
        "sha": "2613970100b35182a8e175a85c60816c75a3adef",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 55,
        "deletions": 0,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d82e5de6a41794cc8fd1e3afaa12af26bb7be926/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
        "patch": "@@ -1639,6 +1639,37 @@ BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_invalid_flags)\n     BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_INVALID_FLAGS);\n }\n \n+/* Test bitcoinconsensus_verify_script returns spent outputs required err */\n+BOOST_AUTO_TEST_CASE(bitcoinconsensus_verify_script_spent_outputs_required_err)\n+{\n+    unsigned int libconsensus_flags = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT;\n+    int nIn = 0;\n+\n+    CScript scriptPubKey;\n+    CScript scriptSig;\n+    CScriptWitness wit;\n+\n+    scriptPubKey << OP_EQUAL;\n+    CTransaction creditTx = BuildCreditingTransaction(scriptPubKey, 1);\n+    CTransaction spendTx = BuildSpendingTransaction(scriptSig, wit, creditTx);\n+\n+    CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+    stream << spendTx;\n+\n+    bitcoinconsensus_error err;\n+    int result = bitcoinconsensus_verify_script_with_spent_outputs(scriptPubKey.data(), scriptPubKey.size(), creditTx.vout[0].nValue, (const unsigned char*)&stream[0], stream.size(), nullptr, 0, nIn, libconsensus_flags, &err);\n+    BOOST_CHECK_EQUAL(result, 0);\n+    BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+\n+    int result2 = bitcoinconsensus_verify_script_with_amount(scriptPubKey.data(), scriptPubKey.size(), creditTx.vout[0].nValue, (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    BOOST_CHECK_EQUAL(result2, 0);\n+    BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+\n+    int result3 = bitcoinconsensus_verify_script(scriptPubKey.data(), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), nIn, libconsensus_flags, &err);\n+    BOOST_CHECK_EQUAL(result3, 0);\n+    BOOST_CHECK_EQUAL(err, bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED);\n+}\n+\n #endif // defined(HAVE_CONSENSUS_LIB)\n \n static std::vector<unsigned int> AllConsensusFlags()\n@@ -1687,12 +1718,24 @@ static void AssetTest(const UniValue& test)\n         PrecomputedTransactionData txdata;\n         txdata.Init(tx, std::vector<CTxOut>(prevouts));\n         CachingTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, true, txdata);\n+\n+#if defined(HAVE_CONSENSUS_LIB)\n+        CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+        stream << tx;\n+        CDataStream spent_outputs_stream(SER_NETWORK, PROTOCOL_VERSION);\n+        spent_outputs_stream << prevouts;\n+#endif\n+\n         for (const auto flags : ALL_CONSENSUS_FLAGS) {\n             // \"final\": true tests are valid for all flags. Others are only valid with flags that are\n             // a subset of test_flags.\n             if (fin || ((flags & test_flags) == flags)) {\n                 bool ret = VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n                 BOOST_CHECK(ret);\n+#if defined(HAVE_CONSENSUS_LIB)\n+                int lib_ret = bitcoinconsensus_verify_script_with_spent_outputs(prevouts[idx].scriptPubKey.data(), prevouts[idx].scriptPubKey.size(), prevouts[idx].nValue, (const unsigned char*)&stream[0], stream.size(), (const unsigned char*)&spent_outputs_stream[0], spent_outputs_stream.size(), idx, flags, nullptr);\n+                BOOST_CHECK(lib_ret == 1);\n+#endif\n             }\n         }\n     }\n@@ -1704,11 +1747,23 @@ static void AssetTest(const UniValue& test)\n         PrecomputedTransactionData txdata;\n         txdata.Init(tx, std::vector<CTxOut>(prevouts));\n         CachingTransactionSignatureChecker txcheck(&tx, idx, prevouts[idx].nValue, true, txdata);\n+\n+#if defined(HAVE_CONSENSUS_LIB)\n+        CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n+        stream << tx;\n+        CDataStream spent_outputs_stream(SER_NETWORK, PROTOCOL_VERSION);\n+        spent_outputs_stream << prevouts;\n+#endif\n+\n         for (const auto flags : ALL_CONSENSUS_FLAGS) {\n             // If a test is supposed to fail with test_flags, it should also fail with any superset thereof.\n             if ((flags & test_flags) == test_flags) {\n                 bool ret = VerifyScript(tx.vin[idx].scriptSig, prevouts[idx].scriptPubKey, &tx.vin[idx].scriptWitness, flags, txcheck, nullptr);\n                 BOOST_CHECK(!ret);\n+#if defined(HAVE_CONSENSUS_LIB)\n+                int lib_ret = bitcoinconsensus_verify_script_with_spent_outputs(prevouts[idx].scriptPubKey.data(), prevouts[idx].scriptPubKey.size(), prevouts[idx].nValue, (const unsigned char*)&stream[0], stream.size(), (const unsigned char*)&spent_outputs_stream[0], spent_outputs_stream.size(), idx, flags, nullptr);\n+                BOOST_CHECK(lib_ret == 0);\n+#endif\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "3dd932ef221df0eb7f04f78d38380d751f33400f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZGQ5MzJlZjIyMWRmMGViN2YwNGY3OGQzODM4MGQ3NTFmMzM0MDBm",
    "commit": {
      "author": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-02-14T23:14:22Z"
      },
      "committer": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-06-13T13:07:52Z"
      },
      "message": "docs: Add docs for additional libconsensus functions",
      "tree": {
        "sha": "4e38b61e710bfddf7ba1116132de76abea299f20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4e38b61e710bfddf7ba1116132de76abea299f20"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3dd932ef221df0eb7f04f78d38380d751f33400f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3dd932ef221df0eb7f04f78d38380d751f33400f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3dd932ef221df0eb7f04f78d38380d751f33400f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3dd932ef221df0eb7f04f78d38380d751f33400f/comments",
    "author": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d82e5de6a41794cc8fd1e3afaa12af26bb7be926",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d82e5de6a41794cc8fd1e3afaa12af26bb7be926"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 30,
      "deletions": 2
    },
    "files": [
      {
        "sha": "89360607d80480cef11bfdf0f7ba16777ffc5e5e",
        "filename": "doc/release-notes.md",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3dd932ef221df0eb7f04f78d38380d751f33400f/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3dd932ef221df0eb7f04f78d38380d751f33400f/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=3dd932ef221df0eb7f04f78d38380d751f33400f",
        "patch": "@@ -151,6 +151,8 @@ Tools and Utilities\n   useful to see if the node knows enough addresses in a network to use options\n   like `-onlynet=<network>` or to upgrade to this release of Bitcoin Core 22.0\n   that supports Tor v3 only.  (#21595)\n+- A new `bitcoinconsensus_verify_script_with_spent_outputs` function is available in libconsensus which optionally accepts the spent outputs of the transaction being verified. (#21158)\n+- A new `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` flag is available in libconsensus that will verify scripts with the Taproot spending rules. (#21158)\n \n Wallet\n ------"
      },
      {
        "sha": "c368c4d16c14f814084c28bd44209e1453d703c6",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 28,
        "deletions": 2,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3dd932ef221df0eb7f04f78d38380d751f33400f/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3dd932ef221df0eb7f04f78d38380d751f33400f/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=3dd932ef221df0eb7f04f78d38380d751f33400f",
        "patch": "@@ -11,13 +11,14 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n \n #### Version\n \n-`bitcoinconsensus_version` returns an `unsigned int` with the API version *(currently `1`)*.\n+`bitcoinconsensus_version` returns an `unsigned int` with the API version *(currently `2`)*.\n \n #### Script Validation\n \n-`bitcoinconsensus_verify_script` returns an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n+`bitcoinconsensus_verify_script`, `bitcoinconsensus_verify_script_with_amount` and `bitcoinconsensus_verify_script_with_spent_outputs` return an `int` with the status of the verification. It will be `1` if the input script correctly spends the previous output `scriptPubKey`.\n \n ##### Parameters\n+###### bitcoinconsensus_verify_script\n - `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n - `unsigned int scriptPubKeyLen` - The number of bytes for the `scriptPubKey`.\n - `const unsigned char *txTo` - The transaction with the input that is spending the previous output.\n@@ -26,6 +27,28 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n - `unsigned int flags` - The script validation flags *(see below)*.\n - `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n \n+###### bitcoinconsensus_verify_script_with_amount\n+- `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n+- `unsigned int scriptPubKeyLen` - The number of bytes for the `scriptPubKey`.\n+- `int64_t amount` - The amount spent in the input\n+- `const unsigned char *txTo` - The transaction with the input that is spending the previous output.\n+- `unsigned int txToLen` - The number of bytes for the `txTo`.\n+- `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.\n+- `unsigned int flags` - The script validation flags *(see below)*.\n+- `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n+\n+###### bitcoinconsensus_verify_script_with_spent_outputs\n+- `const unsigned char *scriptPubKey` - The previous output script that encumbers spending.\n+- `unsigned int scriptPubKeyLen` - The number of bytes for the `scriptPubKey`.\n+- `int64_t amount` - The amount spent in the input\n+- `const unsigned char *txTo` - The transaction with the input that is spending the previous output.\n+- `unsigned int txToLen` - The number of bytes for the `txTo`.\n+- `const unsigned char *spentOutputs` - Previous outputs spent in the transaction\n+- `unsigned int spentOutputsLen` - The number of bytes for the `spentOutputs`\n+- `unsigned int nIn` - The index of the input in `txTo` that spends the `scriptPubKey`.\n+- `unsigned int flags` - The script validation flags *(see below)*.\n+- `bitcoinconsensus_error* err` - Will have the error/success code for the operation *(see below)*.\n+\n ##### Script Flags\n - `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NONE`\n - `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH` - Evaluate P2SH ([BIP16](https://github.com/bitcoin/bips/blob/master/bip-0016.mediawiki)) subscripts\n@@ -34,6 +57,7 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n - `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY` - Enable CHECKLOCKTIMEVERIFY ([BIP65](https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki))\n - `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY` - Enable CHECKSEQUENCEVERIFY ([BIP112](https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki))\n - `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS` - Enable WITNESS ([BIP141](https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki))\n+- `bitcoinconsensus_SCRIPT_FLAGS_VERIFY_TAPROOT` - Enable TAPROOT ([BIP340](https://github.com/bitcoin/bips/blob/master/bip-0340.mediawiki), [BIP341](https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki), [BIP342](https://github.com/bitcoin/bips/blob/master/bip-0342.mediawiki))\n \n ##### Errors\n - `bitcoinconsensus_ERR_OK` - No errors with input parameters *(see the return value of `bitcoinconsensus_verify_script` for the verification status)*\n@@ -42,6 +66,8 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n - `bitcoinconsensus_ERR_DESERIALIZE` - An error deserializing `txTo`\n - `bitcoinconsensus_ERR_AMOUNT_REQUIRED` - Input amount is required if WITNESS is used\n - `bitcoinconsensus_ERR_INVALID_FLAGS` - Script verification `flags` are invalid (i.e. not part of the libconsensus interface)\n+- `bitcoinconsensus_ERR_SPENT_OUTPUTS_REQUIRED` - Spent outputs are required if TAPROOT is used\n+- `bitcoinconsensus_ERR_SPENT_OUTPUTS_MISMATCH` - Spent outputs size doesn't match tx inputs size\n \n ### Example Implementations\n - [NBitcoin](https://github.com/MetacoSA/NBitcoin/blob/5e1055cd7c4186dee4227c344af8892aea54faec/NBitcoin/Script.cs#L979-#L1031) (.NET Bindings)"
      }
    ]
  },
  {
    "sha": "c23996ad35511bd8936e7bb38286c377eda67583",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMjM5OTZhZDM1NTExYmQ4OTM2ZTdiYjM4Mjg2YzM3N2VkYTY3NTgz",
    "commit": {
      "author": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-02-24T18:27:47Z"
      },
      "committer": {
        "name": "Jake Rawsthorne",
        "email": "jake.rawsthorne@couchbase.com",
        "date": "2021-06-13T13:07:52Z"
      },
      "message": "docs: Link to rust-bitcoinconsensus",
      "tree": {
        "sha": "6a227bb048dac649939c41539c2f6e68a0eb3007",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6a227bb048dac649939c41539c2f6e68a0eb3007"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c23996ad35511bd8936e7bb38286c377eda67583",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c23996ad35511bd8936e7bb38286c377eda67583",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c23996ad35511bd8936e7bb38286c377eda67583",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c23996ad35511bd8936e7bb38286c377eda67583/comments",
    "author": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jrawsthorne",
      "id": 777143,
      "node_id": "MDQ6VXNlcjc3NzE0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/777143?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jrawsthorne",
      "html_url": "https://github.com/jrawsthorne",
      "followers_url": "https://api.github.com/users/jrawsthorne/followers",
      "following_url": "https://api.github.com/users/jrawsthorne/following{/other_user}",
      "gists_url": "https://api.github.com/users/jrawsthorne/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jrawsthorne/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jrawsthorne/subscriptions",
      "organizations_url": "https://api.github.com/users/jrawsthorne/orgs",
      "repos_url": "https://api.github.com/users/jrawsthorne/repos",
      "events_url": "https://api.github.com/users/jrawsthorne/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jrawsthorne/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3dd932ef221df0eb7f04f78d38380d751f33400f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3dd932ef221df0eb7f04f78d38380d751f33400f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3dd932ef221df0eb7f04f78d38380d751f33400f"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d20f1c69ae149eb31b8d00b46cb12c445d973313",
        "filename": "doc/shared-libraries.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c23996ad35511bd8936e7bb38286c377eda67583/doc/shared-libraries.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c23996ad35511bd8936e7bb38286c377eda67583/doc/shared-libraries.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/shared-libraries.md?ref=c23996ad35511bd8936e7bb38286c377eda67583",
        "patch": "@@ -74,3 +74,4 @@ The interface is defined in the C header `bitcoinconsensus.h` located in `src/sc\n - [node-libbitcoinconsensus](https://github.com/bitpay/node-libbitcoinconsensus) (Node.js Bindings)\n - [java-libbitcoinconsensus](https://github.com/dexX7/java-libbitcoinconsensus) (Java Bindings)\n - [bitcoinconsensus-php](https://github.com/Bit-Wasp/bitcoinconsensus-php) (PHP Bindings)\n+- [rust-bitcoinconsensus](https://github.com/rust-bitcoin/rust-bitcoinconsensus) (Rust Bindings)\n\\ No newline at end of file"
      }
    ]
  }
]