[
  {
    "sha": "ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYjIzYTgzNDAwZDVhZDEzMTM3Y2UwZjk2OTdhNTFmMGI3MGU5ZDI5",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-11-21T06:51:48Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2020-11-24T15:32:42Z"
      },
      "message": "Fix QPainter non-determinism on macOS\n\nAplies a patch to Qt that fixes the non-determinism by modifying Qt. The\nsource of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\nwhen compiling. The particular optimization that seems to be causing the\nproblems is that a temp variable is being added for spans->y. For some\nreason, when it does this, it chooses different instructions to use when\nmaking that variable. We bypass this problem by patching\nqt_intersect_spans to always make and use this local variable.\n\nGithub-Pull: #20447\nRebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\nTree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41",
      "tree": {
        "sha": "23c1c2a46b0738104f74789ff3d48d1c9dcacc2f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/23c1c2a46b0738104f74789ff3d48d1c9dcacc2f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCgAdFiEEnerg3HBjJJ+wVHRoHkrtYphs0l0FAl+9J5oACgkQHkrtYphs\n0l3UqAf/UdYtNqFfn8bm9Gu7CgpxaGnnZ2vSzOIvnHOa1J5tCHxDIhTKxzaySm/R\neWoCyP2L6LEaEDJbX+k2boc/FjJ84lWT087KObIs2inYBXH4DiP/eEpPI/Ggtk3W\npgxKuXQ6XJmhVfEHRcoedPrx2Di+ew3PyaXzDv0AE/jpRRbZtNHgk8dT4E9H1wsm\nYefWPSvKdSN6ZYXGNMT7FAsWhFydrXhk6O9rroQwHEzfdfvJKXsaNiTa4OKU9Pme\nIpomjln9YdUTPfYkhbnG5hgR4s6uOuIw7u4aV5OeyUjttn0fOY1LESMvWCSqSVKR\nzbK85Cgs4FRLB189S2YCN5qTy7NsKA==\n=o0++\n-----END PGP SIGNATURE-----",
        "payload": "tree 23c1c2a46b0738104f74789ff3d48d1c9dcacc2f\nparent bf9548bc59458c997baa8b2818c33f399559168a\nauthor Andrew Chow <achow101-github@achow101.com> 1605941508 -0500\ncommitter Wladimir J. van der Laan <laanwj@protonmail.com> 1606231962 +0100\n\nFix QPainter non-determinism on macOS\n\nAplies a patch to Qt that fixes the non-determinism by modifying Qt. The\nsource of the non-determinism is how LLVM 8 optimizes qt_intersect_spans\nwhen compiling. The particular optimization that seems to be causing the\nproblems is that a temp variable is being added for spans->y. For some\nreason, when it does this, it chooses different instructions to use when\nmaking that variable. We bypass this problem by patching\nqt_intersect_spans to always make and use this local variable.\n\nGithub-Pull: #20447\nRebased-From: 8f7d1b39efbe65ab2747c593cc3560d4a449a333\nTree-SHA512: 558da5c2bb0373e2a89f2c219170f802036e0e87cc8e808336b23d074152cb893007a440f46ec957156b0921355cd18502710f2d224f27bc26e934c50ebebc41\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf9548bc59458c997baa8b2818c33f399559168a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9548bc59458c997baa8b2818c33f399559168a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9548bc59458c997baa8b2818c33f399559168a"
      }
    ],
    "stats": {
      "total": 65,
      "additions": 65,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2a9e06651056d7a9ec82b2a5671f9f0fe326f215",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "patch": "@@ -12,6 +12,7 @@ $(package)_patches=fix_qt_pkgconfig.patch mac-qmake.conf fix_configure_mac.patch\n $(package)_patches+= fix_rcc_determinism.patch fix_riscv64_arch.patch xkb-default.patch no-xlib.patch\n $(package)_patches+= fix_android_qmake_conf.patch fix_android_jni_static.patch dont_hardcode_pwd.patch\n $(package)_patches+= freetype_back_compat.patch drop_lrelease_dependency.patch fix_powerpc_libpng.patch\n+$(package)_patches+= fix_qpainter_non_determinism.patch\n \n # Update OSX_QT_TRANSLATIONS when this is updated\n $(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n@@ -195,6 +196,7 @@ endef\n define $(package)_preprocess_cmds\n   patch -p1 -i $($(package)_patch_dir)/freetype_back_compat.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/fix_powerpc_libpng.patch && \\\n+  patch -p1 -i $($(package)_patch_dir)/fix_qpainter_non_determinism.patch &&\\\n   sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n   patch -p1 -i $($(package)_patch_dir)/drop_lrelease_dependency.patch && \\\n   patch -p1 -i $($(package)_patch_dir)/dont_hardcode_pwd.patch &&\\"
      },
      {
        "sha": "3cfcc22f03a0030af501d01ce74bbb9d39eafe66",
        "filename": "depends/patches/qt/fix_qpainter_non_determinism.patch",
        "status": "added",
        "additions": 63,
        "deletions": 0,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ab23a83400d5ad13137ce0f9697a51f0b70e9d29/depends/patches/qt/fix_qpainter_non_determinism.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix_qpainter_non_determinism.patch?ref=ab23a83400d5ad13137ce0f9697a51f0b70e9d29",
        "patch": "@@ -0,0 +1,63 @@\n+commit 2a8f7dc6ddfc414a66491522501c1574a1343ee1\n+Author: Andrew Chow <achow101-github@achow101.com>\n+Date:   Sat Nov 21 01:11:04 2020 -0500\n+\n+    build: Fix determinism issue when building with Clang 8\n+\n+    When building Qt with LLVM/Clang 8 under -O3 (the default), we run into\n+    a determinism issue in `qt_interset_spans`. The issue has been fixed for\n+    LLVM/Clang 9, see\n+    https://github.com/llvm/llvm-project/commit/db101864bdc938deb1d63fe4f7da761bd38e5cae\n+    and https://reviews.llvm.org/D64601, however this fix was not backported\n+    to 8.x. Once LLVM/Clang 9 is used, this patch can be dropped.\n+\n+    The particular issue appears to be an optimization done by -O3 which\n+    adds a temporary variable for `spans->y` in `qt_intersect_spans`. When\n+    it does this, sometimes it chooses to use a 32-bit movs instruction\n+    (movswl), and other times it chooses a 64-bit movs instruction (movswq).\n+    By patching `qt_intersect_spans` to always make a temporary variable for\n+    `spans->y`, we are able to sidestep this problem.\n+\n+diff --git a/qtbase/src/gui/painting/qpaintengine_raster.cpp b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+index 92ab6e8375..f018009e0b 100644\n+--- a/qtbase/src/gui/painting/qpaintengine_raster.cpp\n++++ b/qtbase/src/gui/painting/qpaintengine_raster.cpp\n+@@ -3971,22 +3971,23 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+     const QSpan *clipEnd = clip->m_spans + clip->count;\n+ \n+     while (available && spans < end ) {\n++        const short spans_y = spans->y;\n+         if (clipSpans >= clipEnd) {\n+             spans = end;\n+             break;\n+         }\n+-        if (clipSpans->y > spans->y) {\n++        if (clipSpans->y > spans_y) {\n+             ++spans;\n+             continue;\n+         }\n+-        if (spans->y != clipSpans->y) {\n+-            if (spans->y < clip->count && clip->m_clipLines[spans->y].spans)\n+-                clipSpans = clip->m_clipLines[spans->y].spans;\n++        if (spans_y != clipSpans->y) {\n++            if (spans_y < clip->count && clip->m_clipLines[spans_y].spans)\n++                clipSpans = clip->m_clipLines[spans_y].spans;\n+             else\n+                 ++clipSpans;\n+             continue;\n+         }\n+-        Q_ASSERT(spans->y == clipSpans->y);\n++        Q_ASSERT(spans_y == clipSpans->y);\n+ \n+         int sx1 = spans->x;\n+         int sx2 = sx1 + spans->len;\n+@@ -4005,7 +4006,7 @@ static const QSpan *qt_intersect_spans(const QClipData *clip, int *currentClip,\n+         if (len) {\n+             out->x = qMax(sx1, cx1);\n+             out->len = qMin(sx2, cx2) - out->x;\n+-            out->y = spans->y;\n++            out->y = spans_y;\n+             out->coverage = qt_div_255(spans->coverage * clipSpans->coverage);\n+             ++out;\n+             --available;\n+"
      }
    ]
  }
]