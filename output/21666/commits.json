[
  {
    "sha": "54569cc6d6f54788169061004026e62e1c08440e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NDU2OWNjNmQ2ZjU0Nzg4MTY5MDYxMDA0MDI2ZTYyZTFjMDg0NDBl",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T06:55:58Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:33Z"
      },
      "message": "refactor: move all signer code inside ENABLE_EXTERNAL_SIGNER #ifdefs",
      "tree": {
        "sha": "552c94e798bdb2a5b3b8caeea8feecb6f17eaff2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/552c94e798bdb2a5b3b8caeea8feecb6f17eaff2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/54569cc6d6f54788169061004026e62e1c08440e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if0ACgkQLuufXMCV\nJsGXjg/9EL8Tq7WvSL81hOQiw3N9LMJblIKQ0/qMPjd+c4/Azi9Nq2zg8m1xjiX5\ngThgkyY0us/Wms5L4k54NdEHU2rW5WwnW5KGC98rKwNNgEkfpCHx/8MDdrAD8U/Y\njC88Xl0zM01XrA3vFpQDq16ZeEmnnpxxZ1VlGiHCeLNC/DmWv4i0u18wApgLoKA+\nTG6xx9baCbnfpvFz4ShlZs1ZZGlU5D+KwhaXDaE4NyQQwVHTD/jtICtSu4gpWRIw\ng9Dfya+mPKLJGhoQ720+dIW9ONd+4PA9hj/pCJqHrySPS8/mZ7y8+Mpq9Obvj6PV\nRtIPN5PKnhoGWSOYGy5YMA3a0z9/IweNNHQlYbgdGsYEcqpIwGcQaV42u6dfsYcR\nqwMfGrEm2zGDPXd4Jz3LvrvbFppRf6MXvWClho+kocbYHgwljDf9qYhVCmd6hr+T\nPNbtD+NHjjnVR0UPyDf+WAne9ezRuQXZPYc8+58xaeO9F8mcP1cr7kxx06PhNADP\nUt55NAAYvmcBWvvg0T0uc1VKlEanli5TbhXqlGDSbeVfwbh9KSymjdBESYUGnLbs\na0M4Eu1rsvRMEShLCZuL+njCxxrzGup2qz3arDDJB8x9LHAv/CpoH5n3F2rA8/9W\nZvhoT5QPIWsDmIe++GJBSZpx8t8210FpSjSQpL0+G2szd9fowhg=\n=SlAt\n-----END PGP SIGNATURE-----",
        "payload": "tree 552c94e798bdb2a5b3b8caeea8feecb6f17eaff2\nparent c1f480fb234856a60e9b1f4bf97114bfd9b3d0b0\nauthor fanquake <fanquake@gmail.com> 1618296958 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315773 +0800\n\nrefactor: move all signer code inside ENABLE_EXTERNAL_SIGNER #ifdefs\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54569cc6d6f54788169061004026e62e1c08440e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/54569cc6d6f54788169061004026e62e1c08440e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54569cc6d6f54788169061004026e62e1c08440e/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1f480fb234856a60e9b1f4bf97114bfd9b3d0b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f480fb234856a60e9b1f4bf97114bfd9b3d0b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f480fb234856a60e9b1f4bf97114bfd9b3d0b0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "be8b06eaba57022e204bbcaedb8d07f8dd45e71f",
        "filename": "src/external_signer.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54569cc6d6f54788169061004026e62e1c08440e/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54569cc6d6f54788169061004026e62e1c08440e/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=54569cc6d6f54788169061004026e62e1c08440e",
        "patch": "@@ -9,15 +9,15 @@\n #include <util/system.h>\n #include <external_signer.h>\n \n+#ifdef ENABLE_EXTERNAL_SIGNER\n+\n ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, std::string chain, std::string name): m_command(command), m_fingerprint(fingerprint), m_chain(chain), m_name(name) {}\n \n const std::string ExternalSigner::NetworkArg() const\n {\n     return \" --chain \" + m_chain;\n }\n \n-#ifdef ENABLE_EXTERNAL_SIGNER\n-\n bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain, bool ignore_errors)\n {\n     // Call <command> enumerate\n@@ -116,4 +116,4 @@ bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::str\n     return true;\n }\n \n-#endif\n+#endif // ENABLE_EXTERNAL_SIGNER"
      },
      {
        "sha": "15436213b27ed71b01d760381efb2188f16e9c01",
        "filename": "src/external_signer.h",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54569cc6d6f54788169061004026e62e1c08440e/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54569cc6d6f54788169061004026e62e1c08440e/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=54569cc6d6f54788169061004026e62e1c08440e",
        "patch": "@@ -10,6 +10,8 @@\n #include <univalue.h>\n #include <util/system.h>\n \n+#ifdef ENABLE_EXTERNAL_SIGNER\n+\n struct PartiallySignedTransaction;\n \n class ExternalSignerException : public std::runtime_error {\n@@ -43,7 +45,6 @@ class ExternalSigner\n \n     const std::string NetworkArg() const;\n \n-#ifdef ENABLE_EXTERNAL_SIGNER\n     //! Obtain a list of signers. Calls `<command> enumerate`.\n     //! @param[in]              command the command which handles interaction with the external signer\n     //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n@@ -66,8 +67,8 @@ class ExternalSigner\n     //! Calls `<command> signtransaction` and passes the PSBT via stdin.\n     //! @param[in,out] psbt  PartiallySignedTransaction to be signed\n     bool SignTransaction(PartiallySignedTransaction& psbt, std::string& error);\n-\n-#endif\n };\n \n+#endif // ENABLE_EXTERNAL_SIGNER\n+\n #endif // BITCOIN_EXTERNAL_SIGNER_H"
      },
      {
        "sha": "db05586eb65c02a42a2f907192aeeabe584890b8",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/54569cc6d6f54788169061004026e62e1c08440e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/54569cc6d6f54788169061004026e62e1c08440e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=54569cc6d6f54788169061004026e62e1c08440e",
        "patch": "@@ -4586,7 +4586,7 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n         }\n #else\n         throw std::runtime_error(std::string(__func__) + \": Wallets with external signers require Boost::Process library.\");\n-#endif\n+#endif // ENABLE_EXTERNAL_SIGNER\n     }\n }\n "
      }
    ]
  },
  {
    "sha": "f4652bf1259d5c52ff0d500c732f40ba41256817",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNDY1MmJmMTI1OWQ1YzUyZmYwZDUwMGM3MzJmNDBiYTQxMjU2ODE3",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T07:02:10Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:33Z"
      },
      "message": "refactor: add missing includes to external signer code",
      "tree": {
        "sha": "a04165b097cff9d19d3fe26ab8d2ef753b31c127",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a04165b097cff9d19d3fe26ab8d2ef753b31c127"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4652bf1259d5c52ff0d500c732f40ba41256817",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if0ACgkQLuufXMCV\nJsFBUg/9FiWmHH3+hgTS/mYIBcVy4fS9a6J6tgh8uh4MXw7NrMY90L3+jFFPCTW6\nFd6gUNd+W1OL29CK9VWnU7kkburAWHzsZ/HGrvXNC+dwI/OOLy+/yF5o6SPWqFRm\nztywPR9EizND5EubwQ89IEmpkMqd6LXVuwtxNUTPreQ1Yjd4z/Z6DDV1CG2+BsfG\nFjO9bj8RFs1TTBn4C3x7mX1iO15+A50KlFuimA/8S1ZHVjJ+xaO34g1ebGM54QTJ\nKMNGLaGgpcaUgcXIl0hmka0PbAGJyGmvvxvD+f0CHyL2VXtaGz4INegUerRI5n/p\nVevaebVcLDOTuxsIrVuYEAZZVd4G6ywfC3pCwS6XsvhMlxQi7W4xuqyd0u4D6DuC\nHP80OaHIRGbe3OjJF4qOTbRWQ/ga4LKIJmasLTJ80IPmCfAjo/Tfom27V9loA8qy\nUY7dNTxNEZOgHO84v1Y43bxxWO/m01g2cswMHxlx0v8iilnBZzl2NpNKOekvZDKi\nDvTawG2WT0//XZ0do1W3ZcN4CfJ23TuTuHf/7RvBKUhMYU43CQKavxA7uNoGybml\nrzhpurlOjebRvR8cvOATxAgakblYX6xr8wMe3F02P6H4tlSHjUzjlRCYazgHtY4o\nEcRNVRL/1hq7yB6NLDmbr3UtjCGbAD/N7j7bRRU/vgg+RWxenhY=\n=UqmG\n-----END PGP SIGNATURE-----",
        "payload": "tree a04165b097cff9d19d3fe26ab8d2ef753b31c127\nparent 54569cc6d6f54788169061004026e62e1c08440e\nauthor fanquake <fanquake@gmail.com> 1618297330 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315773 +0800\n\nrefactor: add missing includes to external signer code\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4652bf1259d5c52ff0d500c732f40ba41256817",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4652bf1259d5c52ff0d500c732f40ba41256817",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4652bf1259d5c52ff0d500c732f40ba41256817/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "54569cc6d6f54788169061004026e62e1c08440e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/54569cc6d6f54788169061004026e62e1c08440e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/54569cc6d6f54788169061004026e62e1c08440e"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 19,
      "deletions": 2
    },
    "files": [
      {
        "sha": "9278d07f4932c21b2d789fd8718279741c4164bd",
        "filename": "src/external_signer.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4652bf1259d5c52ff0d500c732f40ba41256817/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4652bf1259d5c52ff0d500c732f40ba41256817/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=f4652bf1259d5c52ff0d500c732f40ba41256817",
        "patch": "@@ -9,6 +9,9 @@\n #include <util/system.h>\n #include <external_signer.h>\n \n+#include <string>\n+#include <vector>\n+\n #ifdef ENABLE_EXTERNAL_SIGNER\n \n ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, std::string chain, std::string name): m_command(command), m_fingerprint(fingerprint), m_chain(chain), m_name(name) {}"
      },
      {
        "sha": "070589dac02fa7d1521e56c4b5da0e36505da29e",
        "filename": "src/external_signer.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4652bf1259d5c52ff0d500c732f40ba41256817/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4652bf1259d5c52ff0d500c732f40ba41256817/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=f4652bf1259d5c52ff0d500c732f40ba41256817",
        "patch": "@@ -5,11 +5,13 @@\n #ifndef BITCOIN_EXTERNAL_SIGNER_H\n #define BITCOIN_EXTERNAL_SIGNER_H\n \n-#include <stdexcept>\n-#include <string>\n #include <univalue.h>\n #include <util/system.h>\n \n+#include <stdexcept>\n+#include <string>\n+#include <vector>\n+\n #ifdef ENABLE_EXTERNAL_SIGNER\n \n struct PartiallySignedTransaction;"
      },
      {
        "sha": "05d4ce2c9154a669f3c7954c914b4db51fe5de7b",
        "filename": "src/rpc/external_signer.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4652bf1259d5c52ff0d500c732f40ba41256817/src/rpc/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4652bf1259d5c52ff0d500c732f40ba41256817/src/rpc/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/external_signer.cpp?ref=f4652bf1259d5c52ff0d500c732f40ba41256817",
        "patch": "@@ -9,6 +9,9 @@\n #include <util/strencodings.h>\n #include <rpc/protocol.h>\n \n+#include <string>\n+#include <vector>\n+\n #ifdef ENABLE_EXTERNAL_SIGNER\n \n static RPCHelpMan enumeratesigners()"
      },
      {
        "sha": "fe2c810afa71a438a7333dc7fe199f3889003d63",
        "filename": "src/wallet/external_signer_scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4652bf1259d5c52ff0d500c732f40ba41256817/src/wallet/external_signer_scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4652bf1259d5c52ff0d500c732f40ba41256817/src/wallet/external_signer_scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.cpp?ref=f4652bf1259d5c52ff0d500c732f40ba41256817",
        "patch": "@@ -6,6 +6,13 @@\n #include <external_signer.h>\n #include <wallet/external_signer_scriptpubkeyman.h>\n \n+#include <iostream>\n+#include <memory>\n+#include <stdexcept>\n+#include <string>\n+#include <utility>\n+#include <vector>\n+\n #ifdef ENABLE_EXTERNAL_SIGNER\n \n bool ExternalSignerScriptPubKeyMan::SetupDescriptor(std::unique_ptr<Descriptor> desc)"
      },
      {
        "sha": "1786958912c873b10d0b186d100b059841047f37",
        "filename": "src/wallet/external_signer_scriptpubkeyman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4652bf1259d5c52ff0d500c732f40ba41256817/src/wallet/external_signer_scriptpubkeyman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4652bf1259d5c52ff0d500c732f40ba41256817/src/wallet/external_signer_scriptpubkeyman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/external_signer_scriptpubkeyman.h?ref=f4652bf1259d5c52ff0d500c732f40ba41256817",
        "patch": "@@ -8,6 +8,8 @@\n #ifdef ENABLE_EXTERNAL_SIGNER\n #include <wallet/scriptpubkeyman.h>\n \n+#include <memory>\n+\n class ExternalSignerScriptPubKeyMan : public DescriptorScriptPubKeyMan\n {\n   public:"
      }
    ]
  },
  {
    "sha": "8fdbb899b84a2be85e632e45f08b222db02395d9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZmRiYjg5OWI4NGEyYmU4NWU2MzJlNDVmMDhiMjIyZGIwMjM5NWQ5",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T07:08:33Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:33Z"
      },
      "message": "refactor: unify external wallet runtime errors\n\nRather than 3 different messages that are confusing / leak\nimplementation details, use a single message, that is similar to other\nwallet related messages. i.e:\n\"Compiled without sqlite support (required for descriptor wallets)\".",
      "tree": {
        "sha": "6e8397b8a3784522b4f7716b56860425d1645d90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e8397b8a3784522b4f7716b56860425d1645d90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8fdbb899b84a2be85e632e45f08b222db02395d9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if0ACgkQLuufXMCV\nJsF9NA/8C69lbkHJJP3RCxHcPZOqXQOvLO8UzXI1Wh2QM2hEZ3pJzXxZ3cqtyzWD\nWaCW5dqli+B3MDccexd5Gczs4x4tQ60mTgG4b4VQJ9/7k9bbJqTHkXOh+n6fKtwv\nZdqQCCtRULf3qwN/k093ldItK3kCCiKQ17f1+RYQf5pp9WSgNf3Kg7Z3HZ4aijjh\nOmbimVEcqqP8LcTuKyBIr14EfFDQCr+C8Q/i/0ju+ZKFPVGrC3/eyGGnIB8Z3HG1\nQOhrD4JJ2kIl3p6FZk/Nji8dibrLHEsuY1PGJUEeL62jTxcu6PeMUbXrEdDSf21/\n8qbr4DspP/A/2ZXUYchyT9XGY1xwpoQ34mHEFYUzC8ArJDUVdjTPAgMal/0xsTAk\ns9JH8JR2asp//eiRRVqXs3UAZM8rA76dHo1O6Y7Pyn9HeKj/t24rsxehtf03h5ma\nhGwDQMRpZoflDImYbekNF/k9kGn0HP7iDnQ61ORM1VKQD6Z9udGU0r6r8s49s3tE\ns0e49NeGg904+kU2fkhyE1qym22M7z/oXViA07mGIAbHlPmqeSi3bgZJ7jIfL5r1\nmv9wi5hd5PjR4vGUjd4dAJCg+O/7vDYFExIqLmVeIBLoLHNEC0vDKI/nhELPnTJu\nv0Qhdo5ICZQNadKPqEiN5m+Da0qEZiRTITt8m2kVoJcprQHWqDk=\n=uEr+\n-----END PGP SIGNATURE-----",
        "payload": "tree 6e8397b8a3784522b4f7716b56860425d1645d90\nparent f4652bf1259d5c52ff0d500c732f40ba41256817\nauthor fanquake <fanquake@gmail.com> 1618297713 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315773 +0800\n\nrefactor: unify external wallet runtime errors\n\nRather than 3 different messages that are confusing / leak\nimplementation details, use a single message, that is similar to other\nwallet related messages. i.e:\n\"Compiled without sqlite support (required for descriptor wallets)\".\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fdbb899b84a2be85e632e45f08b222db02395d9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8fdbb899b84a2be85e632e45f08b222db02395d9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fdbb899b84a2be85e632e45f08b222db02395d9/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f4652bf1259d5c52ff0d500c732f40ba41256817",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4652bf1259d5c52ff0d500c732f40ba41256817",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f4652bf1259d5c52ff0d500c732f40ba41256817"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "76460f106b7d6d8e8075ea36edaf80a9b21f3a7f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fdbb899b84a2be85e632e45f08b222db02395d9/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fdbb899b84a2be85e632e45f08b222db02395d9/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8fdbb899b84a2be85e632e45f08b222db02395d9",
        "patch": "@@ -2750,7 +2750,7 @@ static RPCHelpMan createwallet()\n #ifdef ENABLE_EXTERNAL_SIGNER\n         flags |= WALLET_FLAG_EXTERNAL_SIGNER;\n #else\n-        throw JSONRPCError(RPC_WALLET_ERROR, \"Configure with --enable-external-signer to use this\");\n+        throw JSONRPCError(RPC_WALLET_ERROR, \"Compiled without external signing support (required for external signing)\");\n #endif\n     }\n "
      },
      {
        "sha": "c297bc2f9135ac92bc8826d3229928febeeb053a",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8fdbb899b84a2be85e632e45f08b222db02395d9/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8fdbb899b84a2be85e632e45f08b222db02395d9/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8fdbb899b84a2be85e632e45f08b222db02395d9",
        "patch": "@@ -4516,7 +4516,7 @@ void CWallet::LoadDescriptorScriptPubKeyMan(uint256 id, WalletDescriptor& desc)\n         auto spk_manager = std::unique_ptr<ScriptPubKeyMan>(new ExternalSignerScriptPubKeyMan(*this, desc));\n         m_spk_managers[id] = std::move(spk_manager);\n #else\n-        throw std::runtime_error(std::string(__func__) + \": Configure with --enable-external-signer to use external signer wallets\");\n+        throw std::runtime_error(std::string(__func__) + \": Compiled without external signing support (required for external signing)\");\n #endif\n     } else {\n         auto spk_manager = std::unique_ptr<ScriptPubKeyMan>(new DescriptorScriptPubKeyMan(*this, desc));\n@@ -4585,7 +4585,7 @@ void CWallet::SetupDescriptorScriptPubKeyMans()\n             }\n         }\n #else\n-        throw std::runtime_error(std::string(__func__) + \": Wallets with external signers require Boost::Process library.\");\n+        throw std::runtime_error(std::string(__func__) + \": Compiled without external signing support (required for external signing)\");\n #endif // ENABLE_EXTERNAL_SIGNER\n     }\n }"
      }
    ]
  },
  {
    "sha": "06a0673351282fff1673f3679a7cad9a7faaf987",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmEwNjczMzUxMjgyZmZmMTY3M2YzNjc5YTdjYWQ5YTdmYWFmOTg3",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T07:18:20Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:33Z"
      },
      "message": "external_signer: remove ignore_errors from Enumerate()\n\nThis is undocumented and unused.",
      "tree": {
        "sha": "f2832109fad1d434d8fdf05a6dcf5c3bbd0698f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2832109fad1d434d8fdf05a6dcf5c3bbd0698f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06a0673351282fff1673f3679a7cad9a7faaf987",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if0ACgkQLuufXMCV\nJsGV/w/+PEBp74bwa7NjotrpMXcp+qPFFMqBnzj+ly5ALPBKYodmjk1EFt39iq95\ncT16zo3D/I2luA8G1wJK/0NZ1362/YfP96XV7B4i94t/bg3KeG6qWv3yuNAZJAg0\n+lT6S6jjyQOs3AP7KGvnYxLcJ8f48LPJh+5kxknNWV47HRiKvnqxy4LBCHOJ8kmY\n/5Esa8u/4jDQlgGjtCKqp10En9sFblyv4waVxGwifeu6XoFDnGPbGEn+mfUJFewF\n9h7COtIZXxQVCPbKk9M86pTRnVuHe/MU6h6SwjUrJ75ajNmMjHv/mxZoJEdpNdJ0\nuAhOy5z0kdGlaAYYDaYeXoE42ZV9/wN7z185uOfmdtjsS70e5L5mJaOG3d0++HOI\npCL6GNiqvLwdLd1zoKbiY74J5OZ4Vjuf6DDBxAxyIfx4SLb4nu3L7kphvqF06meo\nWWOUnuoYVB+luz3VlfKzn9fEiAu1C8CzDLcs9nU2D5/miceA0NQ/WBkms498UbFO\nW9NDgKa+6b4QAXC7MPygAfEsTVdqfKdJDWoh+Nfih3sPH+IxZh6NVkQwUKCT5CY3\n9dcjxP/UXuGcOLDRgJR75FlqiaevzbblWs1JVHn3N9BL57SLi8FoWSCSEZ7uMMQA\noh+h09ydk8rJryrE+3f4q07vM9m3oaktXODL41gh9ag/yolLqoY=\n=sSoy\n-----END PGP SIGNATURE-----",
        "payload": "tree f2832109fad1d434d8fdf05a6dcf5c3bbd0698f9\nparent 8fdbb899b84a2be85e632e45f08b222db02395d9\nauthor fanquake <fanquake@gmail.com> 1618298300 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315773 +0800\n\nexternal_signer: remove ignore_errors from Enumerate()\n\nThis is undocumented and unused.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a0673351282fff1673f3679a7cad9a7faaf987",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06a0673351282fff1673f3679a7cad9a7faaf987",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a0673351282fff1673f3679a7cad9a7faaf987/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8fdbb899b84a2be85e632e45f08b222db02395d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8fdbb899b84a2be85e632e45f08b222db02395d9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8fdbb899b84a2be85e632e45f08b222db02395d9"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 2,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4809c5abf26f22127b575f9952d65fe703ae0940",
        "filename": "src/external_signer.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a0673351282fff1673f3679a7cad9a7faaf987/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a0673351282fff1673f3679a7cad9a7faaf987/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=06a0673351282fff1673f3679a7cad9a7faaf987",
        "patch": "@@ -21,19 +21,17 @@ const std::string ExternalSigner::NetworkArg() const\n     return \" --chain \" + m_chain;\n }\n \n-bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain, bool ignore_errors)\n+bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain)\n {\n     // Call <command> enumerate\n     const UniValue result = RunCommandParseJSON(command + \" enumerate\");\n     if (!result.isArray()) {\n-        if (ignore_errors) return false;\n         throw ExternalSignerException(strprintf(\"'%s' received invalid response, expected array of signers\", command));\n     }\n     for (UniValue signer : result.getValues()) {\n         // Check for error\n         const UniValue& error = find_value(signer, \"error\");\n         if (!error.isNull()) {\n-            if (ignore_errors) return false;\n             if (!error.isStr()) {\n                 throw ExternalSignerException(strprintf(\"'%s' error\", command));\n             }\n@@ -42,7 +40,6 @@ bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalS\n         // Check if fingerprint is present\n         const UniValue& fingerprint = find_value(signer, \"fingerprint\");\n         if (fingerprint.isNull()) {\n-            if (ignore_errors) return false;\n             throw ExternalSignerException(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n         }\n         std::string fingerprintStr = fingerprint.get_str();"
      },
      {
        "sha": "02946b22a978f4f725b1dc4960c6ae9f834a4c27",
        "filename": "src/external_signer.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06a0673351282fff1673f3679a7cad9a7faaf987/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06a0673351282fff1673f3679a7cad9a7faaf987/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=06a0673351282fff1673f3679a7cad9a7faaf987",
        "patch": "@@ -52,7 +52,7 @@ class ExternalSigner\n     //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n     //! @param chain            \"main\", \"test\", \"regtest\" or \"signet\"\n     //! @returns success\n-    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain, bool ignore_errors = false);\n+    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain);\n \n     //! Display address on the device. Calls `<command> displayaddress --desc <descriptor>`.\n     //! @param[in] descriptor Descriptor specifying which address to display."
      }
    ]
  },
  {
    "sha": "aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWE0ZTVhNDViZDllYzU1NjNmZmE3YjllMGQ0NmQyZGUzY2I5MjQy",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T10:12:39Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:33Z"
      },
      "message": "wallet: remove CWallet::GetExternalSigner()",
      "tree": {
        "sha": "10114691d648b3c57af2f9889b800f378e873b16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10114691d648b3c57af2f9889b800f378e873b16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if0ACgkQLuufXMCV\nJsFnFxAArQZY+wpsF5c3Y9qK3crdglDNa5NdjdzuE7wxRT/Pk7fizD1GF+AOSEH2\ngfzjCHGoOpGsbMIreIzQtP6gH96n6aVHqns76F0AwmfZd0ZmNrREw/z8Roq7dC7u\n8+Wh1sWKLHCAbgWJa4iWyGqSg1ZNTPdNnJXtF/JJKK4GoXVZwl/1dGyju1r4hGQA\nL9lhrJi6iSbHBhXhudDo+Kiya39LLAvCmq2YOf9MVog4fE2v0H5w2M514b16wUdI\n5z2ySX9rXiS7IGOAwKYLrQdzAqbdXBJcKTTGoHM1lMPSGpD1XAXkWzE00YY44wxE\nI8lhREgqIfSS/RwyLo5LjhqzhptGV/pPVHOCuRCEYkDyFuV1YHcbbXo6a/SgOuRa\nenuF99T1Xl4OVhEsL1xYy6nwzUgRXmxupPsy/NoEYL3eO26vkI6fQJVsKoy6dRZ6\nHZDkQz68If8spAJmUbQTz13oIQcRxQW45q9MRkX8MOA8F/536NP11NutYslpEhgV\n7zmguldxY3+xCH9/vXyzJgcacD5mLb6bZSUFSIeeYZxkeMP1EQl8p9+0hIDwC79W\nTA0vSss9nmSSC+f7VYC1CScvXTPjk1F9rQqftxmYNt8NS45Ewaj6rDwgk5nRyJEe\nklGjRr4dNRFiBpd1BjQ1M0+9l8zesRB03O3JzOCwpyysmSM9PcI=\n=ytJp\n-----END PGP SIGNATURE-----",
        "payload": "tree 10114691d648b3c57af2f9889b800f378e873b16\nparent 06a0673351282fff1673f3679a7cad9a7faaf987\nauthor fanquake <fanquake@gmail.com> 1618308759 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315773 +0800\n\nwallet: remove CWallet::GetExternalSigner()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "06a0673351282fff1673f3679a7cad9a7faaf987",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06a0673351282fff1673f3679a7cad9a7faaf987",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/06a0673351282fff1673f3679a7cad9a7faaf987"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 1,
      "deletions": 17
    },
    "files": [
      {
        "sha": "332e7b1397d4b5bebc391340f31baf92130a4a54",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
        "patch": "@@ -3594,19 +3594,6 @@ void ReserveDestination::ReturnDestination()\n     address = CNoDestination();\n }\n \n-#ifdef ENABLE_EXTERNAL_SIGNER\n-ExternalSigner CWallet::GetExternalSigner()\n-{\n-    const std::string command = gArgs.GetArg(\"-signer\", \"\");\n-    if (command == \"\") throw std::runtime_error(std::string(__func__) + \": restart bitcoind with -signer=<cmd>\");\n-    std::vector<ExternalSigner> signers;\n-    ExternalSigner::Enumerate(command, signers, Params().NetworkIDString());\n-    if (signers.empty()) throw std::runtime_error(std::string(__func__) + \": No external signers found\");\n-    // TODO: add fingerprint argument in case of multiple signers\n-    return signers[0];\n-}\n-#endif\n-\n bool CWallet::DisplayAddress(const CTxDestination& dest)\n {\n #ifdef ENABLE_EXTERNAL_SIGNER\n@@ -3619,7 +3606,7 @@ bool CWallet::DisplayAddress(const CTxDestination& dest)\n     if (signer_spk_man == nullptr) {\n         return false;\n     }\n-    ExternalSigner signer = GetExternalSigner(); // TODO: move signer in spk_man\n+    ExternalSigner signer = ExternalSignerScriptPubKeyMan::GetExternalSigner();\n     return signer_spk_man->DisplayAddress(scriptPubKey, signer);\n #else\n     return false;"
      },
      {
        "sha": "c4acef8705fa21185c8a2056a93dbdf7ef55ef93",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
        "patch": "@@ -845,9 +845,6 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     std::vector<OutputGroup> GroupOutputs(const std::vector<COutput>& outputs, bool separate_coins, const CFeeRate& effective_feerate, const CFeeRate& long_term_feerate, const CoinEligibilityFilter& filter, bool positive_only) const;\n \n-#ifdef ENABLE_EXTERNAL_SIGNER\n-    ExternalSigner GetExternalSigner() EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-#endif\n     /** Display address on an external signer. Returns false if external signer support is not compiled */\n     bool DisplayAddress(const CTxDestination& dest) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n "
      }
    ]
  },
  {
    "sha": "9e0b199b976617edeb1c58d4203df5f83a26c1e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTBiMTk5Yjk3NjYxN2VkZWIxYzU4ZDQyMDNkZjVmODNhMjZjMWUz",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T11:41:50Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:34Z"
      },
      "message": "external_signer: use const where appropriate",
      "tree": {
        "sha": "484cc9e0faf1146d4e3d9d15d7518575c51ed53e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/484cc9e0faf1146d4e3d9d15d7518575c51ed53e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e0b199b976617edeb1c58d4203df5f83a26c1e3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if4ACgkQLuufXMCV\nJsE3/Q/+PG6zXqAj21dfyWRO6WMAbBS8eZGcqvwKdCT8t51T9e2jX1URjJPm3L95\nSTgptT19H/bG1dIO/GgWuAbCWDgJQK6+zKT5n066BRiPsOBlXTexKrKotpGRGDOZ\n1j17NMAGuuI+uTktS5saYvGM1ojwmYFoaBauBXBDj/MpmigXgkTM+M4QxRTkLWbk\nB5CER+BIDt5V+Z/N849dONGGuNo0h9OQRwmD8dfrg+O/3RHIP6l90kvq3oPbDpQd\nI5F7W1PNiYmM+Zi4zdmRoVvCQMG2OVAdBpZDKcEWgZS+u6SCk9cr6VMSl86/vLwe\njnyqdkRhNquVuux8LBvnYgEXkRK4g7LovHJZSOk8T/lVSlIIjANbEvVCnnUcOKUY\nQtsEglwR+AGfrbn+6O3pDleDfxkNIjTy//v13jPSbogtGpb7fChrIrTIORU/HJw+\nViStiFPDHMN0gTJu881rgrWTWnC+UgCPMcepauKvmYUH2ihpd6fU9gYNCNnOcmJq\nhqV431OkAjIYoLXeHUx3FkVWIeq5w0dOVx5bQ7UOiVVBa5qrfhRLFEh8zEIL/oHB\nVGWQMOje5RoAFvch7oKICpYkSV8Td1oAQ//fxg1LCW0jcx1JZD/Y7Y7JpJhb/Flm\nDL2PNxQLhHjZE5/JYOkofSsAyjQ+yR1ia3ZNJrYHC0ffwKGBiFc=\n=UbFU\n-----END PGP SIGNATURE-----",
        "payload": "tree 484cc9e0faf1146d4e3d9d15d7518575c51ed53e\nparent aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242\nauthor fanquake <fanquake@gmail.com> 1618314110 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315774 +0800\n\nexternal_signer: use const where appropriate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b199b976617edeb1c58d4203df5f83a26c1e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e0b199b976617edeb1c58d4203df5f83a26c1e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b199b976617edeb1c58d4203df5f83a26c1e3/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaa4e5a45bd9ec5563ffa7b9e0d46d2de3cb9242"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 13,
      "deletions": 13
    },
    "files": [
      {
        "sha": "9325daeab2176bfeffe8934988931b34f5a82357",
        "filename": "src/external_signer.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=9e0b199b976617edeb1c58d4203df5f83a26c1e3",
        "patch": "@@ -14,14 +14,14 @@\n \n #ifdef ENABLE_EXTERNAL_SIGNER\n \n-ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, std::string chain, std::string name): m_command(command), m_fingerprint(fingerprint), m_chain(chain), m_name(name) {}\n+ExternalSigner::ExternalSigner(const std::string& command, const std::string& fingerprint, const std::string chain, const std::string name): m_command(command), m_fingerprint(fingerprint), m_chain(chain), m_name(name) {}\n \n const std::string ExternalSigner::NetworkArg() const\n {\n     return \" --chain \" + m_chain;\n }\n \n-bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain)\n+bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, const std::string chain)\n {\n     // Call <command> enumerate\n     const UniValue result = RunCommandParseJSON(command + \" enumerate\");\n@@ -42,10 +42,10 @@ bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalS\n         if (fingerprint.isNull()) {\n             throw ExternalSignerException(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n         }\n-        std::string fingerprintStr = fingerprint.get_str();\n+        const std::string fingerprintStr = fingerprint.get_str();\n         // Skip duplicate signer\n         bool duplicate = false;\n-        for (ExternalSigner signer : signers) {\n+        for (const ExternalSigner& signer : signers) {\n             if (signer.m_fingerprint.compare(fingerprintStr) == 0) duplicate = true;\n         }\n         if (duplicate) break;\n@@ -64,7 +64,7 @@ UniValue ExternalSigner::DisplayAddress(const std::string& descriptor) const\n     return RunCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg() + \" displayaddress --desc \\\"\" + descriptor + \"\\\"\");\n }\n \n-UniValue ExternalSigner::GetDescriptors(int account)\n+UniValue ExternalSigner::GetDescriptors(const int account)\n {\n     return RunCommandParseJSON(m_command + \" --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg() + \" getdescriptors --account \" + strprintf(\"%d\", account));\n }\n@@ -79,7 +79,7 @@ bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::str\n     bool match = false;\n     for (unsigned int i = 0; i < psbtx.inputs.size(); ++i) {\n         const PSBTInput& input = psbtx.inputs[i];\n-        for (auto entry : input.hd_keypaths) {\n+        for (const auto& entry : input.hd_keypaths) {\n             if (m_fingerprint == strprintf(\"%08x\", ReadBE32(entry.second.fingerprint))) match = true;\n         }\n     }\n@@ -89,8 +89,8 @@ bool ExternalSigner::SignTransaction(PartiallySignedTransaction& psbtx, std::str\n         return false;\n     }\n \n-    std::string command = m_command + \" --stdin --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg();\n-    std::string stdinStr = \"signtx \\\"\" + EncodeBase64(ssTx.str()) + \"\\\"\";\n+    const std::string command = m_command + \" --stdin --fingerprint \\\"\" + m_fingerprint + \"\\\"\" + NetworkArg();\n+    const std::string stdinStr = \"signtx \\\"\" + EncodeBase64(ssTx.str()) + \"\\\"\";\n \n     const UniValue signer_result = RunCommandParseJSON(command, stdinStr);\n "
      },
      {
        "sha": "798662672efdf5c8558b22cd653af8cc16da528b",
        "filename": "src/external_signer.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=9e0b199b976617edeb1c58d4203df5f83a26c1e3",
        "patch": "@@ -34,7 +34,7 @@ class ExternalSigner\n     //! @param[in] fingerprint  master key fingerprint of the signer\n     //! @param[in] chain        \"main\", \"test\", \"regtest\" or \"signet\"\n     //! @param[in] name         device name\n-    ExternalSigner(const std::string& command, const std::string& fingerprint, std::string chain, std::string name);\n+    ExternalSigner(const std::string& command, const std::string& fingerprint, const std::string chain, const std::string name);\n \n     //! Master key fingerprint of the signer\n     std::string m_fingerprint;\n@@ -52,7 +52,7 @@ class ExternalSigner\n     //! @param[in,out] signers  vector to which new signers (with a unique master key fingerprint) are added\n     //! @param chain            \"main\", \"test\", \"regtest\" or \"signet\"\n     //! @returns success\n-    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, std::string chain);\n+    static bool Enumerate(const std::string& command, std::vector<ExternalSigner>& signers, const std::string chain);\n \n     //! Display address on the device. Calls `<command> displayaddress --desc <descriptor>`.\n     //! @param[in] descriptor Descriptor specifying which address to display.\n@@ -63,7 +63,7 @@ class ExternalSigner\n     //! Calls `<command> getdescriptors --account <account>`\n     //! @param[in] account  which BIP32 account to use (e.g. `m/44'/0'/account'`)\n     //! @returns see doc/external-signer.md\n-    UniValue GetDescriptors(int account);\n+    UniValue GetDescriptors(const int account);\n \n     //! Sign PartiallySignedTransaction on the device.\n     //! Calls `<command> signtransaction` and passes the PSBT via stdin."
      },
      {
        "sha": "08aa8d8dcb6775b9c2a5e6e50aa6faa8ffe73975",
        "filename": "src/rpc/external_signer.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/rpc/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e0b199b976617edeb1c58d4203df5f83a26c1e3/src/rpc/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/external_signer.cpp?ref=9e0b199b976617edeb1c58d4203df5f83a26c1e3",
        "patch": "@@ -38,12 +38,12 @@ static RPCHelpMan enumeratesigners()\n         {\n             const std::string command = gArgs.GetArg(\"-signer\", \"\");\n             if (command == \"\") throw JSONRPCError(RPC_MISC_ERROR, \"Error: restart bitcoind with -signer=<cmd>\");\n-            std::string chain = gArgs.GetChainName();\n+            const std::string chain = gArgs.GetChainName();\n             UniValue signers_res = UniValue::VARR;\n             try {\n                 std::vector<ExternalSigner> signers;\n                 ExternalSigner::Enumerate(command, signers, chain);\n-                for (ExternalSigner signer : signers) {\n+                for (const ExternalSigner& signer : signers) {\n                     UniValue signer_res = UniValue::VOBJ;\n                     signer_res.pushKV(\"fingerprint\", signer.m_fingerprint);\n                     signer_res.pushKV(\"name\", signer.m_name);"
      }
    ]
  },
  {
    "sha": "c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjOGY0NjljNmQ1MGE4ZGI2ZDkyZjBhZWQ0N2E1ZDFjYzgyZjMwZjdm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T11:55:59Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2021-04-13T12:09:34Z"
      },
      "message": "external_signer: remove ExternalSignerException\n\nIt's not clear why this need it's own exception class, as opposed to just\nthrowing std::runtime_error().",
      "tree": {
        "sha": "1a837e6e83ada96dfff569be2a6c31c38c80eeca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a837e6e83ada96dfff569be2a6c31c38c80eeca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAmB1if4ACgkQLuufXMCV\nJsHTxg/9EvP+iQ0vHl2CyxhPaKhIAIS8ntGYur1zjY/WQHV9w9VMWIkKQZy/hgX/\n9pL3jADnjJEn6NGVwJOFUIRVYrQEHVhOIidXrsjEbk7Lh/BoQQ9JLimnGRf2fyt9\nbTl/tsUJxZaXG+n3oQ4LQzPA2PElpHmgzb0tLHYPyCOvHYO5UI1Lo/Q51ZEnSiho\nJ7SofkkJP88jij580SZvML/ZkWdgqfgDcga5YVCS8Qc+YisoWOMNUkJyBASOP6tv\nQ00HZ7os1qeRUfCxpEGGjsMj4WVbPyGK0xDJ6YqlOrdo3HZ7WIBWvS36jxbKf0Sz\nRig9mI6WstgyedEhtrb4Xd/c/cOK4ziBL+IpGElWOeoxZd4+TWlJ9MrlfvYhuER/\ndaTJ+sjew6sQmZFbdDSGwT8pNhSpjGMu0wkxbAdczBD0kzVUfcQ2G3SV4QlLCy5a\n3bnF4dh5y0sE3msb2tXyhiW9fw+6I3sgSiPLqwoyHfK+PU7i6C/XaOW2SU7vA3Ms\nVWFM4fIu4mjYGNo0llqa44PUO4SiH7MYoYcB3pZK0yWL1dim+sMH0HwXhOji/ObT\nVX0qWZvz723QLscQdSgrZ4mmY7qEN6EQBBdMzIPmlp/+C4kwOiVa0kwFr9OANUgA\nyNHvf7yYuVAehj660c/+TvRww9uDVl1JPRSavQeR83S8lRJAvKA=\n=1y3p\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a837e6e83ada96dfff569be2a6c31c38c80eeca\nparent 9e0b199b976617edeb1c58d4203df5f83a26c1e3\nauthor fanquake <fanquake@gmail.com> 1618314959 +0800\ncommitter fanquake <fanquake@gmail.com> 1618315774 +0800\n\nexternal_signer: remove ExternalSignerException\n\nIt's not clear why this need it's own exception class, as opposed to just\nthrowing std::runtime_error().\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e0b199b976617edeb1c58d4203df5f83a26c1e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e0b199b976617edeb1c58d4203df5f83a26c1e3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e0b199b976617edeb1c58d4203df5f83a26c1e3"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 6,
      "deletions": 11
    },
    "files": [
      {
        "sha": "f16d21fa60cacbe52601e02ed8508c4d215f3f5b",
        "filename": "src/external_signer.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.cpp?ref=c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
        "patch": "@@ -9,6 +9,7 @@\n #include <util/system.h>\n #include <external_signer.h>\n \n+#include <stdexcept>\n #include <string>\n #include <vector>\n \n@@ -26,21 +27,21 @@ bool ExternalSigner::Enumerate(const std::string& command, std::vector<ExternalS\n     // Call <command> enumerate\n     const UniValue result = RunCommandParseJSON(command + \" enumerate\");\n     if (!result.isArray()) {\n-        throw ExternalSignerException(strprintf(\"'%s' received invalid response, expected array of signers\", command));\n+        throw std::runtime_error(strprintf(\"'%s' received invalid response, expected array of signers\", command));\n     }\n     for (UniValue signer : result.getValues()) {\n         // Check for error\n         const UniValue& error = find_value(signer, \"error\");\n         if (!error.isNull()) {\n             if (!error.isStr()) {\n-                throw ExternalSignerException(strprintf(\"'%s' error\", command));\n+                throw std::runtime_error(strprintf(\"'%s' error\", command));\n             }\n-            throw ExternalSignerException(strprintf(\"'%s' error: %s\", command, error.getValStr()));\n+            throw std::runtime_error(strprintf(\"'%s' error: %s\", command, error.getValStr()));\n         }\n         // Check if fingerprint is present\n         const UniValue& fingerprint = find_value(signer, \"fingerprint\");\n         if (fingerprint.isNull()) {\n-            throw ExternalSignerException(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n+            throw std::runtime_error(strprintf(\"'%s' received invalid response, missing signer fingerprint\", command));\n         }\n         const std::string fingerprintStr = fingerprint.get_str();\n         // Skip duplicate signer"
      },
      {
        "sha": "b3b202091a645078daa39c5d239377008a01b272",
        "filename": "src/external_signer.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/external_signer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/external_signer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/external_signer.h?ref=c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
        "patch": "@@ -8,19 +8,13 @@\n #include <univalue.h>\n #include <util/system.h>\n \n-#include <stdexcept>\n #include <string>\n #include <vector>\n \n #ifdef ENABLE_EXTERNAL_SIGNER\n \n struct PartiallySignedTransaction;\n \n-class ExternalSignerException : public std::runtime_error {\n-public:\n-    using std::runtime_error::runtime_error;\n-};\n-\n //! Enables interaction with an external signing device or service, such as\n //! a hardware wallet. See doc/external-signer.md\n class ExternalSigner"
      },
      {
        "sha": "6ec2b1a07f8f2c3da6a720000673e14b7a705ec7",
        "filename": "src/rpc/external_signer.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/rpc/external_signer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f/src/rpc/external_signer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/external_signer.cpp?ref=c8f469c6d50a8db6d92f0aed47a5d1cc82f30f7f",
        "patch": "@@ -49,7 +49,7 @@ static RPCHelpMan enumeratesigners()\n                     signer_res.pushKV(\"name\", signer.m_name);\n                     signers_res.push_back(signer_res);\n                 }\n-            } catch (const ExternalSignerException& e) {\n+            } catch (const std::exception& e) {\n                 throw JSONRPCError(RPC_MISC_ERROR, e.what());\n             }\n             UniValue result(UniValue::VOBJ);"
      }
    ]
  }
]