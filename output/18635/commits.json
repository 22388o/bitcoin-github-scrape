[
  {
    "sha": "79be4874209f71ba6428a80c40c9f028ac936c41",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3OWJlNDg3NDIwOWY3MWJhNjQyOGE4MGM0MGM5ZjAyOGFjOTM2YzQx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:32:21Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:54:09Z"
      },
      "message": "Add thread safety annotated wrapper for std::mutex\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>",
      "tree": {
        "sha": "67705aa6de8960a452eaa2a4ecf3b44d5b7b2a4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/67705aa6de8960a452eaa2a4ecf3b44d5b7b2a4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/79be4874209f71ba6428a80c40c9f028ac936c41",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7PYBEACgkQQQEIES5+\nqB/J3w/+M6FiFCrXXiuKCjlEXXOuse7TgWlldh4gvl8E71ISCEL8u4DP03vY/+1p\n48q342R9l6XNrQKAKjA9mA0C8OttKfT5OWp7/zaE6wKSBGY9b4pT7ekpw+dRzM2n\nbMnvJCANfjsG+G02ry84wkRULvH1dZKwaIu+yXSoTwASnjZhyoFHfzNnjBDNL2wQ\nBfhnBqsMIcaScJ0fgcISlpt45jsNVWNR0CeDXHKaVH2DgCw/+eJRaTE1zwkVRvt6\nSfGuutN2fhN20mlbKiB8tm7H74YkCGlq1P2zKFS9c9Uq/9vArTQ10VTkgQ7Sqn3s\n968vFu+vyhsPxBWOzYSUKtG3Om/Q7mMtZy2FGov0RyQeJ9SdNH4kZuoGIAfvr+qg\num3fks65YKWh2RNV/Jd3L+IOijPy0p5DHEISFXlHXeFCjpCG+4Vegeyb7rX78di8\nZRFpgBl7X+XF/lw3nl1yc/gruWz3fGnd/sFVhUES8/UMorcOkimP8ibIGqgJ4hiF\n5JXXE27lT9OQh/6wxJzEoIruAkNYqm2He7vSpy/AvZQPSU+9A1Id2wCfI2LhtoSF\nuuZs6mFr93adSXdSQ5mUgqBTTiojQjg9dTJWWWRTUAtJn6ecVB1WF+RPA18p0Xmu\nLv8odiHhNDKGaRg45FW1NW1s0qshH0ot969TDANwnwq4cDfJX7M=\n=Yk9X\n-----END PGP SIGNATURE-----",
        "payload": "tree 67705aa6de8960a452eaa2a4ecf3b44d5b7b2a4c\nparent 55b4c65bd1d829e799db7fe75fab88691830de43\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590647541 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648849 +0300\n\nAdd thread safety annotated wrapper for std::mutex\n\nCo-authored-by: Anthony Towns <aj@erisian.com.au>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79be4874209f71ba6428a80c40c9f028ac936c41",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/79be4874209f71ba6428a80c40c9f028ac936c41",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79be4874209f71ba6428a80c40c9f028ac936c41/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55b4c65bd1d829e799db7fe75fab88691830de43",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55b4c65bd1d829e799db7fe75fab88691830de43",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55b4c65bd1d829e799db7fe75fab88691830de43"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 9,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2bd8f2683cbf2f64fdd7348c1cd5b0aaa091acbd",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79be4874209f71ba6428a80c40c9f028ac936c41/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79be4874209f71ba6428a80c40c9f028ac936c41/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=79be4874209f71ba6428a80c40c9f028ac936c41",
        "patch": "@@ -62,7 +62,7 @@ namespace BCLog {\n     class Logger\n     {\n     private:\n-        mutable std::mutex m_cs;                   // Can not use Mutex from sync.h because in debug mode it would cause a deadlock when a potential deadlock was detected\n+        mutable StdMutex m_cs; // Can not use Mutex from sync.h because in debug mode it would cause a deadlock when a potential deadlock was detected\n \n         FILE* m_fileout GUARDED_BY(m_cs) = nullptr;\n         std::list<std::string> m_msgs_before_open GUARDED_BY(m_cs);"
      },
      {
        "sha": "404ecafebb408d7a123bada97fce44d70e68945b",
        "filename": "src/threadsafety.h",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/79be4874209f71ba6428a80c40c9f028ac936c41/src/threadsafety.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/79be4874209f71ba6428a80c40c9f028ac936c41/src/threadsafety.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadsafety.h?ref=79be4874209f71ba6428a80c40c9f028ac936c41",
        "patch": "@@ -56,12 +56,18 @@\n #define ASSERT_EXCLUSIVE_LOCK(...)\n #endif // __GNUC__\n \n+// StdMutex provides an annotated version of std::mutex for us,\n+// and should only be used when sync.h Mutex/LOCK/etc are not usable.\n+class LOCKABLE StdMutex : public std::mutex\n+{\n+};\n+\n // LockGuard provides an annotated version of lock_guard for us\n // should only be used when sync.h Mutex/LOCK/etc aren't usable\n-class SCOPED_LOCKABLE LockGuard : public std::lock_guard<std::mutex>\n+class SCOPED_LOCKABLE LockGuard : public std::lock_guard<StdMutex>\n {\n public:\n-    explicit LockGuard(std::mutex& cs) EXCLUSIVE_LOCK_FUNCTION(cs) : std::lock_guard<std::mutex>(cs) { }\n+    explicit LockGuard(StdMutex& cs) EXCLUSIVE_LOCK_FUNCTION(cs) : std::lock_guard<StdMutex>(cs) {}\n     ~LockGuard() UNLOCK_FUNCTION() {};\n };\n "
      }
    ]
  },
  {
    "sha": "dfb75ae49d4d617ec02188a6f449e8b8015ad467",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmI3NWFlNDlkNGQ2MTdlYzAyMTg4YTZmNDQ5ZThiODAxNWFkNDY3",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:42:26Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:54:24Z"
      },
      "message": "refactor: Rename LockGuard to StdLockGuard for consistency with StdMutex",
      "tree": {
        "sha": "f891be07f0a9a617fc086317e24b32fe03b1b13b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f891be07f0a9a617fc086317e24b32fe03b1b13b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfb75ae49d4d617ec02188a6f449e8b8015ad467",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7PYCAACgkQQQEIES5+\nqB+r+A//T9Zq2WOev3emmrtjngW1vSCmFWIMFTFjzXsetFrduYawgisIZmIaZZRL\nhDo60yk2kClgqbRTQPQQImBFksDxlu0M6lPx4asLe1n10mK0pPKbJGCTzmjYKGb3\nAhSVb51XT2DQk8JyACflhEvnGYNbDxSmT7d3r6FeKrmik4NqRHYZgEtRf6zZ8Wjw\njN/aFWN9a6/sN/pHEyJwbVP5q8mnvOKhRUIwILlauTiAUiKb6nPMq4vJR+J6fCLN\nsYDOoLjb1j/IFTpuj9+EmAGsYSfGE919Y/sJsRe18uCn1RtGxUOgNacEpI2BB3gl\n/gtIHjN8TZSgIbzmUVN5z+hME0b2D6Dk4Qxq/DkBaWhOL/cUstEVpNWnYWE5R0K3\nzxO3MvUfTE7hWNQnzmMLQhLzk/WG2saxAiXSjOA+RuSuJDXPQmDgdwtJfWNVsAB7\n6HTXX3ptnskw4tQOYZULJkCs46Qvu5L+VEp6NEhASeyLTHfzf9Exbs/AcuHLz6Ib\na/LK+allqIi5P54s/qHgoBiSYuGdk0yn6xsy+B1PFtvfOKQBAnjkU2M/z8KLGY+r\n2EDqNy+sKXmLKn5yBaL92MGDwp6lifoU6b1es47LZL+SqgcOK17/mfdU5USV0SWQ\nfiUcH4Bh+Z050JujFmV/du3XLAxonsHnol0skeYFfrBL6cTOqEI=\n=o0YP\n-----END PGP SIGNATURE-----",
        "payload": "tree f891be07f0a9a617fc086317e24b32fe03b1b13b\nparent 79be4874209f71ba6428a80c40c9f028ac936c41\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648146 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648864 +0300\n\nrefactor: Rename LockGuard to StdLockGuard for consistency with StdMutex\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfb75ae49d4d617ec02188a6f449e8b8015ad467",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfb75ae49d4d617ec02188a6f449e8b8015ad467",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfb75ae49d4d617ec02188a6f449e8b8015ad467/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "79be4874209f71ba6428a80c40c9f028ac936c41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/79be4874209f71ba6428a80c40c9f028ac936c41",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/79be4874209f71ba6428a80c40c9f028ac936c41"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "fe58ae9e73e47bf1dab3783b43748c24c67bcd85",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=dfb75ae49d4d617ec02188a6f449e8b8015ad467",
        "patch": "@@ -41,7 +41,7 @@ static int FileWriteStr(const std::string &str, FILE *fp)\n \n bool BCLog::Logger::StartLogging()\n {\n-    LockGuard scoped_lock(m_cs);\n+    StdLockGuard scoped_lock(m_cs);\n \n     assert(m_buffering);\n     assert(m_fileout == nullptr);\n@@ -80,7 +80,7 @@ bool BCLog::Logger::StartLogging()\n \n void BCLog::Logger::DisconnectTestLogger()\n {\n-    LockGuard scoped_lock(m_cs);\n+    StdLockGuard scoped_lock(m_cs);\n     m_buffering = true;\n     if (m_fileout != nullptr) fclose(m_fileout);\n     m_fileout = nullptr;\n@@ -246,7 +246,7 @@ namespace BCLog {\n \n void BCLog::Logger::LogPrintStr(const std::string& str)\n {\n-    LockGuard scoped_lock(m_cs);\n+    StdLockGuard scoped_lock(m_cs);\n     std::string str_prefixed = LogEscapeMessage(str);\n \n     if (m_log_threadnames && m_started_new_line) {"
      },
      {
        "sha": "7e646ef67a619fa9159220e0756b692a39a5faea",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=dfb75ae49d4d617ec02188a6f449e8b8015ad467",
        "patch": "@@ -100,22 +100,22 @@ namespace BCLog {\n         /** Returns whether logs will be written to any output */\n         bool Enabled() const\n         {\n-            LockGuard scoped_lock(m_cs);\n+            StdLockGuard scoped_lock(m_cs);\n             return m_buffering || m_print_to_console || m_print_to_file || !m_print_callbacks.empty();\n         }\n \n         /** Connect a slot to the print signal and return the connection */\n         std::list<std::function<void(const std::string&)>>::iterator PushBackCallback(std::function<void(const std::string&)> fun)\n         {\n-            LockGuard scoped_lock(m_cs);\n+            StdLockGuard scoped_lock(m_cs);\n             m_print_callbacks.push_back(std::move(fun));\n             return --m_print_callbacks.end();\n         }\n \n         /** Delete a connection */\n         void DeleteCallback(std::list<std::function<void(const std::string&)>>::iterator it)\n         {\n-            LockGuard scoped_lock(m_cs);\n+            StdLockGuard scoped_lock(m_cs);\n             m_print_callbacks.erase(it);\n         }\n "
      },
      {
        "sha": "942aa3fdcdb3b45bd857be604b300f325e38f08a",
        "filename": "src/threadsafety.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/threadsafety.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfb75ae49d4d617ec02188a6f449e8b8015ad467/src/threadsafety.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/threadsafety.h?ref=dfb75ae49d4d617ec02188a6f449e8b8015ad467",
        "patch": "@@ -62,13 +62,13 @@ class LOCKABLE StdMutex : public std::mutex\n {\n };\n \n-// LockGuard provides an annotated version of lock_guard for us\n-// should only be used when sync.h Mutex/LOCK/etc aren't usable\n-class SCOPED_LOCKABLE LockGuard : public std::lock_guard<StdMutex>\n+// StdLockGuard provides an annotated version of std::lock_guard for us,\n+// and should only be used when sync.h Mutex/LOCK/etc are not usable.\n+class SCOPED_LOCKABLE StdLockGuard : public std::lock_guard<StdMutex>\n {\n public:\n-    explicit LockGuard(StdMutex& cs) EXCLUSIVE_LOCK_FUNCTION(cs) : std::lock_guard<StdMutex>(cs) {}\n-    ~LockGuard() UNLOCK_FUNCTION() {};\n+    explicit StdLockGuard(StdMutex& cs) EXCLUSIVE_LOCK_FUNCTION(cs) : std::lock_guard<StdMutex>(cs) {}\n+    ~StdLockGuard() UNLOCK_FUNCTION() {}\n };\n \n #endif // BITCOIN_THREADSAFETY_H"
      }
    ]
  },
  {
    "sha": "971a468ccf0474ca00fa7d20278569b8fb11f0fb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NzFhNDY4Y2NmMDQ3NGNhMDBmYTdkMjAyNzg1NjliOGZiMTFmMGZi",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:55:04Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:55:04Z"
      },
      "message": "Use template function instead of void* parameter\n\nThis change gets rid of -Wthread-safety-attributes warning spam.",
      "tree": {
        "sha": "c2e37c99581fee3f716fe77faee3921b63969cb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2e37c99581fee3f716fe77faee3921b63969cb4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/971a468ccf0474ca00fa7d20278569b8fb11f0fb",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7PYEgACgkQQQEIES5+\nqB+GHhAAmCmQ1BgHSMLgZTKQ+7SoiTUW72mMDFXNtMELa+3wm5yQdhM3NK81Qlxs\n5IJvJprsi5eloNpd3OBJRCinpSbxSomHe9wWu0J2tTkOmJrXBCCvbaljNA3IrUDv\nsdy8T+TB1/9t0LzLVSVeJuGwtvC8UDHHSvdULPZlARqrq5oUVX7KwzgZ/uOAFpGe\nMD0aWMQfLV+WIJZ4jRd7N8or5Sbi5yXrg/Vusy/4EMx4t6K++sDDKq77b2g1bWE9\n/+rynE2WWAllAvwi8X2HmrewnzwhfB1qhtFrogG+cATCypnAsEbhDXNJWNu15LRb\nioqjhPJ3GGP03NFPsErSpeZY/97w1UgECqS88hLUpeCWh7UlOJvJSK/sHgRP3DYl\n6oLkpmpQkoFlw8DpM/Uc/TN6cRb0oREPlviMwFpCC5JSk+IRla9e0h6EwUH/slI4\nJYihlYGLP52RAyESsAmro9ibeSv1SBekPqQNasMs4XjhVE53HwTQx6ZK47vRdiqs\nIUcMEA/B/v8KqKhRQshT1BOGiF3+ZTOwO94EeeFhcNpAUlxlMqGMuzHfZorWEmhV\n25eo+fdvmury+Yom6E7CFf/+qeZzt9LYfJOGHwHtpTKEhEAdtgxnX75k0WgJv3tB\nIVFHozxUOVgG4ptaqJWlki8MuxUtUlKCf3UjFsjcUpPFYkgnsFE=\n=TYqX\n-----END PGP SIGNATURE-----",
        "payload": "tree c2e37c99581fee3f716fe77faee3921b63969cb4\nparent dfb75ae49d4d617ec02188a6f449e8b8015ad467\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648904 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648904 +0300\n\nUse template function instead of void* parameter\n\nThis change gets rid of -Wthread-safety-attributes warning spam.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a468ccf0474ca00fa7d20278569b8fb11f0fb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/971a468ccf0474ca00fa7d20278569b8fb11f0fb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a468ccf0474ca00fa7d20278569b8fb11f0fb/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfb75ae49d4d617ec02188a6f449e8b8015ad467",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfb75ae49d4d617ec02188a6f449e8b8015ad467",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfb75ae49d4d617ec02188a6f449e8b8015ad467"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 8,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9abdedbed4231841ef7c18f33f6cd1f76dcf451e",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/971a468ccf0474ca00fa7d20278569b8fb11f0fb/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/971a468ccf0474ca00fa7d20278569b8fb11f0fb/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=971a468ccf0474ca00fa7d20278569b8fb11f0fb",
        "patch": "@@ -219,12 +219,15 @@ static bool LockHeld(void* mutex)\n     return false;\n }\n \n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+template <typename MutexType>\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs)\n {\n     if (LockHeld(cs)) return;\n     tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n     abort();\n }\n+template void AssertLockHeldInternal(const char*, const char*, int, Mutex*);\n+template void AssertLockHeldInternal(const char*, const char*, int, RecursiveMutex*);\n \n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n {"
      },
      {
        "sha": "60e5a87aec138c73a3190215a66c5d5383682ebb",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/971a468ccf0474ca00fa7d20278569b8fb11f0fb/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/971a468ccf0474ca00fa7d20278569b8fb11f0fb/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=971a468ccf0474ca00fa7d20278569b8fb11f0fb",
        "patch": "@@ -52,7 +52,8 @@ void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs\n void LeaveCritical();\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\n std::string LocksHeld();\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n+template <typename MutexType>\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\n void DeleteLock(void* cs);\n \n@@ -66,7 +67,8 @@ extern bool g_debug_lockorder_abort;\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\n void static inline LeaveCritical() {}\n void static inline CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line) {}\n-void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n+template <typename MutexType>\n+void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\n void static inline AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\n void static inline DeleteLock(void* cs) {}\n #endif"
      }
    ]
  },
  {
    "sha": "9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2M2ZWIzYzllMGViMWQ1YmUyNmZiODFjYzU1OTVjMTMxZmVjOGY0",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:55:39Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:55:39Z"
      },
      "message": "Get rid of -Wthread-safety-precise warnings",
      "tree": {
        "sha": "c0aa1be553ac3713d8832edb6eeba7a08b223360",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0aa1be553ac3713d8832edb6eeba7a08b223360"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7PYGsACgkQQQEIES5+\nqB9wNBAAmEnDjjITwE9dviIYhi6KsSX4Ow/lTFIAgGkNNSKVHWT+OHPNsDX0tcku\nkYENXkjyeWSyq51FD/nkjNaI2i391dCh0XwOMM0GvnAGUh79CUv96t/f3k1kG8an\nr1jo1HQ6asuVe0TY4edP3QF5aVgfbYPWWTFMsuvqOAG0N7GQ8Wlj7FMZV1axTiHE\ntDGUHpiZ2BBLw90ASwygnDhU4nWM2ZXjZ5KjvIOXY9/pxp7VmfeJqYvjsPG+QM8U\nLO4XhdpKF65J5QuykC+f3Nw9n11gqHOBWHcb/y+Z9vBhZL8IGf/lqGKn8FzsKa3n\noKk+pVUoxGQbaFYiQa+1Xfx+GHrWyOEvHI3bH9JqBq+vUeIbHs7EAR2ehNkO6NkA\nI6jgnoTwhRFh+py86N6stVqokI1ZqKkBLVxUIZIOVotgVLZfoieI0yZXSBrffCag\nrpBjIBS0JfXWJVfv/90YmTvDpBkmZPTjdVXYGfMzTboJVkLl6f+RYhkYCx/HyidI\nN3G3+tWtgmxbRyWYLMm0JuZIikFHsbx0GBUTVjFIgR2oq017ST5QcmIEuTd03DO4\n5e+yssUS2HNl02g+73isB/9RKruP3f5cbQDPRFmOE1eR2luaHRV9s+Hnyg4PvKtr\nkDnd14weSMGqAzXS42LGZVaqbDjFRN4DRqkGPrmiMKZcU8vF3Os=\n=rPGv\n-----END PGP SIGNATURE-----",
        "payload": "tree c0aa1be553ac3713d8832edb6eeba7a08b223360\nparent 971a468ccf0474ca00fa7d20278569b8fb11f0fb\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648939 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590648939 +0300\n\nGet rid of -Wthread-safety-precise warnings\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "971a468ccf0474ca00fa7d20278569b8fb11f0fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/971a468ccf0474ca00fa7d20278569b8fb11f0fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/971a468ccf0474ca00fa7d20278569b8fb11f0fb"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 6,
      "deletions": 7
    },
    "files": [
      {
        "sha": "a47709cd82c81fed369c2125bdbfbac6366b433a",
        "filename": "src/blockencodings.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/blockencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/blockencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.cpp?ref=9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
        "patch": "@@ -105,13 +105,12 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n     std::vector<bool> have_txn(txn_available.size());\n     {\n     LOCK(pool->cs);\n-    const std::vector<std::pair<uint256, CTxMemPool::txiter> >& vTxHashes = pool->vTxHashes;\n-    for (size_t i = 0; i < vTxHashes.size(); i++) {\n-        uint64_t shortid = cmpctblock.GetShortID(vTxHashes[i].first);\n+    for (size_t i = 0; i < pool->vTxHashes.size(); i++) {\n+        uint64_t shortid = cmpctblock.GetShortID(pool->vTxHashes[i].first);\n         std::unordered_map<uint64_t, uint16_t>::iterator idit = shorttxids.find(shortid);\n         if (idit != shorttxids.end()) {\n             if (!have_txn[idit->second]) {\n-                txn_available[idit->second] = vTxHashes[i].second->GetSharedTx();\n+                txn_available[idit->second] = pool->vTxHashes[i].second->GetSharedTx();\n                 have_txn[idit->second]  = true;\n                 mempool_count++;\n             } else {"
      },
      {
        "sha": "326db1b4a7c4745b146477e52982d741dfe09cbc",
        "filename": "src/blockencodings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/blockencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/blockencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/blockencodings.h?ref=9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
        "patch": "@@ -126,7 +126,7 @@ class PartiallyDownloadedBlock {\n protected:\n     std::vector<CTransactionRef> txn_available;\n     size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;\n-    CTxMemPool* pool;\n+    const CTxMemPool* pool;\n public:\n     CBlockHeader header;\n     explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}"
      },
      {
        "sha": "d5f6d63a46ee802dd4ff185dd58ba334e6e35014",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
        "patch": "@@ -746,7 +746,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n     // the user could have gotten from another RPC command prior to now\n     wallet.BlockUntilSyncedToCurrentChain();\n \n-    LOCK2(pwallet->cs_wallet, spk_man.cs_KeyStore);\n+    LOCK2(wallet.cs_wallet, spk_man.cs_KeyStore);\n \n     EnsureWalletIsUnlocked(&wallet);\n \n@@ -769,7 +769,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n \n     std::map<CKeyID, int64_t> mapKeyBirth;\n     const std::map<CKeyID, int64_t>& mapKeyPool = spk_man.GetAllReserveKeys();\n-    pwallet->GetKeyBirthTimes(mapKeyBirth);\n+    wallet.GetKeyBirthTimes(mapKeyBirth);\n \n     std::set<CScriptID> scripts = spk_man.GetCScripts();\n "
      }
    ]
  },
  {
    "sha": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Nzc2NmIzNTVjNDdmY2IwZjBkY2YzZjZmZTM1OWViMDAyMjdkNTBj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:56:44Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-28T06:56:44Z"
      },
      "message": "build: Replace -Wthread-safety-analysis with broader -Wthread-safety",
      "tree": {
        "sha": "737b93fee1e6a393a63fcaabe99c03be71819d3e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/737b93fee1e6a393a63fcaabe99c03be71819d3e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7PYKwACgkQQQEIES5+\nqB+uAA/7BbpQlqpi3xBwDRsk3tYYo6x0Sol4Q/K3ufpLUKIJcbDzIecyh21W76ng\nc1Gi6txdI47OOlFgNVokITEa8mK+tW5P5E7dRWzI0Dmj4ElQIP1cxG35qYxMgipN\nhhCeER1ZgJJnxcN3pWII+s4QoRP1NEPdFVm2r4Fwr+uY4hqDQHru4tISQxAcIzYy\n5eOaFzsXG9fM39XnwRjLcSpGTu5xzVvESKKzO0hZOZReqL9ORwxQysv+E++v+f4w\nAf+p/oy/1gQIOSkUJm439S+jJufhbaOuQesM981nyyYE5zGdGb4g4IbObhGZav02\nQti5WIWLOruiobMidpKius/QNLWaKg+4Nr3lVkjCxGxGrADHBz23Ewh3TKIsrFo6\nmysQHTnWU96yIP9zRDGP5x2LMARlaDo0H1Orb9Ebhw2LM91izCbAhWYpcJgQxJna\ny7US55yKvlDQlz/Y8Om9m8d2V2AD+djkdaT5VT/sKWJ/gOPaAzEYg6q8NtDYd50E\nIVeU6KiBPv/YJOTTcqhhPxiYe78ox/v1pUwkrskb84BkcyCfH2Z/MDj1VaQNzc02\np24UfdO5VFcti/jE2JV6+q3QHk4JK3f8ejCK/RR1XXsY+jNLZOHLDMEYtDmdIvRu\nj7psBsKpdpQlzAtRxTM4dICiTI0Rx6FbpskQrlBZoRMvbcy7NRY=\n=wEqC\n-----END PGP SIGNATURE-----",
        "payload": "tree 737b93fee1e6a393a63fcaabe99c03be71819d3e\nparent 9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590649004 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590649004 +0300\n\nbuild: Replace -Wthread-safety-analysis with broader -Wthread-safety\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/87766b355c47fcb0f0dcf3f6fe359eb00227d50c/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9cc6eb3c9e0eb1d5be26fb81cc5595c131fec8f4"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "28015d005de0f462f2c70174ec5c18a3d97a48d4",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/87766b355c47fcb0f0dcf3f6fe359eb00227d50c/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/87766b355c47fcb0f0dcf3f6fe359eb00227d50c/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
        "patch": "@@ -381,7 +381,7 @@ if test \"x$enable_werror\" = \"xyes\"; then\n   AX_CHECK_COMPILE_FLAG([-Werror=gnu],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=gnu\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\n@@ -401,7 +401,7 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\n-  AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])"
      }
    ]
  }
]