hebasto,2020-05-07 07:47:54,"@ajtowns \n> It's not clear to me what the value of adding `-Wthread-safety-attributes` is, but better typing makes sense in general to me.\n\nFrom the Thread Safety Analysis [docs](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#warning-flags):\n> `-Wthread-safety-attributes`: Sanity checks on attribute syntax.",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-625090321,625090321,
vasild,2020-05-07 10:09:06,"Concept ACK\n\nI confirm that if `master` (3b1e28924) is compiled with `-Wthread-safety-attributes` then some warnings are shown. This patch fixes all such warnings (Clang 11, FreeBSD 12).\n\nI agree with @ajtowns that it would be better to use a template than duplicating the function body. Further, instead of `template<typename PARENT>` / `AnnotatedMixin<PARENT>* cs` we can use `template <typ",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-625160150,625160150,
hebasto,2020-05-09 09:13:23,"Updated:\n- addressed @ajtowns's and @vasild's comments\n- rebased\n- added two commits that allow to replace `-Wthread-safety-analysis` with broader `-Wthread-safety`\n\nThe OP has been updated.",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492,626134492,
DrahtBot,2020-05-09 19:21:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18882 (build: fix -Wformat-security check when compiling with GCC by fanquake)\n* #18857 (build: avoid repetitions when e",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626223649,626223649,
hebasto,2020-05-10 05:29:38,"Updated 6bc97d0f860b52933b5664386576876d61ae228c -> 7a54927d2f068fef1638b3f6e3f5d7b52be22edf ([pr18635.03](https://github.com/hebasto/bitcoin/commits/pr18635.03) -> [pr18635.04](https://github.com/hebasto/bitcoin/commits/pr18635.04), [diff](https://github.com/hebasto/bitcoin/compare/pr18635.03..pr18635.04)):\n\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/18635#dis",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626276045,626276045,
ajtowns,2020-05-12 06:46:33,"@hebasto Yeah, I saw the ""sanity check"" description, but it's still not clear to me what that actually means. Changes for precise look good to me.",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-627147293,627147293,
ajtowns,2020-05-19 07:37:37,"Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `std::mutex` instances in order to do thread safety analysis on them. Adding `class LOCKABLE StdMutex : public std::mutex { };` and having #16127's `LockGuard` refer to that instead of `std::mutex` seems to be sufficient to resolve the conflict, I think.",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-630643329,630643329,
hebasto,2020-05-19 07:50:25,"> Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `std::mutex` instances in order to do thread safety analysis on them. Adding `class LOCKABLE StdMutex : public std::mutex { };` and having #16127's `LockGuard` refer to that instead of `std::mutex` seems to be sufficient to resolve the conflict, I think.\n\nAgree. Hope #16",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-630649278,630649278,
hebasto,2020-05-26 14:26:23,Rebased 7a54927d2f068fef1638b3f6e3f5d7b52be22edf -> 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc ([pr18635.04](https://github.com/hebasto/bitcoin/commits/pr18635.04) -> [pr18635.05](https://github.com/hebasto/bitcoin/commits/pr18635.05)) due to the conflict with #18881.,https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-634059310,634059310,
practicalswift,2020-05-27 19:30:03,"ACK 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc: patch looks correct, and more compile-time checking is better! :)",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-634892549,634892549,
ajtowns,2020-05-28 02:28:18,Needs update now that #16127 is merged,https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635056617,635056617,
hebasto,2020-05-28 07:05:38,"Rebased 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc -> 87766b355c47fcb0f0dcf3f6fe359eb00227d50c ([pr18635.05](https://github.com/hebasto/bitcoin/commits/pr18635.05) -> [pr18635.06](https://github.com/hebasto/bitcoin/commits/pr18635.06)) due to the conflict with #16127:\n\n> Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `st",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635150663,635150663,
practicalswift,2020-05-28 10:04:36,ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635246062,635246062,
ajtowns,2020-05-28 11:26:21,ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c,https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635281663,635281663,
MarcoFalke,2020-05-28 14:47:34,"ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c üëç\n\n<details><summary>Show signature and timestamp</summary>\n\nSignature:\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c üëç\n-----BEGIN PGP SIGNATURE-----\n\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUi4iAwAg0uiwOcah5mJaVzZrOWF2rtKNZTQjr+KEZxWCBRuq1Q+GLJ7Ds",https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635397316,635397316,
ajtowns,2020-05-07 03:30:00,"Rather than duplicating the function, you can use a template:\n\n```c++\ntemplate<typename PARENT>\nvoid AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, AnnotatedMixin<PARENT>* cs)\n{ ... }\n\ntemplate void AssertLockHeldInternal(const char*, const char*, int, Mutex*);\ntemplate void AssertLockHeldInternal(const char*, const char*, int, RecursiveMutex*);\n```\",https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218027,421218027,src/sync.cpp
ajtowns,2020-05-07 03:31:25,No need to repeat the definitions of `Mutex` and `RecursiveMutex` after you added the definitions above.,https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218377,421218377,src/sync.h
vasild,2020-05-07 10:16:06,"Right, in `C` the ""any type"" is `void*`, whereas in `C++` we have templates.\n\nThat `void*` typecast at the bottom of the comment above is like sweeping it under the carpet and it still leaves the possibility to use `AssertLockHeldInternal()` in a type unsafe way (because it takes `void*` argument).",https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421395808,421395808,src/sync.cpp
hebasto,2020-05-09 09:17:11,[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492).,https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473651,422473651,src/sync.cpp
hebasto,2020-05-09 09:17:25,[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492).,https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473682,422473682,src/sync.h
MarcoFalke,2020-05-09 13:54:28,"Since you are touching all the lines where `pool` is used anyway, mind to make it const, since the access is read-only?\n\n\n```diff\ndiff --git a/src/blockencodings.h b/src/blockencodings.h\nindex 377ac3a1a6..6efcc8c9c9 100644\n--- a/src/blockencodings.h\n+++ b/src/blockencodings.h\n@@ -125,7 +125,8 @@ class PartiallyDownloadedBlock {\n protected:\n     std::vector<CTransactionRef> txn_",https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422498671,422498671,src/blockencodings.cpp
hebasto,2020-05-10 05:30:02,[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626276045).,https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422587991,422587991,src/blockencodings.cpp
