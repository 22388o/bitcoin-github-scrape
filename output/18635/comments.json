[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625090321",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-625090321",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 625090321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTA5MDMyMQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T07:47:54Z",
    "updated_at": "2020-05-07T07:47:54Z",
    "author_association": "MEMBER",
    "body": "@ajtowns \r\n> It's not clear to me what the value of adding `-Wthread-safety-attributes` is, but better typing makes sense in general to me.\r\n\r\nFrom the Thread Safety Analysis [docs](https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#warning-flags):\r\n> `-Wthread-safety-attributes`: Sanity checks on attribute syntax.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625090321/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625160150",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-625160150",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 625160150,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNTE2MDE1MA==",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?u=d06d2903ce6ad8b9d0c66ef9225fa21adfe22c7f&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-07T10:09:06Z",
    "updated_at": "2020-05-07T10:09:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nI confirm that if `master` (3b1e28924) is compiled with `-Wthread-safety-attributes` then some warnings are shown. This patch fixes all such warnings (Clang 11, FreeBSD 12).\r\n\r\nI agree with @ajtowns that it would be better to use a template than duplicating the function body. Further, instead of `template<typename PARENT>` / `AnnotatedMixin<PARENT>* cs` we can use `template <typename MutexType>` / `MutexType* cs` - that is simpler and removes the need to move the `Mutex` and `RecursiveMutex` definitions higher in `sync.h`. Just to be explicit, this is what I mean:\r\n<details>\r\n<summary>patch to use MutexType* argument, on top of this PR (b6e44c3fd)</summary>\r\n\r\n```diff\r\ndiff --git i/src/sync.cpp w/src/sync.cpp\r\nindex 67779b33a..8fc7f5d97 100644\r\n--- i/src/sync.cpp\r\n+++ w/src/sync.cpp\r\n@@ -182,29 +182,25 @@ std::string LocksHeld()\r\n     std::string result;\r\n     for (const std::pair<void*, CLockLocation>& i : g_lockstack)\r\n         result += i.second.ToString() + std::string(\"\\n\");\r\n     return result;\r\n }\r\n \r\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs)\r\n+template <typename MutexType>\r\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs)\r\n {\r\n     for (const std::pair<void*, CLockLocation>& i : g_lockstack)\r\n         if (i.first == cs)\r\n             return;\r\n     tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\r\n     abort();\r\n }\r\n \r\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs)\r\n-{\r\n-    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\r\n-        if (i.first == cs)\r\n-            return;\r\n-    tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\r\n-    abort();\r\n-}\r\n+// Explicitly instantiate for Mutex and RecursiveMutex.\r\n+template void AssertLockHeldInternal(const char*, const char*, int, Mutex*);\r\n+template void AssertLockHeldInternal(const char*, const char*, int, RecursiveMutex*);\r\n \r\n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\r\n {\r\n     for (const std::pair<void*, CLockLocation>& i : g_lockstack) {\r\n         if (i.first == cs) {\r\n             tfm::format(std::cerr, \"Assertion failed: lock %s held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\r\ndiff --git i/src/sync.h w/src/sync.h\r\nindex 78adf29c0..60e5a87ae 100644\r\n--- i/src/sync.h\r\n+++ w/src/sync.h\r\n@@ -11,17 +11,12 @@\r\n \r\n #include <condition_variable>\r\n #include <mutex>\r\n #include <string>\r\n #include <thread>\r\n \r\n-template <typename PARENT>\r\n-class AnnotatedMixin;\r\n-using RecursiveMutex = AnnotatedMixin<std::recursive_mutex>;\r\n-using Mutex = AnnotatedMixin<std::mutex>;\r\n-\r\n ////////////////////////////////////////////////\r\n //                                            //\r\n // THE SIMPLE DEFINITION, EXCLUDING DEBUG CODE //\r\n //                                            //\r\n ////////////////////////////////////////////////\r\n \r\n@@ -54,14 +49,14 @@ LEAVE_CRITICAL_SECTION(mutex); // no RAII\r\n \r\n #ifdef DEBUG_LOCKORDER\r\n void EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false);\r\n void LeaveCritical();\r\n void CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line);\r\n std::string LocksHeld();\r\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n+template <typename MutexType>\r\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n void AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs);\r\n void DeleteLock(void* cs);\r\n \r\n /**\r\n  * Call abort() if a potential lock order deadlock bug is detected, instead of\r\n  * just logging information and throwing a logic_error. Defaults to true, and\r\n@@ -69,14 +64,14 @@ void DeleteLock(void* cs);\r\n  */\r\n extern bool g_debug_lockorder_abort;\r\n #else\r\n void static inline EnterCritical(const char* pszName, const char* pszFile, int nLine, void* cs, bool fTry = false) {}\r\n void static inline LeaveCritical() {}\r\n void static inline CheckLastCritical(void* cs, std::string& lockname, const char* guardname, const char* file, int line) {}\r\n-void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\r\n-void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\r\n+template <typename MutexType>\r\n+void static inline AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, MutexType* cs) ASSERT_EXCLUSIVE_LOCK(cs) {}\r\n void static inline AssertLockNotHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs) {}\r\n void static inline DeleteLock(void* cs) {}\r\n #endif\r\n #define AssertLockHeld(cs) AssertLockHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n #define AssertLockNotHeld(cs) AssertLockNotHeldInternal(#cs, __FILE__, __LINE__, &cs)\r\n \r\n```\r\n</details>\r\n\r\nMaybe add `thread-safety-attributes` to the warnings flags in `configure.ac` to make sure future changes do not introduce such warnings:\r\n<details>\r\n<summary>patch to extend warnings in configure.ac</summary>\r\n\r\n```diff\r\ndiff --git i/configure.ac w/configure.ac\r\nindex 4c9902efc..e19346e59 100644\r\n--- i/configure.ac\r\n+++ w/configure.ac\r\n@@ -326,12 +326,13 @@ if test \"x$enable_werror\" = \"xyes\"; then\r\n   if test \"x$CXXFLAG_WERROR\" = \"x\"; then\r\n     AC_MSG_ERROR(\"enable-werror set but -Werror is not usable\")\r\n   fi\r\n   AX_CHECK_COMPILE_FLAG([-Werror=vla],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=vla\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Werror=switch],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=switch\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-analysis],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Werror=thread-safety-attributes],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=thread-safety-attributes\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Werror=unused-variable],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=unused-variable\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Werror=date-time],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=date-time\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Werror=return-type],[ERROR_CXXFLAGS=\"$ERROR_CXXFLAGS -Werror=return-type\"],,[[$CXXFLAG_WERROR]])\r\n fi\r\n\r\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n@@ -339,12 +340,13 @@ if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\r\n   AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wformat-security],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat-security\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wthread-safety-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-analysis\"],,[[$CXXFLAG_WERROR]])\r\n+  AX_CHECK_COMPILE_FLAG([-Wthread-safety-attributes],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wthread-safety-attributes\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wrange-loop-analysis],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wrange-loop-analysis\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wredundant-decls],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wredundant-decls\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wunused-variable],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wunused-variable\"],,[[$CXXFLAG_WERROR]])\r\n   AX_CHECK_COMPILE_FLAG([-Wdate-time],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wdate-time\"],,[[$CXXFLAG_WERROR]])\r\n\r\n   dnl Some compilers (gcc) ignore unknown -Wno-* options, but warn about all\r\n```\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/625160150/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626134492",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 626134492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjEzNDQ5Mg==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-09T09:13:23Z",
    "updated_at": "2020-05-09T09:16:46Z",
    "author_association": "MEMBER",
    "body": "Updated:\r\n- addressed @ajtowns's and @vasild's comments\r\n- rebased\r\n- added two commits that allow to replace `-Wthread-safety-analysis` with broader `-Wthread-safety`\r\n\r\nThe OP has been updated.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626134492/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626223649",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626223649",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 626223649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjIyMzY0OQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-09T19:21:16Z",
    "updated_at": "2020-05-28T14:30:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18882 (build: fix -Wformat-security check when compiling with GCC by fanquake)\n* #18857 (build: avoid repetitions when enabling warnings in configure.ac by vasild)\n* #18354 (Use shared pointers only in validation interface by bvbfan)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626223649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626276045",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626276045",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 626276045,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjI3NjA0NQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-10T05:29:38Z",
    "updated_at": "2020-05-10T05:29:38Z",
    "author_association": "MEMBER",
    "body": "Updated 6bc97d0f860b52933b5664386576876d61ae228c -> 7a54927d2f068fef1638b3f6e3f5d7b52be22edf ([pr18635.03](https://github.com/hebasto/bitcoin/commits/pr18635.03) -> [pr18635.04](https://github.com/hebasto/bitcoin/commits/pr18635.04), [diff](https://github.com/hebasto/bitcoin/compare/pr18635.03..pr18635.04)):\r\n\r\n- addressed @MarcoFalke's [comment](https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422498671):\r\n> Since you are touching all the lines where `pool` is used anyway, mind to make it const, since the access is read-only?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626276045/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627147293",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-627147293",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 627147293,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNzE0NzI5Mw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-12T06:46:33Z",
    "updated_at": "2020-05-12T06:46:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "@hebasto Yeah, I saw the \"sanity check\" description, but it's still not clear to me what that actually means. Changes for precise look good to me.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/627147293/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630643329",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-630643329",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 630643329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY0MzMyOQ==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T07:37:37Z",
    "updated_at": "2020-05-19T07:37:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `std::mutex` instances in order to do thread safety analysis on them. Adding `class LOCKABLE StdMutex : public std::mutex { };` and having #16127's `LockGuard` refer to that instead of `std::mutex` seems to be sufficient to resolve the conflict, I think.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630643329/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630649278",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-630649278",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 630649278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDY0OTI3OA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T07:50:25Z",
    "updated_at": "2020-05-19T07:50:25Z",
    "author_association": "MEMBER",
    "body": "> Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `std::mutex` instances in order to do thread safety analysis on them. Adding `class LOCKABLE StdMutex : public std::mutex { };` and having #16127's `LockGuard` refer to that instead of `std::mutex` seems to be sufficient to resolve the conflict, I think.\r\n\r\nAgree. Hope #16127 will be merged soon.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/630649278/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634059310",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-634059310",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 634059310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDA1OTMxMA==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-26T14:26:23Z",
    "updated_at": "2020-05-26T14:26:23Z",
    "author_association": "MEMBER",
    "body": "Rebased 7a54927d2f068fef1638b3f6e3f5d7b52be22edf -> 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc ([pr18635.04](https://github.com/hebasto/bitcoin/commits/pr18635.04) -> [pr18635.05](https://github.com/hebasto/bitcoin/commits/pr18635.05)) due to the conflict with #18881.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634059310/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634892549",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-634892549",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 634892549,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNDg5MjU0OQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-27T19:30:03Z",
    "updated_at": "2020-05-27T19:30:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc: patch looks correct, and more compile-time checking is better! :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/634892549/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635056617",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635056617",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 635056617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTA1NjYxNw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T02:28:18Z",
    "updated_at": "2020-05-28T02:28:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Needs update now that #16127 is merged",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635056617/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635150663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635150663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 635150663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTE1MDY2Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T07:05:38Z",
    "updated_at": "2020-05-28T07:05:38Z",
    "author_association": "MEMBER",
    "body": "Rebased 908c6c3cea5ffe3b9a9612f2327227cf3f54e5fc -> 87766b355c47fcb0f0dcf3f6fe359eb00227d50c ([pr18635.05](https://github.com/hebasto/bitcoin/commits/pr18635.05) -> [pr18635.06](https://github.com/hebasto/bitcoin/commits/pr18635.06)) due to the conflict with #16127:\r\n\r\n> Note that this conflicts with #16127 in that `-Wthread-safety-attributes` means you need to add a wrapper around any plain `std::mutex` instances in order to do thread safety analysis on them. Adding `class LOCKABLE StdMutex : public std::mutex { };` and having #16127's `LockGuard` refer to that instead of `std::mutex` seems to be sufficient to resolve the conflict, I think.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635150663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635246062",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635246062",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 635246062,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTI0NjA2Mg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T10:04:36Z",
    "updated_at": "2020-05-28T10:04:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c -- patch looks correct",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635246062/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635281663",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635281663",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 635281663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTI4MTY2Mw==",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T11:26:21Z",
    "updated_at": "2020-05-28T11:26:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635281663/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635397316",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-635397316",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18635",
    "id": 635397316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNTM5NzMxNg==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-28T14:47:34Z",
    "updated_at": "2020-05-28T14:47:34Z",
    "author_association": "MEMBER",
    "body": "ACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c \ud83d\udc4d\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 87766b355c47fcb0f0dcf3f6fe359eb00227d50c \ud83d\udc4d\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUi4iAwAg0uiwOcah5mJaVzZrOWF2rtKNZTQjr+KEZxWCBRuq1Q+GLJ7Dsf0cqwl\r\nCWtPoyfI524dIxAEANrMOqlitZ0fS7PYfgWAHDKVgS4mXaYRUEH7YKs1aShz/0u8\r\nES1GiLCtAM7WCcvjeVTwsvQ7D8hXtRDyN86oXJnJg+WWJPtp0yd2dMuWhZNvLTiF\r\nhRbv03wBr632i8dSlBG5y0libBVyPBozVMYAnVKmK3ZMlrLlUwYPtFPBwOmN+4cf\r\n4MrST70Ks90f+6Tlo6VbSoFbIvpNLYfM1g8saQDseA0y04q0h8y0og6WnUMzNYX5\r\nQwJVr3hR9t50wbiKmAsdIPmFiOTlVu1pqbckAkgNCNmrHaASgNIuRfPR9WyP8fMq\r\nCWYLw0727ZsUNKxCwEp18vIWkq9wZYVbXTM8GnfpfiA8FX8OH9FH+q7uroNH784N\r\nShf9kU2DPmOEHu8MG+7htpWRjHuEN/jVWCrxsoU66g1G7jREddIKNfoLDAzmB0p9\r\nPlykKQ8f\r\n=ufrW\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `55f3dcd9f7f76a0aa36c4f8d7721a03cda9bfb278201a4ebc4c064d229aba0a4  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e89294010855f3dcd9f7f76a0aa36c4f8d7721a03cda9bfb278201a4ebc4c064d229aba0a4f010f0bd0ce7bbdb28dd4b68ac3626b0570408fff0100a33c35ab23968ab627f6c413d5e40d808f12005c319ea1329a045f6e2f766a70d817734af8673152581a06911523eea70ed4c08f1045ecfcefbf008aa52af4ffc9680900083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010335c1eb1ce214cfd66f6b7e5795012c908f1045ecfcefcf00891da227cdfbb999a0083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff010eb9285f02f3051afff19dc0d264775df08f12067df8fee2e20630248fd960c8cf32c79001e64aab8a8378f46c8c14db41e927b08f1045ecfcefbf008fc1cdcbcc15dc1970083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267f010eebc19262cc40bb7f19373388041833008f1045ecfcefcf00813337bcec77c49450083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6d)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/635397316/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218027",
    "pull_request_review_id": 407126753,
    "id": 421218027,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxODAyNw==",
    "diff_hunk": "@@ -185,7 +185,16 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs)\n+{\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n+        if (i.first == cs)\n+            return;\n+    tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n+    abort();\n+}\n+\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs)",
    "path": "src/sync.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "b6e44c3fd4c41a89bd9392c720b856a1a67c0e0a",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rather than duplicating the function, you can use a template:\r\n\r\n```c++\r\ntemplate<typename PARENT>\r\nvoid AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, AnnotatedMixin<PARENT>* cs)\r\n{ ... }\r\n\r\ntemplate void AssertLockHeldInternal(const char*, const char*, int, Mutex*);\r\ntemplate void AssertLockHeldInternal(const char*, const char*, int, RecursiveMutex*);\r\n```\r\n\r\nThat means changing the header to:\r\n\r\n```c++\r\ntemplate<typename PARENT>\r\nvoid AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, AnnotatedMixin<PARENT>* cs) ASSERT_EXCLUSIVE_LOCK(cs);\r\n```\r\n\r\nto match.\r\n\r\nOr alternatively, don't touch sync.cpp file at all, drop the `ASSERT_EXCLUSIVE_LOCK(cs)` from `AssertLockHeldInternal` and change `AssertLockHeld` to:\r\n\r\n```c++\r\ntemplate<typename PARENT>\r\nvoid static inline AssertLockHeldInternalTyped(const char* pszName, const char* pszFile, int nLine, AnnotatedMixin<PARENT>* cs) ASSERT_EXCLUSIVE_LOCK(cs) { AssertLockHeldInternal(pszName, pszFile, nLine, (void*)cs); };\r\n\r\n#define AssertLockHeld(cs) AssertLockHeldInternalTyped(#cs, __FILE__, __LINE__, &cs)\r\n```\r\n\r\n",
    "created_at": "2020-05-07T03:30:00Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218027",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218027"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218027"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218027/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218377",
    "pull_request_review_id": 407126753,
    "id": 421218377,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxODM3Nw==",
    "diff_hunk": "@@ -110,7 +117,7 @@ class LOCKABLE AnnotatedMixin : public PARENT\n using RecursiveMutex = AnnotatedMixin<std::recursive_mutex>;\n \n /** Wrapped mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<std::mutex> Mutex;\n+using Mutex = AnnotatedMixin<std::mutex>;",
    "path": "src/sync.h",
    "position": null,
    "original_position": 37,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "b6e44c3fd4c41a89bd9392c720b856a1a67c0e0a",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No need to repeat the definitions of `Mutex` and `RecursiveMutex` after you added the definitions above.",
    "created_at": "2020-05-07T03:31:25Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218377",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218377"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421218377"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421218377/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 120,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421395808",
    "pull_request_review_id": 407336290,
    "id": 421395808,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM5NTgwOA==",
    "diff_hunk": "@@ -185,7 +185,16 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs)\n+{\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n+        if (i.first == cs)\n+            return;\n+    tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n+    abort();\n+}\n+\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs)",
    "path": "src/sync.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "b6e44c3fd4c41a89bd9392c720b856a1a67c0e0a",
    "user": {
      "login": "vasild",
      "id": 266751,
      "node_id": "MDQ6VXNlcjI2Njc1MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/266751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vasild",
      "html_url": "https://github.com/vasild",
      "followers_url": "https://api.github.com/users/vasild/followers",
      "following_url": "https://api.github.com/users/vasild/following{/other_user}",
      "gists_url": "https://api.github.com/users/vasild/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vasild/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vasild/subscriptions",
      "organizations_url": "https://api.github.com/users/vasild/orgs",
      "repos_url": "https://api.github.com/users/vasild/repos",
      "events_url": "https://api.github.com/users/vasild/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vasild/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, in `C` the \"any type\" is `void*`, whereas in `C++` we have templates.\r\n\r\nThat `void*` typecast at the bottom of the comment above is like sweeping it under the carpet and it still leaves the possibility to use `AssertLockHeldInternal()` in a type unsafe way (because it takes `void*` argument).",
    "created_at": "2020-05-07T10:16:06Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421395808",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421395808"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r421395808"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/421395808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 421218027
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473651",
    "pull_request_review_id": 408631779,
    "id": 422473651,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzY1MQ==",
    "diff_hunk": "@@ -185,7 +185,16 @@ std::string LocksHeld()\n     return result;\n }\n \n-void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, void* cs)\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, RecursiveMutex* cs)\n+{\n+    for (const std::pair<void*, CLockLocation>& i : g_lockstack)\n+        if (i.first == cs)\n+            return;\n+    tfm::format(std::cerr, \"Assertion failed: lock %s not held in %s:%i; locks held:\\n%s\", pszName, pszFile, nLine, LocksHeld());\n+    abort();\n+}\n+\n+void AssertLockHeldInternal(const char* pszName, const char* pszFile, int nLine, Mutex* cs)",
    "path": "src/sync.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "b6e44c3fd4c41a89bd9392c720b856a1a67c0e0a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492).",
    "created_at": "2020-05-09T09:17:11Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473651",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473651"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473651"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473651/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 197,
    "side": "RIGHT",
    "in_reply_to_id": 421218027
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473682",
    "pull_request_review_id": 408631806,
    "id": 422473682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ3MzY4Mg==",
    "diff_hunk": "@@ -110,7 +117,7 @@ class LOCKABLE AnnotatedMixin : public PARENT\n using RecursiveMutex = AnnotatedMixin<std::recursive_mutex>;\n \n /** Wrapped mutex: supports waiting but not recursive locking */\n-typedef AnnotatedMixin<std::mutex> Mutex;\n+using Mutex = AnnotatedMixin<std::mutex>;",
    "path": "src/sync.h",
    "position": null,
    "original_position": 37,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "b6e44c3fd4c41a89bd9392c720b856a1a67c0e0a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626134492).",
    "created_at": "2020-05-09T09:17:25Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422473682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422473682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 120,
    "side": "RIGHT",
    "in_reply_to_id": 421218377
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422498671",
    "pull_request_review_id": 408652041,
    "id": 422498671,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ5ODY3MQ==",
    "diff_hunk": "@@ -105,13 +105,12 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n     std::vector<bool> have_txn(txn_available.size());\n     {\n     LOCK(pool->cs);\n-    const std::vector<std::pair<uint256, CTxMemPool::txiter> >& vTxHashes = pool->vTxHashes;\n-    for (size_t i = 0; i < vTxHashes.size(); i++) {\n-        uint64_t shortid = cmpctblock.GetShortID(vTxHashes[i].first);\n+    for (size_t i = 0; i < pool->vTxHashes.size(); i++) {\n+        uint64_t shortid = cmpctblock.GetShortID(pool->vTxHashes[i].first);\n         std::unordered_map<uint64_t, uint16_t>::iterator idit = shorttxids.find(shortid);\n         if (idit != shorttxids.end()) {\n             if (!have_txn[idit->second]) {\n-                txn_available[idit->second] = vTxHashes[i].second->GetSharedTx();\n+                txn_available[idit->second] = pool->vTxHashes[i].second->GetSharedTx();",
    "path": "src/blockencodings.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "6bc97d0f860b52933b5664386576876d61ae228c",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since you are touching all the lines where `pool` is used anyway, mind to make it const, since the access is read-only?\r\n\r\n\r\n```diff\r\ndiff --git a/src/blockencodings.h b/src/blockencodings.h\r\nindex 377ac3a1a6..6efcc8c9c9 100644\r\n--- a/src/blockencodings.h\r\n+++ b/src/blockencodings.h\r\n@@ -125,7 +125,8 @@ class PartiallyDownloadedBlock {\r\n protected:\r\n     std::vector<CTransactionRef> txn_available;\r\n     size_t prefilled_count = 0, mempool_count = 0, extra_count = 0;\r\n-    CTxMemPool* pool;\r\n+    const CTxMemPool* pool;\r\n+\r\n public:\r\n     CBlockHeader header;\r\n     explicit PartiallyDownloadedBlock(CTxMemPool* poolIn) : pool(poolIn) {}\r\n",
    "created_at": "2020-05-09T13:54:28Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422498671",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422498671"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422498671"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422498671/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 113,
    "original_line": 113,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422587991",
    "pull_request_review_id": 408706301,
    "id": 422587991,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU4Nzk5MQ==",
    "diff_hunk": "@@ -105,13 +105,12 @@ ReadStatus PartiallyDownloadedBlock::InitData(const CBlockHeaderAndShortTxIDs& c\n     std::vector<bool> have_txn(txn_available.size());\n     {\n     LOCK(pool->cs);\n-    const std::vector<std::pair<uint256, CTxMemPool::txiter> >& vTxHashes = pool->vTxHashes;\n-    for (size_t i = 0; i < vTxHashes.size(); i++) {\n-        uint64_t shortid = cmpctblock.GetShortID(vTxHashes[i].first);\n+    for (size_t i = 0; i < pool->vTxHashes.size(); i++) {\n+        uint64_t shortid = cmpctblock.GetShortID(pool->vTxHashes[i].first);\n         std::unordered_map<uint64_t, uint16_t>::iterator idit = shorttxids.find(shortid);\n         if (idit != shorttxids.end()) {\n             if (!have_txn[idit->second]) {\n-                txn_available[idit->second] = vTxHashes[i].second->GetSharedTx();\n+                txn_available[idit->second] = pool->vTxHashes[i].second->GetSharedTx();",
    "path": "src/blockencodings.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "87766b355c47fcb0f0dcf3f6fe359eb00227d50c",
    "original_commit_id": "6bc97d0f860b52933b5664386576876d61ae228c",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "[Updated](https://github.com/bitcoin/bitcoin/pull/18635#issuecomment-626276045).",
    "created_at": "2020-05-10T05:30:02Z",
    "updated_at": "2020-05-28T07:02:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422587991",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422587991"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18635#discussion_r422587991"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18635"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/422587991/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 113,
    "original_line": 113,
    "side": "RIGHT",
    "in_reply_to_id": 422498671
  }
]