[
  {
    "sha": "446a8f9c90400518bbd4f52f82520c9a97b3a7b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NDZhOGY5YzkwNDAwNTE4YmJkNGY1MmY4MjUyMGM5YTk3YjNhN2Iz",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-11-30T01:27:21Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2016-11-30T01:27:21Z"
      },
      "message": "Trivial refactor: Remove extern keyword from function declarations, as they are extern by default.",
      "tree": {
        "sha": "999bc5a36b58ef2448b68b0d7f5deac64615b12c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/999bc5a36b58ef2448b68b0d7f5deac64615b12c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/446a8f9c90400518bbd4f52f82520c9a97b3a7b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/446a8f9c90400518bbd4f52f82520c9a97b3a7b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/446a8f9c90400518bbd4f52f82520c9a97b3a7b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/446a8f9c90400518bbd4f52f82520c9a97b3a7b3/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e56cf67e6b3f2e87bee42aaa5ab709f479c9e6ca"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 11,
      "deletions": 11
    },
    "files": [
      {
        "sha": "5aecbc44897a6dc7a97c11a75a2a341d5f4aac0a",
        "filename": "src/core_io.h",
        "status": "modified",
        "additions": 11,
        "deletions": 11,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/446a8f9c90400518bbd4f52f82520c9a97b3a7b3/src/core_io.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/446a8f9c90400518bbd4f52f82520c9a97b3a7b3/src/core_io.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_io.h?ref=446a8f9c90400518bbd4f52f82520c9a97b3a7b3",
        "patch": "@@ -15,18 +15,18 @@ class uint256;\n class UniValue;\n \n // core_read.cpp\n-extern CScript ParseScript(const std::string& s);\n-extern std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n-extern bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness = false);\n-extern bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n-extern uint256 ParseHashUV(const UniValue& v, const std::string& strName);\n-extern uint256 ParseHashStr(const std::string&, const std::string& strName);\n-extern std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n+CScript ParseScript(const std::string& s);\n+std::string ScriptToAsmStr(const CScript& script, const bool fAttemptSighashDecode = false);\n+bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx, bool fTryNoWitness = false);\n+bool DecodeHexBlk(CBlock&, const std::string& strHexBlk);\n+uint256 ParseHashUV(const UniValue& v, const std::string& strName);\n+uint256 ParseHashStr(const std::string&, const std::string& strName);\n+std::vector<unsigned char> ParseHexUV(const UniValue& v, const std::string& strName);\n \n // core_write.cpp\n-extern std::string FormatScript(const CScript& script);\n-extern std::string EncodeHexTx(const CTransaction& tx);\n-extern void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n-extern void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n+std::string FormatScript(const CScript& script);\n+std::string EncodeHexTx(const CTransaction& tx);\n+void ScriptPubKeyToUniv(const CScript& scriptPubKey, UniValue& out, bool fIncludeHex);\n+void TxToUniv(const CTransaction& tx, const uint256& hashBlock, UniValue& entry);\n \n #endif // BITCOIN_CORE_IO_H"
      }
    ]
  }
]