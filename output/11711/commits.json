[
  {
    "sha": "db32a4fd6bd53ef66c8693cf273a8418e463c61b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjMyYTRmZDZiZDUzZWY2NmM4NjkzY2YyNzNhODQxOGU0NjNjNjFi",
    "commit": {
      "author": {
        "name": "Werner Lemberg",
        "email": "wl@gnu.org",
        "date": "2017-08-22T14:48:26Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-11-17T14:18:55Z"
      },
      "message": "bitcoin_qt.m4: Improve QT_VERSION tests.\n\nUse '<QtCore/qconfig.h> and '<QtCore/qglobal.h>' for testing QT_VERSION.\nThis makes the tests work with both Qt4 and Qt5, even if '-fPIC' or '-fPIE'\nis not used (the compiler might choke otherwise if QT_REDUCE_RELOCATIONS is\nactive).",
      "tree": {
        "sha": "9a1693d0d790e40ba0097a6200bbdd80a7d74808",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a1693d0d790e40ba0097a6200bbdd80a7d74808"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db32a4fd6bd53ef66c8693cf273a8418e463c61b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAloO788ACgkQLuufXMCV\nJsHJ9g//ToAFei7+yUY4Aac8nuJQRSvjkDNxOcvFIrO/mIN459ejAxCpKg6+nPuB\n4gJzuWGcvdh/PuiDUeTyLNsn8ziAcyGgMszDQxvprnkWo6X9DvbwuafhkL5WJ+bh\nLol70CQFwT4hr+pEivtz7gQ6sLoQZwliaZZlXiBwhfGTFuBsjR1MSkhaOKmEDTlB\n3Vu4MCogbyKdLgmYnBqu5n68+Mg1sGN6OhZXM/e8GTPINC6+T5Z7GzNQabTANhp2\nujZvX/sF3l59nXlSDvd2tyy7ScmGMHRV1Iali3gOr1Lb22FCC5SRNG4roslmzekj\nh83al+6vmnEwKznpRdwZXcugIL4MPhFvHwuIn5FSGH7BoNjXaOK0HkigUd3D0VvY\nUKOf7O8li5ZYbdKRc6LWB+6mtKVarWrtxNBxZ23Iih0VjrvWy3V88hfqxe2o49gD\n5gvsBQ4qDJkaeu39++m6G9ZXLlVnlcH9AzU8JdotBv5ja5OjjMGNSlMSirzACtfH\nCnqNYPj+UuhNhIYJiF4TicAnFgsTh23drPMlBV2E9Tvp5v4TPvnQtO8UqpFZT4wG\nGfikglsccDGsc5gYlgMoeOhED9t/ovszOzx7BiKc6FU3aij51HdGeUE5o7ZcbO2u\nCwvZd8hkR+HmjSCNAtUe8Tz5VcMCYfllSWZChP00m0DZiFswUZc=\n=7uGX\n-----END PGP SIGNATURE-----",
        "payload": "tree 9a1693d0d790e40ba0097a6200bbdd80a7d74808\nparent ea68190132b241feebdccc7bac715d92b9bc71bc\nauthor Werner Lemberg <wl@gnu.org> 1503413306 +0200\ncommitter fanquake <fanquake@gmail.com> 1510928335 +0800\n\nbitcoin_qt.m4: Improve QT_VERSION tests.\n\nUse '<QtCore/qconfig.h> and '<QtCore/qglobal.h>' for testing QT_VERSION.\nThis makes the tests work with both Qt4 and Qt5, even if '-fPIC' or '-fPIE'\nis not used (the compiler might choke otherwise if QT_REDUCE_RELOCATIONS is\nactive).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db32a4fd6bd53ef66c8693cf273a8418e463c61b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db32a4fd6bd53ef66c8693cf273a8418e463c61b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db32a4fd6bd53ef66c8693cf273a8418e463c61b/comments",
    "author": {
      "login": "lemzwerg",
      "id": 1630245,
      "node_id": "MDQ6VXNlcjE2MzAyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1630245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemzwerg",
      "html_url": "https://github.com/lemzwerg",
      "followers_url": "https://api.github.com/users/lemzwerg/followers",
      "following_url": "https://api.github.com/users/lemzwerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemzwerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemzwerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemzwerg/subscriptions",
      "organizations_url": "https://api.github.com/users/lemzwerg/orgs",
      "repos_url": "https://api.github.com/users/lemzwerg/repos",
      "events_url": "https://api.github.com/users/lemzwerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemzwerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ea68190132b241feebdccc7bac715d92b9bc71bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea68190132b241feebdccc7bac715d92b9bc71bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea68190132b241feebdccc7bac715d92b9bc71bc"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 55,
      "deletions": 29
    },
    "files": [
      {
        "sha": "52d46a385baf7c0dc2113d35daa03ced69c5b4c9",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 55,
        "deletions": 29,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db32a4fd6bd53ef66c8693cf273a8418e463c61b/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db32a4fd6bd53ef66c8693cf273a8418e463c61b/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=db32a4fd6bd53ef66c8693cf273a8418e463c61b",
        "patch": "@@ -118,11 +118,17 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     if test x$bitcoin_cv_static_qt = xyes; then\n       _BITCOIN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n-          #if QT_VERSION >= 0x050400\n-          choke;\n-          #endif\n+      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+            #include <QtCore/qconfig.h>\n+            #ifndef QT_VERSION\n+            #  include <QtCore/qglobal.h>\n+            #endif\n+          ]],\n+          [[\n+            #if QT_VERSION >= 0x050400\n+            choke\n+            #endif\n           ]])],\n         [bitcoin_cv_need_acc_widget=yes],\n         [bitcoin_cv_need_acc_widget=no])\n@@ -173,11 +179,16 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     TEMP_CXXFLAGS=$CXXFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n       [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -190,11 +201,16 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n     AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n     CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        #include <QtCore/qconfig.h>\n+        #ifndef QT_VERSION\n+        #  include <QtCore/qglobal.h>\n+        #endif\n+      ]],\n       [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n+        #if defined(QT_REDUCE_RELOCATIONS)\n+        choke\n+        #endif\n       ]])],\n       [ AC_MSG_RESULT(no)],\n       [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n@@ -269,13 +285,15 @@ dnl Requires: INCLUDES must be populated as necessary.\n dnl Output: bitcoin_cv_qt5=yes|no\n AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n   AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n     [[\n       #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n+      choke\n       #endif\n     ]])],\n     [bitcoin_cv_qt5=yes],\n@@ -289,13 +307,15 @@ dnl Output: bitcoin_cv_static_qt=yes|no\n dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n   AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+      #include <QtCore/qconfig.h>\n+      #ifndef QT_VERSION\n+      #  include <QtCore/qglobal.h>\n+      #endif\n+    ]],\n     [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n+      #if !defined(QT_STATIC)\n+      choke\n       #endif\n     ]])],\n     [bitcoin_cv_static_qt=yes],\n@@ -352,11 +372,17 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n      ])\n      else\n        if test x$TARGET_OS = xwindows; then\n-         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-             [[#include <QtCore>]],[[\n-             #if QT_VERSION < 0x050600\n-             choke;\n-             #endif\n+         AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n+           AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+               #include <QtCore/qconfig.h>\n+               #ifndef QT_VERSION\n+               #  include <QtCore/qglobal.h>\n+               #endif\n+             ]],\n+             [[\n+               #if QT_VERSION < 0x050600\n+               choke\n+               #endif\n              ]])],\n            [bitcoin_cv_need_platformsupport=yes],\n            [bitcoin_cv_need_platformsupport=no])"
      }
    ]
  },
  {
    "sha": "8695315fb27c1074075b7d268b3131647dcd096f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Njk1MzE1ZmIyN2MxMDc0MDc1YjdkMjY4YjMxMzE2NDdkY2QwOTZm",
    "commit": {
      "author": {
        "name": "Werner Lemberg",
        "email": "wl@gnu.org",
        "date": "2017-08-22T17:34:18Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-11-17T14:18:55Z"
      },
      "message": "bitcoin_qt.m4: Use correct M4 quoting characters.",
      "tree": {
        "sha": "f96ff4233a3e7913f32aa0a8a75a30547f409a8e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f96ff4233a3e7913f32aa0a8a75a30547f409a8e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8695315fb27c1074075b7d268b3131647dcd096f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAloO788ACgkQLuufXMCV\nJsH/khAAm5Tb3+UpYj9YTW6zm7Ldz2vx6ZZLwE/Bos5JXWpGgc8v1TzkTyWVwSfl\nhZh7R3KvFtuNAEMv/AQ/XlHPO3zd2aPOvJXKfcnJmpQ51StSkbglYfc7zvtEKLju\nrDdg0mAVXduT7phAsYmd/YGhzwPzCj4L2Mf0ms2GkBGvVC34Khx2gGBYej6RqNVx\nVuDmdE/WNn7jbSACLJ2OcXpXY35e7n1xF/0WRgsSV3Yip6WikWa7FJrbz5h4uzJM\nKFTLojeaup1K858WJE5CMe5948Z3z6zwpdt0AZE5zZYtyw2fdkCh8tDPHwJ6eHjQ\nCkw+n0/lJkOwECZd4LnnsRsx5NxK/cRlND97ZP8U/ZsNG21vaUAhnHt1ubdUf/5A\nJTUxzDwk4NX+Mcoc9L2z40g9daoxjqExcyzIHNoxMUGc/hE/mWrOxWY/vJ3FTesu\nGlfkJqZvdqDMdhgBaIjlTSrytEpSvqVyPa9pzVEwXwuRMI8fl24UXYPh6zKMjj2R\ndRpmiI/Qbpl6QLNMWEQ+Nh5EGzVYJpDaDUXMP7K3GjQmpVsjuMKqqDczktUd75OA\nKuZvB7zhslrd7aM1tIiSacDsrZqvmRccMk7L0uI/aKch2wRlRQ3mcmn+aaY9vEEN\nWUe4Cm31o78HZJuXnAmwR/9rCDkWWxhlpSGYO6LG98w2poTMxh0=\n=MTDY\n-----END PGP SIGNATURE-----",
        "payload": "tree f96ff4233a3e7913f32aa0a8a75a30547f409a8e\nparent db32a4fd6bd53ef66c8693cf273a8418e463c61b\nauthor Werner Lemberg <wl@gnu.org> 1503423258 +0200\ncommitter fanquake <fanquake@gmail.com> 1510928335 +0800\n\nbitcoin_qt.m4: Use correct M4 quoting characters.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8695315fb27c1074075b7d268b3131647dcd096f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8695315fb27c1074075b7d268b3131647dcd096f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8695315fb27c1074075b7d268b3131647dcd096f/comments",
    "author": {
      "login": "lemzwerg",
      "id": 1630245,
      "node_id": "MDQ6VXNlcjE2MzAyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1630245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemzwerg",
      "html_url": "https://github.com/lemzwerg",
      "followers_url": "https://api.github.com/users/lemzwerg/followers",
      "following_url": "https://api.github.com/users/lemzwerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemzwerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemzwerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemzwerg/subscriptions",
      "organizations_url": "https://api.github.com/users/lemzwerg/orgs",
      "repos_url": "https://api.github.com/users/lemzwerg/repos",
      "events_url": "https://api.github.com/users/lemzwerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemzwerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db32a4fd6bd53ef66c8693cf273a8418e463c61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db32a4fd6bd53ef66c8693cf273a8418e463c61b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db32a4fd6bd53ef66c8693cf273a8418e463c61b"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "6737a52b77f431fb342fc07dec02cc6230416ec4",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8695315fb27c1074075b7d268b3131647dcd096f/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8695315fb27c1074075b7d268b3131647dcd096f/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=8695315fb27c1074075b7d268b3131647dcd096f",
        "patch": "@@ -254,10 +254,10 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n       bitcoin_enable_qt_dbus=yes\n     fi\n     if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n+      AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n     fi\n     if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n+      AC_MSG_WARN([lupdate is required to update qt translations])\n     fi\n   ],[\n     bitcoin_enable_qt=no"
      }
    ]
  },
  {
    "sha": "079f4b2a246e90ab7a712c1c528feacba37cdf48",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNzlmNGIyYTI0NmU5MGFiN2E3MTJjMWM1MjhmZWFjYmEzN2NkZjQ4",
    "commit": {
      "author": {
        "name": "Werner Lemberg",
        "email": "wl@gnu.org",
        "date": "2017-08-22T17:42:07Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-11-17T14:18:55Z"
      },
      "message": "bitcoin_qt.m4: Add missing braces around variables in autoconf messages.",
      "tree": {
        "sha": "dd31420177450e501d47ab48ba341d171c8c397f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd31420177450e501d47ab48ba341d171c8c397f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/079f4b2a246e90ab7a712c1c528feacba37cdf48",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAloO788ACgkQLuufXMCV\nJsGdGxAAsaEJ7qGDlcQprV9/hex5O6Jc7Ow2oMDpMBwLorEowfMVSw5v8Ofr/g4T\n6DaqUIgMj/P6R/1mXGcJ5qn4B3altRP/cheJnhFK6V9J5OqTTjRWFb4ltP1Lk79t\n8W5AyBN6lZpA1qDXDAEm6qz8sorHr/clBJ/wv1B2DpR/kUTQTpMaTfZ1X7IFtnDl\nP5Q0GAqcVoK6ACZrajgQAykn/of6xcymrJTE+U7Ug9yOpcrC54wt6taeRiTGnKhe\nk3cDeU1IGX85o8bD0CnzN7RA11Q2k0xLAl8H1L0xlpSD6pzSGUKclqMKiZ3aRSlB\nRxcGBa3ssjsPfs1Q1ai9QrEOquYkeBGgD43Y2uoREB7Q3iOkZ5Oi3nX4UieQ/l3J\nTYw+34Q0PCG9Aay6OUraf6MJ649UHI08oYDvXAcy//gVIz1lcARmLUTr/srlwgwG\nttBHiM+81HdMkAlj5j3Sqh5EFNko3X+iWcpxHQLwWHzNW6CYDEEX4SwjwXclSH8N\nGV+q6sRbuVpYXyRhqR4dVqRm2EaGD8rGEUyom0oeyCvT3uDzXeupu+Z9aGfxFNzC\nyiiOG/XXchy0Oj5gFHrK78M1cl4P9WuoYe3LnrHe0nh9b+Tq5xf95ongxFCUpJjY\n0qChQkLHsYnS/RpDE4UmSzwKb8IZnaA1i1Zymy9IaycsY1c+QGQ=\n=NU2T\n-----END PGP SIGNATURE-----",
        "payload": "tree dd31420177450e501d47ab48ba341d171c8c397f\nparent 8695315fb27c1074075b7d268b3131647dcd096f\nauthor Werner Lemberg <wl@gnu.org> 1503423727 +0200\ncommitter fanquake <fanquake@gmail.com> 1510928335 +0800\n\nbitcoin_qt.m4: Add missing braces around variables in autoconf messages.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/079f4b2a246e90ab7a712c1c528feacba37cdf48",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/079f4b2a246e90ab7a712c1c528feacba37cdf48",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/079f4b2a246e90ab7a712c1c528feacba37cdf48/comments",
    "author": {
      "login": "lemzwerg",
      "id": 1630245,
      "node_id": "MDQ6VXNlcjE2MzAyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1630245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemzwerg",
      "html_url": "https://github.com/lemzwerg",
      "followers_url": "https://api.github.com/users/lemzwerg/followers",
      "following_url": "https://api.github.com/users/lemzwerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemzwerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemzwerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemzwerg/subscriptions",
      "organizations_url": "https://api.github.com/users/lemzwerg/orgs",
      "repos_url": "https://api.github.com/users/lemzwerg/repos",
      "events_url": "https://api.github.com/users/lemzwerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemzwerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8695315fb27c1074075b7d268b3131647dcd096f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8695315fb27c1074075b7d268b3131647dcd096f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8695315fb27c1074075b7d268b3131647dcd096f"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "4adbb6640cc5f01b5c5e3e4a00b918069ce9ca12",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/079f4b2a246e90ab7a712c1c528feacba37cdf48/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/079f4b2a246e90ab7a712c1c528feacba37cdf48/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=079f4b2a246e90ab7a712c1c528feacba37cdf48",
        "patch": "@@ -388,7 +388,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n            [bitcoin_cv_need_platformsupport=no])\n          ])\n          if test x$bitcoin_cv_need_platformsupport = xyes; then\n-           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXPlatformSupport not found)))\n+           BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}PlatformSupport not found)))\n          fi\n        fi\n      fi\n@@ -505,11 +505,11 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([jpeg_create_decompress] ,[qtjpeg jpeg],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n   BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n+  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n   if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n+    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\""
      }
    ]
  },
  {
    "sha": "e0496d3b9aabc900fcebd511de9427f5be8d6673",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMDQ5NmQzYjlhYWJjOTAwZmNlYmQ1MTFkZTk0MjdmNWJlOGQ2Njcz",
    "commit": {
      "author": {
        "name": "Werner Lemberg",
        "email": "wl@gnu.org",
        "date": "2017-08-22T17:46:31Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-11-17T14:18:55Z"
      },
      "message": "bitcoin_qt.m4: Add missing dollar sign for variable.",
      "tree": {
        "sha": "30488a7e11ff0e92391f6c9c0e01acfa55fe1109",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/30488a7e11ff0e92391f6c9c0e01acfa55fe1109"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0496d3b9aabc900fcebd511de9427f5be8d6673",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAloO788ACgkQLuufXMCV\nJsGytQ//VdgiFiqlZrgL/68nlHzOcNiTTYoadx9veb0PUffwpmMOgr5jKNi+Tbam\nj7M68y4QiAEJQOEqTmIyYGUFgk1k0Vxk7Xz9LqcuB+yGC9tz6viyvYQv5oA5PFSR\nIyCX053clsqTCxfP2f8akuzwrADK33qqTC1i+8VJWFllYs2p80yCzUznbevhzbYC\nAEgWv4uohlQX0bXMYzL43K83MuBgEuRP7KhD0l2CwATVXMFnhL6jO/1kC8kc1u0g\n8gIYNpDXQ6aKiQrk3TTf1fSwq8qsfRJjOjweZLBZCnomOzI2tMULUjxumWOfVHwS\nBJbFI6QXL05VHyDi5ZZDXC5CLho26OLoK2W0d1MTD4yJp9Tsn4aUQjqbgfNOiXJF\n6+hEDN9lQ8BOLjXcon6k1QHsSPitcqF50fmcquUXDgbdQ6FXab72cbM4JSY2mc+B\n68jYvh2Pa4qyOID0llV+d09F1ZDbcfPJU4wBOSQy9ofqjsq/LTRvGy+yGCOneAGT\n99B3lsKLAK1XN1bvEs3WsyFZw5JOBMAUygxLbChyk++vBm32xUQX4jwqYp5wEPJj\nXTf3jOre2HOBR/wGi/prPZNTlHLbBd9EtiE0s9MKiBhO5xy8enqPuIS5WPwBDnsI\nl1F1vwVzQ2IDOTsT4rA0M7mFJnRsv5olPuD49W6xdWohHDkNwnE=\n=3Ho1\n-----END PGP SIGNATURE-----",
        "payload": "tree 30488a7e11ff0e92391f6c9c0e01acfa55fe1109\nparent 079f4b2a246e90ab7a712c1c528feacba37cdf48\nauthor Werner Lemberg <wl@gnu.org> 1503423991 +0200\ncommitter fanquake <fanquake@gmail.com> 1510928335 +0800\n\nbitcoin_qt.m4: Add missing dollar sign for variable.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0496d3b9aabc900fcebd511de9427f5be8d6673",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0496d3b9aabc900fcebd511de9427f5be8d6673",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0496d3b9aabc900fcebd511de9427f5be8d6673/comments",
    "author": {
      "login": "lemzwerg",
      "id": 1630245,
      "node_id": "MDQ6VXNlcjE2MzAyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1630245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemzwerg",
      "html_url": "https://github.com/lemzwerg",
      "followers_url": "https://api.github.com/users/lemzwerg/followers",
      "following_url": "https://api.github.com/users/lemzwerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemzwerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemzwerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemzwerg/subscriptions",
      "organizations_url": "https://api.github.com/users/lemzwerg/orgs",
      "repos_url": "https://api.github.com/users/lemzwerg/repos",
      "events_url": "https://api.github.com/users/lemzwerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemzwerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "079f4b2a246e90ab7a712c1c528feacba37cdf48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/079f4b2a246e90ab7a712c1c528feacba37cdf48",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/079f4b2a246e90ab7a712c1c528feacba37cdf48"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8f442430e756493c4559c88cb21e6b75316640a4",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0496d3b9aabc900fcebd511de9427f5be8d6673/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0496d3b9aabc900fcebd511de9427f5be8d6673/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=e0496d3b9aabc900fcebd511de9427f5be8d6673",
        "patch": "@@ -321,7 +321,7 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n     [bitcoin_cv_static_qt=yes],\n     [bitcoin_cv_static_qt=no])\n   ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n+  if test x$bitcoin_cv_static_qt = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])"
      }
    ]
  },
  {
    "sha": "06abcbf9bacf7db8a64a969578b8bfe3322f2949",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNmFiY2JmOWJhY2Y3ZGI4YTY0YTk2OTU3OGI4YmZlMzMyMmYyOTQ5",
    "commit": {
      "author": {
        "name": "Werner Lemberg",
        "email": "wl@gnu.org",
        "date": "2017-08-22T18:38:50Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2017-11-17T14:21:53Z"
      },
      "message": "scripted-diff: Orthogonalize string quoting\n\nAdd double qoutes to string tests where arguments could (theoretically)\ncontain spaces.\n\nRemove double quotes where not necessary.\n\n-BEGIN VERIFY SCRIPT-\nsed -iE -e 's/\"x\\(yes\\|no\\|auto\\)\\?\"/x\\1/g' -e 's/test \\(x\\$[^ ]*\\)/test \"\\1\"/g' build-aux/m4/bitcoin_qt.m4\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "5db8bfbf52051793bb8268b36966d006025ad392",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5db8bfbf52051793bb8268b36966d006025ad392"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/06abcbf9bacf7db8a64a969578b8bfe3322f2949",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAloO8R0ACgkQLuufXMCV\nJsGw7A//YhY+e5GoBhJkUC0zN31SpJr2SLvQ//Dgg7mpswcwQyv+yI0Yr6YsHGTd\n8YYZz133hEcoWBLD/cyRjBQAlWTu0pbLxS86crsd83WiKEP2hy5KAvx3BZWX4Z1X\nAVviMp3AvyOU6dNkdI4y1mMxy24OFz58KIfZSZ5yitLOXGDGP7ZgusCdQZUot/mh\nayVVml8M31ybdC8bSTGhfcjjmtKx11MnO4rBcfSfyO3RrKtz+mv54xVpkkBNzrDA\nxhh4wl1T/F5tii+GH3PGSoH96AhwST2SRO+vT+DWsk/9sH85onug74I10IsoaxjU\nxNbJNYmSEtiLADZfDgr2EhGCLxI+oTWQTXgz2HmKoULp4lTuqVM8nJHHJr9nImkF\nTko0BG1DFih3CH+scMwyHXDfnnHH1B6ShZpCiLgXMDl7Ll0watLURQyQFaMKZ+/P\nUEgpPBsDBC52GIxIJowxmxZqceCIzCh21NXuw835tq5YqeZZ5QKtnyPbPX93/Dw2\nlUCw5RjBgYeIel4vh/FsmESK6FfxzyuxOnA8MhcLwPEBaOLCf3sWjxYDOJVpJXZl\nu0i/LRstb+6xLFvu9b3ZZcA+MBPL5wcydL2RfFS5V4hmDPYlNfGhPEnEPQCNEUBM\nrxijWiGBbm3t0t1ecXbD9BhueFwhQCdUSWcRhXtEXSfvtRt2sjg=\n=Ts2o\n-----END PGP SIGNATURE-----",
        "payload": "tree 5db8bfbf52051793bb8268b36966d006025ad392\nparent e0496d3b9aabc900fcebd511de9427f5be8d6673\nauthor Werner Lemberg <wl@gnu.org> 1503427130 +0200\ncommitter fanquake <fanquake@gmail.com> 1510928513 +0800\n\nscripted-diff: Orthogonalize string quoting\n\nAdd double qoutes to string tests where arguments could (theoretically)\ncontain spaces.\n\nRemove double quotes where not necessary.\n\n-BEGIN VERIFY SCRIPT-\nsed -iE -e 's/\"x\\(yes\\|no\\|auto\\)\\?\"/x\\1/g' -e 's/test \\(x\\$[^ ]*\\)/test \"\\1\"/g' build-aux/m4/bitcoin_qt.m4\n-END VERIFY SCRIPT-\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06abcbf9bacf7db8a64a969578b8bfe3322f2949",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/06abcbf9bacf7db8a64a969578b8bfe3322f2949",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/06abcbf9bacf7db8a64a969578b8bfe3322f2949/comments",
    "author": {
      "login": "lemzwerg",
      "id": 1630245,
      "node_id": "MDQ6VXNlcjE2MzAyNDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1630245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lemzwerg",
      "html_url": "https://github.com/lemzwerg",
      "followers_url": "https://api.github.com/users/lemzwerg/followers",
      "following_url": "https://api.github.com/users/lemzwerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/lemzwerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lemzwerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lemzwerg/subscriptions",
      "organizations_url": "https://api.github.com/users/lemzwerg/orgs",
      "repos_url": "https://api.github.com/users/lemzwerg/repos",
      "events_url": "https://api.github.com/users/lemzwerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lemzwerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0496d3b9aabc900fcebd511de9427f5be8d6673",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0496d3b9aabc900fcebd511de9427f5be8d6673",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0496d3b9aabc900fcebd511de9427f5be8d6673"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 48,
      "deletions": 48
    },
    "files": [
      {
        "sha": "f41508336ca07163a5768747120f0005855e12d6",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "modified",
        "additions": 48,
        "deletions": 48,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/06abcbf9bacf7db8a64a969578b8bfe3322f2949/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/06abcbf9bacf7db8a64a969578b8bfe3322f2949/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=06abcbf9bacf7db8a64a969578b8bfe3322f2949",
        "patch": "@@ -5,8 +5,8 @@ dnl file COPYING or http://www.opensource.org/licenses/mit-license.php.\n dnl Helper for cases where a qt dependency is not met.\n dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n+  if test \"x$bitcoin_qt_want_version\" = xauto && test \"x$bitcoin_qt_force\" != xyes; then\n+    if test \"x$bitcoin_enable_qt\" != xno; then\n       AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n     fi\n     bitcoin_enable_qt=no\n@@ -17,7 +17,7 @@ AC_DEFUN([BITCOIN_QT_FAIL],[\n ])\n \n AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n+  if test \"x$bitcoin_enable_qt\" != xno && test \"x$bitcoin_qt_want_version\" != xno; then\n     true\n     $1\n   else\n@@ -35,12 +35,12 @@ dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n   BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n+    if test \"x$3\" != x; then\n       AC_PATH_PROGS($1,$2,,$3)\n     else\n       AC_PATH_PROGS($1,$2)\n     fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n+    if test \"x$$1\" = x && test \"x$4\" != xyes; then\n       BITCOIN_QT_FAIL([$1 not found])\n     fi\n   ])\n@@ -57,7 +57,7 @@ AC_DEFUN([BITCOIN_QT_INIT],[\n     [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n     [\n      bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n+     if test \"x$bitcoin_qt_want_version\" = xyes; then\n        bitcoin_qt_force=yes\n        bitcoin_qt_want_version=auto\n      fi\n@@ -89,11 +89,11 @@ dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   use_pkgconfig=$1\n \n-  if test x$use_pkgconfig = x; then\n+  if test \"x$use_pkgconfig\" = x; then\n     use_pkgconfig=yes\n   fi\n \n-  if test x$use_pkgconfig = xyes; then\n+  if test \"x$use_pkgconfig\" = xyes; then\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n   else\n     BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n@@ -113,9 +113,9 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   TEMP_CXXFLAGS=$CXXFLAGS\n   CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n+  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n     _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n+    if test \"x$bitcoin_cv_static_qt\" = xyes; then\n       _BITCOIN_QT_FIND_STATIC_PLUGINS\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n       AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[\n@@ -133,25 +133,25 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n         [bitcoin_cv_need_acc_widget=yes],\n         [bitcoin_cv_need_acc_widget=no])\n       ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n+      if test \"x$bitcoin_cv_need_acc_widget\" = xyes; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n       fi\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QMinimalIntegrationPlugin)],[-lqminimal])\n       AC_DEFINE(QT_QPA_PLATFORM_MINIMAL, 1, [Define this symbol if the minimal qt platform exists])\n-      if test x$TARGET_OS = xwindows; then\n+      if test \"x$TARGET_OS\" = xwindows; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n         AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n+      elif test \"x$TARGET_OS\" = xlinux; then\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n         AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n+      elif test \"x$TARGET_OS\" = xdarwin; then\n         AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n         _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n         AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n       fi\n     fi\n   else\n-    if test x$TARGET_OS = xwindows; then\n+    if test \"x$TARGET_OS\" = xwindows; then\n       AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n       _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n          Q_IMPORT_PLUGIN(qcncodecs)\n@@ -166,13 +166,13 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   CXXFLAGS=$TEMP_CXXFLAGS\n   ])\n \n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n+  if test \"x$use_pkgconfig$qt_bin_path\" = xyes; then\n+    if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n       qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n     fi\n   fi\n \n-  if test x$use_hardening != xno; then\n+  if test \"x$use_hardening\" != xno; then\n     BITCOIN_QT_CHECK([\n     AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n     TEMP_CPPFLAGS=$CPPFLAGS\n@@ -246,17 +246,17 @@ AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n   BITCOIN_QT_CHECK([\n     bitcoin_enable_qt=yes\n     bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n+    if test \"x$have_qt_test\" = xno; then\n       bitcoin_enable_qt_test=no\n     fi\n     bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n+    if test \"x$use_dbus\" != xno && test \"x$have_qt_dbus\" = xyes; then\n       bitcoin_enable_qt_dbus=yes\n     fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n+    if test \"x$use_dbus\" = xyes && test \"x$have_qt_dbus\" = xno; then\n       AC_MSG_ERROR([libQtDBus not found. Install libQtDBus or remove --with-qtdbus.])\n     fi\n-    if test x$LUPDATE = x; then\n+    if test \"x$LUPDATE\" = x; then\n       AC_MSG_WARN([lupdate is required to update qt translations])\n     fi\n   ],[\n@@ -321,7 +321,7 @@ AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n     [bitcoin_cv_static_qt=yes],\n     [bitcoin_cv_static_qt=no])\n   ])\n-  if test x$bitcoin_cv_static_qt = xyes; then\n+  if test \"x$bitcoin_cv_static_qt\" = xyes; then\n     AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n   fi\n ])\n@@ -350,28 +350,28 @@ dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n dnl Inputs: qt_plugin_path. optional.\n dnl Outputs: QT_LIBS is appended\n AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n+  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n+      if test \"x$qt_plugin_path\" != x; then\n         QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n         if test -d \"$qt_plugin_path/accessible\"; then\n           QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n         fi\n       fi\n-     if test x$use_pkgconfig = xyes; then\n+     if test \"x$use_pkgconfig\" = xyes; then\n      : dnl\n      m4_ifdef([PKG_CHECK_MODULES],[\n        PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n+       if test \"x$TARGET_OS\" = xlinux; then\n          PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n          if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n            PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n          fi\n-       elif test x$TARGET_OS = xdarwin; then\n+       elif test \"x$TARGET_OS\" = xdarwin; then\n          PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n        fi\n      ])\n      else\n-       if test x$TARGET_OS = xwindows; then\n+       if test \"x$TARGET_OS\" = xwindows; then\n          AC_CACHE_CHECK(for Qt >= 5.6, bitcoin_cv_need_platformsupport,[\n            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n                #include <QtCore/qconfig.h>\n@@ -387,13 +387,13 @@ AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n            [bitcoin_cv_need_platformsupport=yes],\n            [bitcoin_cv_need_platformsupport=no])\n          ])\n-         if test x$bitcoin_cv_need_platformsupport = xyes; then\n+         if test \"x$bitcoin_cv_need_platformsupport\" = xyes; then\n            BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}PlatformSupport],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}PlatformSupport not found)))\n          fi\n        fi\n      fi\n   else\n-    if test x$qt_plugin_path != x; then\n+    if test \"x$qt_plugin_path\" != x; then\n       QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n       QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n     fi\n@@ -411,10 +411,10 @@ dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n   m4_ifdef([PKG_CHECK_MODULES],[\n   auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n+  if test \"x$auto_priority_version\" = x; then\n     auto_priority_version=qt5\n   fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+    if test \"x$bitcoin_qt_want_version\" = xqt5 ||  ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n       QT_LIB_PREFIX=Qt5\n       bitcoin_qt_got_major_vers=5\n     else\n@@ -424,28 +424,28 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n     qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n     qt4_modules=\"QtCore QtGui QtNetwork\"\n     BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n+      if test \"x$bitcoin_qt_want_version\" = xqt5 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt5 ); then\n         PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n+      elif test \"x$bitcoin_qt_want_version\" = xqt4 || ( test \"x$bitcoin_qt_want_version\" = xauto && test \"x$auto_priority_version\" = xqt4 ); then\n         PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes], [have_qt=no])\n       fi\n \n       dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = xqt5; then\n+      if test \"x$have_qt\" = xno && test \"x$bitcoin_qt_want_version\" = xauto; then\n+        if test \"x$auto_priority_version\" = xqt5; then\n           PKG_CHECK_MODULES([QT4], [$qt4_modules], [QT_INCLUDES=\"$QT4_CFLAGS\"; QT_LIBS=\"$QT4_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n         else\n           PKG_CHECK_MODULES([QT5], [$qt5_modules], [QT_INCLUDES=\"$QT5_CFLAGS\"; QT_LIBS=\"$QT5_LIBS\" ; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n         fi\n       fi\n-      if test x$have_qt != xyes; then\n+      if test \"x$have_qt\" != xyes; then\n         have_qt=no\n         BITCOIN_QT_FAIL([Qt dependencies not found])\n       fi\n     ])\n     BITCOIN_QT_CHECK([\n       PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n+      if test \"x$use_dbus\" != xno; then\n         PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n       fi\n     ])\n@@ -466,7 +466,7 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n   TEMP_LIBS=\"$LIBS\"\n   BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n+    if test \"x$qt_include_path\" != x; then\n       QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n       CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n     fi\n@@ -477,10 +477,10 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n \n   BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n+    if test \"x$bitcoin_qt_want_version\" = xauto; then\n       _BITCOIN_QT_CHECK_QT5\n     fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n+    if test \"x$bitcoin_cv_qt5\" = xyes || test \"x$bitcoin_qt_want_version\" = xqt5; then\n       QT_LIB_PREFIX=Qt5\n       bitcoin_qt_got_major_vers=5\n     else\n@@ -491,11 +491,11 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"$LIBS -L$qt_lib_path\"\n     fi\n \n-    if test x$TARGET_OS = xwindows; then\n+    if test \"x$TARGET_OS\" = xwindows; then\n       AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n     fi\n   ])\n@@ -508,23 +508,23 @@ AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Core not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Gui not found)))\n   BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Network not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n+  if test \"x$bitcoin_qt_got_major_vers\" = x5; then\n     BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib${QT_LIB_PREFIX}Widgets not found)))\n   fi\n   QT_LIBS=\"$LIBS\"\n   LIBS=\"$TEMP_LIBS\"\n \n   BITCOIN_QT_CHECK([\n     LIBS=\n-    if test x$qt_lib_path != x; then\n+    if test \"x$qt_lib_path\" != x; then\n       LIBS=\"-L$qt_lib_path\"\n     fi\n     AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n     AC_CHECK_HEADER([QTest],, have_qt_test=no)\n     QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n+    if test \"x$use_dbus\" != xno; then\n       LIBS=\n-      if test x$qt_lib_path != x; then\n+      if test \"x$qt_lib_path\" != x; then\n         LIBS=\"-L$qt_lib_path\"\n       fi\n       AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)"
      }
    ]
  }
]