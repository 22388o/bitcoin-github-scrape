[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917506157",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917506157",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 917506157,
    "node_id": "IC_kwDOABII5842sAht",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-12T00:01:15Z",
    "updated_at": "2021-09-12T00:01:15Z",
    "author_association": "MEMBER",
    "body": "It seems odd to me that the wallet and policy should have different fee calculation results for the same transaction.\r\n\r\nIn terms of pre-signed transactions, what security implications do you imagine? I don't think it is possible for this to cause a transaction's feerate to fall below the default minimum relay fee because the result of the fee calculation at the minimum relay fee is always an integer since the minimum relay fee is an integer. I believe the same is true for the incremental relay fee and how that calculation works.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917506157/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917644192",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917644192",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 917644192,
    "node_id": "IC_kwDOABII5842siOg",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?u=48352d181d6b944494bc6622f6352e05560369d0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-12T14:12:15Z",
    "updated_at": "2021-09-12T14:12:15Z",
    "author_association": "MEMBER",
    "body": ">  I believe the same is true for the incremental relay fee and how that calculation works.\r\n\r\nI don't think it's true in all cases. Take clawback tx A with fee such as it would be rounded up after this PR, not before. The application wants to replace it with clawback tx B with fee equal to `A's fee + incremental relay fee` such as it would not be rounded up.\r\nBefore this PR tx B would be accepted, after it would be refused.\r\n\r\nOf course it'd be reckless for such an application to not take some leeway in addition to the incremental fee here, but still this PR would be a behaviour change for this edge case.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917644192/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917669901",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-917669901",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 917669901,
    "node_id": "IC_kwDOABII5842sogN",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-12T16:45:28Z",
    "updated_at": "2021-09-12T16:45:28Z",
    "author_association": "MEMBER",
    "body": "> I don't think it's true in all cases. Take clawback tx A with fee such as it would be rounded up after this PR, not before. The application wants to replace it with clawback tx B with fee equal to `A's fee + incremental relay fee` such as it would not be rounded up.\r\n> Before this PR tx B would be accepted, after it would be refused.\r\n\r\nHow so? Can you provide a example? I can't think of how that would happen. `CFeeRate::GetFee` is never called on the original feerate in validation, and the calculation of a feerate for a transaction is not changed by this PR.\r\n\r\nConsider the example I give in the test: tx A is a 1-in-1-out 110 vbyte tx that pays a feerate of 1.85 sat/vbyte for an absolute fee if 203.5 sats. With rounding down, A will pay 203 sats. We replace this with tx B where the only thing different is the output, but it is of the same type so the size remains the same. Paying the incremental relay fee should be enough for B to replace A. The incremental feerate is 1 sat/vbyte, so regardless of rounding, it is always 110 sats. So B pays 313 sats.\r\n\r\nWhen validating whether B is allowed to replace A, it needs to pass two fee related checks: [`PaysMoreThanConflicts`](https://github.com/bitcoin/bitcoin/blob/master/src/policy/rbf.cpp#L124) (called [here](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L785)) and [`PaysForRBF`](https://github.com/bitcoin/bitcoin/blob/master/src/policy/rbf.cpp#L150) (called [here](https://github.com/bitcoin/bitcoin/blob/master/src/validation.cpp#L806)). `PaysMoreThanConflicts` computes the feerates for A and B and just checks that B's feerate is greater than A's. The rounding of computing the feerate given the fee paid and size **did not change**, so both before and after this PR, the calculation for A is `203 * 1000 / 110 = 1845`. The calculation for B is `313 * 1000 / 110 = 2845`. B's feerate is greater than A's, so this check passes, both before and after this PR. `PaysForRBF` checks that the fees for B is greater than A. Then it checks that the difference is not less than the incremental relay fee. Because the incremental relay fee is an integer, the calculation before and after this PR is the same - 110 sats.\r\n\r\nAt no point in this checking process is the original feerate of 1.85 sats/vbyte used because validation does not know that was the original targeted feerate. The only times where validation calls `CFeeRate::GetFee` is to calculate the fee at the minimum relay feerate and the incremental relay feerate, both of which have integers as their default, so their calculations do not change. So I don't see how this change would have any effect on whether transactions are accepted.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/917669901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919774957",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-919774957",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 919774957,
    "node_id": "IC_kwDOABII58420qbt",
    "user": {
      "login": "darosior",
      "id": 22457751,
      "node_id": "MDQ6VXNlcjIyNDU3NzUx",
      "avatar_url": "https://avatars.githubusercontent.com/u/22457751?u=48352d181d6b944494bc6622f6352e05560369d0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darosior",
      "html_url": "https://github.com/darosior",
      "followers_url": "https://api.github.com/users/darosior/followers",
      "following_url": "https://api.github.com/users/darosior/following{/other_user}",
      "gists_url": "https://api.github.com/users/darosior/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darosior/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darosior/subscriptions",
      "organizations_url": "https://api.github.com/users/darosior/orgs",
      "repos_url": "https://api.github.com/users/darosior/repos",
      "events_url": "https://api.github.com/users/darosior/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darosior/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-15T07:36:16Z",
    "updated_at": "2021-09-15T07:36:16Z",
    "author_association": "MEMBER",
    "body": "You are right. I also can't think of how this change would be a policy rule tightening.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/919774957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922955712",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-922955712",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 922955712,
    "node_id": "IC_kwDOABII5843Ay_A",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T14:01:19Z",
    "updated_at": "2021-09-20T14:01:45Z",
    "author_association": "MEMBER",
    "body": "> You are right. I also can't think of how this change would be a policy rule tightening.\r\n\r\nThis changes policy for non-default fee rate settings. (Probably no one uses those, but wanted to mention it)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/922955712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923124822",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-923124822",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 923124822,
    "node_id": "IC_kwDOABII5843BcRW",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-20T17:20:15Z",
    "updated_at": "2021-09-20T17:20:15Z",
    "author_association": "MEMBER",
    "body": "Code review ACK d9ac0cdd5b7829dd45e1dab46fa349d2ce04d5cd modulo policy considerations, per `git diff 053ec2b d9ac0cd`, previously checked at 053ec2b that the new functional tests fail where expected on master, changes since are a named cast, documentation, and named args in the test",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/923124822/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925429999",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-925429999",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 925429999,
    "node_id": "IC_kwDOABII5843KPDv",
    "user": {
      "login": "ariard",
      "id": 23310655,
      "node_id": "MDQ6VXNlcjIzMzEwNjU1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23310655?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ariard",
      "html_url": "https://github.com/ariard",
      "followers_url": "https://api.github.com/users/ariard/followers",
      "following_url": "https://api.github.com/users/ariard/following{/other_user}",
      "gists_url": "https://api.github.com/users/ariard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ariard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ariard/subscriptions",
      "organizations_url": "https://api.github.com/users/ariard/orgs",
      "repos_url": "https://api.github.com/users/ariard/repos",
      "events_url": "https://api.github.com/users/ariard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ariard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-23T00:40:20Z",
    "updated_at": "2021-09-23T00:40:51Z",
    "author_association": "MEMBER",
    "body": "I agree, I don't think this change qualifies as a policy rule tightening.\r\n\r\nIIUC, previously we had transaction A with absolute fee 203.5 sats. Currently, it's rounded down to 203 sats. After this PR, it will be rounded up to 204 sats.\r\n\r\nNote, I think `GetFee` is called in few subsystems beyond mempool acceptance and wallet. Such as for block construction (`addPackageTxs`) or transaction announcement selection (L4802, in `src/net_processing`). As the pair of transactions is equally affected, I don't think the comparison is altered. I.e if transaction A was 203.5 sats and transaction B was 204.5 sats, respectivelly rounded down to 203 sats and 204 sats, now they will be rounded up to 204 sats and 205 sats ? The comparison should hold. AFAICT, the proposed change doesn't have positive or negative impacts on transaction propagation or block building.\r\n\r\n(Though if it's change the displayed absolute fee at the interface-level, I think a release note would be appropriate, a user could consume the now-rounded up result and do a comparison with a still-rounded down result from another software than Core in a way which is obscure to us ?)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/925429999/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929697935",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-929697935",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 929697935,
    "node_id": "IC_kwDOABII5843ahCP",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-28T23:31:13Z",
    "updated_at": "2021-09-28T23:32:39Z",
    "author_association": "MEMBER",
    "body": "This should also fix test failures like this: https://cirrus-ci.com/task/5800722060017664?logs=ci#L3900\r\n\r\n```\r\n test  2021-09-28T17:50:42.592000Z TestFramework (ERROR): Assertion failed \r\n                                   Traceback (most recent call last):\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/test_framework.py\", line 131, in main\r\n                                       self.run_test()\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/wallet_basic.py\", line 500, in run_test\r\n                                       assert_fee_amount(fee, tx_size, Decimal(fee_rate_btc_kvb))\r\n                                     File \"/tmp/cirrus-build/ci/scratch/build/bitcoin-x86_64-pc-linux-gnu/test/functional/test_framework/util.py\", line 41, in assert_fee_amount\r\n                                       raise AssertionError(\"Fee of %s BTC too low! (Should be %s BTC)\" % (str(fee), str(target_fee)))\r\n                                   AssertionError: Fee of 0.00000255 BTC too low! (Should be 0.00000256 BTC)\r\n```\r\n\r\nOtherwise, the `round` in `assert_fee_amount` will round up rather than truncate.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/929697935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932045979",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-932045979",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 932045979,
    "node_id": "IC_kwDOABII5843jeSb",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-01T08:53:15Z",
    "updated_at": "2021-10-01T08:53:15Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. If someone requests a feerate of 1.23 sat/vB, with a tx vsize of 208, it shouldn't result in 255 fee, but 256. Otherwise, the feerate will be 1.2259... sat/vB.\r\n\r\nI think you'll also need to adjust the test, otherwise they won't check this:\r\n\r\n```\r\ntest/functional/test_framework/util.py:def satoshi_round(amount):\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932045979/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932430032",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-932430032",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 932430032,
    "node_id": "IC_kwDOABII5843k8DQ",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-01T17:40:39Z",
    "updated_at": "2021-10-01T17:40:39Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke Not quite sure what you want me to adjust.\r\n\r\n`satoshi_round` doesn't need any changes afaict.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932430032/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932693247",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-932693247",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 932693247,
    "node_id": "IC_kwDOABII5843l8T_",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-02T06:29:54Z",
    "updated_at": "2021-10-02T06:29:54Z",
    "author_association": "MEMBER",
    "body": "`assert_fee_amount`, which uses `satoshi_round` is used in the tests to replicate `GetFee` and check that it gives the same result.\r\n\r\nYou are changing `GetFee` (in my previous example https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-932045979) to return 256 instead of 255, so the tests also needs to be adjusted to do the same.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/932693247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/936731744",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-936731744",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 936731744,
    "node_id": "IC_kwDOABII58431WRg",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-06T17:20:46Z",
    "updated_at": "2021-10-06T17:20:46Z",
    "author_association": "MEMBER",
    "body": "If you don't want to change `satoshi_round` (because it is used by more than just `assert_fee_amount`), you can first inline it into `assert_fee_amount` and then fix it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/936731744/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938988908",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-938988908",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 938988908,
    "node_id": "IC_kwDOABII584399Vs",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-10-08T17:58:59Z",
    "updated_at": "2021-10-08T17:58:59Z",
    "author_association": "MEMBER",
    "body": "I added a commit which changes `assert_fee_amount` to round up the calculated fee.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/938988908/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/978911843",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#issuecomment-978911843",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22949",
    "id": 978911843,
    "node_id": "IC_kwDOABII5846WQJj",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-11-25T07:36:51Z",
    "updated_at": "2021-11-25T07:36:51Z",
    "author_association": "MEMBER",
    "body": "Added to #23276 for backport to 22.x",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/978911843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710958422",
    "pull_request_review_id": 757331938,
    "id": 710958422,
    "node_id": "PRRC_kwDOABII584qYF1W",
    "diff_hunk": "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {\n     const int64_t nSize{num_bytes};\n \n-    CAmount nFee = nSatoshisPerK * nSize / 1000;\n+    CAmount nFee = std::ceil(nSatoshisPerK * nSize / 1000.0);",
    "path": "src/policy/feerate.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ee9a74d a couple of ideas\r\n\r\n- make the double-to-long conversion explicit\r\n```suggestion\r\n    // Be explicit that we're converting from double to long (CAmount) here.\r\n    // We've previously had bugs creep in from silent double->int conversion.\r\n    CAmount nFee{static_cast<CAmount>(std::ceil(nSatoshisPerK * nSize / 1000.0))};\r\n```\r\n-----\r\n\r\n- bypass this calculation in the frequent `GetFeePerK()` case\r\n\r\n```cpp\r\n    CAmount nFee{static_cast<CAmount>(\r\n            nSize == 1000 ? nSatoshisPerK : std::ceil(nSatoshisPerK * nSize / 1000.0))};\r\n```\r\n",
    "created_at": "2021-09-17T10:58:00Z",
    "updated_at": "2021-09-17T11:55:30Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710958422",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710958422"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710958422"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710958422/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710959094",
    "pull_request_review_id": 757331938,
    "id": 710959094,
    "node_id": "PRRC_kwDOABII584qYF_2",
    "diff_hunk": "@@ -1026,6 +1027,33 @@ def do_fund_send(target):\n         do_fund_send(upper_bound)\n \n         self.restart_node(0)\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(0, 3)\n+\n+    def test_feerate_rounding(self):\n+        self.log.info(\"Test that rounding of GetFee does not result in an assertion\")\n+\n+        self.nodes[1].createwallet(\"roundtest\")\n+        w = self.nodes[1].get_wallet_rpc(\"roundtest\")\n+\n+        addr = w.getnewaddress(address_type=\"bech32\")\n+        self.nodes[0].sendtoaddress(addr, 1)\n+        self.generate(self.nodes[0], 1)\n+        self.sync_all()\n+\n+        # A P2WPKH input costs 68 vbytes; With a single P2WPKH output, the rest of the tx is 42 vbytes for a total of 110 vbytes.\n+        # At a feerate of 1.85 sat/vb, the input will need a fee of 125.8 sats and the rest 77.7 sats\n+        # The entire tx fee should be 203.5 sats.\n+        # Coin selection rounds the fee individually instead of at the end (due to how CFeeRate::GetFee works).\n+        # If rounding down (which is the incorrect behavior), then the calculated fee will be 125 + 77 = 202.\n+        # If rounding up, then the calculated fee will be 126 + 78 = 204.\n+        # In the former case, the calculated needed fee is higher than the actual fee being paid, so an assertion is reached\n+        # To test this does not happen, we subtract 202 sats from the input value. If working correctly, this should\n+        # fail with insufficient funds rather than bitcoind asserting.\n+        rawtx = w.createrawtransaction([], [{self.nodes[0].getnewaddress(address_type=\"bech32\"): 1 - 0.00000202}])",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 36,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "053ec2b nit\r\n```suggestion\r\n        rawtx = w.createrawtransaction(inputs=[], outputs=[{self.nodes[0].getnewaddress(address_type=\"bech32\"): 1 - 0.00000201}])\r\n```",
    "created_at": "2021-09-17T10:59:11Z",
    "updated_at": "2021-09-17T11:31:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710959094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710959094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r710959094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/710959094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1054,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712194074",
    "pull_request_review_id": 758669173,
    "id": 712194074,
    "node_id": "PRRC_kwDOABII584qczga",
    "diff_hunk": "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {",
    "path": "src/policy/feerate.cpp",
    "position": 10,
    "original_position": 10,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't it make sense to rename this from `GetFee` to `RoundFee` to clarify that this is not a getter, but a calculation?\r\n\r\nAt the very least the doxygen should be updated.",
    "created_at": "2021-09-20T13:58:30Z",
    "updated_at": "2021-09-20T13:59:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712194074",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712194074"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712194074"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712194074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326120",
    "pull_request_review_id": 758848883,
    "id": 712326120,
    "node_id": "PRRC_kwDOABII584qdTvo",
    "diff_hunk": "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {\n     const int64_t nSize{num_bytes};\n \n-    CAmount nFee = nSatoshisPerK * nSize / 1000;\n+    CAmount nFee = std::ceil(nSatoshisPerK * nSize / 1000.0);",
    "path": "src/policy/feerate.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added the explicit casting but not the bypass for now.",
    "created_at": "2021-09-20T16:25:48Z",
    "updated_at": "2021-09-20T16:25:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326120",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326120"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326120"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 710958422
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326197",
    "pull_request_review_id": 758848993,
    "id": 712326197,
    "node_id": "PRRC_kwDOABII584qdTw1",
    "diff_hunk": "@@ -1026,6 +1027,33 @@ def do_fund_send(target):\n         do_fund_send(upper_bound)\n \n         self.restart_node(0)\n+        self.connect_nodes(0, 1)\n+        self.connect_nodes(0, 2)\n+        self.connect_nodes(0, 3)\n+\n+    def test_feerate_rounding(self):\n+        self.log.info(\"Test that rounding of GetFee does not result in an assertion\")\n+\n+        self.nodes[1].createwallet(\"roundtest\")\n+        w = self.nodes[1].get_wallet_rpc(\"roundtest\")\n+\n+        addr = w.getnewaddress(address_type=\"bech32\")\n+        self.nodes[0].sendtoaddress(addr, 1)\n+        self.generate(self.nodes[0], 1)\n+        self.sync_all()\n+\n+        # A P2WPKH input costs 68 vbytes; With a single P2WPKH output, the rest of the tx is 42 vbytes for a total of 110 vbytes.\n+        # At a feerate of 1.85 sat/vb, the input will need a fee of 125.8 sats and the rest 77.7 sats\n+        # The entire tx fee should be 203.5 sats.\n+        # Coin selection rounds the fee individually instead of at the end (due to how CFeeRate::GetFee works).\n+        # If rounding down (which is the incorrect behavior), then the calculated fee will be 125 + 77 = 202.\n+        # If rounding up, then the calculated fee will be 126 + 78 = 204.\n+        # In the former case, the calculated needed fee is higher than the actual fee being paid, so an assertion is reached\n+        # To test this does not happen, we subtract 202 sats from the input value. If working correctly, this should\n+        # fail with insufficient funds rather than bitcoind asserting.\n+        rawtx = w.createrawtransaction([], [{self.nodes[0].getnewaddress(address_type=\"bech32\"): 1 - 0.00000202}])",
    "path": "test/functional/rpc_fundrawtransaction.py",
    "position": null,
    "original_position": 36,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done",
    "created_at": "2021-09-20T16:25:54Z",
    "updated_at": "2021-09-20T16:25:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326197",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326197"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326197"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326197/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1054,
    "side": "RIGHT",
    "in_reply_to_id": 710959094
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326764",
    "pull_request_review_id": 758849697,
    "id": 712326764,
    "node_id": "PRRC_kwDOABII584qdT5s",
    "diff_hunk": "@@ -22,7 +24,7 @@ CAmount CFeeRate::GetFee(uint32_t num_bytes) const\n {",
    "path": "src/policy/feerate.cpp",
    "position": 10,
    "original_position": 10,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "053ec2b901bee174de3243302c113b4a91733241",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Updated doxygen. I think keeping it `GetFee` is fine.",
    "created_at": "2021-09-20T16:26:37Z",
    "updated_at": "2021-09-20T16:26:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326764",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326764"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r712326764"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/712326764/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 24,
    "original_line": 24,
    "side": "RIGHT",
    "in_reply_to_id": 712194074
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726174324",
    "pull_request_review_id": 776311029,
    "id": 726174324,
    "node_id": "PRRC_kwDOABII584rSIp0",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It seems a bug to silently accept sub-decimal feerates (Bitcoin Core doesn't accept them either). I think this can be fixed (and the whole conversion avoided) by simply changing all call sites to provide the value in feerate_sat_vB. I can create a pull for that, if this is too unrelated to this pull request.",
    "created_at": "2021-10-11T14:33:28Z",
    "updated_at": "2021-10-11T14:33:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726174324",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726174324"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726174324"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726174324/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726214717",
    "pull_request_review_id": 776399616,
    "id": 726214717,
    "node_id": "PRRC_kwDOABII584rSSg9",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> It seems a bug to silently accept sub-decimal feerates\r\n\r\nThis doesn't seem like bug conceptually. Fees are discrete values, so a fixed precision decimal representation makes sense for absolute fees. Feerates are continuous values (ratio of the discrete values, rational numbers) so any floating or fractional representation makes sense and while error feedback about being out of range would be useful, error feedback about being too precise would be strange.\r\n\r\nAlso, this is just a drive-by review comment so feel free to ignore, but the math here converting between `'0.00000001'` string literals and `1e8` floating point literals, and decimal objects, long integer objects plus use of a `satoshi_round` function that is rounding down when you are trying to round up seems overcomplicated even if it is correct. If I were trying to write this in the most readable way I would probably do all the math with python long integers and a [`ceildiv`](https://stackoverflow.com/questions/14822184/is-there-a-ceiling-equivalent-of-operator-in-python) helper, and just return a Decimal object at the end.\r\n\r\n```python\r\ndef ceildiv(a, b):\r\n    return -(-a // b)\r\n```\r\n\r\nA `ceildiv` function would probably also simplify the c++ code, though the implementation in c++ would be different (something like `(a + b - 1) / b`)\r\n",
    "created_at": "2021-10-11T15:22:18Z",
    "updated_at": "2021-10-11T15:22:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726214717",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726214717"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726214717"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726214717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT",
    "in_reply_to_id": 726174324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726251178",
    "pull_request_review_id": 776444218,
    "id": 726251178,
    "node_id": "PRRC_kwDOABII584rSbaq",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> This doesn't seem like bug conceptually.\r\n\r\nSure, feerates in theory are rational numbers. However, this function is there to replicate the behavior of Bitcoin Core when it comes to feerates. And Bitcoin Core doesn't accept rational numbers as feerates. Only natural numbers, which represent a sat/vB ratio.",
    "created_at": "2021-10-11T15:53:57Z",
    "updated_at": "2021-10-11T15:53:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726251178",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726251178"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726251178"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726251178/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT",
    "in_reply_to_id": 726174324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726276686",
    "pull_request_review_id": 776463636,
    "id": 726276686,
    "node_id": "PRRC_kwDOABII584rShpO",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "CFeeRates are BTC/kvb so we actually can get sub-decimal sat/vb feerates, to 4 decimal places of precision.",
    "created_at": "2021-10-11T16:14:07Z",
    "updated_at": "2021-10-11T16:30:41Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726276686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726276686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726276686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726276686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT",
    "in_reply_to_id": 726174324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726313134",
    "pull_request_review_id": 776479661,
    "id": 726313134,
    "node_id": "PRRC_kwDOABII584rSqiu",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I've added a `ceildiv` function as suggested.\r\n\r\nI think any broader feerate changes to the tests should be done in another PR. The goal of the test changes here is to just make sure that the calculation is the same.",
    "created_at": "2021-10-11T16:32:38Z",
    "updated_at": "2021-10-11T16:32:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726313134",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726313134"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r726313134"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/726313134/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT",
    "in_reply_to_id": 726174324
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728064800",
    "pull_request_review_id": 778579261,
    "id": 728064800,
    "node_id": "PRRC_kwDOABII584rZWMg",
    "diff_hunk": "@@ -218,6 +218,18 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def ceildiv(a, b):\n+    \"\"\"Divide 2 ints and round up to next int rather than round down\"\"\"\n+    return -(-a // b)\n+\n+\n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors\n+    target_fee_sat = ceildiv(feerate_sat_kvb * tx_size, 1000) # Round calculated fee up to nearest sat\n+    return satoshi_round(target_fee_sat / Decimal(1e8)) # Truncate BTC result to nearest sat",
    "path": "test/functional/test_framework/util.py",
    "position": 29,
    "original_position": 29,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"tests: Calculate fees more similarly to CFeeRate::GetFee\" (80dc829be7f8c3914074b85bb4c125baba18cb2c)\r\n\r\nI think the `satoshi_round` call just complicates things here and should be dropped. Just `return target_fee_sat / Decimal(1e8)` should already return a decimal object with the right level of precision",
    "created_at": "2021-10-13T13:30:00Z",
    "updated_at": "2021-10-13T14:02:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r728064800",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728064800"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r728064800"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728064800/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 230,
    "original_line": 230,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728093338",
    "pull_request_review_id": 778579261,
    "id": 728093338,
    "node_id": "PRRC_kwDOABII584rZdKa",
    "diff_hunk": "@@ -218,6 +218,13 @@ def str_to_b64str(string):\n     return b64encode(string.encode('utf-8')).decode('ascii')\n \n \n+def get_fee(tx_size, feerate_btc_kvb):\n+    \"\"\"Calculate the fee in BTC given a feerate is BTC/kvB. Reflects CFeeRate::GetFee\"\"\"\n+    feerate_sat_kvb = int(feerate_btc_kvb * Decimal(1e8)) # Fee in sat/kvb as an int to avoid float precision errors",
    "path": "test/functional/test_framework/util.py",
    "position": 27,
    "original_position": 31,
    "commit_id": "80dc829be7f8c3914074b85bb4c125baba18cb2c",
    "original_commit_id": "5a9337825303c40f14d6368298a874866131f4ff",
    "user": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I think this can be fixed (and the whole conversion avoided) by simply changing all call sites to provide the value in feerate_sat_vB. I can create a pull for that, if this is too unrelated to this pull request.\r\n\r\nI think this could be a nice simplification for another PR. This function is only used by `assert_fee_amount` which is should be convenient for developers and make tests readable. I don't know if it's make tests more readable to be able to write fees as `feerate_btc_kvb` and have this automatic conversion, or to write fees as `feerate_sat_kvb` and avoid the need for this conversion. I just don't think it's a bug for the conversion to accept fractional feerates since they do make sense conceptually and since this line isn't really trying to emulate anything in bitcoin core.",
    "created_at": "2021-10-13T13:57:56Z",
    "updated_at": "2021-10-13T14:02:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r728093338",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728093338"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22949#discussion_r728093338"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22949"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/728093338/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 228,
    "original_line": 228,
    "side": "RIGHT",
    "in_reply_to_id": 726174324
  }
]