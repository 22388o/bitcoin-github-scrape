[
  {
    "sha": "fa99e33aebed0109630474e11183b0726b410c2e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTk5ZTMzYWViZWQwMTA5NjMwNDc0ZTExMTgzYjA3MjZiNDEwYzJl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-23T18:32:20Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-23T19:01:12Z"
      },
      "message": "fuzz: move-only FillNode implementation to cpp file\n\nThis allows to modify the implementation without having to recompile all\nfuzz targets.\n\nCan be reviewed with --color-moved=dimmed-zebra",
      "tree": {
        "sha": "5bff6dd75d7a69f7893d65fc25e067f1730a9f88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5bff6dd75d7a69f7893d65fc25e067f1730a9f88"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa99e33aebed0109630474e11183b0726b410c2e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgKlQv8CsKZdRsK+1zkNwpyfk+1BDg9uYyJwcPKiNU4QJ/2rIPsgPkT8/5DisZp\n2ybPTJNy8qrY3+yiZ9mOZfyO+2wkCxlKh4LJTrR4ijO1TXanZKYAi3uj42nKPFNf\ni3rU61F3xySI3YqDqmpxFiBRGFrHm1PGLLjbJnrvklIzaJwmeKD8mkDb9pgiCTtt\nUA4sWPri56w6ms922ikotkWoX0fqF5tQ0mZO6+yZRRPIQTX4JeRIg3JJ6+AYjyv7\n3wMKugVdp6i5kmuU7DEKT3cy6APFblpU67dNTacApcHy4mf4BPaj8qnZE6CI4+tR\nYpSiOd8HUcrUUAIaIXfsLq4ftyo9EJi4miTnhUx0gtOYzEdjJXVVfiwc8CdixPMe\nkyMmf1EeC2oh4heTWuV7OWlkRHLvkoCZic9uxRmSq/eES0grM1i4sUjvP0Kn32Kn\nEb5jz3c5p7jQ6sfKKTmWM5D+HO2qSOHzxRjFtNm8v6sOnf/HoS4iNzZZhZEcxAra\nQu9fgfcf\n=QjAV\n-----END PGP SIGNATURE-----",
        "payload": "tree 5bff6dd75d7a69f7893d65fc25e067f1730a9f88\nparent 32b191fb66e644c690c94cbfdae6ddbc754769d7\nauthor MarcoFalke <falke.marco@gmail.com> 1611426740 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1611428472 +0100\n\nfuzz: move-only FillNode implementation to cpp file\n\nThis allows to modify the implementation without having to recompile all\nfuzz targets.\n\nCan be reviewed with --color-moved=dimmed-zebra\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99e33aebed0109630474e11183b0726b410c2e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa99e33aebed0109630474e11183b0726b410c2e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99e33aebed0109630474e11183b0726b410c2e/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "32b191fb66e644c690c94cbfdae6ddbc754769d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32b191fb66e644c690c94cbfdae6ddbc754769d7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/32b191fb66e644c690c94cbfdae6ddbc754769d7"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 24,
      "deletions": 16
    },
    "files": [
      {
        "sha": "75fe68fcd198df70775e0d4754ad0c67a81a498d",
        "filename": "src/Makefile.test_fuzz.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa99e33aebed0109630474e11183b0726b410c2e/src/Makefile.test_fuzz.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa99e33aebed0109630474e11183b0726b410c2e/src/Makefile.test_fuzz.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test_fuzz.include?ref=fa99e33aebed0109630474e11183b0726b410c2e",
        "patch": "@@ -16,6 +16,7 @@ libtest_fuzz_a_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) $(MINIUPNPC_CPPFLAG\n libtest_fuzz_a_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n libtest_fuzz_a_SOURCES = \\\n   test/fuzz/fuzz.cpp \\\n+  test/fuzz/util.cpp \\\n   $(TEST_FUZZ_H)\n \n LIBTEST_FUZZ += $(LIBBITCOIN_SERVER)"
      },
      {
        "sha": "dbd4f5798c3d536ed02c9b930a3c4bdb80108768",
        "filename": "src/test/fuzz/util.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa99e33aebed0109630474e11183b0726b410c2e/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa99e33aebed0109630474e11183b0726b410c2e/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=fa99e33aebed0109630474e11183b0726b410c2e",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2021 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <test/fuzz/util.h>\n+\n+void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in) noexcept\n+{\n+    const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n+    const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\n+    const int32_t version = version_in.value_or(fuzzed_data_provider.ConsumeIntegral<int32_t>());\n+    const bool filter_txs = fuzzed_data_provider.ConsumeBool();\n+\n+    node.nServices = remote_services;\n+    node.m_permissionFlags = permission_flags;\n+    node.nVersion = version;\n+    node.SetCommonVersion(version);\n+    if (node.m_tx_relay != nullptr) {\n+        LOCK(node.m_tx_relay->cs_filter);\n+        node.m_tx_relay->fRelayTxes = filter_txs;\n+    }\n+}"
      },
      {
        "sha": "a6451cf50e96666467a5fc5238816bc7c8f2c6bf",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 16,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa99e33aebed0109630474e11183b0726b410c2e/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa99e33aebed0109630474e11183b0726b410c2e/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fa99e33aebed0109630474e11183b0726b410c2e",
        "patch": "@@ -322,22 +322,7 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\n }\n inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }\n \n-inline void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in = std::nullopt) noexcept\n-{\n-    const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n-    const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\n-    const int32_t version = version_in.value_or(fuzzed_data_provider.ConsumeIntegral<int32_t>());\n-    const bool filter_txs = fuzzed_data_provider.ConsumeBool();\n-\n-    node.nServices = remote_services;\n-    node.m_permissionFlags = permission_flags;\n-    node.nVersion = version;\n-    node.SetCommonVersion(version);\n-    if (node.m_tx_relay != nullptr) {\n-        LOCK(node.m_tx_relay->cs_filter);\n-        node.m_tx_relay->fRelayTxes = filter_txs;\n-    }\n-}\n+void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in = std::nullopt) noexcept;\n \n template <class T = const BasicTestingSetup>\n std::unique_ptr<T> MakeFuzzingContext(const std::string& chain_name = CBaseChainParams::REGTEST, const std::vector<const char*>& extra_args = {})"
      }
    ]
  },
  {
    "sha": "fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQzZDc2MjVhYTFjMmI2YzM0Mzk0NmU3MDllODdlNzE2OGY5ZDlk",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-23T18:39:30Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-23T19:04:37Z"
      },
      "message": "fuzz: Avoid initializing version to less than MIN_PEER_PROTO_VERSION",
      "tree": {
        "sha": "9a6492606d0413e8d6d5089a12d8d0f280e35f58",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9a6492606d0413e8d6d5089a12d8d0f280e35f58"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhvCgv/cGyRIiSTJ97gkP7pMga9SHW7d5TpH5lbVL0hcK/NByvxHp17Esdwc7Aq\nulPPaP0SJwT9pEsDarf8/G586r9d68eBT1yJBGO+uGyt7Ls0ziRHmo6AlEm9Kzq9\n8UdBxgAcL/AdxTMo2D2z4Kk4pRt3NE51yzTYGI3s3Y0KTXfX3SLdKO5Lr/JRfxIG\ntpxK9MTHaSxliprDTd7BAJBYgi0SH64o2W+Q/4OQysXtwgJ8eu8do75V2y21aq34\n6Yk7kvQ1nh4Ok1jmhVz1UjxWfaWz66CdAeZsz7VKD6txjmEqByjmhIgOA3B+uVKB\nFLcaSRgJC9QUQWm2vOt10FkayUs1/2LrqB9kTjXwciMj8kP++3wbn+f3GHKagq88\n3kFf1M3Gc1vbxms9XGBwFNwp3SAewDMFPg70qC4x2Ox2YkCOvqmVf4p3sZoTjkvH\nPh3VpCGsykNUq+NP8SXe/bXK63vlGJBP7H64BuIFa71wDvLvN3lNZV19foWbVhvk\nEreSkYWG\n=+vm+\n-----END PGP SIGNATURE-----",
        "payload": "tree 9a6492606d0413e8d6d5089a12d8d0f280e35f58\nparent fa99e33aebed0109630474e11183b0726b410c2e\nauthor MarcoFalke <falke.marco@gmail.com> 1611427170 +0100\ncommitter MarcoFalke <falke.marco@gmail.com> 1611428677 +0100\n\nfuzz: Avoid initializing version to less than MIN_PEER_PROTO_VERSION\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa99e33aebed0109630474e11183b0726b410c2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa99e33aebed0109630474e11183b0726b410c2e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa99e33aebed0109630474e11183b0726b410c2e"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 16,
      "deletions": 10
    },
    "files": [
      {
        "sha": "e7cc0f529738e419a5fb54ace1eba9c184117007",
        "filename": "src/test/fuzz/process_message.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/process_message.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/process_message.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_message.cpp?ref=fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
        "patch": "@@ -60,10 +60,12 @@ void fuzz_target(const std::vector<uint8_t>& buffer, const std::string& LIMIT_TO\n         return;\n     }\n     CNode& p2p_node = *ConsumeNodeAsUniquePtr(fuzzed_data_provider).release();\n-    FillNode(fuzzed_data_provider, p2p_node);\n-    p2p_node.fSuccessfullyConnected = true;\n+\n+    const bool successfully_connected{true};\n+    p2p_node.fSuccessfullyConnected = successfully_connected;\n     connman.AddTestNode(p2p_node);\n     g_setup->m_node.peerman->InitializeNode(&p2p_node);\n+    FillNode(fuzzed_data_provider, p2p_node, /* init_version */ successfully_connected);\n \n     const auto mock_time = ConsumeTime(fuzzed_data_provider);\n     SetMockTime(mock_time);"
      },
      {
        "sha": "810f0aac92a6c4a04e6546da82af541c10fca896",
        "filename": "src/test/fuzz/process_messages.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/process_messages.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/process_messages.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/process_messages.cpp?ref=fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
        "patch": "@@ -45,11 +45,12 @@ FUZZ_TARGET_INIT(process_messages, initialize_process_messages)\n     for (int i = 0; i < num_peers_to_add; ++i) {\n         peers.push_back(ConsumeNodeAsUniquePtr(fuzzed_data_provider, i).release());\n         CNode& p2p_node = *peers.back();\n-        FillNode(fuzzed_data_provider, p2p_node);\n \n-        p2p_node.fSuccessfullyConnected = true;\n+        const bool successfully_connected{true};\n+        p2p_node.fSuccessfullyConnected = successfully_connected;\n         p2p_node.fPauseSend = false;\n         g_setup->m_node.peerman->InitializeNode(&p2p_node);\n+        FillNode(fuzzed_data_provider, p2p_node, /* init_version */ successfully_connected);\n \n         connman.AddTestNode(p2p_node);\n     }"
      },
      {
        "sha": "0a541e4186c90b5f2167c01b9613fbdb1f7b82f5",
        "filename": "src/test/fuzz/util.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.cpp?ref=fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
        "patch": "@@ -3,18 +3,21 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <test/fuzz/util.h>\n+#include <version.h>\n \n-void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in) noexcept\n+void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_version) noexcept\n {\n     const ServiceFlags remote_services = ConsumeWeakEnum(fuzzed_data_provider, ALL_SERVICE_FLAGS);\n     const NetPermissionFlags permission_flags = ConsumeWeakEnum(fuzzed_data_provider, ALL_NET_PERMISSION_FLAGS);\n-    const int32_t version = version_in.value_or(fuzzed_data_provider.ConsumeIntegral<int32_t>());\n+    const int32_t version = fuzzed_data_provider.ConsumeIntegralInRange<int32_t>(MIN_PEER_PROTO_VERSION, std::numeric_limits<int32_t>::max());\n     const bool filter_txs = fuzzed_data_provider.ConsumeBool();\n \n     node.nServices = remote_services;\n     node.m_permissionFlags = permission_flags;\n-    node.nVersion = version;\n-    node.SetCommonVersion(version);\n+    if (init_version) {\n+        node.nVersion = version;\n+        node.SetCommonVersion(std::min(version, PROTOCOL_VERSION));\n+    }\n     if (node.m_tx_relay != nullptr) {\n         LOCK(node.m_tx_relay->cs_filter);\n         node.m_tx_relay->fRelayTxes = filter_txs;"
      },
      {
        "sha": "4ca3cc68e3889c6a6ff1581cf9c7e590df32478e",
        "filename": "src/test/fuzz/util.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d7625aa1c2b6c343946e709e87e7168f9d9d/src/test/fuzz/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/util.h?ref=fad3d7625aa1c2b6c343946e709e87e7168f9d9d",
        "patch": "@@ -320,9 +320,9 @@ auto ConsumeNode(FuzzedDataProvider& fuzzed_data_provider, const std::optional<N\n         return CNode{node_id, local_services, socket, address, keyed_net_group, local_host_nonce, addr_bind, addr_name, conn_type, inbound_onion};\n     }\n }\n-inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = nullopt) { return ConsumeNode<true>(fdp, node_id_in); }\n+inline std::unique_ptr<CNode> ConsumeNodeAsUniquePtr(FuzzedDataProvider& fdp, const std::optional<NodeId>& node_id_in = std::nullopt) { return ConsumeNode<true>(fdp, node_id_in); }\n \n-void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, const std::optional<int32_t>& version_in = std::nullopt) noexcept;\n+void FillNode(FuzzedDataProvider& fuzzed_data_provider, CNode& node, bool init_version) noexcept;\n \n template <class T = const BasicTestingSetup>\n std::unique_ptr<T> MakeFuzzingContext(const std::string& chain_name = CBaseChainParams::REGTEST, const std::vector<const char*>& extra_args = {})"
      }
    ]
  }
]