[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580593078",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580593078",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 580593078,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDU5MzA3OA==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T05:52:14Z",
    "updated_at": "2020-01-31T05:56:58Z",
    "author_association": "MEMBER",
    "body": "Some relevant info about the analysis of the cost (maintenance burden) vs benefit (supporting a better tested & simpler codebase) of these changes \r\n\r\n**pros:**\r\n- these changes add a function to the scheduler with unit test coverage\r\n- the function would only be used when running regtest\r\n- intent is for this to support easier functional testing for other features \r\n- currently, two explicit use cases \r\n\r\n**cons:**\r\n- all code adds maintenance burden \r\n- c++ code specifically to support testing should only be added when necessary \r\n- the scheduler mock is not required for functionally testing the current use cases. workarounds are possible \r\n\r\nexplanation of the two use cases & workarounds.\r\n1. #18038 uses the mock to trigger the next attempt at initial broadcast, which is scheduled for every 10 minutes. Alternatively, the `REATTEMPT_BROADCAST_INTERVAL` constant that indicates scheduler frequency could be defined as a chain param and made more frequent for regtest (thanks @MarcoFalke for the suggestion).\r\n2. In PR #16698, specifically commit baf7de22108eb9081ddc700067b72409efbc382e, the mock would allow deleting some of the c++ code (but still be testable.) In the patch right now, the scheduler periodically calls `MaybeResendWalletTxs` which calls `ResubmitWalletTransactionsToMempool` which uses `nNextResend` to track time. `nNextResend` implements a mockable time so can be tested from the functional tests. If the scheduler mock is supported, the scheduler could directly invoke the resubmit function & drop the member var to maintain time tracking. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580593078/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580596981",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580596981",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 580596981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDU5Njk4MQ==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T06:09:40Z",
    "updated_at": "2020-01-31T06:09:40Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK 58c4c19.\r\n\r\nThis seems like a generally useful test harness, and the code looks basically correct to me. I think the pointer to the scheduler is a little crass, but it isn't a bad option considering the scheduler is created as a static in init.cpp (someone can clean it up later if they make the schedule a non static).\r\n\r\nThe time delta technically could underflow, but I don't think that's the base time being subtracted from is a time point (and we're far from the unix epoch time). If this weren't just testing harness, it might be worth it to check for underflow, but since we'd basically be having to actively try to shoot ourselves in the foot during a test to get an underflow this usage is fine. \r\n\r\nGreat work!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580596981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580600650",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580600650",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 580600650,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDYwMDY1MA==",
    "user": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?u=a0e0040aacd7d4f0787481e8ac30b494fa429e11&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T06:24:43Z",
    "updated_at": "2020-01-31T06:24:43Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. \r\n\r\nLooks like there's an issue with the new `mockforward` unit test, as most of the [Travis instances](https://travis-ci.org/bitcoin/bitcoin/builds/644207906) are failing:\r\n```bash\r\ntest/scheduler_tests.cpp(158): Entering test case \"mockforward\"\r\ntest/scheduler_tests.cpp(188): error: in \"scheduler_tests/mockforward\": check num_tasks == 1 has failed [3 != 1]\r\ntest/scheduler_tests.cpp(191): error: in \"scheduler_tests/mockforward\": check counter == 2 has failed [0 != 2]\r\ntest/scheduler_tests.cpp(197): error: in \"scheduler_tests/mockforward\": check delta > 2*60 && delta < 3*60 has failed\r\ntest/scheduler_tests.cpp(158): Leaving test case \"mockforward\"; testing time: 6321us\r\ntest/scheduler_tests.cpp(13): Leaving test suite \"scheduler_tests\"; testing time: 146946us\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580600650/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580639273",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580639273",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 580639273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDYzOTI3Mw==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T08:40:11Z",
    "updated_at": "2020-02-12T23:22:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18038 (P2P: Mempool tracks locally submitted transactions to improve privacy by amitiuttarwar)\n* #17997 (refactor: Remove mempool global from net by MarcoFalke)\n* #17037 (Testschains: Many regtests with different genesis and default datadir by jtimon)\n* #17032 (Tests: Chainparams: Make regtest almost fully customizable by jtimon)\n* #16770 (Chainparams: Rename IsTestChain() to AllowAcceptNonstd() by jtimon)\n* #16365 (Log RPC parameters (arguments) if -debug=rpcparams by LarryRuane)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580639273/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580650220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580650220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 580650220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MDY1MDIyMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-31T09:12:59Z",
    "updated_at": "2020-01-31T09:13:43Z",
    "author_association": "MEMBER",
    "body": "No objection, but some observations:\r\n\r\n* In light of the test failures on some platforms, we obviously need to make sure this is doing the right thing. Timestamp handling isn't obviously trivial especially in combination with condition variables. See also the numerous scheduler crashed that no one can explain: #16307, #16027, #14200, ...\r\n\r\n* \"Mocking\" code so that tests run the mocked code and production runs a different code might defeat the whole point of having the tests in the first place. Tests (especially functional tests) are supposed to test the production code (paths) as closely as possible.\r\n\r\nSo my personal preference would be to go with some minimally invasive and simple approach like the chainparam. But if everyone else likes this mock approach because it could be used for other testing needs as well, then I won't object having this merged.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/580650220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582507502",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-582507502",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 582507502,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjUwNzUwMg==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-05T17:00:54Z",
    "updated_at": "2020-02-05T17:00:54Z",
    "author_association": "MEMBER",
    "body": "I addressed review comments & tests are now passing CI. Added checks in RPC function & scheduler function to ensure reasonable values / no underflow.\r\n\r\nThis PR has received 3 ACKs - utACK from @JeremyRubin & concept ACKs from @promag @fanquake. Would appreciate re-review \ud83d\ude4f\ud83c\udffd",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582507502/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582551040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-582551040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 582551040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjU1MTA0MA==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-05T18:39:36Z",
    "updated_at": "2020-02-05T18:39:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "re-utACK ecb0ad5",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582551040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582707742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-582707742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 582707742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MjcwNzc0Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-06T02:32:02Z",
    "updated_at": "2020-02-06T02:32:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag I think it's reasonable that the mockscheduler RPC doesn't have coverage presently -- @amitiuttarwar has a larger project that this testing harness was extracted from as a reviewable chunk, a later PR will be using it extensively to test rebroadcasting logic (see https://github.com/bitcoin/bitcoin/pull/18038). I think it's reasonable that the coverage in RPC tests lives there & there isn't a separate one just testing the testing rpc, but feel free to disagree.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/582707742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583089349",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-583089349",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 583089349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzA4OTM0OQ==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-06T20:15:16Z",
    "updated_at": "2020-02-06T20:15:16Z",
    "author_association": "MEMBER",
    "body": "thanks for review @promag!\r\n\r\nRE testing mockscheduler RPC- as @JeremyRubin mentioned, my next PR uses it [here](https://github.com/bitcoin/bitcoin/pull/18038/files?file-filters%5B%5D=.py#diff-5e6f5e6aab04f82ec4b58148c4bdec72R68) , so the happy path will be tested. But if you prefer separate explicit test coverage, I can add. \r\n\r\nI'll incorporate style nits if I push & invalidate current ACKs ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583089349/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583538538",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-583538538",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 583538538,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzUzODUzOA==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T18:19:58Z",
    "updated_at": "2020-02-07T18:19:58Z",
    "author_association": "MEMBER",
    "body": "changes: \r\n- `mockscheduler` rpc updated to use new `m_is_mockable_chain` chainparams property instead of `MineBlocksOnDemand`\r\n- added checks to `mockscheduler` and `MockForward` methods to ensure `delta_seconds` is within acceptable range \r\n\r\nother comments: \r\n-  considered adding functional test to test `mockscheduler` rpc, but testing the success case would require actually invoking something scheduled from the c++ code, making it look extremely similar to the PR that provides context for & builds on this one. [link to test](https://github.com/bitcoin/bitcoin/pull/18038/files?file-filters%5B%5D=.py#diff-5e6f5e6aab04f82ec4b58148c4bdec72R68). So I don't think it makes sense to test independently. \r\n\r\nSo I believe all existing review comments are addressed. \r\n\r\nThis PR is ready for review :) ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583538538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583556148",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-583556148",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 583556148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzU1NjE0OA==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T19:01:43Z",
    "updated_at": "2020-02-07T19:01:43Z",
    "author_association": "MEMBER",
    "body": "s390x travis build is failing with \"Disk space is too low!\" error. everything else is green \r\n\r\nappveyor `wallet_resendwallettransactions.py` failed, seems unlikely that its related but not impossible since `MaybeResendWalletTxs` is called by the scheduler. investigating.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/583556148/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584925124",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-584925124",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 584925124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDkyNTEyNA==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-11T23:55:07Z",
    "updated_at": "2020-02-11T23:55:07Z",
    "author_association": "MEMBER",
    "body": "Thank you for the review @MarcoFalke ! I addressed your concerns in a commit (with one open question), currently opened as a PR on my fork: https://github.com/amitiuttarwar/bitcoin/pull/2, will make as a follow up PR if this one gets accepted. \r\n\r\nTried to investigate the appveyor failure and cannot see how it could possibly be related to my changes. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584925124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584979334",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-584979334",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 584979334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NDk3OTMzNA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T01:57:31Z",
    "updated_at": "2020-02-12T14:02:32Z",
    "author_association": "MEMBER",
    "body": "I'd prefer to fixup the style fixes you want to make into the commits in this pull or not do them at all. Splitting them into a separate pull only causes noise in the git history and on GitHub.\r\n\r\nRationale is that we generally discourage style-only pull requests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/584979334/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585393655",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-585393655",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 585393655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTM5MzY1NQ==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-12T20:06:28Z",
    "updated_at": "2020-02-13T02:47:28Z",
    "author_association": "MEMBER",
    "body": "incorporated style updates & made `NodeContext.scheduler` a `unique_ptr` instead of raw pointer. \r\n\r\nupdate: Travis build failing on my new test. Working on debugging.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585393655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585773643",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-585773643",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 585773643,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTc3MzY0Mw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-13T14:12:42Z",
    "updated_at": "2020-02-13T14:12:42Z",
    "author_association": "MEMBER",
    "body": "Looks like travis fails with the boost exception \"invalid argument\" (https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-580650220)\r\n\r\n\r\n```\r\nRunning 3 test cases...\r\n\r\nTest cases order is shuffled using seed: 902768437\r\n\r\nEntering test module \"Bitcoin Core Test Suite\"\r\n\r\ntest/scheduler_tests.cpp(11): Entering test suite \"scheduler_tests\"\r\n\r\ntest/scheduler_tests.cpp(112): Entering test case \"singlethreadedscheduler_ordered\"\r\n\r\ntest/scheduler_tests.cpp(112): Leaving test case \"singlethreadedscheduler_ordered\"; testing time: 6488us\r\n\r\ntest/scheduler_tests.cpp(38): Entering test case \"manythreads\"\r\n\r\ntest/scheduler_tests.cpp(38): Leaving test case \"manythreads\"; testing time: 11938us\r\n\r\ntest/scheduler_tests.cpp(156): Entering test case \"mockforward\"\r\n\r\nterminate called after throwing an instance of 'boost::wrapexcept<boost::condition_error>'\r\n\r\n  what():  boost::condition_variable::do_wait_until failed in pthread_cond_timedwait: Invalid argument\r\n\r\nunknown location(0): fatal error: in \"scheduler_tests/mockforward\": signal: SIGABRT (application abort requested)\r\n\r\ntest/scheduler_tests.cpp(172): last checkpoint\r\n\r\ntest/scheduler_tests.cpp(156): Leaving test case \"mockforward\"; testing time: 455us\r\n\r\ntest/scheduler_tests.cpp(11): Leaving test suite \"scheduler_tests\"; testing time: 18977us\r\n\r\nLeaving test module \"Bitcoin Core Test Suite\"; testing time: 19091us\r\n\r\n*** 1 failure is detected in the test module \"Bitcoin Core Test Suite\"",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585773643/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585821772",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-585821772",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 585821772,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NTgyMTc3Mg==",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?u=f0ef8142342bcda68fe46c952d3c653456811ed4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-13T15:40:52Z",
    "updated_at": "2020-02-13T15:40:52Z",
    "author_association": "MEMBER",
    "body": "yup :( I'm investigating. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/585821772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587225814",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-587225814",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 587225814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzIyNTgxNA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-18T01:00:00Z",
    "updated_at": "2020-02-18T01:00:00Z",
    "author_association": "MEMBER",
    "body": "ACK 8bca30ea17cd4c1dacee28eaa27e5fa3493b021d, only change is some style fixups \ud83d\udd53\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 8bca30ea17cd4c1dacee28eaa27e5fa3493b021d, only change is some style fixups \ud83d\udd53\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUjeVAv/YuSt6tTjGv6SeqSUSmrURxHQKmaO8WtGS57M8zxKiQLp2IlBrXaccECP\r\nktwXi7z+OxVlfaw/acuEoFZn5kIUjOC19D7tIegGh6qIWJxVYcT2cDghEG3JfTFD\r\nH+gDfpx6+JUjJcXybDwrc0jeOpva0aR6WOV/BBv+JuaOM0G2SXZPFS+DeUkSWGez\r\n8gMhSY4FE1sjGxtYSyhdtlHpROL1qX22joa8kdgVplJIuQJOmn8TGjI/4s4Xu6j7\r\n5Afa60Iqnbqb9paSMyEEi7XPhjOPKtLYWwB/K+itYjvbipaz4uw4yd5+YfMdYy45\r\nF/KSW9+7bYCSGE+ggEUQykrR60CYVPJay5WbwfDs0UdZhKmfyjlbx/iysTx63uKs\r\n4PKeLZoNCJynQA+nodf1vrXuA8nxJgfYdhDP8bWnUCMdcP84FKPdrG7r3v2x6fBt\r\nMeCCRSOXPNEAFtu59xnZw9mc+Dctx5EUyznhy5ybp/3QCUlM9DhxvTbx0H7sFzDo\r\nBTRQiIFP\r\n=2pAG\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `0370e988925c0bd1dc04b6ff2d771181e26d2b0eb3b28b69eb3c0a0976243393  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e8929401080370e988925c0bd1dc04b6ff2d771181e26d2b0eb3b28b69eb3c0a0976243393f01049574cb74c254b4cff2d1668f70cda6108fff01026c290b8151fb0781b6fc0cb81208ee708f1045e4b36fff0088fd6d203aa14532e0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff0103be0ca71667e5d7ea20c51864f1c399f08f1045e4b36fff0086f80792bcdea6ad20083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6dfff01047d88e9bd9e0a63096af6fd0ba3e7d1a08f1045e4b36fff008a56702a3a200defa0083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6df010c2d3773832b121a1b02e763d79bdb94b08f1045e4b36fff0089da1ba29759a55190083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/587225814/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588348216",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-588348216",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 588348216,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODM0ODIxNg==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-19T17:39:35Z",
    "updated_at": "2020-02-19T17:39:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "This PR seems to have made bitcoinbuilds.org pretty unhappy:\r\n\r\n```\r\n  what():  boost::condition_variable::do_wait_until failed in pthread_cond_timedwait: Invalid argument\r\nunknown location(0): fatal error: in \"scheduler_tests/mockforward\": signal: SIGABRT (application abort requested)\r\ntest/scheduler_tests.cpp(172): last checkpoint\r\n```\r\nExample build:\r\nhttps://bitcoinbuilds.org/index.php?job=5c006a9e-b8e6-4932-a6a8-3ead3d1fc188\r\n\r\nAny ideas why we see a SIGABRT?\r\n\r\nI think it happens at `std::thread scheduler_thread([&]() { scheduler.serviceQueue(); });` in the scheduler tests.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588348216/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588359944",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-588359944",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 588359944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODM1OTk0NA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-19T18:02:36Z",
    "updated_at": "2020-02-19T18:15:34Z",
    "author_association": "MEMBER",
    "body": "@jonasschnelli See #18174",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588359944/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588361380",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-588361380",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 588361380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODM2MTM4MA==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-19T18:05:30Z",
    "updated_at": "2020-02-19T18:05:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "@MarcoFalke: I guess you where trying to refer to #18174. Looking into that now...",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588361380/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588371299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#issuecomment-588371299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/18037",
    "id": 588371299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4ODM3MTI5OQ==",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?u=eab5d0cdbb6cc25087cb61d4ca4a6f85255f42a7&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-19T18:26:14Z",
    "updated_at": "2020-02-19T18:26:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Master (`Linux 64 depends tests`) fails when using ccache cache (seems to be reproducible 100%):\r\nhttps://bitcoinbuilds.org/index.php?job=c1d3a0f5-7d47-40e6-9c9b-cac397c5ff30\r\n\r\nMaster succeeds when clearing the ccache cache (but keeping the dependency cache):\r\nhttps://bitcoinbuilds.org/index.php?job=f28f0356-d431-4428-832b-49bc870042f5",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/588371299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373789747",
    "pull_request_review_id": 351893286,
    "id": 373789747,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc4OTc0Nw==",
    "diff_hunk": "@@ -366,6 +369,27 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand())\n+        throw std::runtime_error(\"mockscheduler for regression testing (-regtest mode) only\");",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "kristapsk",
      "id": 4500994,
      "node_id": "MDQ6VXNlcjQ1MDA5OTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4500994?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kristapsk",
      "html_url": "https://github.com/kristapsk",
      "followers_url": "https://api.github.com/users/kristapsk/followers",
      "following_url": "https://api.github.com/users/kristapsk/following{/other_user}",
      "gists_url": "https://api.github.com/users/kristapsk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kristapsk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kristapsk/subscriptions",
      "organizations_url": "https://api.github.com/users/kristapsk/orgs",
      "repos_url": "https://api.github.com/users/kristapsk/repos",
      "events_url": "https://api.github.com/users/kristapsk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kristapsk/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: \"mockscheduler **is** for regression testing (-regtest mode) only\"?",
    "created_at": "2020-02-01T16:56:00Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373789747",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373789747"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373789747"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373789747/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 384,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886512",
    "pull_request_review_id": 351978107,
    "id": 373886512,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NjUxMg==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue){",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 12,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "5c9d5bed7205161d6870d199d223af37efe66179",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "5c9d5bed7205161d6870d199d223af37efe66179\r\n\r\nnit, space before `{`.",
    "created_at": "2020-02-02T23:56:43Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373886512",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886512"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373886512"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886512/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 125,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886976",
    "pull_request_review_id": 351978107,
    "id": 373886976,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4Njk3Ng==",
    "diff_hunk": "@@ -11,6 +11,7 @@\n class BanMan;\n class CConnman;\n class CTxMemPool;\n+class CScheduler;",
    "path": "src/node/context.h",
    "position": 4,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "58c4c1943e082060f38054ed4738478635ab9c31\r\n\r\nnit, keep sorted.",
    "created_at": "2020-02-03T00:04:13Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373886976",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886976"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373886976"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373886976/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887012",
    "pull_request_review_id": 351978107,
    "id": 373887012,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NzAxMg==",
    "diff_hunk": "@@ -5,15 +5,18 @@\n \n #include <httpserver.h>\n #include <key_io.h>\n+#include <node/context.h>\n #include <outputtype.h>\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <scheduler.h>",
    "path": "src/rpc/misc.cpp",
    "position": 9,
    "original_position": 10,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "58c4c1943e082060f38054ed4738478635ab9c31\r\n\r\nnit, keep sorted.",
    "created_at": "2020-02-03T00:05:01Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887012",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887012"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887012"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887012/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 13,
    "original_line": 13,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887202",
    "pull_request_review_id": 351978107,
    "id": 373887202,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NzIwMg==",
    "diff_hunk": "@@ -5,15 +5,18 @@\n \n #include <httpserver.h>\n #include <key_io.h>\n+#include <node/context.h>\n #include <outputtype.h>\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <scheduler.h>\n #include <util/check.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <util/validation.h>\n+#include <init.h>",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "58c4c1943e082060f38054ed4738478635ab9c31\r\n\r\nWhy is this included?",
    "created_at": "2020-02-03T00:08:00Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887202",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887202"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887202"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887202/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887397",
    "pull_request_review_id": 351978107,
    "id": 373887397,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4NzM5Nw==",
    "diff_hunk": "@@ -366,6 +369,27 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand())\n+        throw std::runtime_error(\"mockscheduler for regression testing (-regtest mode) only\");\n+\n+    RPCTypeCheck(request.params, {UniValue::VNUM});\n+\n+    g_rpc_node->scheduler->MockForward(boost::chrono::seconds(request.params[0].get_int64()));",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 39,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "58c4c1943e082060f38054ed4738478635ab9c31\r\n\r\nMaybe check `delta_time > 0`?",
    "created_at": "2020-02-03T00:11:00Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887397",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887397"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887397"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887397/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 388,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887966",
    "pull_request_review_id": 351979716,
    "id": 373887966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg4Nzk2Ng==",
    "diff_hunk": "@@ -155,4 +155,46 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // finish up\n+    MicroSleep(600);\n+    scheduler.stop(false);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ca57312e5b0dc9d28766369b963395f1690e0b4f",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ca57312e5b0dc9d28766369b963395f1690e0b4f\r\n\r\nMaybe change this to:\r\n```cpp\r\nscheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);\r\n```\r\nand remove the sleep above.",
    "created_at": "2020-02-03T00:19:02Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r373887966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/373887966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 183,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375038347",
    "pull_request_review_id": 353441995,
    "id": 375038347,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzODM0Nw==",
    "diff_hunk": "@@ -5,15 +5,18 @@\n \n #include <httpserver.h>\n #include <key_io.h>\n+#include <node/context.h>\n #include <outputtype.h>\n #include <rpc/blockchain.h>\n #include <rpc/server.h>\n #include <rpc/util.h>\n #include <script/descriptor.h>\n+#include <scheduler.h>\n #include <util/check.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n #include <util/validation.h>\n+#include <init.h>",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "58c4c1943e082060f38054ed4738478635ab9c31",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "good catch. was left over from a previous iteration ",
    "created_at": "2020-02-05T03:05:08Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375038347",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375038347"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375038347"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375038347/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 19,
    "side": "RIGHT",
    "in_reply_to_id": 373887202
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375039093",
    "pull_request_review_id": 353442886,
    "id": 375039093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTAzOTA5Mw==",
    "diff_hunk": "@@ -155,4 +155,46 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // finish up\n+    MicroSleep(600);\n+    scheduler.stop(false);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ca57312e5b0dc9d28766369b963395f1690e0b4f",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "clever. thank you! \r\n\r\nlets see if travis likes it \ud83e\udd1e\ud83c\udffd",
    "created_at": "2020-02-05T03:09:03Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375039093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375039093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375039093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375039093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 183,
    "side": "RIGHT",
    "in_reply_to_id": 373887966
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375068638",
    "pull_request_review_id": 353477476,
    "id": 375068638,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2ODYzOA==",
    "diff_hunk": "@@ -155,4 +155,46 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // finish up\n+    MicroSleep(600);\n+    scheduler.stop(false);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 29,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ca57312e5b0dc9d28766369b963395f1690e0b4f",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yay! looking good. only travis failure seemed unrelated.",
    "created_at": "2020-02-05T05:43:39Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375068638",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375068638"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375068638"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375068638/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 183,
    "side": "RIGHT",
    "in_reply_to_id": 373887966
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375441938",
    "pull_request_review_id": 353957117,
    "id": 375441938,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTQ0MTkzOA==",
    "diff_hunk": "@@ -570,6 +600,7 @@ static const CRPCCommand commands[] =\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"mockscheduler\",          &mockscheduler,          {\"delta_time\"}},",
    "path": "src/rpc/misc.cpp",
    "position": 54,
    "original_position": 52,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Follow up, would be cool to skip this when !regtest and in `mockscheduler` would be `assert(Params().MineBlocksOnDemand())`.",
    "created_at": "2020-02-05T18:51:16Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375441938",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375441938"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375441938"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375441938/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 605,
    "original_line": 605,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375582987",
    "pull_request_review_id": 354133285,
    "id": 375582987,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4Mjk4Nw==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What's the problem of doing\r\n```cpp\r\ntemp_queue.emplace_hint(temp_queue.cend(), element.first - delta_seconds, element.second);\r\n```\r\nLooks fine to me since `wait_until` returns when system time is later than that absolute time.\r\n\r\nDidn't check the case for boost < 1.50.",
    "created_at": "2020-02-06T00:26:10Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375582987",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375582987"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375582987"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375582987/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584231",
    "pull_request_review_id": 354133285,
    "id": 375584231,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4NDIzMQ==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, you can drop `()`.",
    "created_at": "2020-02-06T00:30:53Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375584231",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584231"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375584231"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584231/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 163,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584339",
    "pull_request_review_id": 354133285,
    "id": 375584339,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4NDMzOQ==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, just capture `&scheduler`.",
    "created_at": "2020-02-06T00:31:17Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375584339",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584339"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375584339"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375584339/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 182,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375588886",
    "pull_request_review_id": 354140279,
    "id": 375588886,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU4ODg4Ng==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm curious- is this for style or is there a difference in behavior? \r\nfrom what I can tell the behavior should be the same?\r\ndocs: \"& (implicitly capture the used automatic variables by reference)\" \r\ncompiler explorer: https://godbolt.org/z/QfeAVF",
    "created_at": "2020-02-06T00:48:41Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375588886",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375588886"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375588886"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375588886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 182,
    "side": "RIGHT",
    "in_reply_to_id": 375584339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609579",
    "pull_request_review_id": 354164429,
    "id": 375609579,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwOTU3OQ==",
    "diff_hunk": "@@ -570,6 +600,7 @@ static const CRPCCommand commands[] =\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"mockscheduler\",          &mockscheduler,          {\"delta_time\"}},",
    "path": "src/rpc/misc.cpp",
    "position": 54,
    "original_position": 52,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's reasonable for @amitiuttarwar to just copy exactly what setmocktime is doing in this regard.",
    "created_at": "2020-02-06T02:14:37Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375609579",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609579"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375609579"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609579/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 605,
    "original_line": 605,
    "side": "RIGHT",
    "in_reply_to_id": 375441938
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609928",
    "pull_request_review_id": 354164429,
    "id": 375609928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYwOTkyOA==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this is a style preference (plus it's in tests) so it's whatever.\r\n\r\nFor whatever reason, I prefer this form when it's a function that should be called multiple times (as dummy is) and the no () form when it's more akin to a std::bind for a call-once thing.",
    "created_at": "2020-02-06T02:16:25Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375609928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375609928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375609928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 163,
    "side": "RIGHT",
    "in_reply_to_id": 375584231
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611313",
    "pull_request_review_id": 354164429,
    "id": 375611313,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMTMxMw==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think & is perfectly clear, it's just for style.\r\n\r\nI agree in principle if a lambda is multiple lines and has arguments it's usually better to explicitly capture, but I think implicit capture is totally reasonable here.",
    "created_at": "2020-02-06T02:23:26Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375611313",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611313"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375611313"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611313/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 182,
    "side": "RIGHT",
    "in_reply_to_id": 375584339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611897",
    "pull_request_review_id": 354167207,
    "id": 375611897,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxMTg5Nw==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "element.first - delta_seconds may underflow, so std::max prevents underflow.",
    "created_at": "2020-02-06T02:26:09Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375611897",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611897"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375611897"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375611897/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375710783",
    "pull_request_review_id": 354288066,
    "id": 375710783,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTcxMDc4Mw==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, should be same, however in L163 you already explicitly capture `&counter` so I though you would like to do the same here.",
    "created_at": "2020-02-06T09:03:10Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375710783",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375710783"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r375710783"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/375710783/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 182,
    "side": "RIGHT",
    "in_reply_to_id": 375584339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376039723",
    "pull_request_review_id": 354717228,
    "id": 376039723,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzOTcyMw==",
    "diff_hunk": "@@ -570,6 +600,7 @@ static const CRPCCommand commands[] =\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"mockscheduler\",          &mockscheduler,          {\"delta_time\"}},",
    "path": "src/rpc/misc.cpp",
    "position": 54,
    "original_position": 52,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Huh? `static const commands[]=` will get done prior to working out what chain is in use, so you'd have to do a much more serious rework to remove it from the list of rpcs entirely.",
    "created_at": "2020-02-06T19:35:38Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376039723",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376039723"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376039723"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376039723/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 605,
    "original_line": 605,
    "side": "RIGHT",
    "in_reply_to_id": 375441938
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376063957",
    "pull_request_review_id": 354748619,
    "id": 376063957,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA2Mzk1Nw==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Underflow how? You mean be less than current time?",
    "created_at": "2020-02-06T20:27:25Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376063957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376063957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376063957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376063957/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376065647",
    "pull_request_review_id": 354750872,
    "id": 376065647,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA2NTY0Nw==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "if `element.first - delta_seconds < now` everything will process fine (as in the previous version you reviewed)\r\n\r\nbut if `delta_seconds > element.first` then there could be an underflow. seems highly unlikely because `element.first` is a time point, but doesn't hurt to have this guarantee",
    "created_at": "2020-02-06T20:31:12Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376065647",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376065647"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376065647"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376065647/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376116886",
    "pull_request_review_id": 354816585,
    "id": 376116886,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExNjg4Ng==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This looks equivalent to\r\n\r\n```\r\nstd::max(boost::chrono::system_clock::now(), element.first - delta_seconds);\r\n```\r\n\r\nAlso perhaps you only want to invoke `now()` once and cache it rather than querying it for every queue element.\r\n",
    "created_at": "2020-02-06T22:26:00Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376116886",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376116886"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376116886"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376116886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376118523",
    "pull_request_review_id": 354816585,
    "id": 376118523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExODUyMw==",
    "diff_hunk": "@@ -366,6 +368,34 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand()) {",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I realize this is copied from `setmocktime`, but it feels very strange to use MineBlocksOnDemand to gate time mocking. Perhaps it's worth adding a separate chainparams property for time mocking, and then using it for both `setmocktime` and `mockscheduler`.",
    "created_at": "2020-02-06T22:30:15Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376118523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376118523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376118523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376118523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376119076",
    "pull_request_review_id": 354816585,
    "id": 376119076,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjExOTA3Ng==",
    "diff_hunk": "@@ -570,6 +600,7 @@ static const CRPCCommand commands[] =\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"mockscheduler\",          &mockscheduler,          {\"delta_time\"}},",
    "path": "src/rpc/misc.cpp",
    "position": 54,
    "original_position": 52,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's a hidden RPC so I don't think this matters much.",
    "created_at": "2020-02-06T22:31:35Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376119076",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376119076"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376119076"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376119076/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 605,
    "original_line": 605,
    "side": "RIGHT",
    "in_reply_to_id": 375441938
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376125408",
    "pull_request_review_id": 354827089,
    "id": 376125408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEyNTQwOA==",
    "diff_hunk": "@@ -570,6 +600,7 @@ static const CRPCCommand commands[] =\n \n     /* Not shown in help */\n     { \"hidden\",             \"setmocktime\",            &setmocktime,            {\"timestamp\"}},\n+    { \"hidden\",             \"mockscheduler\",          &mockscheduler,          {\"delta_time\"}},",
    "path": "src/rpc/misc.cpp",
    "position": 54,
    "original_position": 52,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@ajtowns I was thinking that `CRPCTable::execute` could take into account some `CRPCCommand` flag and then it would result in `RPC_METHOD_NOT_FOUND`.",
    "created_at": "2020-02-06T22:48:12Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376125408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376125408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376125408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376125408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 605,
    "original_line": 605,
    "side": "RIGHT",
    "in_reply_to_id": 375441938
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376134174",
    "pull_request_review_id": 354837858,
    "id": 376134174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzNDE3NA==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa that misses the point above. if delta_seconds > element.first, it underflows and then it can be greater than now().\r\n\r\nI guess equivalently, if delta_seconds is too large, now() + delta_seconds may overflow... but that seems less likely because we don't know if this system_clock::now() which feeds into the queue is set to start at time 0 on startup.\r\n\r\n\r\nNote also that caching now(), were emplace hint not used, would mean that the tmp queue would potentially be unstable ordered w.r.t. jobs with the same timeout.",
    "created_at": "2020-02-06T23:11:42Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376134174",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376134174"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376134174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376134174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376139778",
    "pull_request_review_id": 354844714,
    "id": 376139778,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEzOTc3OA==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> if delta_seconds > element.first, it underflows and then it can be greater than now().\r\n\r\nAccording to https://en.cppreference.com/w/cpp/chrono/duration, the representation type for the standard clock values is signed, so underflow should not be any issue (or at least not more than we need to worry about the clock overflowing in the first place).\r\n\r\n> Note also that caching now(), were emplace hint not used, would mean that the tmp queue would potentially be unstable ordered w.r.t. jobs with the same timeout.\r\n\r\nIf that's a concern, it already is. There is no guarantee that subsequent calls to `now()` will be strictly increasing.",
    "created_at": "2020-02-06T23:28:11Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376139778",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376139778"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376139778"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376139778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376168538",
    "pull_request_review_id": 354878310,
    "id": 376168538,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2ODUzOA==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "RE: underflow / overflow- \r\nthe intent is to ensure `delta_seconds` is reasonable. I'm thinking of asserting the value is between 0 & 3600 from both this `MockForward` method & the `mockscheduler` rpc method. \r\nand reverting to the original `temp_queue.emplace_hint(temp_queue.cend(), element.first - delta_seconds, element.second)`\r\n",
    "created_at": "2020-02-07T01:10:59Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376168538",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376168538"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376168538"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376168538/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376169344",
    "pull_request_review_id": 354879172,
    "id": 376169344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE2OTM0NA==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ah -- note that it's boost and not std... I think that the seconds duration is guaranteed to be signed 64, but I couldn't find anything on system_clock's duration. Good catch on the non steady adjustable clock of system_clock, I had missed that. Seems like a general thing that our scheduler should be on a monotonic hardware clock rather than something that adjusting the system date could adjust (which would be another way to do this patch -- just fast forward the system time). ",
    "created_at": "2020-02-07T01:13:56Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376169344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376169344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376169344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376169344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376175543",
    "pull_request_review_id": 354886491,
    "id": 376175543,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE3NTU0Mw==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Even with a monotonic clock there is no guarantee that subsequent requests to `now()` are *strictly* increasing (they'll be *monotonically* increasing, but that's not enough to guarantee a stable sorting order absent hints).",
    "created_at": "2020-02-07T01:40:01Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376175543",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376175543"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376175543"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376175543/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199329",
    "pull_request_review_id": 354913433,
    "id": 376199329,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5OTMyOQ==",
    "diff_hunk": "@@ -366,6 +368,34 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand()) {",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@sipa what would you think about just abstracting out a new function named `AllowMockableTime()` and having it call MineBlocksOnDemand  -- that way someone can clean up the logic later, I'm sure we're doing other weird things like this that could also be fixed.",
    "created_at": "2020-02-07T03:29:29Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376199329",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199329"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376199329"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199329/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT",
    "in_reply_to_id": 376118523
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199487",
    "pull_request_review_id": 354913648,
    "id": 376199487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE5OTQ4Nw==",
    "diff_hunk": "@@ -366,6 +368,34 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand()) {",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Or just making it the responsibility of follow up work, I don't think it's that bad (if someone reviewed using MineBlocksOnDemand for this once... it should still be fine now)",
    "created_at": "2020-02-07T03:30:27Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376199487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376199487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376199487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT",
    "in_reply_to_id": 376118523
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506598",
    "pull_request_review_id": 355307342,
    "id": 376506598,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNjU5OA==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&]{ scheduler.stop(false); }, 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "updated",
    "created_at": "2020-02-07T17:12:55Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376506598",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506598"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376506598"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506598/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 182,
    "side": "RIGHT",
    "in_reply_to_id": 375584339
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506845",
    "pull_request_review_id": 355307648,
    "id": 376506845,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNjg0NQ==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter](){counter++;};",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 9,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "updated",
    "created_at": "2020-02-07T17:13:25Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376506845",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506845"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376506845"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376506845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 163,
    "side": "RIGHT",
    "in_reply_to_id": 375584231
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376507928",
    "pull_request_review_id": 355309139,
    "id": 376507928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwNzkyOA==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "reverted to original (`element.first - delta_seconds`), but added checks in `MockForward` and `mockscheduler` that `delta_seconds` is between 0 and 3600. \r\n\r\nwhich means we no longer invoke `now()` =P \r\n\r\nlmk if there are any further concerns",
    "created_at": "2020-02-07T17:15:55Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376507928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376507928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376507928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376507928/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376509388",
    "pull_request_review_id": 355311096,
    "id": 376509388,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUwOTM4OA==",
    "diff_hunk": "@@ -366,6 +368,34 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().MineBlocksOnDemand()) {",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree that using `MineBlocksOnDemand` felt weird. Added `m_is_mockable_chain` to chainparams & implemented for `mockscheduler`. If it looks okay I'll do a follow up PR to use that for `mocktime`. ",
    "created_at": "2020-02-07T17:19:14Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376509388",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376509388"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376509388"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376509388/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 382,
    "side": "RIGHT",
    "in_reply_to_id": 376118523
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376510655",
    "pull_request_review_id": 355312770,
    "id": 376510655,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjUxMDY1NQ==",
    "diff_hunk": "@@ -114,6 +114,27 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    {\n+        boost::unique_lock<boost::mutex> lock(newTaskMutex);\n+\n+        // use temp_queue to maintain updated schedule\n+        std::multimap<boost::chrono::system_clock::time_point, Function> temp_queue;\n+\n+        for (const auto& element : taskQueue) {\n+            boost::chrono::system_clock::time_point new_time = std::max(boost::chrono::system_clock::now() + delta_seconds, element.first) - delta_seconds;",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "ecb0ad52a0f0c31a2f08e081f7ab6dfb88de3490",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "lgtm",
    "created_at": "2020-02-07T17:22:06Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376510655",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376510655"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376510655"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376510655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 126,
    "side": "RIGHT",
    "in_reply_to_id": 375582987
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818501",
    "pull_request_review_id": 355636114,
    "id": 376818501,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODUwMQ==",
    "diff_hunk": "@@ -114,6 +114,28 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    assert(delta_seconds.count() > 0 && delta_seconds.count() < 3600);",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "69468a93737ed9d4a38e04bdce20778ce8191810",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 69468a93737ed9d4a38e04bdce20778ce8191810:\r\n\r\nCould add a comment why 3600? Also, why not use a named compile time constant like `boost::chrono::hours{1}`?",
    "created_at": "2020-02-09T21:47:44Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376818501",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818501"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376818501"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818501/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 119,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818713",
    "pull_request_review_id": 355636114,
    "id": 376818713,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgxODcxMw==",
    "diff_hunk": "@@ -55,6 +55,11 @@ class CScheduler\n     // need more accurate scheduling, don't use this method.\n     void scheduleEvery(Function f, int64_t deltaMilliSeconds);\n \n+    // Regtest only- mock the scheduler to fast forward in time",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "69468a93737ed9d4a38e04bdce20778ce8191810",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n    /**\r\n     * Mock the scheduler to fast forward in time\r\n```\r\n\r\nThis is not limited to regtest. It can be called in unit tests as well, or in #17037 testchains.",
    "created_at": "2020-02-09T21:50:57Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376818713",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818713"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376818713"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376818713/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820054",
    "pull_request_review_id": 355636114,
    "id": 376820054,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMDA1NA==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter]{counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3679f096c2ef52fa8673e5cd4064154a1889fa12",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 3679f096c2ef52fa8673e5cd4064154a1889fa12\r\n\r\nNo features of boost::thread are needed here, so you might as well use a plain std thread\r\n```suggestion\r\n    std::thread scheduler_thread([&]() { scheduler.serviceQueue(); });\r\n```",
    "created_at": "2020-02-09T22:07:45Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820054",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820054"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820054"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820054/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 176,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820081",
    "pull_request_review_id": 355636114,
    "id": 376820081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMDA4MQ==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter]{counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&scheduler]{ scheduler.stop(false); }, 1);\n+    scheduler_thread.join();\n+\n+    // check that the queue only has one job remaining\n+    num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3679f096c2ef52fa8673e5cd4064154a1889fa12",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 3679f096c2ef52fa8673e5cd4064154a1889fa12:\r\n\r\n```suggestion\r\n    BOOST_CHECK_EQUAL(num_tasks, 1);\r\n```",
    "created_at": "2020-02-09T22:08:05Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 187,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820487",
    "pull_request_review_id": 355636114,
    "id": 376820487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMDQ4Nw==",
    "diff_hunk": "@@ -231,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         m_is_test_chain = true;\n-\n+        m_is_mockable_chain = false;",
    "path": "src/chainparams.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3392d690cfb338e1a9a9d7347710c0744e4486d5",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit 3392d690cfb338e1a9a9d7347710c0744e4486d5:\r\n\r\nthis should be true, otherwise one has to change this in the source code when wanting to test on testnet. While there is an argument for test params to be as close to main params as possible, I think this does not apply to params that have been introduced for primarily testing purposes. (See also my `m_is_test_chain`, which turned out to be too general and people prefer a per-parameter toggle).\r\n\r\nSo I think this should be true to not hinder testing on testnet.",
    "created_at": "2020-02-09T22:13:42Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 235,
    "original_line": 235,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820692",
    "pull_request_review_id": 355636114,
    "id": 376820692,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMDY5Mg==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit cf04e02bbe14257a1513b029231cb6a21c9766ac:\r\n\r\n```suggestion\r\n    RPCHelpMan{\"mockscheduler\",\r\n```\r\n\r\nExcessive whitespace?",
    "created_at": "2020-02-09T22:16:22Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820692",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820692"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376820692"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376820692/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376821035",
    "pull_request_review_id": 355636114,
    "id": 376821035,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgyMTAzNQ==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"mockscheduler is for regression testing (-regtest mode) only\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VNUM});\n+    int64_t delta_seconds = request.params[0].get_int64();\n+    if ((delta_seconds <= 0) || (delta_seconds > 3600)) {\n+        throw std::runtime_error(\"delta_time must be between 0 and 3600 seconds (1 hr)\");\n+    }\n+\n+    g_rpc_node->scheduler->MockForward(boost::chrono::seconds(delta_seconds));",
    "path": "src/rpc/misc.cpp",
    "position": 42,
    "original_position": 38,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit cf04e02bbe14257a1513b029231cb6a21c9766ac:\r\n\r\nWould be nice to protect against null pointer dereference. See `EnsureMemPool`",
    "created_at": "2020-02-09T22:20:50Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376821035",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376821035"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r376821035"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/376821035/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 396,
    "original_line": 396,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377276023",
    "pull_request_review_id": 356210817,
    "id": 377276023,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3NjAyMw==",
    "diff_hunk": "@@ -1269,6 +1269,9 @@ bool AppInitMain(NodeContext& node)\n     CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(std::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n+    assert(!node.scheduler);\n+    node.scheduler = &scheduler;",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The same should be done in `src/test/util/setup_common.cpp`, no?",
    "created_at": "2020-02-10T19:42:12Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377276023",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377276023"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377276023"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377276023/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1273,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377279190",
    "pull_request_review_id": 356214896,
    "id": 377279190,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI3OTE5MA==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter]{counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&scheduler]{ scheduler.stop(false); }, 1);\n+    scheduler_thread.join();\n+\n+    // check that the queue only has one job remaining\n+    num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3679f096c2ef52fa8673e5cd4064154a1889fa12",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yup. using `boost_check_equal` was causing a warning I didn't understand, but after pushing I realized I just need to cast to `size_t`.  ",
    "created_at": "2020-02-10T19:48:28Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377279190",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377279190"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377279190"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377279190/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 187,
    "side": "RIGHT",
    "in_reply_to_id": 376820081
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377284187",
    "pull_request_review_id": 356221146,
    "id": 377284187,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4NDE4Nw==",
    "diff_hunk": "@@ -231,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         m_is_test_chain = true;\n-\n+        m_is_mockable_chain = false;",
    "path": "src/chainparams.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3392d690cfb338e1a9a9d7347710c0744e4486d5",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "hmmm, well if we want `m_is_mockable_chain` to be true on testnet, wouldn't it be better not to introduce the param and use the `m_is_test_chain` instead? ",
    "created_at": "2020-02-10T19:58:14Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377284187",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377284187"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377284187"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377284187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 235,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 376820487
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377286728",
    "pull_request_review_id": 356224552,
    "id": 377286728,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI4NjcyOA==",
    "diff_hunk": "@@ -231,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         m_is_test_chain = true;\n-\n+        m_is_mockable_chain = false;",
    "path": "src/chainparams.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3392d690cfb338e1a9a9d7347710c0744e4486d5",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Although, conceptually, I don't know if I'm convinced. Mocking time seems useful for increasing automated test coverage, but running the node on testnet simulating closer to mainnet makes sense. But I feel pretty indifferent since even if time is allowed to be mocked on testnet, a user doesn't have to invoke it. And there's no concern around attack because its testnet. Mostly just trying to move the PR forward. ",
    "created_at": "2020-02-10T20:03:37Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377286728",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377286728"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377286728"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377286728/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 235,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 376820487
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377292698",
    "pull_request_review_id": 356232453,
    "id": 377292698,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5MjY5OA==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "hmm, I'm seeing the same amount of whitespace on the other `RPCHelpMan` calls in `rpc/misc` & `rpc/net` & `wallet/rpcwallet`. Are you seeing inconsistency? Is there something I'm missing? ",
    "created_at": "2020-02-10T20:16:32Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377292698",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377292698"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377292698"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377292698/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT",
    "in_reply_to_id": 376820692
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377294176",
    "pull_request_review_id": 356234134,
    "id": 377294176,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5NDE3Ng==",
    "diff_hunk": "@@ -231,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         m_is_test_chain = true;\n-\n+        m_is_mockable_chain = false;",
    "path": "src/chainparams.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3392d690cfb338e1a9a9d7347710c0744e4486d5",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feel free to ignore, this can be handled in the follow-up",
    "created_at": "2020-02-10T20:19:28Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377294176",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377294176"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377294176"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377294176/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 235,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 376820487
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377295887",
    "pull_request_review_id": 356236342,
    "id": 377295887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5NTg4Nw==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Feel free to ignore this, but we haven't re-formatted them in b6fb617aaaad5f9cdd7f2ad2825b253ca792055d because they are still in flux.",
    "created_at": "2020-02-10T20:23:21Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377295887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377295887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377295887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377295887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT",
    "in_reply_to_id": 376820692
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969622",
    "pull_request_review_id": 357104851,
    "id": 377969622,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2OTYyMg==",
    "diff_hunk": "@@ -1269,6 +1269,9 @@ bool AppInitMain(NodeContext& node)\n     CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n     threadGroup.create_thread(std::bind(&TraceThread<CScheduler::Function>, \"scheduler\", serviceLoop));\n \n+    assert(!node.scheduler);\n+    node.scheduler = &scheduler;",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-11T23:55:32Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969622",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969622"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969622"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969622/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1273,
    "side": "RIGHT",
    "in_reply_to_id": 377276023
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969706",
    "pull_request_review_id": 357104884,
    "id": 377969706,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2OTcwNg==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",\n+            \"\\nBump the scheduler into the future (-regtest only)\\n\",\n+            {\n+                {\"delta_time\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"Number of seconds to forward the scheduler into the future.\" },\n+            },\n+            RPCResults{},\n+            RPCExamples{\"\"},\n+        }.Check(request);\n+\n+    if (!Params().IsMockableChain()) {\n+        throw std::runtime_error(\"mockscheduler is for regression testing (-regtest mode) only\");\n+    }\n+\n+    RPCTypeCheck(request.params, {UniValue::VNUM});\n+    int64_t delta_seconds = request.params[0].get_int64();\n+    if ((delta_seconds <= 0) || (delta_seconds > 3600)) {\n+        throw std::runtime_error(\"delta_time must be between 0 and 3600 seconds (1 hr)\");\n+    }\n+\n+    g_rpc_node->scheduler->MockForward(boost::chrono::seconds(delta_seconds));",
    "path": "src/rpc/misc.cpp",
    "position": 42,
    "original_position": 38,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-11T23:55:39Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969706",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969706"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969706"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969706/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 396,
    "original_line": 396,
    "side": "RIGHT",
    "in_reply_to_id": 376821035
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969811",
    "pull_request_review_id": 357104935,
    "id": 377969811,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2OTgxMQ==",
    "diff_hunk": "@@ -366,6 +368,32 @@ static UniValue setmocktime(const JSONRPCRequest& request)\n     return NullUniValue;\n }\n \n+static UniValue mockscheduler(const JSONRPCRequest& request)\n+{\n+        RPCHelpMan{\"mockscheduler\",",
    "path": "src/rpc/misc.cpp",
    "position": null,
    "original_position": 19,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "cf04e02bbe14257a1513b029231cb6a21c9766ac",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-11T23:55:49Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969811",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969811"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969811"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969811/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 373,
    "side": "RIGHT",
    "in_reply_to_id": 376820692
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969951",
    "pull_request_review_id": 357105002,
    "id": 377969951,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk2OTk1MQ==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter]{counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n+\n+    // bump the scheduler forward 5 minutes\n+    scheduler.MockForward(boost::chrono::seconds(5*60));\n+\n+    // ensure scheduler has chance to process all tasks queued for before 1 ms from now.\n+    scheduler.scheduleFromNow([&scheduler]{ scheduler.stop(false); }, 1);\n+    scheduler_thread.join();\n+\n+    // check that the queue only has one job remaining\n+    num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 1);",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 33,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3679f096c2ef52fa8673e5cd4064154a1889fa12",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-11T23:56:01Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969951",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969951"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377969951"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377969951/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 187,
    "side": "RIGHT",
    "in_reply_to_id": 376820081
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377970040",
    "pull_request_review_id": 357105054,
    "id": 377970040,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3MDA0MA==",
    "diff_hunk": "@@ -155,4 +155,45 @@ BOOST_AUTO_TEST_CASE(singlethreadedscheduler_ordered)\n     BOOST_CHECK_EQUAL(counter2, 100);\n }\n \n+BOOST_AUTO_TEST_CASE(mockforward)\n+{\n+    CScheduler scheduler;\n+\n+    int counter{0};\n+    CScheduler::Function dummy = [&counter]{counter++;};\n+\n+    // schedule jobs for 2, 5 & 8 minutes into the future\n+    int64_t min_in_milli = 60*1000;\n+    scheduler.scheduleFromNow(dummy, 2*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 5*min_in_milli);\n+    scheduler.scheduleFromNow(dummy, 8*min_in_milli);\n+\n+    // check taskQueue\n+    boost::chrono::system_clock::time_point first, last;\n+    size_t num_tasks = scheduler.getQueueInfo(first, last);\n+    BOOST_CHECK(num_tasks == 3);\n+\n+    boost::thread scheduler_thread(std::bind(&CScheduler::serviceQueue, &scheduler));",
    "path": "src/test/scheduler_tests.cpp",
    "position": null,
    "original_position": 22,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3679f096c2ef52fa8673e5cd4064154a1889fa12",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-11T23:56:08Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377970040",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377970040"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377970040"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377970040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 176,
    "side": "RIGHT",
    "in_reply_to_id": 376820054
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971402",
    "pull_request_review_id": 357106516,
    "id": 377971402,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3MTQwMg==",
    "diff_hunk": "@@ -55,6 +55,11 @@ class CScheduler\n     // need more accurate scheduling, don't use this method.\n     void scheduleEvery(Function f, int64_t deltaMilliSeconds);\n \n+    // Regtest only- mock the scheduler to fast forward in time",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "69468a93737ed9d4a38e04bdce20778ce8191810",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up ",
    "created_at": "2020-02-12T00:00:19Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971402",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971402"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971402"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971402/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT",
    "in_reply_to_id": 376818713
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971458",
    "pull_request_review_id": 357106580,
    "id": 377971458,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3MTQ1OA==",
    "diff_hunk": "@@ -114,6 +114,28 @@ void CScheduler::scheduleFromNow(CScheduler::Function f, int64_t deltaMilliSecon\n     schedule(f, boost::chrono::system_clock::now() + boost::chrono::milliseconds(deltaMilliSeconds));\n }\n \n+void CScheduler::MockForward(boost::chrono::seconds delta_seconds)\n+{\n+    assert(delta_seconds.count() > 0 && delta_seconds.count() < 3600);",
    "path": "src/scheduler.cpp",
    "position": null,
    "original_position": 6,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "69468a93737ed9d4a38e04bdce20778ce8191810",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed in follow up",
    "created_at": "2020-02-12T00:00:30Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971458",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971458"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971458"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971458/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 119,
    "side": "RIGHT",
    "in_reply_to_id": 376818501
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971672",
    "pull_request_review_id": 357106831,
    "id": 377971672,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk3MTY3Mg==",
    "diff_hunk": "@@ -231,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         fDefaultConsistencyChecks = false;\n         fRequireStandard = false;\n         m_is_test_chain = true;\n-\n+        m_is_mockable_chain = false;",
    "path": "src/chainparams.cpp",
    "position": 13,
    "original_position": 13,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "3392d690cfb338e1a9a9d7347710c0744e4486d5",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "not addressed, but noted as open question in the follow up https://github.com/amitiuttarwar/bitcoin/pull/2#issuecomment-584885826. going to resolve here.",
    "created_at": "2020-02-12T00:01:16Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971672",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971672"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r377971672"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/377971672/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 235,
    "original_line": 235,
    "side": "RIGHT",
    "in_reply_to_id": 376820487
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378972310",
    "pull_request_review_id": 358363413,
    "id": 378972310,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3MjMxMA==",
    "diff_hunk": "@@ -55,6 +55,11 @@ class CScheduler\n     // need more accurate scheduling, don't use this method.\n     void scheduleEvery(Function f, int64_t deltaMilliSeconds);\n \n+    // Mock the scheduler to fast forward in time.",
    "path": "src/scheduler.h",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit 3f5cebe47b:\r\n\r\nUsing `/**` will make this a doxygen comment. I know that the other functions don't use doxygen comment, but for new code we should aim for that.",
    "created_at": "2020-02-13T16:28:03Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378972310",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378972310"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378972310"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378972310/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 58,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378979325",
    "pull_request_review_id": 358363413,
    "id": 378979325,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3OTMyNQ==",
    "diff_hunk": "@@ -1265,16 +1264,19 @@ bool AppInitMain(NodeContext& node)\n         }\n     }\n \n+    assert(!node.scheduler);\n+    node.scheduler = MakeUnique<CScheduler>();\n+\n     // Start the lightweight task scheduler thread\n-    CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, &scheduler);\n+    CScheduler::Function serviceLoop = std::bind(&CScheduler::serviceQueue, node.scheduler.get());",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 17,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit 047c1fd23ab7f281af7acd238f3bbb441817686c:\r\n\r\nAs you are changing this line anyway, might as well get rid of the std::bind mess\r\n\r\n\r\n```cpp\r\nCScheduler::Function serviceLoop = [&] { node.scheduler->serviceQueue(); };",
    "created_at": "2020-02-13T16:39:18Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378979325",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378979325"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378979325"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378979325/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1271,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378982074",
    "pull_request_review_id": 358363413,
    "id": 378982074,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4MjA3NA==",
    "diff_hunk": "@@ -157,7 +157,6 @@ NODISCARD static bool CreatePidFile()\n static std::unique_ptr<ECCVerifyHandle> globalVerifyHandle;\n \n static boost::thread_group threadGroup;\n-static CScheduler scheduler;\n \n void Interrupt(NodeContext& node)\n {",
    "path": "src/init.cpp",
    "position": 7,
    "original_position": 7,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit 047c1fd:\r\n\r\n\r\nIt should be safe and a bit cleaner to reset the scheduler unique_ptr at the end of `void Shutdown(NodeContext& node)`.",
    "created_at": "2020-02-13T16:43:11Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378982074",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378982074"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378982074"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378982074/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 162,
    "original_line": 162,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378983916",
    "pull_request_review_id": 358363413,
    "id": 378983916,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4MzkxNg==",
    "diff_hunk": "@@ -103,10 +103,12 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     g_rpc_node = &m_node;\n     RegisterAllCoreRPCCommands(tableRPC);\n \n+    g_rpc_node->scheduler = MakeUnique<CScheduler>();",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit 047c1fd23ab7f281af7acd238f3bbb441817686c:\r\n\r\n`g_rpc_node` might go away (#17548), and using `m_node` directly would be cleaner code anyway.",
    "created_at": "2020-02-13T16:46:12Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378983916",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378983916"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378983916"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378983916/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378985102",
    "pull_request_review_id": 358363413,
    "id": 378985102,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk4NTEwMg==",
    "diff_hunk": "@@ -103,10 +103,12 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     g_rpc_node = &m_node;\n     RegisterAllCoreRPCCommands(tableRPC);\n \n+    g_rpc_node->scheduler = MakeUnique<CScheduler>();\n+\n     // We have to run a scheduler thread to prevent ActivateBestChain\n     // from blocking due to queue overrun.\n-    threadGroup.create_thread(std::bind(&CScheduler::serviceQueue, &scheduler));\n-    GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n+    threadGroup.create_thread(std::bind(&CScheduler::serviceQueue, g_rpc_node->scheduler.get()));",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style-nit in commit 047c1fd23ab7f281af7acd238f3bbb441817686c:\r\n\r\nSame here\r\n\r\n```suggestion\r\n    threadGroup.create_thread([&] { m_node.scheduler->serviceQueue(); });\r\n```\r\n",
    "created_at": "2020-02-13T16:48:12Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378985102",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378985102"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r378985102"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/378985102/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 110,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379969757",
    "pull_request_review_id": 359469048,
    "id": 379969757,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk2OTc1Nw==",
    "diff_hunk": "@@ -103,10 +103,12 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     g_rpc_node = &m_node;\n     RegisterAllCoreRPCCommands(tableRPC);\n \n+    g_rpc_node->scheduler = MakeUnique<CScheduler>();",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Also, the pointer should probably be reset in `~TestingSetup`",
    "created_at": "2020-02-17T03:11:07Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r379969757",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379969757"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r379969757"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/379969757/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT",
    "in_reply_to_id": 378983916
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380347417",
    "pull_request_review_id": 359942473,
    "id": 380347417,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0NzQxNw==",
    "diff_hunk": "@@ -103,10 +103,12 @@ TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(cha\n     g_rpc_node = &m_node;\n     RegisterAllCoreRPCCommands(tableRPC);\n \n+    g_rpc_node->scheduler = MakeUnique<CScheduler>();",
    "path": "src/test/util/setup_common.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "8bca30ea17cd4c1dacee28eaa27e5fa3493b021d",
    "original_commit_id": "db45f73ab93e207f792fb5bb11ca1ec2885d8a91",
    "user": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "yeah totally. do you think the lack of reset could have somehow caused the failure [here](https://travis-ci.org/bitcoin/bitcoin/jobs/649620800)? I'll push shortly and observe, but still trying to fill in my conceptual understanding.\r\n\r\nnot directly related, but another thing I'm wondering is why the scheduler thread isn't interrupted [here](https://github.com/bitcoin/bitcoin/blob/master/src/init.cpp#L162)",
    "created_at": "2020-02-17T19:56:16Z",
    "updated_at": "2020-02-17T22:49:46Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r380347417",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380347417"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/18037#discussion_r380347417"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/18037"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/380347417/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT",
    "in_reply_to_id": 378983916
  }
]