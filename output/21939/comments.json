[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840419750",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#issuecomment-840419750",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21939",
    "id": 840419750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDQxOTc1MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-13T08:53:36Z",
    "updated_at": "2021-05-13T14:29:15Z",
    "author_association": "MEMBER",
    "body": "re-ACK 1c9255c7dd2d4f12bfb508bcc8d123a6354d8842\r\n\r\nChecked the disassembly with `-O0`:\r\n```\r\n00000000000c0834 <CMessageHeader::CMessageHeader()>:\r\n   c0834:       f3 0f 1e fa             endbr64 \r\n   c0838:       55                      push   %rbp\r\n   c0839:       48 89 e5                mov    %rsp,%rbp\r\n   c083c:       48 83 ec 20             sub    $0x20,%rsp\r\n   c0840:       48 89 7d e8             mov    %rdi,-0x18(%rbp)\r\n   c0844:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax\r\n   c084b:       00 00 \r\n   c084d:       48 89 45 f8             mov    %rax,-0x8(%rbp)\r\n   c0851:       31 c0                   xor    %eax,%eax\r\n   c0853:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n   c0857:       c7 00 00 00 00 00       movl   $0x0,(%rax)\r\n   c085d:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n   c0861:       48 c7 40 04 00 00 00    movq   $0x0,0x4(%rax)\r\n   c0868:       00 \r\n   c0869:       c7 40 0c 00 00 00 00    movl   $0x0,0xc(%rax)\r\n   c0870:       e8 41 b1 f9 ff          callq  5b9b6 <std::numeric_limits<unsigned int>::max()>\r\n   c0875:       89 c2                   mov    %eax,%edx\r\n   c0877:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n   c087b:       89 50 10                mov    %edx,0x10(%rax)\r\n   c087e:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n   c0882:       c7 40 14 00 00 00 00    movl   $0x0,0x14(%rax)\r\n   c0889:       90                      nop\r\n   c088a:       48 8b 45 f8             mov    -0x8(%rbp),%rax\r\n   c088e:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax\r\n   c0895:       00 00 \r\n   c0897:       74 05                   je     c089e <CMessageHeader::CMessageHeader()+0x6a>\r\n   c0899:       e8 72 cd f6 ff          callq  2d610 <__stack_chk_fail@plt>\r\n   c089e:       c9                      leaveq \r\n   c089f:       c3                      retq   \r\n```\r\n\r\nIt doesn't generate memsets, but the `mov $0, XXX` are correct:\r\n```\r\n   4@0x00   pchMessageStart[0..3]\r\n   c0857:       c7 00 00 00 00 00       movl   $0x0,(%rax)\r\n\r\n   8@0x04   pchCommand[0..7]\r\n   c0861:       48 c7 40 04 00 00 00    movq   $0x0,0x4(%rax)\r\n   c0868:       00 \r\n\r\n   4@0x0c   pchCommand[8..11]\r\n   c0869:       c7 40 0c 00 00 00 00    movl   $0x0,0xc(%rax)\r\n\r\n   4@0x14   pchChecksum[0..3]\r\n   c0882:       c7 40 14 00 00 00 00    movl   $0x0,0x14(%rax)\r\n```\r\n\r\nSecond constructor\r\n\r\n<details>\r\n\r\n```\r\n000000000083007c <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)>:\r\n  83007c:       f3 0f 1e fa             endbr64 \r\n  830080:       55                      push   %rbp\r\n  830081:       48 89 e5                mov    %rsp,%rbp\r\n  830084:       48 83 ec 30             sub    $0x30,%rsp\r\n  830088:       48 89 7d e8             mov    %rdi,-0x18(%rbp)\r\n  83008c:       48 89 75 e0             mov    %rsi,-0x20(%rbp)\r\n  830090:       48 89 55 d8             mov    %rdx,-0x28(%rbp)\r\n  830094:       89 4d d4                mov    %ecx,-0x2c(%rbp)\r\n  830097:       64 48 8b 04 25 28 00    mov    %fs:0x28,%rax\r\n  83009e:       00 00 \r\n  8300a0:       48 89 45 f8             mov    %rax,-0x8(%rbp)\r\n  8300a4:       31 c0                   xor    %eax,%eax\r\n  8300a6:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  8300aa:       c7 00 00 00 00 00       movl   $0x0,(%rax)\r\n  8300b0:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  8300b4:       48 c7 40 04 00 00 00    movq   $0x0,0x4(%rax)\r\n  8300bb:       00 \r\n  8300bc:       c7 40 0c 00 00 00 00    movl   $0x0,0xc(%rax)\r\n  8300c3:       e8 ee b8 82 ff          callq  5b9b6 <std::numeric_limits<unsigned int>::max()>\r\n  8300c8:       89 c2                   mov    %eax,%edx\r\n  8300ca:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  8300ce:       89 50 10                mov    %edx,0x10(%rax)\r\n  8300d1:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  8300d5:       c7 40 14 00 00 00 00    movl   $0x0,0x14(%rax)\r\n  8300dc:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  8300e0:       48 8b 55 e0             mov    -0x20(%rbp),%rdx\r\n  8300e4:       8b 12                   mov    (%rdx),%edx\r\n  8300e6:       89 10                   mov    %edx,(%rax)\r\n  8300e8:       48 c7 45 f0 00 00 00    movq   $0x0,-0x10(%rbp)\r\n  8300ef:       00 \r\n  8300f0:       48 83 7d f0 0b          cmpq   $0xb,-0x10(%rbp)\r\n  8300f5:       77 38                   ja     83012f <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0xb3>\r\n  8300f7:       48 8b 55 d8             mov    -0x28(%rbp),%rdx\r\n  8300fb:       48 8b 45 f0             mov    -0x10(%rbp),%rax\r\n  8300ff:       48 01 d0                add    %rdx,%rax\r\n  830102:       0f b6 00                movzbl (%rax),%eax\r\n  830105:       84 c0                   test   %al,%al\r\n  830107:       74 26                   je     83012f <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0xb3>\r\n  830109:       48 8b 55 d8             mov    -0x28(%rbp),%rdx\r\n  83010d:       48 8b 45 f0             mov    -0x10(%rbp),%rax\r\n  830111:       48 01 d0                add    %rdx,%rax\r\n  830114:       0f b6 00                movzbl (%rax),%eax\r\n  830117:       48 8b 4d e8             mov    -0x18(%rbp),%rcx\r\n  83011b:       48 8b 55 f0             mov    -0x10(%rbp),%rdx\r\n  83011f:       48 01 ca                add    %rcx,%rdx\r\n  830122:       48 83 c2 04             add    $0x4,%rdx\r\n  830126:       88 02                   mov    %al,(%rdx)\r\n  830128:       48 83 45 f0 01          addq   $0x1,-0x10(%rbp)\r\n  83012d:       eb c1                   jmp    8300f0 <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0x74>\r\n  83012f:       48 8b 55 d8             mov    -0x28(%rbp),%rdx\r\n  830133:       48 8b 45 f0             mov    -0x10(%rbp),%rax\r\n  830137:       48 01 d0                add    %rdx,%rax\r\n  83013a:       0f b6 00                movzbl (%rax),%eax\r\n  83013d:       84 c0                   test   %al,%al\r\n  83013f:       74 1f                   je     830160 <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0xe4>\r\n  830141:       48 8d 0d 58 69 28 00    lea    0x286958(%rip),%rcx        # ab6aa0 <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)::__PRETTY_FUNCTION__>\r\n  830148:       ba 61 00 00 00          mov    $0x61,%edx\r\n  83014d:       48 8d 35 79 67 28 00    lea    0x286779(%rip),%rsi        # ab68cd <DEFAULT_LOGSOURCELOCATIONS+0x136>\r\n  830154:       48 8d 3d 81 67 28 00    lea    0x286781(%rip),%rdi        # ab68dc <DEFAULT_LOGSOURCELOCATIONS+0x145>\r\n  83015b:       e8 40 d2 7f ff          callq  2d3a0 <__assert_fail@plt>\r\n  830160:       48 83 7d f0 0b          cmpq   $0xb,-0x10(%rbp)\r\n  830165:       77 19                   ja     830180 <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0x104>\r\n  830167:       48 8b 55 e8             mov    -0x18(%rbp),%rdx\r\n  83016b:       48 8b 45 f0             mov    -0x10(%rbp),%rax\r\n  83016f:       48 01 d0                add    %rdx,%rax\r\n  830172:       48 83 c0 04             add    $0x4,%rax\r\n  830176:       c6 00 00                movb   $0x0,(%rax)\r\n  830179:       48 83 45 f0 01          addq   $0x1,-0x10(%rbp)\r\n  83017e:       eb e0                   jmp    830160 <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0xe4>\r\n  830180:       48 8b 45 e8             mov    -0x18(%rbp),%rax\r\n  830184:       8b 55 d4                mov    -0x2c(%rbp),%edx\r\n  830187:       89 50 10                mov    %edx,0x10(%rax)\r\n  83018a:       90                      nop\r\n  83018b:       48 8b 45 f8             mov    -0x8(%rbp),%rax\r\n  83018f:       64 48 33 04 25 28 00    xor    %fs:0x28,%rax\r\n  830196:       00 00 \r\n  830198:       74 05                   je     83019f <CMessageHeader::CMessageHeader(unsigned char const (&) [4], char const*, unsigned int)+0x123>\r\n  83019a:       e8 71 d4 7f ff          callq  2d610 <__stack_chk_fail@plt>\r\n  83019f:       c9                      leaveq \r\n  8301a0:       c3                      retq  \r\n```\r\n\r\n</details>\r\n\r\nThis one is more complex, but it works out, contains the same clearing code:\r\n```\r\n  8300aa:       c7 00 00 00 00 00       movl   $0x0,(%rax)\r\n  8300b4:       48 c7 40 04 00 00 00    movq   $0x0,0x4(%rax)\r\n  8300bb:       00 \r\n  8300bc:       c7 40 0c 00 00 00 00    movl   $0x0,0xc(%rax)\r\n  8300d5:       c7 40 14 00 00 00 00    movl   $0x0,0x14(%rax)\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840419750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840462359",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#issuecomment-840462359",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21939",
    "id": 840462359,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDQ2MjM1OQ==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-13T10:14:53Z",
    "updated_at": "2021-05-13T10:14:53Z",
    "author_association": "MEMBER",
    "body": "For reference, from https://en.cppreference.com/w/c/language/array_initialization\r\n\r\n> All array elements that are not initialized explicitly are zero-initialized.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840462359/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840611820",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#issuecomment-840611820",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21939",
    "id": 840611820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDYxMTgyMA==",
    "user": {
      "login": "Crypt-iQ",
      "id": 15145615,
      "node_id": "MDQ6VXNlcjE1MTQ1NjE1",
      "avatar_url": "https://avatars.githubusercontent.com/u/15145615?u=a19ad52f8c597f3518a89a52014fabefda644078&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Crypt-iQ",
      "html_url": "https://github.com/Crypt-iQ",
      "followers_url": "https://api.github.com/users/Crypt-iQ/followers",
      "following_url": "https://api.github.com/users/Crypt-iQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/Crypt-iQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Crypt-iQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Crypt-iQ/subscriptions",
      "organizations_url": "https://api.github.com/users/Crypt-iQ/orgs",
      "repos_url": "https://api.github.com/users/Crypt-iQ/repos",
      "events_url": "https://api.github.com/users/Crypt-iQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Crypt-iQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-13T14:47:33Z",
    "updated_at": "2021-05-13T14:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code review ACK 1c9255c7dd2d4f12bfb508bcc8d123a6354d8842\r\n\r\nLooking at the code I noticed both `pchCommand`, `pchMessageStart` are char arrays.  There is a memcpy done from `MessageStartChars` (unsigned char array) to `pchMessageStart`, and some architectures specify `char` as signed.  May be a case for explicitly making them unsigned char arrays?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840611820/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840660831",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#issuecomment-840660831",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21939",
    "id": 840660831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDY2MDgzMQ==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-13T16:03:34Z",
    "updated_at": "2021-05-13T16:03:34Z",
    "author_association": "MEMBER",
    "body": "I have a patchset to remove `char`, but haven't pushed it yet",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840660831/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840691770",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#issuecomment-840691770",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21939",
    "id": 840691770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MDY5MTc3MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-13T16:54:19Z",
    "updated_at": "2021-05-13T16:54:19Z",
    "author_association": "MEMBER",
    "body": "> Looking at the code I noticed both pchCommand, pchMessageStart are char arrays. \r\n\r\nAnother good point. There are only very few places where bare 'char' is a good choice. But let's leave it for a future PR.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/840691770/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631730901",
    "pull_request_review_id": 658797509,
    "id": 631730901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTczMDkwMQ==",
    "diff_hunk": "@@ -105,7 +98,6 @@ CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const\n     for (; i < COMMAND_SIZE; ++i) pchCommand[i] = 0;",
    "path": "src/protocol.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "original_commit_id": "5d2e40c4d2394758e8026f796de89e8569f8dc86",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can this also be removed?",
    "created_at": "2021-05-13T11:00:56Z",
    "updated_at": "2021-05-13T11:00:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631730901",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631730901"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631730901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631730901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 98,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631732955",
    "pull_request_review_id": 658800177,
    "id": 631732955,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTczMjk1NQ==",
    "diff_hunk": "@@ -105,7 +98,6 @@ CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const\n     for (; i < COMMAND_SIZE; ++i) pchCommand[i] = 0;",
    "path": "src/protocol.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "original_commit_id": "5d2e40c4d2394758e8026f796de89e8569f8dc86",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right, padding is already zero \ud83d\udc4d good catch",
    "created_at": "2021-05-13T11:05:18Z",
    "updated_at": "2021-05-13T11:05:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631732955",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631732955"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631732955"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631732955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 98,
    "side": "RIGHT",
    "in_reply_to_id": 631730901
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631750618",
    "pull_request_review_id": 658822777,
    "id": 631750618,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTc1MDYxOA==",
    "diff_hunk": "@@ -105,7 +98,6 @@ CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const\n     for (; i < COMMAND_SIZE; ++i) pchCommand[i] = 0;",
    "path": "src/protocol.cpp",
    "position": null,
    "original_position": 15,
    "commit_id": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "original_commit_id": "5d2e40c4d2394758e8026f796de89e8569f8dc86",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed and updated the comment above. Thanks.",
    "created_at": "2021-05-13T11:42:59Z",
    "updated_at": "2021-05-13T11:43:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631750618",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631750618"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631750618"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631750618/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 98,
    "side": "RIGHT",
    "in_reply_to_id": 631730901
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631863058",
    "pull_request_review_id": 658976738,
    "id": 631863058,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMTg2MzA1OA==",
    "diff_hunk": "@@ -87,25 +87,16 @@ const static std::string allNetMessageTypes[] = {\n };\n const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));\n \n-CMessageHeader::CMessageHeader()\n-{\n-    memset(pchMessageStart, 0, MESSAGE_START_SIZE);\n-    memset(pchCommand, 0, sizeof(pchCommand));\n-    memset(pchChecksum, 0, CHECKSUM_SIZE);\n-}\n-\n CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn)",
    "path": "src/protocol.cpp",
    "position": 11,
    "original_position": 11,
    "commit_id": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "original_commit_id": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We could also change the type here to `std::string` or `std::span` instead of a loose pointer, at some point and clean up the loop (oh and rename the argument to `message_type` maybe instead of command, when we're at it). No need to do so in this PR though.",
    "created_at": "2021-05-13T14:42:02Z",
    "updated_at": "2021-05-13T14:42:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631863058",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631863058"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21939#discussion_r631863058"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21939"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/631863058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 90,
    "original_line": 90,
    "side": "RIGHT"
  }
]