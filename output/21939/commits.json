[
  {
    "sha": "1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxYzkyNTVjN2RkMmQ0ZjEyYmZiNTA4YmNjOGQxMjNhNjM1NGQ4ODQy",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-05-13T07:44:34Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2021-05-13T11:42:21Z"
      },
      "message": "refactor: Replace memset calls with array initialization",
      "tree": {
        "sha": "84a9005eeb275aead306fe277bbb25bb39a74448",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84a9005eeb275aead306fe277bbb25bb39a74448"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9c891b64ffd14bc8216dbd5eb60816043af265b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9c891b64ffd14bc8216dbd5eb60816043af265b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9c891b64ffd14bc8216dbd5eb60816043af265b6"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 5,
      "deletions": 14
    },
    "files": [
      {
        "sha": "2e70b41e4c43a0cb8ba2a0e7a84e0803e69bcf4c",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 10,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
        "patch": "@@ -87,25 +87,16 @@ const static std::string allNetMessageTypes[] = {\n };\n const static std::vector<std::string> allNetMessageTypesVec(std::begin(allNetMessageTypes), std::end(allNetMessageTypes));\n \n-CMessageHeader::CMessageHeader()\n-{\n-    memset(pchMessageStart, 0, MESSAGE_START_SIZE);\n-    memset(pchCommand, 0, sizeof(pchCommand));\n-    memset(pchChecksum, 0, CHECKSUM_SIZE);\n-}\n-\n CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn, const char* pszCommand, unsigned int nMessageSizeIn)\n {\n     memcpy(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE);\n \n-    // Copy the command name, zero-padding to COMMAND_SIZE bytes\n+    // Copy the command name\n     size_t i = 0;\n     for (; i < COMMAND_SIZE && pszCommand[i] != 0; ++i) pchCommand[i] = pszCommand[i];\n     assert(pszCommand[i] == 0); // Assert that the command name passed in is not longer than COMMAND_SIZE\n-    for (; i < COMMAND_SIZE; ++i) pchCommand[i] = 0;\n \n     nMessageSize = nMessageSizeIn;\n-    memset(pchChecksum, 0, CHECKSUM_SIZE);\n }\n \n std::string CMessageHeader::GetCommand() const"
      },
      {
        "sha": "aaa9f1df400c49e78cba83769308614921c3f311",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1c9255c7dd2d4f12bfb508bcc8d123a6354d8842/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=1c9255c7dd2d4f12bfb508bcc8d123a6354d8842",
        "patch": "@@ -38,7 +38,7 @@ class CMessageHeader\n     static constexpr size_t HEADER_SIZE = MESSAGE_START_SIZE + COMMAND_SIZE + MESSAGE_SIZE_SIZE + CHECKSUM_SIZE;\n     typedef unsigned char MessageStartChars[MESSAGE_START_SIZE];\n \n-    explicit CMessageHeader();\n+    explicit CMessageHeader() = default;\n \n     /** Construct a P2P message header from message-start characters, a command and the size of the message.\n      * @note Passing in a `pszCommand` longer than COMMAND_SIZE will result in a run-time assertion error.\n@@ -50,10 +50,10 @@ class CMessageHeader\n \n     SERIALIZE_METHODS(CMessageHeader, obj) { READWRITE(obj.pchMessageStart, obj.pchCommand, obj.nMessageSize, obj.pchChecksum); }\n \n-    char pchMessageStart[MESSAGE_START_SIZE];\n-    char pchCommand[COMMAND_SIZE];\n+    char pchMessageStart[MESSAGE_START_SIZE]{};\n+    char pchCommand[COMMAND_SIZE]{};\n     uint32_t nMessageSize{std::numeric_limits<uint32_t>::max()};\n-    uint8_t pchChecksum[CHECKSUM_SIZE];\n+    uint8_t pchChecksum[CHECKSUM_SIZE]{};\n };\n \n /**"
      }
    ]
  }
]