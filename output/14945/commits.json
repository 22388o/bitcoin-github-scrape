[
  {
    "sha": "ddd008dbefe93d37119c68fe0c4b16a3e4233950",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZGQwMDhkYmVmZTkzZDM3MTE5YzY4ZmUwYzRiMTZhM2U0MjMzOTUw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-07-31T23:53:02Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-12-28T10:58:38Z"
      },
      "message": "Add PSBT documentation\n\nGithub-Pull: #13941\nRebased-From: 19efc01aec6b0d8750413fa1b721e04aaecf8f73",
      "tree": {
        "sha": "c4e50565506287eb65e3664847bd10e6cb0f3957",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c4e50565506287eb65e3664847bd10e6cb0f3957"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ddd008dbefe93d37119c68fe0c4b16a3e4233950",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAlwmAd4ACgkQLuufXMCV\nJsFTnQ/+I/cmL/zFSL+80LHpufxJvhgwixweyHDdg9JN0velBeVfgRq1fD1GMOU0\nHhQlLoKEdHXX8umiyjuecPt1g2L7mmnAj3KS6uP5yDYPc5Hp4YIQ3G9o+SNHUdY5\nxvs05fEhA5LyLUzozoFLyUdQVzVXU6GrdqvingfEg/4xiiu0JP0xA+SOCqLtVIsV\nhm59EYxeA9wtYQrhfSKYNENmpgbP9wcwSYvF1Mgro+dLMcdxswhkh1jujDwVgoRf\nDmfC/AAyN9BGBKHXV07568SfXfTVmM2m0nWd0bA5kEyoAsAvTh69QLdu4YfYDhM8\n3XxSNnaKo1qKgeWuJjmL7OHjRVFuzBbzotThuD5jBWZfT17KeGhnpZ5+PBb5mH39\nr5pQ1Ibpesk4sbCta6hXFd98KtyuPtw28OLPiDEKH3M8My7ht9wJNJfC0WPIBmMj\nv+9tJd4ry//7vLTzhuxMnK/FOAnMKb1NTdKPf7S45+MYQfv9992RMV2vXak9DQ4w\n4CxjD9UtvLgrCDurDEd63yAoF+IQ3Ujm0FeKpqxLgFu3Kva+CqNggl9WRQ2MxArl\nbKNbFkO1EJ7y+X5+nnggI00uQzXzBXC/vq4pY727bWYuAYt2iNjKcaCdyP+nvgDb\nytxVuilZ6bLsZWP/wmGjtMB/M/P+x16dsOYzNHPmVsjesdJAAEc=\n=afbH\n-----END PGP SIGNATURE-----",
        "payload": "tree c4e50565506287eb65e3664847bd10e6cb0f3957\nparent fd616d8d08c61daf13671fbb744c74eb23980901\nauthor Pieter Wuille <pieter.wuille@gmail.com> 1533081182 -0700\ncommitter fanquake <fanquake@gmail.com> 1545994718 +0800\n\nAdd PSBT documentation\n\nGithub-Pull: #13941\nRebased-From: 19efc01aec6b0d8750413fa1b721e04aaecf8f73\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd008dbefe93d37119c68fe0c4b16a3e4233950",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ddd008dbefe93d37119c68fe0c4b16a3e4233950",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd008dbefe93d37119c68fe0c4b16a3e4233950/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd616d8d08c61daf13671fbb744c74eb23980901",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd616d8d08c61daf13671fbb744c74eb23980901",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd616d8d08c61daf13671fbb744c74eb23980901"
      }
    ],
    "stats": {
      "total": 133,
      "additions": 133,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b3f875c4a46e97ece9e95bd1b2d1647df3c252bd",
        "filename": "doc/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddd008dbefe93d37119c68fe0c4b16a3e4233950/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddd008dbefe93d37119c68fe0c4b16a3e4233950/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=ddd008dbefe93d37119c68fe0c4b16a3e4233950",
        "patch": "@@ -75,6 +75,7 @@ The Bitcoin repo's [root README](/README.md) contains relevant information on th\n - [Tor Support](tor.md)\n - [Init Scripts (systemd/upstart/openrc)](init.md)\n - [ZMQ](zmq.md)\n+- [PSBT support](psbt.md)\n \n License\n ---------------------"
      },
      {
        "sha": "95e2f7fa01201dc20629a2cdda4e42df2a8f98bd",
        "filename": "doc/psbt.md",
        "status": "added",
        "additions": 132,
        "deletions": 0,
        "changes": 132,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ddd008dbefe93d37119c68fe0c4b16a3e4233950/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ddd008dbefe93d37119c68fe0c4b16a3e4233950/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=ddd008dbefe93d37119c68fe0c4b16a3e4233950",
        "patch": "@@ -0,0 +1,132 @@\n+# PSBT Howto for Bitcoin Core\n+\n+Since Bitcoin Core 0.17, an RPC interface exists for Partially Signed Bitcoin\n+Transactions (PSBTs, as specified in\n+[BIP 174](https://github.com/bitcoin/bips/blob/master/bip-0174.mediawiki)).\n+\n+This document describes the overall workflow for producing signed transactions\n+through the use of PSBT, and the specific RPC commands used in typical\n+scenarios.\n+\n+## PSBT in general\n+\n+PSBT is an interchange format for Bitcoin transactions that are not fully signed\n+yet, together with relevant metadata to help entities work towards signing it.\n+It is intended to simplify workflows where multiple parties need to cooperate to\n+produce a transaction. Examples include hardware wallets, multisig setups, and\n+[CoinJoin](https://bitcointalk.org/?topic=279249) transactions.\n+\n+### Overall workflow\n+\n+Overall, the construction of a fully signed Bitcoin transaction goes through the\n+following steps:\n+\n+- A **Creator** proposes a particular transaction to be created. They construct\n+  a PSBT that contains certain inputs and outputs, but no additional metadata.\n+- For each input, an **Updater** adds information about the UTXOs being spent by\n+  the transaction to the PSBT. They also add information about the scripts and\n+  public keys involved in each of the inputs (and possibly outputs) of the PSBT.\n+- **Signers** inspect the transaction and its metadata to decide whether they\n+  agree with the transaction. They can use amount information from the UTXOs\n+  to assess the values and fees involved. If they agree, they produce a\n+  partial signature for the inputs for which they have relevant key(s).\n+- A **Finalizer** is run for each input to convert the partial signatures and\n+  possibly script information into a final `scriptSig` and/or `scriptWitness`.\n+- An **Extractor** produces a valid Bitcoin transaction (in network format)\n+  from a PSBT for which all inputs are finalized.\n+\n+Generally, each of the above (excluding Creator and Extractor) will simply\n+add more and more data to a particular PSBT, until all inputs are fully signed.\n+In a naive workflow, they all have to operate sequentially, passing the PSBT\n+from one to the next, until the Extractor can convert it to a real transaction.\n+In order to permit parallel operation, **Combiners** can be employed which merge\n+metadata from different PSBTs for the same unsigned transaction.\n+\n+The names above in bold are the names of the roles defined in BIP174. They're\n+useful in understanding the underlying steps, but in practice, software and\n+hardware implementations will typically implement multiple roles simultaneously.\n+\n+## PSBT in Bitcoin Core\n+\n+### RPCs\n+\n+- **`converttopsbt` (Creator)** is a utility RPC that converts an\n+  unsigned raw transaction to PSBT format. It ignores existing signatures.\n+- **`createpsbt` (Creator)** is a utility RPC that takes a list of inputs and\n+  outputs and converts them to a PSBT with no additional information. It is\n+  equivalent to calling `createrawtransaction` followed by `converttopsbt`.\n+- **`walletcreatefundedpsbt` (Creator, Updater)** is a wallet RPC that creates a\n+  PSBT with the specified inputs and outputs, adds additional inputs and change\n+  to it to balance it out, and adds relevant metadata. In particular, for inputs\n+  that the wallet knows about (counting towards its normal or watch-only\n+  balance), UTXO information will be added. For outputs and inputs with UTXO\n+  information present, key and script information will be added which the wallet\n+  knows about. It is equivalent to running `createrawtransaction`, followed by\n+  `fundrawtransaction`, and `converttopsbt`.\n+- **`walletprocesspsbt` (Updater, Signer, Finalizer)** is a wallet RPC that takes as\n+  input a PSBT, adds UTXO, key, and script data to inputs and outputs that miss\n+  it, and optionally signs inputs. Where possible it also finalizes the partial\n+  signatures.\n+- **`finalizepsbt` (Finalizer, Extractor)** is a utility RPC that finalizes any\n+  partial signatures, and if all inputs are finalized, converts the result to a\n+  fully signed transaction which can be broadcast with `sendrawtransaction`.\n+- **`combinepsbt` (Combiner)** is a utility RPC that implements a Combiner. It\n+  can be used at any point in the workflow to merge information added to\n+  different versions of the same PSBT. In particular it is useful to combine the\n+  output of multiple Updaters or Signers.\n+- **`decodepsbt`** is a diagnostic utility RPC which will show all information in\n+  a PSBT in human-readable form, as well as compute its eventual fee if known.\n+\n+### Workflows\n+\n+#### Multisig with multiple Bitcoin Core instances\n+\n+Alice, Bob, and Carol want to create a 2-of-3 multisig address. They're all using\n+Bitcoin Core. We assume their wallets only contain the multisig funds. In case\n+they also have a personal wallet, this can be accomplished through the\n+multiwallet feature - possibly resulting in a need to add `-rpcwallet=name` to\n+the command line in case `bitcoin-cli` is used.\n+\n+Setup:\n+- All three call `getnewaddress` to create a new address; call these addresses\n+  *Aalice*, *Abob*, and *Acarol*.\n+- All three call `getaddressinfo X`, with *X* their respective address, and\n+  remember the corresponding public keys. Call these public keys *Kalice*,\n+  *Kbob*, and *Kcarol*.\n+- All three now run `addmultisigaddress 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]` to teach\n+  their wallet about the multisig script. Call the address produced by this\n+  command *Amulti*. They may be required to explicitly specify the same\n+  addresstype option each, to avoid constructing different versions due to\n+  differences in configuration.\n+- They also run `importaddress \"Amulti\" \"\" false` to make their wallets treat\n+  payments to *Amulti* as contributing to the watch-only balance.\n+- Others can verify the produced address by running\n+  `createmultisig 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]`, and expecting *Amulti* as\n+  output. Again, it may be necessary to explicitly specify the addresstype\n+  in order to get a result that matches. This command won't enable them to\n+  initiate transactions later, however.\n+- They can now give out *D* as address others can pay to.\n+\n+Later, when *V* BTC has been received on *Amulti*, and Bob and Carol want to\n+move the coins in their entirety to address *Asend*, with no change. Alice\n+does not need to be involved.\n+- One of them - let's assume Carol here - initiates the creation. She runs\n+  `walletcreatefundedpsbt [] {\"Asend\":V} 0 false {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n+  We call the resulting PSBT *P*. P does not contain any signatures.\n+- Carol needs to sign the transaction herself. In order to do so, she runs\n+  `walletprocesspsbt P`, and gives the resulting PSBT *P2* to Bob.\n+- Bob inspects the PSBT using `decodepsbt \"P2\"` to determine if the transaction\n+  has indeed just the expected input, and an output to *Asend*, and the fee is\n+  reasonable. If he agrees, he calls `walletprocesspsbt \"P2\"` to sign. The\n+  resulting PSBT *P3* contains both Carol's and Bob's signature.\n+- Now anyone can call `finalizepsbt \"P2\"` to extract a fully signed transaction\n+  *T*.\n+- Finally anyone can broadcast the transaction using `sendrawtransaction \"T\"`.\n+\n+In case there are more signers, it may be advantageous to let them all sign in\n+parallel, rather passing the PSBT from one signer to the next one. In the\n+above example this would translate to Carol handing a copy of *P* to each signer\n+separately. They can then all invoke `walletprocesspsbt P`, and end up with\n+their individually-signed PSBT structures. They then all send those back to\n+Carol (or anyone) who can combine them using `combinepsbt`. The last two steps\n+(`finalizepsbt` and `sendrawtransaction`) remain unchanged."
      }
    ]
  },
  {
    "sha": "88c566a13f0c1d0a30e2d78432fbee71b280da03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OGM1NjZhMTNmMGMxZDBhMzBlMmQ3ODQzMmZiZWU3MWIyODBkYTAz",
    "commit": {
      "author": {
        "name": "priscoan",
        "email": "39646804+priscoan@users.noreply.github.com",
        "date": "2018-09-25T12:16:05Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-12-28T10:58:38Z"
      },
      "message": "doc: Fix PSBT howto and example parameters\n\n* Remove outdated reference to replaceable parameter\n* Fix address reference\n* Unify quotation and italicization of parameters\n* Fix PSBT reference\n\nGithub-Pull: #14319\nRebased-From: 78542a3f36381fe96f60708834c8378042e3bab6",
      "tree": {
        "sha": "9ceb3d2a7f6defbde071c8588b160ffd0ca2e1bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9ceb3d2a7f6defbde071c8588b160ffd0ca2e1bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/88c566a13f0c1d0a30e2d78432fbee71b280da03",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAlwmAd4ACgkQLuufXMCV\nJsHmcQ/9HazYxzWA/t8hhm0KQfzF0P/BbFylRVPXi/HMzKdCDWPXlUFHJBdaZ4Ut\nTMXY8Q7QXi8zni847kNv5WJpwKO7iiBzCE+n0sImvAM9aEt1Kct5izvLy/wENKVw\n1P33UjMMn/r9z05AQypNKsSYm5U1hhZ7FSofI9q1dCcUZxWa3hTRouD+RoNqX6mz\nKWTfEm2OOpL/JoVuKOTfNYVkRjq6KYWQe5XJ3MomCSY/zDTLUcp+pHbnRsZVltEk\ntnyIU9pa3KO63MPDL6uxwGVBNwiebAjs5fq7ew+7UHeoVLaRZbMjb1ZfjRSZ49OX\nVsoliMVwDPs/AzEJwdJuUVy+4otT/53dM1yLUIgfX0RjOns+0UcBFMIqOVxnQYI5\nvj2otlPTnTKd85sDKsvxnx7hstKpoNYlfl2gDMIwo7OR9qK4C1MQd9EAh0iaRtM4\n3sWuJwSCIUADTgvislzWLvpNnkHYBSVmOo3Eue0syni/1ZTfS3pxT/aLrH+9KjwG\n8krQQKaK64XTVxOoXHRAvi3IphN0c2oOgSj7SjhgYgq7G+E5e478+fyBmc19hRCy\nszrVS3PDN/8rq5KPIjOa0pPYjB4EkxkRIV4d1lJenRTamFNxfLHYHa24a2DDOL25\nA0rAxA6Y3bYp9Ca9WETGxPOedSFMQiImYvy4zT0gcZlebZWPZmY=\n=T8pR\n-----END PGP SIGNATURE-----",
        "payload": "tree 9ceb3d2a7f6defbde071c8588b160ffd0ca2e1bb\nparent ddd008dbefe93d37119c68fe0c4b16a3e4233950\nauthor priscoan <39646804+priscoan@users.noreply.github.com> 1537877765 +0200\ncommitter fanquake <fanquake@gmail.com> 1545994718 +0800\n\ndoc: Fix PSBT howto and example parameters\n\n* Remove outdated reference to replaceable parameter\n* Fix address reference\n* Unify quotation and italicization of parameters\n* Fix PSBT reference\n\nGithub-Pull: #14319\nRebased-From: 78542a3f36381fe96f60708834c8378042e3bab6\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88c566a13f0c1d0a30e2d78432fbee71b280da03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/88c566a13f0c1d0a30e2d78432fbee71b280da03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88c566a13f0c1d0a30e2d78432fbee71b280da03/comments",
    "author": {
      "login": "priscoan",
      "id": 39646804,
      "node_id": "MDQ6VXNlcjM5NjQ2ODA0",
      "avatar_url": "https://avatars.githubusercontent.com/u/39646804?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/priscoan",
      "html_url": "https://github.com/priscoan",
      "followers_url": "https://api.github.com/users/priscoan/followers",
      "following_url": "https://api.github.com/users/priscoan/following{/other_user}",
      "gists_url": "https://api.github.com/users/priscoan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/priscoan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/priscoan/subscriptions",
      "organizations_url": "https://api.github.com/users/priscoan/orgs",
      "repos_url": "https://api.github.com/users/priscoan/repos",
      "events_url": "https://api.github.com/users/priscoan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/priscoan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ddd008dbefe93d37119c68fe0c4b16a3e4233950",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ddd008dbefe93d37119c68fe0c4b16a3e4233950",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ddd008dbefe93d37119c68fe0c4b16a3e4233950"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7e6a93714d54377d84a3d2aff867147417fb73fe",
        "filename": "doc/psbt.md",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/88c566a13f0c1d0a30e2d78432fbee71b280da03/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/88c566a13f0c1d0a30e2d78432fbee71b280da03/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=88c566a13f0c1d0a30e2d78432fbee71b280da03",
        "patch": "@@ -90,7 +90,7 @@ the command line in case `bitcoin-cli` is used.\n Setup:\n - All three call `getnewaddress` to create a new address; call these addresses\n   *Aalice*, *Abob*, and *Acarol*.\n-- All three call `getaddressinfo X`, with *X* their respective address, and\n+- All three call `getaddressinfo \"X\"`, with *X* their respective address, and\n   remember the corresponding public keys. Call these public keys *Kalice*,\n   *Kbob*, and *Kcarol*.\n - All three now run `addmultisigaddress 2 [\"Kalice\",\"Kbob\",\"Kcarol\"]` to teach\n@@ -105,28 +105,28 @@ Setup:\n   output. Again, it may be necessary to explicitly specify the addresstype\n   in order to get a result that matches. This command won't enable them to\n   initiate transactions later, however.\n-- They can now give out *D* as address others can pay to.\n+- They can now give out *Amulti* as address others can pay to.\n \n Later, when *V* BTC has been received on *Amulti*, and Bob and Carol want to\n move the coins in their entirety to address *Asend*, with no change. Alice\n does not need to be involved.\n - One of them - let's assume Carol here - initiates the creation. She runs\n-  `walletcreatefundedpsbt [] {\"Asend\":V} 0 false {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n-  We call the resulting PSBT *P*. P does not contain any signatures.\n+  `walletcreatefundedpsbt [] {\"Asend\":V} 0 {\"subtractFeeFromOutputs\":[0], \"includeWatching\":true}`.\n+  We call the resulting PSBT *P*. *P* does not contain any signatures.\n - Carol needs to sign the transaction herself. In order to do so, she runs\n-  `walletprocesspsbt P`, and gives the resulting PSBT *P2* to Bob.\n+  `walletprocesspsbt \"P\"`, and gives the resulting PSBT *P2* to Bob.\n - Bob inspects the PSBT using `decodepsbt \"P2\"` to determine if the transaction\n   has indeed just the expected input, and an output to *Asend*, and the fee is\n   reasonable. If he agrees, he calls `walletprocesspsbt \"P2\"` to sign. The\n   resulting PSBT *P3* contains both Carol's and Bob's signature.\n-- Now anyone can call `finalizepsbt \"P2\"` to extract a fully signed transaction\n+- Now anyone can call `finalizepsbt \"P3\"` to extract a fully signed transaction\n   *T*.\n - Finally anyone can broadcast the transaction using `sendrawtransaction \"T\"`.\n \n In case there are more signers, it may be advantageous to let them all sign in\n parallel, rather passing the PSBT from one signer to the next one. In the\n above example this would translate to Carol handing a copy of *P* to each signer\n-separately. They can then all invoke `walletprocesspsbt P`, and end up with\n+separately. They can then all invoke `walletprocesspsbt \"P\"`, and end up with\n their individually-signed PSBT structures. They then all send those back to\n Carol (or anyone) who can combine them using `combinepsbt`. The last two steps\n (`finalizepsbt` and `sendrawtransaction`) remain unchanged."
      }
    ]
  },
  {
    "sha": "fa0c76adee84e2b536b2202429d744e305444cd5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTBjNzZhZGVlODRlMmI1MzZiMjIwMjQyOWQ3NDRlMzA1NDQ0Y2Q1",
    "commit": {
      "author": {
        "name": "bitcoinhodler",
        "email": "31543633+bitcoinhodler@users.noreply.github.com",
        "date": "2018-12-20T21:59:56Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-12-28T10:58:38Z"
      },
      "message": "Fix minor grammar error in doc\n\nGithub-Pull: #15012\nRebased-From: 72b63bc9054f7742a9b12ea29b21770b5e437092",
      "tree": {
        "sha": "b004594fd020a8e8613e3c7fd74249dfce95ff31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b004594fd020a8e8613e3c7fd74249dfce95ff31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0c76adee84e2b536b2202429d744e305444cd5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAlwmAd4ACgkQLuufXMCV\nJsGMIw//RSGJUUXG60ISYRcY+a64yf/QxvYVEIpWUrBMI9FNHIm6GsLXgRAacC8a\nkh3f3DQWh7Nd9a+DWliDtSLROW4M67p+NtmE6Jj/d4A0dmYl6k4CtgxlJNa4zlsL\ny3RpUS0R8I70JbO8poCIrl83RQQggB4/3babGdGekfaGCCXkcURaFRffmY4tXFcm\nmsm9sA4wjTZqmVOxBXCJ3Rq0+ln2ZCoIm6UTpnOZx2QwLaPw6gzKIqR/7ki75LlB\nty0jbhc8P64ua6rvnXYezAZmdyR/1q06GB6lQaRrKNFM46BgpkZ+JXKJ27UGDwsI\noBWBli4Xy/oTt2Es6rcglgiakE656kSTgsH5tBJzQfoZ1hydRLlcUb0B31SpoF0N\n9/I++SO34GtaKH/BMp0e+QD0V+pOUMvrtBab3oPRalroAvzCjoMFhzbxIvhPeqFc\n7Yyx/+Y5ncJlv9KWb+h7LeGv4ls1sXKt272qbIGNKMEZ9Vp3o3145aS/3bk7Oal/\nm0Jo/rhCyyc6q/rnv23ZxeNf3PvOJrkW7zzWOCZu4MG8hejs2gAyETmdj0iOPsrl\nWrOqW2YzTJHcI7Adb2xgG2cY6Wl8UeuiIUUEL4Fm5e6FONhZc9CfwwspiLKIsyJf\njVLRwWK7X3bjTF/UOM6vr33H/ZgVw08xXJf63jzvyIXyX9JvyHE=\n=aFXc\n-----END PGP SIGNATURE-----",
        "payload": "tree b004594fd020a8e8613e3c7fd74249dfce95ff31\nparent 88c566a13f0c1d0a30e2d78432fbee71b280da03\nauthor bitcoinhodler <31543633+bitcoinhodler@users.noreply.github.com> 1545343196 +0000\ncommitter fanquake <fanquake@gmail.com> 1545994718 +0800\n\nFix minor grammar error in doc\n\nGithub-Pull: #15012\nRebased-From: 72b63bc9054f7742a9b12ea29b21770b5e437092\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0c76adee84e2b536b2202429d744e305444cd5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0c76adee84e2b536b2202429d744e305444cd5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0c76adee84e2b536b2202429d744e305444cd5/comments",
    "author": {
      "login": "bitcoinhodler",
      "id": 31543633,
      "node_id": "MDQ6VXNlcjMxNTQzNjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/31543633?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bitcoinhodler",
      "html_url": "https://github.com/bitcoinhodler",
      "followers_url": "https://api.github.com/users/bitcoinhodler/followers",
      "following_url": "https://api.github.com/users/bitcoinhodler/following{/other_user}",
      "gists_url": "https://api.github.com/users/bitcoinhodler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bitcoinhodler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bitcoinhodler/subscriptions",
      "organizations_url": "https://api.github.com/users/bitcoinhodler/orgs",
      "repos_url": "https://api.github.com/users/bitcoinhodler/repos",
      "events_url": "https://api.github.com/users/bitcoinhodler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bitcoinhodler/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88c566a13f0c1d0a30e2d78432fbee71b280da03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88c566a13f0c1d0a30e2d78432fbee71b280da03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88c566a13f0c1d0a30e2d78432fbee71b280da03"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "560b45ef312653319576f3538dc96ecc42f3e717",
        "filename": "doc/psbt.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0c76adee84e2b536b2202429d744e305444cd5/doc/psbt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0c76adee84e2b536b2202429d744e305444cd5/doc/psbt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/psbt.md?ref=fa0c76adee84e2b536b2202429d744e305444cd5",
        "patch": "@@ -124,7 +124,7 @@ does not need to be involved.\n - Finally anyone can broadcast the transaction using `sendrawtransaction \"T\"`.\n \n In case there are more signers, it may be advantageous to let them all sign in\n-parallel, rather passing the PSBT from one signer to the next one. In the\n+parallel, rather than passing the PSBT from one signer to the next one. In the\n above example this would translate to Carol handing a copy of *P* to each signer\n separately. They can then all invoke `walletprocesspsbt \"P\"`, and end up with\n their individually-signed PSBT structures. They then all send those back to"
      }
    ]
  }
]