darosior,2021-09-23 17:03:16,"CI failure seems completely unrelated (`feature_asmap` failure on a `Addrman` log line figuring `3` instead of `2`). Here is the log trace, ""just in case"".\n<details>\n<p>\n<summary>Random `feature_asmap` failure logs</summary>\n\n```\n2021-09-23T14:53:38.217000Z TestFramework (INFO): Initializing test directory /tmp/cirrus-ci-build/ci/scratch/test_runner/test_runner_‚Çø_üèÉ_20210923_145026/feat",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-925995340,925995340,
DrahtBot,2021-09-23 22:15:57,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23075](https://github.com/bitcoin/bitcoin/pull/23075) (refactoring: Fee estimation functional test cleanups by darosior)",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-926203885,926203885,
instagibbs,2021-09-24 03:11:52,concept ACK,https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-926309437,926309437,
darosior,2021-09-24 09:58:19,"Removed the commit asserting `blocksToConfirm > 0`, it would cause more issues with fuzzing targets than i want to deal with in this PR :)",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-926502098,926502098,
glozow,2021-09-24 14:01:50,"Concept ACK, planning to review but as I have very little background on the fee estimator it may take me a bit of time :)",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-926650119,926650119,
darosior,2021-09-24 15:54:25,"Unrelated CI error: Windows socket error (the use of UNIX-only `os.killpg` was just a symptom, not the cause)\n\n<details>\n\n```\n2021-09-24T10:29:15.111000Z TestFramework (ERROR): Unexpected exception caught during testing \n                                   Traceback (most recent call last):\n                                     File ""C:\Users\ContainerAdministrator\AppData\Local\Temp\c",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-926737249,926737249,
naumenkogs,2021-09-27 07:00:04,"Concept ACK. Seems like a well-justified improvement.\n\n----------------\n\nDo you think this PR could degrade the prediction performance in certain cases? For example, if someone RBFs their package with 1 tx. I actually think we get an improvement here in that case, but yeah, that's just an example.",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-927586023,927586023,
darosior,2021-09-27 07:06:36,"I don't think this can degrade estimation in any case, it should be a strict improvement (/fix?).\n\n> For example, if someone RBFs their package with 1 tx.\n\nFor now the replacement transaction would not be considered. Assuming we have both https://github.com/bitcoin/bitcoin/pull/22539 and this PR this would give a much more correct estimation: taking the entire package feerate instead of ig",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-927590580,927590580,
darosior,2021-09-28 08:20:24,"> However, I'm not sure about the approach. Looking at a block transaction and its descendants can tell us the feerate at which it was mined, but not the feerate it was offered at. We wouldn't know when it was fee-bumped and how long it took to mine after the high-fee descendant(s) were broadcast (which imo is what we're actually interested in).\n\nRight, this would be the accurate approach. I c",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-928966768,928966768,
DrahtBot,2021-09-28 22:12:20,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/23074#issuecomment-929663339,929663339,
glozow,2021-09-27 14:44:46,"I think this approach may _overestimate_ the number of blocks it takes to a tx at a certain feerate to confirm: if a transaction is first accepted at time `t` with a feerate of 1sat/vB, sits in the mempool for a long time, and then is fee-bumped to 10sat/vB and included in a block at time `t+500`, this will record that the transaction had a feerate of 10sat/vB but took 500 blocks to confirm. That ",https://github.com/bitcoin/bitcoin/pull/23074#discussion_r716763703,716763703,src/policy/fees.cpp
glozow,2021-09-27 15:29:29,You can remove the txmempool forward declarations below if including the header.,https://github.com/bitcoin/bitcoin/pull/23074#discussion_r716805860,716805860,src/policy/fees.h
