DrahtBot,2018-10-03T22:11:49Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16688](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16688.html) (log: Add validation interface logging by jk",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-426821168,426821168,
practicalswift,2018-10-04T09:37:15Z,"Concept ACK\n\nLet's get rid of these ugly circular dependencies! :-)",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-426951893,426951893,
l2a5b1,2018-11-13T22:26:35Z,Rebased b58bbc9,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-438462230,438462230,
l2a5b1,2019-04-10T10:26:38Z,"rebased fe6d863\n\nthanks @practicalswift for the review - fe6d863 addresses your feedback. \n\nTo answer your question https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600485: I don't think it is necessary to move the shared pointer as it is now passed by reference as per your suggestion: https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600988 . \n",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-481634169,481634169,
l2a5b1,2019-06-06T19:44:17Z,"Rebased 35a63b2. \n\nUpdated the pull request description, since the `validation -> validationinterface -> validation` circular dependency was resolved in #16129 and removed from this pull request.\n\nTravis build error seems unrelated.",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-499639790,499639790,
l2a5b1,2019-06-23T11:39:50Z,Rebased 80c3659,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-504743626,504743626,
l2a5b1,2019-07-23T18:42:54Z,04390b2 addresses feedback from @MarcoFalke.,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-514333934,514333934,
MarcoFalke,2019-07-23T19:36:56Z,"Concept ACK.\n\n`TransactionRemovedFromMempool` is used to notify of removed tx, excluding txs that were already notified via `BlockConnected`. However, we will miss those notifications, if we forgot to call `RegisterWithMempoolSignals`. This happened in the unit tests (`setup_common`).\n\nThis pull fixes that and cleans up a bunch of code on the way.",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-514353212,514353212,
l2a5b1,2019-07-23T21:52:03Z,28403ac addresses a nit (https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306480219) and updates the commit message.,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-514397656,514397656,
l2a5b1,2019-10-03T13:13:35Z,Happy 1y anniversary! ðŸ¥³ðŸŽ‚,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-537939864,537939864,
MarcoFalke,2019-11-08T17:12:23Z,"Can we get this for 0.20, pls? Needs rebase",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-551912547,551912547,
l2a5b1,2019-11-08T20:01:53Z,"@MarcoFalke sure, rebased 37fd92ba96224cfe11bacea069df02cead0c34e2",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-551970576,551970576,
MarcoFalke,2019-11-08T20:17:32Z,ACK 37fd92ba96224cfe11bacea069df02cead0c34e2,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-551975272,551975272,
0xB10C,2019-11-10T09:29:12Z,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-552177960,552177960,
jnewbery,2019-11-10T18:38:33Z,"Concept ACK. I've skimmed the code and it looks good. Will fully review and test next week.\n\nI think a follow-up to this would be to remove the `pvtxConflicted` vector in `BlockConnected` and instead just call `TransactionRemovedFromMempool()` for conflicted transactions directly from `removeUnchecked()`. I don't see anywhere in the client code that requires the conflicted txs to be reported i",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-552221118,552221118,
jnewbery,2019-11-11T17:13:54Z,"utACK 37fd92ba96224cfe11bacea069df02cead0c34e2\n\nre https://github.com/bitcoin/bitcoin/pull/14384#discussion_r344524519: On second thoughts, there's no need to change `TransationRemovedFromMempool()` to take a `MemPoolRemovalReason` as an argument. If this PR gets merged before #16688 , then that PR should just add the argument there.\n\n> I think a follow-up to this would be to remove the pv",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-552531970,552531970,
l2a5b1,2019-11-11T19:44:49Z,@jnewbery thanks for the review! ðŸ˜ƒ ,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-552586530,552586530,
jamesob,2019-11-18T18:27:37Z,"ACK https://github.com/bitcoin/bitcoin/pull/14384/commits/37fd92ba96224cfe11bacea069df02cead0c34e2\n\nThis is basically some helpful code-shuffling; the change removes unneeded code to absorb the `TransactionRemovedFromMempool` signal into the existing `CValidationInterface` callback registration code, and avoids including mempool-specific header files into the more general validationinterface.",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-555146319,555146319,
jonatack,2019-11-18T18:43:45Z,"Concept ACK, kudos @l2a5b1 for staying with this. \n\nBuilt 37fd92ba96224cfe11bacea069df02cead0c34e2 rebased onto current master at 30521302f90e4856a7516867b32a4576fa6d98b3, tests pass, bitcoind running.\n\nNow reviewing the code.",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-555153034,555153034,
TheBlueMatt,2019-11-18T20:31:57Z,"This isn't strictly worse, but its still super awkward....CTxMemPool is (mostly) a ""dumb datastructure"", with all the adding/removing happening in validation.cpp. Currently its double awkward cause they're signals that go back to validation so that validation can fire appropriate events, but just firing the events inside a datastructure is also really awkward. Is there an equally-easy way to move ",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-555196397,555196397,
jnewbery,2019-11-18T21:14:06Z,"> Is there an equally-easy way to move the event-firing back into validation.cpp?\n\nI don't think there is. That would require that every site that validation calls a `CTxMemPool` method that could result in transactions being removed would need to be passed back a vector of transactions that it should fire the events for. A quick search shows at least the following sites would need to be updat",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-555211783,555211783,
MarcoFalke,2019-11-19T19:30:10Z,Re-run ci,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-555671349,555671349,
TheBlueMatt,2019-11-21T02:46:39Z,"Right, certainly don't interpret my comment as a NACK, then. Longer-term it would be nice, indeed, to move the event-firing into those callsites, cause the responsibility right now is very awkwardly split (hence why we're checking the reason in the first place - validation fires some similar things), but this isn't worse than master and if other PR's need this, do it!",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-556874021,556874021,
laanwj,2019-11-21T18:42:19Z,"argh, needs trivial rebase for the linter `test/lint/lint-circular-dependencies.sh `",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-557218626,557218626,
l2a5b1,2019-11-22T06:43:11Z,"> argh\n\n@laanwj lol, no worries, rebased e20c72f9f076681def325b5b5fa53bccda2b0eab",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-557412006,557412006,
jnewbery,2019-11-22T14:59:48Z,ACK e20c72f9f076681def325b5b5fa53bccda2b0eab,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-557563695,557563695,
ariard,2019-11-22T16:16:28Z,"ACK e20c72f, only rebased.",https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-557595429,557595429,
jonatack,2019-11-22T17:13:07Z,Posthumous ACK e20c72f9f076681def325b5b5fa53bccda2b0eab,https://github.com/bitcoin/bitcoin/pull/14384#issuecomment-557615822,557615822,
practicalswift,2018-10-04T09:35:19Z,Could `ptx` be moved to avoid unnecessary copies?,https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600485,222600485,src/txmempool.cpp
practicalswift,2018-10-04T09:36:08Z,Should be named `ptx` to match definition :-),https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600742,222600742,src/validationinterface.h
practicalswift,2018-10-04T09:36:56Z,Could be made `const` reference :-),https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600988,222600988,src/validationinterface.cpp
l2a5b1,2018-10-04T20:10:59Z,Thanks @practicalswift fixed!,https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222810948,222810948,src/validationinterface.h
l2a5b1,2019-04-11T13:15:45Z,"Thanks @practicalswift. Good point. When `ptx` was passed by value I suspect we could have done that. However, per your suggestion https://github.com/bitcoin/bitcoin/pull/14384#discussion_r222600988 `ptx` is now passed by reference.",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r274416041,274416041,src/txmempool.cpp
MarcoFalke,2019-07-23T00:12:02Z,Why is this not a CTxMemPool member?,https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306083129,306083129,src/txmempool.cpp
MarcoFalke,2019-07-23T00:12:24Z,Why can't this be called in the mempool constructor?,https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306083196,306083196,src/txmempool.cpp
MarcoFalke,2019-07-23T13:17:21Z,"Actually, this can be removed in one go:\n\n07c8420f4ddddde7103d8a564f918389357904c9",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306311431,306311431,src/txmempool.cpp
l2a5b1,2019-07-23T18:42:12Z,Thanks @MarcoFalke! Really appreciate your feedback. Please see 04390b2.,https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306474425,306474425,src/txmempool.cpp
l2a5b1,2019-07-23T18:55:39Z,"nit: Does it makes sense to remove ` CTxMemPool::EntryRemoved`'s method and move its implementation to `CTxMemPool::removeUnchecked` ?\n\n```\nvoid CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n{\n    NotifyEntryRemoved(ptx, reason);\n    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n        GetMainSignals().TransactionRemov",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306480219,306480219,src/txmempool.cpp
MarcoFalke,2019-07-23T19:34:47Z,"> nit: Does it makes sense to remove CTxMemPool::EntryRemoved's method and move its implementation to CTxMemPool::removeUnchecked ?\n\nSure, if you wish so",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r306495835,306495835,src/txmempool.cpp
jnewbery,2019-11-11T00:02:14Z,"Can you keep the `MemPoolRemovealReason reason` as an argument to this function please? #16688 adds validation interface logging, including logging the reason for the mempool removal.\n\nI also think it makes sense for the client to be notified of the reason for the mempool reason.",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r344524519,344524519,src/validationinterface.cpp
jnewbery,2019-11-11T17:14:11Z,"Can be done in a follow-up, or in #16688 when this gets merged.",https://github.com/bitcoin/bitcoin/pull/14384#discussion_r344816936,344816936,src/validationinterface.cpp
