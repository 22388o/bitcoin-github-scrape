[
  {
    "sha": "e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjBjNzJmOWYwNzY2ODFkZWYzMjViNWI1ZmE1M2JjY2RhMmIwZWFi",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+l2a5b1@users.noreply.github.com",
        "date": "2019-07-23T21:47:17Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+l2a5b1@users.noreply.github.com",
        "date": "2019-11-21T20:05:38Z"
      },
      "message": "Fire TransactionRemovedFromMempool from mempool\n\nThis commit fires TransactionRemovedFromMempool callbacks from the\nmempool and cleans up a bunch of code.",
      "tree": {
        "sha": "f88c796738d7379600782ac143e24a0f922fca45",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f88c796738d7379600782ac143e24a0f922fca45"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e20c72f9f076681def325b5b5fa53bccda2b0eab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e20c72f9f076681def325b5b5fa53bccda2b0eab/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/69a6f1ad1f7ca52b2524ab8322bfa89a9b0ee61b"
      }
    ],
    "stats": {
      "total": 51,
      "additions": 15,
      "deletions": 36
    },
    "files": [
      {
        "sha": "e7dda59590cff2b5ed2ac8c1f4bae11f94bae9b5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -281,7 +281,6 @@ void Shutdown(NodeContext& node)\n     node.chain_clients.clear();\n     UnregisterAllValidationInterfaces();\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n-    GetMainSignals().UnregisterWithMempoolSignals(mempool);\n     globalVerifyHandle.reset();\n     ECC_Stop();\n     if (node.mempool) node.mempool = nullptr;\n@@ -1263,7 +1262,6 @@ bool AppInitMain(NodeContext& node)\n     }, 60000);\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(scheduler);\n-    GetMainSignals().RegisterWithMempoolSignals(mempool);\n \n     // Create client interfaces for wallets that are supposed to be loaded\n     // according to -wallet and -disablewallet options. This only constructs"
      },
      {
        "sha": "3c967a04c0711f4187ebcdaa0754884260010b52",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -17,6 +17,7 @@\n #include <util/system.h>\n #include <util/moneystr.h>\n #include <util/time.h>\n+#include <validationinterface.h>\n \n CTxMemPoolEntry::CTxMemPoolEntry(const CTransactionRef& _tx, const CAmount& _nFee,\n                                  int64_t _nTime, unsigned int _entryHeight,\n@@ -403,7 +404,12 @@ void CTxMemPool::addUnchecked(const CTxMemPoolEntry &entry, setEntries &setAnces\n \n void CTxMemPool::removeUnchecked(txiter it, MemPoolRemovalReason reason)\n {\n-    NotifyEntryRemoved(it->GetSharedTx(), reason);\n+    CTransactionRef ptx = it->GetSharedTx();\n+    NotifyEntryRemoved(ptx, reason);\n+    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n+        GetMainSignals().TransactionRemovedFromMempool(ptx);\n+    }\n+\n     const uint256 hash = it->GetTx().GetHash();\n     for (const CTxIn& txin : it->GetTx().vin)\n         mapNextTx.erase(txin.prevout);"
      },
      {
        "sha": "6c0f4d5edd2d3390826dc4c7b4f16191fa557cd7",
        "filename": "src/validationinterface.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 24,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.cpp?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -7,9 +7,9 @@\n \n #include <primitives/block.h>\n #include <scheduler.h>\n-#include <txmempool.h>\n \n #include <future>\n+#include <unordered_map>\n #include <utility>\n \n #include <boost/signals2/signal.hpp>\n@@ -46,11 +46,6 @@ struct MainSignalsInstance {\n \n static CMainSignals g_signals;\n \n-// This map has to a separate global instead of a member of MainSignalsInstance,\n-// because RegisterWithMempoolSignals is currently called before RegisterBackgroundSignalScheduler,\n-// so MainSignalsInstance hasn't been created yet.\n-static std::unordered_map<CTxMemPool*, boost::signals2::scoped_connection> g_connNotifyEntryRemoved;\n-\n void CMainSignals::RegisterBackgroundSignalScheduler(CScheduler& scheduler) {\n     assert(!m_internals);\n     m_internals.reset(new MainSignalsInstance(&scheduler));\n@@ -71,17 +66,6 @@ size_t CMainSignals::CallbacksPending() {\n     return m_internals->m_schedulerClient.CallbacksPending();\n }\n \n-void CMainSignals::RegisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.emplace(std::piecewise_construct,\n-        std::forward_as_tuple(&pool),\n-        std::forward_as_tuple(pool.NotifyEntryRemoved.connect(std::bind(&CMainSignals::MempoolEntryRemoved, this, std::placeholders::_1, std::placeholders::_2)))\n-    );\n-}\n-\n-void CMainSignals::UnregisterWithMempoolSignals(CTxMemPool& pool) {\n-    g_connNotifyEntryRemoved.erase(&pool);\n-}\n-\n CMainSignals& GetMainSignals()\n {\n     return g_signals;\n@@ -126,13 +110,6 @@ void SyncWithValidationInterfaceQueue() {\n     promise.get_future().wait();\n }\n \n-void CMainSignals::MempoolEntryRemoved(CTransactionRef ptx, MemPoolRemovalReason reason) {\n-    if (reason != MemPoolRemovalReason::BLOCK && reason != MemPoolRemovalReason::CONFLICT) {\n-        m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n-            m_internals->TransactionRemovedFromMempool(ptx);\n-        });\n-    }\n-}\n \n void CMainSignals::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     // Dependencies exist that require UpdatedBlockTip events to be delivered in the order in which\n@@ -150,6 +127,12 @@ void CMainSignals::TransactionAddedToMempool(const CTransactionRef &ptx) {\n     });\n }\n \n+void CMainSignals::TransactionRemovedFromMempool(const CTransactionRef &ptx) {\n+    m_internals->m_schedulerClient.AddToProcessQueue([ptx, this] {\n+        m_internals->TransactionRemovedFromMempool(ptx);\n+    });\n+}\n+\n void CMainSignals::BlockConnected(const std::shared_ptr<const CBlock> &pblock, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>>& pvtxConflicted) {\n     m_internals->m_schedulerClient.AddToProcessQueue([pblock, pindex, pvtxConflicted, this] {\n         m_internals->BlockConnected(pblock, pindex, *pvtxConflicted);"
      },
      {
        "sha": "63aad8661f85fef3abe7851be6a7da313f889515",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -21,8 +21,6 @@ class CConnman;\n class CValidationInterface;\n class uint256;\n class CScheduler;\n-class CTxMemPool;\n-enum class MemPoolRemovalReason;\n \n // These functions dispatch to one or all registered wallets\n \n@@ -158,8 +156,6 @@ class CMainSignals {\n     friend void ::UnregisterAllValidationInterfaces();\n     friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n \n-    void MempoolEntryRemoved(CTransactionRef tx, MemPoolRemovalReason reason);\n-\n public:\n     /** Register a CScheduler to give callbacks which should run in the background (may only be called once) */\n     void RegisterBackgroundSignalScheduler(CScheduler& scheduler);\n@@ -170,13 +166,10 @@ class CMainSignals {\n \n     size_t CallbacksPending();\n \n-    /** Register with mempool to call TransactionRemovedFromMempool callbacks */\n-    void RegisterWithMempoolSignals(CTxMemPool& pool);\n-    /** Unregister with mempool */\n-    void UnregisterWithMempoolSignals(CTxMemPool& pool);\n \n     void UpdatedBlockTip(const CBlockIndex *, const CBlockIndex *, bool fInitialDownload);\n     void TransactionAddedToMempool(const CTransactionRef &);\n+    void TransactionRemovedFromMempool(const CTransactionRef &);\n     void BlockConnected(const std::shared_ptr<const CBlock> &, const CBlockIndex *pindex, const std::shared_ptr<const std::vector<CTransactionRef>> &);\n     void BlockDisconnected(const std::shared_ptr<const CBlock> &, const CBlockIndex* pindex);\n     void ChainStateFlushed(const CBlockLocator &);"
      },
      {
        "sha": "7164432ca550003250aff60b589f19a9d8c7e918",
        "filename": "test/lint/lint-circular-dependencies.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e20c72f9f076681def325b5b5fa53bccda2b0eab/test/lint/lint-circular-dependencies.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e20c72f9f076681def325b5b5fa53bccda2b0eab/test/lint/lint-circular-dependencies.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-circular-dependencies.sh?ref=e20c72f9f076681def325b5b5fa53bccda2b0eab",
        "patch": "@@ -26,7 +26,6 @@ EXPECTED_CIRCULAR_DEPENDENCIES=(\n     \"wallet/fees -> wallet/wallet -> wallet/fees\"\n     \"wallet/wallet -> wallet/walletdb -> wallet/wallet\"\n     \"policy/fees -> txmempool -> validation -> policy/fees\"\n-    \"txmempool -> validation -> validationinterface -> txmempool\"\n     \"wallet/scriptpubkeyman -> wallet/wallet -> wallet/scriptpubkeyman\"\n )\n "
      }
    ]
  }
]