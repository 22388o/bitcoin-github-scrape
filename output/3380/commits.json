[
  {
    "sha": "bf07e26a9bc780a4a32050b81c765f287505c5e4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjA3ZTI2YTliYzc4MGE0YTMyMDUwYjgxYzc2NWYyODc1MDVjNWU0",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T10:04:42Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-10T10:16:13Z"
      },
      "message": "Remove mapRequestCount from wallet\n\nMaprequestcount in the wallet is used to keep track of the number of requests\nthat a certain block/transaction has had.\n\nHowever, this does not affect the behavior in any way, and is not\nreported over RPC in any way. It is only used for some obscure stats in the GUI\nwhich I think would be slightly useful for people solo-mining using the GUI.\n\nThis also makes the \"Inventory\" signal no longer necessary.",
      "tree": {
        "sha": "f6892a1366375faacbe9244f4da77f2ce74263e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f6892a1366375faacbe9244f4da77f2ce74263e9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf07e26a9bc780a4a32050b81c765f287505c5e4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf07e26a9bc780a4a32050b81c765f287505c5e4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf07e26a9bc780a4a32050b81c765f287505c5e4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf07e26a9bc780a4a32050b81c765f287505c5e4/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb96e28b29487f4fdff81b8852d03da5e3110345",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb96e28b29487f4fdff81b8852d03da5e3110345",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb96e28b29487f4fdff81b8852d03da5e3110345"
      }
    ],
    "stats": {
      "total": 96,
      "additions": 2,
      "deletions": 94
    },
    "files": [
      {
        "sha": "5969509e4d72500774cec4f41e2f830c3972a9b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -110,8 +110,6 @@ struct CMainSignals {\n     boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n     // Notifies listeners of a new active block chain.\n     boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n-    // Notifies listeners about an inventory item being seen on the network.\n-    boost::signals2::signal<void (const uint256 &)> Inventory;\n     // Tells listeners to broadcast their data.\n     boost::signals2::signal<void ()> Broadcast;\n } g_signals;\n@@ -122,13 +120,11 @@ void RegisterWallet(CWalletInterface* pwalletIn) {\n     g_signals.EraseTransaction.connect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n     g_signals.UpdatedTransaction.connect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.SetBestChain.connect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.Inventory.connect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n     g_signals.Broadcast.connect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n }\n \n void UnregisterWallet(CWalletInterface* pwalletIn) {\n     g_signals.Broadcast.disconnect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n-    g_signals.Inventory.disconnect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n     g_signals.SetBestChain.disconnect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n     g_signals.UpdatedTransaction.disconnect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n     g_signals.EraseTransaction.disconnect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n@@ -137,7 +133,6 @@ void UnregisterWallet(CWalletInterface* pwalletIn) {\n \n void UnregisterAllWallets() {\n     g_signals.Broadcast.disconnect_all_slots();\n-    g_signals.Inventory.disconnect_all_slots();\n     g_signals.SetBestChain.disconnect_all_slots();\n     g_signals.UpdatedTransaction.disconnect_all_slots();\n     g_signals.EraseTransaction.disconnect_all_slots();\n@@ -3074,9 +3069,6 @@ void static ProcessGetData(CNode* pfrom)\n                 }\n             }\n \n-            // Track requests for our stuff.\n-            g_signals.Inventory(inv.hash);\n-\n             if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK)\n                 break;\n         }\n@@ -3344,8 +3336,6 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n                     LogPrintf(\"force request: %s\\n\", inv.ToString().c_str());\n             }\n \n-            // Track requests for our stuff\n-            g_signals.Inventory(inv.hash);\n         }\n     }\n "
      },
      {
        "sha": "3b2b3a0bef874909ef38d9c8aa79e9c639916d26",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -1097,7 +1097,6 @@ class CWalletInterface {\n     virtual void EraseFromWallet(const uint256 &hash) =0;\n     virtual void SetBestChain(const CBlockLocator &locator) =0;\n     virtual void UpdatedTransaction(const uint256 &hash) =0;\n-    virtual void Inventory(const uint256 &hash) =0;\n     virtual void ResendWalletTransactions() =0;\n     friend void ::RegisterWallet(CWalletInterface*);\n     friend void ::UnregisterWallet(CWalletInterface*);"
      },
      {
        "sha": "b6024ce849bca277106dbee04df82c41443fd29c",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -482,12 +482,6 @@ bool CheckWork(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)\n         // Remove key from key pool\n         reservekey.KeepKey();\n \n-        // Track how many getdata requests this block gets\n-        {\n-            LOCK(wallet.cs_wallet);\n-            wallet.mapRequestCount[pblock->GetHash()] = 0;\n-        }\n-\n         // Process this block the same as if we had received it from another node\n         CValidationState state;\n         if (!ProcessBlock(state, NULL, pblock))"
      },
      {
        "sha": "ad00e5779d92e6e6f87686ae874a5869ae21928a",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 14,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -30,9 +30,7 @@ QString TransactionDesc::FormatTxStatus(const CWalletTx& wtx)\n     else\n     {\n         int nDepth = wtx.GetDepthInMainChain();\n-        if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-            return tr(\"%1/offline\").arg(nDepth);\n-        else if (nDepth < 6)\n+        if (nDepth < 6)\n             return tr(\"%1/unconfirmed\").arg(nDepth);\n         else\n             return tr(\"%1 confirmations\").arg(nDepth);\n@@ -53,17 +51,6 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, int vout, int u\n         int64_t nDebit = wtx.GetDebit();\n         int64_t nNet = nCredit - nDebit;\n \n-        strHTML += \"<b>\" + tr(\"Status\") + \":</b> \" + FormatTxStatus(wtx);\n-        int nRequests = wtx.GetRequestCount();\n-        if (nRequests != -1)\n-        {\n-            if (nRequests == 0)\n-                strHTML += tr(\", has not been successfully broadcast yet\");\n-            else if (nRequests > 0)\n-                strHTML += tr(\", broadcast through %n node(s)\", \"\", nRequests);\n-        }\n-        strHTML += \"<br>\";\n-\n         strHTML += \"<b>\" + tr(\"Date\") + \":</b> \" + (nTime ? GUIUtil::dateTimeStr(nTime) : \"\") + \"<br>\";\n \n         //"
      },
      {
        "sha": "34eabcd0ba4aedc15297bccb4d7434507ed725bb",
        "filename": "src/qt/transactionrecord.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 9,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/qt/transactionrecord.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/qt/transactionrecord.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.cpp?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -183,11 +183,7 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n     }\n     else\n     {\n-        if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-        {\n-            status.status = TransactionStatus::Offline;\n-        }\n-        else if (status.depth < NumConfirmations)\n+        if (status.depth < NumConfirmations)\n         {\n             status.status = TransactionStatus::Unconfirmed;\n         }\n@@ -208,10 +204,6 @@ void TransactionRecord::updateStatus(const CWalletTx &wtx)\n             if (wtx.IsInMainChain())\n             {\n                 status.matures_in = wtx.GetBlocksToMaturity();\n-\n-                // Check if the block was requested by anyone\n-                if (GetAdjustedTime() - wtx.nTimeReceived > 2 * 60 && wtx.GetRequestCount() == 0)\n-                    status.maturity = TransactionStatus::MaturesWarning;\n             }\n             else\n             {"
      },
      {
        "sha": "c08179906dd542b3e4578d5f3d4dac24be60df07",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 42,
        "changes": 42,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -604,45 +604,6 @@ int64_t CWalletTx::GetTxTime() const\n     return n ? n : nTimeReceived;\n }\n \n-int CWalletTx::GetRequestCount() const\n-{\n-    // Returns -1 if it wasn't being tracked\n-    int nRequests = -1;\n-    {\n-        LOCK(pwallet->cs_wallet);\n-        if (IsCoinBase())\n-        {\n-            // Generated block\n-            if (hashBlock != 0)\n-            {\n-                map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(hashBlock);\n-                if (mi != pwallet->mapRequestCount.end())\n-                    nRequests = (*mi).second;\n-            }\n-        }\n-        else\n-        {\n-            // Did anyone request this transaction?\n-            map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(GetHash());\n-            if (mi != pwallet->mapRequestCount.end())\n-            {\n-                nRequests = (*mi).second;\n-\n-                // How about the block it's in?\n-                if (nRequests == 0 && hashBlock != 0)\n-                {\n-                    map<uint256, int>::const_iterator mi = pwallet->mapRequestCount.find(hashBlock);\n-                    if (mi != pwallet->mapRequestCount.end())\n-                        nRequests = (*mi).second;\n-                    else\n-                        nRequests = 1; // If it's in someone else's block it must have got out\n-                }\n-            }\n-        }\n-    }\n-    return nRequests;\n-}\n-\n void CWalletTx::GetAmounts(list<pair<CTxDestination, int64_t> >& listReceived,\n                            list<pair<CTxDestination, int64_t> >& listSent, int64_t& nFee, string& strSentAccount) const\n {\n@@ -1416,9 +1377,6 @@ bool CWallet::CommitTransaction(CWalletTx& wtxNew, CReserveKey& reservekey)\n                 delete pwalletdb;\n         }\n \n-        // Track how many getdata requests our transaction gets\n-        mapRequestCount[wtxNew.GetHash()] = 0;\n-\n         // Broadcast\n         if (!wtxNew.AcceptToMemoryPool(false))\n         {"
      },
      {
        "sha": "0d986277784e546464a84ec073423c86cd8da619",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf07e26a9bc780a4a32050b81c765f287505c5e4/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=bf07e26a9bc780a4a32050b81c765f287505c5e4",
        "patch": "@@ -140,7 +140,6 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     std::map<uint256, CWalletTx> mapWallet;\n     int64_t nOrderPosNext;\n-    std::map<uint256, int> mapRequestCount;\n \n     std::map<CTxDestination, CAddressBookData> mapAddressBook;\n \n@@ -308,16 +307,6 @@ class CWallet : public CCryptoKeyStore, public CWalletInterface\n \n     void UpdatedTransaction(const uint256 &hashTx);\n \n-    void Inventory(const uint256 &hash)\n-    {\n-        {\n-            LOCK(cs_wallet);\n-            std::map<uint256, int>::iterator mi = mapRequestCount.find(hash);\n-            if (mi != mapRequestCount.end())\n-                (*mi).second++;\n-        }\n-    }\n-\n     unsigned int GetKeyPoolSize()\n     {\n         return setKeyPool.size();\n@@ -718,7 +707,6 @@ class CWalletTx : public CMerkleTx\n     bool WriteToDisk();\n \n     int64_t GetTxTime() const;\n-    int GetRequestCount() const;\n \n     void AddSupportingTransactions();\n     bool AcceptWalletTransaction();"
      }
    ]
  }
]