[
  {
    "sha": "d7930c43269346686ec67614281cbca59808f43c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNzkzMGM0MzI2OTM0NjY4NmVjNjc2MTQyODFjYmNhNTk4MDhmNDNj",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-26T19:37:55Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-26T21:21:34Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in protocol.h",
      "tree": {
        "sha": "66a28e9b2e7c71c5f898a3bde59caeae8be4cdaf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66a28e9b2e7c71c5f898a3bde59caeae8be4cdaf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d7930c43269346686ec67614281cbca59808f43c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7930c43269346686ec67614281cbca59808f43c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d7930c43269346686ec67614281cbca59808f43c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7930c43269346686ec67614281cbca59808f43c/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7f9dedb22dcd9550ca525c0e35fec38b2d59e029",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7f9dedb22dcd9550ca525c0e35fec38b2d59e029",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7f9dedb22dcd9550ca525c0e35fec38b2d59e029"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 39,
      "deletions": 0
    },
    "files": [
      {
        "sha": "da117fe27cecf7ccc5d9d0a6513618d9304ecbd9",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7930c43269346686ec67614281cbca59808f43c/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7930c43269346686ec67614281cbca59808f43c/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=d7930c43269346686ec67614281cbca59808f43c",
        "patch": "@@ -83,6 +83,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/process_message_tx \\\n   test/fuzz/process_message_verack \\\n   test/fuzz/process_message_version \\\n+  test/fuzz/protocol \\\n   test/fuzz/psbt \\\n   test/fuzz/psbt_input_deserialize \\\n   test/fuzz/psbt_output_deserialize \\\n@@ -766,6 +767,12 @@ test_fuzz_process_message_version_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_process_message_version_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_process_message_version_SOURCES = $(FUZZ_SUITE) test/fuzz/process_message.cpp\n \n+test_fuzz_protocol_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_protocol_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_protocol_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_protocol_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_protocol_SOURCES = $(FUZZ_SUITE) test/fuzz/protocol.cpp\n+\n test_fuzz_psbt_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n test_fuzz_psbt_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_psbt_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "954471de6cf230f03d17b91e2b62e544673d82ef",
        "filename": "src/test/fuzz/protocol.cpp",
        "status": "added",
        "additions": 32,
        "deletions": 0,
        "changes": 32,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d7930c43269346686ec67614281cbca59808f43c/src/test/fuzz/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d7930c43269346686ec67614281cbca59808f43c/src/test/fuzz/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/protocol.cpp?ref=d7930c43269346686ec67614281cbca59808f43c",
        "patch": "@@ -0,0 +1,32 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <optional.h>\n+#include <protocol.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <stdexcept>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    const Optional<CInv> inv = ConsumeDeserializable<CInv>(fuzzed_data_provider);\n+    if (!inv) {\n+        return;\n+    }\n+    try {\n+        (void)inv->GetCommand();\n+    } catch (const std::out_of_range&) {\n+    }\n+    (void)inv->ToString();\n+    const Optional<CInv> another_inv = ConsumeDeserializable<CInv>(fuzzed_data_provider);\n+    if (!another_inv) {\n+        return;\n+    }\n+    (void)(*inv < *another_inv);\n+}"
      }
    ]
  },
  {
    "sha": "7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODM0YzNiOWVjZjZiZmQzNDM1NDJlNGM1ZGM5YjQ0ZjI2NWYxOTIy",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-26T20:51:05Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2020-03-26T21:21:34Z"
      },
      "message": "tests: Add fuzzing harness for functions/classes in chain.h",
      "tree": {
        "sha": "48fef13caf3d62760394640dbcf6a33806cf4818",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/48fef13caf3d62760394640dbcf6a33806cf4818"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d7930c43269346686ec67614281cbca59808f43c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d7930c43269346686ec67614281cbca59808f43c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d7930c43269346686ec67614281cbca59808f43c"
      }
    ],
    "stats": {
      "total": 72,
      "additions": 72,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2938ccdc9f97c17fee2e907a0c7ed8e0deee386e",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
        "patch": "@@ -26,6 +26,7 @@ FUZZ_TARGETS = \\\n   test/fuzz/blockundo_deserialize \\\n   test/fuzz/bloom_filter \\\n   test/fuzz/bloomfilter_deserialize \\\n+  test/fuzz/chain \\\n   test/fuzz/coins_deserialize \\\n   test/fuzz/decode_tx \\\n   test/fuzz/descriptor_parse \\\n@@ -425,6 +426,12 @@ test_fuzz_bloomfilter_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_bloomfilter_deserialize_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_bloomfilter_deserialize_SOURCES = $(FUZZ_SUITE) test/fuzz/deserialize.cpp\n \n+test_fuzz_chain_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_chain_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_chain_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_chain_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_chain_SOURCES = $(FUZZ_SUITE) test/fuzz/chain.cpp\n+\n test_fuzz_coins_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DCOINS_DESERIALIZE=1\n test_fuzz_coins_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_coins_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "b322516cc708ea788037b1b9175d2013f3305864",
        "filename": "src/test/fuzz/chain.cpp",
        "status": "added",
        "additions": 65,
        "deletions": 0,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922/src/test/fuzz/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7834c3b9ecf6bfd343542e4c5dc9b44f265f1922/src/test/fuzz/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/chain.cpp?ref=7834c3b9ecf6bfd343542e4c5dc9b44f265f1922",
        "patch": "@@ -0,0 +1,65 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chain.h>\n+#include <optional.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/fuzz/util.h>\n+\n+#include <cstdint>\n+#include <vector>\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+    Optional<CDiskBlockIndex> disk_block_index = ConsumeDeserializable<CDiskBlockIndex>(fuzzed_data_provider);\n+    if (!disk_block_index) {\n+        return;\n+    }\n+\n+    const uint256 zero{};\n+    disk_block_index->phashBlock = &zero;\n+    (void)disk_block_index->GetBlockHash();\n+    (void)disk_block_index->GetBlockPos();\n+    (void)disk_block_index->GetBlockTime();\n+    (void)disk_block_index->GetBlockTimeMax();\n+    (void)disk_block_index->GetMedianTimePast();\n+    (void)disk_block_index->GetUndoPos();\n+    (void)disk_block_index->HaveTxsDownloaded();\n+    (void)disk_block_index->IsValid();\n+    (void)disk_block_index->ToString();\n+\n+    const CBlockHeader block_header = disk_block_index->GetBlockHeader();\n+    (void)CDiskBlockIndex{*disk_block_index};\n+    (void)disk_block_index->BuildSkip();\n+\n+    while (fuzzed_data_provider.ConsumeBool()) {\n+        const BlockStatus block_status = fuzzed_data_provider.PickValueInArray({\n+            BlockStatus::BLOCK_VALID_UNKNOWN,\n+            BlockStatus::BLOCK_VALID_RESERVED,\n+            BlockStatus::BLOCK_VALID_TREE,\n+            BlockStatus::BLOCK_VALID_TRANSACTIONS,\n+            BlockStatus::BLOCK_VALID_CHAIN,\n+            BlockStatus::BLOCK_VALID_SCRIPTS,\n+            BlockStatus::BLOCK_VALID_MASK,\n+            BlockStatus::BLOCK_HAVE_DATA,\n+            BlockStatus::BLOCK_HAVE_UNDO,\n+            BlockStatus::BLOCK_HAVE_MASK,\n+            BlockStatus::BLOCK_FAILED_VALID,\n+            BlockStatus::BLOCK_FAILED_CHILD,\n+            BlockStatus::BLOCK_FAILED_MASK,\n+            BlockStatus::BLOCK_OPT_WITNESS,\n+        });\n+        if (block_status & ~BLOCK_VALID_MASK) {\n+            continue;\n+        }\n+        (void)disk_block_index->RaiseValidity(block_status);\n+    }\n+\n+    CBlockIndex block_index{block_header};\n+    block_index.phashBlock = &zero;\n+    (void)block_index.GetBlockHash();\n+    (void)block_index.ToString();\n+}"
      }
    ]
  }
]