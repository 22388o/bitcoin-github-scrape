[
  {
    "sha": "9fef2099452a21335db38d66c04baec69cbc36ee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmVmMjA5OTQ1MmEyMTMzNWRiMzhkNjZjMDRiYWVjNjljYmMzNmVl",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-02T16:55:07Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-02T16:55:07Z"
      },
      "message": "build, refactor: Fix indentation for if..then..fi\n\nThis makes easier to spot conditional macros.",
      "tree": {
        "sha": "7bbdb26fcd94138239d3a37004cc63316aa3cf07",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bbdb26fcd94138239d3a37004cc63316aa3cf07"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fef2099452a21335db38d66c04baec69cbc36ee",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmA+besACgkQQQEIES5+\nqB+EuxAAsJOGxYqpQYrtBrgoajysnd8elYiWGuT/nwzl9W5y2NPTTOlJuBDxfDKl\nE3RNbSVCzf/zUKW6/pLdm9DImhDoSvTDHcTPTaTwsKvINCYUC2WemS9BiIiB9OJm\nOsHrLuaDqfzTgjMsyKwSwmZiy76WtA6ew+XW16AwzshPovxr7lnlal7aFCxKfpP0\nrw/rY5RryljmrtE9iPsfok88UTCaFSTadBoDUSN4v5JXt3249ekUDeZV62ibDCGn\nuATkqSEn4THLn/SX2QqN4WByJe/4v/knIGRBtGdaBDaDMxyNuHHG7JjGCjVGdyx4\nFRjJCA9w1OnuXXDTVdc1BIBN6MuhpkpUXrXofwcb8bLZcwpTQ2Q2UzpREh4e2QGh\nShbMpmWgu7DDDgu/qgzcg7onOGT15qnhMxfj7fgNOGxXeuEFBuQ+N4zrbVF7zpqa\nfS7m5ggtmHFaWynWpnDVg601Ve9FCtKFtrRu3vi77w3NiLLLCYhNTdTKXZEG++FH\n/5i4nTpOLdFyVMdii0DxyaMsEOWbViSR29251IuYtydxj3Zu1NQC2Oq+MiZ0Fa1d\ncsSmDFk+fiOWBXDjlowFoMzkrHzxTPM9HA8K55Q0QYvpLxXuthV2usUnE4h+soJ6\nDuC5agY1quzkcM0EI3Mie9X2gp/uwD/EQBLTZ/kbc8Q+4HoPUiw=\n=B9tc\n-----END PGP SIGNATURE-----",
        "payload": "tree 7bbdb26fcd94138239d3a37004cc63316aa3cf07\nparent b9f41df1ead4b6a83a51fc41966b111c8459c313\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1614704107 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1614704107 +0200\n\nbuild, refactor: Fix indentation for if..then..fi\n\nThis makes easier to spot conditional macros.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef2099452a21335db38d66c04baec69cbc36ee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fef2099452a21335db38d66c04baec69cbc36ee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef2099452a21335db38d66c04baec69cbc36ee/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b9f41df1ead4b6a83a51fc41966b111c8459c313",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b9f41df1ead4b6a83a51fc41966b111c8459c313",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b9f41df1ead4b6a83a51fc41966b111c8459c313"
      }
    ],
    "stats": {
      "total": 100,
      "additions": 50,
      "deletions": 50
    },
    "files": [
      {
        "sha": "edbfdc0688fc178913acdbae9c795d7d9331ed33",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 50,
        "deletions": 50,
        "changes": 100,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fef2099452a21335db38d66c04baec69cbc36ee/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fef2099452a21335db38d66c04baec69cbc36ee/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=9fef2099452a21335db38d66c04baec69cbc36ee",
        "patch": "@@ -1379,52 +1379,52 @@ if test \"x$use_natpmp\" != xno; then\n fi\n \n if test x$build_bitcoin_wallet$build_bitcoin_cli$build_bitcoin_tx$build_bitcoind$bitcoin_enable_qt$use_tests$use_bench = xnonononononono; then\n-    use_boost=no\n+  use_boost=no\n else\n-    use_boost=yes\n+  use_boost=yes\n fi\n \n if test x$use_boost = xyes; then\n \n-dnl Check for Boost headers\n-AX_BOOST_BASE([1.58.0],[],[AC_MSG_ERROR([Boost is not available!])])\n-if test x$want_boost = xno; then\n+  dnl Check for Boost headers\n+  AX_BOOST_BASE([1.58.0],[],[AC_MSG_ERROR([Boost is not available!])])\n+  if test x$want_boost = xno; then\n     AC_MSG_ERROR([[only libbitcoinconsensus can be built without boost]])\n-fi\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-\n-dnl Opt-in to Boost Process if external signer support is requested\n-if test \"x$use_external_signer\" != xno; then\n-AC_MSG_CHECKING(for Boost Process)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <boost/process.hpp>]],\n- [[ boost::process::child* child = new boost::process::child; delete child; ]])],\n- [ AC_MSG_RESULT(yes)\n- AC_DEFINE([ENABLE_EXTERNAL_SIGNER],,[define if external signer support is enabled])\n- ],\n- [ AC_MSG_ERROR([Boost::Process is required for external signer support, but not available!])]\n-)\n-fi\n+  fi\n+  AX_BOOST_SYSTEM\n+  AX_BOOST_FILESYSTEM\n+\n+  dnl Opt-in to Boost Process if external signer support is requested\n+  if test \"x$use_external_signer\" != xno; then\n+    AC_MSG_CHECKING(for Boost Process)\n+    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <boost/process.hpp>]],\n+     [[ boost::process::child* child = new boost::process::child; delete child; ]])],\n+     [ AC_MSG_RESULT(yes)\n+     AC_DEFINE([ENABLE_EXTERNAL_SIGNER],,[define if external signer support is enabled])\n+     ],\n+     [ AC_MSG_ERROR([Boost::Process is required for external signer support, but not available!])]\n+    )\n+  fi\n \n-AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n+  AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n \n-if test x$suppress_external_warnings != xno; then\n+  if test x$suppress_external_warnings != xno; then\n     BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n-fi\n+  fi\n \n-dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n-dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n-m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n-BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n+  dnl Boost 1.56 through 1.62 allow using std::atomic instead of its own atomic\n+  dnl counter implementations. In 1.63 and later the std::atomic approach is default.\n+  m4_pattern_allow(DBOOST_AC_USE_STD_ATOMIC) dnl otherwise it's treated like a macro\n+  BOOST_CPPFLAGS=\"-DBOOST_SP_USE_STD_ATOMIC -DBOOST_AC_USE_STD_ATOMIC $BOOST_CPPFLAGS\"\n \n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB\"\n+  BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB\"\n fi\n \n dnl Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n-    AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[CXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"],\n-    [AC_MSG_ERROR([Cannot set hidden symbol visibility. Use --disable-reduce-exports.])],[[$CXXFLAG_WERROR]])\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]],[RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],,[[$LDFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[CXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"],\n+  [AC_MSG_ERROR([Cannot set hidden symbol visibility. Use --disable-reduce-exports.])],[[$CXXFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]],[RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],,[[$LDFLAG_WERROR]])\n fi\n \n if test x$use_tests = xyes; then\n@@ -1435,25 +1435,25 @@ if test x$use_tests = xyes; then\n \n   if test x$use_boost = xyes; then\n \n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+    AX_BOOST_UNIT_TEST_FRAMEWORK\n+\n+    dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n+    AC_MSG_CHECKING([for dynamic linked boost test])\n+    TEMP_LIBS=\"$LIBS\"\n+    LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n+    TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    AC_LINK_IFELSE([AC_LANG_SOURCE([\n+         #define BOOST_TEST_DYN_LINK\n+         #define BOOST_TEST_MAIN\n+          #include <boost/test/unit_test.hpp>\n+\n+         ])],\n+      [AC_MSG_RESULT(yes)]\n+      [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n+      [AC_MSG_RESULT(no)])\n+    LIBS=\"$TEMP_LIBS\"\n+    CPPFLAGS=\"$TEMP_CPPFLAGS\"\n \n   fi\n fi"
      }
    ]
  },
  {
    "sha": "a4128138b4837baadde75247cd4fd8ea463b7df5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDEyODEzOGI0ODM3YmFhZGRlNzUyNDdjZDRmZDhlYTQ2M2I3ZGY1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-02T16:59:05Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-03-02T17:07:31Z"
      },
      "message": "build: Make AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER]) unconditional\n\nThis change fixes an error when the value of the \"use_boost\" variable is\nequal to \"no\".",
      "tree": {
        "sha": "1a793853e6a47d7b800f11fd9de1b0061a301bf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1a793853e6a47d7b800f11fd9de1b0061a301bf8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a4128138b4837baadde75247cd4fd8ea463b7df5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmA+cNMACgkQQQEIES5+\nqB95qBAAn+XGKRZmzKEL1sfleFVBymG6EJkk+VAg4PsnaE4OjP324FnN8LJO819d\nauebVXR2gTJlev2aFVrqwDD2J6SNIXV3hqz1zwi1yS3bAhuOGKwOvt9RjsAZGMnP\n5HUvCJBPs5N8S19WiKkUNsTVJ4oV2XJEGA6kQwAroTdyET3pV1qSJUby3umsgHXe\nVIQWo1QmRXqjgOCvIVt1/LSW432RuCt9KxS7T0FPt6C4keCfg5lEzJqU7D/HYlI8\nubpWO7jvFADcimzL9GLDnWDWRucSWXcgY8BhUzTcuiG8qqLwP3O9Uwuhe+ah1xYl\nJzL6g67u9ZrVqSHS1oRZqwtMQWxMIXQvdrvJQqtIp3xZTGCO8Alj2aPc9Ybi1NpF\n2AU7YSOMQtXnHunAdAdscY4rRFxm2Qr+IqwOR2EA5VMcY10XPPnZk9ZSiPjMUPc8\n9rj7jhjKfJ1ugd/4RUaejL32bDfPOFwnbEdeDNcf7yyRCa2c08yVV2ND5Bkpqqhq\nGjbwCg3ibVIqip/nXvAEPnqh0L2fk30CZeDFK9+pnl1LVRnMAEcpq8j2TlEkegq1\nOkLGhse8roXvLmSO75gIKkzdIKQIkgIuv50QU5Tc68Sy4Uj+SoVc4CCjMyPsWpB9\nAMV3Q53tbsUSTNBesuI0ptO7ZS1do+zbyEdpopNjpdHMU4rYaaU=\n=ZlyI\n-----END PGP SIGNATURE-----",
        "payload": "tree 1a793853e6a47d7b800f11fd9de1b0061a301bf8\nparent 9fef2099452a21335db38d66c04baec69cbc36ee\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1614704345 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1614704851 +0200\n\nbuild: Make AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER]) unconditional\n\nThis change fixes an error when the value of the \"use_boost\" variable is\nequal to \"no\".\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4128138b4837baadde75247cd4fd8ea463b7df5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a4128138b4837baadde75247cd4fd8ea463b7df5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a4128138b4837baadde75247cd4fd8ea463b7df5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fef2099452a21335db38d66c04baec69cbc36ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fef2099452a21335db38d66c04baec69cbc36ee",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fef2099452a21335db38d66c04baec69cbc36ee"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c5bc7ebc7fd3d8cfd42783b68c14b8ede571709f",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a4128138b4837baadde75247cd4fd8ea463b7df5/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a4128138b4837baadde75247cd4fd8ea463b7df5/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=a4128138b4837baadde75247cd4fd8ea463b7df5",
        "patch": "@@ -1406,8 +1406,6 @@ if test x$use_boost = xyes; then\n     )\n   fi\n \n-  AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n-\n   if test x$suppress_external_warnings != xno; then\n     BOOST_CPPFLAGS=SUPPRESS_WARNINGS($BOOST_CPPFLAGS)\n   fi\n@@ -1420,6 +1418,8 @@ if test x$use_boost = xyes; then\n   BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB\"\n fi\n \n+AM_CONDITIONAL([ENABLE_EXTERNAL_SIGNER], [test \"x$use_external_signer\" = \"xyes\"])\n+\n dnl Check for reduced exports\n if test x$use_reduce_exports = xyes; then\n   AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[CXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"],"
      }
    ]
  }
]