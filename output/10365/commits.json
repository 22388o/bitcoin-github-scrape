[
  {
    "sha": "b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMGJmYTIzM2ExYmI3NGMyYjU5ZTYyN2E5YzNiNzZhYzE4ZWU2YTMx",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-09T12:54:58Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-09T12:55:13Z"
      },
      "message": "[tests] Make wait_until timeout 60 seconds by default",
      "tree": {
        "sha": "10deb8f1c937bbb1e31a9144a437bc09414a13d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/10deb8f1c937bbb1e31a9144a437bc09414a13d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6a796b2b53fe542e0f340f250f4f20d69efed8d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6a796b2b53fe542e0f340f250f4f20d69efed8d0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "fb3ed1473a941404d0e7e0dc5a4905e97177997c",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
        "patch": "@@ -1358,6 +1358,8 @@ def __repr__(self):\n \n # Helper function\n def wait_until(predicate, *, attempts=float('inf'), timeout=float('inf')):\n+    if attempts == float('inf') and timeout == float('inf'):\n+        timeout = 60\n     attempt = 0\n     elapsed = 0\n "
      }
    ]
  },
  {
    "sha": "56befa03ac559ddab95eac4c2167b586dc0d01b9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NmJlZmEwM2FjNTU5ZGRhYjk1ZWFjNGMyMTY3YjU4NmRjMGQwMWI5",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-08T21:14:07Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2017-05-09T13:06:26Z"
      },
      "message": "[tests] increase timeouts in sendheaders test",
      "tree": {
        "sha": "cb1bb645400dbdf13688f4f05c22a455a6dc8167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb1bb645400dbdf13688f4f05c22a455a6dc8167"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56befa03ac559ddab95eac4c2167b586dc0d01b9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56befa03ac559ddab95eac4c2167b586dc0d01b9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56befa03ac559ddab95eac4c2167b586dc0d01b9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56befa03ac559ddab95eac4c2167b586dc0d01b9/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0bfa233a1bb74c2b59e627a9c3b76ac18ee6a31"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "44c357c6dbd93074db60bf505be3f031c507c0ae",
        "filename": "test/functional/sendheaders.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56befa03ac559ddab95eac4c2167b586dc0d01b9/test/functional/sendheaders.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56befa03ac559ddab95eac4c2167b586dc0d01b9/test/functional/sendheaders.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/sendheaders.py?ref=56befa03ac559ddab95eac4c2167b586dc0d01b9",
        "patch": "@@ -243,7 +243,7 @@ def run_test(self):\n             if i == 0:\n                 # first request the block\n                 test_node.get_data([tip])\n-                test_node.wait_for_block(tip, timeout=5)\n+                test_node.wait_for_block(tip)\n             elif i == 1:\n                 # next try requesting header and block\n                 test_node.get_headers(locator=[old_tip], hashstop=tip)\n@@ -258,7 +258,7 @@ def run_test(self):\n                 new_block = create_block(tip, create_coinbase(height+1), block_time)\n                 new_block.solve()\n                 test_node.send_header_for_blocks([new_block])\n-                test_node.wait_for_getdata([new_block.sha256], timeout=5)\n+                test_node.wait_for_getdata([new_block.sha256])\n                 test_node.send_message(msg_block(new_block))\n                 test_node.sync_with_ping() # make sure this block is processed\n                 inv_node.clear_last_announcement()\n@@ -297,18 +297,18 @@ def run_test(self):\n                 if j == 0:\n                     # Announce via inv\n                     test_node.send_block_inv(tip)\n-                    test_node.wait_for_getheaders(timeout=5)\n+                    test_node.wait_for_getheaders()\n                     # Should have received a getheaders now\n                     test_node.send_header_for_blocks(blocks)\n                     # Test that duplicate inv's won't result in duplicate\n                     # getdata requests, or duplicate headers announcements\n                     [ inv_node.send_block_inv(x.sha256) for x in blocks ]\n-                    test_node.wait_for_getdata([x.sha256 for x in blocks], timeout=5)\n+                    test_node.wait_for_getdata([x.sha256 for x in blocks])\n                     inv_node.sync_with_ping()\n                 else:\n                     # Announce via headers\n                     test_node.send_header_for_blocks(blocks)\n-                    test_node.wait_for_getdata([x.sha256 for x in blocks], timeout=5)\n+                    test_node.wait_for_getdata([x.sha256 for x in blocks])\n                     # Test that duplicate headers won't result in duplicate\n                     # getdata requests (the check is further down)\n                     inv_node.send_header_for_blocks(blocks)\n@@ -495,7 +495,7 @@ def run_test(self):\n             with mininode_lock:\n                 test_node.last_message.pop(\"getheaders\", None)\n             test_node.send_header_for_blocks([blocks[1]])\n-            test_node.wait_for_getheaders(timeout=1)\n+            test_node.wait_for_getheaders()\n             test_node.send_header_for_blocks(blocks)\n             test_node.wait_for_getdata([x.sha256 for x in blocks])\n             [ test_node.send_message(msg_block(x)) for x in blocks ]\n@@ -518,7 +518,7 @@ def run_test(self):\n             with mininode_lock:\n                 test_node.last_message.pop(\"getheaders\", None)\n             test_node.send_header_for_blocks([blocks[i]])\n-            test_node.wait_for_getheaders(timeout=1)\n+            test_node.wait_for_getheaders()\n \n         # Next header will connect, should re-set our count:\n         test_node.send_header_for_blocks([blocks[0]])\n@@ -533,7 +533,7 @@ def run_test(self):\n             with mininode_lock:\n                 test_node.last_message.pop(\"getheaders\", None)\n             test_node.send_header_for_blocks([blocks[i%len(blocks)]])\n-            test_node.wait_for_getheaders(timeout=1)\n+            test_node.wait_for_getheaders()\n \n         # Eventually this stops working.\n         test_node.send_header_for_blocks([blocks[-1]])"
      }
    ]
  }
]