[
  {
    "sha": "5ca8ef299a08aae91d5061750533694b58d810b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Y2E4ZWYyOTlhMDhhYWU5MWQ1MDYxNzUwNTMzNjk0YjU4ZDgxMGIy",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-10-20T06:30:03Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-10-20T17:26:36Z"
      },
      "message": "libconsensus: Add input validation of flags\n\nMakes it an error to use flags that have not been defined\non the libconsensus API.\n\nThere has been some confusion as to what pass to libconsensus, and\n(combined with mention in the release notes) this should clear it up.\n\nUsing undocumented flags is a risk because their meaning,\nand what combinations are allowed, changes from release to release.\nE.g. it is no longer possible to pass (CLEANSTACK | P2SH) without\nrunning into an assertion after the segwit changes.",
      "tree": {
        "sha": "f17086d6793903e3eedcf23909191d934f59b5ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f17086d6793903e3eedcf23909191d934f59b5ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5ca8ef299a08aae91d5061750533694b58d810b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ca8ef299a08aae91d5061750533694b58d810b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5ca8ef299a08aae91d5061750533694b58d810b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5ca8ef299a08aae91d5061750533694b58d810b2/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c5875773561c249a079714f3b091a2577707eadf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c5875773561c249a079714f3b091a2577707eadf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c5875773561c249a079714f3b091a2577707eadf"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 21,
      "deletions": 5
    },
    "files": [
      {
        "sha": "1d0ca0c5acd82d25a07303c03f296447b0812b82",
        "filename": "src/script/bitcoinconsensus.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ca8ef299a08aae91d5061750533694b58d810b2/src/script/bitcoinconsensus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ca8ef299a08aae91d5061750533694b58d810b2/src/script/bitcoinconsensus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.cpp?ref=5ca8ef299a08aae91d5061750533694b58d810b2",
        "patch": "@@ -69,10 +69,19 @@ struct ECCryptoClosure\n ECCryptoClosure instance_of_eccryptoclosure;\n }\n \n+/** Check that all specified flags are part of the libconsensus interface. */\n+static bool verify_flags(unsigned int flags)\n+{\n+    return (flags & ~(bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL)) == 0;\n+}\n+\n static int verify_script(const unsigned char *scriptPubKey, unsigned int scriptPubKeyLen, CAmount amount,\n                                     const unsigned char *txTo        , unsigned int txToLen,\n                                     unsigned int nIn, unsigned int flags, bitcoinconsensus_error* err)\n {\n+    if (!verify_flags(flags)) {\n+        return bitcoinconsensus_ERR_INVALID_FLAGS;\n+    }\n     try {\n         TxInputStream stream(SER_NETWORK, PROTOCOL_VERSION, txTo, txToLen);\n         CTransaction tx;"
      },
      {
        "sha": "1bef4fe9e975f866aba5116afe26b3cacef6c28b",
        "filename": "src/script/bitcoinconsensus.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ca8ef299a08aae91d5061750533694b58d810b2/src/script/bitcoinconsensus.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ca8ef299a08aae91d5061750533694b58d810b2/src/script/bitcoinconsensus.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/bitcoinconsensus.h?ref=5ca8ef299a08aae91d5061750533694b58d810b2",
        "patch": "@@ -42,6 +42,7 @@ typedef enum bitcoinconsensus_error_t\n     bitcoinconsensus_ERR_TX_SIZE_MISMATCH,\n     bitcoinconsensus_ERR_TX_DESERIALIZE,\n     bitcoinconsensus_ERR_AMOUNT_REQUIRED,\n+    bitcoinconsensus_ERR_INVALID_FLAGS,\n } bitcoinconsensus_error;\n \n /** Script verification flags */\n@@ -54,6 +55,9 @@ enum\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY = (1U << 9), // enable CHECKLOCKTIMEVERIFY (BIP65)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY = (1U << 10), // enable CHECKSEQUENCEVERIFY (BIP112)\n     bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS             = (1U << 11), // enable WITNESS (BIP141)\n+    bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL                 = bitcoinconsensus_SCRIPT_FLAGS_VERIFY_P2SH | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_DERSIG |\n+                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_NULLDUMMY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKLOCKTIMEVERIFY |\n+                                                               bitcoinconsensus_SCRIPT_FLAGS_VERIFY_CHECKSEQUENCEVERIFY | bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS\n };\n \n /// Returns 1 if the input nIn of the serialized transaction pointed to by"
      },
      {
        "sha": "3169afb13a4191ddbcfb079b3cc958e3d8dab52a",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 5,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5ca8ef299a08aae91d5061750533694b58d810b2/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5ca8ef299a08aae91d5061750533694b58d810b2/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=5ca8ef299a08aae91d5061750533694b58d810b2",
        "patch": "@@ -173,11 +173,14 @@ void DoTest(const CScript& scriptPubKey, const CScript& scriptSig, const CScript\n #if defined(HAVE_CONSENSUS_LIB)\n     CDataStream stream(SER_NETWORK, PROTOCOL_VERSION);\n     stream << tx2;\n-    if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS) {\n-        BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(begin_ptr(scriptPubKey), scriptPubKey.size(), txCredit.vout[0].nValue, (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect, message);\n-    } else {\n-        BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(begin_ptr(scriptPubKey), scriptPubKey.size(), 0, (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect, message);\n-        BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script(begin_ptr(scriptPubKey), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, flags, NULL) == expect,message);\n+    int libconsensus_flags = flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_ALL;\n+    if (libconsensus_flags == flags) {\n+        if (flags & bitcoinconsensus_SCRIPT_FLAGS_VERIFY_WITNESS) {\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(begin_ptr(scriptPubKey), scriptPubKey.size(), txCredit.vout[0].nValue, (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, NULL) == expect, message);\n+        } else {\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script_with_amount(begin_ptr(scriptPubKey), scriptPubKey.size(), 0, (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, NULL) == expect, message);\n+            BOOST_CHECK_MESSAGE(bitcoinconsensus_verify_script(begin_ptr(scriptPubKey), scriptPubKey.size(), (const unsigned char*)&stream[0], stream.size(), 0, libconsensus_flags, NULL) == expect,message);\n+        }\n     }\n #endif\n }"
      }
    ]
  }
]