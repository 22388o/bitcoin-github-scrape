sipa,2014-09-01T23:37:36Z,"I'd rather keep mapBlockIndex in main, as it's a data structure protected by its cs_main lock. Idea ACK on moving the definitions out though.\n",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54097242,54097242,
jtimon,2014-09-02T01:03:22Z,"It needs rebase so maybe I incorporate the @gmaxwell idea of including a typedef for map<uint256, CBlockIndex*> (more flexibility if we want to change/test another structure), but yeah, I'll keep the critical sections and the couple of related functions I thought moving here (CBlockIndex \* InsertBlockIndex(uint256 hash) and bool AddToBlockIndex(CBlock& block, CValidationState& state, const CDiskB",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54100141,54100141,
jtimon,2014-09-02T10:41:56Z,Closing until corrected and rebased\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54134856,54134856,
jtimon,2014-09-03T09:06:55Z,Rebased leaving mapBlockIndex in main.\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54269926,54269926,
theuni,2014-09-04T16:39:59Z,Verified 13d6bf187b5d969a4c661733a3e0502190f1f0e4 as code-movement only.\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54506975,54506975,
jtimon,2014-09-04T20:01:25Z,"Thank you @theuni and I'm sorry but it's the second time I'm going to have to rebase after you verify the diff. Apparently last time with the script PR wasn't really necessary and it was just a little lie from github (@sipa told me it was still a clean rebase).\nBut somehow I didn't noticed locally so I did the rebase and the squash, so that was my fault.\nI'll rebase soon.\n",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54535836,54535836,
sipa,2014-09-04T22:06:14Z,"@jtimon As you had to rebase anyway, I hope #4838 doesn't make things too much harder.\n",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54552306,54552306,
theuni,2014-09-04T22:13:09Z,@jtimon Thanks for the heads up. I'll stash/pull/diff again.\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54553027,54553027,
jtimon,2014-09-04T23:08:06Z,"@theuni cool thanks, I hope this one is the last one, script doesn't have as much activity as main has. \n@sipa no problem, I'll reabase this tomorrow.\nA fast glance at #4838 reminds me @gmaxwell's suggestion of having a typedef for mapBlockIndex, I'm thinking a class with at least cs_nBlockSequenceId in it. I don't like these globals, maybe a singleton factory for mapBlockIndexClass instead with",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54558202,54558202,
gmaxwell,2014-09-04T23:14:34Z,The globals all have to go if we ever realistically want to use this code as a library... but eliminating them requires a _lot_ of plumbing.\n\n(Not that you can't have globals in a libraryâ€” but you can't both have globals in a library and show your face in public afterwards :P)\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54558690,54558690,
jtimon,2014-09-05T06:54:48Z,"I mean just make it an attribute of the class for the map, and the function\nthat uses it becomes a method. I understand that other critical sections\nare not going to be so easy to hide...\nOn Sep 5, 2014 1:15 AM, ""Gregory Maxwell"" notifications@github.com wrote:\n\n> The globals all have to go if we ever realistically want to use this code\n> as a library... but eliminating them requires a _lot_",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54591179,54591179,
laanwj,2014-09-06T02:09:55Z,">  I don't like these globals, maybe a singleton factory for mapBlockIndexClass instead with all its CCriticalSection inside\n\nMoving away from global state is a sensible goal. But I'm heavily opposed to anything involving singletons. That just moves from one way of having side effects and hiding dependencies between modules to another one. It looks 'object oriented' and allows some more flexibil",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54699556,54699556,
jtimon,2014-09-06T17:30:19Z,"Whatever, let's do what we do with the global variable that Params() returns, almost indistinguishable from a singleton factory function. Or just keep the variable name of the global as it is. The main point encapsulate the type in a class and move the functions and critical sections that make sense inside (maybe only cs_nBlockSequenceId and a couple of methods). \n",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54721624,54721624,
BitcoinPullTester,2014-09-08T20:32:56Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/p4796_e8b5f0d549b1b76611c7374bed9ceec7d09fa847/ for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-te",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-54882551,54882551,
sipa,2014-09-10T00:05:02Z,ACK. Verified move-only (e8b5f0d549b1b76611c7374bed9ceec7d09fa847).\n,https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-55054506,55054506,
laanwj,2014-09-16T08:49:25Z,"ut ACK, seems like a good unit to move out of main.\n",https://github.com/bitcoin/bitcoin/pull/4796#issuecomment-55713552,55713552,
