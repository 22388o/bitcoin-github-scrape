[
  {
    "sha": "0ddc5800d98c1ae2d8ff656925816e2321a6f682",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGRjNTgwMGQ5OGMxYWUyZDhmZjY1NjkyNTgxNmUyMzIxYTZmNjgy",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T19:10:57Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T19:10:57Z"
      },
      "message": "init gameunits changes",
      "tree": {
        "sha": "1fff275e2ec5cfb6a3bcb8effb876a352330d421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1fff275e2ec5cfb6a3bcb8effb876a352330d421"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ddc5800d98c1ae2d8ff656925816e2321a6f682",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ddc5800d98c1ae2d8ff656925816e2321a6f682",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ddc5800d98c1ae2d8ff656925816e2321a6f682",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ddc5800d98c1ae2d8ff656925816e2321a6f682/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      }
    ],
    "stats": {
      "total": 464907,
      "additions": 229988,
      "deletions": 234919
    },
    "files": [
      {
        "sha": "26d7549356a24517588e6d8e329caa49fdf8735d",
        "filename": ".gitattributes",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/.gitattributes",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/.gitattributes",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitattributes?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1 +1 @@\n-src/clientversion.cpp export-subst\n+src/version.cpp export-subst"
      },
      {
        "sha": "7d82d44f751f5fae459cc84e9eaa44ec41421a76",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 17,
        "deletions": 103,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,116 +1,30 @@\n-*.tar.gz\n-\n-*.exe\n-src/bitcoin\n-src/bitcoind\n-src/bitcoin-cli\n-src/bitcoin-tx\n-src/test/test_bitcoin\n-src/qt/test/test_bitcoin-qt\n-\n-# autoreconf\n-Makefile.in\n-aclocal.m4\n-autom4te.cache/\n-build-aux/config.guess\n-build-aux/config.sub\n-build-aux/depcomp\n-build-aux/install-sh\n-build-aux/ltmain.sh\n-build-aux/m4/libtool.m4\n-build-aux/m4/lt~obsolete.m4\n-build-aux/m4/ltoptions.m4\n-build-aux/m4/ltsugar.m4\n-build-aux/m4/ltversion.m4\n-build-aux/missing\n-build-aux/compile\n-build-aux/test-driver\n-config.log\n-config.status\n-configure\n-libtool\n-src/config/bitcoin-config.h\n-src/config/bitcoin-config.h.in\n-src/config/stamp-h1\n-share/setup.nsi\n-share/qt/Info.plist\n-\n-src/univalue/gen\n-\n-src/qt/*.moc\n-src/qt/moc_*.cpp\n-src/qt/forms/ui_*.h\n-\n-src/qt/test/moc*.cpp\n-\n-.deps\n-.dirstamp\n-.libs\n+src/*.exe\n+src/Gameunits\n+src/gameunitsd\n+src/test_gameunits\n+src/build.h\n .*.swp\n *.*~*\n *.bak\n *.rej\n *.orig\n-*.pyc\n *.o\n-*.o-*\n+*.P\n *.patch\n-.bitcoin\n-*.a\n-*.pb.cc\n-*.pb.h\n-\n-*.log\n-*.trs\n-*.dmg\n-\n-*.json.h\n-*.raw.h\n-\n-#libtool object files\n-*.lo\n-*.la\n-\n-# Compilation and Qt preprocessor part\n+*.dat\n+*.autosave\n+.gameunits\n+#compilation and Qt preprocessor part\n *.qm\n Makefile\n-bitcoin-qt\n-Bitcoin-Qt.app\n-\n-# Unit-tests\n-Makefile.test\n-bitcoin-qt_test\n-src/test/buildenv.py\n-\n-# Resources cpp\n+GAMEUNITS\n+gameunits\n+#resources cpp\n qrc_*.cpp\n-\n-# Mac specific\n+#qt creator\n+*.pro.user\n+#mac specific\n .DS_Store\n build\n \n-#lcov\n-*.gcno\n-*.gcda\n-/*.info\n-test_bitcoin.coverage/\n-total.coverage/\n-coverage_percent.txt\n-\n-#build tests\n-linux-coverage-build\n-linux-build\n-win32-build\n-qa/pull-tester/run-bitcoind-for-test.sh\n-qa/pull-tester/tests_config.py\n-qa/pull-tester/cache/*\n-qa/pull-tester/test.*/*\n-qa/tmp\n-cache/\n-share/BitcoindComparisonTool.jar\n-\n-!src/leveldb*/Makefile\n-\n-/doc/doxygen/\n-\n-libbitcoinconsensus.pc\n+!src/leveldb/Makefile"
      },
      {
        "sha": "54ae74fd3c77ac4432f5ba9c2e6d9c309bb6a1f2",
        "filename": ".travis.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,75 +0,0 @@\n-# errata:\n-# - A travis bug causes caches to trample eachother when using the same\n-#   compiler key (which we don't use anyway). This is worked around for now by\n-#   replacing the \"compilers\" with a build name prefixed by the no-op \":\"\n-#   command. See: https://github.com/travis-ci/travis-ci/issues/4393\n-\n-os: linux\n-language: cpp\n-compiler: gcc\n-env:\n-  global:\n-    - MAKEJOBS=-j3\n-    - RUN_TESTS=false\n-    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID\n-    - CCACHE_SIZE=100M\n-    - CCACHE_TEMPDIR=/tmp/.ccache-temp\n-    - CCACHE_COMPRESS=1\n-    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out\n-    - SDK_URL=https://bitcoincore.org/depends-sources/sdks\n-    - PYTHON_DEBUG=1\n-    - WINEDEBUG=fixme-all\n-cache:\n-  apt: true\n-  directories:\n-  - depends/built\n-  - depends/sdk-sources\n-  - $HOME/.ccache\n-matrix:\n-  fast_finish: true\n-  include:\n-    - compiler: \": ARM\"\n-      env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-    - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n-    - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n-    - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n-    - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n-    - compiler: \": No wallet\"\n-      env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n-    - compiler: \": Cross-Mac\"\n-      env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n-  exclude:\n-    - compiler: gcc\n-install:\n-    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n-    - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n-    - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n-before_script:\n-    - unset CC; unset CXX\n-    - mkdir -p depends/SDKs depends/sdk-sources\n-    - if [ -n \"$OSX_SDK\" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then wget $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -O depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - if [ -n \"$OSX_SDK\" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi\n-    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS\n-script:\n-    - if [ -n \"$USE_SHELL\" ]; then export CONFIG_SHELL=\"$USE_SHELL\"; fi\n-    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n-    - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n-    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n-    - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n-    - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make distdir PACKAGE=bitcoin VERSION=$HOST\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then contrib/devtools/check-doc.py; fi\n-    - cd bitcoin-$HOST\n-    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n-    - make $MAKEJOBS $GOAL || ( echo \"Build failure. Verbose build follows.\" && make $GOAL V=1 ; false )\n-    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then make check; fi\n-    - if [ \"$RUN_TESTS\" = \"true\" ]; then qa/pull-tester/rpc-tests.py --coverage; fi\n-after_script:\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then (echo \"Upload goes here. Something like: scp -r $BASE_OUTDIR server\" || echo \"upload failed\"); fi"
      },
      {
        "sha": "d6cc3aab8879ce3af16c8fa1b5ab5f5d3df5839b",
        "filename": ".tx/config",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/.tx/config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/.tx/config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.tx/config?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,7 +0,0 @@\n-[main]\n-host = https://www.transifex.com\n-\n-[bitcoin.qt-translation-012x]\n-file_filter = src/qt/locale/bitcoin_<lang>.ts\n-source_file = src/qt/locale/bitcoin_en.ts\n-source_lang = en"
      },
      {
        "sha": "53d6527d407188f13bf139dd05b8b50feeb82351",
        "filename": "CONTRIBUTING.md",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/CONTRIBUTING.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/CONTRIBUTING.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/CONTRIBUTING.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,110 +0,0 @@\n-Contributing to Bitcoin Core\n-============================\n-\n-The Bitcoin Core project operates an open contributor model where anyone is welcome to contribute towards development in the form of peer review, testing and patches. This document explains the practical process and guidelines for contributing.\n-\n-Firstly in terms of structure, there is no particular concept of \u201cCore developers\u201d in the sense of privileged people. Open source often naturally revolves around meritocracy where longer term contributors gain more trust from the developer community. However, some hierarchy is necessary for practical purposes. As such there are repository \u201cmaintainers\u201d who are responsible for merging pull requests as well as a \u201clead maintainer\u201d who is responsible for the release cycle, overall merging, moderation and appointment of maintainers.\n-\n-\n-Contributor Workflow\n---------------------\n-\n-The codebase is maintained using the \u201ccontributor workflow\u201d where everyone without exception contributes patch proposals using \u201cpull requests\u201d. This facilitates social contribution, easy testing and peer review.\n-\n-To contribute a patch, the workflow is as follows:\n-\n-  - Fork repository\n-  - Create topic branch\n-  - Commit patches\n-\n-The project coding conventions in [doc/developer-notes.md](doc/developer-notes.md) must be adhered to.\n-\n-In general [commits should be atomic](https://en.wikipedia.org/wiki/Atomic_commit#Atomic_commit_convention) and diffs should be easy to read. For this reason do not mix any formatting fixes or code moves with actual code changes.\n-\n-Commit messages should be verbose by default consisting of a short subject line (50 chars max), a blank line and detailed explanatory text as separate paragraph(s); unless the title alone is self-explanatory (like \"Corrected typo in main.cpp\") then a single title line is sufficient. Commit messages should be helpful to people reading your code in the future, so explain the reasoning for your decisions. Further explanation [here](http://chris.beams.io/posts/git-commit/).\n-\n-If a particular commit references another issue, please add the reference, for example \"refs #1234\", or \"fixes #4321\". Using \"fixes or closes\" keywords will cause the corresponding issue to be closed when the pull request is merged.\n-\n-Please refer to the [Git manual](https://git-scm.com/doc) for more information about Git.\n-\n-  - Push changes to your fork\n-  - Create pull request\n-\n-The title of the pull request should be prefixed by the component or area that the pull request affects. Examples:\n-\n-    Consensus: Add new opcode for BIP-XXXX OP_CHECKAWESOMESIG\n-    Net: Automatically create hidden service, listen on Tor\n-    Qt: Add feed bump button\n-    Trivial: fix typo\n-\n-If a pull request is specifically not to be considered for merging (yet) please prefix the title with [WIP] or use [Tasks Lists](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments) in the body of the pull request to indicate tasks are pending.\n-\n-The body of the pull request should contain enough description about what the patch does together with any justification/reasoning. You should include references to any discussions (for example other tickets or mailing list discussions).\n-\n-At this stage one should expect comments and review from other contributors. You can add more commits to your pull request by committing them locally and pushing to your fork until you have satisfied all feedback. If your pull request is accepted for merging, you may be asked by a maintainer to squash and or rebase your commits before it will be merged. The length of time required for peer review is unpredictable and will vary from patch to patch.\n-\n-\n-Pull Request Philosophy\n------------------------\n-\n-Patchsets should always be focused. For example, a pull request could add a feature, fix a bug, or refactor code; but not a mixture. Please also avoid super pull requests which attempt to do too much, are overly large, or overly complex as this makes review difficult.\n-\n-\n-###Features\n-\n-When adding a new feature, thought must be given to the long term technical debt and maintenance that feature may require after inclusion. Before proposing a new feature that will require maintenance, please consider if you are willing to maintain it (including bug fixing). If features get orphaned with no maintainer in the future, they may be removed by the Repository Maintainer.\n-\n-\n-###Refactoring\n-\n-Refactoring is a necessary part of any software project's evolution. The following guidelines cover refactoring pull requests for the project.\n-\n-There are three categories of refactoring, code only moves, code style fixes, code refactoring. In general refactoring pull requests should not mix these three kinds of activity in order to make refactoring pull requests easy to review and uncontroversial. In all cases, refactoring PRs must not change the behaviour of code within the pull request (bugs must be preserved as is).\n-\n-Project maintainers aim for a quick turnaround on refactoring pull requests, so where possible keep them short, uncomplex and easy to verify. \n-\n-\n-\"Decision Making\" Process\n--------------------------\n-\n-The following applies to code changes to the Bitcoin Core project (and related projects such as libsecp256k1), and is not to be confused with overall Bitcoin Network Protocol consensus changes.\n-\n-Whether a pull request is merged into Bitcoin Core rests with the project merge maintainers and ultimately the project lead. \n-\n-Maintainers will take into consideration if a patch is in line with the general principles of the project; meets the minimum standards for inclusion; and will judge the general consensus of contributors.\n-\n-In general, all pull requests must:\n-\n-  - have a clear use case, fix a demonstrable bug or serve the greater good of the project (for example refactoring for modularisation);\n-  - be well peer reviewed;\n-  - have unit tests and functional tests where appropriate;\n-  - follow code style guidelines;\n-  - not break the existing test suite;\n-  - where bugs are fixed, where possible, there should be unit tests demonstrating the bug and also proving the fix. This helps prevent regression.\n-\n-Patches that change Bitcoin consensus rules are considerably more involved than normal because they affect the entire ecosystem and so must be preceded by extensive mailing list discussions and have a numbered BIP. While each case will be different, one should be prepared to expend more time and effort than for other kinds of patches because of increased peer review and consensus building requirements.\n-\n-\n-###Peer Review\n-\n-Anyone may participate in peer review which is expressed by comments in the pull request. Typically reviewers will review the code for obvious errors, as well as test out the patch set and opine on the technical merits of the patch. Project maintainers take into account the peer review when determining if there is consensus to merge a pull request (remember that discussions may have been spread out over github, mailing list and IRC discussions). The following language is used within pull-request comments:\n-\n-  - ACK means \"I have tested the code and I agree it should be merged\";\n-  - NACK means \"I disagree this should be merged\", and must be accompanied by sound technical justification. NACKs without accompanying reasoning may be disregarded;\n-  - utACK means \"I have not tested the code, but I have reviewed it and it looks OK, I agree it can be merged\";\n-  - Concept ACK means \"I agree in the general principle of this pull request\";\n-  - Nit refers to trivial, often non-blocking issues.\n-\n-Reviewers should include the commit hash which they reviewed in their comments.\n-\n-Project maintainers reserve the right to weigh the opinions of peer reviewers using common sense judgement and also may weight based on meritocracy: Those that have demonstrated a deeper commitment and understanding towards the project (over time) or have clear domain expertise may naturally have more weight, as one would expect in all walks of life.\n-\n-Where a patch set affects consensus critical code, the bar will be set much higher in terms of discussion and peer review requirements, keeping in mind that mistakes could be very costly to the wider community. This includes refactoring of consensus critical code.\n-\n-Where a patch set proposes to change the Bitcoin consensus, it must have been discussed extensively on the mailing list and IRC, be accompanied by a widely discussed BIP and have a generally widely perceived technical consensus of being a worthwhile change based on the judgement of the maintainers.\n-\n-\n-Release Policy\n---------------\n-\n-The project leader is the release manager for each Bitcoin Core release."
      },
      {
        "sha": "8ddba737edc8a292f2eae5cdbae6779564a1da87",
        "filename": "COPYING",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/COPYING",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/COPYING",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/COPYING?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,6 +1,9 @@\n-The MIT License (MIT)\n-\n-Copyright (c) 2009-2016 The Bitcoin Core developers\n+Copyright (c) 2015 Gameunits Developers\n+Copyright (c) 2014-2015 ShadowCoin Developers\n+Copyright (c) 2014 BlackCoin Developers\n+Copyright (c) 2013-2014 NovaCoin Developers\n+Copyright (c) 2011-2012 PPCoin Developers\n+Copyright (c) 2009-2014 Bitcoin Developers\n \n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal"
      },
      {
        "sha": "0dd5dd170b80f322028b586873e35092e0f6007a",
        "filename": "INSTALL",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/INSTALL",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/INSTALL",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/INSTALL?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,5 +1,9 @@\n-Building Bitcoin\n+Building Gameunits\n \n-See doc/build-*.md for instructions on building bitcoind,\n+See doc/readme-qt.rst for instructions on building Gameunits QT,\n+the intended-for-end-users, nice-graphical-interface, reference\n+implementation of Gameunits.\n+\n+See doc/build-*.txt for instructions on building gameunitsd,\n the intended-for-services, no-graphical-interface, reference\n-implementation of Bitcoin.\n\\ No newline at end of file\n+implementation of Gameunits."
      },
      {
        "sha": "d6cbd7cb1221caa09ae90a4003cf16fc9ea19d4a",
        "filename": "Makefile.am",
        "status": "removed",
        "additions": 0,
        "deletions": 240,
        "changes": 240,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/Makefile.am?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,240 +0,0 @@\n-ACLOCAL_AMFLAGS = -I build-aux/m4\n-SUBDIRS = src\n-.PHONY: deploy FORCE\n-\n-GZIP_ENV=\"-9n\"\n-export PYTHONPATH\n-\n-if BUILD_BITCOIN_LIBS\n-pkgconfigdir = $(libdir)/pkgconfig\n-pkgconfig_DATA = libbitcoinconsensus.pc\n-endif\n-\n-BITCOIND_BIN=$(top_builddir)/src/bitcoind$(EXEEXT)\n-BITCOIN_QT_BIN=$(top_builddir)/src/qt/bitcoin-qt$(EXEEXT)\n-BITCOIN_CLI_BIN=$(top_builddir)/src/bitcoin-cli$(EXEEXT)\n-BITCOIN_WIN_INSTALLER=$(PACKAGE)-$(PACKAGE_VERSION)-win$(WINDOWS_BITS)-setup$(EXEEXT)\n-\n-empty :=\n-space := $(empty) $(empty)\n-\n-OSX_APP=Bitcoin-Qt.app\n-OSX_VOLNAME = $(subst $(space),-,$(PACKAGE_NAME))\n-OSX_DMG = $(OSX_VOLNAME).dmg\n-OSX_BACKGROUND_SVG=background.svg\n-OSX_BACKGROUND_IMAGE=background.tiff\n-OSX_BACKGROUND_IMAGE_DPIS=36 72\n-OSX_DSSTORE_GEN=$(top_srcdir)/contrib/macdeploy/custom_dsstore.py\n-OSX_DEPLOY_SCRIPT=$(top_srcdir)/contrib/macdeploy/macdeployqtplus\n-OSX_FANCY_PLIST=$(top_srcdir)/contrib/macdeploy/fancy.plist\n-OSX_INSTALLER_ICONS=$(top_srcdir)/src/qt/res/icons/bitcoin.icns\n-OSX_PLIST=$(top_srcdir)/share/qt/Info.plist #not installed\n-OSX_QT_TRANSLATIONS = da,de,es,hu,ru,uk,zh_CN,zh_TW\n-\n-DIST_DOCS = $(wildcard doc/*.md) $(wildcard doc/release-notes/*.md)\n-\n-BIN_CHECKS=$(top_srcdir)/contrib/devtools/symbol-check.py \\\n-           $(top_srcdir)/contrib/devtools/security-check.py\n-\n-WINDOWS_PACKAGING = $(top_srcdir)/share/pixmaps/bitcoin.ico \\\n-  $(top_srcdir)/share/pixmaps/nsis-header.bmp \\\n-  $(top_srcdir)/share/pixmaps/nsis-wizard.bmp \\\n-  $(top_srcdir)/doc/README_windows.txt\n-\n-OSX_PACKAGING = $(OSX_DEPLOY_SCRIPT) $(OSX_FANCY_PLIST) $(OSX_INSTALLER_ICONS) \\\n-  $(top_srcdir)/contrib/macdeploy/$(OSX_BACKGROUND_SVG) \\\n-  $(OSX_DSSTORE_GEN) \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-apply.sh \\\n-  $(top_srcdir)/contrib/macdeploy/detached-sig-create.sh\n-\n-COVERAGE_INFO = baseline_filtered_combined.info baseline.info block_test.info \\\n-  leveldb_baseline.info test_bitcoin_filtered.info total_coverage.info \\\n-  baseline_filtered.info block_test_filtered.info rpc_test.info rpc_test_filtered.info \\\n-  leveldb_baseline_filtered.info test_bitcoin_coverage.info test_bitcoin.info\n-\n-dist-hook:\n-\t-$(MAKE) -C $(top_distdir)/src/leveldb clean\n-\t-$(MAKE) -C $(top_distdir)/src/secp256k1 distclean\n-\t-$(GIT) archive --format=tar HEAD -- src/clientversion.cpp | $(AMTAR) -C $(top_distdir) -xf -\n-\n-distcheck-hook:\n-\t$(MKDIR_P) $(top_distdir)/_build/src/leveldb\n-\tcp -rf $(top_srcdir)/src/leveldb/* $(top_distdir)/_build/src/leveldb/\n-\t-$(MAKE) -C $(top_distdir)/_build/src/leveldb clean\n-\n-distcleancheck:\n-\t@:\n-\n-$(BITCOIN_WIN_INSTALLER): all-recursive\n-\t$(MKDIR_P) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIND_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_QT_BIN) $(top_builddir)/release\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM) $(BITCOIN_CLI_BIN) $(top_builddir)/release\n-\t@test -f $(MAKENSIS) && $(MAKENSIS) -V2 $(top_builddir)/share/setup.nsi || \\\n-\t  echo error: could not build $@\n-\t@echo built $@\n-\n-$(if $(findstring src/,$(MAKECMDGOALS)),$(MAKECMDGOALS), none): FORCE\n-\t$(MAKE) -C src $(patsubst src/%,%,$@)\n-\n-$(OSX_APP)/Contents/PkgInfo:\n-\t$(MKDIR_P) $(@D)\n-\t@echo \"APPL????\" > $@\n-\n-$(OSX_APP)/Contents/Resources/empty.lproj:\n-\t$(MKDIR_P) $(@D)\n-\t@touch $@ \n-\n-$(OSX_APP)/Contents/Info.plist: $(OSX_PLIST)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/Resources/bitcoin.icns: $(OSX_INSTALLER_ICONS)\n-\t$(MKDIR_P) $(@D)\n-\t$(INSTALL_DATA) $< $@\n-\n-$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(BITCOIN_QT_BIN)\n-\t$(MKDIR_P) $(@D)\n-\tSTRIPPROG=\"$(STRIP)\" $(INSTALL_STRIP_PROGRAM)  $< $@\n-\n-$(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings:\n-\t$(MKDIR_P) $(@D)\n-\techo '{\tCFBundleDisplayName = \"$(PACKAGE_NAME)\"; CFBundleName = \"$(PACKAGE_NAME)\"; }' > $@\n-\n-OSX_APP_BUILT=$(OSX_APP)/Contents/PkgInfo $(OSX_APP)/Contents/Resources/empty.lproj \\\n-  $(OSX_APP)/Contents/Resources/bitcoin.icns $(OSX_APP)/Contents/Info.plist \\\n-  $(OSX_APP)/Contents/MacOS/Bitcoin-Qt $(OSX_APP)/Contents/Resources/Base.lproj/InfoPlist.strings\n-\n-osx_volname:\n-\techo $(OSX_VOLNAME) >$@\n-\n-if BUILD_DARWIN\n-$(OSX_DMG): $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\t$(OSX_DEPLOY_SCRIPT) $(OSX_APP) -add-qt-tr $(OSX_QT_TRANSLATIONS) -translations-dir=$(QT_TRANSLATION_DIR) -dmg -fancy $(OSX_FANCY_PLIST) -verbose 2 -volname $(OSX_VOLNAME)\n-\n-deploydir: $(OSX_DMG)\n-else\n-APP_DIST_DIR=$(top_builddir)/dist\n-APP_DIST_EXTRAS=$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE) $(APP_DIST_DIR)/.DS_Store $(APP_DIST_DIR)/Applications\n-\n-$(APP_DIST_DIR)/Applications:\n-\t@rm -f $@\n-\t@cd $(@D); $(LN_S) /Applications $(@F)\n-\n-$(APP_DIST_EXTRAS): $(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt\n-\n-$(OSX_DMG): $(APP_DIST_EXTRAS)\n-\t$(GENISOIMAGE) -no-cache-inodes -D -l -probe -V \"$(OSX_VOLNAME)\" -no-pad -r -dir-mode 0755 -apple -o $@ dist\n-\n-dpi%.$(OSX_BACKGROUND_IMAGE): contrib/macdeploy/$(OSX_BACKGROUND_SVG)\n-\tsed 's/PACKAGE_NAME/$(PACKAGE_NAME)/' < \"$<\" | $(RSVG_CONVERT) -f png -d $* -p $* | $(IMAGEMAGICK_CONVERT) - $@\n-OSX_BACKGROUND_IMAGE_DPIFILES := $(foreach dpi,$(OSX_BACKGROUND_IMAGE_DPIS),dpi$(dpi).$(OSX_BACKGROUND_IMAGE))\n-$(APP_DIST_DIR)/.background/$(OSX_BACKGROUND_IMAGE): $(OSX_BACKGROUND_IMAGE_DPIFILES)\n-\t$(MKDIR_P) $(@D)\n-\t$(TIFFCP) -c none $(OSX_BACKGROUND_IMAGE_DPIFILES) $@\n-\n-$(APP_DIST_DIR)/.DS_Store: $(OSX_DSSTORE_GEN)\n-\t$< \"$@\" \"$(OSX_VOLNAME)\"\n-\n-$(APP_DIST_DIR)/$(OSX_APP)/Contents/MacOS/Bitcoin-Qt: $(OSX_APP_BUILT) $(OSX_PACKAGING)\n-\tINSTALLNAMETOOL=$(INSTALLNAMETOOL)  OTOOL=$(OTOOL) STRIP=$(STRIP) $(OSX_DEPLOY_SCRIPT) $(OSX_APP) -translations-dir=$(QT_TRANSLATION_DIR) -add-qt-tr $(OSX_QT_TRANSLATIONS) -verbose 2\n-\n-deploydir: $(APP_DIST_EXTRAS)\n-endif\n-\n-if TARGET_DARWIN\n-appbundle: $(OSX_APP_BUILT)\n-deploy: $(OSX_DMG)\n-endif\n-if TARGET_WINDOWS\n-deploy: $(BITCOIN_WIN_INSTALLER)\n-endif\n-\n-$(BITCOIN_QT_BIN): FORCE\n-\t$(MAKE) -C src qt/$(@F)\n-\n-$(BITCOIND_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-$(BITCOIN_CLI_BIN): FORCE\n-\t$(MAKE) -C src $(@F)\n-\n-if USE_LCOV\n-\n-baseline.info:\n-\t$(LCOV) -c -i -d $(abs_builddir)/src -o $@\n-\n-baseline_filtered.info: baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-leveldb_baseline.info: baseline_filtered.info\n-\t$(LCOV) -c -i -d $(abs_builddir)/src/leveldb -b $(abs_builddir)/src/leveldb -o $@\n-\n-leveldb_baseline_filtered.info: leveldb_baseline.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-baseline_filtered_combined.info: leveldb_baseline_filtered.info baseline_filtered.info\n-\t$(LCOV) -a leveldb_baseline_filtered.info -a baseline_filtered.info -o $@\n-\n-test_bitcoin.info: baseline_filtered_combined.info\n-\t$(MAKE) -C src/ check\n-\t$(LCOV) -c -d $(abs_builddir)/src -t test_bitcoin -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n-\n-test_bitcoin_filtered.info: test_bitcoin.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-block_test.info: test_bitcoin_filtered.info\n-\t$(MKDIR_P) qa/tmp\n-\t-@TIMEOUT=15 qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t BitcoinJBlockTest -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n-\n-block_test_filtered.info: block_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-rpc_test.info: test_bitcoin_filtered.info\n-\t-@TIMEOUT=15 python qa/pull-tester/rpc-tests.py $(EXTENDED_RPC_TESTS)\n-\t$(LCOV) -c -d $(abs_builddir)/src --t rpc-tests -o $@\n-\t$(LCOV) -z -d $(abs_builddir)/src\n-\t$(LCOV) -z -d $(abs_builddir)/src/leveldb\n-\n-rpc_test_filtered.info: rpc_test.info\n-\t$(LCOV) -r $< \"/usr/include/*\" -o $@\n-\n-test_bitcoin_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -o $@\n-\n-total_coverage.info: baseline_filtered_combined.info test_bitcoin_filtered.info block_test_filtered.info rpc_test_filtered.info\n-\t$(LCOV) -a baseline_filtered.info -a leveldb_baseline_filtered.info -a test_bitcoin_filtered.info -a block_test_filtered.info -a rpc_test_filtered.info -o $@ | $(GREP) \"\\%\" | $(AWK) '{ print substr($$3,2,50) \"/\" $$5 }' > coverage_percent.txt\n-\n-test_bitcoin.coverage/.dirstamp:  test_bitcoin_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n-\t@touch $@\n-\n-total.coverage/.dirstamp: total_coverage.info\n-\t$(GENHTML) -s $< -o $(@D)\n-\t@touch $@\n-\n-cov: test_bitcoin.coverage/.dirstamp total.coverage/.dirstamp\n-\n-endif\n-\n-if USE_COMPARISON_TOOL\n-check-local:\n-\t$(MKDIR_P) qa/tmp\n-\t@qa/pull-tester/run-bitcoind-for-test.sh $(JAVA) -jar $(JAVA_COMPARISON_TOOL) qa/tmp/compTool $(COMPARISON_TOOL_REORG_TESTS) 2>&1\n-endif\n-\n-dist_noinst_SCRIPTS = autogen.sh\n-\n-EXTRA_DIST = $(top_srcdir)/share/genbuild.sh qa/pull-tester/rpc-tests.py qa/rpc-tests $(DIST_DOCS) $(WINDOWS_PACKAGING) $(OSX_PACKAGING) $(BIN_CHECKS)\n-\n-CLEANFILES = $(OSX_DMG) $(BITCOIN_WIN_INSTALLER)\n-\n-.INTERMEDIATE: $(COVERAGE_INFO)\n-\n-clean-local:\n-\trm -rf coverage_percent.txt test_bitcoin.coverage/ total.coverage/ qa/tmp/ cache/ $(OSX_APP)"
      },
      {
        "sha": "cdeb711bd8717be772a459c3c6bd7c079c4f33ba",
        "filename": "README",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,147 @@\n+#GameUnits integration/staging tree\n+================================\n+Copyright (c) 2009-2011 Bitcoin Developers<br>\n+Copyright (c) 2011-2013 Novacoin Developers<br>\n+Copyright (c) 2016-2999 GameUnits Developers<br>\n+\n+![GameUnits](http://i.imgur.com/DknBlfE.png)\n+\n+#What is GameUnits?\n+----------------\n+[![GameUnits](http://i.imgur.com/Cokp8iC.png)](http://i.imgur.com/Cokp8iC.png)\n+\n+GameUnits is a PoS-based cryptocurrency.\n+\n+A new and exciting Open Source Gaming currency that will revolutionize in-game purchases and bring developers a monetization based on fair-play rules.\n+\n+GameUnits is a lite version of Bitcoin using scrypt as a proof-of-work algorithm with Proof of Stake.\n+\n+GameUnits Properties :\n+\n+-\n+\n+# We :heart: Pull Requests!\n+Seriously, we really do.  It doesn't matter whether you're fixing a typo or overhauling a major area of the code base.  You will be showered in :thumbsup: :thumbsup: :thumbsup:<br>\n+\n+#License\n+-------\n+![GameUnits](http://i.imgur.com/Nfb8DQx.png)\n+\n+GameUnits is released under the terms of the MIT license. See `COPYING` for more\n+information or see http://opensource.org/licenses/MIT.\n+\n+#Development process\n+-------------------\n+\n+Developers work in their own trees, then submit pull requests when they think\n+their feature or bug fix is ready.\n+\n+If it is a simple/trivial/non-controversial change, then one of the GameUnits\n+development team members simply pulls it.\n+\n+If it is a *more complicated or potentially controversial* change, then the patch\n+submitter will be asked to start a discussion (if they haven't already) on the\n+[mailing list]().\n+\n+The patch will be accepted if there is broad consensus that it is a good thing.\n+Developers should expect to rework and resubmit patches if the code doesn't\n+match the project's coding conventions (see `doc/coding.txt`) or are\n+controversial.\n+\n+#Compiling the GameUnits daemon from source on Debian\n+-----------------------------------------------------\n+The process for compiling the GameUnits daemon, gameunitsd, from the source code is pretty simple. This guide is based on the latest stable version of Debian Linux, though it should not need many modifications for any distro forked from Debian, such as Ubuntu and Xubuntu.\n+\n+###Update and install dependencies\n+\n+```\n+apt-get update && apt-get upgrade\n+apt-get install ntp git build-essential libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev autoconf automake pkg-config unzip\n+\n+wget http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz && tar -zxf download.php\\?file\\=miniupnpc-1.8.tar.gz && cd miniupnpc-1.8/\n+make && make install && cd .. && rm -rf miniupnpc-1.8 download.php\\?file\\=miniupnpc-1.8.tar.gz\n+```\n+Note: Debian testing and unstable require libboost1.54-all-dev.\n+\n+###Compile the daemon\n+```\n+git clone https://github.com/GameUnits/GameUnits\n+```\n+\n+###Compile gameunitsd\n+```\n+cd gameunits/src\n+make -f makefile.unix\n+cd src\n+strip gameunitsd\n+```\n+\n+###Compile gameunits-qt\n+```\n+-------\n+```\n+\n+###Add a user and move gameunitsd\n+```\n+adduser gameunits && usermod -g users gameunits && delgroup gameunits && chmod 0701 /home/gameunits\n+mkdir /home/gameunits/bin\n+cp ~/gameunits/src/gameunitsd /home/gameunits/bin/gameunitsd\n+chown -R gameunits:users /home/gameunits/bin\n+cd && rm -rf gameunits\n+```\n+\n+###Run the daemon\n+```\n+su gameunits\n+cd && bin/gameunitsd\n+```\n+\n+On the first run, gameunitsd will return an error and tell you to make a configuration file, named gameunits.conf, in order to add a username and password to the file.\n+```\n+nano ~/.gameunits/gameunits.conf && chmod 0600 ~/.gameunits/gameunits.conf\n+```\n+Add the following to your config file, changing the username and password to something secure: \n+```\n+daemon=1\n+rpcuser=<username>\n+rpcpassword=<secure password>\n+server=1\n+listen=1\n+txindex=1\n+#txindex will record every transaction from the blockchain to your offline db\n+#it's an optional thing. It takes a lot longerr to sync that way 0 if you don't care\n+rpcport=40001\n+port=40002\n+rpcallowip=127.0.0.1\n+addnode=51.254.127.4:1338\n+addnode=95.211.57.108:1338\n+addnode=5.196.70.166:1338\n+```\n+\n+You can just copy the username and password provided by the error message when you first ran gameunitsd.\n+\n+Run gameunitsd once more to start the daemon! \n+\n+###Optional Download gameunits bootstrap\n+```\n+cd /home/gameunits/.gameunits/\n+wget --\n+unzip bootstrap.zip\n+```\n+\n+###Using gameunitsd\n+```\n+gameunitsd help\n+```\n+\n+The above command will list all available functions of the gameunits daemon. To safely stop the daemon, execute gameunitsd stop. \n+\n+#Testing\n+-------\n+\n+Testing and code review is the bottleneck for development; we get more pull\n+requests than we can review and test. Please be patient and help out, and\n+remember this is a security-critical project where any mistake might cost people\n+lots of money.\n+\n+"
      },
      {
        "sha": "91b466b12867b004fbe28bef1075957e2582c986",
        "filename": "README.md",
        "status": "modified",
        "additions": 23,
        "deletions": 73,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,82 +1,32 @@\n-Bitcoin Core integration/staging tree\n-=====================================\n \n-[![Build Status](https://travis-ci.org/bitcoin/bitcoin.svg?branch=master)](https://travis-ci.org/bitcoin/bitcoin)\n+Gameunits development tree\n \n-https://bitcoincore.org\n+Gameunits is a PoS-based cryptocurrency.\n \n-What is Bitcoin?\n-----------------\n+Development process\n+===========================\n \n-Bitcoin is an experimental new digital currency that enables instant payments to\n-anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate\n-with no central authority: managing transactions and issuing money are carried\n-out collectively by the network. Bitcoin Core is the name of open source\n-software which enables the use of this currency.\n+Developers work in their own trees, then submit pull requests when\n+they think their feature or bug fix is ready.\n \n-For more information, as well as an immediately useable, binary version of\n-the Bitcoin Core software, see https://www.bitcoin.org/en/download, or read the\n-[original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n+The patch will be accepted if there is broad consensus that it is a\n+good thing.  Developers should expect to rework and resubmit patches\n+if they don't match the project's coding conventions (see coding.txt)\n+or are controversial.\n \n-License\n--------\n+The master branch is regularly built and tested, but is not guaranteed\n+to be completely stable. Tags are regularly created to indicate new\n+stable release versions of Gameunits.\n \n-Bitcoin Core is released under the terms of the MIT license. See [COPYING](COPYING) for more\n-information or see https://opensource.org/licenses/MIT.\n+Feature branches are created when there are major new features being\n+worked on by several people.\n \n-Development Process\n--------------------\n+From time to time a pull request will become outdated. If this occurs, and\n+the pull is no longer automatically mergeable; a comment on the pull will\n+be used to issue a warning of closure. The pull will be closed 15 days\n+after the warning if action is not taken by the author. Pull requests closed\n+in this manner will have their corresponding issue labeled 'stagnant'.\n \n-The `master` branch is regularly built and tested, but is not guaranteed to be\n-completely stable. [Tags](https://github.com/bitcoin/bitcoin/tags) are created\n-regularly to indicate new official, stable release versions of Bitcoin Core.\n-\n-The contribution workflow is described in [CONTRIBUTING.md](CONTRIBUTING.md).\n-\n-The developer [mailing list](https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev)\n-should be used to discuss complicated or controversial changes before working\n-on a patch set.\n-\n-Developer IRC can be found on Freenode at #bitcoin-core-dev.\n-\n-Testing\n--------\n-\n-Testing and code review is the bottleneck for development; we get more pull\n-requests than we can review and test on short notice. Please be patient and help out by testing\n-other people's pull requests, and remember this is a security-critical project where any mistake might cost people\n-lots of money.\n-\n-### Automated Testing\n-\n-Developers are strongly encouraged to write [unit tests](/doc/unit-tests.md) for new code, and to\n-submit new unit tests for old code. Unit tests can be compiled and run\n-(assuming they weren't disabled in configure) with: `make check`\n-\n-There are also [regression and integration tests](/qa) of the RPC interface, written\n-in Python, that are run automatically on the build server.\n-These tests can be run with: `qa/pull-tester/rpc-tests.py`\n-\n-The Travis CI system makes sure that every pull request is built for Windows\n-and Linux, OSX, and that unit and sanity tests are automatically run.\n-\n-### Manual Quality Assurance (QA) Testing\n-\n-Changes should be tested by somebody other than the developer who wrote the\n-code. This is especially important for large or high-risk changes. It is useful\n-to add a test plan to the pull request description if testing the changes is\n-not straightforward.\n-\n-Translations\n-------------\n-\n-Changes to translations as well as new translations can be submitted to\n-[Bitcoin Core's Transifex page](https://www.transifex.com/projects/p/bitcoin/).\n-\n-Translations are periodically pulled from Transifex and merged into the git repository. See the\n-[translation process](doc/translation_process.md) for details on how this works.\n-\n-**Important**: We do not accept translation changes as GitHub pull requests because the next\n-pull from Transifex would automatically overwrite them again.\n-\n-Translators should also subscribe to the [mailing list](https://groups.google.com/forum/#!forum/bitcoin-translators).\n+Issues with no commits will be given a similar warning, and closed after\n+15 days from their last activity. Issues closed in this manner will be \n+labeled 'stale'."
      },
      {
        "sha": "3e26a183059c059277632e0cca9d11c3b1836f31",
        "filename": "autogen.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/autogen.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,9 +0,0 @@\n-#!/bin/sh\n-set -e\n-srcdir=\"$(dirname $0)\"\n-cd \"$srcdir\"\n-if [ -z ${LIBTOOLIZE} ] && GLIBTOOLIZE=\"`which glibtoolize 2>/dev/null`\"; then\n-  LIBTOOLIZE=\"${GLIBTOOLIZE}\"\n-  export LIBTOOLIZE\n-fi\n-autoreconf --install --force --warnings=all"
      },
      {
        "sha": "3f24d5ddc617b769904edb52095084ad36480dd5",
        "filename": "build-aux/m4/ax_boost_base.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 281,
        "changes": 281,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_base.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,281 +0,0 @@\n-# ===========================================================================\n-#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n-#\n-# DESCRIPTION\n-#\n-#   Test for the Boost C++ libraries of a particular version (or newer)\n-#\n-#   If no path to the installed boost library is given the macro searchs\n-#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n-#   $BOOST_ROOT environment variable. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Peter Adolphs\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 23\n-\n-AC_DEFUN([AX_BOOST_BASE],\n-[\n-AC_ARG_WITH([boost],\n-  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n-    [use Boost library from a standard location (ARG=yes),\n-     from the specified location (ARG=<path>),\n-     or disable it (ARG=no)\n-     @<:@ARG=yes@:>@ ])],\n-    [\n-    if test \"$withval\" = \"no\"; then\n-        want_boost=\"no\"\n-    elif test \"$withval\" = \"yes\"; then\n-        want_boost=\"yes\"\n-        ac_boost_path=\"\"\n-    else\n-        want_boost=\"yes\"\n-        ac_boost_path=\"$withval\"\n-    fi\n-    ],\n-    [want_boost=\"yes\"])\n-\n-\n-AC_ARG_WITH([boost-libdir],\n-        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n-        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n-        [\n-        if test -d \"$withval\"\n-        then\n-                ac_boost_lib_path=\"$withval\"\n-        else\n-                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n-        fi\n-        ],\n-        [ac_boost_lib_path=\"\"]\n-)\n-\n-if test \"x$want_boost\" = \"xyes\"; then\n-    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n-    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n-    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n-    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n-        boost_lib_version_req_sub_minor=\"0\"\n-        fi\n-    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n-    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n-    succeeded=no\n-\n-    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n-    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n-    dnl this (as it rises problems for generic multi-arch support).\n-    dnl The last entry in the list is chosen by default when no libraries\n-    dnl are found, e.g. when only header-only libraries are installed!\n-    libsubdirs=\"lib\"\n-    ax_arch=`uname -m`\n-    case $ax_arch in\n-      x86_64)\n-        libsubdirs=\"lib64 libx32 lib lib64\"\n-        ;;\n-      ppc64|s390x|sparc64|aarch64)\n-        libsubdirs=\"lib64 lib lib64\"\n-        ;;\n-    esac\n-\n-    dnl allow for real multi-arch paths e.g. /usr/lib/x86_64-linux-gnu. Give\n-    dnl them priority over the other paths since, if libs are found there, they\n-    dnl are almost assuredly the ones desired.\n-    AC_REQUIRE([AC_CANONICAL_HOST])\n-    libsubdirs=\"lib/${host_cpu}-${host_os} $libsubdirs\"\n-\n-    case ${host_cpu} in\n-      i?86)\n-        libsubdirs=\"lib/i386-${host_os} $libsubdirs\"\n-        ;;\n-    esac\n-\n-    dnl some arches may advertise a cpu type that doesn't line up with their\n-    dnl prefix's cpu type. For example, uname may report armv7l while libs are\n-    dnl installed to /usr/lib/arm-linux-gnueabihf. Try getting the compiler's\n-    dnl value for an extra chance of finding the correct path.\n-    libsubdirs=\"lib/`$CXX -dumpmachine 2>/dev/null` $libsubdirs\"\n-\n-    dnl first we check the system location for boost libraries\n-    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n-    dnl or if you install boost with RPM\n-    if test \"$ac_boost_path\" != \"\"; then\n-        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n-        for ac_boost_path_tmp in $libsubdirs; do\n-                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n-                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n-                        break\n-                fi\n-        done\n-    elif test \"$cross_compiling\" != yes; then\n-        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n-            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n-                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n-                break;\n-            fi\n-        done\n-    fi\n-\n-    dnl overwrite ld flags if we have required special directory with\n-    dnl --with-boost-libdir parameter\n-    if test \"$ac_boost_lib_path\" != \"\"; then\n-       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n-    fi\n-\n-    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n-    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-    export CPPFLAGS\n-\n-    LDFLAGS_SAVED=\"$LDFLAGS\"\n-    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-    export LDFLAGS\n-\n-    AC_REQUIRE([AC_PROG_CXX])\n-    AC_LANG_PUSH(C++)\n-        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-    @%:@include <boost/version.hpp>\n-    ]], [[\n-    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-    // Everything is okay\n-    #else\n-    #  error Boost version is too old\n-    #endif\n-    ]])],[\n-        AC_MSG_RESULT(yes)\n-    succeeded=yes\n-    found_system=yes\n-        ],[:\n-        ])\n-    AC_LANG_POP([C++])\n-\n-\n-\n-    dnl if we found no boost with system layout we search for boost libraries\n-    dnl built and installed without the --layout=system option or for a staged(not installed) version\n-    if test \"x$succeeded\" != \"xyes\"; then\n-        _version=0\n-        if test \"$ac_boost_path\" != \"\"; then\n-            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                    V_CHECK=`expr $_version_tmp \\> $_version`\n-                    if test \"$V_CHECK\" = \"1\" ; then\n-                        _version=$_version_tmp\n-                    fi\n-                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n-                done\n-            fi\n-        else\n-            if test \"$cross_compiling\" != yes; then\n-                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n-                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n-                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n-                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n-                            V_CHECK=`expr $_version_tmp \\> $_version`\n-                            if test \"$V_CHECK\" = \"1\" ; then\n-                                _version=$_version_tmp\n-                                best_path=$ac_boost_path\n-                            fi\n-                        done\n-                    fi\n-                done\n-\n-                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n-                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n-                if test \"$ac_boost_lib_path\" = \"\"; then\n-                    for libsubdir in $libsubdirs ; do\n-                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                    done\n-                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n-                fi\n-            fi\n-\n-            if test \"x$BOOST_ROOT\" != \"x\"; then\n-                for libsubdir in $libsubdirs ; do\n-                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n-                done\n-                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n-                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n-                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n-                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n-                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n-                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n-                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n-                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n-                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n-                    fi\n-                fi\n-            fi\n-        fi\n-\n-        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-        export CPPFLAGS\n-        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-        export LDFLAGS\n-\n-        AC_LANG_PUSH(C++)\n-            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-        @%:@include <boost/version.hpp>\n-        ]], [[\n-        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n-        // Everything is okay\n-        #else\n-        #  error Boost version is too old\n-        #endif\n-        ]])],[\n-            AC_MSG_RESULT(yes)\n-        succeeded=yes\n-        found_system=yes\n-            ],[:\n-            ])\n-        AC_LANG_POP([C++])\n-    fi\n-\n-    if test \"$succeeded\" != \"yes\" ; then\n-        if test \"$_version\" = \"0\" ; then\n-            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n-        else\n-            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n-        fi\n-        # execute ACTION-IF-NOT-FOUND (if present):\n-        ifelse([$3], , :, [$3])\n-    else\n-        AC_SUBST(BOOST_CPPFLAGS)\n-        AC_SUBST(BOOST_LDFLAGS)\n-        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n-        # execute ACTION-IF-FOUND (if present):\n-        ifelse([$2], , :, [$2])\n-    fi\n-\n-    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n-    LDFLAGS=\"$LDFLAGS_SAVED\"\n-fi\n-\n-])"
      },
      {
        "sha": "318ecea17fab84b7bbc24ded70bcb27be749d603",
        "filename": "build-aux/m4/ax_boost_chrono.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_chrono.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_CHRONO\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_CHRONO_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_CHRONO\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 1\n-\n-AC_DEFUN([AX_BOOST_CHRONO],\n-[\n-\tAC_ARG_WITH([boost-chrono],\n-\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n-                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_chrono_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_chrono_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n-\t\t\t\t\t   ax_cv_boost_chrono,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n-                                   [[boost::chrono::system_clock::time_point time;]])],\n-                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_chrono\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                 [link_chrono=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n-                                   [link_chrono=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_chrono library!)\n-            fi\n-\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f5c9d56470bf9659b2c38c677c946d37c32be206",
        "filename": "build-aux/m4/ax_boost_filesystem.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_filesystem.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,119 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_FILESYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for Filesystem library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_FILESYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 26\n-\n-AC_DEFUN([AX_BOOST_FILESYSTEM],\n-[\n-\tAC_ARG_WITH([boost-filesystem],\n-\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n-                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_filesystem_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_filesystem_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-\t\tLIBS_SAVED=$LIBS\n-\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n-\t\texport LIBS\n-\n-        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n-\t\t\t\t\t   ax_cv_boost_filesystem,\n-        [AC_LANG_PUSH([C++])\n-         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n-                                   [[using namespace boost::filesystem;\n-                                   path my_path( \"foo/bar/data.txt\" );\n-                                   return 0;]])],\n-\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-            ax_lib=\n-            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_filesystem* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_filesystem\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_filesystem* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                 [link_filesystem=\"no\"])\n-\t\t\t\tdone\n-\t\t    fi\n-            else\n-               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n-                                   [link_filesystem=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_filesystem library!)\n-            fi\n-\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\t\tLIBS=\"$LIBS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "f591441854f59863049a28feb0b89b991ec32ef3",
        "filename": "build-aux/m4/ax_boost_program_options.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 109,
        "changes": 109,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_program_options.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,109 +0,0 @@\n-# ============================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n-# ============================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_PROGRAM_OPTIONS\n-#\n-# DESCRIPTION\n-#\n-#   Test for program options library from the Boost C++ libraries. The macro\n-#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n-#   available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_PROGRAM_OPTIONS\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 22\n-\n-AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n-[\n-\tAC_ARG_WITH([boost-program-options],\n-\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n-                       [use the program options library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_program_options_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_program_options_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t    export want_boost\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n-\t\t\t\t\t   ax_cv_boost_program_options,\n-\t\t\t\t\t   [AC_LANG_PUSH(C++)\n-\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n-                                                          ]],\n-                                  [[boost::program_options::options_description generic(\"Generic options\");\n-                                   return 0;]])],\n-                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n-\t\t\t\t\tAC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n-\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n-                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.dylib* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.dylib.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_program_options\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                 [link_program_options=\"no\"])\n-\t\t\t\tdone\n-                fi\n-                else\n-                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n-                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n-                                   [link_program_options=\"no\"])\n-                  done\n-                fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_program_options library!)\n-            fi\n-\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n-\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n-\t\t\t\tfi\n-\t\tfi\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9c78280fcae472e022bc2c45afa11ceb70167681",
        "filename": "build-aux/m4/ax_boost_system.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_system.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,121 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_SYSTEM\n-#\n-# DESCRIPTION\n-#\n-#   Test for System library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_SYSTEM_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_SYSTEM\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2008 Michael Tindal\n-#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 17\n-\n-AC_DEFUN([AX_BOOST_SYSTEM],\n-[\n-\tAC_ARG_WITH([boost-system],\n-\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n-                   [use the System library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_system_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_system_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::System library is available,\n-\t\t\t\t\t   ax_cv_boost_system,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n-                                   [[boost::system::system_category]])],\n-                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_system* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_system\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_system* 2>/dev/null | sed 's,.*/,,' | sed -e 's,\\..*,,'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                 [link_system=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n-                                   [link_system=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_system library!)\n-            fi\n-\t\t\tif test \"x$link_system\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "9f0bd0b23c9b0caba987ba96080f7696643a8d5d",
        "filename": "build-aux/m4/ax_boost_thread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 150,
        "changes": 150,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_thread.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,150 +0,0 @@\n-# ===========================================================================\n-#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_THREAD\n-#\n-# DESCRIPTION\n-#\n-#   Test for Thread library from the Boost C++ libraries. The macro requires\n-#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n-#   <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_THREAD_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_THREAD\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n-#   Copyright (c) 2009 Michael Tindal\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 27\n-\n-AC_DEFUN([AX_BOOST_THREAD],\n-[\n-\tAC_ARG_WITH([boost-thread],\n-\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n-                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_thread_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_thread_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-        AC_REQUIRE([AC_CANONICAL_BUILD])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n-\t\t\t\t\t   ax_cv_boost_thread,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n-\n-\t\t\t if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t\t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n-\t\t\t elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t\t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n-\t\t\t else\n-\t\t\t\tCXXFLAGS=\"-pthread $CXXFLAGS\"\n-\t\t\t fi\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n-                                   [[boost::thread_group thrds;\n-                                   return 0;]])],\n-                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n-\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n-             AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n-           if test \"x$host_os\" = \"xsolaris\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n-\t\t   elif test \"x$host_os\" = \"xmingw32\" ; then\n-\t\t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n-\t\t   else\n-\t\t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n-\t\t   fi\n-\n-\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n-\n-\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-\t\t\tLDFLAGS_SAVE=$LDFLAGS\n-                        case \"x$host_os\" in\n-                          *bsd* )\n-                               LDFLAGS=\"-pthread $LDFLAGS\"\n-                          break;\n-                          ;;\n-                        esac\n-            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n-                ax_lib=\n-                for libextension in `ls -r $BOOSTLIBDIR/libboost_thread* 2>/dev/null | sed 's,.*/lib,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                if test \"x$link_thread\" != \"xyes\"; then\n-                for libextension in `ls -r $BOOSTLIBDIR/boost_thread* 2>/dev/null | sed 's,.*/,,' | sed 's,\\..*,,'`; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                 [link_thread=\"no\"])\n-\t\t\t\tdone\n-                fi\n-\n-            else\n-               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n-\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n-                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n-                                   [link_thread=\"no\"])\n-                  done\n-\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_thread library!)\n-            fi\n-\t\t\tif test \"x$link_thread\" = \"xno\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-                        else\n-                           case \"x$host_os\" in\n-                              *bsd* )\n-\t\t\t\tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n-                              break;\n-                              ;;\n-                           esac\n-\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "4efd1e2f18be12e19176f772ad41f07a823a0c85",
        "filename": "build-aux/m4/ax_boost_unit_test_framework.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_boost_unit_test_framework.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,138 +0,0 @@\n-# ================================================================================\n-#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n-# ================================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# DESCRIPTION\n-#\n-#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n-#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n-#   is available at <http://randspringer.de/boost/index.html>.\n-#\n-#   This macro calls:\n-#\n-#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-#\n-#   And sets:\n-#\n-#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved. This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 19\n-\n-AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n-[\n-\tAC_ARG_WITH([boost-unit-test-framework],\n-\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n-                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n-                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n-        [\n-        if test \"$withval\" = \"no\"; then\n-\t\t\twant_boost=\"no\"\n-        elif test \"$withval\" = \"yes\"; then\n-            want_boost=\"yes\"\n-            ax_boost_user_unit_test_framework_lib=\"\"\n-        else\n-\t\t    want_boost=\"yes\"\n-\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n-\t\tfi\n-        ],\n-        [want_boost=\"yes\"]\n-\t)\n-\n-\tif test \"x$want_boost\" = \"xyes\"; then\n-        AC_REQUIRE([AC_PROG_CC])\n-\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n-\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-\t\texport CPPFLAGS\n-\n-\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n-\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n-\t\texport LDFLAGS\n-\n-        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n-\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n-        [AC_LANG_PUSH([C++])\n-\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n-                                    [[using boost::unit_test::test_suite;\n-\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n-                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n-         AC_LANG_POP([C++])\n-\t\t])\n-\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n-\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n-            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n-\n-            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                ax_lib=\n-                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n-                    if test -r $monitor_library ; then\n-                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t  break\n-\t\t\t\t    fi\n-                done\n-                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n-                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n-                     ax_lib=${libextension}\n-\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n-                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n-                                 [link_unit_test_framework=\"no\"])\n-\t\t\t\tdone\n-                fi\n-            else\n-                link_unit_test_framework=\"no\"\n-\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n-                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n-                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                      break;\n-                   fi\n-                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n-                   if test -r $unittest_library ; then\n-                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n-                       ax_lib=${libextension}\n-                       link_unit_test_framework=\"yes\"\n-                    else\n-                       link_unit_test_framework=\"no\"\n-                    fi\n-\n-\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n-                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n-                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n-\t\t\t\t\t    break\n-\t\t\t\t    fi\n-                  done\n-               done\n-            fi\n-            if test \"x$ax_lib\" = \"x\"; then\n-                AC_MSG_ERROR(Could not find a version of the boost_unit_test_framework library!)\n-            fi\n-\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n-\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n-\t\t\tfi\n-\t\tfi\n-\n-\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n-\tLDFLAGS=\"$LDFLAGS_SAVED\"\n-\tfi\n-])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "build-aux/m4/ax_check_compile_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_compile_flag.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,72 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's compiler\n-#   or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the current language's default\n-#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n-#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n-#   force the compiler to issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n-  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "build-aux/m4/ax_check_link_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 71,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_link_flag.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,71 +0,0 @@\n-# ===========================================================================\n-#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the linker or gives an error.\n-#   (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n-#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n-#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n-#   issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_LINK_FLAG],\n-[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$LDFLAGS\n-  LDFLAGS=\"$LDFLAGS $4 $1\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  LDFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "build-aux/m4/ax_check_preproc_flag.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 72,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_check_preproc_flag.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,72 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n-#\n-# DESCRIPTION\n-#\n-#   Check whether the given FLAG works with the current language's\n-#   preprocessor or gives an error.  (Warnings, however, are ignored)\n-#\n-#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n-#   success/failure.\n-#\n-#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n-#   flags when the check is done.  The check is thus made with the flags:\n-#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n-#   preprocessor to issue an error when a bad flag is given.\n-#\n-#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n-#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n-#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n-[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n-AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n-AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n-  ax_check_save_flags=$CPPFLAGS\n-  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n-    [AS_VAR_SET(CACHEVAR,[yes])],\n-    [AS_VAR_SET(CACHEVAR,[no])])\n-  CPPFLAGS=$ax_check_save_flags])\n-AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n-  [m4_default([$2], :)],\n-  [m4_default([$3], :)])\n-AS_VAR_POPDEF([CACHEVAR])dnl\n-])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "275ca63a2c217cb584e26824e45b96b3d575e2f8",
        "filename": "build-aux/m4/ax_gcc_func_attribute.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 217,
        "changes": 217,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_gcc_func_attribute.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_gcc_func_attribute.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_gcc_func_attribute.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,217 +0,0 @@\n-# ===========================================================================\n-#   http://www.gnu.org/software/autoconf-archive/ax_gcc_func_attribute.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_GCC_FUNC_ATTRIBUTE(ATTRIBUTE)\n-#\n-# DESCRIPTION\n-#\n-#   This macro checks if the compiler supports one of GCC's function\n-#   attributes; many other compilers also provide function attributes with\n-#   the same syntax. Compiler warnings are used to detect supported\n-#   attributes as unsupported ones are ignored by default so quieting\n-#   warnings when using this macro will yield false positives.\n-#\n-#   The ATTRIBUTE parameter holds the name of the attribute to be checked.\n-#\n-#   If ATTRIBUTE is supported define HAVE_FUNC_ATTRIBUTE_<ATTRIBUTE>.\n-#\n-#   The macro caches its result in the ax_cv_have_func_attribute_<attribute>\n-#   variable.\n-#\n-#   The macro currently supports the following function attributes:\n-#\n-#    alias\n-#    aligned\n-#    alloc_size\n-#    always_inline\n-#    artificial\n-#    cold\n-#    const\n-#    constructor\n-#    deprecated\n-#    destructor\n-#    dllexport\n-#    dllimport\n-#    error\n-#    externally_visible\n-#    flatten\n-#    format\n-#    format_arg\n-#    gnu_inline\n-#    hot\n-#    ifunc\n-#    leaf\n-#    malloc\n-#    noclone\n-#    noinline\n-#    nonnull\n-#    noreturn\n-#    nothrow\n-#    optimize\n-#    pure\n-#    unused\n-#    used\n-#    visibility\n-#    warning\n-#    warn_unused_result\n-#    weak\n-#    weakref\n-#\n-#   Unsuppored function attributes will be tested with a prototype returning\n-#   an int and not accepting any arguments and the result of the check might\n-#   be wrong or meaningless so use with care.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2013 Gabriele Svelto <gabriele.svelto@gmail.com>\n-#\n-#   Copying and distribution of this file, with or without modification, are\n-#   permitted in any medium without royalty provided the copyright notice\n-#   and this notice are preserved.  This file is offered as-is, without any\n-#   warranty.\n-\n-#serial 2\n-\n-AC_DEFUN([AX_GCC_FUNC_ATTRIBUTE], [\n-    AS_VAR_PUSHDEF([ac_var], [ax_cv_have_func_attribute_$1])\n-\n-    AC_CACHE_CHECK([for __attribute__(($1))], [ac_var], [\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([\n-            m4_case([$1],\n-                [alias], [\n-                    int foo( void ) { return 0; }\n-                    int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [aligned], [\n-                    int foo( void ) __attribute__(($1(32)));\n-                ],\n-                [alloc_size], [\n-                    void *foo(int a) __attribute__(($1(1)));\n-                ],\n-                [always_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [artificial], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [cold], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [const], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [constructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [deprecated], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [destructor], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [dllexport], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [dllimport], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [error], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [externally_visible], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [flatten], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [format], [\n-                    int foo(const char *p, ...) __attribute__(($1(printf, 1, 2)));\n-                ],\n-                [format_arg], [\n-                    char *foo(const char *p) __attribute__(($1(1)));\n-                ],\n-                [gnu_inline], [\n-                    inline __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [hot], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [ifunc], [\n-                    int my_foo( void ) { return 0; }\n-                    static int (*resolve_foo(void))(void) { return my_foo; }\n-                    int foo( void ) __attribute__(($1(\"resolve_foo\")));\n-                ],\n-                [leaf], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [malloc], [\n-                    void *foo( void ) __attribute__(($1));\n-                ],\n-                [noclone], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [noinline], [\n-                    __attribute__(($1)) int foo( void ) { return 0; }\n-                ],\n-                [nonnull], [\n-                    int foo(char *p) __attribute__(($1(1)));\n-                ],\n-                [noreturn], [\n-                    void foo( void ) __attribute__(($1));\n-                ],\n-                [nothrow], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [optimize], [\n-                    __attribute__(($1(3))) int foo( void ) { return 0; }\n-                ],\n-                [pure], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [unused], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [used], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [visibility], [\n-                    int foo_def( void ) __attribute__(($1(\"default\")));\n-                    int foo_hid( void ) __attribute__(($1(\"hidden\")));\n-                ],\n-                [warning], [\n-                    int foo( void ) __attribute__(($1(\"\")));\n-                ],\n-                [warn_unused_result], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weak], [\n-                    int foo( void ) __attribute__(($1));\n-                ],\n-                [weakref], [\n-                    static int foo( void ) { return 0; }\n-                    static int bar( void ) __attribute__(($1(\"foo\")));\n-                ],\n-                [\n-                 m4_warn([syntax], [Unsupported attribute $1, the test may fail])\n-                 int foo( void ) __attribute__(($1));\n-                ]\n-            )], [])\n-            ],\n-            dnl GCC doesn't exit with an error if an unknown attribute is\n-            dnl provided but only outputs a warning, so accept the attribute\n-            dnl only if no warning were issued.\n-            [AS_IF([test -s conftest.err],\n-                [AS_VAR_SET([ac_var], [no])],\n-                [AS_VAR_SET([ac_var], [yes])])],\n-            [AS_VAR_SET([ac_var], [no])])\n-    ])\n-\n-    AS_IF([test yes = AS_VAR_GET([ac_var])],\n-        [AC_DEFINE_UNQUOTED(AS_TR_CPP(HAVE_FUNC_ATTRIBUTE_$1), 1,\n-            [Define to 1 if the system has the `$1' function attribute])], [])\n-\n-    AS_VAR_POPDEF([ac_var])\n-])"
      },
      {
        "sha": "d383ad5c6d6a5061370800bb1dc89b7a334c0638",
        "filename": "build-aux/m4/ax_pthread.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 332,
        "changes": 332,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/ax_pthread.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,332 +0,0 @@\n-# ===========================================================================\n-#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n-# ===========================================================================\n-#\n-# SYNOPSIS\n-#\n-#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n-#\n-# DESCRIPTION\n-#\n-#   This macro figures out how to build C programs using POSIX threads. It\n-#   sets the PTHREAD_LIBS output variable to the threads library and linker\n-#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n-#   flags that are needed. (The user can also force certain compiler\n-#   flags/libs to be tested by setting these environment variables.)\n-#\n-#   Also sets PTHREAD_CC to any special C compiler that is needed for\n-#   multi-threaded programs (defaults to the value of CC otherwise). (This\n-#   is necessary on AIX to use the special cc_r compiler alias.)\n-#\n-#   NOTE: You are assumed to not only compile your program with these flags,\n-#   but also link it with them as well. e.g. you should link with\n-#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n-#\n-#   If you are only building threads programs, you may wish to use these\n-#   variables in your default LIBS, CFLAGS, and CC:\n-#\n-#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n-#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-#     CC=\"$PTHREAD_CC\"\n-#\n-#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n-#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n-#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n-#\n-#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n-#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n-#   PTHREAD_CFLAGS.\n-#\n-#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n-#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n-#   is not found. If ACTION-IF-FOUND is not specified, the default action\n-#   will define HAVE_PTHREAD.\n-#\n-#   Please let the authors know if this macro fails on any platform, or if\n-#   you have any other suggestions or comments. This macro was based on work\n-#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n-#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n-#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n-#   grateful for the helpful feedback of numerous users.\n-#\n-#   Updated for Autoconf 2.68 by Daniel Richard G.\n-#\n-# LICENSE\n-#\n-#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n-#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n-#\n-#   This program is free software: you can redistribute it and/or modify it\n-#   under the terms of the GNU General Public License as published by the\n-#   Free Software Foundation, either version 3 of the License, or (at your\n-#   option) any later version.\n-#\n-#   This program is distributed in the hope that it will be useful, but\n-#   WITHOUT ANY WARRANTY; without even the implied warranty of\n-#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n-#   Public License for more details.\n-#\n-#   You should have received a copy of the GNU General Public License along\n-#   with this program. If not, see <http://www.gnu.org/licenses/>.\n-#\n-#   As a special exception, the respective Autoconf Macro's copyright owner\n-#   gives unlimited permission to copy, distribute and modify the configure\n-#   scripts that are the output of Autoconf when processing the Macro. You\n-#   need not follow the terms of the GNU General Public License when using\n-#   or distributing such scripts, even though portions of the text of the\n-#   Macro appear in them. The GNU General Public License (GPL) does govern\n-#   all other use of the material that constitutes the Autoconf Macro.\n-#\n-#   This special exception to the GPL applies to versions of the Autoconf\n-#   Macro released by the Autoconf Archive. When you make and distribute a\n-#   modified version of the Autoconf Macro, you may extend this special\n-#   exception to the GPL to apply to your modified version as well.\n-\n-#serial 21\n-\n-AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n-AC_DEFUN([AX_PTHREAD], [\n-AC_REQUIRE([AC_CANONICAL_HOST])\n-AC_LANG_PUSH([C])\n-ax_pthread_ok=no\n-\n-# We used to check for pthread.h first, but this fails if pthread.h\n-# requires special compiler flags (e.g. on True64 or Sequent).\n-# It gets checked for in the link test anyway.\n-\n-# First of all, check if the user has set any of the PTHREAD_LIBS,\n-# etcetera environment variables, and if threads linking works using\n-# them:\n-if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n-        save_CFLAGS=\"$CFLAGS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n-        AC_TRY_LINK_FUNC([pthread_join], [ax_pthread_ok=yes])\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test x\"$ax_pthread_ok\" = xno; then\n-                PTHREAD_LIBS=\"\"\n-                PTHREAD_CFLAGS=\"\"\n-        fi\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-fi\n-\n-# We must check for the threads library under a number of different\n-# names; the ordering is very important because some systems\n-# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n-# libraries is broken (non-POSIX).\n-\n-# Create a list of thread flags to try.  Items starting with a \"-\" are\n-# C compiler flags, and other items are library names, except for \"none\"\n-# which indicates that we try without any flags at all, and \"pthread-config\"\n-# which is a program returning the flags for the Pth emulation library.\n-\n-ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n-\n-# The ordering *is* (sometimes) important.  Some notes on the\n-# individual items follow:\n-\n-# pthreads: AIX (must check this before -lpthread)\n-# none: in case threads are in libc; should be tried before -Kthread and\n-#       other compiler flags to prevent continual compiler warnings\n-# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n-# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n-# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n-# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n-# -pthreads: Solaris/gcc\n-# -mthreads: Mingw32/gcc, Lynx/gcc\n-# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n-#      doesn't hurt to check since this sometimes defines pthreads too;\n-#      also defines -D_REENTRANT)\n-#      ... -mt is also the pthreads flag for HP/aCC\n-# pthread: Linux, etcetera\n-# --thread-safe: KAI C++\n-# pthread-config: use pthread-config program (for GNU Pth library)\n-\n-case ${host_os} in\n-        solaris*)\n-\n-        # On Solaris (at least, for some versions), libc contains stubbed\n-        # (non-functional) versions of the pthreads routines, so link-based\n-        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n-        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n-        # a function called by this macro, so we could check for that, but\n-        # who knows whether they'll stub that too in a future libc.)  So,\n-        # we'll just look for -pthreads and -lpthread first:\n-\n-        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n-        ;;\n-\n-        darwin*)\n-        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n-        ;;\n-esac\n-\n-# Clang doesn't consider unrecognized options an error unless we specify\n-# -Werror. We throw in some extra Clang-specific options to ensure that\n-# this doesn't happen for GCC, which also accepts -Werror.\n-\n-AC_MSG_CHECKING([if compiler needs -Werror to reject unknown flags])\n-save_CFLAGS=\"$CFLAGS\"\n-ax_pthread_extra_flags=\"-Werror\"\n-CFLAGS=\"$CFLAGS $ax_pthread_extra_flags -Wunknown-warning-option -Wsizeof-array-argument\"\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([int foo(void);],[foo()])],\n-                  [AC_MSG_RESULT([yes])],\n-                  [ax_pthread_extra_flags=\n-                   AC_MSG_RESULT([no])])\n-CFLAGS=\"$save_CFLAGS\"\n-\n-if test x\"$ax_pthread_ok\" = xno; then\n-for flag in $ax_pthread_flags; do\n-\n-        case $flag in\n-                none)\n-                AC_MSG_CHECKING([whether pthreads work without any flags])\n-                ;;\n-\n-                -*)\n-                AC_MSG_CHECKING([whether pthreads work with $flag])\n-                PTHREAD_CFLAGS=\"$flag\"\n-                ;;\n-\n-                pthread-config)\n-                AC_CHECK_PROG([ax_pthread_config], [pthread-config], [yes], [no])\n-                if test x\"$ax_pthread_config\" = xno; then continue; fi\n-                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n-                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n-                ;;\n-\n-                *)\n-                AC_MSG_CHECKING([for the pthreads library -l$flag])\n-                PTHREAD_LIBS=\"-l$flag\"\n-                ;;\n-        esac\n-\n-        save_LIBS=\"$LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS $ax_pthread_extra_flags\"\n-\n-        # Check for various functions.  We must include pthread.h,\n-        # since some functions may be macros.  (On the Sequent, we\n-        # need a special flag -Kthread to make this header compile.)\n-        # We check for pthread_join because it is in -lpthread on IRIX\n-        # while pthread_create is in libc.  We check for pthread_attr_init\n-        # due to DEC craziness with -lpthreads.  We check for\n-        # pthread_cleanup_push because it is one of the few pthread\n-        # functions on Solaris that doesn't have a non-functional libc stub.\n-        # We try pthread_create on general principles.\n-        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n-                        static void routine(void *a) { a = 0; }\n-                        static void *start_routine(void *a) { return a; }],\n-                       [pthread_t th; pthread_attr_t attr;\n-                        pthread_create(&th, 0, start_routine, 0);\n-                        pthread_join(th, 0);\n-                        pthread_attr_init(&attr);\n-                        pthread_cleanup_push(routine, 0);\n-                        pthread_cleanup_pop(0) /* ; */])],\n-                [ax_pthread_ok=yes],\n-                [])\n-\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-\n-        AC_MSG_RESULT([$ax_pthread_ok])\n-        if test \"x$ax_pthread_ok\" = xyes; then\n-                break;\n-        fi\n-\n-        PTHREAD_LIBS=\"\"\n-        PTHREAD_CFLAGS=\"\"\n-done\n-fi\n-\n-# Various other checks:\n-if test \"x$ax_pthread_ok\" = xyes; then\n-        save_LIBS=\"$LIBS\"\n-        LIBS=\"$PTHREAD_LIBS $LIBS\"\n-        save_CFLAGS=\"$CFLAGS\"\n-        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n-\n-        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n-        AC_MSG_CHECKING([for joinable pthread attribute])\n-        attr_name=unknown\n-        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n-            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n-                           [int attr = $attr; return attr /* ; */])],\n-                [attr_name=$attr; break],\n-                [])\n-        done\n-        AC_MSG_RESULT([$attr_name])\n-        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n-            AC_DEFINE_UNQUOTED([PTHREAD_CREATE_JOINABLE], [$attr_name],\n-                               [Define to necessary symbol if this constant\n-                                uses a non-standard name on your system.])\n-        fi\n-\n-        AC_MSG_CHECKING([if more special flags are required for pthreads])\n-        flag=no\n-        case ${host_os} in\n-            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n-            osf* | hpux*) flag=\"-D_REENTRANT\";;\n-            solaris*)\n-            if test \"$GCC\" = \"yes\"; then\n-                flag=\"-D_REENTRANT\"\n-            else\n-                # TODO: What about Clang on Solaris?\n-                flag=\"-mt -D_REENTRANT\"\n-            fi\n-            ;;\n-        esac\n-        AC_MSG_RESULT([$flag])\n-        if test \"x$flag\" != xno; then\n-            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n-        fi\n-\n-        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n-            [ax_cv_PTHREAD_PRIO_INHERIT], [\n-                AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <pthread.h>]],\n-                                                [[int i = PTHREAD_PRIO_INHERIT;]])],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n-                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n-            ])\n-        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n-            [AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], [1], [Have PTHREAD_PRIO_INHERIT.])])\n-\n-        LIBS=\"$save_LIBS\"\n-        CFLAGS=\"$save_CFLAGS\"\n-\n-        # More AIX lossage: compile with *_r variant\n-        if test \"x$GCC\" != xyes; then\n-            case $host_os in\n-                aix*)\n-                AS_CASE([\"x/$CC\"],\n-                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n-                  [#handle absolute path differently from PATH based program lookup\n-                   AS_CASE([\"x$CC\"],\n-                     [x/*],\n-                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n-                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n-                ;;\n-            esac\n-        fi\n-fi\n-\n-test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n-\n-AC_SUBST([PTHREAD_LIBS])\n-AC_SUBST([PTHREAD_CFLAGS])\n-AC_SUBST([PTHREAD_CC])\n-\n-# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n-if test x\"$ax_pthread_ok\" = xyes; then\n-        ifelse([$1],,[AC_DEFINE([HAVE_PTHREAD],[1],[Define if you have POSIX threads libraries and header files.])],[$1])\n-        :\n-else\n-        ax_pthread_ok=no\n-        $2\n-fi\n-AC_LANG_POP\n-])dnl AX_PTHREAD"
      },
      {
        "sha": "2aa493a6af6b48537cdc2c0601a601a9c03fef1f",
        "filename": "build-aux/m4/bitcoin_find_bdb48.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_find_bdb48.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_find_bdb48.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_find_bdb48.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,66 +0,0 @@\n-AC_DEFUN([BITCOIN_FIND_BDB48],[\n-  AC_MSG_CHECKING([for Berkeley DB C++ headers])\n-  BDB_CPPFLAGS=\n-  BDB_LIBS=\n-  bdbpath=X\n-  bdb48path=X\n-  bdbdirlist=\n-  for _vn in 4.8 48 4 5 ''; do\n-    for _pfx in b lib ''; do\n-      bdbdirlist=\"$bdbdirlist ${_pfx}db${_vn}\"\n-    done\n-  done\n-  for searchpath in $bdbdirlist ''; do\n-    test -n \"${searchpath}\" && searchpath=\"${searchpath}/\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !((DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR >= 8) || DB_VERSION_MAJOR > 4)\n-        #error \"failed to find bdb 4.8+\"\n-      #endif\n-    ]])],[\n-      if test \"x$bdbpath\" = \"xX\"; then\n-        bdbpath=\"${searchpath}\"\n-      fi\n-    ],[\n-      continue\n-    ])\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n-      #include <${searchpath}db_cxx.h>\n-    ]],[[\n-      #if !(DB_VERSION_MAJOR == 4 && DB_VERSION_MINOR == 8)\n-        #error \"failed to find bdb 4.8\"\n-      #endif\n-    ]])],[\n-      bdb48path=\"${searchpath}\"\n-      break\n-    ],[])\n-  done\n-  if test \"x$bdbpath\" = \"xX\"; then\n-    AC_MSG_RESULT([no])\n-    AC_MSG_ERROR([libdb_cxx headers missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  elif test \"x$bdb48path\" = \"xX\"; then\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdbpath}],db_cxx)\n-    AC_ARG_WITH([incompatible-bdb],[AS_HELP_STRING([--with-incompatible-bdb], [allow using a bdb version other than 4.8])],[\n-      AC_MSG_WARN([Found Berkeley DB other than 4.8; wallets opened by this build will not be portable!])\n-    ],[\n-      AC_MSG_ERROR([Found Berkeley DB other than 4.8, required for portable wallets (--with-incompatible-bdb to ignore or --disable-wallet to disable wallet functionality)])\n-    ])\n-  else\n-    BITCOIN_SUBDIR_TO_INCLUDE(BDB_CPPFLAGS,[${bdb48path}],db_cxx)\n-    bdbpath=\"${bdb48path}\"\n-  fi\n-  AC_SUBST(BDB_CPPFLAGS)\n-  \n-  # TODO: Ideally this could find the library version and make sure it matches the headers being used\n-  for searchlib in db_cxx-4.8 db_cxx; do\n-    AC_CHECK_LIB([$searchlib],[main],[\n-      BDB_LIBS=\"-l${searchlib}\"\n-      break\n-    ])\n-  done\n-  if test \"x$BDB_LIBS\" = \"x\"; then\n-      AC_MSG_ERROR([libdb_cxx missing, ]AC_PACKAGE_NAME[ requires this library for wallet functionality (--disable-wallet to disable wallet functionality)])\n-  fi\n-  AC_SUBST(BDB_LIBS)\n-])"
      },
      {
        "sha": "5fe12fda9bb8e4ab5b8a3387e7a36099fe67b4db",
        "filename": "build-aux/m4/bitcoin_qt.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 491,
        "changes": 491,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_qt.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_qt.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_qt.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,491 +0,0 @@\n-dnl Helper for cases where a qt dependency is not met.\n-dnl Output: If qt version is auto, set bitcoin_enable_qt to false. Else, exit.\n-AC_DEFUN([BITCOIN_QT_FAIL],[\n-  if test \"x$bitcoin_qt_want_version\" = \"xauto\" && test x$bitcoin_qt_force != xyes; then\n-    if test x$bitcoin_enable_qt != xno; then\n-      AC_MSG_WARN([$1; bitcoin-qt frontend will not be built])\n-    fi\n-    bitcoin_enable_qt=no\n-    bitcoin_enable_qt_test=no\n-  else\n-    AC_MSG_ERROR([$1])\n-  fi\n-])\n-\n-AC_DEFUN([BITCOIN_QT_CHECK],[\n-  if test \"x$bitcoin_enable_qt\" != \"xno\" && test x$bitcoin_qt_want_version != xno; then\n-    true\n-    $1\n-  else\n-    true\n-    $2\n-  fi\n-])\n-\n-dnl BITCOIN_QT_PATH_PROGS([FOO], [foo foo2], [/path/to/search/first], [continue if missing])\n-dnl Helper for finding the path of programs needed for Qt.\n-dnl Inputs: $1: Variable to be set\n-dnl Inputs: $2: List of programs to search for\n-dnl Inputs: $3: Look for $2 here before $PATH\n-dnl Inputs: $4: If \"yes\", don't fail if $2 is not found.\n-dnl Output: $1 is set to the path of $2 if found. $2 are searched in order.\n-AC_DEFUN([BITCOIN_QT_PATH_PROGS],[\n-  BITCOIN_QT_CHECK([\n-    if test \"x$3\" != \"x\"; then\n-      AC_PATH_PROGS($1,$2,,$3)\n-    else\n-      AC_PATH_PROGS($1,$2)\n-    fi\n-    if test \"x$$1\" = \"x\" && test \"x$4\" != \"xyes\"; then\n-      BITCOIN_QT_FAIL([$1 not found])\n-    fi\n-  ])\n-])\n-\n-dnl Initialize qt input.\n-dnl This must be called before any other BITCOIN_QT* macros to ensure that\n-dnl input variables are set correctly.\n-dnl CAUTION: Do not use this inside of a conditional.\n-AC_DEFUN([BITCOIN_QT_INIT],[\n-  dnl enable qt support\n-  AC_ARG_WITH([gui],\n-    [AS_HELP_STRING([--with-gui@<:@=no|qt4|qt5|auto@:>@],\n-    [build bitcoin-qt GUI (default=auto, qt5 tried first)])],\n-    [\n-     bitcoin_qt_want_version=$withval\n-     if test x$bitcoin_qt_want_version = xyes; then\n-       bitcoin_qt_force=yes\n-       bitcoin_qt_want_version=auto\n-     fi\n-    ],\n-    [bitcoin_qt_want_version=auto])\n-\n-  AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [])\n-  AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [])\n-  AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [])\n-  AC_ARG_WITH([qt-translationdir],[AS_HELP_STRING([--with-qt-translationdir=PLUGIN_DIR],[specify qt translation path (overridden by pkgconfig)])], [qt_translation_path=$withval], [])\n-  AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path])], [qt_bin_path=$withval], [])\n-\n-  AC_ARG_WITH([qtdbus],\n-    [AS_HELP_STRING([--with-qtdbus],\n-    [enable DBus support (default is yes if qt is enabled and QtDBus is found)])],\n-    [use_dbus=$withval],\n-    [use_dbus=auto])\n-\n-  AC_SUBST(QT_TRANSLATION_DIR,$qt_translation_path)\n-])\n-\n-dnl Find the appropriate version of Qt libraries and includes.\n-dnl Inputs: $1: Whether or not pkg-config should be used. yes|no. Default: yes.\n-dnl Inputs: $2: If $1 is \"yes\" and --with-gui=auto, which qt version should be\n-dnl         tried first.\n-dnl Outputs: See _BITCOIN_QT_FIND_LIBS_*\n-dnl Outputs: Sets variables for all qt-related tools.\n-dnl Outputs: bitcoin_enable_qt, bitcoin_enable_qt_dbus, bitcoin_enable_qt_test\n-AC_DEFUN([BITCOIN_QT_CONFIGURE],[\n-  use_pkgconfig=$1\n-\n-  if test x$use_pkgconfig = x; then\n-    use_pkgconfig=yes\n-  fi\n-\n-  if test x$use_pkgconfig = xyes; then\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG([$2])])\n-  else\n-    BITCOIN_QT_CHECK([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG])\n-  fi\n-\n-  dnl This is ugly and complicated. Yuck. Works as follows:\n-  dnl We can't discern whether Qt4 builds are static or not. For Qt5, we can\n-  dnl check a header to find out. When Qt is built statically, some plugins must\n-  dnl be linked into the final binary as well. These plugins have changed between\n-  dnl Qt4 and Qt5. With Qt5, languages moved into core and the WindowsIntegration\n-  dnl plugin was added. Since we can't tell if Qt4 is static or not, it is\n-  dnl assumed for windows builds.\n-  dnl _BITCOIN_QT_CHECK_STATIC_PLUGINS does a quick link-check and appends the\n-  dnl results to QT_LIBS.\n-  BITCOIN_QT_CHECK([\n-  TEMP_CPPFLAGS=$CPPFLAGS\n-  TEMP_CXXFLAGS=$CXXFLAGS\n-  CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    _BITCOIN_QT_IS_STATIC\n-    if test x$bitcoin_cv_static_qt = xyes; then\n-      _BITCOIN_QT_FIND_STATIC_PLUGINS\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      AC_CACHE_CHECK(for Qt < 5.4, bitcoin_cv_need_acc_widget,[AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-          [[#include <QtCore>]],[[\n-          #if QT_VERSION >= 0x050400\n-          choke;\n-          #endif\n-          ]])],\n-        [bitcoin_cv_need_acc_widget=yes],\n-        [bitcoin_cv_need_acc_widget=no])\n-      ])\n-      if test \"x$bitcoin_cv_need_acc_widget\" = \"xyes\"; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(AccessibleFactory)], [-lqtaccessiblewidgets])\n-      fi\n-      if test x$TARGET_OS = xwindows; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QWindowsIntegrationPlugin)],[-lqwindows])\n-        AC_DEFINE(QT_QPA_PLATFORM_WINDOWS, 1, [Define this symbol if the qt platform is windows])\n-      elif test x$TARGET_OS = xlinux; then\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QXcbIntegrationPlugin)],[-lqxcb -lxcb-static])\n-        AC_DEFINE(QT_QPA_PLATFORM_XCB, 1, [Define this symbol if the qt platform is xcb])\n-      elif test x$TARGET_OS = xdarwin; then\n-        AX_CHECK_LINK_FLAG([[-framework IOKit]],[QT_LIBS=\"$QT_LIBS -framework IOKit\"],[AC_MSG_ERROR(could not iokit framework)])\n-        _BITCOIN_QT_CHECK_STATIC_PLUGINS([Q_IMPORT_PLUGIN(QCocoaIntegrationPlugin)],[-lqcocoa])\n-        AC_DEFINE(QT_QPA_PLATFORM_COCOA, 1, [Define this symbol if the qt platform is cocoa])\n-      fi\n-    fi\n-  else\n-    if test x$TARGET_OS = xwindows; then\n-      AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol if qt plugins are static])\n-      _BITCOIN_QT_CHECK_STATIC_PLUGINS([\n-         Q_IMPORT_PLUGIN(qcncodecs)\n-         Q_IMPORT_PLUGIN(qjpcodecs)\n-         Q_IMPORT_PLUGIN(qtwcodecs)\n-         Q_IMPORT_PLUGIN(qkrcodecs)\n-         Q_IMPORT_PLUGIN(AccessibleFactory)],\n-         [-lqcncodecs -lqjpcodecs -lqtwcodecs -lqkrcodecs -lqtaccessiblewidgets])\n-    fi\n-  fi\n-  CPPFLAGS=$TEMP_CPPFLAGS\n-  CXXFLAGS=$TEMP_CXXFLAGS\n-  ])\n-\n-  if test x$use_pkgconfig$qt_bin_path = xyes; then\n-    if test x$bitcoin_qt_got_major_vers = x5; then\n-      qt_bin_path=\"`$PKG_CONFIG --variable=host_bins Qt5Core 2>/dev/null`\"\n-    fi\n-  fi\n-\n-  if test x$use_hardening != xno; then\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIE can be used with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    TEMP_CXXFLAGS=$CXXFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    CXXFLAGS=\"$PIE_FLAGS $CXXFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIE_FLAGS ],\n-      [ AC_MSG_RESULT(no); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    CXXFLAGS=$TEMP_CXXFLAGS\n-    ])\n-  else\n-    BITCOIN_QT_CHECK([\n-    AC_MSG_CHECKING(whether -fPIC is needed with this Qt config)\n-    TEMP_CPPFLAGS=$CPPFLAGS\n-    CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <QtCore/qconfig.h>]],\n-      [[\n-          #if defined(QT_REDUCE_RELOCATIONS)\n-              choke;\n-          #endif\n-      ]])],\n-      [ AC_MSG_RESULT(no)],\n-      [ AC_MSG_RESULT(yes); QT_PIE_FLAGS=$PIC_FLAGS]\n-    )\n-    CPPFLAGS=$TEMP_CPPFLAGS\n-    ])\n-  fi\n-\n-  BITCOIN_QT_PATH_PROGS([MOC], [moc-qt${bitcoin_qt_got_major_vers} moc${bitcoin_qt_got_major_vers} moc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([UIC], [uic-qt${bitcoin_qt_got_major_vers} uic${bitcoin_qt_got_major_vers} uic], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([RCC], [rcc-qt${bitcoin_qt_got_major_vers} rcc${bitcoin_qt_got_major_vers} rcc], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LRELEASE], [lrelease-qt${bitcoin_qt_got_major_vers} lrelease${bitcoin_qt_got_major_vers} lrelease], $qt_bin_path)\n-  BITCOIN_QT_PATH_PROGS([LUPDATE], [lupdate-qt${bitcoin_qt_got_major_vers} lupdate${bitcoin_qt_got_major_vers} lupdate],$qt_bin_path, yes)\n-\n-  MOC_DEFS='-DHAVE_CONFIG_H -I$(srcdir)'\n-  case $host in\n-    *darwin*)\n-     BITCOIN_QT_CHECK([\n-       MOC_DEFS=\"${MOC_DEFS} -DQ_OS_MAC\"\n-       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n-       AX_CHECK_LINK_FLAG([[$base_frameworks]],[QT_LIBS=\"$QT_LIBS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n-     ])\n-    ;;\n-    *mingw*)\n-       BITCOIN_QT_CHECK([\n-         AX_CHECK_LINK_FLAG([[-mwindows]],[QT_LDFLAGS=\"$QT_LDFLAGS -mwindows\"],[AC_MSG_WARN(-mwindows linker support not detected)])\n-       ])\n-  esac\n-\n-\n-  dnl enable qt support\n-  AC_MSG_CHECKING(whether to build ]AC_PACKAGE_NAME[ GUI)\n-  BITCOIN_QT_CHECK([\n-    bitcoin_enable_qt=yes\n-    bitcoin_enable_qt_test=yes\n-    if test x$have_qt_test = xno; then\n-      bitcoin_enable_qt_test=no\n-    fi\n-    bitcoin_enable_qt_dbus=no\n-    if test x$use_dbus != xno && test x$have_qt_dbus = xyes; then\n-      bitcoin_enable_qt_dbus=yes\n-    fi\n-    if test x$use_dbus = xyes && test x$have_qt_dbus = xno; then\n-      AC_MSG_ERROR(\"libQtDBus not found. Install libQtDBus or remove --with-qtdbus.\")\n-    fi\n-    if test x$LUPDATE = x; then\n-      AC_MSG_WARN(\"lupdate is required to update qt translations\")\n-    fi\n-  ],[\n-    bitcoin_enable_qt=no\n-  ])\n-  AC_MSG_RESULT([$bitcoin_enable_qt (Qt${bitcoin_qt_got_major_vers})])\n-\n-  AC_SUBST(QT_PIE_FLAGS)\n-  AC_SUBST(QT_INCLUDES)\n-  AC_SUBST(QT_LIBS)\n-  AC_SUBST(QT_LDFLAGS)\n-  AC_SUBST(QT_DBUS_INCLUDES)\n-  AC_SUBST(QT_DBUS_LIBS)\n-  AC_SUBST(QT_TEST_INCLUDES)\n-  AC_SUBST(QT_TEST_LIBS)\n-  AC_SUBST(QT_SELECT, qt${bitcoin_qt_got_major_vers})\n-  AC_SUBST(MOC_DEFS)\n-])\n-\n-dnl All macros below are internal and should _not_ be used from the main\n-dnl configure.ac.\n-dnl ----\n-\n-dnl Internal. Check if the included version of Qt is Qt5.\n-dnl Requires: INCLUDES must be populated as necessary.\n-dnl Output: bitcoin_cv_qt5=yes|no\n-AC_DEFUN([_BITCOIN_QT_CHECK_QT5],[\n-  AC_CACHE_CHECK(for Qt 5, bitcoin_cv_qt5,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if QT_VERSION < 0x050000\n-      choke me\n-      #else\n-      return 0;\n-      #endif\n-    ]])],\n-    [bitcoin_cv_qt5=yes],\n-    [bitcoin_cv_qt5=no])\n-])])\n-\n-dnl Internal. Check if the linked version of Qt was built as static libs.\n-dnl Requires: Qt5. This check cannot determine if Qt4 is static.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Output: bitcoin_cv_static_qt=yes|no\n-dnl Output: Defines QT_STATICPLUGIN if plugins are static.\n-AC_DEFUN([_BITCOIN_QT_IS_STATIC],[\n-  AC_CACHE_CHECK(for static Qt, bitcoin_cv_static_qt,[\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n-    [[#include <QtCore>]],\n-    [[\n-      #if defined(QT_STATIC)\n-      return 0;\n-      #else\n-      choke me\n-      #endif\n-    ]])],\n-    [bitcoin_cv_static_qt=yes],\n-    [bitcoin_cv_static_qt=no])\n-  ])\n-  if test xbitcoin_cv_static_qt = xyes; then\n-    AC_DEFINE(QT_STATICPLUGIN, 1, [Define this symbol for static Qt plugins])\n-  fi\n-])\n-\n-dnl Internal. Check if the link-requirements for static plugins are met.\n-dnl Requires: INCLUDES and LIBS must be populated as necessary.\n-dnl Inputs: $1: A series of Q_IMPORT_PLUGIN().\n-dnl Inputs: $2: The libraries that resolve $1.\n-dnl Output: QT_LIBS is prepended or configure exits.\n-AC_DEFUN([_BITCOIN_QT_CHECK_STATIC_PLUGINS],[\n-  AC_MSG_CHECKING(for static Qt plugins: $2)\n-  CHECK_STATIC_PLUGINS_TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$2 $QT_LIBS $LIBS\"\n-  AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-    #define QT_STATICPLUGIN\n-    #include <QtPlugin>\n-    $1]],\n-    [[return 0;]])],\n-    [AC_MSG_RESULT(yes); QT_LIBS=\"$2 $QT_LIBS\"],\n-    [AC_MSG_RESULT(no); BITCOIN_QT_FAIL(Could not resolve: $2)])\n-  LIBS=\"$CHECK_STATIC_PLUGINS_TEMP_LIBS\"\n-])\n-\n-dnl Internal. Find paths necessary for linking qt static plugins\n-dnl Inputs: bitcoin_qt_got_major_vers. 4 or 5.\n-dnl Inputs: qt_plugin_path. optional.\n-dnl Outputs: QT_LIBS is appended\n-AC_DEFUN([_BITCOIN_QT_FIND_STATIC_PLUGINS],[\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-      if test x$qt_plugin_path != x; then\n-        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/platforms\"\n-        if test -d \"$qt_plugin_path/accessible\"; then\n-          QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-        fi\n-      fi\n-     m4_ifdef([PKG_CHECK_MODULES],[\n-     if test x$use_pkgconfig = xyes; then\n-       PKG_CHECK_MODULES([QTPLATFORM], [Qt5PlatformSupport], [QT_LIBS=\"$QTPLATFORM_LIBS $QT_LIBS\"])\n-       if test x$TARGET_OS = xlinux; then\n-         PKG_CHECK_MODULES([X11XCB], [x11-xcb], [QT_LIBS=\"$X11XCB_LIBS $QT_LIBS\"])\n-         if ${PKG_CONFIG} --exists \"Qt5Core >= 5.5\" 2>/dev/null; then\n-           PKG_CHECK_MODULES([QTXCBQPA], [Qt5XcbQpa], [QT_LIBS=\"$QTXCBQPA_LIBS $QT_LIBS\"])\n-         fi\n-       elif test x$TARGET_OS = xdarwin; then\n-         PKG_CHECK_MODULES([QTPRINT], [Qt5PrintSupport], [QT_LIBS=\"$QTPRINT_LIBS $QT_LIBS\"])\n-       fi\n-     fi\n-     ])\n-  else\n-    if test x$qt_plugin_path != x; then\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/accessible\"\n-      QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n-    fi\n-  fi\n-])\n-\n-dnl Internal. Find Qt libraries using pkg-config.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to check\n-dnl         first.\n-dnl Inputs: $1: If bitcoin_qt_want_version is \"auto\", check for this version\n-dnl         first.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITH_PKGCONFIG],[\n-  m4_ifdef([PKG_CHECK_MODULES],[\n-  auto_priority_version=$1\n-  if test x$auto_priority_version = x; then\n-    auto_priority_version=qt5\n-  fi\n-    if test x$bitcoin_qt_want_version = xqt5 ||  ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-    qt5_modules=\"Qt5Core Qt5Gui Qt5Network Qt5Widgets\"\n-    qt4_modules=\"QtCore QtGui QtNetwork\"\n-    BITCOIN_QT_CHECK([\n-      if test x$bitcoin_qt_want_version = xqt5 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt5 ); then\n-        PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes],[have_qt=no])\n-      elif test x$bitcoin_qt_want_version = xqt4 || ( test x$bitcoin_qt_want_version = xauto && test x$auto_priority_version = xqt4 ); then\n-        PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n-      fi\n-\n-      dnl qt version is set to 'auto' and the preferred version wasn't found. Now try the other.\n-      if test x$have_qt = xno && test x$bitcoin_qt_want_version = xauto; then\n-        if test x$auto_priority_version = x$qt5; then\n-          PKG_CHECK_MODULES([QT], [$qt4_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt; bitcoin_qt_got_major_vers=4], [have_qt=no])\n-        else\n-          PKG_CHECK_MODULES([QT], [$qt5_modules], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes; QT_LIB_PREFIX=Qt5; bitcoin_qt_got_major_vers=5], [have_qt=no])\n-        fi\n-      fi\n-      if test x$have_qt != xyes; then\n-        have_qt=no\n-        BITCOIN_QT_FAIL([Qt dependencies not found])\n-      fi\n-    ])\n-    BITCOIN_QT_CHECK([\n-      PKG_CHECK_MODULES([QT_TEST], [${QT_LIB_PREFIX}Test], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n-      if test x$use_dbus != xno; then\n-        PKG_CHECK_MODULES([QT_DBUS], [${QT_LIB_PREFIX}DBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n-      fi\n-    ])\n-  ])\n-  true; dnl\n-])\n-\n-dnl Internal. Find Qt libraries without using pkg-config. Version is deduced\n-dnl from the discovered headers.\n-dnl Inputs: bitcoin_qt_want_version (from --with-gui=). The version to use.\n-dnl         If \"auto\", the version will be discovered by _BITCOIN_QT_CHECK_QT5.\n-dnl Outputs: All necessary QT_* variables are set.\n-dnl Outputs: bitcoin_qt_got_major_vers is set to \"4\" or \"5\".\n-dnl Outputs: have_qt_test and have_qt_dbus are set (if applicable) to yes|no.\n-AC_DEFUN([_BITCOIN_QT_FIND_LIBS_WITHOUT_PKGCONFIG],[\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  TEMP_CXXFLAGS=\"$CXXFLAGS\"\n-  CXXFLAGS=\"$PIC_FLAGS $CXXFLAGS\"\n-  TEMP_LIBS=\"$LIBS\"\n-  BITCOIN_QT_CHECK([\n-    if test x$qt_include_path != x; then\n-      QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtWidgets -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n-      CPPFLAGS=\"$QT_INCLUDES $CPPFLAGS\"\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QtPlugin],,BITCOIN_QT_FAIL(QtCore headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QApplication],, BITCOIN_QT_FAIL(QtGui headers missing))])\n-  BITCOIN_QT_CHECK([AC_CHECK_HEADER([QLocalSocket],, BITCOIN_QT_FAIL(QtNetwork headers missing))])\n-\n-  BITCOIN_QT_CHECK([\n-    if test x$bitcoin_qt_want_version = xauto; then\n-      _BITCOIN_QT_CHECK_QT5\n-    fi\n-    if test x$bitcoin_cv_qt5 = xyes || test x$bitcoin_qt_want_version = xqt5; then\n-      QT_LIB_PREFIX=Qt5\n-      bitcoin_qt_got_major_vers=5\n-    else\n-      QT_LIB_PREFIX=Qt\n-      bitcoin_qt_got_major_vers=4\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"$LIBS -L$qt_lib_path\"\n-    fi\n-\n-    if test x$TARGET_OS = xwindows; then\n-      AC_CHECK_LIB([imm32],      [main],, BITCOIN_QT_FAIL(libimm32 not found))\n-    fi\n-  ])\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([z] ,[main],,AC_MSG_WARN([zlib not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([png] ,[main],,AC_MSG_WARN([libpng not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([jpeg] ,[main],,AC_MSG_WARN([libjpeg not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([pcre16_exec], [qtpcre pcre16],,AC_MSG_WARN([libpcre16 not found. Assuming qt has it built-in])))\n-  BITCOIN_QT_CHECK(AC_SEARCH_LIBS([hb_ot_tags_from_script] ,[qtharfbuzzng harfbuzz],,AC_MSG_WARN([libharfbuzz not found. Assuming qt has it built-in or support is disabled])))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Core]   ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXCore not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Gui]    ,[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXGui not found)))\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Network],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXNetwork not found)))\n-  if test x$bitcoin_qt_got_major_vers = x5; then\n-    BITCOIN_QT_CHECK(AC_CHECK_LIB([${QT_LIB_PREFIX}Widgets],[main],,BITCOIN_QT_FAIL(lib$QT_LIB_PREFIXWidgets not found)))\n-  fi\n-  QT_LIBS=\"$LIBS\"\n-  LIBS=\"$TEMP_LIBS\"\n-\n-  BITCOIN_QT_CHECK([\n-    LIBS=\n-    if test x$qt_lib_path != x; then\n-      LIBS=\"-L$qt_lib_path\"\n-    fi\n-    AC_CHECK_LIB([${QT_LIB_PREFIX}Test],      [main],, have_qt_test=no)\n-    AC_CHECK_HEADER([QTest],, have_qt_test=no)\n-    QT_TEST_LIBS=\"$LIBS\"\n-    if test x$use_dbus != xno; then\n-      LIBS=\n-      if test x$qt_lib_path != x; then\n-        LIBS=\"-L$qt_lib_path\"\n-      fi\n-      AC_CHECK_LIB([${QT_LIB_PREFIX}DBus],      [main],, have_qt_dbus=no)\n-      AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n-      QT_DBUS_LIBS=\"$LIBS\"\n-    fi\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-  CXXFLAGS=\"$TEMP_CXXFLAGS\"\n-  LIBS=\"$TEMP_LIBS\"\n-])\n-"
      },
      {
        "sha": "66f106c7d47b9121576197c56f6a330e3972d188",
        "filename": "build-aux/m4/bitcoin_subdir_to_include.m4",
        "status": "removed",
        "additions": 0,
        "deletions": 14,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_subdir_to_include.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/build-aux/m4/bitcoin_subdir_to_include.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/build-aux/m4/bitcoin_subdir_to_include.m4?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,14 +0,0 @@\n-dnl BITCOIN_SUBDIR_TO_INCLUDE([CPPFLAGS-VARIABLE-NAME],[SUBDIRECTORY-NAME],[HEADER-FILE])\n-dnl SUBDIRECTORY-NAME must end with a path separator\n-AC_DEFUN([BITCOIN_SUBDIR_TO_INCLUDE],[\n-  if test \"x$2\" = \"x\"; then\n-    AC_MSG_RESULT([default])\n-  else\n-    echo \"#include <$2$3.h>\" >conftest.cpp\n-    newinclpath=`${CXXCPP} ${CPPFLAGS} -M conftest.cpp 2>/dev/null | [ tr -d '\\\\n\\\\r\\\\\\\\' | sed -e 's/^.*[[:space:]:]\\(\\/[^[:space:]]*\\)]$3[\\.h[[:space:]].*$/\\1/' -e t -e d`]\n-    AC_MSG_RESULT([${newinclpath}])\n-    if test \"x${newinclpath}\" != \"x\"; then\n-      eval \"$1=\\\"\\$$1\\\"' -I${newinclpath}'\"\n-    fi\n-  fi\n-])"
      },
      {
        "sha": "939dfeaabfce9390f3bdebeaa3f3b5d2ea40e5e3",
        "filename": "configure.ac",
        "status": "removed",
        "additions": 0,
        "deletions": 1087,
        "changes": 1087,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,1087 +0,0 @@\n-dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n-AC_PREREQ([2.60])\n-define(_CLIENT_VERSION_MAJOR, 0)\n-define(_CLIENT_VERSION_MINOR, 12)\n-define(_CLIENT_VERSION_REVISION, 99)\n-define(_CLIENT_VERSION_BUILD, 0)\n-define(_CLIENT_VERSION_IS_RELEASE, false)\n-define(_COPYRIGHT_YEAR, 2016)\n-define(_COPYRIGHT_HOLDERS,[The %s developers])\n-define(_COPYRIGHT_HOLDERS_SUBSTITUTION,[Bitcoin Core])\n-AC_INIT([Bitcoin Core],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[https://github.com/bitcoin/bitcoin/issues],[bitcoin],[https://bitcoincore.org/])\n-AC_CONFIG_SRCDIR([src/main.cpp])\n-AC_CONFIG_HEADERS([src/config/bitcoin-config.h])\n-AC_CONFIG_AUX_DIR([build-aux])\n-AC_CONFIG_MACRO_DIR([build-aux/m4])\n-\n-AC_CANONICAL_HOST\n-\n-AH_TOP([#ifndef BITCOIN_CONFIG_H])\n-AH_TOP([#define BITCOIN_CONFIG_H])\n-AH_BOTTOM([#endif //BITCOIN_CONFIG_H])\n-\n-dnl faketime breaks configure and is only needed for make. Disable it here.\n-unset FAKETIME\n-\n-dnl Automake init set-up and checks\n-AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n-\n-dnl faketime messes with timestamps and causes configure to be re-run.\n-dnl --disable-maintainer-mode can be used to bypass this.\n-AM_MAINTAINER_MODE([enable])\n-\n-dnl make the compilation flags quiet unless V=1 is used\n-m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n-\n-dnl Compiler checks (here before libtool).\n-if test \"x${CXXFLAGS+set}\" = \"xset\"; then\n-  CXXFLAGS_overridden=yes\n-else\n-  CXXFLAGS_overridden=no\n-fi\n-AC_PROG_CXX\n-m4_ifdef([AC_PROG_OBJCXX],[AC_PROG_OBJCXX])\n-\n-dnl By default, libtool for mingw refuses to link static libs into a dll for\n-dnl fear of mixing pic/non-pic objects, and import/export complications. Since\n-dnl we have those under control, re-enable that functionality.\n-case $host in\n-  *mingw*)\n-     lt_cv_deplibs_check_method=\"pass_all\"\n-  ;;\n-esac\n-dnl Libtool init checks.\n-LT_INIT([pic-only])\n-\n-dnl Check/return PATH for base programs.\n-AC_PATH_TOOL(AR, ar)\n-AC_PATH_TOOL(RANLIB, ranlib)\n-AC_PATH_TOOL(STRIP, strip)\n-AC_PATH_TOOL(GCOV, gcov)\n-AC_PATH_PROG(LCOV, lcov)\n-AC_PATH_PROG(JAVA, java)\n-AC_PATH_PROG(PYTHON, python)\n-AC_PATH_PROG(GENHTML, genhtml)\n-AC_PATH_PROG([GIT], [git])\n-AC_PATH_PROG(CCACHE,ccache)\n-AC_PATH_PROG(XGETTEXT,xgettext)\n-AC_PATH_PROG(HEXDUMP,hexdump)\n-AC_PATH_TOOL(READELF, readelf)\n-AC_PATH_TOOL(CPPFILT, c++filt)\n-\n-AC_ARG_VAR(PYTHONPATH, Augments the default search path for python module files)\n-\n-dnl pkg-config check.\n-PKG_PROG_PKG_CONFIG\n-\n-# Enable wallet\n-AC_ARG_ENABLE([wallet],\n-  [AS_HELP_STRING([--disable-wallet],\n-  [disable wallet (enabled by default)])],\n-  [enable_wallet=$enableval],\n-  [enable_wallet=yes])\n-\n-AC_ARG_WITH([miniupnpc],\n-  [AS_HELP_STRING([--with-miniupnpc],\n-  [enable UPNP (default is yes if libminiupnpc is found)])],\n-  [use_upnp=$withval],\n-  [use_upnp=auto])\n-\n-AC_ARG_ENABLE([upnp-default],\n-  [AS_HELP_STRING([--enable-upnp-default],\n-  [if UPNP is enabled, turn it on at startup (default is no)])],\n-  [use_upnp_default=$enableval],\n-  [use_upnp_default=no])\n-\n-AC_ARG_ENABLE(tests,\n-    AS_HELP_STRING([--disable-tests],[do not compile tests (default is to compile)]),\n-    [use_tests=$enableval],\n-    [use_tests=yes])\n-\n-AC_ARG_ENABLE(bench,\n-    AS_HELP_STRING([--disable-bench],[do not compile benchmarks (default is to compile)]),\n-    [use_bench=$enableval],\n-    [use_bench=yes])\n-\n-AC_ARG_WITH([comparison-tool],\n-    AS_HELP_STRING([--with-comparison-tool],[path to java comparison tool (requires --enable-tests)]),\n-    [use_comparison_tool=$withval],\n-    [use_comparison_tool=no])\n-\n-AC_ARG_ENABLE([comparison-tool-reorg-tests],\n-    AS_HELP_STRING([--enable-comparison-tool-reorg-tests],[enable expensive reorg tests in the comparison tool (default no)]),\n-    [use_comparison_tool_reorg_tests=$enableval],\n-    [use_comparison_tool_reorg_tests=no])\n-\n-AC_ARG_ENABLE([extended-rpc-tests],\n-    AS_HELP_STRING([--enable-extended-rpc-tests],[enable expensive RPC tests when using lcov (default no)]),\n-    [use_extended_rpc_tests=$enableval],\n-    [use_extended_rpc_tests=no])\n-\n-AC_ARG_WITH([qrencode],\n-  [AS_HELP_STRING([--with-qrencode],\n-  [enable QR code support (default is yes if qt is enabled and libqrencode is found)])],\n-  [use_qr=$withval],\n-  [use_qr=auto])\n-\n-AC_ARG_ENABLE([hardening],\n-  [AS_HELP_STRING([--disable-hardening],\n-  [do not attempt to harden the resulting executables (default is to harden)])],\n-  [use_hardening=$enableval],\n-  [use_hardening=yes])\n-\n-AC_ARG_ENABLE([reduce-exports],\n-  [AS_HELP_STRING([--enable-reduce-exports],\n-  [attempt to reduce exported symbols in the resulting executables (default is no)])],\n-  [use_reduce_exports=$enableval],\n-  [use_reduce_exports=no])\n-\n-AC_ARG_ENABLE([ccache],\n-  [AS_HELP_STRING([--disable-ccache],\n-  [do not use ccache for building (default is to use if found)])],\n-  [use_ccache=$enableval],\n-  [use_ccache=auto])\n-\n-AC_ARG_ENABLE([lcov],\n-  [AS_HELP_STRING([--enable-lcov],\n-  [enable lcov testing (default is no)])],\n-  [use_lcov=yes],\n-  [use_lcov=no])\n-\n-AC_ARG_ENABLE([glibc-back-compat],\n-  [AS_HELP_STRING([--enable-glibc-back-compat],\n-  [enable backwards compatibility with glibc])],\n-  [use_glibc_compat=$enableval],\n-  [use_glibc_compat=no])\n-\n-AC_ARG_WITH([system-univalue],\n-  [AS_HELP_STRING([--with-system-univalue],\n-  [Build with system UniValue (default is no)])],\n-  [system_univalue=$withval],\n-  [system_univalue=no]\n-)\n-AC_ARG_ENABLE([zmq],\n-  [AS_HELP_STRING([--disable-zmq],\n-  [disable ZMQ notifications])],\n-  [use_zmq=$enableval],\n-  [use_zmq=yes])\n-\n-AC_ARG_WITH([protoc-bindir],[AS_HELP_STRING([--with-protoc-bindir=BIN_DIR],[specify protoc bin path])], [protoc_bin_path=$withval], [])\n-\n-# Enable debug\n-AC_ARG_ENABLE([debug],\n-    [AS_HELP_STRING([--enable-debug],\n-                    [use debug compiler flags and macros (default is no)])],\n-    [enable_debug=$enableval],\n-    [enable_debug=no])\n-\n-if test \"x$enable_debug\" = xyes; then\n-    CPPFLAGS=\"$CPPFLAGS -DDEBUG -DDEBUG_LOCKORDER\"\n-    if test \"x$GCC\" = xyes; then\n-        CFLAGS=\"$CFLAGS -g3 -O0\"\n-    fi\n-\n-    if test \"x$GXX\" = xyes; then\n-        CXXFLAGS=\"$CXXFLAGS -g3 -O0\"\n-    fi\n-fi\n-\n-## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n-##       compatibility with the legacy buildsystem.\n-##\n-if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-  CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -Wno-self-assign\"\n-fi\n-CPPFLAGS=\"$CPPFLAGS -DHAVE_BUILD_INFO -D__STDC_FORMAT_MACROS\"\n-\n-AC_ARG_WITH([utils],\n-  [AS_HELP_STRING([--with-utils],\n-  [build bitcoin-cli bitcoin-tx (default=yes)])],\n-  [build_bitcoin_utils=$withval],\n-  [build_bitcoin_utils=yes])\n-\n-AC_ARG_WITH([libs],\n-  [AS_HELP_STRING([--with-libs],\n-  [build libraries (default=yes)])],\n-  [build_bitcoin_libs=$withval],\n-  [build_bitcoin_libs=yes])\n-\n-AC_ARG_WITH([daemon],\n-  [AS_HELP_STRING([--with-daemon],\n-  [build bitcoind daemon (default=yes)])],\n-  [build_bitcoind=$withval],\n-  [build_bitcoind=yes])\n-\n-AC_LANG_PUSH([C++])\n-\n-use_pkgconfig=yes\n-case $host in\n-  *mingw*)\n-\n-     #pkgconfig does more harm than good with MinGW\n-     use_pkgconfig=no\n-\n-     TARGET_OS=windows\n-     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n-     AC_CHECK_LIB([crypt32],      [main],, AC_MSG_ERROR(lib missing))\n-\n-     # -static is interpreted by libtool, where it has a different meaning.\n-     # In libtool-speak, it's -all-static.\n-     AX_CHECK_LINK_FLAG([[-static]],[LIBTOOL_APP_LDFLAGS=\"$LIBTOOL_APP_LDFLAGS -all-static\"])\n-\n-     AC_PATH_PROG([MAKENSIS], [makensis], none)\n-     if test x$MAKENSIS = xnone; then\n-       AC_MSG_WARN(\"makensis not found. Cannot create installer.\")\n-     fi\n-\n-     AC_PATH_TOOL(WINDRES, windres, none)\n-     if test x$WINDRES = xnone; then\n-       AC_MSG_ERROR(\"windres not found\")\n-     fi\n-\n-     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n-     if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n-       CXXFLAGS=\"$CXXFLAGS -w\"\n-     fi\n-     case $host in\n-       i?86-*) WINDOWS_BITS=32 ;;\n-       x86_64-*) WINDOWS_BITS=64 ;;\n-       *) AC_MSG_ERROR(\"Could not determine win32/win64 for installer\") ;;\n-     esac\n-     AC_SUBST(WINDOWS_BITS)\n-\n-     dnl libtool insists upon adding -nostdlib and a list of objects/libs to link against.\n-     dnl That breaks our ability to build dll's with static libgcc/libstdc++/libssp. Override\n-     dnl its command here, with the predeps/postdeps removed, and -static inserted. Postdeps are\n-     dnl also overridden to prevent their insertion later.\n-     dnl This should only affect dll's.\n-     archive_cmds_CXX=\"\\$CC -shared \\$libobjs \\$deplibs \\$compiler_flags -static -o \\$output_objdir/\\$soname \\${wl}--enable-auto-image-base -Xlinker --out-implib -Xlinker \\$lib\"\n-     postdeps_CXX=\n-\n-     ;;\n-  *darwin*)\n-     TARGET_OS=darwin\n-     LEVELDB_TARGET_FLAGS=\"TARGET_OS=Darwin\"\n-     if  test x$cross_compiling != xyes; then\n-       BUILD_OS=darwin\n-       AC_CHECK_PROG([PORT],port, port)\n-       if test x$PORT = xport; then\n-         dnl add default macports paths\n-         CPPFLAGS=\"$CPPFLAGS -isystem /opt/local/include\"\n-         LIBS=\"$LIBS -L/opt/local/lib\"\n-         if test -d /opt/local/include/db48; then\n-           CPPFLAGS=\"$CPPFLAGS -I/opt/local/include/db48\"\n-           LIBS=\"$LIBS -L/opt/local/lib/db48\"\n-         fi\n-       fi\n-\n-       AC_CHECK_PROG([BREW],brew, brew)\n-       if test x$BREW = xbrew; then\n-         dnl These Homebrew packages may be keg-only, meaning that they won't be found\n-         dnl in expected paths because they may conflict with system files. Ask\n-         dnl Homebrew where each one is located, then adjust paths accordingly.\n-         dnl It's safe to add these paths even if the functionality is disabled by\n-         dnl the user (--without-wallet or --without-gui for example).\n-\n-         openssl_prefix=`$BREW --prefix openssl 2>/dev/null`\n-         bdb_prefix=`$BREW --prefix berkeley-db4 2>/dev/null`\n-         qt5_prefix=`$BREW --prefix qt5 2>/dev/null`\n-         if test x$openssl_prefix != x; then\n-           PKG_CONFIG_PATH=\"$openssl_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-         if test x$bdb_prefix != x; then\n-           CPPFLAGS=\"$CPPFLAGS -I$bdb_prefix/include\"\n-           LIBS=\"$LIBS -L$bdb_prefix/lib\"\n-         fi\n-         if test x$qt5_prefix != x; then\n-           PKG_CONFIG_PATH=\"$qt5_prefix/lib/pkgconfig:$PKG_CONFIG_PATH\"\n-           export PKG_CONFIG_PATH\n-         fi\n-       fi\n-     else\n-       case $build_os in\n-         *darwin*)\n-           BUILD_OS=darwin\n-           ;;\n-         *)\n-           AC_PATH_TOOL([INSTALLNAMETOOL], [install_name_tool], install_name_tool)\n-           AC_PATH_TOOL([OTOOL], [otool], otool)\n-           AC_PATH_PROGS([GENISOIMAGE], [genisoimage mkisofs],genisoimage)\n-           AC_PATH_PROGS([RSVG_CONVERT], [rsvg-convert rsvg],rsvg-convert)\n-           AC_PATH_PROGS([IMAGEMAGICK_CONVERT], [convert],convert)\n-           AC_PATH_PROGS([TIFFCP], [tiffcp],tiffcp)\n-\n-           dnl libtool will try to strip the static lib, which is a problem for\n-           dnl cross-builds because strip attempts to call a hard-coded ld,\n-           dnl which may not exist in the path. Stripping the .a is not\n-           dnl necessary, so just disable it.\n-           old_striplib=\n-           ;;\n-       esac\n-     fi\n-\n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n-     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n-     OBJCXXFLAGS=\"$CXXFLAGS\"\n-     ;;\n-   *linux*)\n-     TARGET_OS=linux\n-     ;;\n-   *)\n-     ;;\n-esac\n-\n-if test x$use_comparison_tool != xno; then\n-  AC_SUBST(JAVA_COMPARISON_TOOL, $use_comparison_tool)\n-fi\n-\n-if test x$use_comparison_tool_reorg_tests != xno; then\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"comparison tool reorg tests but comparison tool was not specified\")\n-  fi\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 1)\n-else\n-  AC_SUBST(COMPARISON_TOOL_REORG_TESTS, 0)\n-fi\n-\n-if test x$use_extended_rpc_tests != xno; then\n-  AC_SUBST(EXTENDED_RPC_TESTS, -extended)\n-fi\n-\n-if test x$use_lcov = xyes; then\n-  if test x$LCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but lcov not found\")\n-  fi\n-  if test x$GCOV = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but gcov not found\")\n-  fi\n-  if test x$JAVA = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but java not found\")\n-  fi\n-  if test x$PYTHON = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but python not found\")\n-  fi\n-  if test x$GENHTML = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but genhtml not found\")\n-  fi\n-  if test x$use_comparison_tool = x; then\n-    AC_MSG_ERROR(\"lcov testing requested but comparison tool was not specified\")\n-  fi\n-  LCOV=\"$LCOV --gcov-tool=$GCOV\"\n-  AX_CHECK_COMPILE_FLAG([--coverage],[CXXFLAGS=\"$CXXFLAGS --coverage\"],\n-    [AC_MSG_ERROR(\"lcov testing requested but --coverage flag does not work\")])\n-fi\n-\n-dnl Check for endianness\n-AC_C_BIGENDIAN\n-\n-dnl Check for pthread compile/link requirements\n-AX_PTHREAD\n-\n-# The following macro will add the necessary defines to bitcoin-config.h, but\n-# they also need to be passed down to any subprojects. Pull the results out of\n-# the cache and add them to CPPFLAGS.\n-AC_SYS_LARGEFILE\n-# detect POSIX or GNU variant of strerror_r\n-AC_FUNC_STRERROR_R\n-\n-if test x$ac_cv_sys_file_offset_bits != x &&\n-   test x$ac_cv_sys_file_offset_bits != xno &&\n-   test x$ac_cv_sys_file_offset_bits != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_FILE_OFFSET_BITS=$ac_cv_sys_file_offset_bits\"\n-fi\n-\n-if test x$ac_cv_sys_large_files != x &&\n-   test x$ac_cv_sys_large_files != xno &&\n-   test x$ac_cv_sys_large_files != xunknown; then\n-  CPPFLAGS=\"$CPPFLAGS -D_LARGE_FILES=$ac_cv_sys_large_files\"\n-fi\n-\n-AX_CHECK_LINK_FLAG([[-Wl,--large-address-aware]], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n-\n-AX_GCC_FUNC_ATTRIBUTE([visibility])\n-AX_GCC_FUNC_ATTRIBUTE([dllexport])\n-AX_GCC_FUNC_ATTRIBUTE([dllimport])\n-\n-if test x$use_glibc_compat != xno; then\n-\n-  #glibc absorbed clock_gettime in 2.17. librt (its previous location) is safe to link\n-  #in anyway for back-compat.\n-  AC_CHECK_LIB([rt],[clock_gettime],, AC_MSG_ERROR(lib missing))\n-\n-  #__fdelt_chk's params and return type have changed from long unsigned int to long int.\n-  # See which one is present here.\n-  AC_MSG_CHECKING(__fdelt_chk type)\n-  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#ifdef _FORTIFY_SOURCE\n-                    #undef _FORTIFY_SOURCE\n-                  #endif\n-                  #define _FORTIFY_SOURCE 2\n-                  #include <sys/select.h>\n-     extern \"C\" long unsigned int __fdelt_warn(long unsigned int);]],[[]])],\n-    [ fdelt_type=\"long unsigned int\"],\n-    [ fdelt_type=\"long int\"])\n-  AC_MSG_RESULT($fdelt_type)\n-  AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-else\n-  AC_SEARCH_LIBS([clock_gettime],[rt])\n-fi\n-\n-if test x$TARGET_OS != xwindows; then\n-  # All windows code is PIC, forcing it on just adds useless compile warnings\n-  AX_CHECK_COMPILE_FLAG([-fPIC],[PIC_FLAGS=\"-fPIC\"])\n-fi\n-\n-if test x$use_hardening != xno; then\n-  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n-  AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n-\n-  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[\n-    AX_CHECK_PREPROC_FLAG([-U_FORTIFY_SOURCE],[\n-      HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -U_FORTIFY_SOURCE\"\n-    ])\n-    HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"\n-  ])\n-\n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n-\n-  if test x$TARGET_OS != xwindows; then\n-    AX_CHECK_COMPILE_FLAG([-fPIE],[PIE_FLAGS=\"-fPIE\"])\n-    AX_CHECK_LINK_FLAG([[-pie]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n-  fi\n-\n-  case $host in\n-    *mingw*)\n-       AC_CHECK_LIB([ssp],      [main],, AC_MSG_ERROR(lib missing))\n-    ;;\n-  esac\n-fi\n-\n-dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n-if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n-fi\n-\n-AC_CHECK_HEADERS([endian.h sys/endian.h byteswap.h stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h sys/select.h sys/prctl.h])\n-AC_SEARCH_LIBS([getaddrinfo_a], [anl], [AC_DEFINE(HAVE_GETADDRINFO_A, 1, [Define this symbol if you have getaddrinfo_a])])\n-AC_SEARCH_LIBS([inet_pton], [nsl resolv], [AC_DEFINE(HAVE_INET_PTON, 1, [Define this symbol if you have inet_pton])])\n-\n-AC_CHECK_DECLS([strnlen])\n-\n-AC_CHECK_DECLS([le16toh, le32toh, le64toh, htole16, htole32, htole64, be16toh, be32toh, be64toh, htobe16, htobe32, htobe64],,,\n-\t\t[#if HAVE_ENDIAN_H\n-                 #include <endian.h>\n-                 #elif HAVE_SYS_ENDIAN_H\n-                 #include <sys/endian.h>\n-                 #endif])\n-\n-AC_CHECK_DECLS([bswap_16, bswap_32, bswap_64],,,\n-\t\t[#if HAVE_BYTESWAP_H\n-                 #include <byteswap.h>\n-                 #endif])\n-\n-dnl Check for MSG_NOSIGNAL\n-AC_MSG_CHECKING(for MSG_NOSIGNAL)\n-AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/socket.h>]],\n- [[ int f = MSG_NOSIGNAL; ]])],\n- [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n- [ AC_MSG_RESULT(no)]\n-)\n-\n-AC_MSG_CHECKING([for visibility attribute])\n-AC_LINK_IFELSE([AC_LANG_SOURCE([\n-  int foo_def( void ) __attribute__((visibility(\"default\")));\n-  int main(){}\n-  ])],\n-  [\n-    AC_DEFINE(HAVE_VISIBILITY_ATTRIBUTE,1,[Define if the visibility attribute is supported.])\n-    AC_MSG_RESULT(yes)\n-  ],\n-  [\n-    AC_MSG_RESULT(no)\n-    if test x$use_reduce_exports = xyes; then\n-      AC_MSG_ERROR([Cannot find a working visibility attribute. Use --disable-reduce-exports.])\n-    fi\n-  ]\n-)\n-\n-if test x$use_reduce_exports = xyes; then\n-  AX_CHECK_COMPILE_FLAG([-fvisibility=hidden],[RE_CXXFLAGS=\"-fvisibility=hidden\"],\n-  [AC_MSG_ERROR([Cannot set default symbol visibility. Use --disable-reduce-exports.])])\n-fi\n-\n-LEVELDB_CPPFLAGS=\n-LIBLEVELDB=\n-LIBMEMENV=\n-AM_CONDITIONAL([EMBEDDED_LEVELDB],[true])\n-AC_SUBST(LEVELDB_CPPFLAGS)\n-AC_SUBST(LIBLEVELDB)\n-AC_SUBST(LIBMEMENV)\n-\n-if test x$enable_wallet != xno; then\n-    dnl Check for libdb_cxx only if wallet enabled\n-    BITCOIN_FIND_BDB48\n-fi\n-\n-dnl Check for libminiupnpc (optional)\n-if test x$use_upnp != xno; then\n-  AC_CHECK_HEADERS(\n-    [miniupnpc/miniwget.h miniupnpc/miniupnpc.h miniupnpc/upnpcommands.h miniupnpc/upnperrors.h],\n-    [AC_CHECK_LIB([miniupnpc], [main],[MINIUPNPC_LIBS=-lminiupnpc], [have_miniupnpc=no])],\n-    [have_miniupnpc=no]\n-  )\n-fi\n-\n-BITCOIN_QT_INIT\n-\n-dnl sets $bitcoin_enable_qt, $bitcoin_enable_qt_test, $bitcoin_enable_qt_dbus\n-BITCOIN_QT_CONFIGURE([$use_pkgconfig], [qt5])\n-\n-if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests = xnononono; then\n-    use_boost=no\n-else\n-    use_boost=yes\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-dnl Check for boost libs\n-AX_BOOST_BASE\n-AX_BOOST_SYSTEM\n-AX_BOOST_FILESYSTEM\n-AX_BOOST_PROGRAM_OPTIONS\n-AX_BOOST_THREAD\n-AX_BOOST_CHRONO\n-\n-\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_CHECKING([for working boost reduced exports])\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$BOOST_CPPFLAGS $CPPFLAGS\"\n-  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n-      @%:@include <boost/version.hpp>\n-    ]], [[\n-      #if BOOST_VERSION >= 104900\n-      // Everything is okay\n-      #else\n-      #  error Boost version is too old\n-      #endif\n-    ]])],[\n-      AC_MSG_RESULT(yes)\n-    ],[\n-    AC_MSG_ERROR([boost versions < 1.49 are known to be broken with reduced exports. Use --disable-reduce-exports.])\n-  ])\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-fi\n-\n-if test x$use_reduce_exports = xyes; then\n-    CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n-fi\n-\n-if test x$use_tests = xyes; then\n-\n-  if test x$HEXDUMP = x; then\n-    AC_MSG_ERROR(hexdump is required for tests)\n-  fi\n-\n-\n-  if test x$use_boost = xyes; then\n-\n-  AX_BOOST_UNIT_TEST_FRAMEWORK\n-\n-  dnl Determine if -DBOOST_TEST_DYN_LINK is needed\n-  AC_MSG_CHECKING([for dynamic linked boost test])\n-  TEMP_LIBS=\"$LIBS\"\n-  LIBS=\"$LIBS $BOOST_LDFLAGS $BOOST_UNIT_TEST_FRAMEWORK_LIB\"\n-  TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-  CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-  AC_LINK_IFELSE([AC_LANG_SOURCE([\n-       #define BOOST_TEST_DYN_LINK\n-       #define BOOST_TEST_MAIN\n-        #include <boost/test/unit_test.hpp>\n-\n-       ])],\n-    [AC_MSG_RESULT(yes)]\n-    [TESTDEFS=\"$TESTDEFS -DBOOST_TEST_DYN_LINK\"],\n-    [AC_MSG_RESULT(no)])\n-  LIBS=\"$TEMP_LIBS\"\n-  CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-  fi\n-fi\n-\n-if test x$use_boost = xyes; then\n-\n-BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB $BOOST_CHRONO_LIB\"\n-\n-\n-dnl If boost (prior to 1.57) was built without c++11, it emulated scoped enums\n-dnl using c++98 constructs. Unfortunately, this implementation detail leaked into\n-dnl the abi. This was fixed in 1.57.\n-\n-dnl When building against that installed version using c++11, the headers pick up\n-dnl on the native c++11 scoped enum support and enable it, however it will fail to\n-dnl link. This can be worked around by disabling c++11 scoped enums if linking will\n-dnl fail.\n-dnl BOOST_NO_SCOPED_ENUMS was changed to BOOST_NO_CXX11_SCOPED_ENUMS in 1.51.\n-\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_MSG_CHECKING([for mismatched boost c++11 scoped enums])\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include \"boost/config.hpp\"\n-  #include \"boost/version.hpp\"\n-  #if !defined(BOOST_NO_SCOPED_ENUMS) && !defined(BOOST_NO_CXX11_SCOPED_ENUMS) && BOOST_VERSION < 105700\n-  #define BOOST_NO_SCOPED_ENUMS\n-  #define BOOST_NO_CXX11_SCOPED_ENUMS\n-  #define CHECK\n-  #endif\n-  #include \"boost/filesystem.hpp\"\n-  ]],[[\n-  #if defined(CHECK)\n-    boost::filesystem::copy_file(\"foo\", \"bar\");\n-  #else\n-    choke;\n-  #endif\n-  ]])],\n-  [AC_MSG_RESULT(mismatched); BOOST_CPPFLAGS=\"$BOOST_CPPFLAGS -DBOOST_NO_SCOPED_ENUMS -DBOOST_NO_CXX11_SCOPED_ENUMS\"], [AC_MSG_RESULT(ok)])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-dnl Boost >= 1.50 uses sleep_for rather than the now-deprecated sleep, however\n-dnl it was broken from 1.50 to 1.52 when backed by nanosleep. Use sleep_for if\n-dnl a working version is available, else fall back to sleep. sleep was removed\n-dnl after 1.56.\n-dnl If neither is available, abort.\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/thread/thread.hpp>\n-  #include <boost/version.hpp>\n-  ]],[[\n-  #if BOOST_VERSION >= 105000 && (!defined(BOOST_HAS_NANOSLEEP) || BOOST_VERSION >= 105200)\n-      boost::this_thread::sleep_for(boost::chrono::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes;\n-     AC_DEFINE(HAVE_WORKING_BOOST_SLEEP_FOR, 1, [Define this symbol if boost sleep_for works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-\n-if test x$boost_sleep != xyes; then\n-TEMP_LIBS=\"$LIBS\"\n-LIBS=\"$BOOST_LIBS $LIBS\"\n-TEMP_CPPFLAGS=\"$CPPFLAGS\"\n-CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n-AC_LINK_IFELSE([AC_LANG_PROGRAM([[\n-  #include <boost/version.hpp>\n-  #include <boost/thread.hpp>\n-  #include <boost/date_time/posix_time/posix_time_types.hpp>\n-  ]],[[\n-  #if BOOST_VERSION <= 105600\n-      boost::this_thread::sleep(boost::posix_time::milliseconds(0));\n-  #else\n-   choke me\n-  #endif\n-  ]])],\n-  [boost_sleep=yes; AC_DEFINE(HAVE_WORKING_BOOST_SLEEP, 1, [Define this symbol if boost sleep works])],\n-  [boost_sleep=no])\n-LIBS=\"$TEMP_LIBS\"\n-CPPFLAGS=\"$TEMP_CPPFLAGS\"\n-fi\n-\n-if test x$boost_sleep != xyes; then\n-  AC_MSG_ERROR(No working boost sleep implementation found.)\n-fi\n-\n-fi\n-\n-if test x$use_pkgconfig = xyes; then\n-\n-  if test x\"$PKG_CONFIG\" = \"x\"; then\n-    AC_MSG_ERROR(pkg-config not found.)\n-  fi\n-\n-  : #NOP\n-  m4_ifdef(\n-    [PKG_CHECK_MODULES],\n-    [\n-      PKG_CHECK_MODULES([SSL], [libssl],, [AC_MSG_ERROR(openssl  not found.)])\n-      PKG_CHECK_MODULES([CRYPTO], [libcrypto],,[AC_MSG_ERROR(libcrypto  not found.)])\n-      BITCOIN_QT_CHECK([PKG_CHECK_MODULES([PROTOBUF], [protobuf], [have_protobuf=yes], [BITCOIN_QT_FAIL(libprotobuf not found)])])\n-      if test x$use_qr != xno; then\n-        BITCOIN_QT_CHECK([PKG_CHECK_MODULES([QR], [libqrencode], [have_qrencode=yes], [have_qrencode=no])])\n-      fi\n-      if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-        PKG_CHECK_MODULES([EVENT], [libevent],, [AC_MSG_ERROR(libevent not found.)])\n-        if test x$TARGET_OS != xwindows; then\n-          PKG_CHECK_MODULES([EVENT_PTHREADS], [libevent_pthreads],, [AC_MSG_ERROR(libevent_pthreads not found.)])\n-        fi\n-      fi\n-\n-      if test \"x$use_zmq\" = \"xyes\"; then\n-        PKG_CHECK_MODULES([ZMQ],[libzmq >= 4],\n-          [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-          [AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-           AC_MSG_WARN([libzmq version 4.x or greater not found, disabling])\n-           use_zmq=no])\n-      else\n-          AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-      fi\n-    ]\n-  )\n-else\n-  AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n-  AC_CHECK_LIB([crypto],      [main],CRYPTO_LIBS=-lcrypto, AC_MSG_ERROR(libcrypto missing))\n-\n-  AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n-  AC_CHECK_LIB([ssl],         [main],SSL_LIBS=-lssl, AC_MSG_ERROR(libssl missing))\n-\n-  if test x$build_bitcoin_utils$build_bitcoind$bitcoin_enable_qt$use_tests != xnononono; then\n-    AC_CHECK_HEADER([event2/event.h],, AC_MSG_ERROR(libevent headers missing),)\n-    AC_CHECK_LIB([event],[main],EVENT_LIBS=-levent,AC_MSG_ERROR(libevent missing))\n-    if test x$TARGET_OS != xwindows; then\n-      AC_CHECK_LIB([event_pthreads],[main],EVENT_PTHREADS_LIBS=-levent_pthreads,AC_MSG_ERROR(libevent_pthreads missing))\n-    fi\n-  fi\n-\n-  if test \"x$use_zmq\" = \"xyes\"; then\n-     AC_CHECK_HEADER([zmq.h],\n-       [AC_DEFINE([ENABLE_ZMQ],[1],[Define to 1 to enable ZMQ functions])],\n-       [AC_MSG_WARN([zmq.h not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-     AC_CHECK_LIB([zmq],[zmq_ctx_shutdown],ZMQ_LIBS=-lzmq,\n-       [AC_MSG_WARN([libzmq >= 4.0 not found, disabling zmq support])\n-        use_zmq=no\n-        AC_DEFINE([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])])\n-  else\n-    AC_DEFINE_UNQUOTED([ENABLE_ZMQ],[0],[Define to 1 to enable ZMQ functions])\n-  fi\n-\n-  BITCOIN_QT_CHECK(AC_CHECK_LIB([protobuf] ,[main],[PROTOBUF_LIBS=-lprotobuf], BITCOIN_QT_FAIL(libprotobuf not found)))\n-  if test x$use_qr != xno; then\n-    BITCOIN_QT_CHECK([AC_CHECK_LIB([qrencode], [main],[QR_LIBS=-lqrencode], [have_qrencode=no])])\n-    BITCOIN_QT_CHECK([AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)])\n-  fi\n-fi\n-\n-dnl univalue check\n-\n-if test x$system_univalue != xno ; then\n-  found_univalue=no\n-  if test x$use_pkgconfig = xyes; then\n-    : #NOP\n-    m4_ifdef(\n-      [PKG_CHECK_MODULES],\n-      [\n-        PKG_CHECK_MODULES([UNIVALUE],[libunivalue],[found_univalue=yes],[true])\n-      ]\n-    )\n-  else\n-    AC_CHECK_HEADER([univalue.h],[\n-      AC_CHECK_LIB([univalue],  [main],[\n-        UNIVALUE_LIBS=-lunivalue\n-        found_univalue=yes\n-      ],[true])\n-    ],[true])\n-  fi\n-\n-  if test x$found_univalue = xyes ; then\n-    system_univalue=yes\n-  elif test x$system_univalue = xyes ; then\n-    AC_MSG_ERROR([univalue not found])\n-  else\n-    system_univalue=no\n-  fi\n-fi\n-\n-if test x$system_univalue = xno ; then\n-  UNIVALUE_CFLAGS='-I$(srcdir)/univalue/include'\n-  UNIVALUE_LIBS='univalue/libunivalue.la'\n-fi\n-AM_CONDITIONAL([EMBEDDED_UNIVALUE],[test x$system_univalue = xno])\n-AC_SUBST(UNIVALUE_CFLAGS)\n-AC_SUBST(UNIVALUE_LIBS)\n-\n-CXXFLAGS_TEMP=\"$CXXFLAGS\"\n-LIBS_TEMP=\"$LIBS\"\n-CXXFLAGS=\"$CXXFLAGS $SSL_CFLAGS $CRYPTO_CFLAGS\"\n-LIBS=\"$LIBS $SSL_LIBS $CRYPTO_LIBS\"\n-AC_CHECK_HEADER([openssl/ec.h],, AC_MSG_ERROR(OpenSSL ec header missing),)\n-CXXFLAGS=\"$CXXFLAGS_TEMP\"\n-LIBS=\"$LIBS_TEMP\"\n-\n-BITCOIN_QT_PATH_PROGS([PROTOC], [protoc],$protoc_bin_path)\n-\n-AC_MSG_CHECKING([whether to build bitcoind])\n-AM_CONDITIONAL([BUILD_BITCOIND], [test x$build_bitcoind = xyes])\n-AC_MSG_RESULT($build_bitcoind)\n-\n-AC_MSG_CHECKING([whether to build utils (bitcoin-cli bitcoin-tx)])\n-AM_CONDITIONAL([BUILD_BITCOIN_UTILS], [test x$build_bitcoin_utils = xyes])\n-AC_MSG_RESULT($build_bitcoin_utils)\n-\n-AC_MSG_CHECKING([whether to build libraries])\n-AM_CONDITIONAL([BUILD_BITCOIN_LIBS], [test x$build_bitcoin_libs = xyes])\n-if test x$build_bitcoin_libs = xyes; then\n-  AC_DEFINE(HAVE_CONSENSUS_LIB, 1, [Define this symbol if the consensus lib has been built])\n-  AC_CONFIG_FILES([libbitcoinconsensus.pc:libbitcoinconsensus.pc.in])\n-fi\n-AC_MSG_RESULT($build_bitcoin_libs)\n-\n-AC_LANG_POP\n-\n-if test \"x$use_ccache\" != \"xno\"; then\n-  AC_MSG_CHECKING(if ccache should be used)\n-  if test x$CCACHE = x; then\n-    if test \"x$use_ccache\" = \"xyes\"; then\n-      AC_MSG_ERROR([ccache not found.]);\n-    else\n-      use_ccache=no\n-    fi\n-  else\n-    use_ccache=yes\n-    CC=\"$ac_cv_path_CCACHE $CC\"\n-    CXX=\"$ac_cv_path_CCACHE $CXX\"\n-  fi\n-  AC_MSG_RESULT($use_ccache)\n-fi\n-if test \"x$use_ccache\" = \"xyes\"; then\n-    AX_CHECK_PREPROC_FLAG([-Qunused-arguments],[CPPFLAGS=\"-Qunused-arguments $CPPFLAGS\"])\n-fi\n-\n-dnl enable wallet\n-AC_MSG_CHECKING([if wallet should be enabled])\n-if test x$enable_wallet != xno; then\n-  AC_MSG_RESULT(yes)\n-  AC_DEFINE_UNQUOTED([ENABLE_WALLET],[1],[Define to 1 to enable wallet functions])\n-\n-else\n-  AC_MSG_RESULT(no)\n-fi\n-\n-dnl enable upnp support\n-AC_MSG_CHECKING([whether to build with support for UPnP])\n-if test x$have_miniupnpc = xno; then\n-  if test x$use_upnp = xyes; then\n-     AC_MSG_ERROR(\"UPnP requested but cannot be built. use --without-miniupnpc\")\n-  fi\n-  AC_MSG_RESULT(no)\n-else\n-  if test x$use_upnp != xno; then\n-    AC_MSG_RESULT(yes)\n-    AC_MSG_CHECKING([whether to build with UPnP enabled by default])\n-    use_upnp=yes\n-    upnp_setting=0\n-    if test x$use_upnp_default != xno; then\n-      use_upnp_default=yes\n-      upnp_setting=1\n-    fi\n-    AC_MSG_RESULT($use_upnp_default)\n-    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[UPnP support not compiled if undefined, otherwise value (0 or 1) determines default state])\n-    if test x$TARGET_OS = xwindows; then\n-      MINIUPNPC_CPPFLAGS=\"-DSTATICLIB -DMINIUPNP_STATICLIB\"\n-    fi\n-  else\n-    AC_MSG_RESULT(no)\n-  fi\n-fi\n-\n-dnl these are only used when qt is enabled\n-if test x$bitcoin_enable_qt != xno; then\n-  BUILD_QT=qt\n-  dnl enable dbus support\n-  AC_MSG_CHECKING([whether to build GUI with support for D-Bus])\n-  if test x$bitcoin_enable_qt_dbus != xno; then\n-    AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n-  fi\n-  AC_MSG_RESULT($bitcoin_enable_qt_dbus)\n-\n-  dnl enable qr support\n-  AC_MSG_CHECKING([whether to build GUI with support for QR codes])\n-  if test x$have_qrencode = xno; then\n-    if test x$use_qr = xyes; then\n-     AC_MSG_ERROR(\"QR support requested but cannot be built. use --without-qrencode\")\n-    fi\n-    AC_MSG_RESULT(no)\n-  else\n-    if test x$use_qr != xno; then\n-      AC_MSG_RESULT(yes)\n-      AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n-      use_qr=yes\n-    else\n-      AC_MSG_RESULT(no)\n-    fi\n-  fi\n-\n-  if test x$XGETTEXT = x; then\n-    AC_MSG_WARN(\"xgettext is required to update qt translations\")\n-  fi\n-\n-  AC_MSG_CHECKING([whether to build test_bitcoin-qt])\n-  if test x$use_tests$bitcoin_enable_qt_test = xyesyes; then\n-    AC_MSG_RESULT([yes])\n-    BUILD_TEST_QT=\"test\"\n-  else\n-    AC_MSG_RESULT([no])\n-  fi\n-fi\n-\n-AM_CONDITIONAL([ENABLE_ZMQ], [test \"x$use_zmq\" = \"xyes\"])\n-\n-AC_MSG_CHECKING([whether to build test_bitcoin])\n-if test x$use_tests = xyes; then\n-  AC_MSG_RESULT([yes])\n-  BUILD_TEST=\"test\"\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-AC_MSG_CHECKING([whether to reduce exports])\n-if test x$use_reduce_exports = xyes; then\n-  AC_MSG_RESULT([yes])\n-else\n-  AC_MSG_RESULT([no])\n-fi\n-\n-if test x$build_bitcoin_utils$build_bitcoin_libs$build_bitcoind$bitcoin_enable_qt$use_tests = xnonononono; then\n-  AC_MSG_ERROR([No targets! Please specify at least one of: --with-utils --with-libs --with-daemon --with-gui or --enable-tests])\n-fi\n-\n-AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n-AM_CONDITIONAL([BUILD_DARWIN], [test x$BUILD_OS = xdarwin])\n-AM_CONDITIONAL([TARGET_WINDOWS], [test x$TARGET_OS = xwindows])\n-AM_CONDITIONAL([ENABLE_WALLET],[test x$enable_wallet = xyes])\n-AM_CONDITIONAL([ENABLE_TESTS],[test x$use_tests = xyes])\n-AM_CONDITIONAL([ENABLE_QT],[test x$bitcoin_enable_qt = xyes])\n-AM_CONDITIONAL([ENABLE_QT_TESTS],[test x$use_tests$bitcoin_enable_qt_test = xyesyes])\n-AM_CONDITIONAL([ENABLE_BENCH],[test x$use_bench = xyes])\n-AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n-AM_CONDITIONAL([USE_LCOV],[test x$use_lcov = xyes])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL],[test x$use_comparison_tool != xno])\n-AM_CONDITIONAL([USE_COMPARISON_TOOL_REORG_TESTS],[test x$use_comparison_tool_reorg_test != xno])\n-AM_CONDITIONAL([GLIBC_BACK_COMPAT],[test x$use_glibc_compat = xyes])\n-AM_CONDITIONAL([HARDEN],[test x$use_hardening = xyes])\n-\n-AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n-AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n-AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n-AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n-AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n-AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n-AC_DEFINE(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\", [Copyright holder(s) before %s replacement])\n-AC_DEFINE(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\", [Replacement for %s in copyright holders string])\n-define(_COPYRIGHT_HOLDERS_FINAL, patsubst(_COPYRIGHT_HOLDERS, [%s], [_COPYRIGHT_HOLDERS_SUBSTITUTION]))\n-AC_DEFINE(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\", [Copyright holder(s)])\n-AC_SUBST(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR)\n-AC_SUBST(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR)\n-AC_SUBST(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION)\n-AC_SUBST(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD)\n-AC_SUBST(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE)\n-AC_SUBST(COPYRIGHT_YEAR, _COPYRIGHT_YEAR)\n-AC_SUBST(COPYRIGHT_HOLDERS, \"_COPYRIGHT_HOLDERS\")\n-AC_SUBST(COPYRIGHT_HOLDERS_SUBSTITUTION, \"_COPYRIGHT_HOLDERS_SUBSTITUTION\")\n-AC_SUBST(COPYRIGHT_HOLDERS_FINAL, \"_COPYRIGHT_HOLDERS_FINAL\")\n-\n-AC_SUBST(RELDFLAGS)\n-AC_SUBST(HARDENED_CXXFLAGS)\n-AC_SUBST(HARDENED_CPPFLAGS)\n-AC_SUBST(HARDENED_LDFLAGS)\n-AC_SUBST(PIC_FLAGS)\n-AC_SUBST(PIE_FLAGS)\n-AC_SUBST(LIBTOOL_APP_LDFLAGS)\n-AC_SUBST(USE_UPNP)\n-AC_SUBST(USE_QRCODE)\n-AC_SUBST(BOOST_LIBS)\n-AC_SUBST(TESTDEFS)\n-AC_SUBST(LEVELDB_TARGET_FLAGS)\n-AC_SUBST(BUILD_TEST)\n-AC_SUBST(BUILD_QT)\n-AC_SUBST(BUILD_TEST_QT)\n-AC_SUBST(MINIUPNPC_CPPFLAGS)\n-AC_SUBST(MINIUPNPC_LIBS)\n-AC_CONFIG_FILES([Makefile src/Makefile share/setup.nsi share/qt/Info.plist src/test/buildenv.py])\n-AC_CONFIG_FILES([qa/pull-tester/run-bitcoind-for-test.sh],[chmod +x qa/pull-tester/run-bitcoind-for-test.sh])\n-AC_CONFIG_FILES([qa/pull-tester/tests_config.py],[chmod +x qa/pull-tester/tests_config.py])\n-\n-dnl boost's m4 checks do something really nasty: they export these vars. As a\n-dnl result, they leak into secp256k1's configure and crazy things happen.\n-dnl Until this is fixed upstream and we've synced, we'll just un-export them.\n-CPPFLAGS_TEMP=\"$CPPFLAGS\"\n-unset CPPFLAGS\n-CPPFLAGS=\"$CPPFLAGS_TEMP\"\n-\n-LDFLAGS_TEMP=\"$LDFLAGS\"\n-unset LDFLAGS\n-LDFLAGS=\"$LDFLAGS_TEMP\"\n-\n-LIBS_TEMP=\"$LIBS\"\n-unset LIBS\n-LIBS=\"$LIBS_TEMP\"\n-\n-PKGCONFIG_PATH_TEMP=\"$PKG_CONFIG_PATH\"\n-unset PKG_CONFIG_PATH\n-PKG_CONFIG_PATH=\"$PKGCONFIG_PATH_TEMP\"\n-\n-PKGCONFIG_LIBDIR_TEMP=\"$PKG_CONFIG_LIBDIR\"\n-unset PKG_CONFIG_LIBDIR\n-PKG_CONFIG_LIBDIR=\"$PKGCONFIG_LIBDIR_TEMP\"\n-\n-if test x$system_univalue = xno; then\n-  AC_CONFIG_SUBDIRS([src/univalue])\n-fi\n-\n-ac_configure_args=\"${ac_configure_args} --disable-shared --with-pic --with-bignum=no --enable-module-recovery\"\n-AC_CONFIG_SUBDIRS([src/secp256k1])\n-\n-AC_OUTPUT\n-\n-dnl Taken from https://wiki.debian.org/RpathIssue\n-case $host in\n-   *-*-linux-gnu)\n-     AC_MSG_RESULT([Fixing libtool for -rpath problems.])\n-     sed < libtool > libtool-2 \\\n-     's/^hardcode_libdir_flag_spec.*$'/'hardcode_libdir_flag_spec=\" -D__LIBTOOL_IS_A_FOOL__ \"/'\n-     mv libtool-2 libtool\n-     chmod 755 libtool\n-   ;;\n-esac\n-\n-dnl Replace the BUILDDIR path with the correct Windows path if compiling on Native Windows\n-case ${OS} in\n-   *Windows*)\n-     sed  's/BUILDDIR=\"\\/\\([[a-z]]\\)/BUILDDIR=\"\\1:/'  qa/pull-tester/tests_config.py > qa/pull-tester/tests_config-2.py\n-     mv qa/pull-tester/tests_config-2.py qa/pull-tester/tests_config.py\n-   ;;\n-esac"
      },
      {
        "sha": "b6e572102acb755511bee394f438c669d48dce2f",
        "filename": "contrib/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,56 +0,0 @@\n-Wallet Tools\n----------------------\n-\n-### [SpendFrom](/contrib/spendfrom) ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses).\n-\n-Repository Tools\n----------------------\n-\n-### [Developer tools](/contrib/devtools) ###\n-Specific tools for developers working on this repository.\n-Contains the script `github-merge.py` for merging github pull requests securely and signing them using GPG.\n-\n-### [Verify-Commits](/contrib/verify-commits) ###\n-Tool to verify that every merge commit was signed by a developer using the above `github-merge.py` script.\n-\n-### [Linearize](/contrib/linearize) ###\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-### [Qos](/contrib/qos) ###\n-\n-A Linux bash script that will set up traffic control (tc) to limit the outgoing bandwidth for connections to the Bitcoin network. This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it.\n-\n-### [Seeds](/contrib/seeds) ###\n-Utility to generate the pnSeed[] array that is compiled into the client.\n-\n-Build Tools and Keys\n----------------------\n-\n-### [Debian](/contrib/debian) ###\n-Contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-### [Gitian-descriptors](/contrib/gitian-descriptors) ###\n-Gavin's notes on getting gitian builds up and running using KVM.\n-\n-### [Gitian-downloader](/contrib/gitian-downloader)\n-Various PGP files of core developers. \n-\n-### [MacDeploy](/contrib/macdeploy) ###\n-Scripts and notes for Mac builds. \n-\n-Test and Verify Tools \n----------------------\n-\n-### [TestGen](/contrib/testgen) ###\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-### [Test Patches](/contrib/test-patches) ###\n-These patches are applied when the automated pull-tester\n-tests each pull and when master is tested using jenkins.\n-\n-### [Verify SF Binaries](/contrib/verifysfbinaries) ###\n-This script attempts to download and verify the signature file SHA256SUMS.asc from SourceForge."
      },
      {
        "sha": "b8133bf78914be68a33d881223da861820fdb05e",
        "filename": "contrib/bitcoin-qt.pro",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/bitcoin-qt.pro",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/bitcoin-qt.pro",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoin-qt.pro?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-FORMS += \\\n-    ../src/qt/forms/aboutdialog.ui \\\n-    ../src/qt/forms/addressbookpage.ui \\\n-    ../src/qt/forms/askpassphrasedialog.ui \\\n-    ../src/qt/forms/coincontroldialog.ui \\\n-    ../src/qt/forms/editaddressdialog.ui \\\n-    ../src/qt/forms/helpmessagedialog.ui \\\n-    ../src/qt/forms/intro.ui \\\n-    ../src/qt/forms/openuridialog.ui \\\n-    ../src/qt/forms/optionsdialog.ui \\\n-    ../src/qt/forms/overviewpage.ui \\\n-    ../src/qt/forms/receivecoinsdialog.ui \\\n-    ../src/qt/forms/receiverequestdialog.ui \\\n-    ../src/qt/forms/debugwindow.ui \\\n-    ../src/qt/forms/sendcoinsdialog.ui \\\n-    ../src/qt/forms/sendcoinsentry.ui \\\n-    ../src/qt/forms/signverifymessagedialog.ui \\\n-    ../src/qt/forms/transactiondescdialog.ui \\\n-\n-RESOURCES += \\\n-    ../src/qt/bitcoin.qrc"
      },
      {
        "sha": "1338d2f2b5c3b5dc48a36f93c5afbac330b9a065",
        "filename": "contrib/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 145,
        "changes": 145,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitcoind.bash-completion?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,145 +0,0 @@\n-# bash programmable completion for bitcoind(1) and bitcoin-cli(1)\n-# Copyright (c) 2012,2014 Christian von Roques <roques@mti.ag>\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-have bitcoind && {\n-\n-# call $bitcoind for RPC\n-_bitcoin_rpc() {\n-    # determine already specified args necessary for RPC\n-    local rpcargs=()\n-    for i in ${COMP_LINE}; do\n-        case \"$i\" in\n-            -conf=*|-proxy*|-rpc*)\n-                rpcargs=( \"${rpcargs[@]}\" \"$i\" )\n-                ;;\n-        esac\n-    done\n-    $bitcoind \"${rpcargs[@]}\" \"$@\"\n-}\n-\n-# Add bitcoin accounts to COMPREPLY\n-_bitcoin_accounts() {\n-    local accounts\n-    accounts=$(_bitcoin_rpc listaccounts | awk '/\".*\"/ { a=$1; gsub(/\"/, \"\", a); print a}')\n-    COMPREPLY=( \"${COMPREPLY[@]}\" $( compgen -W \"$accounts\" -- \"$cur\" ) )\n-}\n-\n-_bitcoind() {\n-    local cur prev words=() cword\n-    local bitcoind\n-\n-    # save and use original argument to invoke bitcoind\n-    # bitcoind might not be in $PATH\n-    bitcoind=\"$1\"\n-\n-    COMPREPLY=()\n-    _get_comp_words_by_ref -n = cur prev words cword\n-\n-    if ((cword > 4)); then\n-        case ${words[cword-4]} in\n-            listtransactions)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            signrawtransaction)\n-                COMPREPLY=( $( compgen -W \"ALL NONE SINGLE ALL|ANYONECANPAY NONE|ANYONECANPAY SINGLE|ANYONECANPAY\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 3)); then\n-        case ${words[cword-3]} in\n-            addmultisigaddress)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-            getbalance|gettxout|importaddress|importprivkey|listreceivedbyaccount|listreceivedbyaddress|listsinceblock)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    if ((cword > 2)); then\n-        case ${words[cword-2]} in\n-            addnode)\n-                COMPREPLY=( $( compgen -W \"add remove onetry\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            getblock|getrawtransaction|gettransaction|listaccounts|listreceivedbyaccount|listreceivedbyaddress|sendrawtransaction)\n-                COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-                return 0\n-                ;;\n-            move|setaccount)\n-                _bitcoin_accounts\n-                return 0\n-                ;;\n-        esac\n-    fi\n-\n-    case \"$prev\" in\n-        backupwallet|dumpwallet|importwallet)\n-            _filedir\n-            return 0\n-            ;;\n-        getmempool|lockunspent|setgenerate)\n-            COMPREPLY=( $( compgen -W \"true false\" -- \"$cur\" ) )\n-            return 0\n-            ;;\n-        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)\n-            _bitcoin_accounts\n-            return 0\n-            ;;\n-    esac\n-\n-    case \"$cur\" in\n-        -conf=*|-pid=*|-loadblock=*|-wallet=*)\n-            cur=\"${cur#*=}\"\n-            _filedir\n-            return 0\n-            ;;\n-        -datadir=*)\n-            cur=\"${cur#*=}\"\n-            _filedir -d\n-            return 0\n-            ;;\n-        -*=*)\t# prevent nonsense completions\n-            return 0\n-            ;;\n-        *)\n-            local helpopts commands\n-\n-            # only parse --help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^- ]]; then\n-                helpopts=$($bitcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, \"=\"); print $1 }' )\n-            fi\n-\n-            # only parse help if senseful\n-            if [[ -z \"$cur\" || \"$cur\" =~ ^[a-z] ]]; then\n-                commands=$(_bitcoin_rpc help 2>/dev/null | awk '$1 ~ /^[a-z]/ { print $1; }')\n-            fi\n-\n-            COMPREPLY=( $( compgen -W \"$helpopts $commands\" -- \"$cur\" ) )\n-\n-            # Prevent space if an argument is desired\n-            if [[ $COMPREPLY == *= ]]; then\n-                compopt -o nospace\n-            fi\n-            return 0\n-            ;;\n-    esac\n-}\n-\n-complete -F _bitcoind bitcoind bitcoin-cli\n-}\n-\n-# Local variables:\n-# mode: shell-script\n-# sh-basic-offset: 4\n-# sh-indent-comment: t\n-# indent-tabs-mode: nil\n-# End:\n-# ex: ts=4 sw=4 et filetype=sh"
      },
      {
        "sha": "b02b2991772e6e6ca73e9767317ea69bc34dbf75",
        "filename": "contrib/bitrpc/bitrpc.py",
        "status": "added",
        "additions": 324,
        "deletions": 0,
        "changes": 324,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/bitrpc/bitrpc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/bitrpc/bitrpc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/bitrpc/bitrpc.py?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,324 @@\n+from jsonrpc import ServiceProxy\n+import sys\n+import string\n+\n+# ===== BEGIN USER SETTINGS =====\n+# if you do not set these you will be prompted for a password for every command\n+rpcuser = \"\"\n+rpcpass = \"\"\n+# ====== END USER SETTINGS ======\n+\n+\n+if rpcpass == \"\":\n+\taccess = ServiceProxy(\"http://127.0.0.1:8332\")\n+else:\n+\taccess = ServiceProxy(\"http://\"+rpcuser+\":\"+rpcpass+\"@127.0.0.1:8332\")\n+cmd = sys.argv[1].lower()\n+\n+if cmd == \"backupwallet\":\n+\ttry:\n+\t\tpath = raw_input(\"Enter destination path/filename: \")\n+\t\tprint access.backupwallet(path)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address: \")\n+\t\tprint access.getaccount(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaccountaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaccountaddress(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getaddressesbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\tprint access.getaddressesbyaccount(acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getbalance\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getbalance(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getbalance()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockbycount\":\n+\ttry:\n+\t\theight = raw_input(\"Height: \")\n+\t\tprint access.getblockbycount(height)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblockcount\":\n+\ttry:\n+\t\tprint access.getblockcount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getblocknumber\":\n+\ttry:\n+\t\tprint access.getblocknumber()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getconnectioncount\":\n+\ttry:\n+\t\tprint access.getconnectioncount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getdifficulty\":\n+\ttry:\n+\t\tprint access.getdifficulty()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getgenerate\":\n+\ttry:\n+\t\tprint access.getgenerate()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gethashespersec\":\n+\ttry:\n+\t\tprint access.gethashespersec()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getinfo\":\n+\ttry:\n+\t\tprint access.getinfo()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getnewaddress\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account name: \")\n+\t\ttry:\n+\t\t\tprint access.getnewaddress(acct)\n+\t\texcept:\n+\t\t\tprint access.getnewaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaccount\":\n+\ttry:\n+\t\tacct = raw_input(\"Enter an account (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaccount(acct, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getreceivedbyaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Enter a Bitcoin address (optional): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.getreceivedbyaddress(addr, mc)\n+\t\texcept:\n+\t\t\tprint access.getreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"gettransaction\":\n+\ttry:\n+\t\ttxid = raw_input(\"Enter a transaction ID: \")\n+\t\tprint access.gettransaction(txid)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"getwork\":\n+\ttry:\n+\t\tdata = raw_input(\"Data (optional): \")\n+\t\ttry:\n+\t\t\tprint access.gettransaction(data)\n+\t\texcept:\n+\t\t\tprint access.gettransaction()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"help\":\n+\ttry:\n+\t\tcmd = raw_input(\"Command (optional): \")\n+\t\ttry:\n+\t\t\tprint access.help(cmd)\n+\t\texcept:\n+\t\t\tprint access.help()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listaccounts\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\ttry:\n+\t\t\tprint access.listaccounts(mc)\n+\t\texcept:\n+\t\t\tprint access.listaccounts()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaccount\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaccount(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaccount()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listreceivedbyaddress\":\n+\ttry:\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tincemp = raw_input(\"Include empty? (true/false, optional): \")\n+\t\ttry:\n+\t\t\tprint access.listreceivedbyaddress(mc, incemp)\n+\t\texcept:\n+\t\t\tprint access.listreceivedbyaddress()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"listtransactions\":\n+\ttry:\n+\t\tacct = raw_input(\"Account (optional): \")\n+\t\tcount = raw_input(\"Number of transactions (optional): \")\n+\t\tfrm = raw_input(\"Skip (optional):\")\n+\t\ttry:\n+\t\t\tprint access.listtransactions(acct, count, frm)\n+\t\texcept:\n+\t\t\tprint access.listtransactions()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"move\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.move(frm, to, amt, mc, comment)\n+\t\texcept:\n+\t\t\tprint access.move(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendfrom\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To: \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendfrom(frm, to, amt, mc, comment, commentto)\n+\t\texcept:\n+\t\t\tprint access.sendfrom(frm, to, amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendmany\":\n+\ttry:\n+\t\tfrm = raw_input(\"From: \")\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tmc = raw_input(\"Minimum confirmations (optional): \")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendmany(frm,to,mc,comment)\n+\t\texcept:\n+\t\t\tprint access.sendmany(frm,to)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"sendtoaddress\":\n+\ttry:\n+\t\tto = raw_input(\"To (in format address1:amount1,address2:amount2,...): \")\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tcomment = raw_input(\"Comment (optional): \")\n+\t\tcommentto = raw_input(\"Comment-to (optional): \")\n+\t\ttry:\n+\t\t\tprint access.sendtoaddress(to,amt,comment,commentto)\n+\t\texcept:\n+\t\t\tprint access.sendtoaddress(to,amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setaccount\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tacct = raw_input(\"Account:\")\n+\t\tprint access.setaccount(addr,acct)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"setgenerate\":\n+\ttry:\n+\t\tgen= raw_input(\"Generate? (true/false): \")\n+\t\tcpus = raw_input(\"Max processors/cores (-1 for unlimited, optional):\")\n+\t\ttry:\n+\t\t\tprint access.setgenerate(gen, cpus)\n+\t\texcept:\n+\t\t\tprint access.setgenerate(gen)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"settxfee\":\n+\ttry:\n+\t\tamt = raw_input(\"Amount:\")\n+\t\tprint access.settxfee(amt)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"stop\":\n+\ttry:\n+\t\tprint access.stop()\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"validateaddress\":\n+\ttry:\n+\t\taddr = raw_input(\"Address: \")\n+\t\tprint access.validateaddress(addr)\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrase\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter wallet passphrase: \")\n+\t\taccess.walletpassphrase(pwd, 60)\n+\t\tprint \"\\n---Wallet unlocked---\\n\"\n+\texcept:\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\n+elif cmd == \"walletpassphrasechange\":\n+\ttry:\n+\t\tpwd = raw_input(\"Enter old wallet passphrase: \")\n+\t\tpwd2 = raw_input(\"Enter new wallet passphrase: \")\n+\t\taccess.walletpassphrasechange(pwd, pwd2)\n+\t\tprint\n+\t\tprint \"\\n---Passphrase changed---\\n\"\n+\texcept:\n+\t\tprint\n+\t\tprint \"\\n---An error occurred---\\n\"\n+\t\tprint\n+\n+else:\n+\tprint \"Command not found or not supported\"\n\\ No newline at end of file"
      },
      {
        "sha": "fab9cc238156789c96e4b908fbe1e4d863ecebf9",
        "filename": "contrib/debian/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-\n-Debian\n-====================\n-This directory contains files used to package bitcoind/bitcoin-qt\n-for Debian-based Linux systems. If you compile bitcoind/bitcoin-qt yourself, there are some useful files here.\n-\n-## bitcoin: URI support ##\n-\n-\n-bitcoin-qt.desktop  (Gnome / Open Desktop)\n-To install:\n-\n-\tsudo desktop-file-install bitcoin-qt.desktop\n-\tsudo update-desktop-database\n-\n-If you build yourself, you will either need to modify the paths in\n-the .desktop file or copy or symlink your bitcoin-qt binary to `/usr/bin`\n-and the `../../share/pixmaps/bitcoin128.png` to `/usr/share/pixmaps`\n-\n-bitcoin-qt.protocol (KDE)\n-"
      },
      {
        "sha": "b3bc973501f09844a64f2988e8ee8a776eefe581",
        "filename": "contrib/debian/bin/novacoin-qt",
        "status": "added",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/bin/novacoin-qt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/bin/novacoin-qt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoin-qt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,16 @@\n+#!/bin/sh\n+\n+set -e\n+\n+umask 077\n+\n+basedir=~/.novacoin\n+dbfile=\"$basedir/DB_CONFIG\"\n+cfgfile=\"$basedir/novacoin.conf\"\n+\n+[ -e \"$basedir\" ] || mkdir \"$basedir\"\n+\n+# Novacoin does not clean up DB log files by default\n+[ -e \"$dbfile\" ] || echo 'set_flags DB_LOG_AUTOREMOVE' > \"$dbfile\"\n+\n+exec /usr/lib/novacoin/novacoin-qt \"$@\""
      },
      {
        "sha": "a4f3fb808b8e19379c1cfd82c6a3c2d41ec88a82",
        "filename": "contrib/debian/bin/novacoind",
        "status": "added",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/bin/novacoind",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/bin/novacoind",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bin/novacoind?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,14 @@\n+#!/bin/sh\n+\n+set -e\n+\n+umask 077\n+\n+basedir=~/.novacoin\n+cfgfile=\"$basedir/novacoin.conf\"\n+\n+[ -e \"$basedir\" ] || mkdir \"$basedir\"\n+\n+[ -e \"$cfgfile\" ] || perl -le 'print\"rpcpassword=\",map{(a..z,A..Z,0..9)[rand 62]}0..9' > \"$cfgfile\"\n+\n+exec /usr/lib/novacoin/novacoind \"$@\""
      },
      {
        "sha": "61e1aca6ad0ce17519af59f6da4afdd9521b79a8",
        "filename": "contrib/debian/bitcoin-qt.desktop",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.desktop?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,12 +0,0 @@\n-[Desktop Entry]\n-Encoding=UTF-8\n-Name=Bitcoin\n-Comment=Bitcoin P2P Cryptocurrency\n-Comment[fr]=Bitcoin, monnaie virtuelle cryptographique pair \u00e0 pair\n-Comment[tr]=Bitcoin, e\u015ften e\u015fe kriptografik sanal para birimi\n-Exec=bitcoin-qt %u\n-Terminal=false\n-Type=Application\n-Icon=bitcoin128\n-MimeType=x-scheme-handler/bitcoin;\n-Categories=Office;Finance;"
      },
      {
        "sha": "e0b32373be68d74e075a779f083b3dededc574d7",
        "filename": "contrib/debian/bitcoin-qt.install",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.install?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,6 +0,0 @@\n-usr/local/bin/bitcoin-qt usr/bin\n-share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin16.xpm usr/share/pixmaps\n-share/pixmaps/bitcoin128.png usr/share/pixmaps\n-debian/bitcoin-qt.desktop usr/share/applications\n-debian/bitcoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "7fb230eca8921cf3f2756a2e1fa3ea6ab808dca5",
        "filename": "contrib/debian/bitcoin-qt.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.lintian-overrides?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "014588d53679baf51055d70b8a621a99217eb160",
        "filename": "contrib/debian/bitcoin-qt.protocol",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-qt.protocol?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,11 +0,0 @@\n-[Protocol]\n-exec=bitcoin-qt '%u'\n-protocol=bitcoin\n-input=none\n-output=none\n-helper=true\n-listing=\n-reading=false\n-writing=false\n-makedir=false\n-deleting=false"
      },
      {
        "sha": "2c21052a6876b4a0f94b79858ae1d164cf179b21",
        "filename": "contrib/debian/bitcoin-tx.install",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-tx.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoin-tx.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoin-tx.install?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1 +0,0 @@\n-usr/local/bin/bitcoin-tx usr/bin"
      },
      {
        "sha": "0f84707b66cb7c063a29df2ae67b8325e34da679",
        "filename": "contrib/debian/bitcoind.bash-completion",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.bash-completion",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.bash-completion",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.bash-completion?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1 +0,0 @@\n-contrib/bitcoind.bash-completion\tbitcoind"
      },
      {
        "sha": "4ded67d98e784e275c76839e7b06b413d774230e",
        "filename": "contrib/debian/bitcoind.examples",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.examples?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1 +0,0 @@\n-debian/examples/bitcoin.conf"
      },
      {
        "sha": "798ea851f6ef8a01e19984221efd327625fda92d",
        "filename": "contrib/debian/bitcoind.install",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.install?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,2 +0,0 @@\n-usr/local/bin/bitcoind usr/bin\n-usr/local/bin/bitcoin-cli usr/bin"
      },
      {
        "sha": "3f9f140bd827a1491ba6a0c46c1df16e428548bd",
        "filename": "contrib/debian/bitcoind.lintian-overrides",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.lintian-overrides?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,2 +0,0 @@\n-# Linked code is Expat - only Debian packaging is GPL-2+\n-bitcoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "6d3e683855018ec721d97853b0d5c9b90edd5c35",
        "filename": "contrib/debian/bitcoind.manpages",
        "status": "removed",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/bitcoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/bitcoind.manpages?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,3 +0,0 @@\n-debian/manpages/bitcoind.1\n-debian/manpages/bitcoin.conf.5\n-debian/manpages/bitcoin-cli.1"
      },
      {
        "sha": "64ceac004629a4dce24bcc73612482ace2cceaf1",
        "filename": "contrib/debian/changelog",
        "status": "modified",
        "additions": 3,
        "deletions": 456,
        "changes": 459,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/changelog",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/changelog",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/changelog?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,459 +1,6 @@\n-bitcoin (0.11.0-precise1) precise; urgency=medium\n+novacoin (0.4.0~dfsg-1) unstable; urgency=low\n \n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 14 Jul 2015 14:39:00 -1000\n-\n-bitcoin (0.10.2-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Mon, 29 Jun 2015 17:33:00 -1000\n-\n-bitcoin (0.10.1-precise3) precise; urgency=medium\n-\n-  * Fix build dep (include python).\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 09:28:00 -1000\n-\n-bitcoin (0.10.1-precise2) precise; urgency=medium\n-\n-  * Fix miniupnpc dep.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:33:00 -1000\n-\n-bitcoin (0.10.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Tue, 5 May 2015 00:07:00 -1000\n-\n-bitcoin (0.10.0-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Wed, 18 Feb 2015 13:22:00 -1000\n-\n-bitcoin (0.9.4-precise1) precise; urgency=high\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (laptop - only while traveling) <matt@mattcorallo.com>  Mon, 12 Jan 2015 23:30:00 -1000\n-\n-bitcoin (0.9.3-precise1) precise; urgency=medium\n-\n-  * New upstream releases.\n-\n- -- Matt Corallo (BlueMatt) <matt@mattcorallo.com>  Fri, 26 Sep 2014 12:01:00 -0700\n-\n-bitcoin (0.9.1-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Backport pull #4019\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 19 Apr 2014 17:29:00 -0400\n-\n-bitcoin (0.9.0-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Thu, 20 Mar 2014 13:10:00 -0400\n-\n-bitcoin (0.8.6-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-  * Make .desktop paths non-fixed (suggested by prusnak@github)\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 13 Dec 2013 13:31:00 -0400\n-\n-bitcoin (0.8.5-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 15 Sep 2013 14:02:00 -0400\n-\n-bitcoin (0.8.4-precise1) precise; urgency=medium\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 4 Sep 2013 10:25:00 -0400\n-\n-bitcoin (0.8.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Jun 2013 00:18:00 +0100\n-\n-bitcoin (0.8.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 29 Mar 2013 23:23:00 +0100\n-\n-bitcoin (0.8.1-natty3) natty; urgency=low\n-\n-  * New pixmaps\n-\n- -- Jonas Schnelli <jonas.schnelli@include7.ch>  Mon, 13 May 2013 16:14:00 +0100\n-\n-bitcoin (0.8.1-natty2) natty; urgency=low\n-\n-  * Remove dumb broken launcher script\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 24 Mar 2013 20:01:00 -0400\n-\n-bitcoin (0.8.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 19 Mar 2013 13:03:00 -0400\n-\n-bitcoin (0.8.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 23 Feb 2013 16:01:00 -0500\n-\n-bitcoin (0.7.2-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 15 Dec 2012 10:59:00 -0400\n-\n-bitcoin (0.7.1-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 24 Oct 2012 15:06:00 -0400\n-\n-bitcoin (0.7.0-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 17 Sep 2012 13:45:00 +0200\n-\n-bitcoin (0.6.3-natty1) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 25 Jun 2012 23:47:00 +0200\n-\n-bitcoin (0.6.2-natty1) natty; urgency=low\n-\n-  * Update package description and launch scripts.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 2 Jun 2012 16:41:00 +0200\n-\n-bitcoin (0.6.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 May 2012 16:27:00 -0500\n-\n-bitcoin (0.6.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 6 May 2012 20:09:00 -0500\n-\n-bitcoin (0.6.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-  * Add GNOME/KDE support for bitcoin-qt's bitcoin: URI support.\n-    Thanks to luke-jr for the KDE .protocol file.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 31 Mar 2012 15:35:00 -0500\n-\n-bitcoin (0.5.3-natty1) natty; urgency=low\n-\n-  * Mark for upload to PPA.\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 14 Mar 2012 23:06:00 -0400\n-\n-bitcoin (0.5.3-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Tue, 10 Jan 2012 15:57:00 -0500\n-\n-bitcoin (0.5.2-natty1) natty; urgency=low\n-\n-  * Remove mentions on anonymity in package descriptions and manpage.\n-    These should never have been there, bitcoin isn't anonymous without\n-    a ton of work that virtually no users will ever be willing and\n-    capable of doing\n-\n- -- Matt Corallo <matt@bluematt.me>  Sat, 7 Jan 2012 13:37:00 -0500\n-\n-bitcoin (0.5.2-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Luke Dashjr <luke+bitcoin+deb@dashjr.org>  Fri, 16 Dec 2011 17:57:00 -0500\n-\n-bitcoin (0.5.1-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Fri, 16 Dec 2011 13:27:00 -0500\n-\n-bitcoin (0.5.0-natty0) natty; urgency=low\n-\n-  * New upstream release.\n-\n- -- Matt Corallo <matt@bluematt.me>  Mon, 21 Nov 2011 11:32:00 -0500\n-\n-bitcoin (0.5.0~rc7-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-\n- -- Matt Corallo <matt@bluematt.me>  Sun, 20 Nov 2011 17:08:00 -0500\n-\n-bitcoin (0.5.0~rc3-natty0) natty; urgency=low\n-\n-  * New upstream release candidate.\n-  * Don't set rpcpassword for bitcoin-qt.\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 8 Nov 2011 11:56:00 -0400\n-\n-bitcoin (0.5.0~rc1-natty1) natty; urgency=low\n-\n-  * Add test_bitcoin to build test\n-  * Fix clean\n-  * Remove unnecessary build-dependancies\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-natty0) natty; urgency=low\n-\n-  * Mark for natty\n-  * Fix broken build\n-  * Fix copyright listing\n-  * Remove bitcoin: URL handler until bitcoin actually has support for it (Oops)\n-\n- -- Matt Corallo <matt@bluematt.me>  Wed, 26 Oct 2011 14:37:18 -0400\n-\n-bitcoin (0.5.0~rc1-2) experimental; urgency=low\n-\n-  * Add bitcoin-qt\n-\n- -- Matt Corallo <matt@bluematt.me>  Tue, 25 Oct 2011 15:24:18 -0400\n-\n-bitcoin (0.5.0~rc1-1) experimental; urgency=low\n-\n-  * New upstream prerelease.\n-  * Add Github as alternate upstream source in watch file.\n-  * Stop build-depending on libcrypto++-dev, and drop patch 1000:\n-    Upstream no longer use crypto++.\n-  * Drop patch 1003: Upstream builds dynamic by default now.\n-  * Update copyright file: Drop notes on longer included sources.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 14 Oct 2011 00:16:18 +0200\n-\n-bitcoin (0.4.0-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Stop repackaging source tarballs: No DFSG-violating stripping left.\n-  * Update copyright file:\n-    + Add Github URL to Source.\n-  * Drop dpkg-source local-options hint: Declared options are default\n-    since dpkg-source 1.16.1.\n-    + Add irc URL to Upstream-Contact.\n-    + Add comment on Bitcoin Developers to catch-all Files section.\n-    + Add Files sections for newly readded src/cryptopp/* (new custom\n-      BSD-like license), and newly added doc/build-osx.txt and\n-      src/makefile.osx (Expat).\n-  * Bump debhelper compatibility level to 7.\n-  * Suppress binary icns and gpg files.\n-  * Enable regression tests:\n-    + Build-depend on libboost-test-dev.\n-    + Extend patch 1003 to also dynamically link test binary.\n-    + Build and invoke test binary unless tests are disabled.\n-  * Tighten build-dependency on cdbs: Recent version needed to support\n-    debhelper 7.\n-  * Relax build-depend unversioned on debhelper: needed version\n-    satisfied even in oldstable.\n-  * Stop suppress optional build-dependencies: Satisfied in stable.\n-    Build-depend on devscripts (enabling copyright-check).\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 05 Oct 2011 01:48:53 +0200\n-\n-bitcoin (0.3.24~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Jonas Smedegaard ]\n-  * Improve various usage hints:\n-    + Explicitly mention in long description that bitcoind contains\n-      daemon and command-line interface.\n-    + Extend README.Debian with section on lack of GUI, and add primary\n-      headline.\n-    + Avoid installing upstream README: contains no parts relevant for\n-      Debian usage.\n-    Thanks to richard for suggestions (see bug#629443).\n-  * Favor final releases over prereleases in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Track -src (not -linux) tarballs in rules and watch file.\n-    Thanks to Jan Dittberner.\n-  * Drop patches 1004 and 1005 (integrated upstream) and simplify\n-    CXXFLAGS in rules file.\n-  * Stop stripping no longer included source-less binaries from upstream\n-    tarballs.\n-\n-  [ Jan Dittberner ]\n-  * refresh debian/patches/1000_use_system_crypto++.patch\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 19 Jul 2011 15:08:54 +0200\n-\n-bitcoin (0.3.21~dfsg-2) unstable; urgency=low\n-\n-  * Enable UPNP support:\n-    + Drop patch 1006.\n-    + Build-depend on libminiupnpc-dev.\n-    Thanks to Matt Corallo.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Sat, 28 May 2011 15:52:44 +0200\n-\n-bitcoin (0.3.21~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Refresh patches.\n-  * Drop patch 1002: no longer needed, as upstream use pkgconfig now.\n-  * Add patch 1006 to really unset USE_UPNP as aparently intended.\n-  * Adjust cleanup rule to preserve .gitignore files.\n-  * Update copyright file:\n-    + Bump format to draft 174 of DEP-5.\n-    + Shorten comments.\n-  * Bump policy compliance to standards-version 3.9.2.\n-  * Shorten Vcs-Browser paragraph in control file.\n-  * Fix mention daemon (not CLI tools) in short description.\n-  * Stop conflicting with or replace bitcoin-cli: Only transitional, no\n-    longer needed.\n-  * Link against unversioned berkeleydb. Update NEWS and README.Debian\n-    accordingly (and improve wording while at it).\n-    Closes: Bug#621425. Thanks to Ond\u0159ej Sur\u00fd.\n-  * This release also implicitly updates linkage against libcrypto++,\n-    which closes: bug#626953, #627024.\n-  * Disable linkage against not yet Debian packaged MiniUPnP.\n-  * Silence seemingly harmless noise about unused variables.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 17 May 2011 15:31:24 +0200\n-\n-bitcoin (0.3.20.2~dfsg-2) unstable; urgency=medium\n-\n-  * Fix have wrapper script execute real binary (not loop executing\n-    itself).\n-    Closes: bug#617290. Thanks to Philippe Gauthier and Etienne Laurin.\n-  * Set urgency=medium as the only (user-exposed) binary is useless\n-    without this fix and has been for some time.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 16 Mar 2011 09:11:06 +0100\n-\n-bitcoin (0.3.20.2~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-  * Fix provide and replace former package name bitcoin-cli.\n-    Closes: bug#618439. Thanks to Shane Wegner.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 15 Mar 2011 11:41:43 +0100\n-\n-bitcoin (0.3.20.01~dfsg-1) unstable; urgency=low\n-\n-  * New upstream release.\n-\n-  [ Micah Anderson ]\n-  * Add myself as uploader.\n-\n-  [ Jonas Smedegaard ]\n-  * Add wrapper for bitcoind to ease initial startup.\n-  * Update patches:\n-    + Drop patch 2002: Applied upstream.\n-    + Add patch 1005 to add phtread linker option.\n-      Closes: bug#615619. Thanks to Shane Wegner.\n-    + Refresh patches.\n-  * Extend copyright years in rules file header.\n-  * Rewrite copyright file using draft svn166 of DEP5 format.\n-  * Rename binary package to bitcoind (from bincoin-cli).\n-    Closes: bug#614025. Thanks to Luke-Jr.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 01 Mar 2011 15:55:04 +0100\n-\n-bitcoin (0.3.19~dfsg-6) unstable; urgency=low\n-\n-  * Fix override aggressive optimizations.\n-  * Fix tighten build-dependencies to really fit backporting to Lenny:\n-    + Add fallback build-dependency on libdb4.6++-dev.\n-    + Tighten unversioned Boost build-dependencies to recent versions,\n-      To force use of versioned Boost when backporting to Lenny.\n-    ...needs more love, though: actual build fails.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 19:48:35 +0100\n-\n-bitcoin (0.3.19~dfsg-5) unstable; urgency=low\n-\n-  * Fix lower Boost fallback-build-dependencies to 1.35, really\n-    available in Lenny.\n-  * Correct comment in rules file regarding reason for versioned Boost\n-    fallback-build-dependency.\n-  * Add patch 2002 adding -mt decoration to Boost flags, to ease\n-    backporting to Lenny.\n-  * Respect DEB_BUILD_OPTIONS, and suppress arch-specific optimizations:\n-    + Add patch 1004 to allow overriding optimization flags.\n-    + Set optimization flags conditionally at build time.\n-    + Drop patch 2002 unconditionally suppressing arch-optimizations.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 16:04:48 +0100\n-\n-bitcoin (0.3.19~dfsg-4) unstable; urgency=low\n-\n-  [ Micah Anderson ]\n-  * Provide example bitcoin.conf.\n-  * Add bitcoind(1) and bitcoin.conf(5) man pages.\n-\n-  [ Jonas Smedegaard ]\n-  * Ease backporting:\n-    + Suppress optional build-dependencies.\n-    + Add fallback build-dependencies on the most recent Boost libs\n-    available in Lenny (where unversioned Boost libs are missing).\n-  * Add Micah as copyright holder for manpages, licensed as GPL-3+.\n-  * Bump copyright format to Subversion candidate draft 162 of DEP5.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Mon, 17 Jan 2011 14:00:48 +0100\n-\n-bitcoin (0.3.19~dfsg-3) unstable; urgency=low\n-\n-  * Document in copyright file files excluded from repackaged source.\n-  * Update copyright file:\n-    + Bump DEP5 format hint to Subversion draft rev. 153.\n-    + Consistently wrap at 72 chars.\n-    + Refer to GPL-2 file (not GPL symlink).\n-  * Link against Berkeley DB 4.8 (not 4.7):\n-    + Build-depend on libdb4.8++-dev (and on on libdb4.7++-dev).\n-    + Suggest libdb4.8-util and db4.7-util.\n-    + Add README.Debian note on (untested) upgrade routine.\n-    + Add NEWS entry on changed db version, referring to README.Debian.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Fri, 07 Jan 2011 22:50:57 +0100\n-\n-bitcoin (0.3.19~dfsg-2) unstable; urgency=low\n-\n-  * Adjust build options to use optimized miner only for amd64. Fixes\n-    FTBFS on i386 (and other archs, if compiling anywhere else at all).\n-  * Avoid static linking.\n-  * Adjust patch 2001 to avoid only arch-specific optimizations (keep\n-    -O3).\n-  * Extend long description to mention disk consumption and initial use\n-    of IRC.\n-  All of above changes thanks to Helmuth Grohne.\n-  * Add lintian override regarding OpenSSL and GPL: Linked code is Expat\n-    - only Debian packaging is GPL-2+.\n-\n- -- Jonas Smedegaard <dr@jones.dk>  Wed, 29 Dec 2010 00:27:54 +0100\n-\n-bitcoin (0.3.19~dfsg-1) unstable; urgency=low\n-\n-  [ Jonas Smedegaard ]\n+  [ Balthazar ]\n   * Initial release.\n-    Closes: bug#578157.\n \n- -- Jonas Smedegaard <dr@jones.dk>  Tue, 28 Dec 2010 15:49:22 +0100\n+ -- Balthazar <balthazar@yandex.ru>  Mon, 15 Apr 2013 22:15:22 +0100"
      },
      {
        "sha": "44fa62c826b95b236b9a19a476a08a3f6e875516",
        "filename": "contrib/debian/control",
        "status": "modified",
        "additions": 30,
        "deletions": 38,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/control",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/control",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/control?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,67 +1,59 @@\n-Source: bitcoin\n+Source: novacoin\n Section: utils\n Priority: optional\n Maintainer: Jonas Smedegaard <dr@jones.dk>\n Uploaders: Micah Anderson <micah@debian.org>\n Build-Depends: debhelper,\n  devscripts,\n- automake,\n- libtool,\n  bash-completion,\n  libboost-system-dev (>> 1.35) | libboost-system1.35-dev,\n  libdb4.8++-dev,\n  libssl-dev,\n  pkg-config,\n- libminiupnpc8-dev | libminiupnpc-dev (>> 1.6),\n+ libminiupnpc8-dev,\n  libboost-filesystem-dev (>> 1.35) | libboost-filesystem1.35-dev,\n  libboost-program-options-dev (>> 1.35) | libboost-program-options1.35-dev,\n  libboost-thread-dev (>> 1.35) | libboost-thread1.35-dev,\n  libboost-test-dev (>> 1.35) | libboost-test1.35-dev,\n  qt4-qmake,\n  libqt4-dev,\n- libqrencode-dev,\n- libprotobuf-dev, protobuf-compiler,\n- python\n+ libqrencode-dev\n Standards-Version: 3.9.2\n-Homepage: https://bitcoincore.org/\n-Vcs-Git: git://github.com/bitcoin/bitcoin.git\n-Vcs-Browser: https://github.com/bitcoin/bitcoin\n+Homepage: http://www.novacoin.su/\n+Vcs-Git: git://github.com/CryptoManiac/novacoin.git\n+Vcs-Browser: http://github.com/CryptoManiac/novacoin\n \n-Package: bitcoind\n+Package: novacoind\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - daemon\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Novacoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n- This package provides the daemon, bitcoind, and the CLI tool\n- bitcoin-cli to interact with the daemon.\n+ By default connects to an IRC network to discover other peers.\n+ .\n+ Full transaction history is stored locally at each client.  This\n+ requires 2+ GB of space, slowly growing.\n+ .\n+ This package provides novacoind, a combined daemon and CLI tool to\n+ interact with the daemon.\n \n-Package: bitcoin-qt\n+Package: novacoin-qt\n Architecture: any\n Depends: ${shlibs:Depends}, ${misc:Depends}\n Description: peer-to-peer network based digital currency - Qt GUI\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ Novacoin is a free open source peer-to-peer electronic cash system that\n+ is completely decentralized, without the need for a central server or\n+ trusted parties.  Users hold the crypto keys to their own money and\n+ transact directly with each other, with the help of a P2P network to\n+ check for double-spending.\n  .\n- This package provides Bitcoin-Qt, a GUI for Bitcoin based on Qt.\n-\n-Package: bitcoin-tx\n-Architecture: any\n-Depends: ${shlibs:Depends}, ${misc:Depends}\n-Description: peer-to-peer digital currency - standalone transaction tool\n- Bitcoin is an experimental new digital currency that enables instant\n- payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer\n- technology to operate with no central authority: managing transactions\n- and issuing money are carried out collectively by the network. Bitcoin Core\n- is the name of the open source software which enables the use of this currency.\n+ By default connects to an IRC network to discover other peers.\n+ .\n+ Full transaction history is stored locally at each client.  This\n+ requires 2+ GB of space, slowly growing.\n  .\n- This package provides bitcoin-tx, a command-line transaction creation\n- tool which can be used without a bitcoin daemon.  Some means of\n- exchanging minimal transaction data with peers is still required.\n+ This package provides Novacoin-Qt, a GUI for Novacoin based on Qt."
      },
      {
        "sha": "b99604913c794116d683cf76dec73a60786692c4",
        "filename": "contrib/debian/copyright",
        "status": "modified",
        "additions": 91,
        "deletions": 60,
        "changes": 151,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/copyright",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/copyright",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/copyright?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,15 +1,24 @@\n-Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/\n+Format: http://svn.debian.org/wsvn/dep/web/deps/dep5.mdwn?rev=174\n Upstream-Name: Bitcoin\n Upstream-Contact: Satoshi Nakamoto <satoshin@gmx.com>\n  irc://#bitcoin@freenode.net\n-Source: https://github.com/bitcoin/bitcoin\n+Source: http://sourceforge.net/projects/bitcoin/files/\n+ https://github.com/bitcoin/bitcoin\n \n Files: *\n-Copyright: 2009-2016, Bitcoin Core Developers\n+Copyright: 2009-2012, Bitcoin Developers\n License: Expat\n-Comment: The Bitcoin Core Developers encompasses the current developers listed on bitcoin.org,\n+Comment: The Bitcoin Developers encompasses the current developers listed on bitcoin.org,\n          as well as the numerous contributors to the project.\n \n+Files: src/json/*\n+Copyright: 2007-2009, John W. Wilkinson\n+License: Expat\n+\n+Files: src/strlcpy.h\n+Copyright: 1998, Todd C. Miller <Todd.Miller@courtesan.com>\n+License: ISC\n+\n Files: debian/*\n Copyright: 2010-2011, Jonas Smedegaard <dr@jones.dk>\n            2011, Matt Corallo <matt@bluematt.me>\n@@ -19,69 +28,60 @@ Files: debian/manpages/*\n Copyright: Micah Anderson <micah@debian.org>\n License: GPL-3+\n \n-Files: src/qt/res/icons/add.png\n-       src/qt/res/icons/address-book.png\n-       src/qt/res/icons/chevron.png\n-       src/qt/res/icons/configure.png\n-       src/qt/res/icons/debugwindow.png\n-       src/qt/res/icons/edit.png\n-       src/qt/res/icons/editcopy.png\n-       src/qt/res/icons/editpaste.png\n-       src/qt/res/icons/export.png\n-       src/qt/res/icons/eye.png\n-       src/qt/res/icons/filesave.png\n-       src/qt/res/icons/history.png\n-       src/qt/res/icons/info.png\n-       src/qt/res/icons/key.png\n-       src/qt/res/icons/lock_*.png\n-       src/qt/res/icons/open.png\n-       src/qt/res/icons/overview.png\n-       src/qt/res/icons/quit.png\n-       src/qt/res/icons/receive.png\n-       src/qt/res/icons/remove.png\n-       src/qt/res/icons/send.png\n-       src/qt/res/icons/synced.png\n-       src/qt/res/icons/transaction*.png\n-       src/qt/res/icons/tx_output.png\n-       src/qt/res/icons/warning.png\n-Copyright: Stephen Hutchings (and more)\n-           http://typicons.com\n+Files: src/qt/res/icons/clock*.png, src/qt/res/icons/tx*.png,\n+       src/qt/res/src/*.svg\n+Copyright: Wladimir van der Laan\n License: Expat\n-Comment: Site: https://github.com/stephenhutchings/typicons.font\n+\n+Files: src/qt/res/icons/address-book.png, src/qt/res/icons/export.png,\n+       src/qt/res/icons/history.png, src/qt/res/icons/key.png,\n+       src/qt/res/icons/lock_*.png, src/qt/res/icons/overview.png,\n+       src/qt/res/icons/receive.png, src/qt/res/icons/send.png,\n+       src/qt/res/icons/synced.png, src/qt/res/icons/filesave.png\n+Copyright: David Vignoni (david@icon-king.com)\n+           ICON KING - www.icon-king.com\n+License: LGPL\n+Comment: NUVOLA ICON THEME for KDE 3.x\n+         Original icons: kaddressbook, klipper_dock, view-list-text,\n+                         key-password, encrypted/decrypted, go-home, go-down,\n+                         go-next, dialog-ok\n+         Site: http://www.icon-king.com/projects/nuvola/\n \n Files: src/qt/res/icons/connect*.png\n-       src/qt/res/src/connect-*.svg\n-Copyright: Marco Falke\n-License: Expat\n-Comment: Inspired by Stephan Hutchings Typicons\n+Copyright: schollidesign\n+License: GPL-3+\n+Comment: Icon Pack: Human-O2\n+         Site: http://findicons.com/icon/93743/blocks_gnome_netstatus_0\n \n-Files: src/qt/res/icons/tx_mined.png\n-       src/qt/res/src/mine.svg\n-       src/qt/res/icons/fontbigger.png\n-       src/qt/res/icons/fontsmaller.png\n-Copyright: Jonas Schnelli\n+Files: src/qt/res/icons/transaction*.png\n+Copyright: md2k7\n License: Expat\n-Comment:\n+Comment: Site: https://bitcointalk.org/index.php?topic=15276.0\n \n-Files: src/qt/res/icons/clock*.png\n-       src/qt/res/icons/eye_*.png\n-       src/qt/res/icons/verify.png\n-       src/qt/res/icons/tx_in*.png\n-       src/qt/res/src/clock_*.svg\n-       src/qt/res/src/tx_*.svg\n-       src/qt/res/src/verify.svg\n-Copyright: Stephan Hutching, Jonas Schnelli\n-License: Expat\n-Comment: Modifications of Stephan Hutchings Typicons\n-\n-Files: src/qt/res/icons/about.png\n-       src/qt/res/icons/bitcoin.*\n-       share/pixmaps/bitcoin*\n-       src/qt/res/src/bitcoin.svg\n-Copyright: Bitboy, Jonas Schnelli\n-License: public-domain\n+Files: src/qt/res/icons/configure.png, src/qt/res/icons/quit.png,\n+      src/qt/res/icons/editcopy.png, src/qt/res/icons/editpaste.png,\n+      src/qt/res/icons/add.png, src/qt/res/icons/edit.png,\n+      src/qt/res/icons/remove.png\n+Copyright: http://www.everaldo.com\n+License: LGPL\n+Comment: Icon Pack: Crystal SVG\n+\n+Files: src/qt/res/icons/bitcoin.png, src/qt/res/icons/toolbar.png\n+Copyright: Bitboy (optimized for 16x16 by Wladimir van der Laan)\n+License: PUB-DOM\n Comment: Site: https://bitcointalk.org/?topic=1756.0\n \n+Files:  scripts/img/reload.xcf, src/qt/res/movies/update_spinner.mng\n+Copyright: Everaldo (Everaldo Coelho)\n+License: GPL-3+\n+Comment: Icon Pack: Kids\n+         Site: http://findicons.com/icon/17102/reload?id=17102\n+\n+Files: src/qt/res/images/splash2.jpg\n+License: PUB-DOM\n+Copyright: Crobbo (forum)\n+Comment: Site: https://bitcointalk.org/index.php?topic=32273.0\n+\n \n License: Expat\n  Permission is hereby granted, free of charge, to any person obtaining a\n@@ -103,6 +103,20 @@ License: Expat\n  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n \n+License: ISC\n+ Permission to use, copy, modify, and distribute this software for any\n+ purpose with or without fee is hereby granted, provided that the above\n+ copyright notice and this permission notice appear in all copies.\n+ .\n+ THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL\n+ WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED\n+ WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR\n+ BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES\n+ OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,\n+ WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,\n+ ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS\n+ SOFTWARE.\n+\n License: GPL-2+\n  This program is free software; you can redistribute it and/or modify it\n  under the terms of the GNU General Public License as published by the\n@@ -131,5 +145,22 @@ Comment:\n  You should have received a copy of the GNU General Public License along\n  with this program.  If not, see <http://www.gnu.org/licenses/>.\n \n-License: public-domain\n+License: LGPL\n+ This program is free software: you can redistribute it and/or modify\n+ it under the terms of the GNU General Public License as published by\n+ the Free Software Foundation, either version 3 of the License, or\n+ (at your option) any later version.\n+ .\n+ This program is distributed in the hope that it will be useful,\n+ but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ GNU General Public License for more details.\n+Comment:\n+ On Debian systems the GNU Lesser General Public License (LGPL) is\n+ located in '/usr/share/common-licenses/LGPL'.\n+ .\n+ You should have received a copy of the GNU General Public License\n+ along with this program.  If not, see <http://www.gnu.org/licenses/>.\n+\n+License: PUB-DOM\n  This work is in the public domain."
      },
      {
        "sha": "2831c072924362be0afc4dd8f953a824923d7704",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 124,
        "changes": 124,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,124 +0,0 @@\n-##\n-## bitcoin.conf configuration file. Lines beginning with # are comments.\n-##\n- \n-# Network-related settings:\n-\n-# Run on the test network instead of the real bitcoin network.\n-#testnet=0\n-\n-# Run a regression test network\n-#regtest=0\n-\n-# Connect via a SOCKS5 proxy\n-#proxy=127.0.0.1:9050\n-\n-# Bind to given address and always listen on it. Use [host]:port notation for IPv6\n-#bind=<addr>\n-\n-# Bind to given address and whitelist peers connecting to it. Use [host]:port notation for IPv6\n-#whitebind=<addr>\n-\n-##############################################################\n-##            Quick Primer on addnode vs connect            ##\n-##  Let's say for instance you use addnode=4.2.2.4          ##\n-##  addnode will connect you to and tell you about the      ##\n-##    nodes connected to 4.2.2.4.  In addition it will tell ##\n-##    the other nodes connected to it that you exist so     ##\n-##    they can connect to you.                              ##\n-##  connect will not do the above when you 'connect' to it. ##\n-##    It will *only* connect you to 4.2.2.4 and no one else.##\n-##                                                          ##\n-##  So if you're behind a firewall, or have other problems  ##\n-##  finding nodes, add some using 'addnode'.                ##\n-##                                                          ##\n-##  If you want to stay private, use 'connect' to only      ##\n-##  connect to \"trusted\" nodes.                             ##\n-##                                                          ##\n-##  If you run multiple nodes on a LAN, there's no need for ##\n-##  all of them to open lots of connections.  Instead       ##\n-##  'connect' them all to one node that is port forwarded   ##\n-##  and has lots of connections.                            ##\n-##       Thanks goes to [Noodle] on Freenode.               ##\n-##############################################################\n-\n-# Use as many addnode= settings as you like to connect to specific peers\n-#addnode=69.164.218.197\n-#addnode=10.0.0.2:8333\n-\n-# Alternatively use as many connect= settings as you like to connect ONLY to specific peers\n-#connect=69.164.218.197\n-#connect=10.0.0.1:8333\n-\n-# Listening mode, enabled by default except when 'connect' is being used\n-#listen=1\n-\n-# Maximum number of inbound+outbound connections.\n-#maxconnections=\n-\n-#\n-# JSON-RPC options (for controlling a running Bitcoin/bitcoind process)\n-#\n-\n-# server=1 tells Bitcoin-Qt and bitcoind to accept JSON-RPC commands\n-#server=0\n-\n-# Bind to given address to listen for JSON-RPC connections. Use [host]:port notation for IPv6.\n-# This option can be specified multiple times (default: bind to all interfaces)\n-#rpcbind=<addr>\n-\n-# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n-#rpcuser=Ulysseys\n-#rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n-\n-# How many seconds bitcoin will wait for a complete RPC HTTP request.\n-# after the HTTP connection is established. \n-#rpcclienttimeout=30\n-\n-# By default, only RPC connections from localhost are allowed.\n-# Specify as many rpcallowip= settings as you like to allow connections from other hosts,\n-# either as a single IPv4/IPv6 or with a subnet specification.\n-\n-# NOTE: opening up the RPC port to hosts outside your local trusted network is NOT RECOMMENDED,\n-# because the rpcpassword is transmitted over the network unencrypted.\n-\n-# server=1 tells Bitcoin-Qt to accept JSON-RPC commands.\n-# it is also read by bitcoind to determine if RPC should be enabled \n-#rpcallowip=10.1.1.34/255.255.255.0\n-#rpcallowip=1.2.3.4/24\n-#rpcallowip=2001:db8:85a3:0:0:8a2e:370:7334/96\n-\n-# Listen for RPC connections on this TCP port:\n-#rpcport=8332\n-\n-# You can use Bitcoin or bitcoind to send commands to Bitcoin/bitcoind\n-# running on another host using this option:\n-#rpcconnect=127.0.0.1\n-\n-# Transaction Fee Changes in 0.10.0\n-\n-# Send transactions as zero-fee transactions if possible (default: 0)\n-#sendfreetransactions=0\n-\n-# Create transactions that have enough fees (or priority) so they are likely to begin confirmation within n blocks (default: 1).\n-# This setting is over-ridden by the -paytxfee option.\n-#txconfirmtarget=n\n-\n-# Miscellaneous options\n-\n-# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n-# both prior transactions and several dozen future transactions.\n-#keypool=100\n-\n-# Pay an optional transaction fee every time you send bitcoins.  Transactions with fees\n-# are more likely than free transactions to be included in generated blocks, so may\n-# be validated sooner.\n-#paytxfee=0.00\n-\n-# User interface options\n-\n-# Start Bitcoin minimized\n-#min=1\n-\n-# Minimize to the system tray\n-#minimizetotray=1"
      },
      {
        "sha": "996b729586996c07c84c23911555c23400f9292f",
        "filename": "contrib/debian/examples/novacoin.conf",
        "status": "added",
        "additions": 81,
        "deletions": 0,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/examples/novacoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/examples/novacoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/novacoin.conf?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,81 @@\n+# novacoin.conf configuration file. Lines beginning with # are comments.\n+\n+\n+# Network-related settings:\n+\n+# Run on the test network instead of the real novacoin network.\n+#testnet=1\n+\n+# Connect via a socks4 proxy\n+#proxy=127.0.0.1:9050\n+\n+# Use as many addnode= settings as you like to connect to specific peers\n+#addnode=188.120.246.137:7997\n+\n+# ... or use as many connect= settings as you like to connect ONLY\n+# to specific peers:\n+#connect=188.120.246.137:7997\n+\n+# Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to\n+# find other peers.\n+#noirc=1\n+\n+# Maximum number of inbound+outbound connections.\n+#maxconnections=\n+\n+\n+# JSON-RPC options (for controlling a running process)\n+\n+# server=1 tells NovaCoin to accept JSON-RPC commands.\n+#server=1\n+\n+# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n+#rpcuser=Ulysseys\n+#rpcpassword=YourSuperGreatPasswordNumber_385593\n+\n+# By default, only RPC connections from localhost are allowed.  Specify\n+# as many rpcallowip= settings as you like to allow connections from\n+# other hosts (and you may use * as a wildcard character):\n+#rpcallowip=10.1.1.34\n+#rpcallowip=192.168.1.*\n+\n+# Listen for RPC connections on this TCP port:\n+rpcport=8332\n+\n+# You can use NovaCoin or novacoind to send commands to Bitcoin/bitcoindNovaCoin/novacoind\n+# running on another host using this option:\n+rpcconnect=127.0.0.1\n+\n+# Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate\n+# with NovaCoin -server or novacoind\n+#rpcssl=1\n+\n+# OpenSSL settings used when rpcssl=1\n+rpcsslciphers=TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH\n+rpcsslcertificatechainfile=server.cert\n+rpcsslprivatekeyfile=server.pem\n+\n+\n+# Miscellaneous options\n+\n+# Set gen=1 to attempt to generate novacoins\n+gen=0\n+\n+# Pre-generate this many public/private key pairs, so wallet backups will be valid for\n+# both prior transactions and several dozen future transactions.\n+keypool=100\n+\n+# Pay an optional transaction fee every time you send novacoins.  \n+paytxfee=0.01\n+\n+# Allow direct connections for the 'pay via IP address' feature.\n+#allowreceivebyip=1\n+\n+\n+# User interface options\n+\n+# Start NovaCoin minimized\n+#min=1\n+\n+# Minimize to the system tray\n+#minimizetotray=1"
      },
      {
        "sha": "16c338dd3e51115c67439c5c1651e8465a3547d3",
        "filename": "contrib/debian/manpages/bitcoin-cli.1",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin-cli.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin-cli.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-cli.1?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-.TH BITCOIN-CLI \"1\" \"February 2016\" \"bitcoin-cli 0.12\"\n-.SH NAME\n-bitcoin-cli \\- a remote procedure call client for Bitcoin Core. \n-.SH SYNOPSIS\n-bitcoin-cli [options] <command> [params] \\- Send command to Bitcoin Core. \n-.TP\n-bitcoin-cli [options] help \\- Asks Bitcoin Core for a list of supported commands.\n-.SH DESCRIPTION\n-This manual page documents the bitcoin-cli program. bitcoin-cli is an RPC client used to send commands to Bitcoin Core.\n-\n-.SH OPTIONS\n-.TP\n-\\fB\\-?\\fR\n-Show possible options.\n-\n-.SH \"SEE ALSO\"\n-\\fBbitcoind\\fP, \\fBbitcoin.conf\\fP\n-.SH AUTHOR\n-This manual page was written by Ciemon Dunville <ciemon@gmail.com>. Permission is granted to copy, distribute and/or modify this document under the terms of the MIT License.\n-\n-The complete text of the MIT License can be found on the web at \\fIhttp://opensource.org/licenses/MIT\\fP."
      },
      {
        "sha": "685a282080e2b664006a27c64c8f09f5b2afed49",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,13 +0,0 @@\n-.TH BITCOIN-QT \"1\" \"February 2016\" \"bitcoin-qt 0.12\"\n-.SH NAME\n-bitcoin-qt \\- peer-to-peer network based digital currency\n-.SH DESCRIPTION\n-.SS \"Usage:\"\n-.IP\n-bitcoin\\-qt [command\\-line options]\n-.SH OPTIONS\n-.TP\n-\\-?\n-List options.\n-.SH \"SEE ALSO\"\n-bitcoind(1)"
      },
      {
        "sha": "839dc26c1aa57da476d26eab3e4271c604540582",
        "filename": "contrib/debian/manpages/bitcoin.conf.5",
        "status": "removed",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin.conf.5?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,19 +0,0 @@\n-.TH BITCOIN.CONF \"5\" \"February 2016\" \"bitcoin.conf 0.12\"\n-.SH NAME\n-bitcoin.conf \\- bitcoin configuration file\n-.SH SYNOPSIS\n-All command-line options (except for '\\-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n-.TP\n-The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character. Please refer to bitcoind(1) for a up to date list of valid options.\n-.TP\n-The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, bitcoind(1) will look for a file named bitcoin.conf(5) in the bitcoin data directory, but both the data directory and the configuration file path may be changed using the '\\-datadir' and '\\-conf' command-line arguments.\n-.SH LOCATION\n-bitcoin.conf should be located in $HOME/.bitcoin\n-\n-.SH \"SEE ALSO\"\n-bitcoind(1)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "5c3e52f441e9ef8eb7ae2261b31f677bcb86cd2d",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,30 +0,0 @@\n-.TH BITCOIND \"1\" \"February 2016\" \"bitcoind 0.12\"\n-.SH NAME\n-bitcoind \\- peer-to-peer network based digital currency\n-.SH SYNOPSIS\n-bitcoin [options] <command> [params]  \n-.TP\n-bitcoin [options] help <command> \\- Get help for a command\n-.SH DESCRIPTION\n-This  manual page documents the bitcoind program. Bitcoin is an experimental new digital currency that enables instant payments to anyone, anywhere in the world. Bitcoin uses peer-to-peer technology to operate with no central authority: managing transactions and issuing money are carried out collectively by the network. Bitcoin Core is the name of open source software which enables the use of this currency.\n-\n-.SH OPTIONS\n-.TP\n-\\-?\n-List of possible options.\n-.SH COMMANDS\n-.TP\n-\\fBhelp\\fR\n-List commands.\n-\n-.TP\n-\\fBhelp 'command'\\fR\n-Get help for a command.\n-\n-.SH \"SEE ALSO\"\n-bitcoin.conf(5)\n-.SH AUTHOR\n-This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n-\n-On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n-"
      },
      {
        "sha": "1901e16ee544f4d59aae245f240840aa0dda424e",
        "filename": "contrib/debian/manpages/novacoin.conf.5",
        "status": "added",
        "additions": 91,
        "deletions": 0,
        "changes": 91,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/manpages/novacoin.conf.5",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/manpages/novacoin.conf.5",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoin.conf.5?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,91 @@\n+.TH NOVACOIN.CONF \"8\" \"April 2013\" \"novacoin.conf 3.19\"\n+.SH NAME\n+novacoin.conf \\- novacoin configuration file\n+.SH SYNOPSIS\n+All command-line options (except for '-datadir' and '-conf') may be specified in a configuration file, and all configuration file options may also be specified on the command line. Command-line options override values set in the configuration file.\n+.TP\n+The configuration file is a list of 'setting=value' pairs, one per line, with optional comments starting with the '#' character.\n+.TP\n+The configuration file is not automatically created; you can create it using your favorite plain-text editor. By default, novacoind(1) will look for a file named novacoin.conf(5) in the novacoin data directory, but both the data directory and the configuration file path may be changed using the '-datadir' and '-conf' command-line arguments.\n+.SH LOCATION\n+novacoin.conf should be located in $HOME/.novacoin\n+.SH NETWORK-RELATED SETTINGS\n+.TP\n+.TP\n+\\fBtestnet=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Enable or disable run on the test network instead of the real *novacoin* network.\n+.TP\n+\\fBproxy=\\fR\\fI'127.0.0.1:9050'\\fR\n+Connect via a socks4 proxy.\n+.TP\n+\\fBaddnode=\\fR\\fI'10.0.0.2:8333'\\fR\n+Use as many *addnode=* settings as you like to connect to specific peers.\n+.TP\n+\\fBconnect=\\fR\\fI'10.0.0.1:8333'\\fR\n+Use as many *connect=* settings as you like to connect ONLY to specific peers.\n+.TP\n+\\fBnoirc=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Use or Do not use Internet Relay Chat (irc.lfnet.org #novacoin channel) to find other peers.\n+.TP\n+\\fRmaxconnections=\\fR\\fI'value'\\fR\n+Maximum number of inbound+outbound connections.\n+.SH JSON-RPC OPTIONS\n+.TP\n+\\fBserver=\\fR[\\fI'1'\\fR|\\fI'0'\\fR]\n+Tells *novacoin* to accept or not accept JSON-RPC commands.\n+.TP\n+\\fBrpcuser=\\fR\\fI'username'\\fR\n+You must set *rpcuser* to secure the JSON-RPC api.\n+.TP\n+\\fBrpcpassword=\\fR\\fI'password'\\fR\n+You must set *rpcpassword* to secure the JSON-RPC api.\n+.TP\n+\\fBrpctimeout=\\fR\\fI'30'\\fR\n+How many seconds *novacoin* will wait for a complete RPC HTTP request, after the HTTP connection is established.\n+.TP\n+\\fBrpcallowip=\\fR\\fI'192.168.1.*'\\fR\n+By default, only RPC connections from localhost are allowed. Specify as many *rpcallowip=* settings as you like to allow connections from other hosts (and you may use * as a wildcard character).\n+.TP\n+\\fBrpcport=\\fR\\fI'8332'\\fR\n+Listen for RPC connections on this TCP port.\n+.TP\n+\\fBrpcconnect=\\fR\\fI'127.0.0.1'\\fR\n+You can use *novacoin* or *novacoind(1)* to send commands to *novacoin*/*novacoind(1)* running on another host using this option.\n+.TP\n+\\fBrpcssl=\\fR\\fI'1'\\fR\n+Use Secure Sockets Layer (also known as TLS or HTTPS) to communicate with *novacoin* '-server' or *novacoind(1)*. Example of OpenSSL settings used when *rpcssl*='1':\n+.TP\n+\\fBrpcsslciphers=\\fR\\fI'TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH'\\fR\n+.TP\n+\\fBrpcsslcertificatechainfile=\\fR\\fI'server.cert'\\fR\n+.TP\n+\\fBrpcsslprivatekeyfile=\\fR\\fI'server.pem'\\fR\n+.TP\n+.SH MISCELLANEOUS OPTIONS\n+.TP\n+\\fBgen=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable attempt to generate novacoins.\n+.TP\n+\\fBkeypool=\\fR\\fI'100'\\fR\n+Pre-generate this many public/private key pairs, so wallet backups will be valid for both prior transactions and several dozen future transactions.\n+.TP\n+\\fBpaytxfee=\\fR\\fI'0.00'\\fR\n+Pay an optional transaction fee every time you send novacoins. Transactions with fees are more likely than free transactions to be included in generated blocks, so may be validated sooner.\n+.TP\n+\\fBallowreceivebyip=\\fR\\fI'1'\\fR\n+Allow direct connections for the 'pay via IP address' feature.\n+.TP\n+.SH USER INTERFACE OPTIONS\n+.TP\n+\\fBmin=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable start novacoind minimized.\n+.TP\n+\\fBminimizetotray=\\fR[\\fI'0'\\fR|\\fI'1'\\fR]\n+Enable or disable minimize to the system tray.\n+.SH \"SEE ALSO\"\n+novacoind(1)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "b8199c21022f531265ca8f2ad2106554ef3a33e2",
        "filename": "contrib/debian/manpages/novacoind.1",
        "status": "added",
        "additions": 206,
        "deletions": 0,
        "changes": 206,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/manpages/novacoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/manpages/novacoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/novacoind.1?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,206 @@\n+.TH NOVACOIND \"7\" \"April 2013\" \"novacoind 3.19\" \n+.SH NAME\n+novacoind \\- peer-to-peer network based digital currency\n+.SH SYNOPSIS\n+novacoin [options] <command> [params]  \n+.TP\n+novacoin [options] help <command> - Get help for a command\n+.SH DESCRIPTION\n+This  manual page documents the novacoind program. Novacoin is a peer-to-peer digital currency. Peer-to-peer (P2P) means that there is no central authority to issue new money or keep track of transactions. Instead, these tasks are managed collectively by the nodes of the network. Advantages:\n+\n+Novacoins can be sent easily through the Internet, without having to trust middlemen. Transactions are designed to be irreversible. Be safe from instability caused by fractional reserve banking and central banks. The limited inflation of the Novacoin system\u2019s money supply is distributed evenly (by CPU power) throughout the network, not monopolized by banks.\n+\n+.SH OPTIONS\n+.TP\n+\\fB\\-conf=\\fR<file>\n+Specify configuration file (default: novacoin.conf)\n+.TP\n+\\fB\\-gen\\fR\n+Generate coins\n+.TP\n+\\fB\\-gen\\fR=\\fI0\\fR\n+Don't generate coins\n+.TP\n+\\fB\\-min\\fR\n+Start minimized\n+.TP\n+\\fB\\-datadir=\\fR<dir>\n+Specify data directory\n+.TP\n+\\fB\\-proxy=\\fR<ip:port>\n+Connect through socks4 proxy\n+.TP\n+\\fB\\-addnode=\\fR<ip>\n+Add a node to connect to\n+.TP\n+\\fB\\-connect=\\fR<ip>\n+Connect only to the specified node\n+.TP\n+\\fB\\-paytxfee=\\fR<amt>\n+Fee per KB to add to transactions you send\n+.TP\n+\\fB\\-server\\fR\n+Accept command line and JSON\\-RPC commands\n+.TP\n+\\fB\\-daemon\\fR\n+Run in the background as a daemon and accept commands\n+.TP\n+\\fB\\-testnet\\fR\n+Use the test network\n+.TP\n+\\fB\\-rpcuser=\\fR<user>\n+Username for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcpassword=\\fR<pw>\n+Password for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcport=\\fR<port>\n+Listen for JSON\\-RPC connections on <port>\n+.TP\n+\\fB\\-rpcallowip=\\fR<ip>\n+Allow JSON\\-RPC connections from specified IP address\n+.TP\n+\\fB\\-rpcconnect=\\fR<ip>\n+Send commands to node running on <ip>\n+.PP\n+SSL options: (see the Bitcoin Wiki for SSL setup instructions)\n+.TP\n+\\fB\\-rpcssl\\fR=\\fI1\\fR\n+Use OpenSSL (https) for JSON\\-RPC connections\n+.TP\n+\\fB\\-rpcsslcertificatchainfile=\\fR<file.cert>\n+Server certificate file (default: server.cert)\n+.TP\n+\\fB\\-rpcsslprivatekeyfile=\\fR<file.pem>\n+Server private key (default: server.pem)\n+.TP\n+\\fB\\-rpcsslciphers=\\fR<ciphers>\n+Acceptable ciphers (default: TLSv1+HIGH:!SSLv2:!aNULL:!eNULL:!AH:!3DES:@STRENGTH)\n+.TP\n+\\-?\n+This help message\n+.SH COMMANDS\n+.TP\n+\\fBbackupwallet 'destination'\\fR\n+Safely copies *wallet.dat* to 'destination', which can be a directory or a path with filename.\n+.TP\n+\\fBgetaccount 'novacoinaddress'\\fR\n+Returns the account associated with the given address.\n+.TP\n+\\fBsetaccount 'novacoinaddress' ['account']\\fR\n+Sets the ['account'] associated with the given address. ['account'] may be omitted to remove an address from ['account'].\n+.TP\n+\\fBgetaccountaddress 'account'\\fR\n+Returns a new novacoin address for 'account'.\n+.TP\n+\\fBgetaddressesbyaccount 'account'\\fR\n+Returns the list of addresses associated with the given 'account'.\n+.TP\n+\\fBgetbalance 'account'\\fR\n+Returns the server's available balance, or the balance for 'account'.\n+.TP\n+\\fBgetblockcount\\fR\n+Returns the number of blocks in the longest block chain.\n+.TP\n+\\fBgetblocknumber\\fR\n+Returns the block number of the latest block in the longest block chain.\n+.TP\n+\\fBgetconnectioncount\\fR\n+Returns the number of connections to other nodes.\n+.TP\n+\\fBgetdifficulty\\fR\n+Returns the proof-of-work difficulty as a multiple of the minimum difficulty.\n+.TP\n+\\fBgetgenerate\\fR\n+Returns boolean true if server is trying to generate novacoins, false otherwise.\n+.TP\n+\\fBsetgenerate 'generate' ['genproclimit']\\fR\n+Generation is limited to ['genproclimit'] processors, -1 is unlimited.\n+.TP\n+\\fBgethashespersec\\fR\n+Returns a recent hashes per second performance measurement while generating.\n+.TP\n+\\fBgetinfo\\fR\n+Returns an object containing server information.\n+.TP\n+\\fBgetnewaddress 'account'\\fR\n+Returns a new novacoin address for receiving payments. If 'account' is specified (recommended), it is added to the address book so payments received with the address will be credited to 'account'.\n+.TP\n+\\fBgetreceivedbyaccount 'account' ['minconf=1']\\fR\n+Returns the total amount received by addresses associated with 'account' in transactions with at least ['minconf'] confirmations.\n+.TP\n+\\fBgetreceivedbyaddress 'novacoinaddress' ['minconf=1']\\fR\n+Returns the total amount received by 'novacoinaddress' in transactions with at least ['minconf'] confirmations.\n+.TP\n+\\fBgettransaction 'txid'\\fR\n+Returns information about a specific transaction, given hexadecimal transaction ID.\n+.TP\n+\\fBgetwork 'data'\\fR\n+If 'data' is specified, tries to solve the block and returns true if it was successful. If 'data' is not specified, returns formatted hash 'data' to work on:\n+\n+    \"midstate\" : precomputed hash state after hashing the first half of the data.\n+    \"data\"     : block data.\n+    \"hash1\"    : formatted hash buffer for second hash.\n+    \"target\"   : little endian hash target.\n+.TP\n+\\fBhelp 'command'\\fR\n+List commands, or get help for a command.\n+.TP\n+\\fBlistaccounts ['minconf=1']\\fR\n+List accounts and their current balances.\n+.TP\n+\\fBlistreceivedbyaccount ['minconf=1'] ['includeempty=false']\\fR\n+['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n+\n+    \"account\"       : the account of the receiving address.\n+    \"amount\"        : total amount received by the address.\n+    \"confirmations\" : number of confirmations of the most recent transaction included.\n+.TP\n+\\fBlistreceivedbyaddress ['minconf=1'] ['includeempty=false']\\fR\n+['minconf'] is the minimum number of confirmations before payments are included. ['includeempty'] whether to include addresses that haven't received any payments. Returns an array of objects containing:\n+\n+    \"address\"       : receiving address.\n+    \"account\"       : the account of the receiving address.\n+    \"amount\"        : total amount received by the address.\n+    \"confirmations\" : number of confirmations of the most recent transaction included.\n+.TP\n+\\fBlisttransactions 'account' ['count=10']\\fR\n+Returns a list of the last ['count'] transactions for 'account' - for all accounts if 'account' is not specified or is \"*\". Each entry in the list may contain:\n+\n+    \"category\"      : will be generate, send, receive, or move.\n+    \"amount\"        : amount of transaction.\n+    \"fee\"           : Fee (if any) paid (only for send transactions).\n+    \"confirmations\" : number of confirmations (only for generate/send/receive).\n+    \"txid\"          : transaction ID (only for generate/send/receive).\n+    \"otheraccount\"  : account funds were moved to or from (only for move).\n+    \"message\"       : message associated with transaction (only for send).\n+    \"to\"            : message-to associated with transaction (only for send).\n+.TP\n+\\fBmove <'fromaccount'> <'toaccount'> <'amount'> ['minconf=1'] ['comment']\\fR\n+Moves funds between accounts.\n+.TP\n+\\fBsendfrom* <'account'> <'novacoinaddress'> <'amount'> ['minconf=1'] ['comment'] ['comment-to']\\fR\n+Sends amount from account's balance to 'novacoinaddress'. This method will fail if there is less than amount novacoins with ['minconf'] confirmations in the account's balance (unless account is the empty-string-named default account; it behaves like the *sendtoaddress* method). Returns transaction ID on success.\n+.TP     \n+\\fBsendtoaddress 'novacoinaddress' 'amount' ['comment'] ['comment-to']\\fR\n+Sends amount from the server's available balance to 'novacoinaddress'. amount is a real and is rounded to the nearest 0.01. Returns transaction id on success.\n+.TP    \n+\\fBstop\\fR\n+Stops the novacoin server.\n+.TP    \n+\\fBvalidateaddress 'novacoinaddress'\\fR\n+Checks that 'novacoinaddress' looks like a proper novacoin address. Returns an object containing:\n+\n+    \"isvalid\" : true or false.\n+    \"ismine\"  : true if the address is in the server's wallet.\n+    \"address\" : novacoinaddress.\n+\n+    *note: ismine and address are only returned if the address is valid.\n+\n+.SH \"SEE ALSO\"\n+novacoin.conf(5)\n+.SH AUTHOR\n+This manual page was written by Micah Anderson <micah@debian.org> for the Debian system (but may be used by others). Permission is granted to copy, distribute and/or modify this document under the terms of the GNU General Public License, Version 3 or any later version published by the Free Software Foundation.\n+\n+On Debian systems, the complete text of the GNU General Public License can be found in /usr/share/common-licenses/GPL.\n+"
      },
      {
        "sha": "a299232d251f968b59c3866288ae6dab5fadce3b",
        "filename": "contrib/debian/novacoin-qt.desktop",
        "status": "added",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.desktop",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.desktop",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.desktop?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,12 @@\n+[Desktop Entry]\n+Encoding=UTF-8\n+Name=NovaCoin\n+Comment=NovaCoin P2P Cryptocurrency\n+Comment[fr]=NovaCoin, monnaie virtuelle cryptographique pair \u00e0 pair\n+Comment[tr]=NovaCoin, e\u015ften e\u015fe kriptografik sanal para birimi\n+Exec=/usr/bin/novacoin-qt\n+Terminal=false\n+Type=Application\n+Icon=/usr/share/pixmaps/bitcoin80.xpm\n+MimeType=x-scheme-handler/novacoin;\n+Categories=Office;"
      },
      {
        "sha": "403fb4e2c44bd9a3f3acbca7d8aebba2a337bc1a",
        "filename": "contrib/debian/novacoin-qt.install",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.install?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,5 @@\n+novacoin-qt usr/bin\n+share/pixmaps/bitcoin32.xpm usr/share/pixmaps\n+share/pixmaps/bitcoin80.xpm usr/share/pixmaps\n+debian/novacoin-qt.desktop usr/share/applications\n+debian/novacoin-qt.protocol usr/share/kde4/services/"
      },
      {
        "sha": "3e159d38fdca6ccacd45e9bc9c65a992480a9f95",
        "filename": "contrib/debian/novacoin-qt.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.lintian-overrides?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+novacoin-qt: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "29a45469f4621aea1d6dcb87745f7f3cec9eb082",
        "filename": "contrib/debian/novacoin-qt.protocol",
        "status": "added",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.protocol",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoin-qt.protocol",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoin-qt.protocol?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,11 @@\n+[Protocol]\n+exec=novacoin-qt '%u'\n+protocol=novacoin\n+input=none\n+output=none\n+helper=true\n+listing=\n+reading=false\n+writing=false\n+makedir=false\n+deleting=false"
      },
      {
        "sha": "3728af9dd7af76b51d4fb9bad487b2a2f7f20772",
        "filename": "contrib/debian/novacoind.examples",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.examples",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.examples",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.examples?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1 @@\n+debian/examples/novacoin.conf"
      },
      {
        "sha": "b44acca382276c2e3d7d16f9bb8be53a523a36ee",
        "filename": "contrib/debian/novacoind.install",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.install",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.install",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.install?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,2 @@\n+debian/bin/novacoind usr/bin\n+src/novacoind usr/lib/novacoin"
      },
      {
        "sha": "e44a58f992cdbeb852bc56cc1e6d98bfafe7deab",
        "filename": "contrib/debian/novacoind.lintian-overrides",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.lintian-overrides",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.lintian-overrides",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.lintian-overrides?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,2 @@\n+# Linked code is Expat - only Debian packaging is GPL-2+\n+novacoind: possible-gpl-code-linked-with-openssl"
      },
      {
        "sha": "15116c8db664397df5da16a94aeb8cc7102db9a5",
        "filename": "contrib/debian/novacoind.manpages",
        "status": "added",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.manpages",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/novacoind.manpages",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/novacoind.manpages?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,2 @@\n+debian/manpages/novacoind.1\n+debian/manpages/novacoin.conf.5"
      },
      {
        "sha": "239dcf21bfa1ebe1ff2f602b44fde57e60d08974",
        "filename": "contrib/debian/rules",
        "status": "modified",
        "additions": 17,
        "deletions": 8,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/rules",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/rules",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/rules?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -5,20 +5,29 @@\n #build/bitcoind::\n #\t$(if $(filter nocheck,$(DEB_BUILD_OPTIONS)),,src/test_bitcoin)\n \n-DEB_INSTALL_EXAMPLES_bitcoind += debian/examples/*\n-DEB_INSTALL_MANPAGES_bitcoind += debian/manpages/*\n+DEB_INSTALL_EXAMPLES_novacoind += debian/examples/*\n+DEB_INSTALL_MANPAGES_novacoind += debian/manpages/*\n \n %:\n \tdh --with bash-completion $@\n \n+override_dh_auto_build:\n+\tcd src; $(MAKE) -f makefile.unix novacoind\n+\t$(MAKE)\n+\n override_dh_auto_clean:\n-\tif [ -f Makefile ]; then $(MAKE) distclean; fi\n-\trm -rf Makefile.in aclocal.m4 configure src/Makefile.in src/bitcoin-config.h.in src/build-aux src/qt/Makefile.in src/qt/test/Makefile.in src/test/Makefile.in\n+\tif [ -f Makefile ]; then $(MAKE) clean; else rm -rf build/; rm -f novacoin-qt; fi\n+\tcd src; $(MAKE) -f makefile.unix clean\n \n-# Yea, autogen should be run on the source archive, but I like doing git archive\n override_dh_auto_configure:\n-\t./autogen.sh\n-\t./configure\n+\tqmake novacoin-qt.pro USE_QRCODE=1\n \n override_dh_auto_test:\n-\tmake check\n+\tcd src; $(MAKE) -f makefile.unix test_novacoin\n+\tsrc/test_novacoin\n+\n+# Ensure wrapper is set executable\n+binary-post-install/novacoind:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/novacoind\n+binary-post-install/novacoin-qt:\n+\tchmod +x $(cdbs_curdestdir)usr/bin/novacoin-qt"
      },
      {
        "sha": "5da4e007a7cdd18da4edbc305297b530acc2dc34",
        "filename": "contrib/debian/watch",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/watch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/debian/watch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/watch?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,5 +1,4 @@\n # Run the \"uscan\" command to check for upstream updates and more.\n-version=3\n-# use qa.debian.org redirector; see man uscan\n+version=4\n opts=uversionmangle=s/(\\d)(alpha|beta|rc)/$1~$2/,dversionmangle=s/~dfsg\\d*// \\\n- http://githubredir.debian.net/github/bitcoin/bitcoin v(.*).tar.gz\n+ http://githubredir.debian.net/github/CryptoManiac/novacoin v(.*).tar.gz"
      },
      {
        "sha": "1103ca86c5e82a719bee3b6fa58cee9b53394f3b",
        "filename": "contrib/devtools/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 134,
        "changes": 134,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,134 +0,0 @@\n-Contents\n-========\n-This directory contains tools for developers working on this repository.\n-\n-check-doc.py\n-============\n-\n-Check if all command line args are documented. The return value indicates the\n-number of undocumented args.\n-\n-clang-format.py\n-===============\n-\n-A script to format cpp source code according to [.clang-format](../../src/.clang-format). This should only be applied to new files or files which are currently not actively developed on. Also, git subtrees are not subject to formatting.\n-\n-clang-format-diff.py\n-===================\n-\n-A script to format unified git diffs according to [.clang-format](../../src/.clang-format).\n-\n-For instance, to format the last commit with 0 lines of context,\n-the script should be called from the git root folder as follows.\n-\n-```\n-git diff -U0 HEAD~1.. | ./contrib/devtools/clang-format-diff.py -p1 -i -v\n-```\n-\n-fix-copyright-headers.py\n-========================\n-\n-Every year newly updated files need to have its copyright headers updated to reflect the current year.\n-If you run this script from the root folder it will automatically update the year on the copyright header for all\n-source files if these have a git commit from the current year.\n-\n-For example a file changed in 2015 (with 2015 being the current year):\n-\n-```// Copyright (c) 2009-2013 The Bitcoin Core developers```\n-\n-would be changed to:\n-\n-```// Copyright (c) 2009-2015 The Bitcoin Core developers```\n-\n-git-subtree-check.sh\n-====================\n-\n-Run this script from the root of the repository to verify that a subtree matches the contents of\n-the commit it claims to have been updated to.\n-\n-To use, make sure that you have fetched the upstream repository branch in which the subtree is\n-maintained:\n-* for `src/secp256k1`: https://github.com/bitcoin/secp256k1.git (branch master)\n-* for `src/leveldb`: https://github.com/bitcoin/leveldb.git (branch bitcoin-fork)\n-* for `src/univalue`: https://github.com/bitcoin/univalue.git (branch master)\n-\n-Usage: `git-subtree-check.sh DIR COMMIT`\n-\n-`COMMIT` may be omitted, in which case `HEAD` is used.\n-\n-github-merge.py\n-===============\n-\n-A small script to automate merging pull-requests securely and sign them with GPG.\n-\n-For example:\n-\n-  ./github-merge.py 3077\n-\n-(in any git repository) will help you merge pull request #3077 for the\n-bitcoin/bitcoin repository.\n-\n-What it does:\n-* Fetch master and the pull request.\n-* Locally construct a merge commit.\n-* Show the diff that merge results in.\n-* Ask you to verify the resulting source tree (so you can do a make\n-check or whatever).\n-* Ask you whether to GPG sign the merge commit.\n-* Ask you whether to push the result upstream.\n-\n-This means that there are no potential race conditions (where a\n-pullreq gets updated while you're reviewing it, but before you click\n-merge), and when using GPG signatures, that even a compromised github\n-couldn't mess with the sources.\n-\n-Setup\n----------\n-Configuring the github-merge tool for the bitcoin repository is done in the following way:\n-\n-    git config githubmerge.repository bitcoin/bitcoin\n-    git config githubmerge.testcmd \"make -j4 check\" (adapt to whatever you want to use for testing)\n-    git config --global user.signingkey mykeyid (if you want to GPG sign)\n-\n-optimize-pngs.py\n-================\n-\n-A script to optimize png files in the bitcoin\n-repository (requires pngcrush).\n-\n-security-check.py and test-security-check.py\n-============================================\n-\n-Perform basic ELF security checks on a series of executables.\n-\n-symbol-check.py\n-===============\n-\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols. This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage after a gitian build:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py \n-\n-If only supported symbols are used the return value will be 0 and the output will be empty.\n-\n-If there are 'unsupported' symbols, the return value will be 1 a list like this will be printed:\n-\n-    .../64/test_bitcoin: symbol memcpy from unsupported version GLIBC_2.14\n-    .../64/test_bitcoin: symbol __fdelt_chk from unsupported version GLIBC_2.15\n-    .../64/test_bitcoin: symbol std::out_of_range::~out_of_range() from unsupported version GLIBCXX_3.4.15\n-    .../64/test_bitcoin: symbol _ZNSt8__detail15_List_nod from unsupported version GLIBCXX_3.4.15\n-\n-update-translations.py\n-======================\n-\n-Run this script from the root of the repository to update all translations from transifex.\n-It will do the following automatically:\n-\n-- fetch all translations\n-- post-process them into valid and committable format\n-- add missing translations to the build system (TODO)\n-\n-See doc/translation-process.md for more information."
      },
      {
        "sha": "8c73cf1e8a735daf9eb1180e86ea164ac224b0f0",
        "filename": "contrib/devtools/check-doc.py",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/check-doc.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/check-doc.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/check-doc.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,45 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-'''\n-This checks if all command line args are documented.\n-Return value is 0 to indicate no error.\n-\n-Author: @MarcoFalke\n-'''\n-\n-from subprocess import check_output\n-import re\n-\n-FOLDER_GREP = 'src'\n-FOLDER_TEST = 'src/test/'\n-CMD_ROOT_DIR = '`git rev-parse --show-toplevel`/%s' % FOLDER_GREP\n-CMD_GREP_ARGS = r\"egrep -r -I '(map(Multi)?Args(\\.count\\(|\\[)|Get(Bool)?Arg\\()\\\"\\-[^\\\"]+?\\\"' %s | grep -v '%s'\" % (CMD_ROOT_DIR, FOLDER_TEST)\n-CMD_GREP_DOCS = r\"egrep -r -I 'HelpMessageOpt\\(\\\"\\-[^\\\"=]+?(=|\\\")' %s\" % (CMD_ROOT_DIR)\n-REGEX_ARG = re.compile(r'(?:map(?:Multi)?Args(?:\\.count\\(|\\[)|Get(?:Bool)?Arg\\()\\\"(\\-[^\\\"]+?)\\\"')\n-REGEX_DOC = re.compile(r'HelpMessageOpt\\(\\\"(\\-[^\\\"=]+?)(?:=|\\\")')\n-# list unsupported, deprecated and duplicate args as they need no documentation\n-SET_DOC_OPTIONAL = set(['-rpcssl', '-benchmark', '-h', '-help', '-socks', '-tor', '-debugnet', '-whitelistalwaysrelay'])\n-\n-def main():\n-  used = check_output(CMD_GREP_ARGS, shell=True)\n-  docd = check_output(CMD_GREP_DOCS, shell=True)\n-\n-  args_used = set(re.findall(REGEX_ARG,used))\n-  args_docd = set(re.findall(REGEX_DOC,docd)).union(SET_DOC_OPTIONAL)\n-  args_need_doc = args_used.difference(args_docd)\n-  args_unknown = args_docd.difference(args_used)\n-\n-  print \"Args used        : %s\" % len(args_used)\n-  print \"Args documented  : %s\" % len(args_docd)\n-  print \"Args undocumented: %s\" % len(args_need_doc)\n-  print args_need_doc\n-  print \"Args unknown     : %s\" % len(args_unknown)\n-  print args_unknown\n-\n-  exit(len(args_need_doc))\n-\n-if __name__ == \"__main__\":\n-    main()"
      },
      {
        "sha": "13d2573b9ff874e0c536e246b6f94310b7c7587f",
        "filename": "contrib/devtools/clang-format-diff.py",
        "status": "removed",
        "additions": 0,
        "deletions": 164,
        "changes": 164,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/clang-format-diff.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/clang-format-diff.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format-diff.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,164 +0,0 @@\n-#!/usr/bin/env python\n-#\n-#===- clang-format-diff.py - ClangFormat Diff Reformatter ----*- python -*--===#\n-#\n-#                     The LLVM Compiler Infrastructure\n-#\n-# This file is distributed under the University of Illinois Open Source\n-# License.\n-#\n-#           ============================================================\n-#\n-# University of Illinois/NCSA\n-# Open Source License\n-#\n-# Copyright (c) 2007-2015 University of Illinois at Urbana-Champaign.\n-# All rights reserved.\n-#\n-# Developed by:\n-#\n-#     LLVM Team\n-#\n-#     University of Illinois at Urbana-Champaign\n-#\n-#     http://llvm.org\n-#\n-# Permission is hereby granted, free of charge, to any person obtaining a copy of\n-# this software and associated documentation files (the \"Software\"), to deal with\n-# the Software without restriction, including without limitation the rights to\n-# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\n-# of the Software, and to permit persons to whom the Software is furnished to do\n-# so, subject to the following conditions:\n-#\n-#     * Redistributions of source code must retain the above copyright notice,\n-#       this list of conditions and the following disclaimers.\n-#\n-#     * Redistributions in binary form must reproduce the above copyright notice,\n-#       this list of conditions and the following disclaimers in the\n-#       documentation and/or other materials provided with the distribution.\n-#\n-#     * Neither the names of the LLVM Team, University of Illinois at\n-#       Urbana-Champaign, nor the names of its contributors may be used to\n-#       endorse or promote products derived from this Software without specific\n-#       prior written permission.\n-#\n-# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n-# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n-# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n-# CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n-# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n-# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS WITH THE\n-# SOFTWARE.\n-#\n-#           ============================================================\n-#\n-#===------------------------------------------------------------------------===#\n-\n-r\"\"\"\n-ClangFormat Diff Reformatter\n-============================\n-\n-This script reads input from a unified diff and reformats all the changed\n-lines. This is useful to reformat all the lines touched by a specific patch.\n-Example usage for git/svn users:\n-\n-  git diff -U0 HEAD^ | clang-format-diff.py -p1 -i\n-  svn diff --diff-cmd=diff -x-U0 | clang-format-diff.py -i\n-\n-\"\"\"\n-\n-import argparse\n-import difflib\n-import re\n-import string\n-import subprocess\n-import StringIO\n-import sys\n-\n-\n-# Change this to the full path if clang-format is not on the path.\n-binary = 'clang-format'\n-\n-\n-def main():\n-  parser = argparse.ArgumentParser(description=\n-                                   'Reformat changed lines in diff. Without -i '\n-                                   'option just output the diff that would be '\n-                                   'introduced.')\n-  parser.add_argument('-i', action='store_true', default=False,\n-                      help='apply edits to files instead of displaying a diff')\n-  parser.add_argument('-p', metavar='NUM', default=0,\n-                      help='strip the smallest prefix containing P slashes')\n-  parser.add_argument('-regex', metavar='PATTERN', default=None,\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case sensitive, overrides -iregex)')\n-  parser.add_argument('-iregex', metavar='PATTERN', default=\n-                      r'.*\\.(cpp|cc|c\\+\\+|cxx|c|cl|h|hpp|m|mm|inc|js|ts|proto'\n-                      r'|protodevel|java)',\n-                      help='custom pattern selecting file paths to reformat '\n-                      '(case insensitive, overridden by -regex)')\n-  parser.add_argument('-sort-includes', action='store_true', default=False,\n-                      help='let clang-format sort include blocks')\n-  parser.add_argument('-v', '--verbose', action='store_true',\n-                      help='be more verbose, ineffective without -i')\n-  args = parser.parse_args()\n-\n-  # Extract changed lines for each file.\n-  filename = None\n-  lines_by_file = {}\n-  for line in sys.stdin:\n-    match = re.search('^\\+\\+\\+\\ (.*?/){%s}(\\S*)' % args.p, line)\n-    if match:\n-      filename = match.group(2)\n-    if filename == None:\n-      continue\n-\n-    if args.regex is not None:\n-      if not re.match('^%s$' % args.regex, filename):\n-        continue\n-    else:\n-      if not re.match('^%s$' % args.iregex, filename, re.IGNORECASE):\n-        continue\n-\n-    match = re.search('^@@.*\\+(\\d+)(,(\\d+))?', line)\n-    if match:\n-      start_line = int(match.group(1))\n-      line_count = 1\n-      if match.group(3):\n-        line_count = int(match.group(3))\n-      if line_count == 0:\n-        continue\n-      end_line = start_line + line_count - 1;\n-      lines_by_file.setdefault(filename, []).extend(\n-          ['-lines', str(start_line) + ':' + str(end_line)])\n-\n-  # Reformat files containing changes in place.\n-  for filename, lines in lines_by_file.iteritems():\n-    if args.i and args.verbose:\n-      print 'Formatting', filename\n-    command = [binary, filename]\n-    if args.i:\n-      command.append('-i')\n-    if args.sort_includes:\n-      command.append('-sort-includes')\n-    command.extend(lines)\n-    command.extend(['-style=file', '-fallback-style=none'])\n-    p = subprocess.Popen(command, stdout=subprocess.PIPE,\n-                         stderr=None, stdin=subprocess.PIPE)\n-    stdout, stderr = p.communicate()\n-    if p.returncode != 0:\n-      sys.exit(p.returncode);\n-\n-    if not args.i:\n-      with open(filename) as f:\n-        code = f.readlines()\n-      formatted_code = StringIO.StringIO(stdout).readlines()\n-      diff = difflib.unified_diff(code, formatted_code,\n-                                  filename, filename,\n-                                  '(before formatting)', '(after formatting)')\n-      diff_string = string.join(diff, '')\n-      if len(diff_string) > 0:\n-        sys.stdout.write(diff_string)\n-\n-if __name__ == '__main__':\n-  main()"
      },
      {
        "sha": "cee99047ac67e69fe767a910ac56811e574cfc8d",
        "filename": "contrib/devtools/clang-format.py",
        "status": "removed",
        "additions": 0,
        "deletions": 62,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/clang-format.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/clang-format.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/clang-format.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,62 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Wrapper script for clang-format\n-\n-Copyright (c) 2015 MarcoFalke\n-Copyright (c) 2015 The Bitcoin Core developers\n-Distributed under the MIT software license, see the accompanying\n-file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-\n-import os\n-import sys\n-import subprocess\n-\n-tested_versions = ['3.6.0', '3.6.1', '3.6.2'] # A set of versions known to produce the same output\n-accepted_file_extensions = ('.h', '.cpp') # Files to format\n-\n-def check_clang_format_version(clang_format_exe):\n-    try:\n-        output = subprocess.check_output([clang_format_exe, '-version'])\n-        for ver in tested_versions:\n-            if ver in output:\n-                print \"Detected clang-format version \" + ver\n-                return\n-        raise RuntimeError(\"Untested version: \" + output)\n-    except Exception as e:\n-        print 'Could not verify version of ' + clang_format_exe + '.'\n-        raise e\n-\n-def check_command_line_args(argv):\n-    required_args = ['{clang-format-exe}', '{files}']\n-    example_args = ['clang-format-3.x', 'src/main.cpp', 'src/wallet/*']\n-\n-    if(len(argv) < len(required_args) + 1):\n-        for word in (['Usage:', argv[0]] + required_args):\n-            print word,\n-        print ''\n-        for word in (['E.g:', argv[0]] + example_args):\n-            print word,\n-        print ''\n-        sys.exit(1)\n-\n-def run_clang_format(clang_format_exe, files):\n-    for target in files:\n-        if os.path.isdir(target):\n-            for path, dirs, files in os.walk(target):\n-                run_clang_format(clang_format_exe, (os.path.join(path, f) for f in files))\n-        elif target.endswith(accepted_file_extensions):\n-            print \"Format \" + target\n-            subprocess.check_call([clang_format_exe, '-i', '-style=file', target], stdout=open(os.devnull, 'wb'), stderr=subprocess.STDOUT)\n-        else:\n-            print \"Skip \" + target\n-\n-def main(argv):\n-    check_command_line_args(argv)\n-    clang_format_exe = argv[1]\n-    files = argv[2:]\n-    check_clang_format_version(clang_format_exe)\n-    run_clang_format(clang_format_exe, files)\n-\n-if __name__ == \"__main__\":\n-    main(sys.argv)"
      },
      {
        "sha": "b6414a551f8707a032e3f310ea9d1f9badec20e2",
        "filename": "contrib/devtools/fix-copyright-headers.py",
        "status": "removed",
        "additions": 0,
        "deletions": 46,
        "changes": 46,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/fix-copyright-headers.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/fix-copyright-headers.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/fix-copyright-headers.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,46 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Run this script to update all the copyright headers of files\n-that were changed this year.\n-\n-For example:\n-\n-// Copyright (c) 2009-2012 The Bitcoin Core developers\n-\n-it will change it to\n-\n-// Copyright (c) 2009-2015 The Bitcoin Core developers\n-'''\n-import os\n-import time\n-import re\n-\n-year = time.gmtime()[0]\n-CMD_GIT_DATE = 'git log --format=@%%at -1 %s | date +\"%%Y\" -u -f -'\n-CMD_REGEX= \"perl -pi -e 's/(20\\d\\d)(?:-20\\d\\d)? The Bitcoin/$1-%s The Bitcoin/' %s\"\n-REGEX_CURRENT= re.compile(\"%s The Bitcoin\" % year)\n-CMD_LIST_FILES= \"find %s | grep %s\"\n-\n-FOLDERS = [\"./qa\", \"./src\"]\n-EXTENSIONS = [\".cpp\",\".h\", \".py\"]\n-\n-def get_git_date(file_path):\n-  r = os.popen(CMD_GIT_DATE % file_path)\n-  for l in r:\n-    # Result is one line, so just return\n-    return l.replace(\"\\n\",\"\")\n-  return \"\"\n-\n-n=1\n-for folder in FOLDERS:\n-  for extension in EXTENSIONS:\n-    for file_path in os.popen(CMD_LIST_FILES % (folder, extension)):\n-      file_path = os.getcwd() + file_path[1:-1]\n-      if file_path.endswith(extension):\n-        git_date = get_git_date(file_path)\n-        if str(year) == git_date:\n-          # Only update if current year is not found\n-          if REGEX_CURRENT.search(open(file_path, \"r\").read()) is None:\n-            print n,\"Last git edit\", git_date, \"-\", file_path\n-            os.popen(CMD_REGEX % (year,file_path))\n-            n = n + 1"
      },
      {
        "sha": "1cb82fe6826c74af49cf381ecaf5381ab210bdb7",
        "filename": "contrib/devtools/git-subtree-check.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 74,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/git-subtree-check.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/git-subtree-check.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/git-subtree-check.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,74 +0,0 @@\n-#!/bin/sh\n-\n-DIR=\"$1\"\n-COMMIT=\"$2\"\n-if [ -z \"$COMMIT\" ]; then\n-    COMMIT=HEAD\n-fi\n-\n-# Taken from git-subtree (Copyright (C) 2009 Avery Pennarun <apenwarr@gmail.com>)\n-find_latest_squash()\n-{\n-\tdir=\"$1\"\n-\tsq=\n-\tmain=\n-\tsub=\n-\tgit log --grep=\"^git-subtree-dir: $dir/*\\$\" \\\n-\t\t--pretty=format:'START %H%n%s%n%n%b%nEND%n' \"$COMMIT\" |\n-\twhile read a b junk; do\n-\t\tcase \"$a\" in\n-\t\t\tSTART) sq=\"$b\" ;;\n-\t\t\tgit-subtree-mainline:) main=\"$b\" ;;\n-\t\t\tgit-subtree-split:) sub=\"$b\" ;;\n-\t\t\tEND)\n-\t\t\t\tif [ -n \"$sub\" ]; then\n-\t\t\t\t\tif [ -n \"$main\" ]; then\n-\t\t\t\t\t\t# a rejoin commit?\n-\t\t\t\t\t\t# Pretend its sub was a squash.\n-\t\t\t\t\t\tsq=\"$sub\"\n-\t\t\t\t\tfi\n-\t\t\t\t\techo \"$sq\" \"$sub\"\n-\t\t\t\t\tbreak\n-\t\t\t\tfi\n-\t\t\t\tsq=\n-\t\t\t\tmain=\n-\t\t\t\tsub=\n-\t\t\t\t;;\n-\t\tesac\n-\tdone\n-}\n-\n-latest_squash=\"$(find_latest_squash \"$DIR\")\"\n-if [ -z \"$latest_squash\" ]; then\n-    echo \"ERROR: $DIR is not a subtree\" >&2\n-    exit 2\n-fi\n-\n-set $latest_squash\n-old=$1\n-rev=$2\n-if [ \"d$(git cat-file -t $rev 2>/dev/null)\" != dcommit ]; then\n-    echo \"ERROR: subtree commit $rev unavailable. Fetch/update the subtree repository\" >&2\n-    exit 2\n-fi\n-tree_subtree=$(git show -s --format=\"%T\" $rev)\n-echo \"$DIR in $COMMIT was last updated to upstream commit $rev (tree $tree_subtree)\"\n-tree_actual=$(git ls-tree -d \"$COMMIT\" \"$DIR\" | head -n 1)\n-if [ -z \"$tree_actual\" ]; then\n-    echo \"FAIL: subtree directory $DIR not found in $COMMIT\" >&2\n-    exit 1\n-fi\n-set $tree_actual\n-tree_actual_type=$2\n-tree_actual_tree=$3\n-echo \"$DIR in $COMMIT currently refers to $tree_actual_type $tree_actual_tree\"\n-if [ \"d$tree_actual_type\" != \"dtree\" ]; then\n-    echo \"FAIL: subtree directory $DIR is not a tree in $COMMIT\" >&2\n-    exit 1\n-fi\n-if [ \"$tree_actual_tree\" != \"$tree_subtree\" ]; then\n-    git diff-tree $tree_actual_tree $tree_subtree >&2\n-    echo \"FAIL: subtree directory tree doesn't match subtree commit tree\" >&2\n-    exit 1\n-fi\n-echo \"GOOD\""
      },
      {
        "sha": "c8dcaae268b8eabf110de524e4ce5b0b715aca1a",
        "filename": "contrib/devtools/github-merge.py",
        "status": "removed",
        "additions": 0,
        "deletions": 235,
        "changes": 235,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/github-merge.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/github-merge.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/github-merge.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,235 +0,0 @@\n-#!/usr/bin/env python2\n-# Copyright (c) 2016 Bitcoin Core Developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-# This script will locally construct a merge commit for a pull request on a\n-# github repository, inspect it, sign it and optionally push it.\n-\n-# The following temporary branches are created/overwritten and deleted:\n-# * pull/$PULL/base (the current master we're merging onto)\n-# * pull/$PULL/head (the current state of the remote pull request)\n-# * pull/$PULL/merge (github's merge)\n-# * pull/$PULL/local-merge (our merge)\n-\n-# In case of a clean merge that is accepted by the user, the local branch with\n-# name $BRANCH is overwritten with the merged result, and optionally pushed.\n-from __future__ import division,print_function,unicode_literals\n-import os,sys\n-from sys import stdin,stdout,stderr\n-import argparse\n-import subprocess\n-\n-# External tools (can be overridden using environment)\n-GIT = os.getenv('GIT','git')\n-BASH = os.getenv('BASH','bash')\n-\n-# OS specific configuration for terminal attributes\n-ATTR_RESET = ''\n-ATTR_PR = ''\n-COMMIT_FORMAT = '%h %s (%an)%d'\n-if os.name == 'posix': # if posix, assume we can use basic terminal escapes\n-    ATTR_RESET = '\\033[0m'\n-    ATTR_PR = '\\033[1;36m'\n-    COMMIT_FORMAT = '%C(bold blue)%h%Creset %s %C(cyan)(%an)%Creset%C(green)%d%Creset'\n-\n-def git_config_get(option, default=None):\n-    '''\n-    Get named configuration option from git repository.\n-    '''\n-    try:\n-        return subprocess.check_output([GIT,'config','--get',option]).rstrip()\n-    except subprocess.CalledProcessError as e:\n-        return default\n-\n-def retrieve_pr_title(repo,pull):\n-    '''\n-    Retrieve pull request title from github.\n-    Return None if no title can be found, or an error happens.\n-    '''\n-    import urllib2,json\n-    try:\n-        req = urllib2.Request(\"https://api.github.com/repos/\"+repo+\"/pulls/\"+pull)\n-        result = urllib2.urlopen(req)\n-        result = json.load(result)\n-        return result['title']\n-    except Exception as e:\n-        print('Warning: unable to retrieve pull title from github: %s' % e)\n-        return None\n-\n-def ask_prompt(text):\n-    print(text,end=\" \",file=stderr)\n-    reply = stdin.readline().rstrip()\n-    print(\"\",file=stderr)\n-    return reply\n-\n-def parse_arguments(branch):\n-    epilog = '''\n-        In addition, you can set the following git configuration variables:\n-        githubmerge.repository (mandatory),\n-        user.signingkey (mandatory),\n-        githubmerge.host (default: git@github.com),\n-        githubmerge.branch (default: master),\n-        githubmerge.testcmd (default: none).\n-    '''\n-    parser = argparse.ArgumentParser(description='Utility to merge, sign and push github pull requests',\n-            epilog=epilog)\n-    parser.add_argument('pull', metavar='PULL', type=int, nargs=1,\n-        help='Pull request ID to merge')\n-    parser.add_argument('branch', metavar='BRANCH', type=str, nargs='?',\n-        default=branch, help='Branch to merge against (default: '+branch+')')\n-    return parser.parse_args()\n-\n-def main():\n-    # Extract settings from git repo\n-    repo = git_config_get('githubmerge.repository')\n-    host = git_config_get('githubmerge.host','git@github.com')\n-    branch = git_config_get('githubmerge.branch','master')\n-    testcmd = git_config_get('githubmerge.testcmd')\n-    signingkey = git_config_get('user.signingkey')\n-    if repo is None:\n-        print(\"ERROR: No repository configured. Use this command to set:\", file=stderr)\n-        print(\"git config githubmerge.repository <owner>/<repo>\", file=stderr)\n-        exit(1)\n-    if signingkey is None:\n-        print(\"ERROR: No GPG signing key set. Set one using:\",file=stderr)\n-        print(\"git config --global user.signingkey <key>\",file=stderr)\n-        exit(1)\n-\n-    host_repo = host+\":\"+repo # shortcut for push/pull target\n-\n-    # Extract settings from command line\n-    args = parse_arguments(branch)\n-    pull = str(args.pull[0])\n-    branch = args.branch\n-\n-    # Initialize source branches\n-    head_branch = 'pull/'+pull+'/head'\n-    base_branch = 'pull/'+pull+'/base'\n-    merge_branch = 'pull/'+pull+'/merge'\n-    local_merge_branch = 'pull/'+pull+'/local-merge'\n-\n-    devnull = open(os.devnull,'w')\n-    try:\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot check out branch %s.\" % (branch), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/pull/'+pull+'/*:refs/heads/pull/'+pull+'/*'])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+head_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find head of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'log','-q','-1','refs/heads/'+merge_branch], stdout=devnull, stderr=stdout)\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find merge of pull request #%s on %s.\" % (pull,host_repo), file=stderr)\n-        exit(3)\n-    try:\n-        subprocess.check_call([GIT,'fetch','-q',host_repo,'+refs/heads/'+branch+':refs/heads/'+base_branch])\n-    except subprocess.CalledProcessError as e:\n-        print(\"ERROR: Cannot find branch %s on %s.\" % (branch,host_repo), file=stderr)\n-        exit(3)\n-    subprocess.check_call([GIT,'checkout','-q',base_branch])\n-    subprocess.call([GIT,'branch','-q','-D',local_merge_branch], stderr=devnull)\n-    subprocess.check_call([GIT,'checkout','-q','-b',local_merge_branch])\n-\n-    try:\n-        # Create unsigned merge commit.\n-        title = retrieve_pr_title(repo,pull)\n-        if title:\n-            firstline = 'Merge #%s: %s' % (pull,title)\n-        else:\n-            firstline = 'Merge #%s' % (pull,)\n-        message = firstline + '\\n\\n'\n-        message += subprocess.check_output([GIT,'log','--no-merges','--topo-order','--pretty=format:%h %s (%an)',base_branch+'..'+head_branch]).decode('utf-8')\n-        try:\n-            subprocess.check_call([GIT,'merge','-q','--commit','--no-edit','--no-ff','-m',message.encode('utf-8'),head_branch])\n-        except subprocess.CalledProcessError as e:\n-            print(\"ERROR: Cannot be merged cleanly.\",file=stderr)\n-            subprocess.check_call([GIT,'merge','--abort'])\n-            exit(4)\n-        logmsg = subprocess.check_output([GIT,'log','--pretty=format:%s','-n','1']).decode('utf-8')\n-        if logmsg.rstrip() != firstline.rstrip():\n-            print(\"ERROR: Creating merge failed (already merged?).\",file=stderr)\n-            exit(4)\n-\n-        print('%s#%s%s %s' % (ATTR_RESET+ATTR_PR,pull,ATTR_RESET,title))\n-        subprocess.check_call([GIT,'log','--graph','--topo-order','--pretty=format:'+COMMIT_FORMAT,base_branch+'..'+head_branch])\n-        print()\n-        # Run test command if configured.\n-        if testcmd:\n-            # Go up to the repository's root.\n-            toplevel = subprocess.check_output([GIT,'rev-parse','--show-toplevel']).strip()\n-            os.chdir(toplevel)\n-            if subprocess.call(testcmd,shell=True):\n-                print(\"ERROR: Running %s failed.\" % testcmd,file=stderr)\n-                exit(5)\n-\n-            # Show the created merge.\n-            diff = subprocess.check_output([GIT,'diff',merge_branch+'..'+local_merge_branch])\n-            subprocess.check_call([GIT,'diff',base_branch+'..'+local_merge_branch])\n-            if diff:\n-                print(\"WARNING: merge differs from github!\",file=stderr)\n-                reply = ask_prompt(\"Type 'ignore' to continue.\")\n-                if reply.lower() == 'ignore':\n-                    print(\"Difference with github ignored.\",file=stderr)\n-                else:\n-                    exit(6)\n-            reply = ask_prompt(\"Press 'd' to accept the diff.\")\n-            if reply.lower() == 'd':\n-                print(\"Diff accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Diff rejected.\",file=stderr)\n-                exit(6)\n-        else:\n-            # Verify the result manually.\n-            print(\"Dropping you on a shell so you can try building/testing the merged source.\",file=stderr)\n-            print(\"Run 'git diff HEAD~' to show the changes being merged.\",file=stderr)\n-            print(\"Type 'exit' when done.\",file=stderr)\n-            if os.path.isfile('/etc/debian_version'): # Show pull number on Debian default prompt\n-                os.putenv('debian_chroot',pull)\n-            subprocess.call([BASH,'-i'])\n-            reply = ask_prompt(\"Type 'm' to accept the merge.\")\n-            if reply.lower() == 'm':\n-                print(\"Merge accepted.\",file=stderr)\n-            else:\n-                print(\"ERROR: Merge rejected.\",file=stderr)\n-                exit(7)\n-\n-        # Sign the merge commit.\n-        reply = ask_prompt(\"Type 's' to sign off on the merge.\")\n-        if reply == 's':\n-            try:\n-                subprocess.check_call([GIT,'commit','-q','--gpg-sign','--amend','--no-edit'])\n-            except subprocess.CalledProcessError as e:\n-                print(\"Error signing, exiting.\",file=stderr)\n-                exit(1)\n-        else:\n-            print(\"Not signing off on merge, exiting.\",file=stderr)\n-            exit(1)\n-\n-        # Put the result in branch.\n-        subprocess.check_call([GIT,'checkout','-q',branch])\n-        subprocess.check_call([GIT,'reset','-q','--hard',local_merge_branch])\n-    finally:\n-        # Clean up temporary branches.\n-        subprocess.call([GIT,'checkout','-q',branch])\n-        subprocess.call([GIT,'branch','-q','-D',head_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',base_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',merge_branch],stderr=devnull)\n-        subprocess.call([GIT,'branch','-q','-D',local_merge_branch],stderr=devnull)\n-\n-    # Push the result.\n-    reply = ask_prompt(\"Type 'push' to push the result to %s, branch %s.\" % (host_repo,branch))\n-    if reply.lower() == 'push':\n-        subprocess.check_call([GIT,'push',host_repo,'refs/heads/'+branch])\n-\n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "799e0cc7d0fb15b6e9338c711d5ca4d813a06a32",
        "filename": "contrib/devtools/optimize-pngs.py",
        "status": "removed",
        "additions": 0,
        "deletions": 75,
        "changes": 75,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/optimize-pngs.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/optimize-pngs.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/optimize-pngs.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,75 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Run this script every time you change one of the png files. Using pngcrush, it will optimize the png files, remove various color profiles, remove ancillary chunks (alla) and text chunks (text).\n-#pngcrush -brute -ow -rem gAMA -rem cHRM -rem iCCP -rem sRGB -rem alla -rem text\n-'''\n-import os\n-import sys\n-import subprocess\n-import hashlib\n-from PIL import Image\n-\n-def file_hash(filename):\n-    '''Return hash of raw file contents'''\n-    with open(filename, 'rb') as f:\n-        return hashlib.sha256(f.read()).hexdigest()\n-\n-def content_hash(filename):\n-    '''Return hash of RGBA contents of image'''\n-    i = Image.open(filename)\n-    i = i.convert('RGBA')\n-    data = i.tobytes()\n-    return hashlib.sha256(data).hexdigest()\n-\n-pngcrush = 'pngcrush'\n-git = 'git'\n-folders = [\"src/qt/res/movies\", \"src/qt/res/icons\", \"share/pixmaps\"]\n-basePath = subprocess.check_output([git, 'rev-parse', '--show-toplevel']).rstrip('\\n')\n-totalSaveBytes = 0\n-noHashChange = True\n-\n-outputArray = []\n-for folder in folders:\n-    absFolder=os.path.join(basePath, folder)\n-    for file in os.listdir(absFolder):\n-        extension = os.path.splitext(file)[1]\n-        if extension.lower() == '.png':\n-            print(\"optimizing \"+file+\"...\"),\n-            file_path = os.path.join(absFolder, file)\n-            fileMetaMap = {'file' : file, 'osize': os.path.getsize(file_path), 'sha256Old' : file_hash(file_path)};\n-            fileMetaMap['contentHashPre'] = content_hash(file_path)\n-        \n-            pngCrushOutput = \"\"\n-            try:\n-                pngCrushOutput = subprocess.check_output(\n-                        [pngcrush, \"-brute\", \"-ow\", \"-rem\", \"gAMA\", \"-rem\", \"cHRM\", \"-rem\", \"iCCP\", \"-rem\", \"sRGB\", \"-rem\", \"alla\", \"-rem\", \"text\", file_path],\n-                        stderr=subprocess.STDOUT).rstrip('\\n')\n-            except:\n-                print \"pngcrush is not installed, aborting...\"\n-                sys.exit(0)\n-        \n-            #verify\n-            if \"Not a PNG file\" in subprocess.check_output([pngcrush, \"-n\", \"-v\", file_path], stderr=subprocess.STDOUT):\n-                print \"PNG file \"+file+\" is corrupted after crushing, check out pngcursh version\"\n-                sys.exit(1)\n-            \n-            fileMetaMap['sha256New'] = file_hash(file_path)\n-            fileMetaMap['contentHashPost'] = content_hash(file_path)\n-\n-            if fileMetaMap['contentHashPre'] != fileMetaMap['contentHashPost']:\n-                print \"Image contents of PNG file \"+file+\" before and after crushing don't match\"\n-                sys.exit(1)\n-\n-            fileMetaMap['psize'] = os.path.getsize(file_path)\n-            outputArray.append(fileMetaMap)\n-            print(\"done\\n\"),\n-\n-print \"summary:\\n+++++++++++++++++\"\n-for fileDict in outputArray:\n-    oldHash = fileDict['sha256Old']\n-    newHash = fileDict['sha256New']\n-    totalSaveBytes += fileDict['osize'] - fileDict['psize']\n-    noHashChange = noHashChange and (oldHash == newHash)\n-    print fileDict['file']+\"\\n  size diff from: \"+str(fileDict['osize'])+\" to: \"+str(fileDict['psize'])+\"\\n  old sha256: \"+oldHash+\"\\n  new sha256: \"+newHash+\"\\n\"\n-    \n-print \"completed. Checksum stable: \"+str(noHashChange)+\". Total reduction: \"+str(totalSaveBytes)+\" bytes\""
      },
      {
        "sha": "0319f739c49365c1ac690813c9d5cec424861bc2",
        "filename": "contrib/devtools/security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 181,
        "changes": 181,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/security-check.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,181 +0,0 @@\n-#!/usr/bin/python2\n-'''\n-Perform basic ELF security checks on a series of executables.\n-Exit status will be 0 if successful, and the program will be silent.\n-Otherwise the exit status will be 1 and it will log which executables failed which checks.\n-Needs `readelf` (for ELF) and `objdump` (for PE).\n-'''\n-from __future__ import division,print_function\n-import subprocess\n-import sys\n-import os\n-\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-OBJDUMP_CMD = os.getenv('OBJDUMP', '/usr/bin/objdump')\n-\n-def check_ELF_PIE(executable):\n-    '''\n-    Check for position independent executable (PIE), allowing for address space randomization.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '-h', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-\n-    ok = False\n-    for line in stdout.split('\\n'):\n-        line = line.split()\n-        if len(line)>=2 and line[0] == 'Type:' and line[1] == 'DYN':\n-            ok = True\n-    return ok\n-\n-def get_ELF_program_headers(executable):\n-    '''Return type and flags for ELF program headers'''\n-    p = subprocess.Popen([READELF_CMD, '-l', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    in_headers = False\n-    count = 0\n-    headers = []\n-    for line in stdout.split('\\n'):\n-        if line.startswith('Program Headers:'):\n-            in_headers = True\n-        if line == '':\n-            in_headers = False\n-        if in_headers:\n-            if count == 1: # header line\n-                ofs_typ = line.find('Type')\n-                ofs_offset = line.find('Offset')\n-                ofs_flags = line.find('Flg')\n-                ofs_align = line.find('Align')\n-                if ofs_typ == -1 or ofs_offset == -1 or ofs_flags == -1 or ofs_align  == -1:\n-                    raise ValueError('Cannot parse elfread -lW output')\n-            elif count > 1:\n-                typ = line[ofs_typ:ofs_offset].rstrip()\n-                flags = line[ofs_flags:ofs_align].rstrip()\n-                headers.append((typ, flags))\n-            count += 1\n-    return headers\n-\n-def check_ELF_NX(executable):\n-    '''\n-    Check that no sections are writable and executable (including the stack)\n-    '''\n-    have_wx = False\n-    have_gnu_stack = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        if typ == 'GNU_STACK':\n-            have_gnu_stack = True\n-        if 'W' in flags and 'E' in flags: # section is both writable and executable\n-            have_wx = True\n-    return have_gnu_stack and not have_wx\n-\n-def check_ELF_RELRO(executable):\n-    '''\n-    Check for read-only relocations.\n-    GNU_RELRO program header must exist\n-    Dynamic section must have BIND_NOW flag\n-    '''\n-    have_gnu_relro = False\n-    for (typ, flags) in get_ELF_program_headers(executable):\n-        # Note: not checking flags == 'R': here as linkers set the permission differently\n-        # This does not affect security: the permission flags of the GNU_RELRO program header are ignored, the PT_LOAD header determines the effective permissions.\n-        # However, the dynamic linker need to write to this area so these are RW.\n-        # Glibc itself takes care of mprotecting this area R after relocations are finished.\n-        # See also http://permalink.gmane.org/gmane.comp.gnu.binutils/71347\n-        if typ == 'GNU_RELRO':\n-            have_gnu_relro = True\n-\n-    have_bindnow = False\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    for line in stdout.split('\\n'):\n-        tokens = line.split()\n-        if len(tokens)>1 and tokens[1] == '(BIND_NOW)' or (len(tokens)>2 and tokens[1] == '(FLAGS)' and 'BIND_NOW' in tokens[2]):\n-            have_bindnow = True\n-    return have_gnu_relro and have_bindnow\n-\n-def check_ELF_Canary(executable):\n-    '''\n-    Check for use of stack canary\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    ok = False\n-    for line in stdout.split('\\n'):\n-        if '__stack_chk_fail' in line:\n-            ok = True\n-    return ok\n-\n-def get_PE_dll_characteristics(executable):\n-    '''\n-    Get PE DllCharacteristics bits\n-    '''\n-    p = subprocess.Popen([OBJDUMP_CMD, '-x',  executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    for line in stdout.split('\\n'):\n-        tokens = line.split()\n-        if len(tokens)>=2 and tokens[0] == 'DllCharacteristics':\n-            return int(tokens[1],16)\n-    return 0\n-\n-\n-def check_PE_PIE(executable):\n-    '''PIE: DllCharacteristics bit 0x40 signifies dynamicbase (ASLR)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x40)\n-\n-def check_PE_NX(executable):\n-    '''NX: DllCharacteristics bit 0x100 signifies nxcompat (DEP)'''\n-    return bool(get_PE_dll_characteristics(executable) & 0x100)\n-\n-CHECKS = {\n-'ELF': [\n-    ('PIE', check_ELF_PIE),\n-    ('NX', check_ELF_NX),\n-    ('RELRO', check_ELF_RELRO),\n-    ('Canary', check_ELF_Canary)\n-],\n-'PE': [\n-    ('PIE', check_PE_PIE),\n-    ('NX', check_PE_NX)\n-]\n-}\n-\n-def identify_executable(executable):\n-    with open(filename, 'rb') as f:\n-        magic = f.read(4)\n-    if magic.startswith(b'MZ'):\n-        return 'PE'\n-    elif magic.startswith(b'\\x7fELF'):\n-        return 'ELF'\n-    return None\n-\n-if __name__ == '__main__':\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        try:\n-            etype = identify_executable(filename)\n-            if etype is None:\n-                print('%s: unknown format' % filename)\n-                retval = 1\n-                continue\n-\n-            failed = []\n-            for (name, func) in CHECKS[etype]:\n-                if not func(filename):\n-                    failed.append(name)\n-            if failed:\n-                print('%s: failed %s' % (filename, ' '.join(failed)))\n-                retval = 1\n-        except IOError:\n-            print('%s: cannot open' % filename)\n-            retval = 1\n-    exit(retval)\n-"
      },
      {
        "sha": "4ad5136f79ee5310e712a85cd21c97364ce6cd2b",
        "filename": "contrib/devtools/symbol-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 163,
        "changes": 163,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/symbol-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/symbol-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/symbol-check.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,163 +0,0 @@\n-#!/usr/bin/python2\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-A script to check that the (Linux) executables produced by gitian only contain\n-allowed gcc, glibc and libstdc++ version symbols.  This makes sure they are\n-still compatible with the minimum supported Linux distribution versions.\n-\n-Example usage:\n-\n-    find ../gitian-builder/build -type f -executable | xargs python contrib/devtools/symbol-check.py\n-'''\n-from __future__ import division, print_function\n-import subprocess\n-import re\n-import sys\n-import os\n-\n-# Debian 6.0.9 (Squeeze) has:\n-#\n-# - g++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=g%2B%2B)\n-# - libc version 2.11.3 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libc6)\n-# - libstdc++ version 4.4.5 (https://packages.debian.org/search?suite=default&section=all&arch=any&searchon=names&keywords=libstdc%2B%2B6)\n-#\n-# Ubuntu 10.04.4 (Lucid Lynx) has:\n-#\n-# - g++ version 4.4.3 (http://packages.ubuntu.com/search?keywords=g%2B%2B&searchon=names&suite=lucid&section=all)\n-# - libc version 2.11.1 (http://packages.ubuntu.com/search?keywords=libc6&searchon=names&suite=lucid&section=all)\n-# - libstdc++ version 4.4.3 (http://packages.ubuntu.com/search?suite=lucid&section=all&arch=any&keywords=libstdc%2B%2B&searchon=names)\n-#\n-# Taking the minimum of these as our target.\n-#\n-# According to GNU ABI document (http://gcc.gnu.org/onlinedocs/libstdc++/manual/abi.html) this corresponds to:\n-#   GCC 4.4.0: GCC_4.4.0\n-#   GCC 4.4.2: GLIBCXX_3.4.13, CXXABI_1.3.3\n-#   (glibc)    GLIBC_2_11\n-#\n-MAX_VERSIONS = {\n-'GCC':     (4,4,0),\n-'CXXABI':  (1,3,3),\n-'GLIBCXX': (3,4,13),\n-'GLIBC':   (2,11)\n-}\n-# See here for a description of _IO_stdin_used:\n-# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=634261#109\n-\n-# Ignore symbols that are exported as part of every executable\n-IGNORE_EXPORTS = {\n-'_edata', '_end', '_init', '__bss_start', '_fini', '_IO_stdin_used'\n-}\n-READELF_CMD = os.getenv('READELF', '/usr/bin/readelf')\n-CPPFILT_CMD = os.getenv('CPPFILT', '/usr/bin/c++filt')\n-# Allowed NEEDED libraries\n-ALLOWED_LIBRARIES = {\n-# bitcoind and bitcoin-qt\n-'libgcc_s.so.1', # GCC base support\n-'libc.so.6', # C library\n-'libpthread.so.0', # threading\n-'libanl.so.1', # DNS resolve\n-'libm.so.6', # math library\n-'librt.so.1', # real-time (clock)\n-'ld-linux-x86-64.so.2', # 64-bit dynamic linker\n-'ld-linux.so.2', # 32-bit dynamic linker\n-# bitcoin-qt only\n-'libX11-xcb.so.1', # part of X11\n-'libX11.so.6', # part of X11\n-'libxcb.so.1', # part of X11\n-'libfontconfig.so.1', # font support\n-'libfreetype.so.6', # font parsing\n-'libdl.so.2' # programming interface to dynamic linker\n-}\n-\n-class CPPFilt(object):\n-    '''\n-    Demangle C++ symbol names.\n-\n-    Use a pipe to the 'c++filt' command.\n-    '''\n-    def __init__(self):\n-        self.proc = subprocess.Popen(CPPFILT_CMD, stdin=subprocess.PIPE, stdout=subprocess.PIPE)\n-\n-    def __call__(self, mangled):\n-        self.proc.stdin.write(mangled + '\\n')\n-        return self.proc.stdout.readline().rstrip()\n-\n-    def close(self):\n-        self.proc.stdin.close()\n-        self.proc.stdout.close()\n-        self.proc.wait()\n-\n-def read_symbols(executable, imports=True):\n-    '''\n-    Parse an ELF executable and return a list of (symbol,version) tuples\n-    for dynamic, imported symbols.\n-    '''\n-    p = subprocess.Popen([READELF_CMD, '--dyn-syms', '-W', executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Could not read symbols for %s: %s' % (executable, stderr.strip()))\n-    syms = []\n-    for line in stdout.split('\\n'):\n-        line = line.split()\n-        if len(line)>7 and re.match('[0-9]+:$', line[0]):\n-            (sym, _, version) = line[7].partition('@')\n-            is_import = line[6] == 'UND'\n-            if version.startswith('@'):\n-                version = version[1:]\n-            if is_import == imports:\n-                syms.append((sym, version))\n-    return syms\n-\n-def check_version(max_versions, version):\n-    if '_' in version:\n-        (lib, _, ver) = version.rpartition('_')\n-    else:\n-        lib = version\n-        ver = '0'\n-    ver = tuple([int(x) for x in ver.split('.')])\n-    if not lib in max_versions:\n-        return False\n-    return ver <= max_versions[lib]\n-\n-def read_libraries(filename):\n-    p = subprocess.Popen([READELF_CMD, '-d', '-W', filename], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    if p.returncode:\n-        raise IOError('Error opening file')\n-    libraries = []\n-    for line in stdout.split('\\n'):\n-        tokens = line.split()\n-        if len(tokens)>2 and tokens[1] == '(NEEDED)':\n-            match = re.match('^Shared library: \\[(.*)\\]$', ' '.join(tokens[2:]))\n-            if match:\n-                libraries.append(match.group(1))\n-            else:\n-                raise ValueError('Unparseable (NEEDED) specification')\n-    return libraries\n-\n-if __name__ == '__main__':\n-    cppfilt = CPPFilt()\n-    retval = 0\n-    for filename in sys.argv[1:]:\n-        # Check imported symbols\n-        for sym,version in read_symbols(filename, True):\n-            if version and not check_version(MAX_VERSIONS, version):\n-                print('%s: symbol %s from unsupported version %s' % (filename, cppfilt(sym), version))\n-                retval = 1\n-        # Check exported symbols\n-        for sym,version in read_symbols(filename, False):\n-            if sym in IGNORE_EXPORTS:\n-                continue\n-            print('%s: export of symbol %s not allowed' % (filename, cppfilt(sym)))\n-            retval = 1\n-        # Check dependency libraries\n-        for library_name in read_libraries(filename):\n-            if library_name not in ALLOWED_LIBRARIES:\n-                print('%s: NEEDED library %s is not allowed' % (filename, library_name))\n-                retval = 1\n-\n-    exit(retval)\n-\n-"
      },
      {
        "sha": "fed7626aabaaf34a7ab4ed1e13a7b5e47769f950",
        "filename": "contrib/devtools/test-security-check.py",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/test-security-check.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/test-security-check.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/test-security-check.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,60 +0,0 @@\n-#!/usr/bin/python2\n-'''\n-Test script for security-check.py\n-'''\n-from __future__ import division,print_function\n-import subprocess\n-import sys\n-import unittest\n-\n-def write_testcode(filename):\n-    with open(filename, 'w') as f:\n-        f.write('''\n-    #include <stdio.h>\n-    int main()\n-    {\n-        printf(\"the quick brown fox jumps over the lazy god\\\\n\");\n-        return 0;\n-    }\n-    ''')\n-\n-def call_security_check(cc, source, executable, options):\n-    subprocess.check_call([cc,source,'-o',executable] + options)\n-    p = subprocess.Popen(['./security-check.py',executable], stdout=subprocess.PIPE, stderr=subprocess.PIPE, stdin=subprocess.PIPE)\n-    (stdout, stderr) = p.communicate()\n-    return (p.returncode, stdout.rstrip())\n-\n-class TestSecurityChecks(unittest.TestCase):\n-    def test_ELF(self):\n-        source = 'test1.c'\n-        executable = 'test1'\n-        cc = 'gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-zexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE NX RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fno-stack-protector','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO Canary'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro']), \n-                (1, executable+': failed PIE RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-znorelro','-pie','-fPIE']), \n-                (1, executable+': failed RELRO'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,-znoexecstack','-fstack-protector-all','-Wl,-zrelro','-Wl,-z,now','-pie','-fPIE']), \n-                (0, ''))\n-\n-    def test_PE(self):\n-        source = 'test1.c'\n-        executable = 'test1.exe'\n-        cc = 'i686-w64-mingw32-gcc'\n-        write_testcode(source)\n-\n-        self.assertEqual(call_security_check(cc, source, executable, []), \n-                (1, executable+': failed PIE NX'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat']), \n-                (1, executable+': failed PIE'))\n-        self.assertEqual(call_security_check(cc, source, executable, ['-Wl,--nxcompat','-Wl,--dynamicbase']), \n-                (0, ''))\n-\n-if __name__ == '__main__':\n-    unittest.main()\n-"
      },
      {
        "sha": "2b6e807b4718c3c4985d20003eabc4af559bac01",
        "filename": "contrib/devtools/update-translations.py",
        "status": "removed",
        "additions": 0,
        "deletions": 200,
        "changes": 200,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/update-translations.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/devtools/update-translations.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/devtools/update-translations.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,200 +0,0 @@\n-#!/usr/bin/python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Run this script from the root of the repository to update all translations from\n-transifex.\n-It will do the following automatically:\n-\n-- fetch all translations using the tx tool\n-- post-process them into valid and committable format\n-  - remove invalid control characters\n-  - remove location tags (makes diffs less noisy)\n-\n-TODO:\n-- auto-add new translations to the build system according to the translation process\n-'''\n-from __future__ import division, print_function\n-import subprocess\n-import re\n-import sys\n-import os\n-import io\n-import xml.etree.ElementTree as ET\n-\n-# Name of transifex tool\n-TX = 'tx'\n-# Name of source language file\n-SOURCE_LANG = 'bitcoin_en.ts'\n-# Directory with locale files\n-LOCALE_DIR = 'src/qt/locale'\n-# Minimum number of messages for translation to be considered at all\n-MIN_NUM_MESSAGES = 10\n-\n-def check_at_repository_root():\n-    if not os.path.exists('.git'):\n-        print('No .git directory found')\n-        print('Execute this script at the root of the repository', file=sys.stderr)\n-        exit(1)\n-\n-def fetch_all_translations():\n-    if subprocess.call([TX, 'pull', '-f', '-a']):\n-        print('Error while fetching translations', file=sys.stderr)\n-        exit(1)\n-\n-def find_format_specifiers(s):\n-    '''Find all format specifiers in a string.'''\n-    pos = 0\n-    specifiers = []\n-    while True:\n-        percent = s.find('%', pos)\n-        if percent < 0:\n-            break\n-        specifiers.append(s[percent+1])\n-        pos = percent+2\n-    return specifiers\n-\n-def split_format_specifiers(specifiers):\n-    '''Split format specifiers between numeric (Qt) and others (strprintf)'''\n-    numeric = []\n-    other = []\n-    for s in specifiers:\n-        if s in {'1','2','3','4','5','6','7','8','9'}:\n-            numeric.append(s)\n-        else:\n-            other.append(s)\n-\n-    # numeric (Qt) can be present in any order, others (strprintf) must be in specified order\n-    return set(numeric),other\n-\n-def sanitize_string(s):\n-    '''Sanitize string for printing'''\n-    return s.replace('\\n',' ')\n-\n-def check_format_specifiers(source, translation, errors, numerus):\n-    source_f = split_format_specifiers(find_format_specifiers(source))\n-    # assert that no source messages contain both Qt and strprintf format specifiers\n-    # if this fails, go change the source as this is hacky and confusing!\n-    assert(not(source_f[0] and source_f[1]))\n-    try:\n-        translation_f = split_format_specifiers(find_format_specifiers(translation))\n-    except IndexError:\n-        errors.append(\"Parse error in translation for '%s': '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-        return False\n-    else:\n-        if source_f != translation_f:\n-            if numerus and source_f == (set(), ['n']) and translation_f == (set(), []) and translation.find('%') == -1:\n-                # Allow numerus translations to omit %n specifier (usually when it only has one possible value)\n-                return True\n-            errors.append(\"Mismatch between '%s' and '%s'\" % (sanitize_string(source), sanitize_string(translation)))\n-            return False\n-    return True\n-\n-def all_ts_files(suffix=''):\n-    for filename in os.listdir(LOCALE_DIR):\n-        # process only language files, and do not process source language\n-        if not filename.endswith('.ts'+suffix) or filename == SOURCE_LANG+suffix:\n-            continue\n-        if suffix: # remove provided suffix\n-            filename = filename[0:-len(suffix)]\n-        filepath = os.path.join(LOCALE_DIR, filename)\n-        yield(filename, filepath)\n-\n-FIX_RE = re.compile(b'[\\x00-\\x09\\x0b\\x0c\\x0e-\\x1f]')\n-def remove_invalid_characters(s):\n-    '''Remove invalid characters from translation string'''\n-    return FIX_RE.sub(b'', s)\n-\n-# Override cdata escape function to make our output match Qt's (optional, just for cleaner diffs for\n-# comparison, disable by default)\n-_orig_escape_cdata = None\n-def escape_cdata(text):\n-    text = _orig_escape_cdata(text)\n-    text = text.replace(\"'\", '&apos;')\n-    text = text.replace('\"', '&quot;')\n-    return text\n-\n-def postprocess_translations(reduce_diff_hacks=False):\n-    print('Checking and postprocessing...')\n-\n-    if reduce_diff_hacks:\n-        global _orig_escape_cdata\n-        _orig_escape_cdata = ET._escape_cdata\n-        ET._escape_cdata = escape_cdata\n-\n-    for (filename,filepath) in all_ts_files():\n-        os.rename(filepath, filepath+'.orig')\n-\n-    have_errors = False\n-    for (filename,filepath) in all_ts_files('.orig'):\n-        # pre-fixups to cope with transifex output\n-        parser = ET.XMLParser(encoding='utf-8') # need to override encoding because 'utf8' is not understood only 'utf-8'\n-        with open(filepath + '.orig', 'rb') as f:\n-            data = f.read()\n-        # remove control characters; this must be done over the entire file otherwise the XML parser will fail\n-        data = remove_invalid_characters(data)\n-        tree = ET.parse(io.BytesIO(data), parser=parser)\n-\n-        # iterate over all messages in file\n-        root = tree.getroot()\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                numerus = message.get('numerus') == 'yes'\n-                source = message.find('source').text\n-                translation_node = message.find('translation')\n-                # pick all numerusforms\n-                if numerus:\n-                    translations = [i.text for i in translation_node.findall('numerusform')]\n-                else:\n-                    translations = [translation_node.text]\n-\n-                for translation in translations:\n-                    if translation is None:\n-                        continue\n-                    errors = []\n-                    valid = check_format_specifiers(source, translation, errors, numerus)\n-\n-                    for error in errors:\n-                        print('%s: %s' % (filename, error))\n-\n-                    if not valid: # set type to unfinished and clear string if invalid\n-                        translation_node.clear()\n-                        translation_node.set('type', 'unfinished')\n-                        have_errors = True\n-\n-                # Remove location tags\n-                for location in message.findall('location'):\n-                    message.remove(location)\n-\n-                # Remove entire message if it is an unfinished translation\n-                if translation_node.get('type') == 'unfinished':\n-                    context.remove(message)\n-\n-        # check if document is (virtually) empty, and remove it if so\n-        num_messages = 0\n-        for context in root.findall('context'):\n-            for message in context.findall('message'):\n-                num_messages += 1\n-        if num_messages < MIN_NUM_MESSAGES:\n-            print('Removing %s, as it contains only %i messages' % (filepath, num_messages))\n-            continue\n-\n-        # write fixed-up tree\n-        # if diff reduction requested, replace some XML to 'sanitize' to qt formatting\n-        if reduce_diff_hacks:\n-            out = io.BytesIO()\n-            tree.write(out, encoding='utf-8')\n-            out = out.getvalue()\n-            out = out.replace(b' />', b'/>')\n-            with open(filepath, 'wb') as f:\n-                f.write(out)\n-        else:\n-            tree.write(filepath, encoding='utf-8')\n-    return have_errors\n-\n-if __name__ == '__main__':\n-    check_at_repository_root()\n-    fetch_all_translations()\n-    postprocess_translations()\n-"
      },
      {
        "sha": "6391e0a202d2847f13dbdbd3c7d2a8d1421be24c",
        "filename": "contrib/gitian-descriptors/README",
        "status": "added",
        "additions": 233,
        "deletions": 0,
        "changes": 233,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,233 @@\n+Download a 64bit debian netinstall iso from : http://cdimage.debian.org/debian-cd/\n+I used debian-8.1.0-amd64-netinst.iso\n+\n+\n+Follow this guide part way:\n+https://github.com/bitcoin/bitcoin/blob/master/doc/gitian-building.md#setting-up-debian-for-gitian-building\n+( up to cloning gitian-builder ) \n+Or follow these text only instructions:\n+Create a new VirtualBox VM\n+\n+Name: gitianbuild\n+Type: Linux (64bit)\n+Version: Debian\n+\n+Memory: 1400MB or more\n+Hard Drive: Create a virtual hard drive now\n+Hard drive file type: VDI ( Virtualbox disk image )\n+Storage on physical hard drive : Dynamically allocated\n+File location and size: 40GB (20GB should work)\n+\n+<CREATE> \n+\n+After creating the VM, we need to configure it.\n+\n+    Click the Settings button, then go to the Network tab. Adapter 1 should be attached to NAT\n+\n+\n+\n+    Click Advanced, then Port Forwarding. We want to set up a port through which we can reach the VM to get files in and out.\n+    Create a new rule by clicking the plus icon.\n+\n+    Set up the new rule the following way:\n+        Name: SSH\n+        Protocol: TCP\n+        Leave Host IP empty\n+        Host Port: 22222\n+        Leave Guest IP empty\n+        Guest Port: 22\n+\n+    Click Ok twice to save.\n+\n+Then start the VM. On the first launch you will be asked for a CD or DVD image. Choose the downloaded iso.\n+\n+Choose the non-graphical installer. We do not need the graphical environment; it will only increase installation time and disk usage.\n+Choose locale and keyboard settings (doesn't matter, you can just go with the defaults or select your own information)\n+The VM will detect network settings using DHCP, this should all proceed automatically\n+    Configure the network:\n+        System name debian.\n+        Leave domain name empty.\n+\n+Choose a root password and enter it twice (remember it for later) \n+\n+Name the new user debian (the full name doesn't matter, you can leave it empty) \n+Choose a user password and enter it twice (remember it for later) \n+\n+The installer will set up the clock using a time server; this process should be automatic\n+Set up the clock: choose a time zone (depends on the locale settings that you picked earlier; specifics don't matter)\n+\n+Disk setup\n+    Partitioning method: Guided - Use the entire disk\n+\n+Select disk to partition: SCSI1 (0,0,0) \n+Partitioning scheme: All files in one partition \n+Finish partitioning and write changes to disk -> Yes\n+\n+\n+The base system will be installed, this will take a minute or so\n+    Choose a mirror (any will do - preferably one that is close to you and you should get the best download speeds)\n+\n+Enter proxy information (unless you are on an intranet, you can leave this empty)\n+\n+\n+Wait a bit while 'Select and install software' runs\n+Participate in popularity contest -> No\n+    Choose software to install. We need just the base system. Make sure only 'SSH server' and 'Standard System Utilities' are checked. Uncheck 'Debian Desktop Environment' and 'Print Server'\n+\n+\n+Install the GRUB boot loader to the master boot record? -> Yes\n+\n+\n+Installation Complete -> Continue\n+After installation, the VM will reboot and you will have a working Debian VM.\n+\n+Congratulations!\n+\n+\n+On your debian virtual machine log in as root and run the following commands to get the show on the road.\n+\n+Install base packages:\n+# apt-get install git ruby sudo apt-cacher-ng qemu-utils debootstrap lxc python-cheetah parted kpartx bridge-utils\n+Add the debian user to the superusers list:\n+# adduser debian sudo\n+\n+When you get a colorful screen with a question about the 'LXC directory', just go with the default (/var/lib/lxc).\n+Then set up LXC and the rest with the following, which is a complex jumble of settings and workarounds:\n+\n+Add the following to a script and execute it:\n+\n+# make sure the build script can exectute it without providing a password\n+echo \"%sudo ALL=NOPASSWD: /usr/bin/lxc-start\" > /etc/sudoers.d/gitian-lxc\n+# add cgroup for LXC\n+echo \"cgroup  /sys/fs/cgroup  cgroup  defaults  0   0\" >> /etc/fstab\n+# make /etc/rc.local script that sets up bridge between guest and host\n+echo '#!/bin/sh -e' > /etc/rc.local\n+echo 'brctl addbr br0' >> /etc/rc.local\n+echo 'ifconfig br0 10.0.3.2/24 up' >> /etc/rc.local\n+echo 'exit 0' >> /etc/rc.local\n+# make sure that USE_LXC is always set when logging in as debian,\n+# and configure LXC IP addresses\n+echo 'export USE_LXC=1' >> /home/debian/.profile\n+echo 'export GITIAN_HOST_IP=10.0.3.2' >> /home/debian/.profile\n+echo 'export LXC_GUEST_IP=10.0.3.5' >> /home/debian/.profile\n+\n+\n+reboot \n+\n+The debian box will be rebooted and our setup should be complete\n+\n+************************ THIS IS WHERE YOU CAN STOP USING THE LINKED GUIDE *******************************\n+\n+\n+ssh debian@localhost -p 22222\n+\n+git clone https://github.com/devrandom/gitian-builder.git\n+git clone https://github.com/KingCaper/GAMEUNITS\n+\n+cd gitian-builder\n+\n+May be necessary to edit bin/make-base-vm - add sudo before mkfs.\n+\n+./bin/make-base-vm --lxc --arch amd64 --suite trusty\n+./bin/make-base-vm --lxc --arch i386 --suite trusty\n+\n+mkdir inputs;\n+cd inputs;\n+wget http://liquidtelecom.dl.sourceforge.net/project/flex/flex-2.5.38.tar.gz;\n+wget http://download.icu-project.org/files/icu4c/55.1/icu4c-55_1-src.tgz;\n+wget http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch;\n+wget http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.20151008.tar.gz -Ominiupnpc-1.9.20151008.tar.gz;\n+wget http://www.openssl.org/source/openssl-1.0.2d.tar.gz;\n+wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz;\n+wget http://download.qt.io/official_releases/qt/5.4/5.4.2/single/qt-everywhere-opensource-src-5.5.0.tar.xz\n+wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2/download -Oboost_1_55_0.tar.bz2;\n+\n+Mirror - http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch \n+\n+\n+$ cd ..;\n+$ LXC_EXECUTE=lxc-execute; PATH=\"$(pwd)/libexec/:$PATH\";\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/boost-linux.yml\n+$ mv build/out/boost-*.zip inputs/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/deps-linux.yml\n+$ mv build/out/gameunits-deps-*.zip inputs/\n+   \n+$ ./bin/gbuild --commit gameunits=HEAD ../gameunits/contrib/gitian-descriptors/gitian-linux.yml\n+$ mkdir -p ../compiled/linux\n+$ mv build/out/* ../compiled/linux/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/boost-win.yml\n+$ mv build/out/boost-*.zip inputs/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/deps-win.yml\n+$ mv build/out/gameunits-deps-*.zip inputs/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/qt-win.yml\n+$ mv build/out/qt-win*.zip inputs/\n+\n+$ ./bin/gbuild --commit gameunits=HEAD ../gameunits/contrib/gitian-descriptors/gitian-win.yml\n+$ mkdir -p ../compiled/win\n+$ mv build/out/* ../compiled/win/\n+\n+$ ./bin/gbuild --commit osxcross=master,libdmg-hfsplus=master ../gameunits/contrib/gitian-descriptors/osxcross.yml\n+$ mv build/out/osxcross.tar.xz inputs/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/deps-osx.yml\n+$ mv build/out/gameunits-deps-osx-gitian inputs/\n+\n+$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/qt-osx.yml\n+$ mv build/out/qt-osx*.tar.xz inputs/\n+\n+$ ./bin/gbuild --commit gameunits=HEAD ../gameunits/contrib/gitian-descriptors/gitian-osx.yml\n+$ mkdir -p ../compiled/osx\n+$ mv build/out/* ../compiled/osx/\n+\n+Notes:\n+    To check the progress of the script:\n+        login to the vm on a new terminal (ssh debian@localhost -p 22222)\n+        cd gitian-builder\n+        tail -f var/install.log\n+        or\n+        tail -f var/build.log\n+\n+\n+\n+\n+\n+\n+\n+\n+Gavin's notes on getting gitian builds up and running:\n+\n+You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n+\n+You probably need to enable hardware virtualization in your machine's BIOS.\n+\n+You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n+  sudo apt-get install apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n+\n+Sanity checks:\n+  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n+  ls -l /dev/kvm   # Should show a /dev/kvm device\n+\n+Once you've got the right hardware and software:\n+\n+    git clone git://github.com/bitcoin/bitcoin.git\n+    git clone git://github.com/devrandom/gitian-builder.git\n+    mkdir gitian-builder/inputs\n+    wget 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz' -O gitian-builder/inputs/miniupnpc-1.6.tar.gz\n+\n+    cd gitian-builder\n+    bin/make-base-vm --arch i386\n+    bin/make-base-vm --arch amd64\n+    cd ..\n+\n+    # To build\n+    cd bitcoin\n+    git pull\n+    cd ../gitian-builder\n+    git pull\n+    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian.yml\n+"
      },
      {
        "sha": "614970659660f8fee76b8859467e192795829de4",
        "filename": "contrib/gitian-descriptors/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,65 +0,0 @@\n-### Gavin's notes on getting gitian builds up and running using KVM\n-\n-These instructions distilled from\n-[https://help.ubuntu.com/community/KVM/Installation](https://help.ubuntu.com/community/KVM/Installation).\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-\n-\tsudo apt-get install ruby apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-\n-\tsudo service apt-cacher-ng status  # Should return apt-cacher-ng is running\n-\tls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    cd gitian-builder/inputs\n-\n-    # Create base images\n-    cd gitian-builder\n-    bin/make-base-vm --suite trusty --arch amd64\n-    cd ..\n-\n-    # Get inputs (see doc/release-process.md for exact inputs needed and where to get them)\n-    ...\n-\n-    # For further build instructions see doc/release-process.md\n-    ...\n-\n----------------------\n-\n-`gitian-builder` now also supports building using LXC. See\n-[help.ubuntu.com](https://help.ubuntu.com/14.04/serverguide/lxc.html)\n-for how to get LXC up and running under Ubuntu.\n-\n-If your main machine is a 64-bit Mac or PC with a few gigabytes of memory\n-and at least 10 gigabytes of free disk space, you can `gitian-build` using\n-LXC running inside a virtual machine.\n-\n-Here's a description of Gavin's setup on OSX 10.6:\n-\n-1. Download and install VirtualBox from [https://www.virtualbox.org/](https://www.virtualbox.org/)\n-\n-2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from\n-   [http://www.ubuntu.com/](http://www.ubuntu.com/)\n-\n-3. Run VirtualBox and create a new virtual machine, using the Ubuntu .iso (see the [VirtualBox documentation](https://www.virtualbox.org/wiki/Documentation) for details). Create it with at least 2 gigabytes of memory and a disk that is at least 20 gigabytes big.\n-\n-4. Inside the running Ubuntu desktop, install:\n-\n-\tsudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder\n-\n-5. Still inside Ubuntu, tell gitian-builder to use LXC, then follow the \"Once you've got the right hardware and software\" instructions above:\n-\n-\texport USE_LXC=1\n-\tgit clone git://github.com/bitcoin/bitcoin.git\n-\t... etc"
      },
      {
        "sha": "a65cfba7340e881bc65b608e764afc0e6bf5e14c",
        "filename": "contrib/gitian-descriptors/deps-linux.yml",
        "status": "added",
        "additions": 105,
        "deletions": 0,
        "changes": 105,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-linux.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,105 @@\n+---\n+name: \"gameunits-deps\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"i386\"\n+- \"amd64\"\n+packages:\n+- \"g++\"\n+- \"pkg-config\"\n+- \"libtool\"\n+- \"faketime\"\n+- \"bsdmainutils\"\n+reference_datetime: \"2015-10-01 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.2d.tar.gz\"\n+- \"miniupnpc-1.9.20151008.tar.gz\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"boost_1_55_0.tar.bz2\"\n+script: |\n+  STAGING=\"$HOME/install\"\n+  TEMPDIR=\"$HOME/tmp\"\n+  OPTFLAGS='-O2'\n+  if [ \"$GBUILD_BITS\" == \"32\" ]; then\n+    export LD_PRELOAD=/usr/lib/i386-linux-gnu/faketime/libfaketime.so.1;\n+  else\n+    export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1;\n+  fi\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  # Integrity Check\n+  echo \"671c36487785628a703374c652ad2cebea45fa920ae5681515df25d9f2c9a8c8  openssl-1.0.2d.tar.gz\"         | sha256sum -c\n+  echo \"e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633  miniupnpc-1.9.20151008.tar.gz\" | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"           | sha256sum -c\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\"          | sha256sum -c\n+\n+  #\n+  tar xzf openssl-1.0.2d.tar.gz\n+  cd openssl-1.0.2d\n+  #   need -fPIC to avoid relocation error in 64 bit builds\n+  ./config no-shared no-zlib no-dso no-krb5 --openssldir=$STAGING -fPIC\n+  #   need to build OpenSSL with faketime because a timestamp is embedded into cversion.o\n+  make\n+  make install_sw\n+  cd ..\n+  #\n+  tar xzf miniupnpc-1.9.20151008.tar.gz\n+  cd miniupnpc-1.9.20151008\n+  #   miniupnpc is always built with -fPIC\n+  INSTALLPREFIX=$STAGING make $MAKEOPTS libminiupnpc.a install\n+  ls $STAGING/lib/libminiupnpc.so*\n+  rm -f $STAGING/lib/libminiupnpc.so* # no way to skip shared lib build\n+  cd ..\n+  #\n+  \n+  #\n+  #tar xjf protobuf-2.5.0.tar.bz2\n+  #cd protobuf-2.5.0\n+  #mkdir -p $STAGING/host/bin\n+  #unset FAKETIME # unset fake time during configure, as it does some clock sanity tests\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  #./configure --prefix=$STAGING --bindir=$STAGING/host/bin --enable-static --disable-shared --with-pic --without-zlib\n+  # Workaround to prevent re-configuring by make; make all files have a date in the past\n+  #find . -print0 | xargs -r0 touch -t 200001010000\n+  #export FAKETIME=$REFERENCE_DATETIME\n+  #make $MAKEOPTS install\n+  #cd ..\n+  #\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  #   need --with-pic to avoid relocation error in 64 bit builds\n+  ../dist/configure --prefix=$STAGING --enable-cxx --disable-shared --with-pic\n+  # Workaround to prevent re-configuring by make; make all files have a date in the past\n+  find . -print0 | xargs -r0 touch -t 200001010000\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+\n+  # Input Integrity Check\n+  tar --warning=no-timestamp -xjf boost_1_55_0.tar.bz2\n+  cd boost_1_55_0\n+  GCCVERSION=$(g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n+  # note: bjam with -d+2 reveals that -O3 is implied by default, no need to provide it in cxxflags\n+  echo \"using gcc : $GCCVERSION : g++\n+        :\n+        <cxxflags>\\\"-frandom-seed=boost1 -fPIC\\\"\n+  ;\" > user-config.jam\n+\n+  ./bootstrap.sh --without-icu\n+\n+  ./bjam toolset=gcc threadapi=pthread threading=multi variant=release link=static runtime-link=shared --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 --layout=tagged --build-type=complete --prefix=\"$STAGING\" $MAKEOPTS -d+2 install\n+\n+  # post-process all generated libraries to be deterministic\n+  # extract them to a temporary directory then re-build them deterministically\n+  for LIB in $(find $STAGING -name \\*.a); do\n+    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+    ar xv $LIB | cut -b5- > /tmp/list.txt\n+    rm $LIB\n+    ar crsD $LIB $(cat /tmp/list.txt)\n+  done\n+  #\n+  cd $STAGING\n+  find include lib | sort | tar --no-recursion -cJf $OUTDIR/gameunits-deps-linux${GBUILD_BITS}-gitian.tar.xz -T -"
      },
      {
        "sha": "1e773c07df41f9a073faa79bbb535825fd57ffb4",
        "filename": "contrib/gitian-descriptors/deps-osx.yml",
        "status": "added",
        "additions": 112,
        "deletions": 0,
        "changes": 112,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-osx.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,112 @@\n+---\n+name: \"gameunits-deps\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"git-core\"\n+- \"clang\"\n+- \"llvm-dev\"\n+- \"faketime\"\n+- \"psmisc\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.2d.tar.gz\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.9.20151008.tar.gz\"\n+- \"zlib-1.2.8.tar.gz\"\n+- \"icu4c-55_1-src.tgz\"\n+- \"boost_1_55_0.tar.bz2\"\n+- \"osxcross.tar.xz\"\n+script: |\n+  #\n+  # Input Integrity Check\n+  echo \"671c36487785628a703374c652ad2cebea45fa920ae5681515df25d9f2c9a8c8  openssl-1.0.2d.tar.gz\"         | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"           | sha256sum -c\n+  echo \"e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633  miniupnpc-1.9.20151008.tar.gz\" | sha256sum -c\n+  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"             | sha256sum -c\n+  echo \"e16b22cbefdd354bec114541f7849a12f8fc2015320ca5282ee4fd787571457b  icu4c-55_1-src.tgz\"            | sha256sum -c\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\"          | shasum -c\n+  #\n+  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  BUILDDIR=$HOME/build\n+  INSTALLPREFIX=$HOME/install\n+  TEMPDIR=$HOME/tmp\n+  DEPSDIR=$HOME/deps\n+  SDK=$DEPSDIR/SDK/MacOSX10.9.sdk\n+  HOST=x86_64-apple-darwin13\n+  MIN_VERSION=10.6\n+  #\n+  mkdir -p $INSTALLPREFIX $BUILDDIR $DEPSDIR\n+  cd $DEPSDIR\n+  tar xf $BUILDDIR/osxcross.tar.xz\n+  PATH=$PATH:$DEPSDIR/bin\n+  #\n+  cd $BUILDDIR\n+  tar xzf openssl-1.0.2d.tar.gz\n+  cd openssl-1.0.2d\n+  CC=cc ./Configure --cross-compile-prefix=$HOST- darwin64-x86_64-cc no-shared no-dso --openssldir=$INSTALLPREFIX\n+  make\n+  make install_sw\n+  #\n+  cd $BUILDDIR\n+  tar xzf db-4.8.30.NC.tar.gz\n+  cd db-4.8.30.NC/build_unix\n+  sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ../dbinc/atomic.h\n+  ../dist/configure --prefix=$INSTALLPREFIX --enable-cxx --host=$HOST --disable-shared --disable-replication\n+  make $MAKEOPTS library_build\n+  make install_lib install_include\n+  cd ../..\n+  #\n+  tar xzf miniupnpc-1.9.20151008.tar.gz\n+  cd miniupnpc-1.9.20151008\n+  make -f Makefile OS=Darwin CC=$HOST-cc AR=$HOST-ar libminiupnpc.a\n+  install -d $INSTALLPREFIX/include/miniupnpc\n+  install *.h $INSTALLPREFIX/include/miniupnpc\n+  install libminiupnpc.a  $INSTALLPREFIX/lib\n+  #\n+  cd $BUILDDIR\n+  mkdir -p icuCross\n+  cd icuCross\n+  tar xzf $BUILDDIR/icu4c-55_1-src.tgz\n+  cd icu/source\n+  mkdir -p $TEMPDIR/icu\n+  ./runConfigureICU MacOSX --prefix=$TEMPDIR/icu --enable-static --disable-shared\n+  make\n+  make install\n+  #rm  -rf icu\n+  cd $BUILDDIR\n+  tar xzf icu4c-55_1-src.tgz\n+  cd icu/source\n+  ./runConfigureICU MacOSX --host=$HOST --with-cross-build=$BUILDDIR/icuCross/icu/source --prefix=$INSTALLPREFIX --enable-static --disable-shared\n+  make\n+  make install\n+  #\n+  cd $BUILDDIR\n+  tar --warning=no-timestamp -xjf boost_1_55_0.tar.bz2\n+  cd boost_1_55_0\n+  ./bootstrap.sh --with-libraries=chrono,filesystem,program_options,system,thread,test\n+  echo \"using darwin : : ${HOST}-clang++\n+        :\n+        <cxxflags>\\\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -msse2 -Qunused-arguments -I${INSTALLPREFIX}/include -DBOOST_HAS_INT128=1\\\"\n+        <linkflags>\\\"-L${INSTALLPREFIX}/lib -B${DEPSDIR}/bin\\\"\n+        <archiver>\\\"${HOST}-libtool\\\"\n+        <striper>\\\"${HOST}-strip\\\" :\n+  ;\" > user-config.jam\n+  ./b2 -d2 --layout=tagged --build-type=complete --prefix=\"${INSTALLPREFIX}\" --toolset=darwin-4.2.1 --user-config=user-config.jam variant=release threading=multi link=static install\n+  #\n+  # post-process all generated libraries to be deterministic\n+  # extract them to a temporary directory then re-build them deterministically\n+  #for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n+  #    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+  #    $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+  #    rm $LIB\n+  #    $HOST-ar crs $LIB $(cat /tmp/list.txt)\n+  #done\n+  #\n+  cd $INSTALLPREFIX\n+  find include lib | sort | tar --no-recursion -cJf $OUTDIR/gameunits-deps-osx-gitian.tar.xz -T -"
      },
      {
        "sha": "9b23eff4dea52c90d65d05a35817e154291059b6",
        "filename": "contrib/gitian-descriptors/deps-win.yml",
        "status": "added",
        "additions": 175,
        "deletions": 0,
        "changes": 175,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/deps-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/deps-win.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,175 @@\n+---\n+name: \"gameunits-deps\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"git-core\"\n+- \"faketime\"\n+- \"psmisc\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"openssl-1.0.2d.tar.gz\"\n+- \"db-4.8.30.NC.tar.gz\"\n+- \"miniupnpc-1.9.20151008.tar.gz\"\n+- \"zlib-1.2.8.tar.gz\"\n+- \"libpng-1.6.10.tar.gz\"\n+- \"icu4c-55_1-src.tgz\"\n+- \"boost_1_55_0.tar.bz2\"\n+- \"boost-mingw-gas-cross-compile-2013-03-03.patch\"\n+script: |\n+  #\n+  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  # Input Integrity Check\n+  echo \"671c36487785628a703374c652ad2cebea45fa920ae5681515df25d9f2c9a8c8  openssl-1.0.2d.tar.gz\"         | sha256sum -c\n+  echo \"12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef  db-4.8.30.NC.tar.gz\"           | sha256sum -c\n+  echo \"e444ac3b587ce82709c4d0cfca1fe71f44f9fc433e9f946b12b9e1bfe667a633  miniupnpc-1.9.20151008.tar.gz\" | sha256sum -c\n+  echo \"36658cb768a54c1d4dec43c3116c27ed893e88b02ecfcb44f2166f9c0b7f2a0d  zlib-1.2.8.tar.gz\"             | sha256sum -c\n+  echo \"b0206a22b49c91fc5521b2cfb1c251433a37aed0a645bc504ab3d061f27e4d51  libpng-1.6.10.tar.gz\"          | sha256sum -c\n+  echo \"e16b22cbefdd354bec114541f7849a12f8fc2015320ca5282ee4fd787571457b  icu4c-55_1-src.tgz\"            | sha256sum -c\n+  echo \"fff00023dd79486d444c8e29922f4072e1d451fc5a4d2b6075852ead7f2b7b52  boost_1_55_0.tar.bz2\"          | sha256sum -c\n+  echo \"d2b7f6a1d7051faef3c9cf41a92fa3671d905ef1e1da920d07651a43299f6268  boost-mingw-gas-cross-compile-2013-03-03.patch\" \\\n+                                                                                                         | sha256sum -c\n+  #\n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    if [ \"$BITS\" == \"32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    mkdir -p $INSTALLPREFIX $BUILDDIR\n+    cd $BUILDDIR\n+    #\n+    tar xzf $INDIR/openssl-1.0.2d.tar.gz\n+    cd openssl-1.0.2d\n+    if [ \"$BITS\" == \"32\" ]; then\n+      OPENSSL_TGT=mingw\n+    else\n+      OPENSSL_TGT=mingw64\n+    fi\n+    ./Configure --cross-compile-prefix=$HOST- ${OPENSSL_TGT} no-shared no-dso --openssldir=$INSTALLPREFIX\n+    make\n+    make install_sw\n+    cd ..\n+    #\n+    tar xzf $INDIR/db-4.8.30.NC.tar.gz\n+    cd db-4.8.30.NC/build_unix\n+    ../dist/configure --prefix=$INSTALLPREFIX --enable-mingw --enable-cxx --host=$HOST --disable-shared --disable-replication\n+    make $MAKEOPTS library_build\n+    make install_lib install_include\n+    cd ../..\n+    #\n+    tar xzf $INDIR/miniupnpc-1.9.20151008.tar.gz\n+    cd miniupnpc-1.9.20151008\n+    echo \"\n+  --- miniupnpc-1.9/Makefile.mingw.orig   2013-09-29 18:52:51.014087958 -1000\n+  +++ miniupnpc-1.9/Makefile.mingw        2013-09-29 19:09:29.663318691 -1000\n+  @@ -67,8 +67,8 @@\n+   \n+   wingenminiupnpcstrings.o:\twingenminiupnpcstrings.c\n+   \n+  -miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings\n+  -\twingenminiupnpcstrings \\$< \\$@\n+  +miniupnpcstrings.h: miniupnpcstrings.h.in \n+  +\tsed -e 's|OS/version|MSWindows/5.1.2600|' -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"VERSIONHERE\\\"|' \\$< > \\$@\n+   \n+   minixml.o:\tminixml.c minixml.h miniupnpcstrings.h\n+   \n+  \" | sed \"s/VERSIONHERE/$(cat VERSION)/\" | patch -p1\n+    mkdir -p dll\n+    make -f Makefile.mingw CC=$HOST-gcc AR=$HOST-ar libminiupnpc.a\n+    install -d $INSTALLPREFIX/include/miniupnpc\n+    install *.h $INSTALLPREFIX/include/miniupnpc\n+    install libminiupnpc.a  $INSTALLPREFIX/lib\n+    cd ..\n+    #\n+    #\n+    tar xzf $INDIR/zlib-1.2.8.tar.gz\n+    cd zlib-1.2.8\n+    CROSS_PREFIX=$HOST- ./configure --prefix=$INSTALLPREFIX --static\n+    make\n+    make install\n+    cd ..\n+    #\n+    tar xzf $INDIR/libpng-1.6.10.tar.gz\n+    cd libpng-1.6.10\n+    OPT=\"-O2\"\n+    CPPFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" CFLAGS=\"${OPT} -I$INSTALLPREFIX/include\" LDFLAGS=\"${OPT} -L$INSTALLPREFIX/lib\" ./configure --disable-shared --prefix=$INSTALLPREFIX --host=$HOST\n+    make $MAKEOPTS\n+    make install\n+    cd ..\n+    #\n+    mkdir icuCross\n+    cd icuCross\n+    tar xzf $INDIR/icu4c-55_1-src.tgz\n+    cd icu/source\n+    mkdir -p $TEMPDIR/icu\n+    ./runConfigureICU MinGW --prefix=$TEMPDIR/icu --enable-static --disable-shared\n+    make\n+    make install\n+    cd ../../..\n+    #rm  -rf icu\n+    tar xzf $INDIR/icu4c-55_1-src.tgz\n+    cd icu/source\n+    ./runConfigureICU MinGW --host=$HOST --with-cross-build=$BUILDDIR/icuCross/icu/source --prefix=$INSTALLPREFIX --enable-static --disable-shared\n+    make\n+    make install\n+    cd ../..\n+    #\n+    tar --warning=no-timestamp -xjf $INDIR/boost_1_55_0.tar.bz2\n+    cd boost_1_55_0\n+    GCCVERSION=$($HOST-g++ -E -dM $(mktemp --suffix=.h) | grep __VERSION__ | cut -d ' ' -f 3 | cut -d '\"' -f 2)\n+    echo \"using gcc : $GCCVERSION : $HOST-g++\n+        :\n+        <rc>$HOST-windres\n+        <archiver>$HOST-ar\n+        <cxxflags>-frandom-seed=boost1\n+        <ranlib>$HOST-ranlib\n+  ;\" > user-config.jam\n+    ./bootstrap.sh --without-icu\n+\n+    # Workaround: Upstream boost dev refuses to include patch that would allow Free Software cross-compile toolchain to work\n+    #             This patch was authored by the Fedora package developer and ships in Fedora's mingw32-boost.\n+    #             Please obtain the exact patch that matches the above sha256sum from one of the following mirrors.\n+    #\n+    # Read History:   https://svn.boost.org/trac/boost/ticket/7262\n+    # History Mirror: http://rose.makesad.us/~paulproteus/mirrors/7262%20Boost.Context%20fails%20to%20build%20using%20MinGW.html\n+    #\n+    # Patch:          https://svn.boost.org/trac/boost/raw-attachment/ticket/7262/boost-mingw.patch\n+    # Patch Mirror:   http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    # Patch Mirror:   http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    # Patch Mirror:   http://rose.makesad.us/~paulproteus/mirrors/boost-mingw-gas-cross-compile-2013-03-03.patch\n+    patch -p0 < $INDIR/boost-mingw-gas-cross-compile-2013-03-03.patch\n+\n+    # Bug Workaround: boost-1.54.0 broke the ability to disable zlib, still broken in 1.55\n+    # https://svn.boost.org/trac/boost/ticket/9156\n+    sed -i 's^\\[ ac.check-library /zlib//zlib : <library>/zlib//zlib^^' libs/iostreams/build/Jamfile.v2\n+    sed -i 's^<source>zlib.cpp <source>gzip.cpp \\]^^' libs/iostreams/build/Jamfile.v2\n+\n+    # http://statmt.org/~s0565741/software/boost_1_52_0/libs/context/doc/html/context/requirements.html\n+    # \"For cross-compiling the lib you must specify certain additional properties at bjam command line: target-os, abi, binary-format, architecture and address-model.\"\n+    ./bjam toolset=gcc binary-format=pe target-os=windows threadapi=win32 address-model=$BITS threading=multi variant=release link=static runtime-link=static --user-config=user-config.jam --without-mpi --without-python -sNO_BZIP2=1 -sNO_ZLIB=1 --layout=tagged --build-type=complete --prefix=\"$INSTALLPREFIX\" $MAKEOPTS install\n+    # post-process all generated libraries to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name \\*.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd $INSTALLPREFIX\n+    find include lib | sort | tar --no-recursion -cJf $OUTDIR/gameunits-deps-win$BITS-gitian.tar.xz -T -  \n+  done # for BITS in"
      },
      {
        "sha": "7e46a59e9ef5b8e4d3630414f8d3e97570fafc30",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 49,
        "deletions": 97,
        "changes": 146,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,113 +1,65 @@\n ---\n-name: \"bitcoin-linux-0.13\"\n-enable_cache: true\n+name: \"gameunits\"\n suites:\n - \"trusty\"\n architectures:\n+- \"i386\"\n - \"amd64\"\n packages: \n-- \"g++-multilib\"\n+- \"g++\"\n+- \"libqt5webkit5-dev\"\n+- \"qt5-qmake\"\n+- \"qt5-default\"\n+- \"qttools5-dev-tools\"\n - \"git-core\"\n+- \"unzip\"\n - \"pkg-config\"\n-- \"autoconf\"\n - \"libtool\"\n - \"automake\"\n - \"faketime\"\n - \"bsdmainutils\"\n-- \"binutils-gold\"\n-- \"ca-certificates\"\n-- \"python\"\n-reference_datetime: \"2016-01-01 00:00:00\"\n+reference_datetime: \"2015-05-25 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n+- \"url\": \"https://github.com/KingCaper/GAMEUNITS.git\"\n+  \"dir\": \"gameunits\"\t\n+files:\n+- \"gameunits-deps-linux32-gitian.zip\"\n+- \"gameunits-deps-linux64-gitian.zip\"\n script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"i686-pc-linux-gnu x86_64-unknown-linux-gnu\"\n-  CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"date ar ranlib nm strip\"\n-\n-  export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n+  #Integrity check\n+  echo \"03319496b897507fe0c49a13bd96a09edb795ed0b54528459acd760d8c2c763a  gameunits-deps-linux32-gitian.zip\" |sha256sum -c\n+  echo \"7710a73c4b965b59de099ab33c982e3c113b14faf21786f018ad01f01f7b84b3  gameunits-deps-linux64-gitian.zip\" |sha256sum -c\n+  STAGING=\"$HOME/install\"\n+  OPTFLAGS='-O2'\n+  BINDIR=\"${OUTDIR}/bin/${GBUILD_BITS}\" # 32/64 bit build specific output directory\n+  TEMPDIR=\"$HOME/tempdir\"\n+  if [ \"$GBUILD_BITS\" == \"32\" ]; then\n+    export LD_PRELOAD=/usr/lib/i386-linux-gnu/faketime/libfaketime.so.1;\n+  else\n+    export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1;\n   fi\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  # Create per-host faketime wrappers\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make ${MAKEOPTS} -C src check-symbols\n-    make install-strip\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  export LIBRARY_PATH=\"$STAGING/lib\"\n+  mkdir -p ${BINDIR}\n+  #\n+  mkdir -p $STAGING\n+  cd $STAGING\n+  unzip ../build/gameunits-deps-linux${GBUILD_BITS}-gitian-r4.zip\n+  unzip ../build/boost-linux${GBUILD_BITS}-1.55.0-gitian-r1.zip\n+  cd ../build\n+  #\n+  cd gameunits \n   mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-linux64.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.tar.gz ${OUTDIR}/${DISTNAME}-linux32.tar.gz\n-\n+  git archive HEAD | tar -x -C $OUTDIR/src\n+  cp $OUTDIR/src/doc/README $OUTDIR\n+  cp $OUTDIR/src/COPYING $OUTDIR\n+  cd src\n+  make -f makefile.unix STATIC=1 OPENSSL_INCLUDE_PATH=\"$STAGING/include\" OPENSSL_LIB_PATH=\"$STAGING/lib\" $MAKEOPTS gameunitsd USE_UPNP=1 BOOST_LIB_SUFFIX=\"-mt\" DEBUGFLAGS= \n+  mkdir -p $STAGING/bin/$GBUILD_BITS\n+  install -s gameunitsd $OUTDIR/bin/$GBUILD_BITS\n+  #\n+  cd ..\n+  qmake INCLUDEPATH=\"$STAGING/include\" LIBS=\"-L$STAGING/lib\" BOOST_LIB_SUFFIX=\"-mt\" RELEASE=1 USE_QRCODE=1\n+  make $MAKEOPTS\n+  install gameunits $OUTDIR/bin/$GBUILD_BITS"
      },
      {
        "sha": "c4165470af1320e4503119c2da276c55ecb5353f",
        "filename": "contrib/gitian-descriptors/gitian-osx-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/gitian-osx-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx-signer.yml?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,38 +0,0 @@\n----\n-name: \"bitcoin-dmg-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"faketime\"\n-reference_datetime: \"2016-01-01 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"bitcoin-osx-unsigned.tar.gz\"\n-script: |\n-  WRAP_DIR=$HOME/wrapped\n-  mkdir -p ${WRAP_DIR}\n-  export PATH=`pwd`:$PATH\n-  FAKETIME_PROGS=\"dmg genisoimage\"\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  UNSIGNED=bitcoin-osx-unsigned.tar.gz\n-  SIGNED=bitcoin-osx-signed.dmg\n-\n-  tar -xf ${UNSIGNED}\n-  OSX_VOLNAME=\"$(cat osx_volname)\"\n-  ./detached-sig-apply.sh ${UNSIGNED} signature/osx\n-  ${WRAP_DIR}/genisoimage -no-cache-inodes -D -l -probe -V \"${OSX_VOLNAME}\" -no-pad -r -apple -o uncompressed.dmg signed-app\n-  ${WRAP_DIR}/dmg dmg uncompressed.dmg ${OUTDIR}/${SIGNED}"
      },
      {
        "sha": "b6fffd7e10c40354e62946f2283e413d2b419b21",
        "filename": "contrib/gitian-descriptors/gitian-osx.yml",
        "status": "modified",
        "additions": 73,
        "deletions": 130,
        "changes": 203,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-osx.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,145 +1,88 @@\n ---\n-name: \"bitcoin-osx-0.13\"\n-enable_cache: true\n+name: \"gameunits\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n-- \"ca-certificates\"\n-- \"g++\"\n+packages:\n - \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n-- \"librsvg2-bin\"\n-- \"libtiff-tools\"\n+- \"clang\"\n+- \"llvm-dev\"\n+- \"unzip\"\n+- \"zip\"\n+- \"nsis\"\n+- \"faketime\"\n+- \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n-- \"faketime\"\n+- \"pkg-config\"\n - \"bsdmainutils\"\n-- \"cmake\"\n-- \"imagemagick\"\n-- \"libcap-dev\"\n-- \"libz-dev\"\n-- \"libbz2-dev\"\n - \"python\"\n-- \"python-dev\"\n-- \"python-setuptools\"\n-- \"fonts-tuffy\"\n-reference_datetime: \"2016-01-01 00:00:00\"\n+- \"genisoimage\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n+- \"url\": \"https://github.com/KingCaper/GAMEUNITS.git\"\n+  \"dir\": \"gameunits\"\n files:\n-- \"MacOSX10.9.sdk.tar.gz\"\n+- \"qt-osx-5.5.0-gitian.tar.xz\"\n+- \"gameunits-deps-osx-gitian.zip\"\n+- \"osxcross.tar.xz\"\n script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-apple-darwin11\"\n-  CONFIGFLAGS=\"--enable-reduce-exports GENISOIMAGE=$WRAP_DIR/genisoimage\"\n-  FAKETIME_HOST_PROGS=\"\"\n-  FAKETIME_PROGS=\"ar ranlib date dmg genisoimage\"\n-\n+  # Defines\n+  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  OPTFLAGS='-O2'\n+  TEMPDIR=\"$HOME/tempdir\"\n+  BUILDDIR=$HOME/build\n+  DEPSDIR=$HOME/deps\n+  HOST=x86_64-apple-darwin13\n+  DISTNAME=x86_64-darwin\n+  export PATH=$DEPSDIR/host/bin:$DEPSDIR:$DEPSDIR/bin:$PATH\n+  NEEDDIST=1\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n   export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  export ZERO_AR_DATE=1\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  # Create per-host faketime wrappers\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-  export PATH=${WRAP_DIR}:${PATH}\n-\n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-\n-  mkdir -p ${BASEPREFIX}/SDKs\n-  tar -C ${BASEPREFIX}/SDKs -xf ${BUILD_DIR}/MacOSX10.9.sdk.tar.gz\n-\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n-  popd\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make install-strip\n-\n-    make osx_volname\n-    make deploydir\n-    OSX_VOLNAME=\"$(cat osx_volname)\"\n-    mkdir -p unsigned-app-${i}\n-    cp osx_volname unsigned-app-${i}/\n-    cp contrib/macdeploy/detached-sig-apply.sh unsigned-app-${i}\n-    cp contrib/macdeploy/detached-sig-create.sh unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/dmg ${BASEPREFIX}/${i}/native/bin/genisoimage unsigned-app-${i}\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-codesign_allocate unsigned-app-${i}/codesign_allocate\n-    cp ${BASEPREFIX}/${i}/native/bin/${i}-pagestuff unsigned-app-${i}/pagestuff\n-    mv dist unsigned-app-${i}\n-    pushd unsigned-app-${i}\n-    find . | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-osx-unsigned.tar.gz\n-    popd\n-\n-    make deploy\n-    ${WRAP_DIR}/dmg dmg \"${OSX_VOLNAME}.dmg\" ${OUTDIR}/${DISTNAME}-osx-unsigned.dmg\n-\n-    cd installed\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-${i}.tar.gz\n-    cd ../../\n-  done\n+  mkdir -p $BUILDDIR $BINDIR $DEPSDIR\n+  cd $DEPSDIR\n+  unzip -o $BUILDDIR/gameunits-deps-osx-gitian.zip\n+  tar xf $BUILDDIR/osxcross.tar.xz\n+  mkdir -p $HOME/install\n+  cd $HOME/install\n+  tar xf $BUILDDIR/qt-osx-5.5.0-gitian.tar.xz\n+  #\n+  cd $BUILDDIR/gameunits\n   mkdir -p $OUTDIR/src\n-  mv $SOURCEDIST $OUTDIR/src\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.tar.gz ${OUTDIR}/${DISTNAME}-osx64.tar.gz\n+  git archive HEAD | tar -x -C $OUTDIR/src\n+  cp $OUTDIR/src/doc/README $OUTDIR/readme.txt\n+  cp $OUTDIR/src/COPYING $OUTDIR/COPYING.txt\n+  #\n+  #cd src\n+  #make -f makefile.linux-mingw HOST=\"$HOST\" DEPSDIR=\"$DEPSDIR\" CURDIR=\"$BUILDDIR/gameunits/src\" STATIC=1 $MAKEOPTS USE_UPNP=1 BOOST_LIB_SUFFIX=\"-mt-s\" DEBUGFLAGS= \n+  #cp gameunitsd.exe $BINDIR/\n+  #cd ..\n+  #\n+  #$DEPSDIR/qt/host/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/lib BOOST_INCLUDE_PATH=$HOME/build/include BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1h OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1h/include INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n+  ~/install/host/bin/qmake -xplatform macx-clang-linux RELEASE=1 QMAKE_LRELEASE=\"~/install/host/bin/lrelease\" MINIUPNPC_LIB_PATH=\"$DEPSDIR/lib\" MINIUPNPC_INCLUDE_PATH=\"$DEPSDIR/include\" BDB_LIB_PATH=\"$DEPSDIR/lib\" BDB_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_PATH=\"$DEPSDIR/lib\" BOOST_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_SUFFIX=\"-mt-s\" BOOST_THREAD_LIB_SUFFIX=\"-mt-s\" OPENSSL_LIB_PATH=\"$DEPSDIR/lib\" OPENSSL_INCLUDE_PATH=\"$DEPSDIR/include\" INCLUDEPATH=\"$DEPSDIR/include\" DEFINES=\"BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 USE_BUILD_INFO=1\" QMAKE_CXXFLAGS+=\" -I/home/ubuntu/deps/SDK/MacOSX10.9.sdk/usr/include -DBOOST_HAS_INT128=1 -frandom-seed=bitcoin\"\n+  make $MAKEOPTS\n+  # macdeploy: TODO: .dmg\n+  export OTOOL=${HOST}-otool\n+  export INSTALLNAMETOOL=${HOST}-install_name_tool\n+  export STRIP=${HOST}-strip\n+  chmod +x contrib/macdeploy/macdeployqtplus\n+  OTOOL=${HOST}-otool INSTALLNAMETOOL=${HOST}-install_name_tool STRIP=${HOST}-strip contrib/macdeploy/macdeployqtplus Gameunits.app\n+  mkdir -p  dist/.background\n+  install contrib/macdeploy/background.png dist/.background\n+  install contrib/macdeploy/DS_Store dist/.DS_Store\n+  cd dist\n+  ln -sf /Applications Applications\n+  cd ..\n+  genisoimage -no-cache-inodes -l -probe -V \"Gameunits\" -no-pad -r -apple -o Gameunits.tmp.dmg dist\n+  dmg dmg Gameunits.tmp.dmg $OUTDIR/Gameunits.dmg\n+  #"
      },
      {
        "sha": "27c4f01eb4ed9e96a3c3a2a937b64e1e777f9504",
        "filename": "contrib/gitian-descriptors/gitian-win-signer.yml",
        "status": "removed",
        "additions": 0,
        "deletions": 39,
        "changes": 39,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/gitian-win-signer.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-descriptors/gitian-win-signer.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win-signer.yml?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,39 +0,0 @@\n----\n-name: \"bitcoin-win-signer\"\n-suites:\n-- \"trusty\"\n-architectures:\n-- \"amd64\"\n-packages:\n-- \"libssl-dev\"\n-- \"autoconf\"\n-reference_datetime: \"2016-01-01 00:00:00\"\n-remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin-detached-sigs.git\"\n-  \"dir\": \"signature\"\n-files:\n-- \"osslsigncode-1.7.1.tar.gz\"\n-- \"osslsigncode-Backports-to-1.7.1.patch\"\n-- \"bitcoin-win-unsigned.tar.gz\"\n-script: |\n-  BUILD_DIR=`pwd`\n-  SIGDIR=${BUILD_DIR}/signature/win\n-  UNSIGNED_DIR=${BUILD_DIR}/unsigned\n-\n-  echo \"f9a8cdb38b9c309326764ebc937cba1523a3a751a7ab05df3ecc99d18ae466c9  osslsigncode-1.7.1.tar.gz\" | sha256sum -c\n-  echo \"a8c4e9cafba922f89de0df1f2152e7be286aba73f78505169bc351a7938dd911  osslsigncode-Backports-to-1.7.1.patch\" | sha256sum -c\n-\n-  mkdir -p ${UNSIGNED_DIR}\n-  tar -C ${UNSIGNED_DIR} -xf bitcoin-win-unsigned.tar.gz\n-\n-  tar xf osslsigncode-1.7.1.tar.gz\n-  cd osslsigncode-1.7.1\n-  patch -p1 < ${BUILD_DIR}/osslsigncode-Backports-to-1.7.1.patch\n-\n-  ./configure --without-gsf --without-curl --disable-dependency-tracking\n-  make\n-  find ${UNSIGNED_DIR} -name \"*-unsigned.exe\" | while read i; do\n-    INFILE=\"`basename \"${i}\"`\"\n-    OUTFILE=\"`echo \"${INFILE}\" | sed s/-unsigned//`\"\n-    ./osslsigncode attach-signature -in \"${i}\" -out \"${OUTDIR}/${OUTFILE}\" -sigin \"${SIGDIR}/${INFILE}.pem\"\n-  done"
      },
      {
        "sha": "bc19a653f62300512cb19c26d2f57d1a84a2d9a4",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 101,
        "deletions": 131,
        "changes": 232,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -1,145 +1,115 @@\n ---\n-name: \"bitcoin-win-0.13\"\n-enable_cache: true\n+name: \"gameunits\"\n suites:\n - \"trusty\"\n architectures:\n - \"amd64\"\n-packages: \n-- \"g++\"\n+packages:\n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n - \"git-core\"\n-- \"pkg-config\"\n-- \"autoconf\"\n+- \"nsis\"\n+- \"faketime\"\n+- \"autoconf2.13\"\n - \"libtool\"\n - \"automake\"\n-- \"faketime\"\n+- \"pkg-config\"\n - \"bsdmainutils\"\n-- \"mingw-w64\"\n-- \"g++-mingw-w64\"\n-- \"nsis\"\n-- \"zip\"\n-- \"ca-certificates\"\n-- \"python\"\n-reference_datetime: \"2016-01-01 00:00:00\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/bitcoin/bitcoin.git\"\n-  \"dir\": \"bitcoin\"\n-files: []\n+- \"url\": \"https://github.com/KingCaper/gameunits.git\"\n+  \"dir\": \"gameunits\"\n+files:\n+- \"qt-win32-5.5.0-gitian.tar.xz\"\n+- \"qt-win64-5.5.0-gitian.tar.xz\"\n+- \"gameunits-deps-win32-gitian.tar.xz\"\n+- \"gameunits-deps-win64-gitian.tar.xz\"\n script: |\n-  WRAP_DIR=$HOME/wrapped\n-  HOSTS=\"x86_64-w64-mingw32 i686-w64-mingw32\"\n-  CONFIGFLAGS=\"--enable-reduce-exports\"\n-  FAKETIME_HOST_PROGS=\"g++ ar ranlib nm windres strip\"\n-  FAKETIME_PROGS=\"date makensis zip\"\n-\n+  # Defines\n+  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  OPTFLAGS='-O2'\n+  TEMPDIR=\"$HOME/tempdir\"\n+  \n+  NEEDDIST=1\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n   export QT_RCC_TEST=1\n-  export GZIP=\"-9n\"\n-  export TAR_OPTIONS=\"--mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n-  export TZ=\"UTC\"\n-  export BUILD_DIR=`pwd`\n-  mkdir -p ${WRAP_DIR}\n-  if test -n \"$GBUILD_CACHE_ENABLED\"; then\n-    export SOURCES_PATH=${GBUILD_COMMON_CACHE}\n-    export BASE_CACHE=${GBUILD_PACKAGE_CACHE}\n-    mkdir -p ${BASE_CACHE} ${SOURCES_PATH}\n-  fi\n-\n-  # Create global faketime wrappers\n-  for prog in ${FAKETIME_PROGS}; do\n-    echo '#!/bin/bash' > ${WRAP_DIR}/${prog}\n-    echo \"REAL=\\`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1\\`\" >> ${WRAP_DIR}/${prog}\n-    echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${prog}\n-    echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${prog}\n-    echo \"\\$REAL \\$@\" >> $WRAP_DIR/${prog}\n-    chmod +x ${WRAP_DIR}/${prog}\n-  done\n-\n-  # Create per-host faketime wrappers\n-  for i in $HOSTS; do\n-    for prog in ${FAKETIME_HOST_PROGS}; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-\n-  # Create per-host linker wrapper\n-  # This is only needed for trusty, as the mingw linker leaks a few bytes of\n-  # heap, causing non-determinism. See discussion in https://github.com/bitcoin/bitcoin/pull/6900\n-  for i in $HOSTS; do\n-    mkdir -p ${WRAP_DIR}/${i}\n-    for prog in collect2; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}/${prog}\n-        REAL=$(${i}-gcc -print-prog-name=${prog})\n-        echo \"export MALLOC_PERTURB_=255\" >> ${WRAP_DIR}/${i}/${prog}\n-        echo \"${REAL} \\$@\" >> $WRAP_DIR/${i}/${prog}\n-        chmod +x ${WRAP_DIR}/${i}/${prog}\n-    done\n-    for prog in gcc g++; do\n-        echo '#!/bin/bash' > ${WRAP_DIR}/${i}-${prog}\n-        echo \"REAL=\\`which -a ${i}-${prog} | grep -v ${WRAP_DIR}/${i}-${prog} | head -1\\`\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo 'export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1' >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export FAKETIME=\\\"${REFERENCE_DATETIME}\\\"\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"export COMPILER_PATH=${WRAP_DIR}/${i}\" >> ${WRAP_DIR}/${i}-${prog}\n-        echo \"\\$REAL \\$@\" >> $WRAP_DIR/${i}-${prog}\n-        chmod +x ${WRAP_DIR}/${i}-${prog}\n-    done\n-  done\n-\n-  export PATH=${WRAP_DIR}:${PATH}\n+  for BITS in 32 64; do # for architectures\n+    #\n+    STAGING=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    BINDIR=$OUTDIR/$BITS\n+    DEPSDIR=$HOME/deps${BITS}\n+    if [ \"$BITS\" == \"32\" ]; then\n+      HOST=i686-w64-mingw32\n+      DISTNAME=i686-win\n+    else\n+      HOST=x86_64-w64-mingw32\n+      DISTNAME=x86_64-win\n+    fi\n+    export PATH=$STAGING/host/bin:$PATH\n+    rm -rf $DEPSDIR\n+    rm -rf $BUILDDIR\n+    rm -rf $STAGING\n+    mkdir -p $STAGING $BUILDDIR $BINDIR $DEPSDIR\n+    #\n+    cd $STAGING\n+    #mkdir qt\n+    #cd qt\n+    #5edf8d14e47eb6438d3b5a20ed577343a07512eb220e6f83cbb3fbd33112a776  qt-win32-5.5.0-gitian-r3.zip\n+    #75a3b425f08969983b2faf0af83b01fd753f99a15ced0b6f998d4db0a1c077f3  qt-win64-5.5.0-gitian-r3.zip\n \n-  cd bitcoin\n-  BASEPREFIX=`pwd`/depends\n-  # Build dependencies for each host\n-  for i in $HOSTS; do\n-    make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n-  done\n-\n-  # Create the release tarball using (arbitrarily) the first host\n-  ./autogen.sh\n-  ./configure --prefix=${BASEPREFIX}/`echo \"${HOSTS}\" | awk '{print $1;}'`\n-  make dist\n-  SOURCEDIST=`echo bitcoin-*.tar.gz`\n-  DISTNAME=`echo ${SOURCEDIST} | sed 's/.tar.*//'`\n-\n-  # Correct tar file order\n-  mkdir -p temp\n-  pushd temp\n-  tar xf ../$SOURCEDIST\n-  find bitcoin-* | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ../$SOURCEDIST\n+    tar xf $INDIR/qt-win${BITS}-5.5.0-gitian.tar.xz\n+    cd $DEPSDIR\n+    tar xf $INDIR/gameunits-deps-win${BITS}-gitian.tar.xz\n+    #\n+    cd $BUILDDIR\n+    cp -r ../build/gameunits .\n+    cd gameunits\n+    mkdir -p $OUTDIR/src\n+    git archive HEAD | tar -x -C $OUTDIR/src\n+    cp $OUTDIR/src/doc/README_windows.txt $OUTDIR/readme.txt\n+    cp $OUTDIR/src/COPYING $OUTDIR/COPYING.txt\n+    #\n+    cd src\n+    make -f makefile.linux-mingw HOST=\"$HOST\" DEPSDIR=\"$DEPSDIR\" CURDIR=\"$BUILDDIR/gameunits/src\" STATIC=1 $MAKEOPTS USE_UPNP=1 BOOST_LIB_SUFFIX=\"-mt-s\" DEBUGFLAGS= \n+    cp gameunitsd.exe $BINDIR/\n+    cd ..\n+    #\n+    #$DEPSDIR/qt/host/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/lib BOOST_INCLUDE_PATH=$HOME/build/include BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1h OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1h/include INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n+    $STAGING/host/bin/qmake -xplatform win32-g++ RELEASE=1 QMAKE_LRELEASE=\"$STAGING/host/bin/lrelease\" MINIUPNPC_LIB_PATH=\"$DEPSDIR/lib\" MINIUPNPC_INCLUDE_PATH=\"$DEPSDIR/include\" BDB_LIB_PATH=\"$DEPSDIR/lib\" BDB_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_PATH=\"$DEPSDIR/lib\" BOOST_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_SUFFIX=\"-mt-s\" BOOST_THREAD_LIB_SUFFIX=\"_win32-mt-s\" OPENSSL_LIB_PATH=\"$DEPSDIR/lib\" OPENSSL_INCLUDE_PATH=\"$DEPSDIR/include\" INCLUDEPATH=\"$DEPSDIR/include\" DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n+    make $MAKEOPTS\n+    cp release/gameunits.exe $BINDIR/\n+    #\n+    # windeployqt !?\n+    #\n+    cp $STAGING/host/bin/*.dll $BINDIR/\n+    if [ \"$BITS\" == \"32\" ]; then\n+      cp /usr/lib/gcc/i686-w64-mingw32/4.8/*.dll $BINDIR/\n+      cp /usr/i686-w64-mingw32/lib/*.dll $BINDIR/\n+    else\n+      cp /usr/lib/gcc/x86_64-w64-mingw32/4.8/*.dll $BINDIR/\n+      cp /usr/x86_64-w64-mingw32/lib/*.dll $BINDIR/\n+    fi\n+    mkdir -p $BINDIR/platforms\n+    cp $STAGING/plugins/platforms/*.dll $BINDIR/platforms/\n+    #\n+    unset LD_PRELOAD\n+    unset FAKETIME\n+  done # for BITS in\n+  #\n+  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n   mkdir -p $OUTDIR/src\n-  cp ../$SOURCEDIST $OUTDIR/src\n-  popd\n-\n-  ORIGPATH=\"$PATH\"\n-  # Extract the release tarball into a dir for each host and build\n-  for i in ${HOSTS}; do\n-    export PATH=${BASEPREFIX}/${i}/native/bin:${ORIGPATH}\n-    mkdir -p distsrc-${i}\n-    cd distsrc-${i}\n-    INSTALLPATH=`pwd`/installed/${DISTNAME}\n-    mkdir -p ${INSTALLPATH}\n-    tar --strip-components=1 -xf ../$SOURCEDIST\n-\n-    ./configure --prefix=${BASEPREFIX}/${i} --bindir=${INSTALLPATH}/bin --includedir=${INSTALLPATH}/include --libdir=${INSTALLPATH}/lib --disable-ccache --disable-maintainer-mode --disable-dependency-tracking ${CONFIGFLAGS}\n-    make ${MAKEOPTS}\n-    make ${MAKEOPTS} -C src check-security\n-    make deploy\n-    make install-strip\n-    cp -f bitcoin-*setup*.exe $OUTDIR/\n-    cd installed\n-    mv ${DISTNAME}/bin/*.dll ${DISTNAME}/lib/\n-    find . -name \"lib*.la\" -delete\n-    find . -name \"lib*.a\" -delete\n-    rm -rf ${DISTNAME}/lib/pkgconfig\n-    find ${DISTNAME} -type f | sort | zip -X@ ${OUTDIR}/${DISTNAME}-${i}.zip\n-    cd ../..\n-  done\n-  cd $OUTDIR\n-  rename 's/-setup\\.exe$/-setup-unsigned.exe/' *-setup.exe\n-  find . -name \"*-setup-unsigned.exe\" | sort | tar --no-recursion --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 -c -T - | gzip -9n > ${OUTDIR}/${DISTNAME}-win-unsigned.tar.gz\n-  mv ${OUTDIR}/${DISTNAME}-x86_64-*.zip ${OUTDIR}/${DISTNAME}-win64.zip\n-  mv ${OUTDIR}/${DISTNAME}-i686-*.zip ${OUTDIR}/${DISTNAME}-win32.zip\n+  rm -rf $TEMPDIR\n+  mkdir -p $TEMPDIR\n+  cd $TEMPDIR\n+  cd $BINDIR\n+  #tar -xvf $HOME/build/gameunits/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME"
      },
      {
        "sha": "7e7816ae06b6e8caef367983e54c4c81ab7c683d",
        "filename": "contrib/gitian-descriptors/osxcross.yml",
        "status": "added",
        "additions": 61,
        "deletions": 0,
        "changes": 61,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/osxcross.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/osxcross.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/osxcross.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,61 @@\n+---\n+name: \"osxcross\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"clang\"\n+- \"llvm-dev\"\n+- \"libxml2-dev\"\n+- \"uuid-dev\"\n+- \"libssl-dev\"\n+- \"bsdmainutils\"\n+- \"zip\"\n+- \"cmake\"\n+reference_datetime: \"2013-06-01 00:00:00\"\n+remotes:\n+- \"url\": \"https://github.com/tpoechtrager/osxcross.git\"\n+  \"dir\": \"osxcross\"\n+- \"url\": \"https://github.com/planetbeing/libdmg-hfsplus\"\n+  \"dir\": \"libdmg-hfsplus\"\n+files:\n+- \"MacOSX10.9.sdk.tar.xz\"\n+script: |\n+  # Defines\n+  export TZ=UTC\n+  export TAR_OPTIONS=\"-m --mtime=\"$REFERENCE_DATE\\\\\\ $REFERENCE_TIME\"\"\n+  BUILDDIR=$HOME/build\n+  PREFIX=$HOME/install\n+  mkdir -p $BUILDDIR $PREFIX\n+  cd $BUILDDIR\n+  PATH=$PATH:$BUILDDIR\n+\n+  # Build OSX Cross\n+  cd osxcross\n+  ln -s $HOME/build/MacOSX10.9.sdk.tar.xz tarballs/\n+  UNATTENDED=1 ./build.sh\n+  cd target\n+  mv * $PREFIX\n+  # Fix broken symlinks\n+  rm -f $PREFIX/bin/osxcross-macports $PREFIX/bin/osxcross-mp $PREFIX/bin/omp\n+  mv ../tools/osxcross-macports $PREFIX/bin\n+  cd $PREFIX/bin\n+  ln -sf osxcross-macports osxcross-mp \n+  ln -sf osxcross-macports omp \n+  cd $PREFIX/SDK/MacOSX10.9.sdk/usr/include\n+  rm stdarg.h\n+  ln -sf ../../System/Library/Frameworks/Kernel.framework/Versions/A/Headers/stdarg.h .\n+  cd ../share\n+  rm -rf man # No need for manuals...\n+  # Build hdutil and .dmg dependencies\n+  cd $BUILDDIR/libdmg-hfsplus\n+  cmake CMakeLists.txt\n+  make\n+  mv dmg/dmg $PREFIX/bin\n+  mv hfs/hfsplus $PREFIX/bin\n+  mv hdutil/hdutil $PREFIX/bin\n+  cd $PREFIX\n+  # Adjust timestamps on files, for deterministic tar output\n+  find . -print0 | xargs -r0 touch -t 200001010000\n+  find | sort | tar --no-recursion -cJf $OUTDIR/osxcross.tar.xz -T -"
      },
      {
        "sha": "7c36bbb644a2a933242d90dffdf52811a659fe7b",
        "filename": "contrib/gitian-descriptors/qt-osx.yml",
        "status": "added",
        "additions": 238,
        "deletions": 0,
        "changes": 238,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/qt-osx.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/qt-osx.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-osx.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,238 @@\n+---\n+name: \"gameunits-qt\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages:\n+- \"clang\"\n+- \"llvm-dev\" \n+- \"zip\"\n+- \"unzip\"\n+- \"faketime\"\n+- \"libz-dev\"\n+- \"ruby-full\"\n+- \"perl\"\n+- \"python\"\n+- \"m4\"\n+- \"bison\"\n+- \"gperf\"\n+- \"sharutils\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-5.5.0.tar.xz\"\n+- \"gameunits-deps-osx-gitian.zip\"\n+- \"flex-2.5.38.tar.gz\"\n+- \"osxcross.tar.xz\"\n+script: |\n+  # Integrity Check\n+  echo \"7ea2a16ecb8088e67db86b0835b887d5316121aeef9565d5d19be3d539a2c2af  qt-everywhere-opensource-src-5.5.0.tar.xz\" | sha256sum -c\n+  echo \"16d68bae5336c0698817bb5a1a4bd9a6804263608fdf553ca63fd90b682ec366  gameunits-deps-osx-gitian.zip\"                | sha256sum -c\n+  echo \"80f7c7188d7611e47e47d2a70c8ef65026c1cf71ddeb4ace9b1be5b8a76ffbd2  flex-2.5.38.tar.gz\"                        | sha256sum -c\n+  #\n+  # Defines\n+  export TZ=UTC\n+  BUILDDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  INSTALLPREFIX=$HOME/install\n+  DEPSDIR=$HOME/deps\n+  HOST=x86_64-apple-darwin13\n+  MIN_VERSION=10.6\n+  SDK_VERSION=10.9\n+  SDK=${DEPSDIR}/SDK/MacOSX${SDK_VERSION}.sdk\n+  #\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n+  export QT_RCC_TEST=1\n+  #\n+  # Fix our paths \n+  export PATH=\"$DEPSDIR/bin:$DEPSDIR/lib:$PATH\"\n+  export INCLUDE=\"$DEPSDIR/include:$INCLUDE\"\n+  export LIB=\"$DEPSDIR/lib:$LIB\"\n+  #\n+  mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $DEPSDIR $BUILDDIR\n+  #\n+  cd $BUILDDIR\n+  #\n+  tar xzf $BUILDDIR/flex-2.5.38.tar.gz\n+  cd flex-2.5.38\n+  ./configure --prefix=$DEPSDIR\n+  make\n+  make install\n+  cd ..\n+  #\n+  # Need mingw-compiled openssl from gameunits-deps:\n+  cd $DEPSDIR\n+  unzip -o $BUILDDIR/gameunits-deps-osx-gitian.zip\n+  tar xf $BUILDDIR/osxcross.tar.xz\n+  tar xf qt-everywhere-opensource-src-5.5.0.tar.xz\n+  #\n+  QTDIR=$BUILDDIR/qt-everywhere-opensource-src-5.5.0\n+  cd $QTDIR\n+  SPECDIR=\"qtbase/mkspecs\"\n+  SPECNAME=\"macx-clang-linux\"\n+  SPECFILE=\"${SPECDIR}/${SPECNAME}/qmake.conf\"\n+  rm -rf ${SPECDIR}/${SPECNAME}\n+  cp -rp ${SPECDIR}/macx-clang ${SPECDIR}/${SPECNAME}\n+  sed 's/qt_instdate=`date +%Y-%m-%d`/qt_instdate=2011-01-30/' -i qtbase/configure\n+  sed 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' -i qtbase/configure\n+  #\n+  sed 's/load(qt_config)//' -i $SPECFILE\n+  cat > ${SPECFILE} <<ENDCONF\n+  MAKEFILE_GENERATOR      = UNIX\n+  CONFIG                 += app_bundle incremental global_init_link_order lib_version_first plugin_no_soname absolute_library_soname\n+  DEFINES                += QT_NO_PRINTER QT_NO_PRINTDIALOG\n+  QMAKE_INCREMENTAL_STYLE = sublib\n+  include(../common/macx.conf)\n+  include(../common/gcc-base-mac.conf)\n+  include(../common/clang.conf)\n+  include(../common/clang-mac.conf)\n+  QMAKE_INCDIR=$DEPSDIR/include\n+  QMAKE_LIBDIR=$DEPSDIR/lib\n+  QMAKE_CC=${HOST}-clang\n+  QMAKE_CXX=${HOST}-clang++\n+  QMAKE_LINK=${HOST}-clang++\n+  QMAKE_XCODE_VERSION=4.3\n+  QMAKE_XCODE_DEVELOPER_PATH=/Developer\n+  QMAKE_MACOSX_DEPLOYMENT_TARGET = ${MIN_VERSION}\n+  QMAKE_MAC_SDK=macosx\n+  QMAKE_MAC_SDK.macosx.path = ${SDK}\n+  QMAKE_MAC_SDK.macosx.version = ${SDK_VERSION}\n+  QMAKE_MAC_SDK.macosx.platform_path = /.care\n+  QMAKE_MAC_SDK.macosx.platform_name = macosx\n+  QMAKE_CFLAGS += -target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -mlinker-version=242\n+  QMAKE_OBJECTIVE_CFLAGS += -target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -mlinker-version=242\n+  QMAKE_CXXFLAGS += -target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -mlinker-version=242\n+  QMAKE_AR = ${HOST}-ar cq\n+  QMAKE_HOST = ${HOST}\n+  QMAKE_LD = ${HOST}-ld\n+  QMAKE_RANLIB=${HOST}-ranlib\n+  QMAKE_LIBTOOL=${HOST}-libtool\n+  QMAKE_INSTALL_NAME_TOOL=${HOST}-install_name_tool\n+  load(qt_config)\n+  ENDCONF\n+  #\n+  CONFIG_OPTS=\"\n+  -opensource -confirm-license\n+  -release\n+  -xplatform $SPECNAME\n+  -no-audio-backend\n+  -no-glib\n+  -no-cups\n+  -no-iconv\n+  -no-gif\n+  -no-freetype\n+  -no-nis\n+  -no-pch\n+  -no-qml-debug\n+  -nomake examples\n+  -nomake tests\n+  -no-feature-style-windowsmobile\n+  -no-feature-style-windowsce\n+  -no-sql-db2\n+  -no-sql-ibase\n+  -no-sql-oci\n+  -no-sql-tds\n+  -no-sql-mysql\n+  -no-sql-odbc\n+  -no-sql-psql\n+  -no-sql-sqlite\n+  -no-sql-sqlite2\n+  -prefix $INSTALLPREFIX\n+  -bindir ${INSTALLPREFIX}/host/bin\n+  -device-option CROSS_COMPILE=${HOST}-\n+  -icu\n+  -v\n+  -qt-libpng\n+  -qt-libjpeg\n+  -qt-zlib\n+  -qt-pcre\n+  -no-c++11\n+  -no-pulseaudio\n+  -no-openvg\n+  -no-opengl\n+  -no-xrender\n+  -no-alsa\n+  -no-mtdev\n+  -no-mitshm\n+  -no-kms\n+  -no-reduce-relocations\n+  -no-egl\n+  -no-eglfs\n+  -no-linuxfb\n+  -no-xinput2\n+  -no-libudev\n+  -no-gstreamer\n+  -no-use-gold-linker\n+  -optimized-qmake\n+  -skip qtwinextras\n+  -skip qtandroidextras\n+  -skip qtmacextras\n+  -skip qtx11extras\n+  -skip qtsvg\n+  -skip qtxmlpatterns\n+  -skip qtdeclarative\n+  -skip qtquickcontrols\n+  -skip qtmultimedia\n+  -skip qtactiveqt\n+  -skip qtlocation\n+  -skip qtsensors\n+  -skip qtconnectivity\n+  -skip qtwebsockets\n+  -skip qtwebchannel\n+  -skip qtwebkit-examples\n+  -skip qtimageformats\n+  -skip qtgraphicaleffects\n+  -skip qtscript\n+  -skip qtquick1\n+  -skip qtwayland\n+  -skip qtserialport\n+  -skip qtenginio\n+  -skip qtwebengine\n+  -skip qt3d\n+  -skip qtcanvas3d\n+  -skip qtdoc\"\n+  #export CC\n+  #export CXX\n+  #export CXXFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -mlinker-version=242\"\n+  #export CFLAGS=\"-target ${HOST} -mmacosx-version-min=${MIN_VERSION} --sysroot ${SDK} -mlinker-version=242\"\n+  OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto\" ./configure $CONFIG_OPTS\n+  #-prefix $INSTALLPREFIX -bindir $INSTALLPREFIX/host/bin -confirm-license -release -opensource -xplatform $SPECNAME -device-option CROSS_COMPILE=\"$HOST-\" -no-audio-backend -no-sql-odbc -no-nis -no-cups -no-iconv -no-dbus -no-gif -no-opengl -no-compile-examples -no-feature-style-windowsce -no-feature-style-windowsmobile -no-use-gold-linker -no-kms -no-gstreamer -no-qml-debug -skip qtsvg -skip qtwebkit-examples -skip qtserialport -skip qtdeclarative -skip qtmultimedia -skip qtimageformats -skip qtlocation -skip qtsensors -skip qtquick1 -skip qtquickcontrols -skip qtactiveqt -skip qtconnectivity -skip qtwinextras -skip qtxmlpatterns -skip qtscript -skip qtdoc -system-libpng -system-zlib -icu -v\n+  #\n+  make $MAKEOPTS\n+  make $MAKEOPTS install\n+  #\n+  cd $BUILDDIR\n+  #\n+  # post-process all generated libraries and plugins to be deterministic\n+  # extract them to a temporary directory then re-build them deterministically\n+  #for LIB in $(find $INSTALLPREFIX -name *.a); do\n+  #    rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+  #    $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+  #    rm $LIB\n+  #    $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+  #done\n+  #\n+  cd $INSTALLPREFIX\n+  # Remove unused non-deterministic stuff\n+  rm host/bin/qtpaths lib/libQt5Bootstrap.a lib/libQt5Bootstrap.la\n+  rm -f ${INSTALLPREFIX}/lib/Qt*.framework/Qt*.prl\n+  cd include\n+  ln -sf ../lib/QtNetwork.framework/Headers/ QtNetwork\n+  ln -sf ../lib/QtWidgets.framework/Headers/ QtWidgets\n+  ln -sf ../lib/QtGui.framework/Headers/ QtGui\n+  ln -sf ../lib/QtCore.framework/Headers/ QtCore\n+  ln -sf ../lib/QtTest.framework/Headers/ QtTest\n+  ln -sf ../lib/QtWebKitWidgets.framework/Headers/ QtWebKitWidgets\n+  cd ..\n+  # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+  export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+  export FAKETIME=$REFERENCE_DATETIME\n+  find -print0 | xargs -r0 touch # fix up timestamps before packaging\n+  find | sort | tar --no-recursion -cJf $OUTDIR/qt-osx-5.5.0-gitian.tar.xz -T -"
      },
      {
        "sha": "f20eb2707f92e120f70eb7f83d76bb94851b46f9",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "added",
        "additions": 237,
        "deletions": 0,
        "changes": 237,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,237 @@\n+---\n+name: \"gameunits-qt\"\n+suites:\n+- \"trusty\"\n+architectures:\n+- \"amd64\"\n+packages: \n+- \"mingw-w64\"\n+- \"g++-mingw-w64\"\n+- \"faketime\"\n+- \"libz-dev\"\n+- \"ruby-full\"\n+- \"perl\"\n+- \"python\"\n+- \"m4\"\n+- \"bison\"\n+- \"gperf\"\n+- \"sharutils\"\n+- \"zip\"\n+- \"unzip\"\n+reference_datetime: \"2011-01-30 00:00:00\"\n+remotes: []\n+files:\n+- \"qt-everywhere-opensource-src-5.5.0.tar.xz\"\n+- \"gameunits-deps-win32-gitian.tar.xz\"\n+- \"gameunits-deps-win64-gitian.tar.xz\"\n+- \"flex-2.5.38.tar.gz\"\n+script: |\n+  # Integrity Check\n+  echo \"7ea2a16ecb8088e67db86b0835b887d5316121aeef9565d5d19be3d539a2c2af  qt-everywhere-opensource-src-5.5.0.tar.xz\" | sha256sum -c\n+  echo \"306264166531eecbb35ec645c425b1b5538e8ce3035d7bf599db0b2cc76c730f  gameunits-deps-win32-gitian.tar.xz\"           | sha256sum -c \n+  echo \"1c7c36ca02624fc2e0f026a84853217e84a9f27f8542a5b18d13164ea48edea7  gameunits-deps-win64-gitian.tar.xz\"           | sha256sum -c \n+  echo \"80f7c7188d7611e47e47d2a70c8ef65026c1cf71ddeb4ace9b1be5b8a76ffbd2  flex-2.5.38.tar.gz\"                        | sha256sum -c\n+  # Defines\n+  export TZ=UTC\n+  INDIR=$HOME/build\n+  TEMPDIR=$HOME/tmp\n+  # Qt: workaround for determinism in resource ordering\n+  #  Qt5's rcc uses a QHash to store the files for the resource.\n+  #  A security fix in QHash makes the ordering of keys to be different on every run\n+  #  (https://qt.gitorious.org/qt/qtbase/commit/c01eaa438200edc9a3bbcd8ae1e8ded058bea268).\n+  #  This is good in general but qrc shouldn't be doing a traversal over a randomized container.\n+  #  The thorough solution would be to use QMap instead of QHash, but this requires patching Qt.\n+  #  For now luckily there is a test mode that forces a fixed seed.\n+  export QT_RCC_TEST=1\n+  #\n+  export OLDPATH=\"$PATH\"\n+  export OLDINCLUDE=\"$INCLUDE\"\n+  export OLDLIB=\"$LIB\"\n+  \n+  for BITS in 32 64; do # for architectures\n+    #\n+    INSTALLPREFIX=$HOME/staging${BITS}\n+    BUILDDIR=$HOME/build${BITS}\n+    DEPSDIR=$HOME/deps${BITS}\n+    if [ \"$BITS\" == \"32\" ]; then\n+      HOST=i686-w64-mingw32\n+    else\n+      HOST=x86_64-w64-mingw32\n+    fi\n+    #\n+    export PATH=\"$DEPSDIR/lib:$OLDPATH\"\n+    export INCLUDE=\"$DEPSDIR/include:$OLDINCLUDE\"\n+    export LIB=\"$DEPSDIR/lib:$OLDLIB\"\n+    export PATH=\"$DEPSDIR/bin:$PATH\"\n+    \n+    #\n+    rm -rf $DEPSDIR\n+    mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $DEPSDIR $BUILDDIR\n+    #\n+    cd $BUILDDIR\n+    #\n+    tar xzf $INDIR/flex-2.5.38.tar.gz\n+    cd flex-2.5.38\n+    ./configure --prefix=$DEPSDIR\n+    make\n+    make install\n+    cd ..\n+    #\n+    # Need mingw-compiled openssl from gameunits-deps:\n+    cd $DEPSDIR\n+    tar xf $INDIR/gameunits-deps-win${BITS}-gitian.tar.xz\n+    #\n+    ln -s $DEPSDIR/lib/libsicudt.a $DEPSDIR/lib/libicudt.a\n+    ln -s $DEPSDIR/lib/libsicuin.a $DEPSDIR/lib/libicuin.a\n+    ln -s $DEPSDIR/lib/libsicuio.a $DEPSDIR/lib/libicuio.a\n+    ln -s $DEPSDIR/lib/libsicule.a $DEPSDIR/lib/libicule.a\n+    ln -s $DEPSDIR/lib/libsiculx.a $DEPSDIR/lib/libiculx.a\n+    ln -s $DEPSDIR/lib/libsicutest.a $DEPSDIR/lib/libicutest.a\n+    ln -s $DEPSDIR/lib/libsicutu.a $DEPSDIR/lib/libicutu.a\n+    ln -s $DEPSDIR/lib/libsicuuc.a $DEPSDIR/lib/libicuuc.a\n+    #\n+    cd $BUILDDIR\n+    #\n+    tar xf $INDIR/qt-everywhere-opensource-src-5.5.0.tar.xz\n+    #\n+    cd qt-everywhere-opensource-src-5.5.0\n+    QTDIR=$BUILDDIR/qt-everywhere-opensource-src-5.5.0\n+    \n+    sed -i 's,\\.exe,,' \"$QTDIR/qtwebkit/Tools/qmake/mkspecs/features/functions.prf\"\n+    sed -i 's,\\win_flex,flex,' \"$QTDIR/qtwebkit/Tools/qmake/mkspecs/features/default_pre.prf\"\n+    #\n+    # TODO: find better fix !?\n+    sed -i 's/FLT_MANT_DIG/24/' \"$QTDIR/qtwebkit/Source/WebCore/html/StepRange.cpp\"\n+    sed -i 's/DBL_MANT_DIG/53/' \"$QTDIR/qtwebkit/Source/WebCore/html/StepRange.cpp\"\n+    #\n+    #\n+    SPECNAME=\"win32-g++\"\n+    SPECFILE=\"qtbase/mkspecs/${SPECNAME}/qmake.conf\"\n+    sed 's/qt_instdate=`date +%Y-%m-%d`/qt_instdate=2011-01-30/' -i qtbase/configure\n+    #sed 's/EXTRA_LFLAGS=\\n/EXTRA_LFLAGS= --enable-deterministic-ld\\n/' -i qtbase/configure\n+    sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n+    #sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib --enable-deterministic-ld|\" -i ${SPECFILE}\n+    sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n+    # Before we tried to pass arguments to ar (static linking) in using QMAKE_LIB, however\n+    #  qt removes the arguments for ar and provides a script which makes it impossible to pass the determinism flag -\n+    #  so rather than try to replace ar, post-process all libraries and plugins at the end.\n+    #\n+    # Don't load faketime while compiling Qt, qmake will get stuck in nearly infinite loops\n+    #export LD_PRELOAD=/usr/lib/faketime/libfaketime.so.1\n+    #export FAKETIME=$REFERENCE_DATETIME\n+    #\n+    # fputs not in std namespace?\n+    #sed 's/std::fputs/fputs/' -i $QTDIR/qttools/src/windeployqt/main.cpp\n+    #\n+    CONFIG_OPTS=\"\n+    -opensource\n+    -confirm-license\n+    -release\n+    -xplatform $SPECNAME\n+    -no-audio-backend\n+    -no-glib\n+    -no-dbus\n+    -no-cups\n+    -no-iconv\n+    -no-gif\n+    -no-freetype\n+    -no-nis\n+    -no-pch\n+    -no-qml-debug\n+    -nomake examples\n+    -nomake tests\n+    -no-feature-style-windowsmobile\n+    -no-feature-style-windowsce\n+    -no-sql-db2\n+    -no-sql-ibase\n+    -no-sql-oci\n+    -no-sql-tds\n+    -no-sql-mysql\n+    -no-sql-odbc\n+    -no-sql-psql\n+    -no-sql-sqlite\n+    -no-sql-sqlite2\n+    -prefix $INSTALLPREFIX\n+    -bindir ${INSTALLPREFIX}/host/bin\n+    -device-option CROSS_COMPILE=${HOST}-\n+    -icu\n+    -v\n+    -qt-libpng\n+    -qt-libjpeg\n+    -system-zlib\n+    -qt-pcre\n+    -no-pulseaudio\n+    -no-openvg\n+    -no-opengl\n+    -no-xrender\n+    -no-alsa\n+    -no-mtdev\n+    -no-mitshm\n+    -no-kms\n+    -no-reduce-relocations\n+    -no-egl\n+    -no-eglfs\n+    -no-linuxfb\n+    -no-xinput2\n+    -no-libudev\n+    -no-gstreamer\n+    -optimized-qmake\n+    -skip qtwinextras\n+    -skip qtandroidextras\n+    -skip qtmacextras\n+    -skip qtx11extras\n+    -skip qtsvg\n+    -skip qtxmlpatterns\n+    -skip qtdeclarative\n+    -skip qtquickcontrols\n+    -skip qtmultimedia\n+    -skip qtactiveqt\n+    -skip qtlocation\n+    -skip qtsensors\n+    -skip qtconnectivity\n+    -skip qtwebsockets\n+    -skip qtwebchannel\n+    -skip qtwebkit-examples\n+    -skip qtimageformats\n+    -skip qtgraphicaleffects\n+    -skip qtscript\n+    -skip qtquick1\n+    -skip qtwayland\n+    -skip qtserialport\n+    -skip qtenginio\n+    -skip qtwebengine\n+    -skip qt3d\n+    -skip qtcanvas3d\n+    -skip qtdoc\"\n+    OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure $CONFIG_OPTS\n+    #\n+    make\n+    make $MAKEOPTS install\n+    #\n+    cd $QTDIR/qtwebkit\n+    sed 's,type nul,cat /dev/null,' -i Source/WebCore/DerivedSources.pri\n+    $INSTALLPREFIX/host/bin/qmake\n+    make\n+    make install\n+    #\n+    # post-process all generated libraries and plugins to be deterministic\n+    # extract them to a temporary directory then re-build them deterministically\n+    for LIB in $(find $INSTALLPREFIX -name *.a); do\n+        rm -rf $TEMPDIR && mkdir $TEMPDIR && cd $TEMPDIR\n+        $HOST-ar xv $LIB | cut -b5- > /tmp/list.txt\n+        rm $LIB\n+        $HOST-ar crsD $LIB $(cat /tmp/list.txt)\n+    done\n+    #\n+    cd $INSTALLPREFIX\n+    # Remove unused non-deterministic stuff\n+    rm host/bin/qtpaths.exe lib/libQt5Bootstrap.a lib/libQt5Bootstrap.la\n+    # as zip stores file timestamps, use faketime to intercept stat calls to set dates for all files to reference date\n+    export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/faketime/libfaketime.so.1\n+    export FAKETIME=$REFERENCE_DATETIME\n+    find -print0 | xargs -r0 touch # fix up timestamps before packaging\n+    find | sort | tar --no-recursion -cJf $OUTDIR/qt-win${BITS}-5.5.0-gitian.tar.xz -T -\n+    unset LD_PRELOAD\n+    unset FAKETIME\n+    rm -rf $BUILDDIR\n+  done # for BITS in"
      },
      {
        "sha": "030fd5cf3cd389976b9d07e6e48bb8d3524442fe",
        "filename": "contrib/gitian-downloader/achow101-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/achow101-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/achow101-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/achow101-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1\n-\n-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\n-Khvd4+XHE/ecjLOPvLweAg==\n-=+hz7\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "df06e19fa4b109286dbbb7596c86d31fe0f1052f",
        "filename": "contrib/gitian-downloader/aschildbach-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/aschildbach-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/aschildbach-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/aschildbach-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "fb6d9eb28423d2c8ece89179f8e67ae06fa6dc13",
        "filename": "contrib/gitian-downloader/bluematt-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/bluematt-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/bluematt-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/bluematt-key.pgp?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "60d76c0ec7ab86635637ee9f49948e004fadfee4",
        "filename": "contrib/gitian-downloader/btcdrak-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 142,
        "changes": 142,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/btcdrak-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/btcdrak-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/btcdrak-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,142 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-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\n-eEaG0RH54+pi4gw=\n-=fFMC\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "928a74b3155da22877d1b6ad32fa2a7cb745e0ba",
        "filename": "contrib/gitian-downloader/cdecker-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/cdecker-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/cdecker-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cdecker-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "71a42e514881bc6383531ea2c82c93998453245e",
        "filename": "contrib/gitian-downloader/centaur1-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/centaur1-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/centaur1-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/centaur1-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,30 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFTjy20BCAC7q/tpPQ9tdEALpDqe8kpVAT5ysOJDLDeFEE1J5O8NuDFuibiN\n-XYkb2nAt4Vdr23in9z0LAiTSgr7znndnab/rOSn6pXbXQfLTHrSnAeClTHVQVPSq\n-m5kNg1vWvNxFtIpZ/fGsc6LLmIHxdgeLn+NOpvNx7RzF/N5ctX51vMxMUeDq3daZ\n-tLneJVRj5tXHRJcjW62cyiNFasYAZ3JC8wjwzr0SOndc7kygbEVCTWNkTAGd1Lax\n-KSJW6TjhBPK7j+RljS5nfx/Tf+OG4AoA7/53593YL7Shfx8rwWVIeF4nS6efFnuf\n-eIj+aS5haGyFvNgw8DE7QUCrPiUxeA8wuXu7ABEBAAG0H2NlbnRhdXIgPGNlbnRh\n-dXJAcGhvbmVib29rLmNvbT6JATgEEwECACIFAlTjy20CGwMGCwkIBwMCBhUIAgkK\n-CwQWAgMBAh4BAheAAAoJEP+V+qlxaXQF8r4IAKnE8D9AOTdM/YvYxpCeI6ndEUUs\n-8NcotpbIBJ67vr1Dsot7Ee0PrmIYOiInA+T81lPUDecJYrnemVefhquiyJ5VJ4/d\n-z2zUKBfxjeOsj/PHgcowVxMco8fNEWQa2fZX6X8RVADIsUnIIwpRFVUcbssK/3xJ\n-k46vjWwYNQywht/ZgFBesOgywyz5GozmwrK6TixJxKk8M69GFz2fHhJjp1bxDZuk\n-Rs3YmWeOcCasoJ6GbvIboKQSPHGyEOCqIuiBL63YMa0n1FU0ooDteNZ04eRinIhc\n-fo9JC66fQrUFn8CmmRTtdZOrZ/efYjQtfLAunCkzSM3p6DE9u4Y7d8E5Ar65AQ0E\n-VOPLbQEIANhxtouZuQmw+k89toBWXw75s+csxKHKZuhw8QntaFyFYq3IOnIeV1sK\n-PRENkWsqDInjEM8k9eZ6pnS11EQ1rrFffss+mprTbL3I4S489tJETYZKHrmmox7h\n-ustRi5eXBEmGeKW0mqpb/9r4okpTaIfs+EJ4C9jj0ghWkqU0acyzanJiUY/0R46F\n-vPfGfHnhZ5TAl3eiL0H2JkF6taG8K1XOLemahdZHE9wJh0ZFWnDDkA1l6j2rtYga\n-jEi/ucOp5GkmumxbFiVgponDBqBpsscRrCV6SbZs9gz3dQNgqe5A3CKGZRuVCY6s\n-djRJelgqCF5+dV0fAT0oF3C/3E5KAgcAEQEAAYkBHwQYAQIACQUCVOPLbQIbDAAK\n-CRD/lfqpcWl0BUSxCACjEFwQSHcfZINWD+KdNMayxyHQlBwsEDX+xQkgnn+/Q3hW\n-9VI3SSSfFV3ustlUa3IaNHwuWzsrSqG6mLG47LAQ6vPAWVh723gVCpyJf42Oms/e\n-qeyn0f/PT/6RuNMXQeHbfddmRp4PFjyKOms5Bmf3oi4t4JSvOS4yABBBKzhDQYC9\n-e+qv6Y1sDYpSiCxstQLzIHKiB5bfZ8Szfk09EyyLdqLGkiB0MFhHoXWwQxKiLVc+\n-xNFj2a/jw0rQVgN5DZgHBWU5WqvS5CWIczi+2S9MFI26iBhCn3urZToaaQ/DObqC\n-qmekFrJ/GOj5vB1Mm014lWjG2X3EovLZ1XkgWI7W\n-=vtNZ\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "6b0bd240ba4cf8df485a8caa689717a12ef6b3c8",
        "filename": "contrib/gitian-downloader/cfields-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/cfields-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/cfields-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/cfields-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,52 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-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\n-MrD0ofsytfy1LQ==\n-=DE4h\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "9d3f060627ee9cb4143e3b8945a261e90c39ba13",
        "filename": "contrib/gitian-downloader/erkmos.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/erkmos.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/erkmos.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/erkmos.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "9c03ff45226c5629d24e5f9925da7210df0760a5",
        "filename": "contrib/gitian-downloader/fanquake-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/fanquake-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/fanquake-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/fanquake-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,63 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG/MacGPG2 v2.0.26\n-\n-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\n-XwbdK0Zpx/oDtRHpuDMGKJBV2LWAZYkEbFsmtg==\n-=3o2I\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "3831eaea114f77f30f9638e6772f446055f3c68d",
        "filename": "contrib/gitian-downloader/jonasschnelli-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 110,
        "changes": 110,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/jonasschnelli-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/jonasschnelli-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/jonasschnelli-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,110 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\r\n-Version: GnuPG v1\r\n-\r\n-mQINBFSBrDIBEACrZEqObmtlTf7fOKttE39qqisFfMg0VeEPS37uETMGYsgTEvzv\r\n-kfMsXCGsGFLQ78XsHqUeW4uQrtpJH3nUP/Sua1Q12K3lNKTSvVQyEpKoPJwXZahp\r\n-jm6GA1ApDxZ/KlmxyobR3X0urnMYNZobl5IKJXlxoKGl4OkGNeFlh42pCXZDnR9n\r\n-1Y17ZcDdybkWcqPbDAz8ilOQcFMhDBFg3Di3IVMAaDZP1uwWFb5vx60YB5NhkOpF\r\n-nZUH09NJx/7u7QdGPSHOdzW4Xo1HUYtYNDkdOvgZtxpbYEFIaBtVBURMUGwAFagA\r\n-3a6qaGnCBWEQftyISLiqcKqKqXudOg/cLa1CAiQFkz+IBhY9BCGDRnB8Dcae6EGI\r\n-Djt2lqZTuMSiheTWeNFMGBioHfPLedcwae8KflrIBC+hNS4ay6HJdIc03WMQ4JKK\r\n-At8Y8CRLym30/RlqZ2v8CHYqg9Ddlz3+g5JkRKaJTQwFRcX46/tAX+I2NZ8Ra1ea\r\n-rF5cRHuCk/oaw5ZXYhj4zJO74rjAoSewAARlrTMSM541atJU1u6aWT7rNiF9QKIj\r\n-i8vEufUxN0YfdmvDD3OXwbO7GnfWXS4sPklFIRACp+Y4ib+QnRY0/qGE0yh3RAG4\r\n-r/dyIQ1m3z7Pc9eyPKAhE4S7SxAwoR4yOqQ5NAfZXgFuqWzkW51gkQgGzQARAQAB\r\n-tCtKb25hcyBTY2huZWxsaSA8am9uYXMuc2NobmVsbGlAaW5jbHVkZTcuY2g+iQI+\r\n-BBMBAgAoBQJUgawyAhsDBQkDwmcABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAK\r\n-CRAicOMMUic59iKUD/93DF04C3lptLjtrhyd4wgpBMJV8yzagGyG+Wk0UR7elQw4\r\n-F1MIvEtIFpuGrcnNfKcqeGGmnnKFTeBjkmgcYvej2fW9XlRA1HgIS0t0ttDv8uVX\r\n-vy1xVj1qISB+17EiftxJjCOl2pZFEVpLQ7sSgqnVRMsCS45ag6rioGxtq1j3ifQN\r\n-TENnJWhzOXvwzZhLgsyWLjeYvTDbzfAQLpZFowAMibOwu6ObCkn4dhaW+lI3AnPu\r\n-76pLsrOljqGvXes6o2d28vjqMrlmsz2xVEJ4bnRPUbLv3bUl6t+19XpiMj94ZCZX\r\n-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\r\n-S5rowLE=\r\n-=ZVPf\r\n------END PGP PUBLIC KEY BLOCK-----\n\\ No newline at end of file"
      },
      {
        "sha": "aef614d0caaf85b4708fc34f8fa51e3c16c6b4cc",
        "filename": "contrib/gitian-downloader/linux-download-config",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/linux-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/linux-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/linux-download-config?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,38 @@\n+--- \n+name: bitcoin\n+urls:\n+- http://bitcoin.org/bitcoin-latest-linux-gitian.zip\n+rss:\n+- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n+  xpath: //item/link/text()\n+  pattern: bitcoin-\\d+.\\d+.\\d+-linux-gitian.zip\n+signers:\n+  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n+    weight: 40\n+    name: BlueMatt\n+    key: bluematt\n+  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n+    weight: 40\n+    name: Devrandom\n+    key: devrandom\n+  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n+    weight: 40\n+    name: Luke-Jr\n+    key: luke-jr\n+  D762373D24904A3E42F33B08B9A408E71DAAC974:\n+    weight: 40\n+    name: \"Pieter Wuille\"\n+    key: sipa\n+  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n+    weight: 40\n+    name: tcatm\n+    key: tcatm\n+  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n+    weight: 40\n+    name: \"Gavin Andresen\"\n+    key: gavinandresen\n+  71A3B16735405025D447E8F274810B012346C9A6:\n+    weight: 40\n+    name: \"Wladimir J. van der Laan\"\n+    key: laanwj\n+minimum_weight: 120"
      },
      {
        "sha": "c40917d78c512ac13414b0d9e92c59f57e6a9c77",
        "filename": "contrib/gitian-downloader/luke-jr-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/luke-jr-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/luke-jr-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/luke-jr-key.pgp?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "47bc404554b41866c5626384c30a9e4f9261958c",
        "filename": "contrib/gitian-downloader/michagogo-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/michagogo-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/michagogo-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/michagogo-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,59 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.12 (GNU/Linux)\n-\n-mQENBFGeqJ4BCADb7SI3/+q93gIvN0AGRg9Mtz73OLIOzCHeeoyn+tp7JcYNzxkQ\n-9lfeXiEfn72Sh8gHkLtLIqr7HlIMo8DxSS8JPRVjlJGkNyAW4SeEwN2wNa5OV8k0\n-N4jBa9a1csFyCyrEkPKvkUpBkQDvNXjNxyEhHwyZqPanKxy6NXIHOJji8ObOMQXI\n-T9HwJrpjRth3u4uKG968JBTEyAXAmkt0Zidl1Ykgzcedk4mJSE9uZCW8DjSv2wML\n-XcQz8+dYsoskT3KRdkowLHxAfj1BNyNc1+rKLghliM5vSQWi+Lbhi1Bxh4sY1UwA\n-lKnAGqrnAGyIvCtkwTq5QI6ufF2ZY44bvVgpABEBAAG0IU1pY2hhZ29nbyA8bWlj\n-aGFnb2dvQHNlcnZlci5mYWtlPokBOAQTAQIAIgUCUZ6ongIbAwYLCQgHAwIGFQgC\n-CQoLBBYCAwECHgECF4AACgkQgsXACWKOzwzMUAgAuqUmK10xE5C3lUym2f72z0t6\n-a2NM5Wfjr9//Y1/okC36C5XAMEtN2UwckPzzJ5p5D5y5yzwfZq5Jd8Py29VQIMsV\n-7FbC1a0H3D+bCyX+JJ6FAmUbnWOQ/+mydYc74RvD8iwjePNT6kziZNv6dMGctJTl\n-0alwjtQYgyGkeYKnIxbcyjHX/IawLUrunb/6mSKun87T8+NM/omfFCTc3l8TakpM\n-0wyNYRiUkIfUBvB8sDUU3A80qKN/hqRKvlFu3+/kMiAc9ZYQrbmsB+sYWdmM+4zw\n-8NBw3yuYzWyPuoa4PR5ZmS9F11WLMR5vTRCdLudAqYsWu3LtV6vAIvlOUa2LMLRg\n-TWljaGFnb2dvIChSZWdpc3RlcmVkIG5pY2sgbWljaGFnb2dvIG9uIGZyZWVub2Rl\n-IGFzIG9mIE9jdG9iZXIgMTIsIDIwMTMpIDxtaWNoYWdvZ29Ac2VydmVyLmZha2U+\n-iQE4BBMBAgAiBQJSWarzAhsDBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCC\n-xcAJYo7PDA7nB/91wAiaMlU5nHLUu0anhNQbGvUdFgKK1zO90S5KzUdJcY438jcS\n-UJW1az8l9U9JBRIfPRYVhz/Z1TAJ+dCzD7D8BXHFeGEr0zNOh87ly9aB5du7dpN2\n-oSBD6wLcJpqxt4h+XjSS2CX98/2ZIJxXENE2KySaTXP39Xl3eNwvJTUBA4XlcMey\n-J8KMp/IERli4H0O7vRyLgu3yYpUArTqAonzG1g2lfB35PQJfeInrRSniQ336otnZ\n-A8qwJ63kfUtWVDRz0g1fnvtiLGPivDJaI5hyIaUeJPaXU1+sg7YNroDu60o2NGZh\n-F+0IjHlvRfzzA+F9Vw38rpSqR3BmCdjf6Sv3iQEcBBABAgAGBQJSWa9/AAoJEH+r\n-EUJn5PoE/hgH/1T2dAthVucA/hzY0nl4SMjbg+dzNlYBq00Qwx8DRKVjk5et8+kY\n-oPI3DGILcr+ELnxNekeMv9WQBBtJanUh1K5ohZ6ohoR7lG18LXf5HCdspflB5Me6\n-LMA6iMryEP6gIs9GFuoGe2YQavm58YrkqhcPu34dGN7kdurfEXLvDfVlh5ZbKCsP\n-Gyd7Pbz04SpqykgK1udiTsLVjc70Xhv+jAMqeaCugDX6TLEwjVmZH/xsyKk2Uh3V\n-Oib5FXADAtKH+vSqqhFpXrw7R/NaBzvCbas8l61DFHiUg1/bo8vsV8MtGcyZmzXJ\n-C5Gm0njtGOil/g7JF9siUrpxs9Yyt/h+T2W0W01pY2hhZ29nbyAoVXNlciBhY2Nv\n-dW50IG1pY2hhZ29nbyBvbiBHaXRodWIgYXMgb2YgT2N0b2JlciAxMiwgMjAxMykg\n-PG1pY2hhZ29nb0BzZXJ2ZXIuZmFrZT6JATcEEwECACIFAlJZqxkCGwMGCwkIBwMC\n-BhUIAgkKCwQWAgMBAh4BAheAAAoJEILFwAlijs8M+1AH+IU78ARblqTnJeSl0iWH\n-mEsg4IBK30Q6/exDAcqOEm1Yc171uw2WnGmIvPYOQqxrRTvj3LoQ816dU6jrj6vY\n-s+XX0R2hxy7ILh17D/3UKnHcddu7rmc7pNEqZeBXaMughqQaPOWkAIe52+qK5tsl\n-sWllzTYE4jo29uZ3dAtDcKEJjBo/pIXnu1GOslE1+V4X1H9WDlwrS/JXHzyDQAjt\n-maPR+3gNesDanhrRmrnT3ZXW2ZVd3vGBibhia8PWUhU1uwOH23ySWXncgsHH0Zad\n-UMjd4w3YliZP/mLn2ghAxHB70IO7lgAgN3HYZeFoufP3pcK440A+CezfQiRcjHl/\n-oIkBHAQQAQIABgUCUlmvfwAKCRB/qxFCZ+T6BOq9CACItsrUZPKGeWSTkMHknMrV\n-K5vxIXJVCBb+Tppc0Q/J5p4EkW/RFhTwIP2zw8NLDKMh5oO9md4LXhvfIZkqQJFo\n-6ZtLa3Vf+Kj7uyxezBo4QHA+G7tDsRGaMKVrEMiyLCwS1+hg9VaNzsf7zmQW7mYE\n-vTLMHp3cVaSU7Mh2Dl8rnAaM/DpTUZQwZ+32Qrb/Z4HSa4f278iqoFpjEbBE2KCr\n-vT5yEVvpCZ4lwSgA2a+uTlRTvVV6NA/kpsxU64tmhuEOjy+ToDqJ8wv4mqvWZxMv\n-C6OhfVaXBy3U9gG8aQV0ffXGs+TbCtv8ApHd6E1/AVk0oyZGJaBVrEl688bBIWd/\n-uQENBFGeqJ4BCADFmgR7oEGkFFB5qXnuNYFq1nUGDAh0dLNtAD3J6EMxUZEXdmp+\n-DQHJw6/eDRQaG9EbjNZheycbVUoI8K2Y/Z268HQueGuIEIJv6cZYXoXdWCbDD4fn\n-HMNUX2wNlpDqWxb7PNUEtfU9hI3gmHGlr5OiEh3iV06uiZg4n2rbWPbj45m5LJzv\n-wpCrUA+pLcl9Xjw2cajaSTjdXHk9gvXTCo6s2ZS3/3Q4l+xuzZp1MGNzPQHASMKs\n-wecSJKkYg6W8I5WsVlPd9a8oQCc/Nfz7BPw31MRVR/SF5FAMqaXx5uLwghVdHB2i\n-cLURsOtJlCfP8W06gB7yS+MH45Jq/oxBRiJBABEBAAGJAR8EGAECAAkFAlGeqJ4C\n-GwwACgkQgsXACWKOzwwT4wgAy6ICcnBZ9l2jSu+ldy57F6jf5kpKZgB9NV8V2mMA\n-NeY1wMQ4VTVpU4t3s4E2LYtGNJNkPQVHbt1Pf4dGPasvMPaHMamgwgyqgYixqs0x\n-D5PdKzVrfnjwTTr/ZAFdccSPmvy5/hbY0geQ/+mzdbL07+xaT58JIoG5nySDKhmC\n-VeOvhDZtXMVAhEWBDPEgh/H9sEuBgMgZrzfE1j3q802qiXeQs6WtadWlQ1RN9Iq1\n-ZzIi6u9/BifEIRI0pO/WwKOZdXLTemFUoakoe7uT3A74N96t0G9LZVihYbEoO+Pc\n-5IaHPBV5VLeR3TB1LnnjHVf/Fwi8cnGy50kNWjcbMyEDag==\n-=jyQ4\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "5ee82a6f7ea42f0f4ecacbfc0b2541b3d98a48d7",
        "filename": "contrib/gitian-downloader/petertodd-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 1901,
        "changes": 1901,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/petertodd-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/petertodd-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/petertodd-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "0870c88b9b3608b761565063dcbdc33536250227",
        "filename": "contrib/gitian-downloader/prab-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 81,
        "changes": 81,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/prab-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/prab-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/prab-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,81 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v2\n-\n-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\n-RFdDYRHByRDDL1I=\n-=dOwX\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "04d1d538bea3e61e0905f95432927ab2939de0b9",
        "filename": "contrib/gitian-downloader/richardsmith-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/richardsmith-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/richardsmith-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/richardsmith-key.gpg?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+mQINBFAsDREBEADD88DdBoGu/rMpNYWyzXNWfHI5su/JX1tfzM/pb/iSrC4ywOtZ\n+P7wCqqAB1lhuT94j2m8kpv/VSb98Q7ZURxbwY/zEQnDuifiBCj5hO4lWTdSKgmLy\n+8xVR7WHEYCscKFl92mG6tqDewnD2oX5NyJrFeXPAM9R9jBIDc2oyUVznv5Rb2YUp\n+D4rdIHbEMoe524Ucw8ez5Kxtf0OW0Zbrraq1utbcL3B99FMnoSaXq5AiGTmcI3Xm\n+Mx8T8E6I2gd6ZLEtJbgzG7B8so/0tbpGIYExzatjWEzuDEPAgAB028nNWf8q+SE+\n+G3Zo/ZrCenGYPmDKIaSlqmdhqHe22AGtn+k6gzvLVN9MHY2exIWhu2R8uw6cGCbG\n+piw7HPDR0epgf5im50rr/k9ZgELhURqDezeHCwRBFtBZd+1sLgzMocYybq7XM9e6\n+dcHRZoXamlMibKoYMp30jfyb5mVYwnOJAQNUkFxwZOJXONOvwEyO+89ep0c7H/I5\n+h/4F7UGTpRB84HpkZCK+rxOg90UpOQEAA1OKi2od5DNBtu9JnXOD8Ki9lXHaGgL2\n+H6Q+ugntvsYmcJZ22IkymZ1DPaEPJa8Y/pwovl9rYac1A1v9PFkl2XsE2EZyipmF\n+QjTSimnmvCCIXFSG7yN4iP/H/+vP8kdV2HuPfLnq7i0uIe9q9s0ogtZEpwARAQAB\n+tCVyaWNoYXJkc21pdGggPGljZWVhdHNjcmVhbUBnbWFpbC5jb20+iQI+BBMBAgAo\n+BQJQLA0RAhsDBQkSzAMABgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRCiiuz9\n+atLt+MecD/9qO/1ALT4EH5MewKG6mMT9hrbsIf07Cc0uKl4/hpbElK2iEclcXdj6\n+fXyxVF0+1Vl8Bfkj47n4sL8aOmVjZ8YpFcW59GqE9Me9Sw7bPE5x8Ly2Am+NMkhz\n+myq3aJX54bzUGvBxCNwZYV46DxKjsOLrw2I/Tzt2zjzROlCW/r4IpEuFAQY5zzNv\n+YryzWuaJF27pVZH2od9X0nEfn7qBoDYWEtvlI5jfsL4HI0bd4Ws9xMrkjHKBaFaC\n+H5sxZS7mxicTRf4qeP/XKxdEI461sg28wYewnIBqYm8OEkwFS3YB51hlA1ufi3Za\n+m5sMmiut8H5jq0QXH+LWWQAADOnCbMrr3zbkaueMvLzjUsR1EtbYlpGPHXwk9eVk\n+9XckZ1hMjUl5VCBLzquuGuJonUfb5plxEDJ2MCkkkhBJ6DR3yMpjS//ogi52fwlI\n+0yltpyXUXcgURwvQ1pwpTkjbD09KqUmxViULFMLXT3e6vRc5pH9e7mja5LxSe/No\n+Kqm0RdFlM/2CMDQ0ByNUGWjAPozuxm5PeO0ypS3+tDBiLcgZnayWelsuHzR4BCmk\n+LkXiNTrIlXSJpBWsg5D99ni8VrFGLwn9PBaDrOsztfL8iDFgVUzPbizbEEAbKiYq\n+lo/qnq2nrxR7YtChJQwhKlc0NHOWmqJOp2+AIW+L1LfDiVo3wuH6XrkCDQRQLA0R\n+ARAA0e4sHZQDTZZ9DdmML1yhL9C0DqsBaDTiKQY+s9lanrjSs7HKgv8bK+gTNvng\n+/O0M1/xhSOsgepq5lpdl7h5QqGZ1oCSF3QYxCeGe85g9SKBsUFNbYwdS2JXBwO3V\n+1euBM2pNSmNL0PYiTsWylUQPymUZ4ww2n6giVYWmsEqSF/Ld/kkfODzJAP4AwBIJ\n+f+2GY+vWcvxNKES1JT98p/dlMMMXeDKqcXIIzoZbnpk5gd21oGXbMwaf9s8bK8ob\n+BMqZCORmSnG9npRSfFXDHSa2983nGPUoL8bMzeyDu/1PViclxTWtI012gYp99pRm\n+JXzGiGdBmuLItAQW5o8DWXfiiobYd5H0+PfAX62H5oXTWH1T5jblyxcyA+fYU71t\n+wCRZ93OEHv0Q/RafH6Fr+ltZVnpPmYpJ4gyWpyoP2j91N6KaVyrfbCaN0Cyv4bQG\n+JCg8Ss8UqOnsFj88KikYwRMVxJp5E6MpM0yEuIU+vrB+58yOmeNCQ+LwBNnltCmC\n+9v0YYibMbmUv4wRvScGHPAfJ3CWndRbIObXoMlLs9nayMCqpBTEDGhTKheocQdMo\n+aLt3OJsaTmFKE7iFGKImGgUdD94kbkzb7R+ZRlI9mNNiq+Kuj19CSAVdM9vttjyt\n+whPYPR6d4GNWZFS+Gg9k2Bv7O2cDYh78Go7ywuAtPkcTMv8AEQEAAYkCJQQYAQIA\n+DwUCUCwNEQIbDAUJEswDAAAKCRCiiuz9atLt+PAXEACLd967Sz06DpjMHqgHahCr\n+m1Kt13EM/mbrnoFJWePTp1JAtlzSMXKsWo7zOCC71dyI8PEfjylsZiuC3uL54DDl\n+JlQmlXa6/qi1KnqroJEkZ+YoDnIy/jiN1L3SqMVwUeQrd5N0koPZflpnoAq1np97\n+wWDwK8NqALq5VsqXhVWvXeqjDM1q9+7fO7xDQLFZ0MNhqoMBdE4QRRkw55XWJKS9\n+RI/hxDFuCJlK04eFTU/5pUSksEZZ0vl43YkXlN54qiyOvkVL2Aq9gVgvdaqGbG8x\n+kVSEtJK9XTwlo+BA/sFCMlR4NL1XCrrvv9/1SwiFAFSV4dz6Cg9ObAonNh0mbnwj\n+IaaBzS18pqRzqZg69aZzlKp6LxBYOmZTQuPiwdF0Cn/b5VNtgLKInmOvDvpHFWE2\n+H4dU3Al/B+3o1Bm24mAgLQHGFh4GN4BV1ge+Lijiz+N0sUfPsqtHaP3RNZsm/4oL\n+zyVuoSMRL+NtkB03SID7CBzrVLGWRGgeWjLfLz+wnrDGlWz0N7dKJx76nayTvsM2\n+xd81jat8FyHFFoB5D4xn+czbkCq1k3giyKqilz2NNXX0G7kUiU0D+tvIb76qP389\n+9uiMAuC5q1Ibo+k3pOZrWWHX3c9HB1Qlry9Qw57Y4ncqjRcdMf884da5mTmCjl/d\n+EwL78xfzdw9iYRRwoeP+IQ==\n+=jMKy\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "678ec7e962fae5d91f468f8bdb79a1d01adda506",
        "filename": "contrib/gitian-downloader/scottnadal-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/scottnadal-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/scottnadal-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/scottnadal-key.gpg?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+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\n+JzdBFnCP7RoNHIQ20A==\n+=CQsQ\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "a52a5deb1b6c4691bb7073fc819080f66df6d2f2",
        "filename": "contrib/gitian-downloader/sipa-key.pgp",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/sipa-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/sipa-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sipa-key.pgp?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "16b2a40b3c4d7355411de311f313d76313e0ea5f",
        "filename": "contrib/gitian-downloader/sunnyking-key.gpg",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/sunnyking-key.gpg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/sunnyking-key.gpg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/sunnyking-key.gpg?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,52 @@\n+-----BEGIN PGP PUBLIC KEY BLOCK-----\n+Version: GnuPG v1.4.10 (GNU/Linux)\n+\n+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\n+KIjGheFAFTRFLgBmol4=\n+=Qxzm\n+-----END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "0f7032e6438c9529c58837f765497629ee03b462",
        "filename": "contrib/gitian-downloader/win32-download-config",
        "status": "added",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/win32-download-config",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/gitian-downloader/win32-download-config",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/win32-download-config?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,38 @@\n+--- \n+name: bitcoin\n+urls:\n+- http://bitcoin.org/bitcoin-latest-win32-gitian.zip\n+rss:\n+- url: http://sourceforge.net/api/file/index/project-id/244765/mtime/desc/limit/100/rss\n+  xpath: //item/link/text()\n+  pattern: bitcoin-\\d+.\\d+.\\d+-win32-gitian.zip\n+signers:\n+  0A82509767C7D4A5D14DA2301AE1D35043E08E54:\n+    weight: 40\n+    name: BlueMatt\n+    key: bluematt\n+  BF6273FAEF7CC0BA1F562E50989F6B3048A116B5:\n+    weight: 40\n+    name: Devrandom\n+    key: devrandom\n+  E463A93F5F3117EEDE6C7316BD02942421F4889F:\n+    weight: 40\n+    name: Luke-Jr\n+    key: luke-jr\n+  D762373D24904A3E42F33B08B9A408E71DAAC974:\n+    weight: 40\n+    name: \"Pieter Wuille\"\n+    key: sipa\n+  77E72E69DA7EE0A148C06B21B34821D4944DE5F7:\n+    weight: 40\n+    name: tcatm\n+    key: tcatm\n+  01CDF4627A3B88AAE4A571C87588242FBE38D3A8:\n+    weight: 40\n+    name: \"Gavin Andresen\"\n+    key: gavinandresen\n+  71A3B16735405025D447E8F274810B012346C9A6:\n+    weight: 40\n+    name: \"Wladimir J. van der Laan\"\n+    key: laanwj\n+minimum_weight: 120"
      },
      {
        "sha": "e0f6c4c5fdf56ffbd6308d4e0a6624290feadff6",
        "filename": "contrib/gitian-downloader/wtogami-key.pgp",
        "status": "removed",
        "additions": 0,
        "deletions": 131,
        "changes": 131,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/wtogami-key.pgp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/gitian-downloader/wtogami-key.pgp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-downloader/wtogami-key.pgp?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,131 +0,0 @@\n------BEGIN PGP PUBLIC KEY BLOCK-----\n-Version: GnuPG v1.4.13 (GNU/Linux)\n-\n-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\n-=icdI\n------END PGP PUBLIC KEY BLOCK-----"
      },
      {
        "sha": "eb5d30accef8bfc9dfbf7e4b38b0ca5b924fa508",
        "filename": "contrib/init/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,12 +0,0 @@\n-Sample configuration files for:\n-\n-SystemD: bitcoind.service\n-Upstart: bitcoind.conf\n-OpenRC:  bitcoind.openrc\n-         bitcoind.openrcconf\n-CentOS:  bitcoind.init\n-OS X:    org.bitcoin.bitcoind.plist\n-\n-have been made available to assist packagers in creating node packages here.\n-\n-See doc/init.md for more information."
      },
      {
        "sha": "f9554eecde7f2e536d7ac4422b58e870f2275eaa",
        "filename": "contrib/init/bitcoind.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 65,
        "changes": 65,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.conf?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,65 +0,0 @@\n-description \"Bitcoin Core Daemon\"\n-\n-start on runlevel [2345]\n-stop on starting rc RUNLEVEL=[016]\n-\n-env BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-env BITCOIND_USER=\"bitcoin\"\n-env BITCOIND_GROUP=\"bitcoin\"\n-env BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-# upstart can't handle variables constructed with other variables\n-env BITCOIND_PIDFILE=\"/var/run/bitcoind/bitcoind.pid\"\n-env BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-env BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-expect fork\n-\n-respawn\n-respawn limit 5 120\n-kill timeout 60\n-\n-pre-start script\n-    # this will catch non-existent config files\n-    # bitcoind will check and exit with this very warning, but it can do so\n-    # long after forking, leaving upstart to think everything started fine.\n-    # since this is a commonly encountered case on install, just check and\n-    # warn here.\n-    if ! grep -qs '^rpcpassword=' \"$BITCOIND_CONFIGFILE\" ; then\n-        echo \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-        echo \"The setting must appear in $BITCOIND_CONFIGFILE\"\n-        echo\n-        echo \"This password is security critical to securing wallets \"\n-        echo \"and must not be the same as the rpcuser setting.\"\n-        echo \"You can generate a suitable random password using the following\"\n-        echo \"command from the shell:\"\n-        echo\n-        echo \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-        echo\n-        echo \"It is also recommended that you also set alertnotify so you are \"\n-        echo \"notified of problems:\"\n-        echo\n-        echo \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-            \"admin@foo.com\"\n-        echo\n-        exit 1\n-    fi\n-\n-    mkdir -p \"$BITCOIND_PIDDIR\"\n-    chmod 0755 \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_PIDDIR\"\n-    chown $BITCOIND_USER:$BITCOIND_GROUP \"$BITCOIND_CONFIGFILE\"\n-    chmod 0660 \"$BITCOIND_CONFIGFILE\"\n-end script\n-\n-exec start-stop-daemon \\\n-    --start \\\n-    --pidfile \"$BITCOIND_PIDFILE\" \\\n-    --chuid $BITCOIND_USER:$BITCOIND_GROUP \\\n-    --exec \"$BITCOIND_BIN\" \\\n-    -- \\\n-    -pid=\"$BITCOIND_PIDFILE\" \\\n-    -conf=\"$BITCOIND_CONFIGFILE\" \\\n-    -datadir=\"$BITCOIND_DATADIR\" \\\n-    -disablewallet \\\n-    -daemon\n-"
      },
      {
        "sha": "db5061874b3a923278fa11d4f3117fca19da1bcc",
        "filename": "contrib/init/bitcoind.init",
        "status": "removed",
        "additions": 0,
        "deletions": 67,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.init",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.init",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.init?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,67 +0,0 @@\n-#!/bin/bash\n-#\n-#  bitcoind The bitcoin core server.\n-#\n-#\n-# chkconfig: 345 80 20\n-# description: bitcoind\n-# processname: bitcoind\n-#\n-\n-# Source function library.\n-. /etc/init.d/functions\n-\n-# you can override defaults in /etc/sysconfig/bitcoind, see below\n-if [ -f /etc/sysconfig/bitcoind ]; then\n-        . /etc/sysconfig/bitcoind\n-fi\n-\n-RETVAL=0\n-\n-prog=bitcoind\n-# you can override the lockfile via BITCOIND_LOCKFILE in /etc/sysconfig/bitcoind\n-lockfile=${BITCOIND_LOCKFILE-/var/lock/subsys/bitcoind}\n-\n-# bitcoind defaults to /usr/bin/bitcoind, override with BITCOIND_BIN\n-bitcoind=${BITCOIND_BIN-/usr/bin/bitcoind}\n-\n-# bitcoind opts default to -disablewallet, override with BITCOIND_OPTS\n-bitcoind_opts=${BITCOIND_OPTS--disablewallet}\n-\n-start() {\n-    echo -n $\"Starting $prog: \"\n-    daemon $DAEMONOPTS $bitcoind $bitcoind_opts\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && touch $lockfile\n-    return $RETVAL\n-}\n-\n-stop() {\n-    echo -n $\"Stopping $prog: \"\n-    killproc $prog\n-    RETVAL=$?\n-    echo\n-    [ $RETVAL -eq 0 ] && rm -f $lockfile\n-    return $RETVAL\n-}\n-\n-case \"$1\" in\n-    start)\n-        start\n-        ;;\n-    stop)\n-        stop\n-        ;;\n-    status)\n-        status $prog\n-        ;;\n-    restart)\n-        stop\n-        start\n-        ;;\n-    *)\n-        echo \"Usage: service $prog {start|stop|status|restart}\"\n-        exit 1\n-        ;;\n-esac"
      },
      {
        "sha": "eda1a96fb4fcbaf3a61cafcd80368b5104ec0f56",
        "filename": "contrib/init/bitcoind.openrc",
        "status": "removed",
        "additions": 0,
        "deletions": 92,
        "changes": 92,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.openrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.openrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrc?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,92 +0,0 @@\n-#!/sbin/runscript\n-\n-# backward compatibility for existing gentoo layout \n-#\n-if [ -d \"/var/lib/bitcoin/.bitcoin\" ]; then\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoin/.bitcoin\"\n-else\n-\tBITCOIND_DEFAULT_DATADIR=\"/var/lib/bitcoind\"\n-fi\n-\n-BITCOIND_CONFIGFILE=${BITCOIND_CONFIGFILE:-/etc/bitcoin/bitcoin.conf}\n-BITCOIND_PIDDIR=${BITCOIND_PIDDIR:-/var/run/bitcoind}\n-BITCOIND_PIDFILE=${BITCOIND_PIDFILE:-${BITCOIND_PIDDIR}/bitcoind.pid}\n-BITCOIND_DATADIR=${BITCOIND_DATADIR:-${BITCOIND_DEFAULT_DATADIR}}\n-BITCOIND_USER=${BITCOIND_USER:-${BITCOIN_USER:-bitcoin}}\n-BITCOIND_GROUP=${BITCOIND_GROUP:-bitcoin}\n-BITCOIND_BIN=${BITCOIND_BIN:-/usr/bin/bitcoind}\n-BITCOIND_NICE=${BITCOIND_NICE:-${NICELEVEL:-0}}\n-BITCOIND_OPTS=\"${BITCOIND_OPTS:-${BITCOIN_OPTS}}\"\n-\n-name=\"Bitcoin Core Daemon\"\n-description=\"Bitcoin cryptocurrency P2P network daemon\"\n-\n-command=\"/usr/bin/bitcoind\"\n-command_args=\"-pid=\\\"${BITCOIND_PIDFILE}\\\" \\\n-\t\t-conf=\\\"${BITCOIND_CONFIGFILE}\\\" \\\n-\t\t-datadir=\\\"${BITCOIND_DATADIR}\\\" \\\n-\t\t-daemon \\\n-\t\t${BITCOIND_OPTS}\"\n-\n-required_files=\"${BITCOIND_CONFIGFILE}\"\n-start_stop_daemon_args=\"-u ${BITCOIND_USER} \\\n-\t\t\t-N ${BITCOIND_NICE} -w 2000\"\n-pidfile=\"${BITCOIND_PIDFILE}\"\n-\n-# The retry schedule to use when stopping the daemon. Could be either\n-# a timeout in seconds or multiple signal/timeout pairs (like\n-# \"SIGKILL/180 SIGTERM/300\")\n-retry=\"${BITCOIND_SIGTERM_TIMEOUT}\"\n-\n-depend() {\n-\tneed localmount net\n-}\n-\n-# verify\n-# 1) that the datadir exists and is writable (or create it)\n-# 2) that a directory for the pid exists and is writable\n-# 3) ownership and permissions on the config file\n-start_pre() {\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0750 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_DATADIR}\"\n-\n-\tcheckpath \\\n-\t-d \\\n-\t--mode 0755 \\\n-\t--owner \"${BITCOIND_USER}:${BITCOIND_GROUP}\" \\\n-\t\"${BITCOIND_PIDDIR}\"\n-\n-\tcheckpath -f \\\n-\t-o ${BITCOIND_USER}:${BITCOIND_GROUP} \\\n-\t-m 0660 \\\n-\t${BITCOIND_CONFIGFILE}\n-\n-\tcheckconfig || return 1\n-}\n-\n-checkconfig()\n-{\n-\tif ! grep -qs '^rpcpassword=' \"${BITCOIND_CONFIGFILE}\" ; then\n-\t\teerror \"\"\n-\t\teerror \"ERROR: You must set a secure rpcpassword to run bitcoind.\"\n-\t\teerror \"The setting must appear in ${BITCOIND_CONFIGFILE}\"\n-\t\teerror \"\"\n-\t\teerror \"This password is security critical to securing wallets \"\n-\t\teerror \"and must not be the same as the rpcuser setting.\"\n-\t\teerror \"You can generate a suitable random password using the following\"\n-\t\teerror \"command from the shell:\"\n-\t\teerror \"\"\n-\t\teerror \"bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'\"\n-\t\teerror \"\"\n-\t\teerror \"It is also recommended that you also set alertnotify so you are \"\n-\t\teerror \"notified of problems:\"\n-\t\teerror \"\"\n-\t\teerror \"ie: alertnotify=echo %%s | mail -s \\\"Bitcoin Alert\\\"\" \\\n-\t\t\t\"admin@foo.com\"\n-\t\teerror \"\"\n-\t\treturn 1\n-\tfi\n-}"
      },
      {
        "sha": "0cbff6d30d2d66bbafaaf2205f4dd7609b2113a1",
        "filename": "contrib/init/bitcoind.openrcconf",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.openrcconf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.openrcconf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.openrcconf?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,33 +0,0 @@\n-# /etc/conf.d/bitcoind: config file for /etc/init.d/bitcoind\n-\n-# Config file location\n-#BITCOIND_CONFIGFILE=\"/etc/bitcoin/bitcoin.conf\"\n-\n-# What directory to write pidfile to?  (created and owned by $BITCOIND_USER)\n-#BITCOIND_PIDDIR=\"/var/run/bitcoind\"\n-\n-# What filename to give the pidfile\n-#BITCOIND_PIDFILE=\"${BITCOIND_PIDDIR}/bitcoind.pid\"\n-\n-# Where to write bitcoind data (be mindful that the blockchain is large)\n-#BITCOIND_DATADIR=\"/var/lib/bitcoind\"\n-\n-# User and group to own bitcoind process\n-#BITCOIND_USER=\"bitcoin\"\n-#BITCOIND_GROUP=\"bitcoin\"\n-\n-# Path to bitcoind executable\n-#BITCOIND_BIN=\"/usr/bin/bitcoind\"\n-\n-# Nice value to run bitcoind under\n-#BITCOIND_NICE=0\n-\n-# Additional options (avoid -conf and -datadir, use flags above)\n-BITCOIND_OPTS=\"-disablewallet\"\n-\n-# The timeout in seconds OpenRC will wait for bitcoind to terminate\n-# after a SIGTERM has been raised.\n-# Note that this will be mapped as argument to start-stop-daemon's\n-# '--retry' option, which means you can specify a retry schedule\n-# here. For more information see man 8 start-stop-daemon.\n-BITCOIND_SIGTERM_TIMEOUT=60"
      },
      {
        "sha": "9132957c38b8d3ed6648b79d3948e41ee3861db0",
        "filename": "contrib/init/bitcoind.service",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.service",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/bitcoind.service",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/bitcoind.service?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-[Unit]\n-Description=Bitcoin's distributed currency daemon\n-After=network.target\n-\n-[Service]\n-User=bitcoin\n-Group=bitcoin\n-\n-Type=forking\n-PIDFile=/var/lib/bitcoind/bitcoind.pid\n-ExecStart=/usr/bin/bitcoind -daemon -pid=/var/lib/bitcoind/bitcoind.pid \\\n--conf=/etc/bitcoin/bitcoin.conf -datadir=/var/lib/bitcoind -disablewallet\n-\n-Restart=always\n-PrivateTmp=true\n-TimeoutStopSec=60s\n-TimeoutStartSec=2s\n-StartLimitInterval=120s\n-StartLimitBurst=5\n-\n-[Install]\n-WantedBy=multi-user.target"
      },
      {
        "sha": "e94cd4466d226a992e2bb2e24d594dcb49b58dac",
        "filename": "contrib/init/org.bitcoin.bitcoind.plist",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/org.bitcoin.bitcoind.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/init/org.bitcoin.bitcoind.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/init/org.bitcoin.bitcoind.plist?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,15 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n-<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n-<plist version=\"1.0\">\n-<dict>\n-\t<key>Label</key>\n-\t<string>org.bitcoin.bitcoind</string>\n-\t<key>ProgramArguments</key>\n-\t<array>\n-\t\t<string>/usr/local/bin/bitcoind</string>\n-\t\t<string>-daemon</string>\n-\t</array>\n-\t<key>RunAtLoad</key>\n-\t<true/>\n-</dict>\n-</plist>"
      },
      {
        "sha": "06f278f3b3c710ed237ee81b1357970b583bd457",
        "filename": "contrib/linearize/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,33 +0,0 @@\n-# Linearize\n-Construct a linear, no-fork, best version of the blockchain.\n-\n-## Step 1: Download hash list\n-\n-    $ ./linearize-hashes.py linearize.cfg > hashlist.txt\n-\n-Required configuration file settings for linearize-hashes:\n-* RPC: rpcuser, rpcpassword\n-\n-Optional config file setting for linearize-hashes:\n-* RPC: host, port\n-* Block chain: min_height, max_height\n-\n-## Step 2: Copy local block data\n-\n-    $ ./linearize-data.py linearize.cfg\n-\n-Required configuration file settings:\n-* \"input\": bitcoind blocks/ directory containing blkNNNNN.dat\n-* \"hashlist\": text file containing list of block hashes, linearized-hashes.py\n-output.\n-* \"output_file\": bootstrap.dat\n-      or\n-* \"output\": output directory for linearized blocks/blkNNNNN.dat output\n-\n-Optional config file setting for linearize-data:\n-* \"netmagic\": network magic number\n-* \"max_out_sz\": maximum output file size (default `1000*1000*1000`)\n-* \"split_timestamp\": Split files when a new month is first seen, in addition to\n-reaching a maximum file size.\n-* \"file_timestamp\": Set each file's last-modified time to that of the\n-most recent block in that file."
      },
      {
        "sha": "38da02e66c1e7a46688afea10e8dfc9dbbb38959",
        "filename": "contrib/linearize/example-linearize.cfg",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/example-linearize.cfg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/example-linearize.cfg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/example-linearize.cfg?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,29 +0,0 @@\n-\n-# bitcoind RPC settings (linearize-hashes)\n-rpcuser=someuser\n-rpcpassword=somepassword\n-host=127.0.0.1\n-port=8332\n-#port=18332\n-\n-# bootstrap.dat hashlist settings (linearize-hashes)\n-max_height=313000\n-\n-# bootstrap.dat input/output settings (linearize-data)\n-\n-# mainnet\n-netmagic=f9beb4d9\n-genesis=000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n-input=/home/example/.bitcoin/blocks\n-\n-# testnet\n-#netmagic=0b110907\n-#genesis=000000000933ea01ad0ee984209779baaec3ced90fa3f408719526f8d77f4943\n-#input=/home/example/.bitcoin/testnet3/blocks\n-\n-output_file=/home/example/Downloads/bootstrap.dat\n-hashlist=hashlist.txt\n-split_year=1\n-\n-# Maxmimum size in bytes of out-of-order blocks cache in memory\n-out_of_order_cache_sz = 100000000"
      },
      {
        "sha": "0f6fde2a6e05216873f29cb8ec47d416f5c484d3",
        "filename": "contrib/linearize/linearize-data.py",
        "status": "removed",
        "additions": 0,
        "deletions": 303,
        "changes": 303,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/linearize-data.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/linearize-data.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-data.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,303 +0,0 @@\n-#!/usr/bin/python\n-#\n-# linearize-data.py: Construct a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function, division\n-import json\n-import struct\n-import re\n-import os\n-import os.path\n-import base64\n-import httplib\n-import sys\n-import hashlib\n-import datetime\n-import time\n-from collections import namedtuple\n-\n-settings = {}\n-\n-def uint32(x):\n-\treturn x & 0xffffffffL\n-\n-def bytereverse(x):\n-\treturn uint32(( ((x) << 24) | (((x) << 8) & 0x00ff0000) |\n-\t\t       (((x) >> 8) & 0x0000ff00) | ((x) >> 24) ))\n-\n-def bufreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tword = struct.unpack('@I', in_buf[i:i+4])[0]\n-\t\tout_words.append(struct.pack('@I', bytereverse(word)))\n-\treturn ''.join(out_words)\n-\n-def wordreverse(in_buf):\n-\tout_words = []\n-\tfor i in range(0, len(in_buf), 4):\n-\t\tout_words.append(in_buf[i:i+4])\n-\tout_words.reverse()\n-\treturn ''.join(out_words)\n-\n-def calc_hdr_hash(blk_hdr):\n-\thash1 = hashlib.sha256()\n-\thash1.update(blk_hdr)\n-\thash1_o = hash1.digest()\n-\n-\thash2 = hashlib.sha256()\n-\thash2.update(hash1_o)\n-\thash2_o = hash2.digest()\n-\n-\treturn hash2_o\n-\n-def calc_hash_str(blk_hdr):\n-\thash = calc_hdr_hash(blk_hdr)\n-\thash = bufreverse(hash)\n-\thash = wordreverse(hash)\n-\thash_str = hash.encode('hex')\n-\treturn hash_str\n-\n-def get_blk_dt(blk_hdr):\n-\tmembers = struct.unpack(\"<I\", blk_hdr[68:68+4])\n-\tnTime = members[0]\n-\tdt = datetime.datetime.fromtimestamp(nTime)\n-\tdt_ym = datetime.datetime(dt.year, dt.month, 1)\n-\treturn (dt_ym, nTime)\n-\n-def get_block_hashes(settings):\n-\tblkindex = []\n-\tf = open(settings['hashlist'], \"r\")\n-\tfor line in f:\n-\t\tline = line.rstrip()\n-\t\tblkindex.append(line)\n-\n-\tprint(\"Read \" + str(len(blkindex)) + \" hashes\")\n-\n-\treturn blkindex\n-\n-def mkblockmap(blkindex):\n-\tblkmap = {}\n-\tfor height,hash in enumerate(blkindex):\n-\t\tblkmap[hash] = height\n-\treturn blkmap\n-\n-# Block header and extent on disk\n-BlockExtent = namedtuple('BlockExtent', ['fn', 'offset', 'inhdr', 'blkhdr', 'size'])\n-\n-class BlockDataCopier:\n-\tdef __init__(self, settings, blkindex, blkmap):\n-\t\tself.settings = settings\n-\t\tself.blkindex = blkindex\n-\t\tself.blkmap = blkmap\n-\n-\t\tself.inFn = 0\n-\t\tself.inF = None\n-\t\tself.outFn = 0\n-\t\tself.outsz = 0\n-\t\tself.outF = None\n-\t\tself.outFname = None\n-\t\tself.blkCountIn = 0\n-\t\tself.blkCountOut = 0\n-\n-\t\tself.lastDate = datetime.datetime(2000, 1, 1)\n-\t\tself.highTS = 1408893517 - 315360000\n-\t\tself.timestampSplit = False\n-\t\tself.fileOutput = True\n-\t\tself.setFileTime = False\n-\t\tself.maxOutSz = settings['max_out_sz']\n-\t\tif 'output' in settings:\n-\t\t\tself.fileOutput = False\n-\t\tif settings['file_timestamp'] != 0:\n-\t\t\tself.setFileTime = True\n-\t\tif settings['split_timestamp'] != 0:\n-\t\t\tself.timestampSplit = True\n-\t\t# Extents and cache for out-of-order blocks\n-\t\tself.blockExtents = {}\n-\t\tself.outOfOrderData = {}\n-\t\tself.outOfOrderSize = 0 # running total size for items in outOfOrderData\n-\n-\tdef writeBlock(self, inhdr, blk_hdr, rawblock):\n-\t\tblockSizeOnDisk = len(inhdr) + len(blk_hdr) + len(rawblock)\n-\t\tif not self.fileOutput and ((self.outsz + blockSizeOnDisk) > self.maxOutSz):\n-\t\t\tself.outF.close()\n-\t\t\tif self.setFileTime:\n-\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n-\t\t\tself.outF = None\n-\t\t\tself.outFname = None\n-\t\t\tself.outFn = self.outFn + 1\n-\t\t\tself.outsz = 0\n-\n-\t\t(blkDate, blkTS) = get_blk_dt(blk_hdr)\n-\t\tif self.timestampSplit and (blkDate > self.lastDate):\n-\t\t\tprint(\"New month \" + blkDate.strftime(\"%Y-%m\") + \" @ \" + hash_str)\n-\t\t\tlastDate = blkDate\n-\t\t\tif outF:\n-\t\t\t\toutF.close()\n-\t\t\t\tif setFileTime:\n-\t\t\t\t\tos.utime(outFname, (int(time.time()), highTS))\n-\t\t\t\tself.outF = None\n-\t\t\t\tself.outFname = None\n-\t\t\t\tself.outFn = self.outFn + 1\n-\t\t\t\tself.outsz = 0\n-\n-\t\tif not self.outF:\n-\t\t\tif self.fileOutput:\n-\t\t\t\toutFname = self.settings['output_file']\n-\t\t\telse:\n-\t\t\t\toutFname = os.path.join(self.settings['output'], \"blk%05d.dat\" % self.outFn)\n-\t\t\tprint(\"Output file \" + outFname)\n-\t\t\tself.outF = open(outFname, \"wb\")\n-\n-\t\tself.outF.write(inhdr)\n-\t\tself.outF.write(blk_hdr)\n-\t\tself.outF.write(rawblock)\n-\t\tself.outsz = self.outsz + len(inhdr) + len(blk_hdr) + len(rawblock)\n-\n-\t\tself.blkCountOut = self.blkCountOut + 1\n-\t\tif blkTS > self.highTS:\n-\t\t\tself.highTS = blkTS\n-\n-\t\tif (self.blkCountOut % 1000) == 0:\n-\t\t\tprint('%i blocks scanned, %i blocks written (of %i, %.1f%% complete)' % \n-\t\t\t\t\t(self.blkCountIn, self.blkCountOut, len(self.blkindex), 100.0 * self.blkCountOut / len(self.blkindex)))\n-\n-\tdef inFileName(self, fn):\n-\t\treturn os.path.join(self.settings['input'], \"blk%05d.dat\" % fn)\n-\n-\tdef fetchBlock(self, extent):\n-\t\t'''Fetch block contents from disk given extents'''\n-\t\twith open(self.inFileName(extent.fn), \"rb\") as f:\n-\t\t\tf.seek(extent.offset)\n-\t\t\treturn f.read(extent.size)\n-\n-\tdef copyOneBlock(self):\n-\t\t'''Find the next block to be written in the input, and copy it to the output.'''\n-\t\textent = self.blockExtents.pop(self.blkCountOut)\n-\t\tif self.blkCountOut in self.outOfOrderData:\n-\t\t\t# If the data is cached, use it from memory and remove from the cache\n-\t\t\trawblock = self.outOfOrderData.pop(self.blkCountOut)\n-\t\t\tself.outOfOrderSize -= len(rawblock)\n-\t\telse: # Otherwise look up data on disk\n-\t\t\trawblock = self.fetchBlock(extent)\n-\n-\t\tself.writeBlock(extent.inhdr, extent.blkhdr, rawblock)\n-\n-\tdef run(self):\n-\t\twhile self.blkCountOut < len(self.blkindex):\n-\t\t\tif not self.inF:\n-\t\t\t\tfname = self.inFileName(self.inFn)\n-\t\t\t\tprint(\"Input file \" + fname)\n-\t\t\t\ttry:\n-\t\t\t\t\tself.inF = open(fname, \"rb\")\n-\t\t\t\texcept IOError:\n-\t\t\t\t\tprint(\"Premature end of block data\")\n-\t\t\t\t\treturn\n-\n-\t\t\tinhdr = self.inF.read(8)\n-\t\t\tif (not inhdr or (inhdr[0] == \"\\0\")):\n-\t\t\t\tself.inF.close()\n-\t\t\t\tself.inF = None\n-\t\t\t\tself.inFn = self.inFn + 1\n-\t\t\t\tcontinue\n-\n-\t\t\tinMagic = inhdr[:4]\n-\t\t\tif (inMagic != self.settings['netmagic']):\n-\t\t\t\tprint(\"Invalid magic: \" + inMagic.encode('hex'))\n-\t\t\t\treturn\n-\t\t\tinLenLE = inhdr[4:]\n-\t\t\tsu = struct.unpack(\"<I\", inLenLE)\n-\t\t\tinLen = su[0] - 80 # length without header\n-\t\t\tblk_hdr = self.inF.read(80)\n-\t\t\tinExtent = BlockExtent(self.inFn, self.inF.tell(), inhdr, blk_hdr, inLen)\n-\n-\t\t\thash_str = calc_hash_str(blk_hdr)\n-\t\t\tif not hash_str in blkmap:\n-\t\t\t\tprint(\"Skipping unknown block \" + hash_str)\n-\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\t\t\t\tcontinue\n-\n-\t\t\tblkHeight = self.blkmap[hash_str]\n-\t\t\tself.blkCountIn += 1\n-\n-\t\t\tif self.blkCountOut == blkHeight:\n-\t\t\t\t# If in-order block, just copy\n-\t\t\t\trawblock = self.inF.read(inLen)\n-\t\t\t\tself.writeBlock(inhdr, blk_hdr, rawblock)\n-\n-\t\t\t\t# See if we can catch up to prior out-of-order blocks\n-\t\t\t\twhile self.blkCountOut in self.blockExtents:\n-\t\t\t\t\tself.copyOneBlock()\n-\n-\t\t\telse: # If out-of-order, skip over block data for now\n-\t\t\t\tself.blockExtents[blkHeight] = inExtent\n-\t\t\t\tif self.outOfOrderSize < self.settings['out_of_order_cache_sz']:\n-\t\t\t\t\t# If there is space in the cache, read the data\n-\t\t\t\t\t# Reading the data in file sequence instead of seeking and fetching it later is preferred,\n-\t\t\t\t\t# but we don't want to fill up memory\n-\t\t\t\t\tself.outOfOrderData[blkHeight] = self.inF.read(inLen)\n-\t\t\t\t\tself.outOfOrderSize += inLen\n-\t\t\t\telse: # If no space in cache, seek forward\n-\t\t\t\t\tself.inF.seek(inLen, os.SEEK_CUR)\n-\n-\t\tprint(\"Done (%i blocks written)\" % (self.blkCountOut))\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-data.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'netmagic' not in settings:\n-\t\tsettings['netmagic'] = 'f9beb4d9'\n-\tif 'genesis' not in settings:\n-\t\tsettings['genesis'] = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f'\n-\tif 'input' not in settings:\n-\t\tsettings['input'] = 'input'\n-\tif 'hashlist' not in settings:\n-\t\tsettings['hashlist'] = 'hashlist.txt'\n-\tif 'file_timestamp' not in settings:\n-\t\tsettings['file_timestamp'] = 0\n-\tif 'split_timestamp' not in settings:\n-\t\tsettings['split_timestamp'] = 0\n-\tif 'max_out_sz' not in settings:\n-\t\tsettings['max_out_sz'] = 1000L * 1000 * 1000\n-\tif 'out_of_order_cache_sz' not in settings:\n-\t\tsettings['out_of_order_cache_sz'] = 100 * 1000 * 1000\n-\n-\tsettings['max_out_sz'] = long(settings['max_out_sz'])\n-\tsettings['split_timestamp'] = int(settings['split_timestamp'])\n-\tsettings['file_timestamp'] = int(settings['file_timestamp'])\n-\tsettings['netmagic'] = settings['netmagic'].decode('hex')\n-\tsettings['out_of_order_cache_sz'] = int(settings['out_of_order_cache_sz'])\n-\n-\tif 'output_file' not in settings and 'output' not in settings:\n-\t\tprint(\"Missing output file / directory\")\n-\t\tsys.exit(1)\n-\n-\tblkindex = get_block_hashes(settings)\n-\tblkmap = mkblockmap(blkindex)\n-\n-\tif not settings['genesis'] in blkmap:\n-\t\tprint(\"Genesis block not found in hashlist\")\n-\telse:\n-\t\tBlockDataCopier(settings, blkindex, blkmap).run()\n-\n-"
      },
      {
        "sha": "854cf1f9eeb3d70e818fea418ffca9620366dde4",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "removed",
        "additions": 0,
        "deletions": 113,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,113 +0,0 @@\n-#!/usr/bin/python\n-#\n-# linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n-#\n-# Copyright (c) 2013-2014 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#\n-\n-from __future__ import print_function\n-import json\n-import struct\n-import re\n-import base64\n-import httplib\n-import sys\n-\n-settings = {}\n-\n-class BitcoinRPC:\n-\tdef __init__(self, host, port, username, password):\n-\t\tauthpair = \"%s:%s\" % (username, password)\n-\t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n-\t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\n-\tdef execute(self, obj):\n-\t\tself.conn.request('POST', '/', json.dumps(obj),\n-\t\t\t{ 'Authorization' : self.authhdr,\n-\t\t\t  'Content-type' : 'application/json' })\n-\n-\t\tresp = self.conn.getresponse()\n-\t\tif resp is None:\n-\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n-\t\t\treturn None\n-\n-\t\tbody = resp.read()\n-\t\tresp_obj = json.loads(body)\n-\t\treturn resp_obj\n-\n-\t@staticmethod\n-\tdef build_request(idx, method, params):\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : idx }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n-\t\treturn obj\n-\n-\t@staticmethod\n-\tdef response_is_error(resp_obj):\n-\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n-\n-def get_block_hashes(settings, max_blocks_per_call=10000):\n-\trpc = BitcoinRPC(settings['host'], settings['port'],\n-\t\t\t settings['rpcuser'], settings['rpcpassword'])\n-\n-\theight = settings['min_height']\n-\twhile height < settings['max_height']+1:\n-\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n-\t\tbatch = []\n-\t\tfor x in range(num_blocks):\n-\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n-\n-\t\treply = rpc.execute(batch)\n-\n-\t\tfor x,resp_obj in enumerate(reply):\n-\t\t\tif rpc.response_is_error(resp_obj):\n-\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n-\t\t\t\texit(1)\n-\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n-\t\t\tprint(resp_obj['result'])\n-\n-\t\theight += num_blocks\n-\n-if __name__ == '__main__':\n-\tif len(sys.argv) != 2:\n-\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n-\t\tsys.exit(1)\n-\n-\tf = open(sys.argv[1])\n-\tfor line in f:\n-\t\t# skip comment lines\n-\t\tm = re.search('^\\s*#', line)\n-\t\tif m:\n-\t\t\tcontinue\n-\n-\t\t# parse key=value lines\n-\t\tm = re.search('^(\\w+)\\s*=\\s*(\\S.*)$', line)\n-\t\tif m is None:\n-\t\t\tcontinue\n-\t\tsettings[m.group(1)] = m.group(2)\n-\tf.close()\n-\n-\tif 'host' not in settings:\n-\t\tsettings['host'] = '127.0.0.1'\n-\tif 'port' not in settings:\n-\t\tsettings['port'] = 8332\n-\tif 'min_height' not in settings:\n-\t\tsettings['min_height'] = 0\n-\tif 'max_height' not in settings:\n-\t\tsettings['max_height'] = 313000\n-\tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n-\t\tsys.exit(1)\n-\n-\tsettings['port'] = int(settings['port'])\n-\tsettings['min_height'] = int(settings['min_height'])\n-\tsettings['max_height'] = int(settings['max_height'])\n-\n-\tget_block_hashes(settings)\n-"
      },
      {
        "sha": "6163734e623bd3a21ac5e1ef83a42dd45febe746",
        "filename": "contrib/macdeploy/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,15 +0,0 @@\n-### MacDeploy ###\n-\n-For Snow Leopard (which uses [Python 2.6](http://www.python.org/download/releases/2.6/)), you will need the param_parser package:\n-\t\n-\tsudo easy_install argparse\n-\n-This script should not be run manually, instead, after building as usual:\n-\n-\tmake deploy\n-\n-During the process, the disk image window will pop up briefly where the fancy\n-settings are applied. This is normal, please do not interfere.\n-\n-When finished, it will produce `Bitcoin-Core.dmg`.\n-"
      },
      {
        "sha": "51dc01ac08f55952ddfcf115d0c3a829d8d2ac8d",
        "filename": "contrib/macdeploy/background.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/background.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/background.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.png?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "e0a8c9ab9da81e052dfd9daa61e594462ef0e8fe",
        "filename": "contrib/macdeploy/background.psd",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/background.psd",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/background.psd",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.psd?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "9c330af45142e011e78b4b86874ac4b3457ed457",
        "filename": "contrib/macdeploy/background.svg",
        "status": "removed",
        "additions": 0,
        "deletions": 34,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/background.svg",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/background.svg",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/background.svg?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,34 +0,0 @@\n-<?xml version=\"1.0\" standalone=\"no\"?>\n-<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 20010904//EN\"\n- \"http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd\">\n-<svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"1000pt\" height=\"640pt\" viewBox=\"0 0 1000 640\" preserveAspectRatio=\"xMidYMid meet\">\n-\t<!-- kate: space-indent off;\n-\tCopyright (c) 2015 The Bitcoin Core developers\n-\tDistributed under the MIT software license, see the accompanying\n-\tfile COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\t-->\n-\t<style type=\"text/css\"><![CDATA[\n-\t\ttext {\n-\t\t\tfont-family: \"Tuffy\";\n-\t\t\tfont-size: 86px;\n-\t\t\tfill: gray;\n-\t\t\ttext-anchor: middle;\n-\t\t}\n-\t]]></style>\n-\t<defs>\n-\t\t<linearGradient id=\"gradient\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"100%\">\n-\t\t\t<stop offset=\"0%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"33%\" style=\"stop-color:rgb(239,239,239);stop-opacity:1\" />\n-\t\t\t<stop offset=\"80%\" style=\"stop-color:rgb(205,205,205);stop-opacity:1\" />\n-\t\t\t<stop offset=\"100%\" style=\"stop-color:rgb(204,204,204);stop-opacity:1\" />\n-\t\t</linearGradient>\n-\t</defs>\n-\t<rect width=\"1000\" height=\"640\" style=\"fill:url(#gradient);stroke-width:0\" />\n-\t<g transform=\"translate(500,0) scale(0.9, 1)\">\n-\t\t<text x=\"0\" y=\"114\">PACKAGE_NAME</text>\n-\t</g>\n-\t<g transform=\"translate(0.000000,640.000000) scale(0.100000,-0.100000)\"\n-\tfill=\"#000000\" stroke=\"none\">\n-\t\t<path d=\"M4995 3705 c-24 -23 -25 -29 -25 -165 l0 -140 -306 0 -306 0 -29 -29 c-29 -29 -29 -31 -29 -141 0 -110 0 -112 29 -141 l29 -29 306 0 306 0 0 -140 c0 -136 1 -142 25 -165 16 -17 35 -25 57 -25 29 0 72 32 306 226 180 149 274 233 278 250 13 53 -2 70 -278 299 -235 194 -277 225 -306 225 -22 0 -41 -8 -57 -25z\" fixlter=\"url(#glow)\"/>\n-\t</g>\n-</svg>"
      },
      {
        "sha": "8481e903a0d12e1791981230e89894577c2d8e09",
        "filename": "contrib/macdeploy/custom_dsstore.py",
        "status": "removed",
        "additions": 0,
        "deletions": 60,
        "changes": 60,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/custom_dsstore.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/custom_dsstore.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/custom_dsstore.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,60 +0,0 @@\n-#!/usr/bin/env python\n-# Copyright (c) 2013-2015 The Bitcoin Core developers\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-\n-import biplist\n-from ds_store import DSStore\n-from mac_alias import Alias\n-import sys\n-\n-output_file = sys.argv[1]\n-package_name_ns = sys.argv[2]\n-\n-ds = DSStore.open(output_file, 'w+')\n-ds['.']['bwsp'] = {\n-    'ShowStatusBar': False,\n-    'WindowBounds': '{{300, 280}, {500, 343}}',\n-    'ContainerShowSidebar': False,\n-    'SidebarWidth': 0,\n-    'ShowTabView': False,\n-    'PreviewPaneVisibility': False,\n-    'ShowToolbar': False,\n-    'ShowSidebar': False,\n-    'ShowPathbar': True\n-}\n-\n-icvp = {\n-    'gridOffsetX': 0.0,\n-    'textSize': 12.0,\n-    'viewOptionsVersion': 1,\n-    'backgroundImageAlias': '\\x00\\x00\\x00\\x00\\x02\\x1e\\x00\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xd1\\x94\\\\\\xb0H+\\x00\\x05\\x00\\x00\\x00\\x98\\x0fbackground.tiff\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x99\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xff\\xff\\xff\\xff\\x00\\x00\\r\\x02\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x0b.background\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd19\\xb0\\xf8\\x00\\x00\\x00\\x01\\x00\\x04\\x00\\x00\\x00\\x98\\x00\\x0e\\x00 \\x00\\x0f\\x00b\\x00a\\x00c\\x00k\\x00g\\x00r\\x00o\\x00u\\x00n\\x00d\\x00.\\x00t\\x00i\\x00f\\x00f\\x00\\x0f\\x00\\x02\\x00\\x00\\x00\\x12\\x00\\x1c/.background/background.tiff\\x00\\x14\\x01\\x06\\x00\\x00\\x00\\x00\\x01\\x06\\x00\\x02\\x00\\x00\\x0cMacintosh HD\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xce\\x97\\xab\\xc3H+\\x00\\x00\\x01\\x88[\\x88\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x02u\\xab\\x8d\\xd1\\x94\\\\\\xb0devrddsk\\xff\\xff\\xff\\xff\\x00\\x00\\t \\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x07bitcoin\\x00\\x00\\x10\\x00\\x08\\x00\\x00\\xce\\x97\\xab\\xc3\\x00\\x00\\x00\\x11\\x00\\x08\\x00\\x00\\xd1\\x94\\\\\\xb0\\x00\\x00\\x00\\x01\\x00\\x14\\x01\\x88[\\x88\\x00\\x16\\xa9\\t\\x00\\x08\\xfaR\\x00\\x08\\xfaQ\\x00\\x02d\\x8e\\x00\\x0e\\x00\\x02\\x00\\x00\\x00\\x0f\\x00\\x1a\\x00\\x0c\\x00M\\x00a\\x00c\\x00i\\x00n\\x00t\\x00o\\x00s\\x00h\\x00 \\x00H\\x00D\\x00\\x13\\x00\\x01/\\x00\\x00\\x15\\x00\\x02\\x00\\x14\\xff\\xff\\x00\\x00\\xff\\xff\\x00\\x00',\n-    'backgroundColorBlue': 1.0,\n-    'iconSize': 96.0,\n-    'backgroundColorGreen': 1.0,\n-    'arrangeBy': 'none',\n-    'showIconPreview': True,\n-    'gridSpacing': 100.0,\n-    'gridOffsetY': 0.0,\n-    'showItemInfo': False,\n-    'labelOnBottom': True,\n-    'backgroundType': 2,\n-    'backgroundColorRed': 1.0\n-}\n-alias = Alias.from_bytes(icvp['backgroundImageAlias'])\n-alias.volume.name = package_name_ns\n-alias.volume.posix_path = '/Volumes/' + package_name_ns\n-alias.volume.disk_image_alias.target.filename = package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.carbon_path = 'Macintosh HD:Users:\\x00bitcoinuser:\\x00Documents:\\x00bitcoin:\\x00bitcoin:\\x00' + package_name_ns + '.temp.dmg'\n-alias.volume.disk_image_alias.target.posix_path = 'Users/bitcoinuser/Documents/bitcoin/bitcoin/' + package_name_ns + '.temp.dmg'\n-alias.target.carbon_path = package_name_ns + ':.background:\\x00background.tiff'\n-icvp['backgroundImageAlias'] = biplist.Data(alias.to_bytes())\n-ds['.']['icvp'] = icvp\n-\n-ds['.']['vSrn'] = ('long', 1)\n-\n-ds['Applications']['Iloc'] = (370, 156)\n-ds['Bitcoin-Qt.app']['Iloc'] = (128, 156)\n-\n-ds.flush()\n-ds.close()"
      },
      {
        "sha": "781fe315edab5046fca0ce5dc59090cfe44760ae",
        "filename": "contrib/macdeploy/detached-sig-apply.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/detached-sig-apply.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/detached-sig-apply.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-apply.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,52 +0,0 @@\n-#!/bin/sh\n-set -e\n-\n-UNSIGNED=\"$1\"\n-SIGNATURE=\"$2\"\n-ARCH=x86_64\n-ROOTDIR=dist\n-TEMPDIR=signed.temp\n-OUTDIR=signed-app\n-\n-if [ -z \"$UNSIGNED\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-if [ -z \"$SIGNATURE\" ]; then\n-  echo \"usage: $0 <unsigned app> <signature>\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} && mkdir -p ${TEMPDIR}\n-tar -C ${TEMPDIR} -xf ${UNSIGNED}\n-cp -rf \"${SIGNATURE}\"/* ${TEMPDIR}\n-\n-if [ -z \"${PAGESTUFF}\" ]; then\n-  PAGESTUFF=${TEMPDIR}/pagestuff\n-fi\n-\n-if [ -z \"${CODESIGN_ALLOCATE}\" ]; then\n-  CODESIGN_ALLOCATE=${TEMPDIR}/codesign_allocate\n-fi\n-\n-find ${TEMPDIR} -name \"*.sign\" | while read i; do\n-  SIZE=`stat -c %s \"${i}\"`\n-  TARGET_FILE=\"`echo \"${i}\" | sed 's/\\.sign$//'`\"\n-\n-  echo \"Allocating space for the signature of size ${SIZE} in ${TARGET_FILE}\"\n-  ${CODESIGN_ALLOCATE} -i \"${TARGET_FILE}\" -a ${ARCH} ${SIZE} -o \"${i}.tmp\"\n-\n-  OFFSET=`${PAGESTUFF} \"${i}.tmp\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  if [ -z ${QUIET} ]; then\n-    echo \"Attaching signature at offset ${OFFSET}\"\n-  fi\n-\n-  dd if=\"$i\" of=\"${i}.tmp\" bs=1 seek=${OFFSET} count=${SIZE} 2>/dev/null\n-  mv \"${i}.tmp\" \"${TARGET_FILE}\"\n-  rm \"${i}\"\n-  echo \"Success.\"\n-done\n-mv ${TEMPDIR}/${ROOTDIR} ${OUTDIR}\n-rm -rf ${TEMPDIR}\n-echo \"Signed: ${OUTDIR}\""
      },
      {
        "sha": "89a2da32f7a1c9ea34bc4798dbe642c5f2901013",
        "filename": "contrib/macdeploy/detached-sig-create.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 47,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/detached-sig-create.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/macdeploy/detached-sig-create.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/detached-sig-create.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,47 +0,0 @@\n-#!/bin/sh\n-set -e\n-\n-ROOTDIR=dist\n-BUNDLE=\"${ROOTDIR}/Bitcoin-Qt.app\"\n-CODESIGN=codesign\n-TEMPDIR=sign.temp\n-TEMPLIST=${TEMPDIR}/signatures.txt\n-OUT=signature.tar.gz\n-OUTROOT=osx\n-\n-if [ ! -n \"$1\" ]; then\n-  echo \"usage: $0 <codesign args>\"\n-  echo \"example: $0 -s MyIdentity\"\n-  exit 1\n-fi\n-\n-rm -rf ${TEMPDIR} ${TEMPLIST}\n-mkdir -p ${TEMPDIR}\n-\n-${CODESIGN} -f --file-list ${TEMPLIST} \"$@\" \"${BUNDLE}\"\n-\n-grep -v CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  SIZE=`pagestuff \"$i\" -p | tail -2 | grep size | sed 's/[^0-9]*//g'`\n-  OFFSET=`pagestuff \"$i\" -p | tail -2 | grep offset | sed 's/[^0-9]*//g'`\n-  SIGNFILE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}.sign\"\n-  DIRNAME=\"`dirname \"${SIGNFILE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding detached signature for: ${TARGETFILE}. Size: ${SIZE}. Offset: ${OFFSET}\"\n-  dd if=\"$i\" of=\"${SIGNFILE}\" bs=1 skip=${OFFSET} count=${SIZE} 2>/dev/null\n-done\n-\n-grep CodeResources < \"${TEMPLIST}\" | while read i; do\n-  TARGETFILE=\"${BUNDLE}/`echo \"${i}\" | sed \"s|.*${BUNDLE}/||\"`\"\n-  RESOURCE=\"${TEMPDIR}/${OUTROOT}/${TARGETFILE}\"\n-  DIRNAME=\"`dirname \"${RESOURCE}\"`\"\n-  mkdir -p \"${DIRNAME}\"\n-  echo \"Adding resource for: \"${TARGETFILE}\"\"\n-  cp \"${i}\" \"${RESOURCE}\"\n-done\n-\n-rm ${TEMPLIST}\n-\n-tar -C \"${TEMPDIR}\" -czf \"${OUT}\" .\n-rm -rf \"${TEMPDIR}\"\n-echo \"Created ${OUT}\""
      },
      {
        "sha": "08c2a06fcc7c7da9ff2d5cd05f993c35cd915c4f",
        "filename": "contrib/macdeploy/fancy.plist",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/fancy.plist",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/fancy.plist",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/fancy.plist?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -10,7 +10,7 @@\n \t\t<integer>620</integer>\n \t</array>\n \t<key>background_picture</key>\n-\t<string>background.tiff</string>\n+\t<string>background.png</string>\n \t<key>icon_size</key>\n \t<integer>96</integer>\n \t<key>applications_symlink</key>\n@@ -22,7 +22,7 @@\n \t\t\t<integer>370</integer>\n \t\t\t<integer>156</integer>\n \t\t</array>\n-\t\t<key>Bitcoin-Qt.app</key>\n+\t\t<key>NovaCoin-Qt.app</key>\n \t\t<array>\n \t\t\t<integer>128</integer>\n \t\t\t<integer>156</integer>"
      },
      {
        "sha": "7981eca402e416f866ba1436d7ae9a5414618a29",
        "filename": "contrib/macdeploy/macdeployqtplus",
        "status": "modified",
        "additions": 58,
        "deletions": 191,
        "changes": 249,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/macdeployqtplus",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/macdeployqtplus",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/macdeployqtplus?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -17,8 +17,9 @@\n # along with this program.  If not, see <http://www.gnu.org/licenses/>.\n #\n \n-import subprocess, sys, re, os, shutil, stat, os.path, time\n+import subprocess, sys, re, os, shutil, stat, os.path\n from string import Template\n+from time import sleep\n from argparse import ArgumentParser\n \n # This is ported from the original macdeployqt with modifications\n@@ -37,10 +38,7 @@ class FrameworkInfo(object):\n         self.sourceFilePath = \"\"\n         self.destinationDirectory = \"\"\n         self.sourceResourcesDirectory = \"\"\n-        self.sourceVersionContentsDirectory = \"\"\n-        self.sourceContentsDirectory = \"\"\n         self.destinationResourcesDirectory = \"\"\n-        self.destinationVersionContentsDirectory = \"\"\n     \n     def __eq__(self, other):\n         if self.__class__ == other.__class__:\n@@ -144,18 +142,14 @@ class FrameworkInfo(object):\n             info.destinationDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, info.binaryDirectory)\n             \n             info.sourceResourcesDirectory = os.path.join(info.frameworkPath, \"Resources\")\n-            info.sourceContentsDirectory = os.path.join(info.frameworkPath, \"Contents\")\n-            info.sourceVersionContentsDirectory = os.path.join(info.frameworkPath, \"Versions\", info.version, \"Contents\")\n             info.destinationResourcesDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Resources\")\n-            info.destinationContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Contents\")\n-            info.destinationVersionContentsDirectory = os.path.join(cls.bundleFrameworkDirectory, info.frameworkName, \"Versions\", info.version, \"Contents\")\n         \n         return info\n \n class ApplicationBundleInfo(object):\n     def __init__(self, path):\n         self.path = path\n-        appName = \"Bitcoin-Qt\"\n+        appName = os.path.splitext(os.path.basename(path))[0]\n         self.binaryPath = os.path.join(path, \"Contents\", \"MacOS\", appName)\n         if not os.path.exists(self.binaryPath):\n             raise RuntimeError(\"Could not find bundle binary for \" + path)\n@@ -202,8 +196,7 @@ class DeploymentInfo(object):\n def getFrameworks(binaryPath, verbose):\n     if verbose >= 3:\n         print \"Inspecting with otool: \" + binaryPath\n-    otoolbin=os.getenv(\"OTOOL\", \"otool\")\n-    otool = subprocess.Popen([otoolbin, \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n+    otool = subprocess.Popen([\"otool\", \"-L\", binaryPath], stdout=subprocess.PIPE, stderr=subprocess.PIPE)\n     o_stdout, o_stderr = otool.communicate()\n     if otool.returncode != 0:\n         if verbose >= 1:\n@@ -218,7 +211,6 @@ def getFrameworks(binaryPath, verbose):\n     \n     libraries = []\n     for line in otoolLines:\n-        line = line.replace(\"@loader_path\", os.path.dirname(binaryPath))\n         info = FrameworkInfo.fromOtoolLibraryLine(line.strip())\n         if info is not None:\n             if verbose >= 3:\n@@ -229,8 +221,7 @@ def getFrameworks(binaryPath, verbose):\n     return libraries\n \n def runInstallNameTool(action, *args):\n-    installnametoolbin=os.getenv(\"INSTALLNAMETOOL\", \"install_name_tool\")\n-    subprocess.check_call([installnametoolbin, \"-\"+action] + list(args))\n+    subprocess.check_call([\"install_name_tool\", \"-\"+action] + list(args))\n \n def changeInstallName(oldName, newName, binaryPath, verbose):\n     if verbose >= 3:\n@@ -248,18 +239,18 @@ def changeIdentification(id, binaryPath, verbose):\n     runInstallNameTool(\"id\", id, binaryPath)\n \n def runStrip(binaryPath, verbose):\n-    stripbin=os.getenv(\"STRIP\", \"strip\")\n     if verbose >= 3:\n         print \"Using strip:\"\n         print \" stripped\", binaryPath\n-    subprocess.check_call([stripbin, \"-x\", binaryPath])\n+    subprocess.check_call([\"strip\", \"-x\", binaryPath])\n \n def copyFramework(framework, path, verbose):\n     if framework.sourceFilePath.startswith(\"Qt\"):\n         #standard place for Nokia Qt installer's frameworks\n         fromPath = \"/Library/Frameworks/\" + framework.sourceFilePath\n     else:\n         fromPath = framework.sourceFilePath\n+\n     toDir = os.path.join(path, framework.destinationDirectory)\n     toPath = os.path.join(toDir, framework.binaryName)\n     \n@@ -282,35 +273,18 @@ def copyFramework(framework, path, verbose):\n       os.chmod(toPath, permissions.st_mode | stat.S_IWRITE)\n \n     if not framework.isDylib(): # Copy resources for real frameworks\n-\n-        linkfrom = os.path.join(path, \"Contents\",\"Frameworks\", framework.frameworkName, \"Versions\", \"Current\")\n-        linkto = framework.version\n-        if not os.path.exists(linkfrom):\n-            os.symlink(linkto, linkfrom)\n-            if verbose >= 2:\n-                print \"Linked:\", linkfrom, \"->\", linkto\n         fromResourcesDir = framework.sourceResourcesDirectory\n         if os.path.exists(fromResourcesDir):\n             toResourcesDir = os.path.join(path, framework.destinationResourcesDirectory)\n-            shutil.copytree(fromResourcesDir, toResourcesDir, symlinks=True)\n+            shutil.copytree(fromResourcesDir, toResourcesDir)\n             if verbose >= 3:\n                 print \"Copied resources:\", fromResourcesDir\n                 print \" to:\", toResourcesDir\n-        fromContentsDir = framework.sourceVersionContentsDirectory\n-        if not os.path.exists(fromContentsDir):\n-            fromContentsDir = framework.sourceContentsDirectory\n-        if os.path.exists(fromContentsDir):\n-            toContentsDir = os.path.join(path, framework.destinationVersionContentsDirectory)\n-            shutil.copytree(fromContentsDir, toContentsDir, symlinks=True)\n-            contentslinkfrom = os.path.join(path, framework.destinationContentsDirectory)\n-            if verbose >= 3:\n-                print \"Copied Contents:\", fromContentsDir\n-                print \" to:\", toContentsDir\n     elif framework.frameworkName.startswith(\"libQtGui\"): # Copy qt_menu.nib (applies to non-framework layout)\n         qtMenuNibSourcePath = os.path.join(framework.frameworkDirectory, \"Resources\", \"qt_menu.nib\")\n         qtMenuNibDestinationPath = os.path.join(path, \"Contents\", \"Resources\", \"qt_menu.nib\")\n         if os.path.exists(qtMenuNibSourcePath) and not os.path.exists(qtMenuNibDestinationPath):\n-            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath, symlinks=True)\n+            shutil.copytree(qtMenuNibSourcePath, qtMenuNibDestinationPath)\n             if verbose >= 3:\n                 print \"Copied for libQtGui:\", qtMenuNibSourcePath\n                 print \" to:\", qtMenuNibDestinationPath\n@@ -332,7 +306,7 @@ def deployFrameworks(frameworks, bundlePath, binaryPath, strip, verbose, deploym\n         if deploymentInfo.qtPath is None and framework.isQtFramework():\n             deploymentInfo.detectQtPath(framework.frameworkDirectory)\n         \n-        if framework.installName.startswith(\"@executable_path\") or framework.installName.startswith(bundlePath):\n+        if framework.installName.startswith(\"@executable_path\"):\n             if verbose >= 2:\n                 print framework.frameworkName, \"already deployed, skipping.\"\n             continue\n@@ -374,8 +348,6 @@ def deployFrameworksForAppBundle(applicationBundle, strip, verbose):\n def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n     # Lookup available plugins, exclude unneeded\n     plugins = []\n-    if deploymentInfo.pluginPath is None:\n-        return\n     for dirpath, dirnames, filenames in os.walk(deploymentInfo.pluginPath):\n         pluginDirectory = os.path.relpath(dirpath, deploymentInfo.pluginPath)\n         if pluginDirectory == \"designer\":\n@@ -393,31 +365,15 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n             # Deploy the script plugins only if QtScript is in use\n             if not deploymentInfo.usesFramework(\"QtScript\"):\n                 continue\n-        elif pluginDirectory == \"qmltooling\" or pluginDirectory == \"qml1tooling\":\n+        elif pluginDirectory == \"qmltooling\":\n             # Deploy the qml plugins only if QtDeclarative is in use\n             if not deploymentInfo.usesFramework(\"QtDeclarative\"):\n                 continue\n         elif pluginDirectory == \"bearer\":\n             # Deploy the bearer plugins only if QtNetwork is in use\n             if not deploymentInfo.usesFramework(\"QtNetwork\"):\n                 continue\n-        elif pluginDirectory == \"position\":\n-            # Deploy the position plugins only if QtPositioning is in use\n-            if not deploymentInfo.usesFramework(\"QtPositioning\"):\n-                continue\n-        elif pluginDirectory == \"sensors\" or pluginDirectory == \"sensorgestures\":\n-            # Deploy the sensor plugins only if QtSensors is in use\n-            if not deploymentInfo.usesFramework(\"QtSensors\"):\n-                continue\n-        elif pluginDirectory == \"audio\" or pluginDirectory == \"playlistformats\":\n-            # Deploy the audio plugins only if QtMultimedia is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimedia\"):\n-                continue\n-        elif pluginDirectory == \"mediaservice\":\n-            # Deploy the mediaservice plugins only if QtMultimediaWidgets is in use\n-            if not deploymentInfo.usesFramework(\"QtMultimediaWidgets\"):\n-                continue\n-\n+        \n         for pluginName in filenames:\n             pluginPath = os.path.join(pluginDirectory, pluginName)\n             if pluginName.endswith(\"_debug.dylib\"):\n@@ -435,11 +391,7 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 # Deploy the opengl graphicssystem plugin only if QtOpenGL is in use\n                 if not deploymentInfo.usesFramework(\"QtOpenGL\"):\n                     continue\n-            elif pluginPath == \"accessible/libqtaccessiblequick.dylib\":\n-                # Deploy the accessible qtquick plugin only if QtQuick is in use\n-                if not deploymentInfo.usesFramework(\"QtQuick\"):\n-                    continue\n-\n+            \n             plugins.append((pluginDirectory, pluginName))\n     \n     for pluginDirectory, pluginName in plugins:\n@@ -470,32 +422,25 @@ def deployPlugins(appBundleInfo, deploymentInfo, strip, verbose):\n                 deployFrameworks([dependency], appBundleInfo.path, destinationPath, strip, verbose, deploymentInfo)\n \n qt_conf=\"\"\"[Paths]\n-Translations=Resources\n-Plugins=PlugIns\n+translations=Resources\n+plugins=PlugIns\n \"\"\"\n \n ap = ArgumentParser(description=\"\"\"Improved version of macdeployqt.\n \n Outputs a ready-to-deploy app in a folder \"dist\" and optionally wraps it in a .dmg file.\n Note, that the \"dist\" folder will be deleted before deploying on each run.\n \n-Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\n-\n-Also optionally signs the .app bundle; set the CODESIGNARGS environment variable to pass arguments\n-to the codesign tool.\n-E.g. CODESIGNARGS='--sign \"Developer ID Application: ...\" --keychain /encrypted/foo.keychain'\"\"\")\n+Optionally, Qt translation files (.qm) and additional resources can be added to the bundle.\"\"\")\n \n ap.add_argument(\"app_bundle\", nargs=1, metavar=\"app-bundle\", help=\"application bundle to be deployed\")\n ap.add_argument(\"-verbose\", type=int, nargs=1, default=[1], metavar=\"<0-3>\", help=\"0 = no output, 1 = error/warning (default), 2 = normal, 3 = debug\")\n ap.add_argument(\"-no-plugins\", dest=\"plugins\", action=\"store_false\", default=True, help=\"skip plugin deployment\")\n ap.add_argument(\"-no-strip\", dest=\"strip\", action=\"store_false\", default=True, help=\"don't run 'strip' on the binaries\")\n-ap.add_argument(\"-sign\", dest=\"sign\", action=\"store_true\", default=False, help=\"sign .app bundle with codesign tool\")\n ap.add_argument(\"-dmg\", nargs=\"?\", const=\"\", metavar=\"basename\", help=\"create a .dmg disk image; if basename is not specified, a camel-cased version of the app name is used\")\n ap.add_argument(\"-fancy\", nargs=1, metavar=\"plist\", default=[], help=\"make a fancy looking disk image using the given plist file with instructions; requires -dmg to work\")\n ap.add_argument(\"-add-qt-tr\", nargs=1, metavar=\"languages\", default=[], help=\"add Qt translation files to the bundle's ressources; the language list must be separated with commas, not with whitespace\")\n-ap.add_argument(\"-translations-dir\", nargs=1, metavar=\"path\", default=None, help=\"Path to Qt's translation files\")\n ap.add_argument(\"-add-resources\", nargs=\"+\", metavar=\"path\", default=[], help=\"list of additional files or folders to be copied into the bundle's resources; must be the last argument\")\n-ap.add_argument(\"-volname\", nargs=1, metavar=\"volname\", default=[], help=\"custom volume name for dmg\")\n \n config = ap.parse_args()\n \n@@ -513,15 +458,6 @@ if not os.path.exists(app_bundle):\n app_bundle_name = os.path.splitext(os.path.basename(app_bundle))[0]\n \n # ------------------------------------------------\n-translations_dir = None\n-if config.translations_dir and config.translations_dir[0]:\n-    if os.path.exists(config.translations_dir[0]):\n-        translations_dir = config.translations_dir[0]\n-    else:\n-        if verbose >= 1:\n-            sys.stderr.write(\"Error: Could not find translation dir \\\"%s\\\"\\n\" % (translations_dir))\n-        sys.exit(1)\n-# ------------------------------------------------\n \n for p in config.add_resources:\n     if verbose >= 3:\n@@ -543,6 +479,16 @@ if len(config.fancy) == 1:\n             sys.stderr.write(\"Error: Could not import plistlib which is required for fancy disk images.\\n\")\n         sys.exit(1)\n     \n+    if verbose >= 3:\n+        print \"Fancy: Importing appscript...\"\n+    try:\n+        import appscript\n+    except ImportError:\n+        if verbose >= 1:\n+            sys.stderr.write(\"Error: Could not import appscript which is required for fancy disk images.\\n\")\n+            sys.stderr.write(\"Please install it e.g. with \\\"sudo easy_install appscript\\\".\\n\")\n+        sys.exit(1)\n+    \n     p = config.fancy[0]\n     if verbose >= 3:\n         print \"Fancy: Loading \\\"%s\\\"...\" % p\n@@ -597,22 +543,15 @@ if os.path.exists(\"dist\"):\n \n # ------------------------------------------------\n \n-if len(config.volname) == 1:\n-    volname = config.volname[0]\n-else:\n-    volname = app_bundle_name\n-\n-# ------------------------------------------------\n-\n-target = os.path.join(\"dist\", \"Bitcoin-Qt.app\")\n+target = os.path.join(\"dist\", app_bundle)\n \n if verbose >= 2:\n     print \"+ Copying source bundle +\"\n if verbose >= 3:\n     print app_bundle, \"->\", target\n \n os.mkdir(\"dist\")\n-shutil.copytree(app_bundle, target, symlinks=True)\n+shutil.copytree(app_bundle, target)\n \n applicationBundle = ApplicationBundleInfo(target)\n \n@@ -632,7 +571,7 @@ try:\n except RuntimeError as e:\n     if verbose >= 1:\n         sys.stderr.write(\"Error: %s\\n\" % str(e))\n-    sys.exit(1)\n+    sys.exit(ret)\n \n # ------------------------------------------------\n \n@@ -645,21 +584,14 @@ if config.plugins:\n     except RuntimeError as e:\n         if verbose >= 1:\n             sys.stderr.write(\"Error: %s\\n\" % str(e))\n-        sys.exit(1)\n+        sys.exit(ret)\n \n # ------------------------------------------------\n \n if len(config.add_qt_tr) == 0:\n     add_qt_tr = []\n else:\n-    if translations_dir is not None:\n-        qt_tr_dir = translations_dir\n-    else:\n-        if deploymentInfo.qtPath is not None:\n-            qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n-        else:\n-            sys.stderr.write(\"Error: Could not find Qt translation path\\n\")\n-            sys.exit(1)\n+    qt_tr_dir = os.path.join(deploymentInfo.qtPath, \"translations\")\n     add_qt_tr = [\"qt_%s.qm\" % lng for lng in config.add_qt_tr[0].split(\",\")]\n     for lng_file in add_qt_tr:\n         p = os.path.join(qt_tr_dir, lng_file)\n@@ -699,39 +631,13 @@ for p in config.add_resources:\n     if verbose >= 3:\n         print p, \"->\", t\n     if os.path.isdir(p):\n-        shutil.copytree(p, t, symlinks=True)\n+        shutil.copytree(p, t)\n     else:\n         shutil.copy2(p, t)\n \n # ------------------------------------------------\n \n-if config.sign and 'CODESIGNARGS' not in os.environ:\n-    print \"You must set the CODESIGNARGS environment variable. Skipping signing.\"\n-elif config.sign:\n-    if verbose >= 1:\n-        print \"Code-signing app bundle %s\"%(target,)\n-    subprocess.check_call(\"codesign --force %s %s\"%(os.environ['CODESIGNARGS'], target), shell=True)\n-\n-# ------------------------------------------------\n-\n if config.dmg is not None:\n-\n-    #Patch in check_output for Python 2.6\n-    if \"check_output\" not in dir( subprocess ):\n-        def f(*popenargs, **kwargs):\n-            if 'stdout' in kwargs:\n-                raise ValueError('stdout argument not allowed, it will be overridden.')\n-            process = subprocess.Popen(stdout=subprocess.PIPE, *popenargs, **kwargs)\n-            output, unused_err = process.communicate()\n-            retcode = process.poll()\n-            if retcode:\n-                cmd = kwargs.get(\"args\")\n-                if cmd is None:\n-                    cmd = popenargs[0]\n-                raise CalledProcessError(retcode, cmd)\n-            return output\n-        subprocess.check_output = f\n-\n     def runHDIUtil(verb, image_basename, **kwargs):\n         hdiutil_args = [\"hdiutil\", verb, image_basename + \".dmg\"]\n         if kwargs.has_key(\"capture_stdout\"):\n@@ -765,7 +671,7 @@ if config.dmg is not None:\n     \n     if fancy is None:\n         try:\n-            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=volname, ov=True)\n+            runHDIUtil(\"create\", dmg_name, srcfolder=\"dist\", format=\"UDBZ\", volname=app_bundle_name, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n     else:\n@@ -775,12 +681,12 @@ if config.dmg is not None:\n         for path, dirs, files in os.walk(\"dist\"):\n             for file in files:\n                 size += os.path.getsize(os.path.join(path, file))\n-        size += int(size * 0.15)\n+        size += int(size * 0.1)\n         \n         if verbose >= 3:\n             print \"Creating temp image for modification...\"\n         try:\n-            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=volname, ov=True)\n+            runHDIUtil(\"create\", dmg_name + \".temp\", srcfolder=\"dist\", format=\"UDRW\", size=size, volname=app_bundle_name, ov=True)\n         except subprocess.CalledProcessError as e:\n             sys.exit(e.returncode)\n         \n@@ -799,8 +705,7 @@ if config.dmg is not None:\n             print \"+ Applying fancy settings +\"\n         \n         if fancy.has_key(\"background_picture\"):\n-            bg_path = os.path.join(disk_root, \".background\", os.path.basename(fancy[\"background_picture\"]))\n-            os.mkdir(os.path.dirname(bg_path))\n+            bg_path = os.path.join(disk_root, os.path.basename(fancy[\"background_picture\"]))\n             if verbose >= 3:\n                 print fancy[\"background_picture\"], \"->\", bg_path\n             shutil.copy2(fancy[\"background_picture\"], bg_path)\n@@ -810,71 +715,33 @@ if config.dmg is not None:\n         if fancy.get(\"applications_symlink\", False):\n             os.symlink(\"/Applications\", os.path.join(disk_root, \"Applications\"))\n         \n-        # The Python appscript package broke with OSX 10.8 and isn't being fixed.\n-        # So we now build up an AppleScript string and use the osascript command\n-        # to make the .dmg file pretty:\n-        appscript = Template( \"\"\"\n-        on run argv\n-           tell application \"Finder\"\n-             tell disk \"$disk\"\n-                   open\n-                   set current view of container window to icon view\n-                   set toolbar visible of container window to false\n-                   set statusbar visible of container window to false\n-                   set the bounds of container window to {$window_bounds}\n-                   set theViewOptions to the icon view options of container window\n-                   set arrangement of theViewOptions to not arranged\n-                   set icon size of theViewOptions to $icon_size\n-                   $background_commands\n-                   $items_positions\n-                   close -- close/reopen works around a bug...\n-                   open\n-                   update without registering applications\n-                   delay 5\n-                   eject\n-             end tell\n-           end tell\n-        end run\n-        \"\"\")\n-\n-        itemscript = Template('set position of item \"${item}\" of container window to {${position}}')\n-        items_positions = []\n-        if fancy.has_key(\"items_position\"):\n-            for name, position in fancy[\"items_position\"].iteritems():\n-                params = { \"item\" : name, \"position\" : \",\".join([str(p) for p in position]) }\n-                items_positions.append(itemscript.substitute(params))\n-\n-        params = {\n-            \"disk\" : volname,\n-            \"window_bounds\" : \"300,300,800,620\",\n-            \"icon_size\" : \"96\",\n-            \"background_commands\" : \"\",\n-            \"items_positions\" : \"\\n                   \".join(items_positions)\n-            }\n+        finder = appscript.app(\"Finder\")\n+        disk = finder.disks[disk_name]\n+        disk.open()\n+        window = disk.container_window\n+        window.current_view.set(appscript.k.icon_view)\n+        window.toolbar_visible.set(False)\n+        window.statusbar_visible.set(False)\n         if fancy.has_key(\"window_bounds\"):\n-            params[\"window.bounds\"] = \",\".join([str(p) for p in fancy[\"window_bounds\"]])\n+            window.bounds.set(fancy[\"window_bounds\"])\n+        view_options = window.icon_view_options\n+        view_options.arrangement.set(appscript.k.not_arranged)\n         if fancy.has_key(\"icon_size\"):\n-            params[\"icon_size\"] = str(fancy[\"icon_size\"])\n+            view_options.icon_size.set(fancy[\"icon_size\"])\n         if bg_path is not None:\n-            # Set background file, then call SetFile to make it invisible.\n-            # (note: making it invisible first makes set background picture fail)\n-            bgscript = Template(\"\"\"set background picture of theViewOptions to file \".background:$bgpic\"\n-                   do shell script \"SetFile -a V /Volumes/$disk/.background/$bgpic\" \"\"\")\n-            params[\"background_commands\"] = bgscript.substitute({\"bgpic\" : os.path.basename(bg_path), \"disk\" : params[\"disk\"]})\n-\n-        s = appscript.substitute(params)\n-        if verbose >= 2:\n-            print(\"Running AppleScript:\")\n-            print(s)\n-\n-        p = subprocess.Popen(['osascript', '-'], stdin=subprocess.PIPE)\n-        p.communicate(input=s)\n-        if p.returncode:\n-            print(\"Error running osascript.\")\n-\n+            view_options.background_picture.set(disk.files[os.path.basename(bg_path)])\n+        if fancy.has_key(\"items_position\"):\n+            for name, position in fancy[\"items_position\"].iteritems():\n+                window.items[name].position.set(position)\n+        disk.close()\n+        if bg_path is not None:\n+            subprocess.call([\"SetFile\", \"-a\", \"V\", bg_path])\n+        disk.update(registering_applications=False)\n+        sleep(2)\n+        disk.eject()\n+        \n         if verbose >= 2:\n             print \"+ Finalizing .dmg disk image +\"\n-            time.sleep(5)\n         \n         try:\n             runHDIUtil(\"convert\", dmg_name + \".temp\", format=\"UDBZ\", o=dmg_name + \".dmg\", ov=True)"
      },
      {
        "sha": "9b592fc9556dc03db62ee6a334711bde00115900",
        "filename": "contrib/macdeploy/notes.txt",
        "status": "added",
        "additions": 26,
        "deletions": 0,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/notes.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/macdeploy/notes.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/macdeploy/notes.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,26 @@\n+\n+macdeployqtplus works best on OS X Lion, for Snow Leopard you'd need to install\n+Python 2.7 and make it your default Python installation.\n+\n+You will need the appscript package for the fancy disk image creation to work.\n+Install it by invoking \"sudo easy_install appscript\".\n+\n+Ths script should be invoked in the target directory like this:\n+$source_dir/contrib/macdeploy/macdeployqtplus NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy $source_dir/contrib/macdeploy/fancy.plist -verbose 2\n+\n+During the process, the disk image window will pop up briefly where the fancy\n+settings are applied. This is normal, please do not interfere.\n+\n+You can also set up Qt Creator for invoking the script. For this, go to the\n+\"Projects\" tab on the left side, switch to \"Run Settings\" above and add a\n+deploy configuration. Next add a deploy step choosing \"Custom Process Step\".\n+Fill in the following.\n+\n+Enable custom process step: [x]\n+Command: %{sourceDir}/contrib/macdeploy/macdeployqtplus\n+Working directory: %{buildDir}\n+Command arguments: NovaCoin-Qt.app -add-qt-tr da,de,es,hu,ru,uk,zh_CN,zh_TW -dmg -fancy %{sourceDir}/contrib/macdeploy/fancy.plist -verbose 2\n+\n+After that you can start the deployment process through the menu with\n+Build -> Deploy Project \"novacoin-qt\"\n+"
      },
      {
        "sha": "5e0a975fc64ff27b67c62efdf5f6996a8ee12cc4",
        "filename": "contrib/qos/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/qos/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/qos/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,5 +0,0 @@\n-### Qos ###\n-\n-This is a Linux bash script that will set up tc to limit the outgoing bandwidth for connections to the Bitcoin network. It limits outbound TCP traffic with a source or destination port of 8333, but not if the destination IP is within a LAN (defined as 192.168.x.x).\n-\n-This means one can have an always-on bitcoind instance running, and another local bitcoind/bitcoin-qt instance which connects to this node and receives blocks from it."
      },
      {
        "sha": "f62060421202c7954464d54d3b88c8377bd8e651",
        "filename": "contrib/qos/tc.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/qos/tc.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/qos/tc.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/qos/tc.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,41 +0,0 @@\n-#network interface on which to limit traffic\n-IF=\"eth0\"\n-#limit of the network interface in question\n-LINKCEIL=\"1gbit\"\n-#limit outbound Bitcoin protocol traffic to this rate\n-LIMIT=\"160kbit\"\n-#defines the address space for which you wish to disable rate limiting\n-LOCALNET=\"192.168.0.0/16\"\n-\n-#delete existing rules\n-tc qdisc del dev ${IF} root\n-\n-#add root class\n-tc qdisc add dev ${IF} root handle 1: htb default 10\n-\n-#add parent class\n-tc class add dev ${IF} parent 1: classid 1:1 htb rate ${LINKCEIL} ceil ${LINKCEIL}\n-\n-#add our two classes. one unlimited, another limited\n-tc class add dev ${IF} parent 1:1 classid 1:10 htb rate ${LINKCEIL} ceil ${LINKCEIL} prio 0\n-tc class add dev ${IF} parent 1:1 classid 1:11 htb rate ${LIMIT} ceil ${LIMIT} prio 1\n-\n-#add handles to our classes so packets marked with <x> go into the class with \"... handle <x> fw ...\"\n-tc filter add dev ${IF} parent 1: protocol ip prio 1 handle 1 fw classid 1:10\n-tc filter add dev ${IF} parent 1: protocol ip prio 2 handle 2 fw classid 1:11\n-\n-#delete any existing rules\n-#disable for now\n-#ret=0\n-#while [ $ret -eq 0 ]; do\n-#\tiptables -t mangle -D OUTPUT 1\n-#\tret=$?\n-#done\n-\n-#limit outgoing traffic to and from port 8333. but not when dealing with a host on the local network\n-#\t(defined by $LOCALNET)\n-#\t--set-mark marks packages matching these criteria with the number \"2\"\n-#\tthese packages are filtered by the tc filter with \"handle 2\"\n-#\tthis filter sends the packages into the 1:11 class, and this class is limited to ${LIMIT}\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --dport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2\n-iptables -t mangle -A OUTPUT -p tcp -m tcp --sport 8333 ! -d ${LOCALNET} -j MARK --set-mark 0x2"
      },
      {
        "sha": "c595f83eb95b20eea68f5f54a2ec0a715f6d75de",
        "filename": "contrib/seeds/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,11 +0,0 @@\n-### Seeds ###\n-\n-Utility to generate the seeds.txt list that is compiled into the client\n-(see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n-\n-The seeds compiled into the release are created from sipa's DNS seed data, like this:\n-\n-    curl -s http://bitcoin.sipa.be/seeds.txt > seeds_main.txt\n-    python makeseeds.py < seeds_main.txt > nodes_main.txt\n-    python generate-seeds.py . > ../../src/chainparamsseeds.h\n-"
      },
      {
        "sha": "a3d035218789b8f74871a5c7885d4aa7a55c0b79",
        "filename": "contrib/seeds/generate-seeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 138,
        "changes": 138,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/generate-seeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/generate-seeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/generate-seeds.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,138 +0,0 @@\n-#!/usr/bin/python\n-# Copyright (c) 2014 Wladimir J. van der Laan\n-# Distributed under the MIT software license, see the accompanying\n-# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-'''\n-Script to generate list of seed nodes for chainparams.cpp.\n-\n-This script expects two text files in the directory that is passed as an\n-argument:\n-\n-    nodes_main.txt\n-    nodes_test.txt\n-\n-These files must consist of lines in the format \n-\n-    <ip>\n-    <ip>:<port>\n-    [<ipv6>]\n-    [<ipv6>]:<port>\n-    <onion>.onion\n-    0xDDBBCCAA (IPv4 little-endian old pnSeeds format)\n-\n-The output will be two data structures with the peers in binary format:\n-\n-   static SeedSpec6 pnSeed6_main[]={\n-   ...\n-   }\n-   static SeedSpec6 pnSeed6_test[]={\n-   ...\n-   }\n-\n-These should be pasted into `src/chainparamsseeds.h`.\n-'''\n-from __future__ import print_function, division\n-from base64 import b32decode\n-from binascii import a2b_hex\n-import sys, os\n-import re\n-\n-# ipv4 in ipv6 prefix\n-pchIPv4 = bytearray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xff, 0xff])\n-# tor-specific ipv6 prefix\n-pchOnionCat = bytearray([0xFD,0x87,0xD8,0x7E,0xEB,0x43])\n-\n-def name_to_ipv6(addr):\n-    if len(addr)>6 and addr.endswith('.onion'):\n-        vchAddr = b32decode(addr[0:-6], True)\n-        if len(vchAddr) != 16-len(pchOnionCat):\n-            raise ValueError('Invalid onion %s' % s)\n-        return pchOnionCat + vchAddr\n-    elif '.' in addr: # IPv4\n-        return pchIPv4 + bytearray((int(x) for x in addr.split('.')))\n-    elif ':' in addr: # IPv6\n-        sub = [[], []] # prefix, suffix\n-        x = 0\n-        addr = addr.split(':')\n-        for i,comp in enumerate(addr):\n-            if comp == '':\n-                if i == 0 or i == (len(addr)-1): # skip empty component at beginning or end\n-                    continue\n-                x += 1 # :: skips to suffix\n-                assert(x < 2)\n-            else: # two bytes per component\n-                val = int(comp, 16)\n-                sub[x].append(val >> 8)\n-                sub[x].append(val & 0xff)\n-        nullbytes = 16 - len(sub[0]) - len(sub[1])\n-        assert((x == 0 and nullbytes == 0) or (x == 1 and nullbytes > 0))\n-        return bytearray(sub[0] + ([0] * nullbytes) + sub[1])\n-    elif addr.startswith('0x'): # IPv4-in-little-endian\n-        return pchIPv4 + bytearray(reversed(a2b_hex(addr[2:])))\n-    else:\n-        raise ValueError('Could not parse address %s' % addr)\n-\n-def parse_spec(s, defaultport):\n-    match = re.match('\\[([0-9a-fA-F:]+)\\](?::([0-9]+))?$', s)\n-    if match: # ipv6\n-        host = match.group(1)\n-        port = match.group(2)\n-    elif s.count(':') > 1: # ipv6, no port\n-        host = s\n-        port = ''\n-    else:\n-        (host,_,port) = s.partition(':')\n-\n-    if not port:\n-        port = defaultport\n-    else:\n-        port = int(port)\n-\n-    host = name_to_ipv6(host)\n-\n-    return (host,port)\n-\n-def process_nodes(g, f, structname, defaultport):\n-    g.write('static SeedSpec6 %s[] = {\\n' % structname)\n-    first = True\n-    for line in f:\n-        comment = line.find('#')\n-        if comment != -1:\n-            line = line[0:comment]\n-        line = line.strip()\n-        if not line:\n-            continue\n-        if not first:\n-            g.write(',\\n')\n-        first = False\n-\n-        (host,port) = parse_spec(line, defaultport)\n-        hoststr = ','.join(('0x%02x' % b) for b in host)\n-        g.write('    {{%s}, %i}' % (hoststr, port))\n-    g.write('\\n};\\n')\n-\n-def main():\n-    if len(sys.argv)<2:\n-        print(('Usage: %s <path_to_nodes_txt>' % sys.argv[0]), file=sys.stderr)\n-        exit(1)\n-    g = sys.stdout\n-    indir = sys.argv[1]\n-    g.write('#ifndef BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('#define BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-    g.write('/**\\n')\n-    g.write(' * List of fixed seed nodes for the bitcoin network\\n')\n-    g.write(' * AUTOGENERATED by contrib/seeds/generate-seeds.py\\n')\n-    g.write(' *\\n')\n-    g.write(' * Each line contains a 16-byte IPv6 address and a port.\\n')\n-    g.write(' * IPv4 as well as onion addresses are wrapped inside a IPv6 address accordingly.\\n')\n-    g.write(' */\\n')\n-    with open(os.path.join(indir,'nodes_main.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_main', 8333)\n-    g.write('\\n')\n-    with open(os.path.join(indir,'nodes_test.txt'),'r') as f:\n-        process_nodes(g, f, 'pnSeed6_test', 18333)\n-    g.write('#endif // BITCOIN_CHAINPARAMSSEEDS_H\\n')\n-            \n-if __name__ == '__main__':\n-    main()\n-"
      },
      {
        "sha": "4072405ef509a80176bf7314b46eca525cffe1da",
        "filename": "contrib/seeds/makeseeds.py",
        "status": "removed",
        "additions": 0,
        "deletions": 169,
        "changes": 169,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/makeseeds.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/makeseeds.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/makeseeds.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,169 +0,0 @@\n-#!/usr/bin/env python\n-#\n-# Generate seeds.txt from Pieter's DNS seeder\n-#\n-\n-NSEEDS=512\n-\n-MAX_SEEDS_PER_ASN=2\n-\n-MIN_BLOCKS = 337600\n-\n-# These are hosts that have been observed to be behaving strangely (e.g.\n-# aggressively connecting to every node).\n-SUSPICIOUS_HOSTS = set([\n-    \"130.211.129.106\", \"178.63.107.226\",\n-    \"83.81.130.26\", \"88.198.17.7\", \"148.251.238.178\", \"176.9.46.6\",\n-    \"54.173.72.127\", \"54.174.10.182\", \"54.183.64.54\", \"54.194.231.211\",\n-    \"54.66.214.167\", \"54.66.220.137\", \"54.67.33.14\", \"54.77.251.214\",\n-    \"54.94.195.96\", \"54.94.200.247\"\n-])\n-\n-import re\n-import sys\n-import dns.resolver\n-import collections\n-\n-PATTERN_IPV4 = re.compile(r\"^((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})):(\\d+)$\")\n-PATTERN_IPV6 = re.compile(r\"^\\[([0-9a-z:]+)\\]:(\\d+)$\")\n-PATTERN_ONION = re.compile(r\"^([abcdefghijklmnopqrstuvwxyz234567]{16}\\.onion):(\\d+)$\")\n-PATTERN_AGENT = re.compile(r\"^(\\/Satoshi:0\\.8\\.6\\/|\\/Satoshi:0\\.9\\.(2|3|4|5)\\/|\\/Satoshi:0\\.10\\.\\d{1,2}\\/|\\/Satoshi:0\\.11\\.\\d{1,2}\\/)$\")\n-\n-def parseline(line):\n-    sline = line.split()\n-    if len(sline) < 11:\n-       return None\n-    m = PATTERN_IPV4.match(sline[0])\n-    sortkey = None\n-    ip = None\n-    if m is None:\n-        m = PATTERN_IPV6.match(sline[0])\n-        if m is None:\n-            m = PATTERN_ONION.match(sline[0])\n-            if m is None:\n-                return None\n-            else:\n-                net = 'onion'\n-                ipstr = sortkey = m.group(1)\n-                port = int(m.group(2))\n-        else:\n-            net = 'ipv6'\n-            if m.group(1) in ['::']: # Not interested in localhost\n-                return None\n-            ipstr = m.group(1)\n-            sortkey = ipstr # XXX parse IPv6 into number, could use name_to_ipv6 from generate-seeds\n-            port = int(m.group(2))\n-    else:\n-        # Do IPv4 sanity check\n-        ip = 0\n-        for i in range(0,4):\n-            if int(m.group(i+2)) < 0 or int(m.group(i+2)) > 255:\n-                return None\n-            ip = ip + (int(m.group(i+2)) << (8*(3-i)))\n-        if ip == 0:\n-            return None\n-        net = 'ipv4'\n-        sortkey = ip\n-        ipstr = m.group(1)\n-        port = int(m.group(6))\n-    # Skip bad results.\n-    if sline[1] == 0:\n-        return None\n-    # Extract uptime %.\n-    uptime30 = float(sline[7][:-1])\n-    # Extract Unix timestamp of last success.\n-    lastsuccess = int(sline[2])\n-    # Extract protocol version.\n-    version = int(sline[10])\n-    # Extract user agent.\n-    agent = sline[11][1:-1]\n-    # Extract service flags.\n-    service = int(sline[9], 16)\n-    # Extract blocks.\n-    blocks = int(sline[8])\n-    # Construct result.\n-    return {\n-        'net': net,\n-        'ip': ipstr,\n-        'port': port,\n-        'ipnum': ip,\n-        'uptime': uptime30,\n-        'lastsuccess': lastsuccess,\n-        'version': version,\n-        'agent': agent,\n-        'service': service,\n-        'blocks': blocks,\n-        'sortkey': sortkey,\n-    }\n-\n-def filtermultiport(ips):\n-    '''Filter out hosts with more nodes per IP'''\n-    hist = collections.defaultdict(list)\n-    for ip in ips:\n-        hist[ip['sortkey']].append(ip)\n-    return [value[0] for (key,value) in hist.items() if len(value)==1]\n-\n-# Based on Greg Maxwell's seed_filter.py\n-def filterbyasn(ips, max_per_asn, max_total):\n-    # Sift out ips by type\n-    ips_ipv4 = [ip for ip in ips if ip['net'] == 'ipv4']\n-    ips_ipv6 = [ip for ip in ips if ip['net'] == 'ipv6']\n-    ips_onion = [ip for ip in ips if ip['net'] == 'onion']\n-\n-    # Filter IPv4 by ASN\n-    result = []\n-    asn_count = {}\n-    for ip in ips_ipv4:\n-        if len(result) == max_total:\n-            break\n-        try:\n-            asn = int([x.to_text() for x in dns.resolver.query('.'.join(reversed(ip['ip'].split('.'))) + '.origin.asn.cymru.com', 'TXT').response.answer][0].split('\\\"')[1].split(' ')[0])\n-            if asn not in asn_count:\n-                asn_count[asn] = 0\n-            if asn_count[asn] == max_per_asn:\n-                continue\n-            asn_count[asn] += 1\n-            result.append(ip)\n-        except:\n-            sys.stderr.write('ERR: Could not resolve ASN for \"' + ip['ip'] + '\"\\n')\n-\n-    # TODO: filter IPv6 by ASN\n-\n-    # Add back non-IPv4\n-    result.extend(ips_ipv6)\n-    result.extend(ips_onion)\n-    return result\n-\n-def main():\n-    lines = sys.stdin.readlines()\n-    ips = [parseline(line) for line in lines]\n-\n-    # Skip entries with valid address.\n-    ips = [ip for ip in ips if ip is not None]\n-    # Skip entries from suspicious hosts.\n-    ips = [ip for ip in ips if ip['ip'] not in SUSPICIOUS_HOSTS]\n-    # Enforce minimal number of blocks.\n-    ips = [ip for ip in ips if ip['blocks'] >= MIN_BLOCKS]\n-    # Require service bit 1.\n-    ips = [ip for ip in ips if (ip['service'] & 1) == 1]\n-    # Require at least 50% 30-day uptime.\n-    ips = [ip for ip in ips if ip['uptime'] > 50]\n-    # Require a known and recent user agent.\n-    ips = [ip for ip in ips if PATTERN_AGENT.match(ip['agent'])]\n-    # Sort by availability (and use last success as tie breaker)\n-    ips.sort(key=lambda x: (x['uptime'], x['lastsuccess'], x['ip']), reverse=True)\n-    # Filter out hosts with multiple bitcoin ports, these are likely abusive\n-    ips = filtermultiport(ips)\n-    # Look up ASNs and limit results, both per ASN and globally.\n-    ips = filterbyasn(ips, MAX_SEEDS_PER_ASN, NSEEDS)\n-    # Sort the results by IP address (for deterministic output).\n-    ips.sort(key=lambda x: (x['net'], x['sortkey']))\n-\n-    for ip in ips:\n-        if ip['net'] == 'ipv6':\n-            print '[%s]:%i' % (ip['ip'], ip['port'])\n-        else:\n-            print '%s:%i' % (ip['ip'], ip['port'])\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "f1854b27f9a5983ca77e3bec8005aede562cedb8",
        "filename": "contrib/seeds/nodes_main.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 937,
        "changes": 937,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/nodes_main.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/nodes_main.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_main.txt?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,937 +0,0 @@\n-5.2.145.201:8333\n-5.22.142.214:8333\n-5.53.172.197:8333\n-5.189.161.164:8333\n-5.230.140.166:8333\n-5.231.3.130:8333\n-5.255.80.103:8333\n-14.202.230.49:8333\n-18.85.11.130:8333\n-23.91.97.25:8333\n-23.94.100.122:8333\n-23.95.99.132:8333\n-24.115.8.206:8333\n-24.127.128.191:8333\n-24.154.178.25:8333\n-24.207.103.43:8333\n-24.207.104.105:8333\n-24.210.230.150:8333\n-24.224.18.84:8333\n-24.246.168.106:8333\n-27.254.64.47:8333\n-31.6.71.123:8333\n-31.6.71.124:8333\n-31.14.134.13:8333\n-31.30.36.220:8333\n-31.164.6.104:8333\n-31.170.106.203:8333\n-31.185.134.201:8333\n-31.204.128.99:8333\n-31.204.128.219:8333\n-37.1.219.88:8333\n-37.97.132.109:8333\n-37.120.160.55:8333\n-37.120.169.123:8333\n-37.139.32.46:8333\n-37.221.163.218:8333\n-38.130.192.72:8333\n-41.75.96.80:8333\n-45.3.0.49:8333\n-45.33.72.185:8333\n-45.33.96.129:8333\n-45.56.4.63:8333\n-45.79.0.127:8333\n-45.79.80.102:8333\n-45.79.97.30:8333\n-45.79.132.219:8333\n-46.21.97.135:8333\n-46.28.205.67:8333\n-46.28.206.188:8333\n-46.29.20.209:8333\n-46.50.234.179:8333\n-46.101.160.168:8333\n-46.166.161.35:8333\n-46.166.161.103:8333\n-46.182.132.100:8333\n-46.218.227.92:8333\n-46.226.109.20:8333\n-46.227.66.132:8333\n-46.227.66.138:8333\n-46.229.165.154:8333\n-46.229.165.155:8333\n-46.229.238.187:8333\n-46.234.104.48:8333\n-46.239.107.74:8333\n-46.244.0.138:8333\n-46.254.72.195:8333\n-50.5.13.44:8333\n-50.7.37.114:8333\n-50.30.37.103:8333\n-50.39.105.60:8333\n-50.106.40.231:8333\n-52.29.0.37:8333\n-52.76.192.246:8333\n-54.152.192.179:8333\n-54.169.64.174:8333\n-54.175.160.22:8333\n-54.199.128.0:8333\n-58.96.171.129:8333\n-58.161.238.57:8333\n-60.251.195.221:8333\n-61.35.225.19:8333\n-62.43.130.178:8333\n-62.65.39.12:8333\n-62.107.200.30:8333\n-62.133.194.2:8333\n-62.181.238.186:8333\n-62.183.22.50:8333\n-62.210.85.120:8333\n-62.210.162.89:8333\n-62.238.34.125:8333\n-64.25.171.73:8333\n-64.27.166.30:8333\n-64.53.137.101:8333\n-64.71.72.44:8333\n-64.83.225.146:8333\n-64.121.3.163:8333\n-64.203.102.86:8333\n-65.94.131.59:8333\n-65.188.136.233:8333\n-66.11.162.218:8333\n-66.23.228.133:8333\n-66.90.137.89:8333\n-66.114.33.49:8333\n-66.150.105.77:8333\n-66.172.10.4:8333\n-66.194.38.250:8333\n-66.194.38.253:8333\n-66.194.38.254:8333\n-66.231.97.172:8333\n-66.240.237.155:8333\n-67.159.13.34:8333\n-67.205.74.206:8333\n-67.221.193.55:8333\n-67.227.72.17:8333\n-68.65.120.53:8333\n-68.65.205.226:9000\n-68.144.4.34:8333\n-69.39.49.199:8333\n-69.50.171.205:8333\n-69.65.41.21:8333\n-69.113.98.61:8333\n-69.119.97.39:8333\n-69.146.70.124:8333\n-69.193.71.2:8333\n-70.46.10.237:8333\n-70.80.200.187:8333\n-70.185.97.117:8333\n-71.254.160.25:8333\n-72.28.203.5:8333\n-72.52.130.110:8333\n-72.83.194.122:8333\n-72.128.32.167:8333\n-72.179.136.80:8333\n-72.235.38.70:8333\n-74.50.44.193:8333\n-74.72.60.83:8333\n-74.80.234.116:8333\n-74.207.233.193:8333\n-75.112.233.128:8333\n-75.118.166.197:8333\n-75.140.0.241:8333\n-75.159.240.66:8333\n-75.174.5.26:8333\n-76.72.160.252:8333\n-76.72.160.254:8333\n-76.74.170.112:8333\n-76.79.201.54:8333\n-76.175.166.164:8333\n-76.179.105.27:8333\n-77.68.37.200:8333\n-77.234.49.196:8333\n-77.247.229.93:8333\n-78.24.72.78:8333\n-78.47.32.147:8333\n-78.84.100.95:8333\n-78.121.69.23:8333\n-78.129.167.5:8333\n-78.193.96.155:8333\n-79.19.37.179:8333\n-79.132.230.144:8333\n-79.133.43.63:8333\n-79.134.201.66:8333\n-79.169.35.235:8333\n-80.57.227.14:8333\n-80.64.65.87:8333\n-80.86.92.70:8333\n-80.100.203.151:8333\n-80.101.32.121:8333\n-80.161.178.73:8333\n-80.240.129.170:8333\n-81.7.11.50:8333\n-81.7.11.55:8333\n-81.17.17.40:9333\n-81.30.39.83:8333\n-81.90.36.7:9444\n-81.136.224.77:8333\n-81.162.231.211:8333\n-81.184.0.143:8333\n-81.198.128.86:8333\n-82.11.33.229:8333\n-82.79.128.134:8333\n-82.118.233.111:8333\n-82.135.139.30:8333\n-82.199.102.10:8333\n-82.221.106.17:8333\n-82.221.108.21:8333\n-82.221.108.27:8333\n-83.137.41.3:8333\n-83.142.197.168:8333\n-83.143.130.19:8333\n-83.150.9.196:8333\n-83.183.17.191:8333\n-83.227.173.83:8333\n-83.230.5.15:8333\n-83.233.105.151:443\n-83.246.75.8:8333\n-83.250.133.158:8333\n-83.255.66.118:8334\n-84.24.69.59:8333\n-84.42.193.6:8333\n-84.45.98.87:8333\n-84.54.128.11:8333\n-84.212.200.24:8333\n-84.215.198.109:8333\n-84.230.4.177:8333\n-85.95.228.83:8333\n-85.95.228.123:8333\n-85.114.128.134:8333\n-85.214.66.168:8333\n-85.214.147.162:8333\n-85.243.168.4:8333\n-86.1.0.18:8333\n-87.79.77.106:8333\n-87.91.156.110:8333\n-87.236.196.222:8333\n-88.85.75.152:8333\n-88.87.1.230:8333\n-88.87.92.102:8333\n-88.89.69.202:8333\n-88.97.72.229:8333\n-88.164.117.99:8333\n-88.198.32.131:8333\n-88.202.230.87:8333\n-88.214.193.154:8343\n-88.214.194.226:8343\n-89.10.155.88:8333\n-89.46.101.44:8333\n-89.163.224.212:8333\n-89.174.248.20:8333\n-89.202.231.198:8333\n-89.212.75.6:8333\n-90.149.38.172:8333\n-90.169.106.139:8333\n-91.64.101.150:8333\n-91.65.196.179:8333\n-91.121.80.17:8333\n-91.126.77.77:8333\n-91.145.76.156:8333\n-91.152.150.35:8333\n-91.192.137.17:8333\n-91.196.170.110:8333\n-91.197.44.133:8333\n-91.207.68.144:8333\n-91.210.105.28:8333\n-91.211.102.101:8333\n-91.211.106.34:8333\n-91.214.200.205:8333\n-91.220.43.146:8333\n-91.222.71.89:8333\n-91.224.140.242:8333\n-91.229.76.14:8333\n-92.27.7.209:8333\n-92.51.167.88:8333\n-92.247.229.163:8333\n-93.84.114.106:8333\n-93.113.36.172:8333\n-93.188.224.253:8333\n-94.75.239.69:8333\n-94.190.227.112:8333\n-94.214.2.74:8333\n-94.224.162.65:8333\n-94.236.198.253:8333\n-94.242.229.158:8333\n-95.84.138.99:8333\n-95.95.168.87:8333\n-95.110.234.93:8333\n-95.130.9.200:8333\n-95.165.168.168:8333\n-95.170.235.254:8333\n-95.211.130.154:8333\n-96.46.68.104:8333\n-96.127.202.148:8333\n-97.76.171.35:8333\n-98.160.160.67:8333\n-99.126.197.187:8333\n-99.198.173.1:8333\n-101.100.174.138:8333\n-101.164.201.208:8333\n-103.224.165.48:8333\n-104.128.225.223:8333\n-104.128.228.252:8333\n-104.131.192.94:8333\n-104.155.45.201:8334\n-104.194.28.195:8663\n-104.211.1.27:8333\n-104.221.38.177:8333\n-104.236.9.79:8333\n-104.236.129.178:8333\n-104.236.186.249:8333\n-104.236.194.15:8333\n-104.238.128.214:8333\n-104.238.130.182:8333\n-106.38.234.84:8333\n-106.185.36.204:8333\n-106.185.38.67:8333\n-107.6.4.145:8333\n-107.150.2.6:8333\n-107.150.40.234:8333\n-107.170.13.184:8333\n-107.181.250.216:8333\n-107.191.101.111:8333\n-107.191.106.115:8333\n-108.59.12.163:8333\n-108.161.129.247:8333\n-109.193.160.140:8333\n-109.197.13.54:8333\n-109.230.7.248:8333\n-109.234.106.191:8333\n-109.236.137.80:8333\n-109.251.161.121:8333\n-112.65.231.226:8333\n-115.70.166.57:8333\n-115.159.42.80:8333\n-117.18.73.34:8333\n-118.67.201.40:8333\n-118.100.86.246:8333\n-118.110.104.152:8333\n-119.224.64.141:8333\n-120.55.193.136:8333\n-122.106.169.178:8333\n-123.203.174.15:8333\n-123.255.232.94:8333\n-124.148.165.165:8333\n-124.232.141.31:8333\n-128.30.92.69:8333\n-128.39.141.182:8333\n-128.84.167.20:8333\n-128.111.73.10:8333\n-128.127.38.195:8333\n-128.140.224.162:8333\n-128.199.101.104:8333\n-128.233.224.35:8333\n-128.253.3.193:20020\n-130.180.228.138:8333\n-130.185.144.213:8333\n-130.255.73.207:8333\n-133.218.233.11:8333\n-134.249.128.23:8333\n-136.159.234.234:8333\n-137.116.160.176:8333\n-139.162.2.145:8333\n-139.162.23.117:8333\n-141.134.69.253:8333\n-141.255.162.215:8333\n-144.122.163.187:8333\n-145.131.3.54:8333\n-145.255.4.94:8333\n-146.0.32.101:8337\n-147.83.72.91:8333\n-148.103.28.68:8333\n-149.5.32.102:8333\n-149.210.164.195:8333\n-150.101.163.241:8333\n-151.236.11.189:8333\n-152.3.136.56:8333\n-154.20.208.25:8333\n-158.181.104.149:8333\n-159.253.96.226:8333\n-160.36.130.180:8333\n-162.209.1.233:8333\n-162.209.4.125:8333\n-162.209.106.123:8333\n-162.210.198.184:8333\n-162.248.99.164:53011\n-162.248.102.117:8333\n-162.251.108.53:8333\n-163.44.2.48:8333\n-163.158.36.17:8333\n-166.230.71.67:8333\n-167.160.36.62:8333\n-167.160.169.92:8333\n-168.93.129.220:8333\n-169.55.99.84:8333\n-169.228.66.43:8333\n-172.9.169.242:8333\n-173.32.11.194:8333\n-173.230.228.136:8333\n-173.246.107.34:8333\n-173.254.235.34:8333\n-174.0.128.222:8333\n-174.25.130.148:8333\n-174.50.64.101:8333\n-175.140.232.141:8333\n-176.36.37.62:8333\n-176.46.9.96:8333\n-176.124.110.27:8333\n-177.39.16.102:8333\n-178.17.173.2:8333\n-178.62.5.248:8333\n-178.62.70.16:8333\n-178.62.203.185:8333\n-178.79.160.118:8333\n-178.169.206.244:8333\n-178.193.234.62:8333\n-178.199.96.108:8333\n-178.254.18.96:8333\n-178.254.34.161:8333\n-178.255.41.123:8333\n-180.210.34.58:9801\n-182.92.226.212:8333\n-182.171.246.142:8333\n-184.23.8.9:8333\n-184.58.162.35:8333\n-184.154.9.170:8333\n-185.8.238.165:8333\n-185.24.97.11:8333\n-185.31.137.139:8333\n-185.38.44.64:8333\n-185.53.128.180:8333\n-185.53.129.244:8333\n-185.77.129.119:8333\n-185.77.129.156:8333\n-185.82.203.92:8333\n-188.20.97.18:8333\n-188.126.8.14:8333\n-188.138.33.239:8333\n-188.155.136.70:8333\n-188.166.229.112:8333\n-188.182.108.129:8333\n-188.226.225.174:8010\n-188.242.171.8:8333\n-188.243.4.139:8333\n-190.10.9.234:8333\n-190.10.10.147:8333\n-190.81.160.184:8333\n-190.85.201.37:8333\n-192.34.227.230:8333\n-192.77.189.200:8333\n-192.124.224.7:8333\n-192.146.137.1:8333\n-192.203.228.71:8333\n-192.206.202.20:8333\n-193.0.109.3:8333\n-193.41.229.130:8333\n-193.41.229.156:8333\n-193.49.43.219:8333\n-193.147.71.120:8333\n-193.179.65.233:8333\n-193.183.99.46:8333\n-193.192.37.135:8333\n-193.234.224.195:8333\n-194.58.108.213:8333\n-194.187.96.2:8333\n-194.255.31.59:8333\n-195.36.6.101:8333\n-195.58.238.243:8333\n-195.197.175.190:8333\n-195.239.1.66:8333\n-198.48.196.230:8333\n-198.50.192.160:8333\n-198.57.210.27:8333\n-198.84.195.179:8333\n-198.167.140.8:8333\n-198.204.224.106:8333\n-199.127.226.245:8333\n-199.201.110.8:8333\n-199.233.234.90:8333\n-200.116.98.185:8333\n-202.60.70.18:8333\n-203.151.140.14:8333\n-204.112.203.52:8333\n-205.200.247.149:8333\n-207.226.141.253:8333\n-207.255.42.202:8333\n-208.53.164.19:8333\n-208.66.68.127:8333\n-208.66.68.130:8333\n-208.71.171.232:8341\n-208.76.200.200:8333\n-208.82.98.189:8333\n-208.85.193.31:8333\n-208.111.48.41:8333\n-208.111.48.45:8333\n-209.34.232.72:8333\n-209.81.9.223:8333\n-209.90.224.2:8333\n-209.90.224.4:8333\n-209.126.98.174:8333\n-209.136.72.69:8333\n-209.195.4.74:8333\n-209.197.13.62:8333\n-211.72.227.8:8333\n-212.51.144.42:8333\n-212.71.233.127:8333\n-212.126.14.122:8333\n-212.159.44.50:8333\n-213.5.36.58:8333\n-213.57.33.10:8333\n-213.66.205.194:8333\n-213.136.73.125:8333\n-213.155.3.216:8333\n-213.155.7.24:8333\n-213.167.17.6:8333\n-213.223.138.13:8333\n-216.15.78.182:8333\n-216.38.129.164:8333\n-216.48.168.8:8333\n-216.169.141.169:8333\n-216.245.206.181:8333\n-216.249.204.161:8333\n-216.250.138.230:8333\n-217.11.225.189:8333\n-217.12.34.158:8333\n-217.12.202.33:8333\n-217.20.171.43:8333\n-217.23.1.126:8333\n-217.23.11.138:8333\n-217.111.66.79:8333\n-217.155.202.191:8333\n-217.158.9.102:8333\n-217.172.32.18:20993\n-220.245.196.37:8333\n-[2001:1291:2bf:1::100]:8333\n-[2001:1620:f00:282::2]:8333\n-[2001:1620:f00:8282::1]:8333\n-[2001:19f0:5000:8de8:5400:ff:fe12:55e4]:8333\n-[2001:19f0:6c00:9103:5400:ff:fe10:a8d3]:8333\n-[2001:1b60:3:172:142b:6dff:fe7a:117]:8333\n-[2001:410:a000:4050:8463:90b0:fffb:4e58]:8333\n-[2001:4128:6135:2010:21e:bff:fee8:a3c0]:8333\n-[2001:41d0:1008:761::17c]:8333\n-[2001:41d0:1:45d8::1]:8333\n-[2001:41d0:1:6cd3::]:8333\n-[2001:41d0:1:8b26::1]:8333\n-[2001:41d0:1:afda::]:8200\n-[2001:41d0:1:b26b::1]:8333\n-[2001:41d0:1:c139::1]:8333\n-[2001:41d0:1:c8d7::1]:8333\n-[2001:41d0:1:f59f::33]:8333\n-[2001:41d0:1:f7cc::1]:8333\n-[2001:41d0:2:1021::1]:8333\n-[2001:41d0:2:37c3::]:8200\n-[2001:41d0:2:4797:2323:2323:2323:2323]:8333\n-[2001:41d0:2:53df::]:8333\n-[2001:41d0:2:9c94::1]:8333\n-[2001:41d0:2:9d3e::1]:8333\n-[2001:41d0:2:a24f::]:8333\n-[2001:41d0:2:a35a::]:8333\n-[2001:41d0:2:b2b8::]:8333\n-[2001:41d0:2:c1d9::]:8333\n-[2001:41d0:2:c6e::]:8333\n-[2001:41d0:2:c9bf::]:8333\n-[2001:41d0:2:f1a5::]:8333\n-[2001:41d0:52:a00::105f]:8333\n-[2001:41d0:52:cff::6f5]:8333\n-[2001:41d0:52:d00::6e2]:8333\n-[2001:41d0:8:3e75::1]:8333\n-[2001:41d0:8:62ab::1]:8333\n-[2001:41d0:8:6728::]:8333\n-[2001:41d0:8:b30a::1]:8333\n-[2001:41d0:8:bc26::1]:8333\n-[2001:41d0:8:be9a::1]:8333\n-[2001:41d0:8:d984::]:8333\n-[2001:41d0:8:eb8b::]:8333\n-[2001:41d0:a:13a2::1]:8333\n-[2001:41d0:a:2b18::1]:8333\n-[2001:41d0:a:2d14::]:8333\n-[2001:41d0:a:4558::1df2:76d3]:8333\n-[2001:41d0:a:4aaa::]:8333\n-[2001:41d0:a:635b::1]:8333\n-[2001:41d0:a:63d8::1]:8333\n-[2001:41d0:a:6c29::1]:8333\n-[2001:41d0:a:f9cd::1]:8333\n-[2001:41d0:d:20a4::]:8333\n-[2001:41d0:e:26b::1]:8333\n-[2001:41d0:fc8c:a200:7a24:afff:fe9d:c69b]:8333\n-[2001:41f0:61::7]:8333\n-[2001:41f0::2]:8333\n-[2001:44b8:41bd:6101:148e:4022:4950:e861]:8333\n-[2001:470:1:2f9:0:1:107a:a301]:8333\n-[2001:470:1f0b:ad6::2]:8333\n-[2001:470:1f11:12d5::ae1:5611]:8333\n-[2001:470:1f14:7d::2]:8333\n-[2001:470:27:ce::2]:8333\n-[2001:470:41:6::2]:8333\n-[2001:470:507d:0:6ab5:99ff:fe73:ac18]:8333\n-[2001:470:583e::2a]:8333\n-[2001:470:5f:5f::232]:8333\n-[2001:470:66:119::2]:8333\n-[2001:470:6c4f::cafe]:8333\n-[2001:470:6f:327:913b:7fe:8545:a4f5]:8333\n-[2001:470:7dda:1::1]:8333\n-[2001:470:95c1::2]:8333\n-[2001:470:b1d0:ffff::1000]:8333\n-[2001:470:d00d:0:3664:a9ff:fe9a:5150]:8333\n-[2001:470:fab7:1::1]:8333\n-[2001:4800:7819:104:be76:4eff:fe05:c828]:8333\n-[2001:4800:7819:104:be76:4eff:fe05:c9a0]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:a61a]:8333\n-[2001:4801:7819:74:b745:b9d5:ff10:aaec]:8333\n-[2001:4801:7828:104:be76:4eff:fe10:1325]:8333\n-[2001:4802:7800:1:be76:4eff:fe20:f023]:8333\n-[2001:4802:7800:2:30d7:1775:ff20:1858]:8333\n-[2001:4802:7800:2:be76:4eff:fe20:6c26]:8333\n-[2001:4802:7802:101:be76:4eff:fe20:256]:8333\n-[2001:4802:7802:103:be76:4eff:fe20:2de8]:8333\n-[2001:4830:1100:2e8::2]:8333\n-[2001:4b98:dc2:41:216:3eff:fe56:f659]:8333\n-[2001:4ba0:fffa:5d::93]:8333\n-[2001:4ba0:ffff:1be:1:1005:0:1]:8333\n-[2001:4dd0:ff00:867f::3]:8333\n-[2001:4dd0:ff00:9a67::9]:8333\n-[2001:5c0:1400:b::3cc7]:8333\n-[2001:610:1b19::3]:8333\n-[2001:610:600:a41::2]:8333\n-[2001:67c:26b4::]:8333\n-[2001:8d8:840:500::39:1ae]:8333\n-[2001:8d8:965:4a00::10:9343]:8333\n-[2001:980:4650:1:2e0:53ff:fe13:2449]:8333\n-[2001:981:46:1:ba27:ebff:fe5b:edee]:8333\n-[2001:9c8:53e9:369a:226:2dff:fe1b:7472]:8333\n-[2001:9d8:cafe:3::87]:8333\n-[2001:b10:11:21:3e07:54ff:fe48:7248]:8333\n-[2001:ba8:1f1:f34c::2]:8333\n-[2001:bc8:2310:100::1]:8333\n-[2001:bc8:3427:101:7a4f:8be:2611:6e79]:8333\n-[2001:bc8:3505:200::1]:8333\n-[2001:cc0:a004::30:1d]:8333\n-[2001:e42:102:1209:153:121:76:171]:8333\n-[2002:17ea:14eb::17ea:14eb]:8333\n-[2002:2f8:2bc5::2f8:2bc5]:8333\n-[2002:4047:482c::4047:482c]:8333\n-[2002:45c3:8cca::45c3:8cca]:8333\n-[2002:46bb:8a41:0:226:b0ff:feed:5f12]:8888\n-[2002:46bb:8c3c:0:8d55:8fbb:15fa:f4e0]:8765\n-[2002:4c48:a0fe::4c48:a0fe]:8333\n-[2002:4d44:25c8::4d44:25c8]:8333\n-[2002:505f:aaa2::505f:aaa2]:8333\n-[2002:5bc1:799d::5bc1:799d]:8333\n-[2002:6dec:5472::6dec:5472]:8333\n-[2002:8c6d:6521:9617:12bf:48ff:fed8:1724]:8333\n-[2002:ac52:94e2::ac52:94e2]:8333\n-[2002:af7e:3eca::af7e:3eca]:8333\n-[2002:b009:20c5::b009:20c5]:8333\n-[2002:c06f:39a0::c06f:39a0]:8333\n-[2002:c23a:738a::c23a:738a]:8333\n-[2002:c70f:7442::c70f:7442]:8333\n-[2002:cec5:be4f::cec5:be4f]:8333\n-[2002:d149:9e3a::d149:9e3a]:8333\n-[2002:d917:ca5::d917:ca5]:8333\n-[2400:8900::f03c:91ff:fe50:153f]:8333\n-[2400:8900::f03c:91ff:fe6e:823e]:8333\n-[2400:8900::f03c:91ff:fea8:1934]:8333\n-[2400:8901::f03c:91ff:fe26:c4d6]:8333\n-[2400:8901::f03c:91ff:fec8:4280]:8333\n-[2400:8901::f03c:91ff:fec8:660f]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:559]:8333\n-[2401:1800:7800:102:be76:4eff:fe1c:a7d]:8333\n-[2405:aa00:2::40]:8333\n-[2600:3c00::f03c:91ff:fe18:59b2]:8333\n-[2600:3c00::f03c:91ff:fe26:bfb6]:8333\n-[2600:3c00::f03c:91ff:fe33:88e3]:8333\n-[2600:3c00::f03c:91ff:fe6e:7297]:8333\n-[2600:3c00::f03c:91ff:fe84:8a6e]:8333\n-[2600:3c01::f03c:91ff:fe18:6adf]:8333\n-[2600:3c01::f03c:91ff:fe26:c4b8]:8333\n-[2600:3c01::f03c:91ff:fe3b:1f76]:8333\n-[2600:3c01::f03c:91ff:fe50:5e06]:8333\n-[2600:3c01::f03c:91ff:fe61:289b]:8333\n-[2600:3c01::f03c:91ff:fe69:89e9]:8333\n-[2600:3c01::f03c:91ff:fe84:ac15]:8333\n-[2600:3c01::f03c:91ff:fe98:68bb]:8333\n-[2600:3c02::f03c:91ff:fe26:713]:8333\n-[2600:3c02::f03c:91ff:fe26:c49e]:8333\n-[2600:3c02::f03c:91ff:fe84:97d8]:8333\n-[2600:3c02::f03c:91ff:fec8:8feb]:8333\n-[2600:3c03::f03c:91ff:fe18:da80]:8333\n-[2600:3c03::f03c:91ff:fe26:c49b]:8333\n-[2600:3c03::f03c:91ff:fe50:5fa7]:8333\n-[2600:3c03::f03c:91ff:fe67:d2e]:8333\n-[2600:3c03::f03c:91ff:fe6e:1803]:8333\n-[2600:3c03::f03c:91ff:fec8:4bbe]:8333\n-[2600:3c03::f03c:91ff:fee4:4e16]:8333\n-[2601:18d:8300:58a6::2e4]:8333\n-[2601:240:4600:40c0:250:56ff:fea4:6305]:8333\n-[2601:581:c200:a719:542c:9cd5:4852:f7d9]:8333\n-[2601:647:4900:85f1:ca2a:14ff:fe51:bb35]:8333\n-[2601:c2:c002:b300:54a0:15b5:19f7:530d]:8333\n-[2602:306:ccff:ad7f:b116:52be:64ba:db3a]:8333\n-[2602:ae:1982:9400:846:f78c:fec:4d57]:8333\n-[2602:ffc5:1f::1f:2d61]:8333\n-[2602:ffc5:1f::1f:9211]:8333\n-[2602:ffc5::75d5:c1c3]:8333\n-[2602:ffc5::ffc5:b844]:8333\n-[2602:ffe8:100:2::457:936b]:8333\n-[2602:ffe8:100:2::9d20:2e3c]:8333\n-[2602:ffea:1001:72b::578b]:8333\n-[2602:ffea:a::24c4:d9fd]:8333\n-[2604:0:c1:100:1ec1:deff:fe54:2235]:8333\n-[2604:180:1:1af::42a9]:8333\n-[2604:180:3:702::c9de]:8333\n-[2604:4080:1114:0:3285:a9ff:fe93:850c]:8333\n-[2604:6000:ffc0:3c:64a3:94d0:4f1d:1da8]:8333\n-[2605:6000:f380:9a01:ba09:8aff:fed4:3511]:8333\n-[2605:6001:e00f:7b00:c587:6d91:6eff:eeba]:8333\n-[2605:f700:c0:1::25c3:2a3e]:8333\n-[2606:6000:a441:9903:5054:ff:fe78:66ff]:8333\n-[2607:5300:100:200::1c83]:9334\n-[2607:5300:10::a1]:8333\n-[2607:5300:60:1c2f::1]:8333\n-[2607:5300:60:2b90::1]:8333\n-[2607:5300:60:3320::1]:8333\n-[2607:5300:60:385::1]:8333\n-[2607:5300:60:4a85::]:8333\n-[2607:5300:60:65e4::]:8333\n-[2607:5300:60:6918::]:8333\n-[2607:5300:60:711a:78::a7b5]:8333\n-[2607:5300:60:714::1]:8333\n-[2607:5300:60:870::1]:8333\n-[2607:5300:60:952e:3733::1414]:8333\n-[2607:f1c0:848:1000::48:943c]:8333\n-[2607:f2e0:f:5df::2]:8333\n-[2607:f748:1200:f8:21e:67ff:fe99:8f07]:8333\n-[2607:f948:0:1::7]:8333\n-[2607:ff68:100:36::131]:8333\n-[2803:6900:1::117]:8333\n-[2a00:1098:0:80:1000:25:0:1]:8333\n-[2a00:1178:2:43:5054:ff:fe84:f86f]:8333\n-[2a00:1178:2:43:5054:ff:fee7:2eb6]:8333\n-[2a00:1178:2:43:8983:cc27:d72:d97a]:8333\n-[2a00:1328:e100:cc42:230:48ff:fe92:55c]:8333\n-[2a00:14f0:e000:80d2:cd1a::1]:8333\n-[2a00:1630:2:1802:188:122:91:11]:8333\n-[2a00:18e0:0:1800::1]:8333\n-[2a00:18e0:0:dcc5:109:234:106:191]:8333\n-[2a00:1a28:1157:87::94c7]:8333\n-[2a00:1ca8:37::a5fc:40d1]:8333\n-[2a00:1ca8:37::ab6d:ce2c]:8333\n-[2a00:7143:100:0:216:3eff:fe2e:74a3]:8333\n-[2a00:7143:100:0:216:3eff:fed3:5c21]:8333\n-[2a00:7c80:0:45::123]:8333\n-[2a00:dcc0:eda:98:183:193:c382:6bdb]:8333\n-[2a00:dcc0:eda:98:183:193:f72e:d943]:8333\n-[2a00:f820:17::4af:1]:8333\n-[2a00:f940:2:1:2::101d]:8333\n-[2a00:f940:2:1:2::6ac]:8333\n-[2a01:1b0:7999:402::131]:8333\n-[2a01:238:42dd:f900:7a6c:2bc6:4041:c43]:8333\n-[2a01:238:4313:6300:2189:1c97:696b:5ea]:8333\n-[2a01:488:66:1000:5c33:91f9:0:1]:8333\n-[2a01:488:66:1000:b01c:178d:0:1]:8333\n-[2a01:4f8:100:34ce::2]:8333\n-[2a01:4f8:100:34e4::2]:8333\n-[2a01:4f8:100:44e7::2]:8333\n-[2a01:4f8:100:510e::2]:8333\n-[2a01:4f8:100:5128::2]:8333\n-[2a01:4f8:110:5105::2]:8333\n-[2a01:4f8:110:516c::2]:8333\n-[2a01:4f8:120:43e4::2]:8333\n-[2a01:4f8:120:62e6::2]:8333\n-[2a01:4f8:120:702e::2]:8333\n-[2a01:4f8:120:8203::2]:8333\n-[2a01:4f8:121:234d::2]:8333\n-[2a01:4f8:121:261::2]:8333\n-[2a01:4f8:130:11ea::2]:8333\n-[2a01:4f8:130:3332::2]:8333\n-[2a01:4f8:130:40ab::2]:8333\n-[2a01:4f8:130:632c::2]:8333\n-[2a01:4f8:130:6366::2]:8333\n-[2a01:4f8:130:934f::2]:8333\n-[2a01:4f8:131:33ad:fea1::666]:8333\n-[2a01:4f8:140:2195::2]:8333\n-[2a01:4f8:140:6333::2]:8333\n-[2a01:4f8:140:930d::2]:8333\n-[2a01:4f8:140:93b0::2]:8333\n-[2a01:4f8:141:1167::2]:8333\n-[2a01:4f8:141:186::2]:8333\n-[2a01:4f8:141:53f0::2]:8333\n-[2a01:4f8:150:336a::2]:8333\n-[2a01:4f8:150:72ee::4202]:8333\n-[2a01:4f8:150:8324::2]:9001\n-[2a01:4f8:151:21ca::2]:8333\n-[2a01:4f8:151:41c2:0:5404:a67e:f250]:8333\n-[2a01:4f8:151:5128::2]:8333\n-[2a01:4f8:151:52c6::154]:8333\n-[2a01:4f8:151:6347::2]:9001\n-[2a01:4f8:160:5136::2]:8333\n-[2a01:4f8:160:72c5::2858:e1c5]:8333\n-[2a01:4f8:160:72c5::593b:60d5]:8333\n-[2a01:4f8:160:814f::2]:8333\n-[2a01:4f8:161:13d0::2]:8333\n-[2a01:4f8:161:228f::2]:8333\n-[2a01:4f8:161:51c4::2]:8333\n-[2a01:4f8:161:60a7::2]:8333\n-[2a01:4f8:161:7026::2]:8333\n-[2a01:4f8:161:9184::2]:8333\n-[2a01:4f8:162:2108::2]:8333\n-[2a01:4f8:162:218c::2]:8333\n-[2a01:4f8:162:4443::2]:8333\n-[2a01:4f8:162:51a3::2]:8333\n-[2a01:4f8:171:b93::2]:8333\n-[2a01:4f8:190:1483::1]:8333\n-[2a01:4f8:190:4495::2]:8333\n-[2a01:4f8:190:64c9::2]:8333\n-[2a01:4f8:190:91ce::2]:8333\n-[2a01:4f8:191:2194::83]:8333\n-[2a01:4f8:191:40e8::2]:8333\n-[2a01:4f8:191:44b4::2]:8333\n-[2a01:4f8:191:8242::2]:8333\n-[2a01:4f8:191:83a2::2]:8333\n-[2a01:4f8:192:11b2::2]:8333\n-[2a01:4f8:192:216c::2]:8333\n-[2a01:4f8:192:22b3::2]:8333\n-[2a01:4f8:192:440b::2]:8333\n-[2a01:4f8:192:db::2]:8333\n-[2a01:4f8:200:1012::2]:8333\n-[2a01:4f8:200:23d1::dead:beef]:8333\n-[2a01:4f8:200:506d::2]:8333\n-[2a01:4f8:200:51f0::2]:8333\n-[2a01:4f8:200:5389::2]:8333\n-[2a01:4f8:200:53e3::2]:8333\n-[2a01:4f8:200:6344::2]:8333\n-[2a01:4f8:200:6396::2]:8333\n-[2a01:4f8:200:63af::119]:8333\n-[2a01:4f8:200:71e3:78b4:f3ff:fead:e8cf]:8333\n-[2a01:4f8:201:214c::2]:8333\n-[2a01:4f8:201:233:1::3]:8333\n-[2a01:4f8:201:3e3::2]:8333\n-[2a01:4f8:201:6011::4]:8333\n-[2a01:4f8:201:60d5::2]:8333\n-[2a01:4f8:202:265::2]:8333\n-[2a01:4f8:202:3115::2]:8333\n-[2a01:4f8:202:31e3::2]:8333\n-[2a01:4f8:202:31ef::2]:8333\n-[2a01:4f8:202:3392::2]:8333\n-[2a01:4f8:202:53c3::2]:8333\n-[2a01:4f8:202:63f4::2]:8333\n-[2a01:4f8:202:7227::2]:8333\n-[2a01:4f8:210:2227::2]:8333\n-[2a01:4f8:210:24aa::2]:8333\n-[2a01:4f8:211:14cf::2]:8333\n-[2a01:4f8:211:181b::2]:8333\n-[2a01:4f8:212:289e::2]:8333\n-[2a01:4f8:212:33db::2]:18333\n-[2a01:4f8:a0:112f::2]:8333\n-[2a01:4f8:a0:3174::2]:8333\n-[2a01:4f8:a0:328c::2]:8333\n-[2a01:4f8:a0:5243::2]:8333\n-[2a01:4f8:c17:19b9::2]:8333\n-[2a01:4f8:c17:1a41::2]:8333\n-[2a01:4f8:c17:1a92::2]:8333\n-[2a01:4f8:c17:273::2]:8333\n-[2a01:4f8:c17:435::2]:8333\n-[2a01:4f8:c17:755::2]:8333\n-[2a01:4f8:c17:b54::2]:8333\n-[2a01:4f8:d16:9384::2]:8333\n-[2a01:608:ffff:a009:8bf5:879d:e51a:f837]:8333\n-[2a01:680:10:10:f2de:f1ff:fec9:dc0]:8333\n-[2a01:7c8:aaac:1f6:5054:ff:fe30:e585]:8333\n-[2a01:7c8:aaac:20b:5054:ff:fe24:435e]:8333\n-[2a01:7c8:aaac:43d:5054:ff:fe4e:3dd4]:8333\n-[2a01:7c8:aaad:256::1]:8333\n-[2a01:7c8:aab6:ea:5054:ff:feff:eac3]:8333\n-[2a01:7c8:aab9:5a:5054:ff:fe89:7b26]:8333\n-[2a01:7c8:aabc:2c8:5054:ff:fe35:6581]:8333\n-[2a01:7e00::f03c:91ff:fe18:301e]:8333\n-[2a01:7e00::f03c:91ff:fe18:3942]:8333\n-[2a01:7e00::f03c:91ff:fe26:8c87]:8333\n-[2a01:7e00::f03c:91ff:fe50:6206]:8333\n-[2a01:7e00::f03c:91ff:fe67:559d]:8333\n-[2a01:7e00::f03c:91ff:fe84:434f]:8333\n-[2a01:7e00::f03c:91ff:fe89:1143]:8333\n-[2a01:7e00::f03c:91ff:fe98:2505]:8333\n-[2a01:7e00::f03c:91ff:fedb:352e]:8333\n-[2a01:7e01::f03c:91ff:fec8:d7b5]:8333\n-[2a01:e34:ee33:1640:c504:f677:b28a:ba42]:8333\n-[2a01:e35:2e7e:bc0:e079:f55e:cef3:b5d7]:8333\n-[2a01:e35:2ee5:610:21f:d0ff:fe4e:7460]:8333\n-[2a01:e35:8a3f:47c0:c617:feff:fe3c:9fbd]:8333\n-[2a01:e35:8aca:6a0:211:aff:fe5e:295e]:8333\n-[2a02:180:a:18:81:7:11:50]:8333\n-[2a02:1810:1d87:6a00:5604:a6ff:fe60:d87d]:8333\n-[2a02:2168:1144:5c01:d63d:7eff:fedd:4f8e]:8333\n-[2a02:2498:6d7b:7001:b508:b39d:2cea:5b7a]:8333\n-[2a02:2528:503:2::15]:8333\n-[2a02:2528:fa:1a56:216:44ff:fe6a:d112]:8333\n-[2a02:27f8:2012:0:e9f7:268f:c441:6129]:8333\n-[2a02:348:86:3011::1]:8333\n-[2a02:4780:1:1::1:8a01]:8333\n-[2a02:578:5002:116::2]:8333\n-[2a02:6080::1:190b:69e3]:8333\n-[2a02:6080::1:e893:d9d6]:8333\n-[2a02:770:4000::139]:8333\n-[2a02:7aa0:1201::deb3:81a2]:8333\n-[2a02:8010:b001::5860:59b5]:8333\n-[2a02:810d:21c0:f00:a248:1cff:feb8:5348]:8333\n-[2a02:a50::21b:24ff:fe93:4e39]:8333\n-[2a02:a80:0:1200::2]:8333\n-[2a02:c200:0:10:2:1:5830:1]:8333\n-[2a02:c200:0:10:2:5:4692:1]:8333\n-[2a02:c200:0:10:3:0:7158:1]:8333\n-[2a02:c200:0:10::2244:1]:8333\n-[2a02:c200:1:10:2:3:3339:1]:8333\n-[2a02:c200:1:10:2:3:7844:1]:8333\n-[2a02:c200:1:10:2:5:6288:1]:8333\n-[2a02:c200:1:10:3:0:5912:1]:8333\n-[2a03:4000:2:496::8]:8333\n-[2a03:4000:6:8009::1]:8333\n-[2a03:4000:6:8063::bcd0]:8333\n-[2a03:4900:fffc:b::2]:8333\n-[2a03:b0c0:1:d0::d:5001]:8333\n-[2a03:f80:ed15:149:154:155:235:1]:8333\n-[2a03:f80:ed15:149:154:155:241:1]:8333\n-[2a03:f80:ed16:ca7:ea75:b12d:2af:9e2a]:8333\n-[2a04:1980:3100:1aab:290:faff:fe70:a3d8]:8333\n-[2a04:1980:3100:1aab:e61d:2dff:fe29:f590]:8333\n-[2a04:2f80:6:200::89]:8333\n-[2a04:ac00:1:4a0b:5054:ff:fe00:5af5]:8333\n-[2a04:ad80:0:68::35da]:8333\n-3ffk7iumtx3cegbi.onion:8333\n-3nmbbakinewlgdln.onion:8333\n-4j77gihpokxu2kj4.onion:8333\n-546esc6botbjfbxb.onion:8333\n-5at7sq5nm76xijkd.onion:8333\n-77mx2jsxaoyesz2p.onion:8333\n-7g7j54btiaxhtsiy.onion:8333\n-a6obdgzn67l7exu3.onion:8333\n-ab64h7olpl7qpxci.onion:8333\n-am2a4rahltfuxz6l.onion:8333\n-azuxls4ihrr2mep7.onion:8333\n-bitcoin7bi4op7wb.onion:8333\n-bitcoinostk4e4re.onion:8333\n-bk7yp6epnmcllq72.onion:8333\n-bmutjfrj5btseddb.onion:8333\n-ceeji4qpfs3ms3zc.onion:8333\n-clexmzqio7yhdao4.onion:8333\n-gb5ypqt63du3wfhn.onion:8333\n-h2vlpudzphzqxutd.onion:8333\n-n42h7r6oumcfsbrs.onion:4176\n-ncwk3lutemffcpc4.onion:8333\n-okdzjarwekbshnof.onion:8333\n-pjghcivzkoersesd.onion:8333\n-rw7ocjltix26mefn.onion:8333\n-uws7itep7o3yinxo.onion:8333\n-vk3qjdehyy4dwcxw.onion:8333\n-vqpye2k5rcqvj5mq.onion:8333\n-wpi7rpvhnndl52ee.onion:8333"
      },
      {
        "sha": "98365ee505ced2410cdc7ea841bf52198b405662",
        "filename": "contrib/seeds/nodes_test.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/nodes_test.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/seeds/nodes_test.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/nodes_test.txt?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,11 +0,0 @@\n-# List of fixed seed nodes for testnet\n-\n-# Onion nodes\n-thfsmmn2jbitcoin.onion\n-it2pj4f7657g3rhi.onion\n-nkf5e6b7pl4jfd4a.onion\n-4zhkir2ofl7orfom.onion\n-t6xj6wilh4ytvcs7.onion\n-i6y6ivorwakd7nw3.onion\n-ubqj4rsu3nqtxmtp.onion\n-"
      },
      {
        "sha": "c0a9c9ccf93d335a7092e383ff8a59ae410e549d",
        "filename": "contrib/spendfrom/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,35 +0,0 @@\n-### SpendFrom ###\n-\n-Use the raw transactions API to send coins received on a particular\n-address (or addresses). \n-\n-### Usage: ###\n-Depends on [jsonrpc](http://json-rpc.org/).\n-\n-\tspendfrom.py --from=FROMADDRESS1[,FROMADDRESS2] --to=TOADDRESS --amount=amount \\\n-\t             --fee=fee --datadir=/path/to/.bitcoin --testnet --dry_run\n-\n-With no arguments, outputs a list of amounts associated with addresses.\n-\n-With arguments, sends coins received by the `FROMADDRESS` addresses to the `TOADDRESS`.\n-\n-### Notes ###\n-\n-- You may explicitly specify how much fee to pay (a fee more than 1% of the amount\n-will fail,  though, to prevent bitcoin-losing accidents). Spendfrom may fail if\n-it thinks the transaction would never be confirmed (if the amount being sent is\n-too small, or if the transaction is too many bytes for the fee).\n-\n-- If a change output needs to be created, the change will be sent to the last\n-`FROMADDRESS` (if you specify just one `FROMADDRESS`, change will go back to it).\n-\n-- If `--datadir` is not specified, the default datadir is used.\n-\n-- The `--dry_run` option will just create and sign the transaction and print\n-the transaction data (as hexadecimal), instead of broadcasting it.\n-\n-- If the transaction is created and broadcast successfully, a transaction id\n-is printed.\n-\n-- If this was a tool for end-users and not programmers, it would have much friendlier\n-error-handling."
      },
      {
        "sha": "01b9768a5b06a459808af61efca624239b301f1d",
        "filename": "contrib/spendfrom/setup.py",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/setup.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/setup.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/setup.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,9 +0,0 @@\n-from distutils.core import setup\n-setup(name='btcspendfrom',\n-      version='1.0',\n-      description='Command-line utility for bitcoin \"coin control\"',\n-      author='Gavin Andresen',\n-      author_email='gavin@bitcoinfoundation.org',\n-      requires=['jsonrpc'],\n-      scripts=['spendfrom.py'],\n-      )"
      },
      {
        "sha": "72ee0425eb2363ab39f85ba9d239891aa0279dcd",
        "filename": "contrib/spendfrom/spendfrom.py",
        "status": "removed",
        "additions": 0,
        "deletions": 267,
        "changes": 267,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/spendfrom.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/spendfrom/spendfrom.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/spendfrom/spendfrom.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,267 +0,0 @@\n-#!/usr/bin/env python\n-#\n-# Use the raw transactions API to spend bitcoins received on particular addresses,\n-# and send any change back to that same address.\n-#\n-# Example usage:\n-#  spendfrom.py  # Lists available funds\n-#  spendfrom.py --from=ADDRESS --to=ADDRESS --amount=11.00\n-#\n-# Assumes it will talk to a bitcoind or Bitcoin-Qt running\n-# on localhost.\n-#\n-# Depends on jsonrpc\n-#\n-\n-from decimal import *\n-import getpass\n-import math\n-import os\n-import os.path\n-import platform\n-import sys\n-import time\n-from jsonrpc import ServiceProxy, json\n-\n-BASE_FEE=Decimal(\"0.001\")\n-\n-def check_json_precision():\n-    \"\"\"Make sure json library being used does not lose precision converting BTC values\"\"\"\n-    n = Decimal(\"20000000.00000003\")\n-    satoshis = int(json.loads(json.dumps(float(n)))*1.0e8)\n-    if satoshis != 2000000000000003:\n-        raise RuntimeError(\"JSON encode/decode loses precision\")\n-\n-def determine_db_dir():\n-    \"\"\"Return the default location of the bitcoin data directory\"\"\"\n-    if platform.system() == \"Darwin\":\n-        return os.path.expanduser(\"~/Library/Application Support/Bitcoin/\")\n-    elif platform.system() == \"Windows\":\n-        return os.path.join(os.environ['APPDATA'], \"Bitcoin\")\n-    return os.path.expanduser(\"~/.bitcoin\")\n-\n-def read_bitcoin_config(dbdir):\n-    \"\"\"Read the bitcoin.conf file from dbdir, returns dictionary of settings\"\"\"\n-    from ConfigParser import SafeConfigParser\n-\n-    class FakeSecHead(object):\n-        def __init__(self, fp):\n-            self.fp = fp\n-            self.sechead = '[all]\\n'\n-        def readline(self):\n-            if self.sechead:\n-                try: return self.sechead\n-                finally: self.sechead = None\n-            else:\n-                s = self.fp.readline()\n-                if s.find('#') != -1:\n-                    s = s[0:s.find('#')].strip() +\"\\n\"\n-                return s\n-\n-    config_parser = SafeConfigParser()\n-    config_parser.readfp(FakeSecHead(open(os.path.join(dbdir, \"bitcoin.conf\"))))\n-    return dict(config_parser.items(\"all\"))\n-\n-def connect_JSON(config):\n-    \"\"\"Connect to a bitcoin JSON-RPC server\"\"\"\n-    testnet = config.get('testnet', '0')\n-    testnet = (int(testnet) > 0)  # 0/1 in config file, convert to True/False\n-    if not 'rpcport' in config:\n-        config['rpcport'] = 18332 if testnet else 8332\n-    connect = \"http://%s:%s@127.0.0.1:%s\"%(config['rpcuser'], config['rpcpassword'], config['rpcport'])\n-    try:\n-        result = ServiceProxy(connect)\n-        # ServiceProxy is lazy-connect, so send an RPC command mostly to catch connection errors,\n-        # but also make sure the bitcoind we're talking to is/isn't testnet:\n-        if result.getmininginfo()['testnet'] != testnet:\n-            sys.stderr.write(\"RPC server at \"+connect+\" testnet setting mismatch\\n\")\n-            sys.exit(1)\n-        return result\n-    except:\n-        sys.stderr.write(\"Error connecting to RPC server at \"+connect+\"\\n\")\n-        sys.exit(1)\n-\n-def unlock_wallet(bitcoind):\n-    info = bitcoind.getinfo()\n-    if 'unlocked_until' not in info:\n-        return True # wallet is not encrypted\n-    t = int(info['unlocked_until'])\n-    if t <= time.time():\n-        try:\n-            passphrase = getpass.getpass(\"Wallet is locked; enter passphrase: \")\n-            bitcoind.walletpassphrase(passphrase, 5)\n-        except:\n-            sys.stderr.write(\"Wrong passphrase\\n\")\n-\n-    info = bitcoind.getinfo()\n-    return int(info['unlocked_until']) > time.time()\n-\n-def list_available(bitcoind):\n-    address_summary = dict()\n-\n-    address_to_account = dict()\n-    for info in bitcoind.listreceivedbyaddress(0):\n-        address_to_account[info[\"address\"]] = info[\"account\"]\n-\n-    unspent = bitcoind.listunspent(0)\n-    for output in unspent:\n-        # listunspent doesn't give addresses, so:\n-        rawtx = bitcoind.getrawtransaction(output['txid'], 1)\n-        vout = rawtx[\"vout\"][output['vout']]\n-        pk = vout[\"scriptPubKey\"]\n-\n-        # This code only deals with ordinary pay-to-bitcoin-address\n-        # or pay-to-script-hash outputs right now; anything exotic is ignored.\n-        if pk[\"type\"] != \"pubkeyhash\" and pk[\"type\"] != \"scripthash\":\n-            continue\n-        \n-        address = pk[\"addresses\"][0]\n-        if address in address_summary:\n-            address_summary[address][\"total\"] += vout[\"value\"]\n-            address_summary[address][\"outputs\"].append(output)\n-        else:\n-            address_summary[address] = {\n-                \"total\" : vout[\"value\"],\n-                \"outputs\" : [output],\n-                \"account\" : address_to_account.get(address, \"\")\n-                }\n-\n-    return address_summary\n-\n-def select_coins(needed, inputs):\n-    # Feel free to improve this, this is good enough for my simple needs:\n-    outputs = []\n-    have = Decimal(\"0.0\")\n-    n = 0\n-    while have < needed and n < len(inputs):\n-        outputs.append({ \"txid\":inputs[n][\"txid\"], \"vout\":inputs[n][\"vout\"]})\n-        have += inputs[n][\"amount\"]\n-        n += 1\n-    return (outputs, have-needed)\n-\n-def create_tx(bitcoind, fromaddresses, toaddress, amount, fee):\n-    all_coins = list_available(bitcoind)\n-\n-    total_available = Decimal(\"0.0\")\n-    needed = amount+fee\n-    potential_inputs = []\n-    for addr in fromaddresses:\n-        if addr not in all_coins:\n-            continue\n-        potential_inputs.extend(all_coins[addr][\"outputs\"])\n-        total_available += all_coins[addr][\"total\"]\n-\n-    if total_available < needed:\n-        sys.stderr.write(\"Error, only %f BTC available, need %f\\n\"%(total_available, needed));\n-        sys.exit(1)\n-\n-    #\n-    # Note:\n-    # Python's json/jsonrpc modules have inconsistent support for Decimal numbers.\n-    # Instead of wrestling with getting json.dumps() (used by jsonrpc) to encode\n-    # Decimals, I'm casting amounts to float before sending them to bitcoind.\n-    #  \n-    outputs = { toaddress : float(amount) }\n-    (inputs, change_amount) = select_coins(needed, potential_inputs)\n-    if change_amount > BASE_FEE:  # don't bother with zero or tiny change\n-        change_address = fromaddresses[-1]\n-        if change_address in outputs:\n-            outputs[change_address] += float(change_amount)\n-        else:\n-            outputs[change_address] = float(change_amount)\n-\n-    rawtx = bitcoind.createrawtransaction(inputs, outputs)\n-    signed_rawtx = bitcoind.signrawtransaction(rawtx)\n-    if not signed_rawtx[\"complete\"]:\n-        sys.stderr.write(\"signrawtransaction failed\\n\")\n-        sys.exit(1)\n-    txdata = signed_rawtx[\"hex\"]\n-\n-    return txdata\n-\n-def compute_amount_in(bitcoind, txinfo):\n-    result = Decimal(\"0.0\")\n-    for vin in txinfo['vin']:\n-        in_info = bitcoind.getrawtransaction(vin['txid'], 1)\n-        vout = in_info['vout'][vin['vout']]\n-        result = result + vout['value']\n-    return result\n-\n-def compute_amount_out(txinfo):\n-    result = Decimal(\"0.0\")\n-    for vout in txinfo['vout']:\n-        result = result + vout['value']\n-    return result\n-\n-def sanity_test_fee(bitcoind, txdata_hex, max_fee):\n-    class FeeError(RuntimeError):\n-        pass\n-    try:\n-        txinfo = bitcoind.decoderawtransaction(txdata_hex)\n-        total_in = compute_amount_in(bitcoind, txinfo)\n-        total_out = compute_amount_out(txinfo)\n-        if total_in-total_out > max_fee:\n-            raise FeeError(\"Rejecting transaction, unreasonable fee of \"+str(total_in-total_out))\n-\n-        tx_size = len(txdata_hex)/2\n-        kb = tx_size/1000  # integer division rounds down\n-        if kb > 1 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee transaction, larger than 1000 bytes\")\n-        if total_in < 0.01 and fee < BASE_FEE:\n-            raise FeeError(\"Rejecting no-fee, tiny-amount transaction\")\n-        # Exercise for the reader: compute transaction priority, and\n-        # warn if this is a very-low-priority transaction\n-\n-    except FeeError as err:\n-        sys.stderr.write((str(err)+\"\\n\"))\n-        sys.exit(1)\n-\n-def main():\n-    import optparse\n-\n-    parser = optparse.OptionParser(usage=\"%prog [options]\")\n-    parser.add_option(\"--from\", dest=\"fromaddresses\", default=None,\n-                      help=\"addresses to get bitcoins from\")\n-    parser.add_option(\"--to\", dest=\"to\", default=None,\n-                      help=\"address to get send bitcoins to\")\n-    parser.add_option(\"--amount\", dest=\"amount\", default=None,\n-                      help=\"amount to send\")\n-    parser.add_option(\"--fee\", dest=\"fee\", default=\"0.0\",\n-                      help=\"fee to include\")\n-    parser.add_option(\"--datadir\", dest=\"datadir\", default=determine_db_dir(),\n-                      help=\"location of bitcoin.conf file with RPC username/password (default: %default)\")\n-    parser.add_option(\"--testnet\", dest=\"testnet\", default=False, action=\"store_true\",\n-                      help=\"Use the test network\")\n-    parser.add_option(\"--dry_run\", dest=\"dry_run\", default=False, action=\"store_true\",\n-                      help=\"Don't broadcast the transaction, just create and print the transaction data\")\n-\n-    (options, args) = parser.parse_args()\n-\n-    check_json_precision()\n-    config = read_bitcoin_config(options.datadir)\n-    if options.testnet: config['testnet'] = True\n-    bitcoind = connect_JSON(config)\n-\n-    if options.amount is None:\n-        address_summary = list_available(bitcoind)\n-        for address,info in address_summary.iteritems():\n-            n_transactions = len(info['outputs'])\n-            if n_transactions > 1:\n-                print(\"%s %.8f %s (%d transactions)\"%(address, info['total'], info['account'], n_transactions))\n-            else:\n-                print(\"%s %.8f %s\"%(address, info['total'], info['account']))\n-    else:\n-        fee = Decimal(options.fee)\n-        amount = Decimal(options.amount)\n-        while unlock_wallet(bitcoind) == False:\n-            pass # Keep asking for passphrase until they get it right\n-        txdata = create_tx(bitcoind, options.fromaddresses.split(\",\"), options.to, amount, fee)\n-        sanity_test_fee(bitcoind, txdata, amount*Decimal(\"0.01\"))\n-        if options.dry_run:\n-            print(txdata)\n-        else:\n-            txid = bitcoind.sendrawtransaction(txdata)\n-            print(txid)\n-\n-if __name__ == '__main__':\n-    main()"
      },
      {
        "sha": "83624f443a7f9f71ba2a1f1c2dbc3d3a8297bc7d",
        "filename": "contrib/testgen/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 8,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,8 +0,0 @@\n-### TestGen ###\n-\n-Utilities to generate test vectors for the data-driven Bitcoin tests.\n-\n-Usage: \n-\n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n\\ No newline at end of file"
      },
      {
        "sha": "b716495145f7772cdea37fdd0a7cd1c8caf9dc12",
        "filename": "contrib/testgen/base58.py",
        "status": "removed",
        "additions": 0,
        "deletions": 104,
        "changes": 104,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/base58.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/base58.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/base58.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,104 +0,0 @@\n-'''\n-Bitcoin base58 encoding and decoding.\n-\n-Based on https://bitcointalk.org/index.php?topic=1026.0 (public domain)\n-'''\n-import hashlib\n-\n-# for compatibility with following code...\n-class SHA256:\n-    new = hashlib.sha256\n-\n-if str != bytes:\n-    # Python 3.x\n-    def ord(c):\n-        return c\n-    def chr(n):\n-        return bytes( (n,) )\n-\n-__b58chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n-__b58base = len(__b58chars)\n-b58chars = __b58chars\n-\n-def b58encode(v):\n-    \"\"\" encode v, which is a string of bytes, to base58.\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += (256**i) * ord(c)\n-\n-    result = ''\n-    while long_value >= __b58base:\n-        div, mod = divmod(long_value, __b58base)\n-        result = __b58chars[mod] + result\n-        long_value = div\n-    result = __b58chars[long_value] + result\n-\n-    # Bitcoin does a little leading-zero-compression:\n-    # leading 0-bytes in the input become leading-1s\n-    nPad = 0\n-    for c in v:\n-        if c == '\\0': nPad += 1\n-        else: break\n-\n-    return (__b58chars[0]*nPad) + result\n-\n-def b58decode(v, length = None):\n-    \"\"\" decode v into a string of len bytes\n-    \"\"\"\n-    long_value = 0\n-    for (i, c) in enumerate(v[::-1]):\n-        long_value += __b58chars.find(c) * (__b58base**i)\n-\n-    result = bytes()\n-    while long_value >= 256:\n-        div, mod = divmod(long_value, 256)\n-        result = chr(mod) + result\n-        long_value = div\n-    result = chr(long_value) + result\n-\n-    nPad = 0\n-    for c in v:\n-        if c == __b58chars[0]: nPad += 1\n-        else: break\n-\n-    result = chr(0)*nPad + result\n-    if length is not None and len(result) != length:\n-        return None\n-\n-    return result\n-\n-def checksum(v):\n-    \"\"\"Return 32-bit checksum based on SHA256\"\"\"\n-    return SHA256.new(SHA256.new(v).digest()).digest()[0:4]\n-\n-def b58encode_chk(v):\n-    \"\"\"b58encode a string, with 32-bit checksum\"\"\"\n-    return b58encode(v + checksum(v))\n-\n-def b58decode_chk(v):\n-    \"\"\"decode a base58 string, check and remove checksum\"\"\"\n-    result = b58decode(v)\n-    if result is None:\n-        return None\n-    h3 = checksum(result[:-4])\n-    if result[-4:] == checksum(result[:-4]):\n-        return result[:-4]\n-    else:\n-        return None\n-\n-def get_bcaddress_version(strAddress):\n-    \"\"\" Returns None if strAddress is invalid.  Otherwise returns integer version of address. \"\"\"\n-    addr = b58decode_chk(strAddress)\n-    if addr is None or len(addr)!=21: return None\n-    version = addr[0]\n-    return ord(version)\n-\n-if __name__ == '__main__':\n-    # Test case (from http://gitorious.org/bitcoin/python-base58.git)\n-    assert get_bcaddress_version('15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC') is 0\n-    _ohai = 'o hai'.encode('ascii')\n-    _tmp = b58encode(_ohai)\n-    assert _tmp == 'DYB3oMS'\n-    assert b58decode(_tmp, 5) == _ohai\n-    print(\"Tests passed\")"
      },
      {
        "sha": "181343695363a4ed7a9965fc4cf0de72fc7f32ce",
        "filename": "contrib/testgen/gen_base58_test_vectors.py",
        "status": "removed",
        "additions": 0,
        "deletions": 126,
        "changes": 126,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/gen_base58_test_vectors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/testgen/gen_base58_test_vectors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/testgen/gen_base58_test_vectors.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,126 +0,0 @@\n-#!/usr/bin/env python\n-'''\n-Generate valid and invalid base58 address and private key test vectors.\n-\n-Usage: \n-    gen_base58_test_vectors.py valid 50 > ../../src/test/data/base58_keys_valid.json\n-    gen_base58_test_vectors.py invalid 50 > ../../src/test/data/base58_keys_invalid.json\n-'''\n-# 2012 Wladimir J. van der Laan\n-# Released under MIT License\n-import os\n-from itertools import islice\n-from base58 import b58encode, b58decode, b58encode_chk, b58decode_chk, b58chars\n-import random\n-from binascii import b2a_hex\n-\n-# key types\n-PUBKEY_ADDRESS = 0\n-SCRIPT_ADDRESS = 5\n-PUBKEY_ADDRESS_TEST = 111\n-SCRIPT_ADDRESS_TEST = 196\n-PRIVKEY = 128\n-PRIVKEY_TEST = 239\n-\n-metadata_keys = ['isPrivkey', 'isTestnet', 'addrType', 'isCompressed']\n-# templates for valid sequences\n-templates = [\n-  # prefix, payload_size, suffix, metadata\n-  #                                  None = N/A\n-  ((PUBKEY_ADDRESS,),      20, (),   (False, False, 'pubkey', None)),\n-  ((SCRIPT_ADDRESS,),      20, (),   (False, False, 'script',  None)),\n-  ((PUBKEY_ADDRESS_TEST,), 20, (),   (False, True,  'pubkey', None)),\n-  ((SCRIPT_ADDRESS_TEST,), 20, (),   (False, True,  'script',  None)),\n-  ((PRIVKEY,),             32, (),   (True,  False, None,  False)),\n-  ((PRIVKEY,),             32, (1,), (True,  False, None,  True)),\n-  ((PRIVKEY_TEST,),        32, (),   (True,  True,  None,  False)),\n-  ((PRIVKEY_TEST,),        32, (1,), (True,  True,  None,  True))\n-]\n-\n-def is_valid(v):\n-    '''Check vector v for validity'''\n-    result = b58decode_chk(v)\n-    if result is None:\n-        return False\n-    valid = False\n-    for template in templates:\n-        prefix = str(bytearray(template[0]))\n-        suffix = str(bytearray(template[2]))\n-        if result.startswith(prefix) and result.endswith(suffix):\n-            if (len(result) - len(prefix) - len(suffix)) == template[1]:\n-                return True\n-    return False\n-\n-def gen_valid_vectors():\n-    '''Generate valid test vectors'''\n-    while True:\n-        for template in templates:\n-            prefix = str(bytearray(template[0]))\n-            payload = os.urandom(template[1]) \n-            suffix = str(bytearray(template[2]))\n-            rv = b58encode_chk(prefix + payload + suffix)\n-            assert is_valid(rv)\n-            metadata = dict([(x,y) for (x,y) in zip(metadata_keys,template[3]) if y is not None])\n-            yield (rv, b2a_hex(payload), metadata)\n-\n-def gen_invalid_vector(template, corrupt_prefix, randomize_payload_size, corrupt_suffix):\n-    '''Generate possibly invalid vector'''\n-    if corrupt_prefix:\n-        prefix = os.urandom(1)\n-    else:\n-        prefix = str(bytearray(template[0]))\n-    \n-    if randomize_payload_size:\n-        payload = os.urandom(max(int(random.expovariate(0.5)), 50))\n-    else:\n-        payload = os.urandom(template[1])\n-    \n-    if corrupt_suffix:\n-        suffix = os.urandom(len(template[2]))\n-    else:\n-        suffix = str(bytearray(template[2]))\n-\n-    return b58encode_chk(prefix + payload + suffix)\n-\n-def randbool(p = 0.5):\n-    '''Return True with P(p)'''\n-    return random.random() < p\n-\n-def gen_invalid_vectors():\n-    '''Generate invalid test vectors'''\n-    # start with some manual edge-cases\n-    yield \"\",\n-    yield \"x\",\n-    while True:\n-        # kinds of invalid vectors:\n-        #   invalid prefix\n-        #   invalid payload length\n-        #   invalid (randomized) suffix (add random data)\n-        #   corrupt checksum\n-        for template in templates:\n-            val = gen_invalid_vector(template, randbool(0.2), randbool(0.2), randbool(0.2))\n-            if random.randint(0,10)<1: # line corruption\n-                if randbool(): # add random character to end\n-                    val += random.choice(b58chars)\n-                else: # replace random character in the middle\n-                    n = random.randint(0, len(val))\n-                    val = val[0:n] + random.choice(b58chars) + val[n+1:]\n-            if not is_valid(val):\n-                yield val,\n-\n-if __name__ == '__main__':\n-    import sys, json\n-    iters = {'valid':gen_valid_vectors, 'invalid':gen_invalid_vectors}\n-    try:\n-        uiter = iters[sys.argv[1]]\n-    except IndexError:\n-        uiter = gen_valid_vectors\n-    try:\n-        count = int(sys.argv[2])\n-    except IndexError:\n-        count = 0\n-   \n-    data = list(islice(uiter(), count))\n-    json.dump(data, sys.stdout, sort_keys=True, indent=4)\n-    sys.stdout.write('\\n')\n-"
      },
      {
        "sha": "5d6d8264442fb8b49aa3d1e1c4c0547e2fb29dad",
        "filename": "contrib/tidy_datadir.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 59,
        "changes": 59,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/tidy_datadir.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/tidy_datadir.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/tidy_datadir.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,59 +0,0 @@\n-#!/bin/bash\n-\n-if [ -d \"$1\" ]; then\n-  cd \"$1\"\n-else\n-  echo \"Usage: $0 <datadir>\" >&2\n-  echo \"Removes obsolete Bitcoin database files\" >&2\n-  exit 1\n-fi\n-\n-LEVEL=0\n-if [ -f wallet.dat -a -f addr.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=1; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f blkindex.dat -a -f blk0001.dat ]; then LEVEL=2; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f coins/CURRENT -a -f blktree/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=3; fi\n-if [ -f wallet.dat -a -f peers.dat -a -f chainstate/CURRENT -a -f blocks/index/CURRENT -a -f blocks/blk00000.dat ]; then LEVEL=4; fi\n-\n-case $LEVEL in\n-  0)\n-    echo \"Error: no Bitcoin datadir detected.\"\n-    exit 1\n-    ;;\n-  1)\n-    echo \"Detected old Bitcoin datadir (before 0.7).\"\n-    echo \"Nothing to do.\"\n-    exit 0\n-    ;;\n-  2)\n-    echo \"Detected Bitcoin 0.7 datadir.\"\n-    ;;\n-  3)\n-    echo \"Detected Bitcoin pre-0.8 datadir.\"\n-    ;;\n-  4)\n-    echo \"Detected Bitcoin 0.8 datadir.\"\n-    ;;\n-esac\n-\n-FILES=\"\"\n-DIRS=\"\"\n-\n-if [ $LEVEL -ge 3 ]; then FILES=$(echo $FILES blk????.dat blkindex.dat); fi\n-if [ $LEVEL -ge 2 ]; then FILES=$(echo $FILES addr.dat); fi\n-if [ $LEVEL -ge 4 ]; then DIRS=$(echo $DIRS coins blktree); fi\n-\n-for FILE in $FILES; do\n-  if [ -f $FILE ]; then\n-    echo \"Deleting: $FILE\"\n-    rm -f $FILE\n-  fi\n-done\n-\n-for DIR in $DIRS; do\n-  if [ -d $DIR ]; then\n-    echo \"Deleting: $DIR/\"\n-    rm -rf $DIR\n-  fi\n-done\n-\n-echo \"Done.\""
      },
      {
        "sha": "31aeb8f3d38bb6004a891cea0aa04ed51a4a5973",
        "filename": "contrib/verify-commits/allow-revsig-commits",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/allow-revsig-commits",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/allow-revsig-commits",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/allow-revsig-commits?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,2 +0,0 @@\n-586a29253dabec3ca0f1ccba9091daabd16b8411\n-eddaba7b5692288087a926da5733e86b47274e4e"
      },
      {
        "sha": "0218b82e11dd3bf8cc1fb8f5d24f4704c9a2cfc0",
        "filename": "contrib/verify-commits/gpg.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 33,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/gpg.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/gpg.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/gpg.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,33 +0,0 @@\n-#!/bin/sh\n-INPUT=$(</dev/stdin)\n-VALID=false\n-REVSIG=false\n-IFS=$'\\n'\n-for LINE in $(echo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null); do\n-\tcase \"$LINE\" in\n-\t\"[GNUPG:] VALIDSIG \"*)\n-\t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] VALIDSIG $KEY \"*) VALID=true;; esac\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n-\t\t;;\n-\t\"[GNUPG:] REVKEYSIG \"*)\n-\t\t[ \"$BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG\" != 1 ] && exit 1\n-\t\twhile read KEY; do\n-\t\t\tcase \"$LINE\" in \"[GNUPG:] REVKEYSIG ${KEY:24:40} \"*)\n-\t\t\t\tREVSIG=true\n-\t\t\t\tGOODREVSIG=\"[GNUPG:] GOODSIG ${KEY:24:40} \"\n-\t\t\t\t;;\n-\t\t\tesac\n-\t\tdone < ./contrib/verify-commits/trusted-keys\n-\t\t;;\n-\tesac\n-done\n-if ! $VALID; then\n-\texit 1\n-fi\n-if $VALID && $REVSIG; then\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" | grep \"\\[GNUPG:\\] \\(NEWSIG\\|SIG_ID\\|VALIDSIG\\)\" 2>/dev/null\n-\techo \"$GOODREVSIG\"\n-else\n-\techo \"$INPUT\" | gpg --trust-model always \"$@\" 2>/dev/null\n-fi"
      },
      {
        "sha": "c57222818ab8a3deb8a78a338e6792f204f97c91",
        "filename": "contrib/verify-commits/pre-push-hook.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/pre-push-hook.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/pre-push-hook.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/pre-push-hook.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,16 +0,0 @@\n-#!/bin/bash\n-if ! [[ \"$2\" =~ ^(git@)?(www.)?github.com(:|/)bitcoin/bitcoin(.git)?$ ]]; then\n-    exit 0\n-fi\n-\n-while read LINE; do\n-    set -- A $LINE\n-    if [ \"$4\" != \"refs/heads/master\" ]; then\n-        continue\n-    fi\n-    if ! ./contrib/verify-commits/verify-commits.sh $3 > /dev/null 2>&1; then\n-        echo \"ERROR: A commit is not signed, can't push\"\n-        ./contrib/verify-commits/verify-commits.sh\n-        exit 1\n-    fi\n-done < /dev/stdin"
      },
      {
        "sha": "838b8d1ea84bd02a1bc790d3587ed2b37a171f67",
        "filename": "contrib/verify-commits/trusted-git-root",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/trusted-git-root",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/trusted-git-root",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-git-root?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1 +0,0 @@\n-165e323d851cc87213c7673c6f278e87a6f2e752"
      },
      {
        "sha": "a0d0f82db3f4343a221111c1eeef0489bbba22b9",
        "filename": "contrib/verify-commits/trusted-keys",
        "status": "removed",
        "additions": 0,
        "deletions": 7,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/trusted-keys",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/trusted-keys",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/trusted-keys?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,7 +0,0 @@\n-71A3B16735405025D447E8F274810B012346C9A6\n-1F4410F6A89268CE3197A84C57896D2FF8F0B657\n-01CDF4627A3B88AAE4A571C87588242FBE38D3A8\n-AF8BE07C7049F3A26B239D5325B3083201782B2F\n-81291FA67D2C379A006A053FEAB5AF94D9E9ABE7\n-3F1888C6DCA92A6499C4911FDBA1A67379A1A931\n-32EE5C4C3FA15CCADB46ABE529D4BCB6416F53EC"
      },
      {
        "sha": "9ba781008a6585699bdf515a52e340f9c56d10a8",
        "filename": "contrib/verify-commits/verify-commits.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 63,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/verify-commits.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verify-commits/verify-commits.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verify-commits/verify-commits.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,63 +0,0 @@\n-#!/bin/sh\n-\n-DIR=$(dirname \"$0\")\n-\n-echo \"Please verify all commits in the following list are not evil:\"\n-git log \"$DIR\"\n-\n-VERIFIED_ROOT=$(cat \"${DIR}/trusted-git-root\")\n-\n-IS_REVSIG_ALLOWED () {\n-\twhile read LINE; do\n-\t\t[ \"$LINE\" = \"$1\" ] && return 0\n-\tdone < \"${DIR}/allow-revsig-commits\"\n-\treturn 1\n-}\n-\n-HAVE_FAILED=false\n-IS_SIGNED () {\n-\tif [ $1 = $VERIFIED_ROOT ]; then\n-\t\treturn 0;\n-\tfi\n-\tif IS_REVSIG_ALLOWED \"$1\"; then\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=1\n-\telse\n-\t\texport BITCOIN_VERIFY_COMMITS_ALLOW_REVSIG=0\n-\tfi\n-\tif ! git -c \"gpg.program=${DIR}/gpg.sh\" verify-commit $1 > /dev/null 2>&1; then\n-\t\treturn 1;\n-\tfi\n-\tlocal PARENTS=$(git show -s --format=format:%P $1)\n-\tfor PARENT in $PARENTS; do\n-\t\tif IS_SIGNED $PARENT > /dev/null; then\n-\t\t\treturn 0;\n-\t\tfi\n-\tdone\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"No parent of $1 was signed with a trusted key!\" > /dev/stderr\n-\t\techo \"Parents are:\" > /dev/stderr\n-\t\tfor PARENT in $PARENTS; do\n-\t\t\tgit show -s $PARENT > /dev/stderr\n-\t\tdone\n-\t\tHAVE_FAILED=true\n-\tfi\n-\treturn 1;\n-}\n-\n-if [ x\"$1\" = \"x\" ]; then\n-\tTEST_COMMIT=\"HEAD\"\n-else\n-\tTEST_COMMIT=\"$1\"\n-fi\n-\n-IS_SIGNED \"$TEST_COMMIT\"\n-RES=$?\n-if [ \"$RES\" = 1 ]; then\n-\tif ! \"$HAVE_FAILED\"; then\n-\t\techo \"$TEST_COMMIT was not signed with a trusted key!\"\n-\tfi\n-else\n-\techo \"There is a valid path from $TEST_COMMIT to $VERIFIED_ROOT where all commits are signed!\"\n-fi\n-\n-exit $RES"
      },
      {
        "sha": "8c038865bdaff592aed1cd8757733b4a78e23507",
        "filename": "contrib/verifysfbinaries/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verifysfbinaries/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verifysfbinaries/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,6 +0,0 @@\n-### Verify SF Binaries ###\n-This script attempts to download the signature file `SHA256SUMS.asc` from https://bitcoin.org.\n-\n-It first checks if the signature passes, and then downloads the files specified in the file, and checks if the hashes of these files match those that are specified in the signature file.\n-\n-The script returns 0 if everything passes the checks. It returns 1 if either the signature check or the hash check doesn't pass. If an error occurs the return value is 2.\n\\ No newline at end of file"
      },
      {
        "sha": "847c5075530571ad9e44234a82d53a52de841e1c",
        "filename": "contrib/verifysfbinaries/verify.sh",
        "status": "removed",
        "additions": 0,
        "deletions": 121,
        "changes": 121,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verifysfbinaries/verify.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/verifysfbinaries/verify.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/verifysfbinaries/verify.sh?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,121 +0,0 @@\n-#!/bin/bash\n-\n-###   This script attempts to download the signature file SHA256SUMS.asc from bitcoin.org\n-###   It first checks if the signature passes, and then downloads the files specified in\n-###   the file, and checks if the hashes of these files match those that are specified\n-###   in the signature file.\n-###   The script returns 0 if everything passes the checks. It returns 1 if either the\n-###   signature check or the hash check doesn't pass. If an error occurs the return value is 2\n-\n-function clean_up {\n-   for file in $*\n-   do\n-      rm \"$file\" 2> /dev/null\n-   done\n-}\n-\n-WORKINGDIR=\"/tmp/bitcoin\"\n-TMPFILE=\"hashes.tmp\"\n-\n-SIGNATUREFILENAME=\"SHA256SUMS.asc\"\n-RCSUBDIR=\"test/\"\n-BASEDIR=\"https://bitcoin.org/bin/\"\n-VERSIONPREFIX=\"bitcoin-core-\"\n-RCVERSIONSTRING=\"rc\"\n-\n-#this URL is used if a version number is not specified as an argument to the script\n-SIGNATUREFILE=\"$BASEDIR\"\"$VERSIONPREFIX\"\"0.10.4/\"\"$RCSUBDIR\"\"$SIGNATUREFILENAME\"\n-\n-if [ ! -d \"$WORKINGDIR\" ]; then\n-   mkdir \"$WORKINGDIR\"\n-fi\n-\n-cd \"$WORKINGDIR\"\n-\n-#test if a version number has been passed as an argument\n-if [ -n \"$1\" ]; then\n-   #let's also check if the version number includes the prefix 'bitcoin-',\n-   #  and add this prefix if it doesn't\n-   if [[ $1 == \"$VERSIONPREFIX\"* ]]; then\n-      VERSION=\"$1\"\n-   else\n-      VERSION=\"$VERSIONPREFIX$1\"\n-   fi\n-\n-   #now let's see if the version string contains \"rc\", and strip it off if it does\n-   #  and simultaneously add RCSUBDIR to BASEDIR, where we will look for SIGNATUREFILENAME\n-   if [[ $VERSION == *\"$RCVERSIONSTRING\"* ]]; then\n-      BASEDIR=\"$BASEDIR${VERSION/%-$RCVERSIONSTRING*}/\"\n-      BASEDIR=\"$BASEDIR$RCSUBDIR\"\n-   else\n-      BASEDIR=\"$BASEDIR$VERSION/\"\n-   fi\n-\n-   SIGNATUREFILE=\"$BASEDIR$SIGNATUREFILENAME\"\n-else\n-   BASEDIR=\"${SIGNATUREFILE%/*}/\"\n-fi\n-\n-#first we fetch the file containing the signature\n-WGETOUT=$(wget -N \"$BASEDIR$SIGNATUREFILENAME\" 2>&1)\n-\n-#and then see if wget completed successfully\n-if [ $? -ne 0 ]; then\n-   echo \"Error: couldn't fetch signature file. Have you specified the version number in the following format?\"\n-   echo \"[$VERSIONPREFIX]<version>-[$RCVERSIONSTRING[0-9]] (example: \"$VERSIONPREFIX\"0.10.4-\"$RCVERSIONSTRING\"1)\"\n-   echo \"wget output:\"\n-   echo \"$WGETOUT\"|sed 's/^/\\t/g'\n-   exit 2\n-fi\n-\n-#then we check it\n-GPGOUT=$(gpg --yes --decrypt --output \"$TMPFILE\" \"$SIGNATUREFILENAME\" 2>&1)\n-\n-#return value 0: good signature\n-#return value 1: bad signature\n-#return value 2: gpg error\n-\n-RET=\"$?\"\n-if [ $RET -ne 0 ]; then\n-   if [ $RET -eq 1 ]; then\n-      #and notify the user if it's bad\n-      echo \"Bad signature.\"\n-   elif [ $RET -eq 2 ]; then\n-      #or if a gpg error has occurred\n-      echo \"gpg error. Do you have the Bitcoin Core binary release signing key installed?\"\n-   fi\n-\n-   echo \"gpg output:\"\n-   echo \"$GPGOUT\"|sed 's/^/\\t/g'\n-   clean_up $SIGNATUREFILENAME $TMPFILE\n-   exit \"$RET\"\n-fi\n-\n-#here we extract the filenames from the signature file\n-FILES=$(awk '{print $2}' \"$TMPFILE\")\n-\n-#and download these one by one\n-for file in in $FILES\n-do\n-   wget --quiet -N \"$BASEDIR$file\"\n-done\n-\n-#check hashes\n-DIFF=$(diff <(sha256sum $FILES) \"$TMPFILE\")\n-\n-if [ $? -eq 1 ]; then\n-   echo \"Hashes don't match.\"\n-   echo \"Offending files:\"\n-   echo \"$DIFF\"|grep \"^<\"|awk '{print \"\\t\"$3}'\n-   exit 1\n-elif [ $? -gt 1 ]; then\n-   echo \"Error executing 'diff'\"\n-   exit 2   \n-fi\n-\n-#everything matches! clean up the mess\n-clean_up $FILES $SIGNATUREFILENAME $TMPFILE\n-\n-echo -e \"Verified hashes of \\n$FILES\"\n-\n-exit 0"
      },
      {
        "sha": "30f3f5b26a14a4bcee3ec79d958fd58d8ed00fff",
        "filename": "contrib/wallettools/walletchangepass.py",
        "status": "added",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/wallettools/walletchangepass.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/wallettools/walletchangepass.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletchangepass.py?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,5 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter old wallet passphrase: \")\n+pwd2 = raw_input(\"Enter new wallet passphrase: \")\n+access.walletpassphrasechange(pwd, pwd2)\n\\ No newline at end of file"
      },
      {
        "sha": "f847c6fe61a931d6a3a1cf2c36d8a37080957317",
        "filename": "contrib/wallettools/walletunlock.py",
        "status": "added",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/wallettools/walletunlock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/contrib/wallettools/walletunlock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/wallettools/walletunlock.py?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "patch": "@@ -0,0 +1,4 @@\n+from jsonrpc import ServiceProxy\n+access = ServiceProxy(\"http://127.0.0.1:8332\")\n+pwd = raw_input(\"Enter wallet passphrase: \")\n+access.walletpassphrase(pwd, 60)\n\\ No newline at end of file"
      },
      {
        "sha": "decf29d42a4c11b8c6f60a32829e9e040d4b6aa0",
        "filename": "contrib/zmq/zmq_sub.py",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/zmq/zmq_sub.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/contrib/zmq/zmq_sub.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/zmq/zmq_sub.py?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,37 +0,0 @@\n-#!/usr/bin/env python2\n-\n-import array\n-import binascii\n-import zmq\n-\n-port = 28332\n-\n-zmqContext = zmq.Context()\n-zmqSubSocket = zmqContext.socket(zmq.SUB)\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"hashtx\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawblock\")\n-zmqSubSocket.setsockopt(zmq.SUBSCRIBE, \"rawtx\")\n-zmqSubSocket.connect(\"tcp://127.0.0.1:%i\" % port)\n-\n-try:\n-    while True:\n-        msg = zmqSubSocket.recv_multipart()\n-        topic = str(msg[0])\n-        body = msg[1]\n-\n-        if topic == \"hashblock\":\n-            print \"- HASH BLOCK -\"\n-            print binascii.hexlify(body)\n-        elif topic == \"hashtx\":\n-            print '- HASH TX -'\n-            print binascii.hexlify(body)\n-        elif topic == \"rawblock\":\n-            print \"- RAW BLOCK HEADER -\"\n-            print binascii.hexlify(body[:80])\n-        elif topic == \"rawtx\":\n-            print '- RAW TX -'\n-            print binascii.hexlify(body)\n-\n-except KeyboardInterrupt:\n-    zmqContext.destroy()"
      },
      {
        "sha": "1f163897b9ef70c68bef39aba3bac5092b0aedd3",
        "filename": "depends/.gitignore",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/.gitignore?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,9 +0,0 @@\n-SDKs/\n-work/\n-built/\n-sources/\n-config.site\n-x86_64*\n-i686*\n-mips*\n-arm*"
      },
      {
        "sha": "ef5a20e6c36aa9c9cbb0fa9334ec8d24824a0bc2",
        "filename": "depends/Makefile",
        "status": "removed",
        "additions": 0,
        "deletions": 161,
        "changes": 161,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/Makefile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/Makefile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/Makefile?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,161 +0,0 @@\n-.NOTPARALLEL :\n-\n-SOURCES_PATH ?= $(BASEDIR)/sources\n-BASE_CACHE ?= $(BASEDIR)/built\n-SDK_PATH ?= $(BASEDIR)/SDKs\n-NO_QT ?=\n-NO_WALLET ?=\n-NO_UPNP ?=\n-FALLBACK_DOWNLOAD_PATH ?= https://bitcoincore.org/depends-sources\n-\n-BUILD = $(shell ./config.guess)\n-HOST ?= $(BUILD)\n-PATCHES_PATH = $(BASEDIR)/patches\n-BASEDIR = $(CURDIR)\n-HASH_LENGTH:=11\n-DOWNLOAD_CONNECT_TIMEOUT:=10\n-DOWNLOAD_RETRIES:=3\n-\n-host:=$(BUILD)\n-ifneq ($(HOST),)\n-host:=$(HOST)\n-host_toolchain:=$(HOST)-\n-endif\n-\n-ifneq ($(DEBUG),)\n-release_type=debug\n-else\n-release_type=release\n-endif\n-\n-base_build_dir=$(BASEDIR)/work/build\n-base_staging_dir=$(BASEDIR)/work/staging\n-base_download_dir=$(BASEDIR)/work/download\n-canonical_host:=$(shell ./config.sub $(HOST))\n-build:=$(shell ./config.sub $(BUILD))\n-\n-build_arch =$(firstword $(subst -, ,$(build)))\n-build_vendor=$(word 2,$(subst -, ,$(build)))\n-full_build_os:=$(subst $(build_arch)-$(build_vendor)-,,$(build))\n-build_os:=$(findstring linux,$(full_build_os))\n-build_os+=$(findstring darwin,$(full_build_os))\n-build_os:=$(strip $(build_os))\n-ifeq ($(build_os),)\n-build_os=$(full_build_os)\n-endif\n-\n-host_arch=$(firstword $(subst -, ,$(canonical_host)))\n-host_vendor=$(word 2,$(subst -, ,$(canonical_host)))\n-full_host_os:=$(subst $(host_arch)-$(host_vendor)-,,$(canonical_host))\n-host_os:=$(findstring linux,$(full_host_os))\n-host_os+=$(findstring darwin,$(full_host_os))\n-host_os+=$(findstring mingw32,$(full_host_os))\n-host_os:=$(strip $(host_os))\n-ifeq ($(host_os),)\n-host_os=$(full_host_os)\n-endif\n-\n-$(host_arch)_$(host_os)_prefix=$(BASEDIR)/$(host)\n-$(host_arch)_$(host_os)_host=$(host)\n-host_prefix=$($(host_arch)_$(host_os)_prefix)\n-build_prefix=$(host_prefix)/native\n-build_host=$(build)\n-\n-AT_$(V):=\n-AT_:=@\n-AT:=$(AT_$(V))\n-\n-all: install\n-\n-include hosts/$(host_os).mk\n-include hosts/default.mk\n-include builders/$(build_os).mk\n-include builders/default.mk\n-include packages/packages.mk\n-\n-qt_packages_$(NO_QT) = $(qt_packages) $(qt_$(host_os)_packages)\n-qt_native_packages_$(NO_QT) = $(qt_native_packages)\n-wallet_packages_$(NO_WALLET) = $(wallet_packages)\n-upnp_packages_$(NO_UPNP) = $(upnp_packages)\n-\n-packages += $($(host_arch)_$(host_os)_packages) $($(host_os)_packages) $(qt_packages_) $(wallet_packages_) $(upnp_packages_)\n-native_packages += $($(host_arch)_$(host_os)_native_packages) $($(host_os)_native_packages) $(qt_native_packages_)\n-all_packages = $(packages) $(native_packages)\n-\n-meta_depends = Makefile funcs.mk builders/default.mk hosts/default.mk hosts/$(host_os).mk builders/$(build_os).mk\n-\n-$(host_arch)_$(host_os)_native_toolchain?=$($(host_os)_native_toolchain)\n-\n-include funcs.mk\n-\n-toolchain_path=$($($(host_arch)_$(host_os)_native_toolchain)_prefixbin)\n-final_build_id_long+=$(shell $(build_SHA256SUM) config.site.in)\n-final_build_id+=$(shell echo -n $(final_build_id_long) | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH))\n-$(host_prefix)/.stamp_$(final_build_id): $(native_packages) $(packages)\n-\t$(AT)rm -rf $(@D)\n-\t$(AT)mkdir -p $(@D)\n-\t$(AT)echo copying packages: $^\n-\t$(AT)echo to: $(@D)\n-\t$(AT)cd $(@D); $(foreach package,$^, tar xf $($(package)_cached); )\n-\t$(AT)touch $@\n-\n-$(host_prefix)/share/config.site : config.site.in $(host_prefix)/.stamp_$(final_build_id)\n-\t$(AT)@mkdir -p $(@D)\n-\t$(AT)sed -e 's|@HOST@|$(host)|' \\\n-            -e 's|@CC@|$(toolchain_path)$(host_CC)|' \\\n-            -e 's|@CXX@|$(toolchain_path)$(host_CXX)|' \\\n-            -e 's|@AR@|$(toolchain_path)$(host_AR)|' \\\n-            -e 's|@RANLIB@|$(toolchain_path)$(host_RANLIB)|' \\\n-            -e 's|@NM@|$(toolchain_path)$(host_NM)|' \\\n-            -e 's|@STRIP@|$(toolchain_path)$(host_STRIP)|' \\\n-            -e 's|@build_os@|$(build_os)|' \\\n-            -e 's|@host_os@|$(host_os)|' \\\n-            -e 's|@CFLAGS@|$(strip $(host_CFLAGS) $(host_$(release_type)_CFLAGS))|' \\\n-            -e 's|@CXXFLAGS@|$(strip $(host_CXXFLAGS) $(host_$(release_type)_CXXFLAGS))|' \\\n-            -e 's|@CPPFLAGS@|$(strip $(host_CPPFLAGS) $(host_$(release_type)_CPPFLAGS))|' \\\n-            -e 's|@LDFLAGS@|$(strip $(host_LDFLAGS) $(host_$(release_type)_LDFLAGS))|' \\\n-            -e 's|@no_qt@|$(NO_QT)|' \\\n-            -e 's|@no_wallet@|$(NO_WALLET)|' \\\n-            -e 's|@no_upnp@|$(NO_UPNP)|' \\\n-            -e 's|@debug@|$(DEBUG)|' \\\n-            $< > $@\n-\t$(AT)touch $@\n-\n-\n-define check_or_remove_cached\n-  mkdir -p $(BASE_CACHE)/$(host)/$(package) && cd $(BASE_CACHE)/$(host)/$(package); \\\n-  $(build_SHA256SUM) -c $($(package)_cached_checksum) >/dev/null 2>/dev/null || \\\n-  ( rm -f $($(package)_cached_checksum); \\\n-    if test -f \"$($(package)_cached)\"; then echo \"Checksum mismatch for $(package). Forcing rebuild..\"; rm -f $($(package)_cached_checksum) $($(package)_cached); fi )\n-endef\n-\n-define check_or_remove_sources\n-  mkdir -p $($(package)_source_dir); cd $($(package)_source_dir); \\\n-  $(build_SHA256SUM) -c $($(package)_fetched) >/dev/null 2>/dev/null || \\\n-    ( if test -f $($(package)_all_sources); then echo \"Checksum missing or mismatched for $(package) source. Forcing re-download.\"; fi; \\\n-      rm -f $($(package)_all_sources) $($(1)_fetched))\n-endef\n-\n-check-packages:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_cached,$(package));)\n-check-sources:\n-\t@$(foreach package,$(all_packages),$(call check_or_remove_sources,$(package));)\n-\n-$(host_prefix)/share/config.site: check-packages\n-\n-check-packages: check-sources\n-\n-install: check-packages $(host_prefix)/share/config.site\n-\n-\n-download-one: check-sources $(all_sources)\n-\n-download-osx:\n-\t@$(MAKE) -s HOST=x86_64-apple-darwin11 download-one\n-download-linux:\n-\t@$(MAKE) -s HOST=x86_64-unknown-linux-gnu download-one\n-download-win:\n-\t@$(MAKE) -s HOST=x86_64-w64-mingw32 download-one\n-download: download-osx download-linux download-win\n-\n-.PHONY: install cached download-one download-osx download-linux download-win download check-packages check-sources"
      },
      {
        "sha": "d85e652c60f23810bef2dca5b32c22b2c1b6946b",
        "filename": "depends/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 56,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,56 +0,0 @@\n-### Usage\n-\n-To build dependencies for the current arch+OS:\n-\n-    make\n-\n-To build for another arch/OS:\n-\n-    make HOST=host-platform-triplet\n-\n-For example:\n-\n-    make HOST=x86_64-w64-mingw32 -j4\n-\n-A prefix will be generated that's suitable for plugging into Bitcoin's\n-configure. In the above example, a dir named x86_64-w64-mingw32 will be\n-created. To use it for Bitcoin:\n-\n-    ./configure --prefix=`pwd`/depends/x86_64-w64-mingw32\n-\n-Common `host-platform-triplets` for cross compilation are:\n-\n-- `i686-w64-mingw32` for Win32\n-- `x86_64-w64-mingw32` for Win64\n-- `x86_64-apple-darwin11` for MacOSX\n-- `arm-linux-gnueabihf` for Linux ARM\n-\n-No other options are needed, the paths are automatically configured.\n-\n-Dependency Options:\n-The following can be set when running make: make FOO=bar\n-\n-    SOURCES_PATH: downloaded sources will be placed here\n-    BASE_CACHE: built packages will be placed here\n-    SDK_PATH: Path where sdk's can be found (used by OSX)\n-    FALLBACK_DOWNLOAD_PATH: If a source file can't be fetched, try here before giving up\n-    NO_QT: Don't download/build/cache qt and its dependencies\n-    NO_WALLET: Don't download/build/cache libs needed to enable the wallet\n-    NO_UPNP: Don't download/build/cache packages needed for enabling upnp\n-    DEBUG: disable some optimizations and enable more runtime checking\n-\n-If some packages are not built, for example `make NO_WALLET=1`, the appropriate\n-options will be passed to bitcoin's configure. In this case, `--disable-wallet`.\n-\n-Additional targets:\n-\n-    download: run 'make download' to fetch all sources without building them\n-    download-osx: run 'make download-osx' to fetch all sources needed for osx builds\n-    download-win: run 'make download-win' to fetch all sources needed for win builds\n-    download-linux: run 'make download-linux' to fetch all sources needed for linux builds\n-\n-### Other documentation\n-\n-- [description.md](description.md): General description of the depends system\n-- [packages.md](packages.md): Steps for adding packages\n-"
      },
      {
        "sha": "b366460e64bc14e4971f5006e4cdfde7de3237a4",
        "filename": "depends/builders/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/darwin.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-build_darwin_CC: = $(shell xcrun -f clang)\n-build_darwin_CXX: = $(shell xcrun -f clang++)\n-build_darwin_AR: = $(shell xcrun -f ar)\n-build_darwin_RANLIB: = $(shell xcrun -f ranlib)\n-build_darwin_STRIP: = $(shell xcrun -f strip)\n-build_darwin_OTOOL: = $(shell xcrun -f otool)\n-build_darwin_NM: = $(shell xcrun -f nm)\n-build_darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-build_darwin_SHA256SUM = shasum -a 256\n-build_darwin_DOWNLOAD = curl --connect-timeout $(DOWNLOAD_CONNECT_TIMEOUT) --retry $(DOWNLOAD_RETRIES) -L -o\n-\n-#darwin host on darwin builder. overrides darwin host preferences.\n-darwin_CC=$(shell xcrun -f clang) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_CXX:=$(shell xcrun -f clang++) -mmacosx-version-min=$(OSX_MIN_VERSION)\n-darwin_AR:=$(shell xcrun -f ar)\n-darwin_RANLIB:=$(shell xcrun -f ranlib)\n-darwin_STRIP:=$(shell xcrun -f strip)\n-darwin_LIBTOOL:=$(shell xcrun -f libtool)\n-darwin_OTOOL:=$(shell xcrun -f otool)\n-darwin_NM:=$(shell xcrun -f nm)\n-darwin_INSTALL_NAME_TOOL:=$(shell xcrun -f install_name_tool)\n-darwin_native_toolchain="
      },
      {
        "sha": "f097db65d603d596c5ceabeadfe32fa3a296a91d",
        "filename": "depends/builders/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/default.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,20 +0,0 @@\n-default_build_CC = gcc\n-default_build_CXX = g++\n-default_build_AR = ar\n-default_build_RANLIB = ranlib\n-default_build_STRIP = strip\n-default_build_NM = nm\n-default_build_OTOOL = otool\n-default_build_INSTALL_NAME_TOOL = install_name_tool\n-\n-define add_build_tool_func\n-build_$(build_os)_$1 ?= $$(default_build_$1)\n-build_$(build_arch)_$(build_os)_$1 ?= $$(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach var,CC CXX AR RANLIB NM STRIP SHA256SUM DOWNLOAD OTOOL INSTALL_NAME_TOOL,$(eval $(call add_build_tool_func,$(var))))\n-define add_build_flags_func\n-build_$(build_arch)_$(build_os)_$1 += $(build_$(build_os)_$1)\n-build_$1=$$(build_$(build_arch)_$(build_os)_$1)\n-endef\n-$(foreach flags, CFLAGS CXXFLAGS LDFLAGS, $(eval $(call add_build_flags_func,$(flags))))"
      },
      {
        "sha": "98d0e9de348fc860dbfb215c60f9d419d0f15005",
        "filename": "depends/builders/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/builders/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/builders/linux.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,2 +0,0 @@\n-build_linux_SHA256SUM = sha256sum\n-build_linux_DOWNLOAD = wget --timeout=$(DOWNLOAD_CONNECT_TIMEOUT) --tries=$(DOWNLOAD_RETRIES) -nv -O"
      },
      {
        "sha": "fba6e87a0f87a01f14d45bd3b61266c11139eef1",
        "filename": "depends/config.guess",
        "status": "removed",
        "additions": 0,
        "deletions": 1447,
        "changes": 1447,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.guess",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.guess",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.guess?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,1447 +0,0 @@\n-#! /bin/sh\n-# Attempt to guess a canonical system name.\n-#   Copyright 1992-2015 Free Software Foundation, Inc.\n-\n-timestamp='2015-11-19'\n-\n-# This file is free software; you can redistribute it and/or modify it\n-# under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, see <http://www.gnu.org/licenses/>.\n-#\n-# As a special exception to the GNU General Public License, if you\n-# distribute this file as part of a program that contains a\n-# configuration script generated by Autoconf, you may include it under\n-# the same distribution terms that you use for the rest of that\n-# program.  This Exception is an additional permission under section 7\n-# of the GNU General Public License, version 3 (\"GPLv3\").\n-#\n-# Originally written by Per Bothner; maintained since 2000 by Ben Elliston.\n-#\n-# You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n-#\n-# Please send patches to <config-patches@gnu.org>.\n-\n-\n-me=`echo \"$0\" | sed -e 's,.*/,,'`\n-\n-usage=\"\\\n-Usage: $0 [OPTION]\n-\n-Output the configuration name of the system \\`$me' is run on.\n-\n-Operation modes:\n-  -h, --help         print this help, then exit\n-  -t, --time-stamp   print date of last modification, then exit\n-  -v, --version      print version number, then exit\n-\n-Report bugs and patches to <config-patches@gnu.org>.\"\n-\n-version=\"\\\n-GNU config.guess ($timestamp)\n-\n-Originally written by Per Bothner.\n-Copyright 1992-2015 Free Software Foundation, Inc.\n-\n-This is free software; see the source for copying conditions.  There is NO\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n-\n-help=\"\n-Try \\`$me --help' for more information.\"\n-\n-# Parse command line\n-while test $# -gt 0 ; do\n-  case $1 in\n-    --time-stamp | --time* | -t )\n-       echo \"$timestamp\" ; exit ;;\n-    --version | -v )\n-       echo \"$version\" ; exit ;;\n-    --help | --h* | -h )\n-       echo \"$usage\"; exit ;;\n-    -- )     # Stop option processing\n-       shift; break ;;\n-    - )\t# Use stdin as input.\n-       break ;;\n-    -* )\n-       echo \"$me: invalid option $1$help\" >&2\n-       exit 1 ;;\n-    * )\n-       break ;;\n-  esac\n-done\n-\n-if test $# != 0; then\n-  echo \"$me: too many arguments$help\" >&2\n-  exit 1\n-fi\n-\n-trap 'exit 1' 1 2 15\n-\n-# CC_FOR_BUILD -- compiler used by this script. Note that the use of a\n-# compiler to aid in system detection is discouraged as it requires\n-# temporary files to be created and, as you can see below, it is a\n-# headache to deal with in a portable fashion.\n-\n-# Historically, `CC_FOR_BUILD' used to be named `HOST_CC'. We still\n-# use `HOST_CC' if defined, but it is deprecated.\n-\n-# Portable tmp directory creation inspired by the Autoconf team.\n-\n-set_cc_for_build='\n-trap \"exitcode=\\$?; (rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null) && exit \\$exitcode\" 0 ;\n-trap \"rm -f \\$tmpfiles 2>/dev/null; rmdir \\$tmp 2>/dev/null; exit 1\" 1 2 13 15 ;\n-: ${TMPDIR=/tmp} ;\n- { tmp=`(umask 077 && mktemp -d \"$TMPDIR/cgXXXXXX\") 2>/dev/null` && test -n \"$tmp\" && test -d \"$tmp\" ; } ||\n- { test -n \"$RANDOM\" && tmp=$TMPDIR/cg$$-$RANDOM && (umask 077 && mkdir $tmp) ; } ||\n- { tmp=$TMPDIR/cg-$$ && (umask 077 && mkdir $tmp) && echo \"Warning: creating insecure temp directory\" >&2 ; } ||\n- { echo \"$me: cannot create a temporary directory in $TMPDIR\" >&2 ; exit 1 ; } ;\n-dummy=$tmp/dummy ;\n-tmpfiles=\"$dummy.c $dummy.o $dummy.rel $dummy\" ;\n-case $CC_FOR_BUILD,$HOST_CC,$CC in\n- ,,)    echo \"int x;\" > $dummy.c ;\n-\tfor c in cc gcc c89 c99 ; do\n-\t  if ($c -c -o $dummy.o $dummy.c) >/dev/null 2>&1 ; then\n-\t     CC_FOR_BUILD=\"$c\"; break ;\n-\t  fi ;\n-\tdone ;\n-\tif test x\"$CC_FOR_BUILD\" = x ; then\n-\t  CC_FOR_BUILD=no_compiler_found ;\n-\tfi\n-\t;;\n- ,,*)   CC_FOR_BUILD=$CC ;;\n- ,*,*)  CC_FOR_BUILD=$HOST_CC ;;\n-esac ; set_cc_for_build= ;'\n-\n-# This is needed to find uname on a Pyramid OSx when run in the BSD universe.\n-# (ghazi@noc.rutgers.edu 1994-08-24)\n-if (test -f /.attbin/uname) >/dev/null 2>&1 ; then\n-\tPATH=$PATH:/.attbin ; export PATH\n-fi\n-\n-UNAME_MACHINE=`(uname -m) 2>/dev/null` || UNAME_MACHINE=unknown\n-UNAME_RELEASE=`(uname -r) 2>/dev/null` || UNAME_RELEASE=unknown\n-UNAME_SYSTEM=`(uname -s) 2>/dev/null`  || UNAME_SYSTEM=unknown\n-UNAME_VERSION=`(uname -v) 2>/dev/null` || UNAME_VERSION=unknown\n-\n-case \"${UNAME_SYSTEM}\" in\n-Linux|GNU|GNU/*)\n-\t# If the system lacks a compiler, then just pick glibc.\n-\t# We could probably try harder.\n-\tLIBC=gnu\n-\n-\teval $set_cc_for_build\n-\tcat <<-EOF > $dummy.c\n-\t#include <features.h>\n-\t#if defined(__UCLIBC__)\n-\tLIBC=uclibc\n-\t#elif defined(__dietlibc__)\n-\tLIBC=dietlibc\n-\t#else\n-\tLIBC=gnu\n-\t#endif\n-\tEOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^LIBC' | sed 's, ,,g'`\n-\t;;\n-esac\n-\n-# Note: order is significant - the case branches are not exclusive.\n-\n-case \"${UNAME_MACHINE}:${UNAME_SYSTEM}:${UNAME_RELEASE}:${UNAME_VERSION}\" in\n-    *:NetBSD:*:*)\n-\t# NetBSD (nbsd) targets should (where applicable) match one or\n-\t# more of the tuples: *-*-netbsdelf*, *-*-netbsdaout*,\n-\t# *-*-netbsdecoff* and *-*-netbsd*.  For targets that recently\n-\t# switched to ELF, *-*-netbsd* would select the old\n-\t# object file format.  This provides both forward\n-\t# compatibility and a consistent mechanism for selecting the\n-\t# object file format.\n-\t#\n-\t# Note: NetBSD doesn't particularly care about the vendor\n-\t# portion of the name.  We always set it to \"unknown\".\n-\tsysctl=\"sysctl -n hw.machine_arch\"\n-\tUNAME_MACHINE_ARCH=`(uname -p 2>/dev/null || \\\n-\t    /sbin/$sysctl 2>/dev/null || \\\n-\t    /usr/sbin/$sysctl 2>/dev/null || \\\n-\t    echo unknown)`\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n-\t    armeb) machine=armeb-unknown ;;\n-\t    arm*) machine=arm-unknown ;;\n-\t    sh3el) machine=shl-unknown ;;\n-\t    sh3eb) machine=sh-unknown ;;\n-\t    sh5el) machine=sh5le-unknown ;;\n-\t    earmv*)\n-\t\tarch=`echo ${UNAME_MACHINE_ARCH} | sed -e 's,^e\\(armv[0-9]\\).*$,\\1,'`\n-\t\tendian=`echo ${UNAME_MACHINE_ARCH} | sed -ne 's,^.*\\(eb\\)$,\\1,p'`\n-\t\tmachine=${arch}${endian}-unknown\n-\t\t;;\n-\t    *) machine=${UNAME_MACHINE_ARCH}-unknown ;;\n-\tesac\n-\t# The Operating System including object format, if it has switched\n-\t# to ELF recently, or will in the future.\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n-\t    arm*|earm*|i386|m68k|ns32k|sh3*|sparc|vax)\n-\t\teval $set_cc_for_build\n-\t\tif echo __ELF__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n-\t\t\t| grep -q __ELF__\n-\t\tthen\n-\t\t    # Once all utilities can be ECOFF (netbsdecoff) or a.out (netbsdaout).\n-\t\t    # Return netbsd for either.  FIX?\n-\t\t    os=netbsd\n-\t\telse\n-\t\t    os=netbsdelf\n-\t\tfi\n-\t\t;;\n-\t    *)\n-\t\tos=netbsd\n-\t\t;;\n-\tesac\n-\t# Determine ABI tags.\n-\tcase \"${UNAME_MACHINE_ARCH}\" in\n-\t    earm*)\n-\t\texpr='s/^earmv[0-9]/-eabi/;s/eb$//'\n-\t\tabi=`echo ${UNAME_MACHINE_ARCH} | sed -e \"$expr\"`\n-\t\t;;\n-\tesac\n-\t# The OS release\n-\t# Debian GNU/NetBSD machines have a different userland, and\n-\t# thus, need a distinct triplet. However, they do not need\n-\t# kernel version information, so it can be replaced with a\n-\t# suitable tag, in the style of linux-gnu.\n-\tcase \"${UNAME_VERSION}\" in\n-\t    Debian*)\n-\t\trelease='-gnu'\n-\t\t;;\n-\t    *)\n-\t\trelease=`echo ${UNAME_RELEASE} | sed -e 's/[-_].*//' | cut -d. -f1,2`\n-\t\t;;\n-\tesac\n-\t# Since CPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM:\n-\t# contains redundant information, the shorter form:\n-\t# CPU_TYPE-MANUFACTURER-OPERATING_SYSTEM is used.\n-\techo \"${machine}-${os}${release}${abi}\"\n-\texit ;;\n-    *:Bitrig:*:*)\n-\tUNAME_MACHINE_ARCH=`arch | sed 's/Bitrig.//'`\n-\techo ${UNAME_MACHINE_ARCH}-unknown-bitrig${UNAME_RELEASE}\n-\texit ;;\n-    *:OpenBSD:*:*)\n-\tUNAME_MACHINE_ARCH=`arch | sed 's/OpenBSD.//'`\n-\techo ${UNAME_MACHINE_ARCH}-unknown-openbsd${UNAME_RELEASE}\n-\texit ;;\n-    *:ekkoBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-ekkobsd${UNAME_RELEASE}\n-\texit ;;\n-    *:SolidBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-solidbsd${UNAME_RELEASE}\n-\texit ;;\n-    macppc:MirBSD:*:*)\n-\techo powerpc-unknown-mirbsd${UNAME_RELEASE}\n-\texit ;;\n-    *:MirBSD:*:*)\n-\techo ${UNAME_MACHINE}-unknown-mirbsd${UNAME_RELEASE}\n-\texit ;;\n-    *:Sortix:*:*)\n-\techo ${UNAME_MACHINE}-unknown-sortix\n-\texit ;;\n-    alpha:OSF1:*:*)\n-\tcase $UNAME_RELEASE in\n-\t*4.0)\n-\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $3}'`\n-\t\t;;\n-\t*5.*)\n-\t\tUNAME_RELEASE=`/usr/sbin/sizer -v | awk '{print $4}'`\n-\t\t;;\n-\tesac\n-\t# According to Compaq, /usr/sbin/psrinfo has been available on\n-\t# OSF/1 and Tru64 systems produced since 1995.  I hope that\n-\t# covers most systems running today.  This code pipes the CPU\n-\t# types through head -n 1, so we only detect the type of CPU 0.\n-\tALPHA_CPU_TYPE=`/usr/sbin/psrinfo -v | sed -n -e 's/^  The alpha \\(.*\\) processor.*$/\\1/p' | head -n 1`\n-\tcase \"$ALPHA_CPU_TYPE\" in\n-\t    \"EV4 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n-\t    \"EV4.5 (21064)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n-\t    \"LCA4 (21066/21068)\")\n-\t\tUNAME_MACHINE=\"alpha\" ;;\n-\t    \"EV5 (21164)\")\n-\t\tUNAME_MACHINE=\"alphaev5\" ;;\n-\t    \"EV5.6 (21164A)\")\n-\t\tUNAME_MACHINE=\"alphaev56\" ;;\n-\t    \"EV5.6 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca56\" ;;\n-\t    \"EV5.7 (21164PC)\")\n-\t\tUNAME_MACHINE=\"alphapca57\" ;;\n-\t    \"EV6 (21264)\")\n-\t\tUNAME_MACHINE=\"alphaev6\" ;;\n-\t    \"EV6.7 (21264A)\")\n-\t\tUNAME_MACHINE=\"alphaev67\" ;;\n-\t    \"EV6.8CB (21264C)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n-\t    \"EV6.8AL (21264B)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n-\t    \"EV6.8CX (21264D)\")\n-\t\tUNAME_MACHINE=\"alphaev68\" ;;\n-\t    \"EV6.9A (21264/EV69A)\")\n-\t\tUNAME_MACHINE=\"alphaev69\" ;;\n-\t    \"EV7 (21364)\")\n-\t\tUNAME_MACHINE=\"alphaev7\" ;;\n-\t    \"EV7.9 (21364A)\")\n-\t\tUNAME_MACHINE=\"alphaev79\" ;;\n-\tesac\n-\t# A Pn.n version is a patched version.\n-\t# A Vn.n version is a released version.\n-\t# A Tn.n version is a released field test version.\n-\t# A Xn.n version is an unreleased experimental baselevel.\n-\t# 1.2 uses \"1.2\" for uname -r.\n-\techo ${UNAME_MACHINE}-dec-osf`echo ${UNAME_RELEASE} | sed -e 's/^[PVTX]//' | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-\t# Reset EXIT trap before exiting to avoid spurious non-zero exit code.\n-\texitcode=$?\n-\ttrap '' 0\n-\texit $exitcode ;;\n-    Alpha\\ *:Windows_NT*:*)\n-\t# How do we know it's Interix rather than the generic POSIX subsystem?\n-\t# Should we change UNAME_MACHINE based on the output of uname instead\n-\t# of the specific Alpha model?\n-\techo alpha-pc-interix\n-\texit ;;\n-    21064:Windows_NT:50:3)\n-\techo alpha-dec-winnt3.5\n-\texit ;;\n-    Amiga*:UNIX_System_V:4.0:*)\n-\techo m68k-unknown-sysv4\n-\texit ;;\n-    *:[Aa]miga[Oo][Ss]:*:*)\n-\techo ${UNAME_MACHINE}-unknown-amigaos\n-\texit ;;\n-    *:[Mm]orph[Oo][Ss]:*:*)\n-\techo ${UNAME_MACHINE}-unknown-morphos\n-\texit ;;\n-    *:OS/390:*:*)\n-\techo i370-ibm-openedition\n-\texit ;;\n-    *:z/VM:*:*)\n-\techo s390-ibm-zvmoe\n-\texit ;;\n-    *:OS400:*:*)\n-\techo powerpc-ibm-os400\n-\texit ;;\n-    arm:RISC*:1.[012]*:*|arm:riscix:1.[012]*:*)\n-\techo arm-acorn-riscix${UNAME_RELEASE}\n-\texit ;;\n-    arm*:riscos:*:*|arm*:RISCOS:*:*)\n-\techo arm-unknown-riscos\n-\texit ;;\n-    SR2?01:HI-UX/MPP:*:* | SR8000:HI-UX/MPP:*:*)\n-\techo hppa1.1-hitachi-hiuxmpp\n-\texit ;;\n-    Pyramid*:OSx*:*:* | MIS*:OSx*:*:* | MIS*:SMP_DC-OSx*:*:*)\n-\t# akee@wpdis03.wpafb.af.mil (Earle F. Ake) contributed MIS and NILE.\n-\tif test \"`(/bin/universe) 2>/dev/null`\" = att ; then\n-\t\techo pyramid-pyramid-sysv3\n-\telse\n-\t\techo pyramid-pyramid-bsd\n-\tfi\n-\texit ;;\n-    NILE*:*:*:dcosx)\n-\techo pyramid-pyramid-svr4\n-\texit ;;\n-    DRS?6000:unix:4.0:6*)\n-\techo sparc-icl-nx6\n-\texit ;;\n-    DRS?6000:UNIX_SV:4.2*:7* | DRS?6000:isis:4.2*:7*)\n-\tcase `/usr/bin/uname -p` in\n-\t    sparc) echo sparc-icl-nx7; exit ;;\n-\tesac ;;\n-    s390x:SunOS:*:*)\n-\techo ${UNAME_MACHINE}-ibm-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    sun4H:SunOS:5.*:*)\n-\techo sparc-hal-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    sun4*:SunOS:5.*:* | tadpole*:SunOS:5.*:*)\n-\techo sparc-sun-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    i86pc:AuroraUX:5.*:* | i86xen:AuroraUX:5.*:*)\n-\techo i386-pc-auroraux${UNAME_RELEASE}\n-\texit ;;\n-    i86pc:SunOS:5.*:* | i86xen:SunOS:5.*:*)\n-\teval $set_cc_for_build\n-\tSUN_ARCH=\"i386\"\n-\t# If there is a compiler, see if it is configured for 64-bit objects.\n-\t# Note that the Sun cc does not turn __LP64__ into 1 like gcc does.\n-\t# This test works for both compilers.\n-\tif [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n-\t    if (echo '#ifdef __amd64'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t(CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\tgrep IS_64BIT_ARCH >/dev/null\n-\t    then\n-\t\tSUN_ARCH=\"x86_64\"\n-\t    fi\n-\tfi\n-\techo ${SUN_ARCH}-pc-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    sun4*:SunOS:6*:*)\n-\t# According to config.sub, this is the proper way to canonicalize\n-\t# SunOS6.  Hard to guess exactly what SunOS6 will be like, but\n-\t# it's likely to be more like Solaris than SunOS4.\n-\techo sparc-sun-solaris3`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    sun4*:SunOS:*:*)\n-\tcase \"`/usr/bin/arch -k`\" in\n-\t    Series*|S4*)\n-\t\tUNAME_RELEASE=`uname -v`\n-\t\t;;\n-\tesac\n-\t# Japanese Language versions have a version number like `4.1.3-JL'.\n-\techo sparc-sun-sunos`echo ${UNAME_RELEASE}|sed -e 's/-/_/'`\n-\texit ;;\n-    sun3*:SunOS:*:*)\n-\techo m68k-sun-sunos${UNAME_RELEASE}\n-\texit ;;\n-    sun*:*:4.2BSD:*)\n-\tUNAME_RELEASE=`(sed 1q /etc/motd | awk '{print substr($5,1,3)}') 2>/dev/null`\n-\ttest \"x${UNAME_RELEASE}\" = \"x\" && UNAME_RELEASE=3\n-\tcase \"`/bin/arch`\" in\n-\t    sun3)\n-\t\techo m68k-sun-sunos${UNAME_RELEASE}\n-\t\t;;\n-\t    sun4)\n-\t\techo sparc-sun-sunos${UNAME_RELEASE}\n-\t\t;;\n-\tesac\n-\texit ;;\n-    aushp:SunOS:*:*)\n-\techo sparc-auspex-sunos${UNAME_RELEASE}\n-\texit ;;\n-    # The situation for MiNT is a little confusing.  The machine name\n-    # can be virtually everything (everything which is not\n-    # \"atarist\" or \"atariste\" at least should have a processor\n-    # > m68000).  The system name ranges from \"MiNT\" over \"FreeMiNT\"\n-    # to the lowercase version \"mint\" (or \"freemint\").  Finally\n-    # the system name \"TOS\" denotes a system which is actually not\n-    # MiNT.  But MiNT is downward compatible to TOS, so this should\n-    # be no problem.\n-    atarist[e]:*MiNT:*:* | atarist[e]:*mint:*:* | atarist[e]:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n-\texit ;;\n-    atari*:*MiNT:*:* | atari*:*mint:*:* | atarist[e]:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n-\texit ;;\n-    *falcon*:*MiNT:*:* | *falcon*:*mint:*:* | *falcon*:*TOS:*:*)\n-\techo m68k-atari-mint${UNAME_RELEASE}\n-\texit ;;\n-    milan*:*MiNT:*:* | milan*:*mint:*:* | *milan*:*TOS:*:*)\n-\techo m68k-milan-mint${UNAME_RELEASE}\n-\texit ;;\n-    hades*:*MiNT:*:* | hades*:*mint:*:* | *hades*:*TOS:*:*)\n-\techo m68k-hades-mint${UNAME_RELEASE}\n-\texit ;;\n-    *:*MiNT:*:* | *:*mint:*:* | *:*TOS:*:*)\n-\techo m68k-unknown-mint${UNAME_RELEASE}\n-\texit ;;\n-    m68k:machten:*:*)\n-\techo m68k-apple-machten${UNAME_RELEASE}\n-\texit ;;\n-    powerpc:machten:*:*)\n-\techo powerpc-apple-machten${UNAME_RELEASE}\n-\texit ;;\n-    RISC*:Mach:*:*)\n-\techo mips-dec-mach_bsd4.3\n-\texit ;;\n-    RISC*:ULTRIX:*:*)\n-\techo mips-dec-ultrix${UNAME_RELEASE}\n-\texit ;;\n-    VAX*:ULTRIX*:*:*)\n-\techo vax-dec-ultrix${UNAME_RELEASE}\n-\texit ;;\n-    2020:CLIX:*:* | 2430:CLIX:*:*)\n-\techo clipper-intergraph-clix${UNAME_RELEASE}\n-\texit ;;\n-    mips:*:*:UMIPS | mips:*:*:RISCos)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n-#ifdef __cplusplus\n-#include <stdio.h>  /* for printf() prototype */\n-\tint main (int argc, char *argv[]) {\n-#else\n-\tint main (argc, argv) int argc; char *argv[]; {\n-#endif\n-\t#if defined (host_mips) && defined (MIPSEB)\n-\t#if defined (SYSTYPE_SYSV)\n-\t  printf (\"mips-mips-riscos%ssysv\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#if defined (SYSTYPE_SVR4)\n-\t  printf (\"mips-mips-riscos%ssvr4\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#if defined (SYSTYPE_BSD43) || defined(SYSTYPE_BSD)\n-\t  printf (\"mips-mips-riscos%sbsd\\n\", argv[1]); exit (0);\n-\t#endif\n-\t#endif\n-\t  exit (-1);\n-\t}\n-EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c &&\n-\t  dummyarg=`echo \"${UNAME_RELEASE}\" | sed -n 's/\\([0-9]*\\).*/\\1/p'` &&\n-\t  SYSTEM_NAME=`$dummy $dummyarg` &&\n-\t    { echo \"$SYSTEM_NAME\"; exit; }\n-\techo mips-mips-riscos${UNAME_RELEASE}\n-\texit ;;\n-    Motorola:PowerMAX_OS:*:*)\n-\techo powerpc-motorola-powermax\n-\texit ;;\n-    Motorola:*:4.3:PL8-*)\n-\techo powerpc-harris-powermax\n-\texit ;;\n-    Night_Hawk:*:*:PowerMAX_OS | Synergy:PowerMAX_OS:*:*)\n-\techo powerpc-harris-powermax\n-\texit ;;\n-    Night_Hawk:Power_UNIX:*:*)\n-\techo powerpc-harris-powerunix\n-\texit ;;\n-    m88k:CX/UX:7*:*)\n-\techo m88k-harris-cxux7\n-\texit ;;\n-    m88k:*:4*:R4*)\n-\techo m88k-motorola-sysv4\n-\texit ;;\n-    m88k:*:3*:R3*)\n-\techo m88k-motorola-sysv3\n-\texit ;;\n-    AViiON:dgux:*:*)\n-\t# DG/UX returns AViiON for all architectures\n-\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tif [ $UNAME_PROCESSOR = mc88100 ] || [ $UNAME_PROCESSOR = mc88110 ]\n-\tthen\n-\t    if [ ${TARGET_BINARY_INTERFACE}x = m88kdguxelfx ] || \\\n-\t       [ ${TARGET_BINARY_INTERFACE}x = x ]\n-\t    then\n-\t\techo m88k-dg-dgux${UNAME_RELEASE}\n-\t    else\n-\t\techo m88k-dg-dguxbcs${UNAME_RELEASE}\n-\t    fi\n-\telse\n-\t    echo i586-dg-dgux${UNAME_RELEASE}\n-\tfi\n-\texit ;;\n-    M88*:DolphinOS:*:*)\t# DolphinOS (SVR3)\n-\techo m88k-dolphin-sysv3\n-\texit ;;\n-    M88*:*:R3*:*)\n-\t# Delta 88k system running SVR3\n-\techo m88k-motorola-sysv3\n-\texit ;;\n-    XD88*:*:*:*) # Tektronix XD88 system running UTekV (SVR3)\n-\techo m88k-tektronix-sysv3\n-\texit ;;\n-    Tek43[0-9][0-9]:UTek:*:*) # Tektronix 4300 system running UTek (BSD)\n-\techo m68k-tektronix-bsd\n-\texit ;;\n-    *:IRIX*:*:*)\n-\techo mips-sgi-irix`echo ${UNAME_RELEASE}|sed -e 's/-/_/g'`\n-\texit ;;\n-    ????????:AIX?:[12].1:2)   # AIX 2.2.1 or AIX 2.1.1 is RT/PC AIX.\n-\techo romp-ibm-aix     # uname -m gives an 8 hex-code CPU id\n-\texit ;;               # Note that: echo \"'`uname -s`'\" gives 'AIX '\n-    i*86:AIX:*:*)\n-\techo i386-ibm-aix\n-\texit ;;\n-    ia64:AIX:*:*)\n-\tif [ -x /usr/bin/oslevel ] ; then\n-\t\tIBM_REV=`/usr/bin/oslevel`\n-\telse\n-\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n-\tfi\n-\techo ${UNAME_MACHINE}-ibm-aix${IBM_REV}\n-\texit ;;\n-    *:AIX:2:3)\n-\tif grep bos325 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\teval $set_cc_for_build\n-\t\tsed 's/^\t\t//' << EOF >$dummy.c\n-\t\t#include <sys/systemcfg.h>\n-\n-\t\tmain()\n-\t\t\t{\n-\t\t\tif (!__power_pc())\n-\t\t\t\texit(1);\n-\t\t\tputs(\"powerpc-ibm-aix3.2.5\");\n-\t\t\texit(0);\n-\t\t\t}\n-EOF\n-\t\tif $CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy`\n-\t\tthen\n-\t\t\techo \"$SYSTEM_NAME\"\n-\t\telse\n-\t\t\techo rs6000-ibm-aix3.2.5\n-\t\tfi\n-\telif grep bos324 /usr/include/stdio.h >/dev/null 2>&1; then\n-\t\techo rs6000-ibm-aix3.2.4\n-\telse\n-\t\techo rs6000-ibm-aix3.2\n-\tfi\n-\texit ;;\n-    *:AIX:*:[4567])\n-\tIBM_CPU_ID=`/usr/sbin/lsdev -C -c processor -S available | sed 1q | awk '{ print $1 }'`\n-\tif /usr/sbin/lsattr -El ${IBM_CPU_ID} | grep ' POWER' >/dev/null 2>&1; then\n-\t\tIBM_ARCH=rs6000\n-\telse\n-\t\tIBM_ARCH=powerpc\n-\tfi\n-\tif [ -x /usr/bin/lslpp ] ; then\n-\t\tIBM_REV=`/usr/bin/lslpp -Lqc bos.rte.libc |\n-\t\t\t   awk -F: '{ print $3 }' | sed s/[0-9]*$/0/`\n-\telse\n-\t\tIBM_REV=${UNAME_VERSION}.${UNAME_RELEASE}\n-\tfi\n-\techo ${IBM_ARCH}-ibm-aix${IBM_REV}\n-\texit ;;\n-    *:AIX:*:*)\n-\techo rs6000-ibm-aix\n-\texit ;;\n-    ibmrt:4.4BSD:*|romp-ibm:BSD:*)\n-\techo romp-ibm-bsd4.4\n-\texit ;;\n-    ibmrt:*BSD:*|romp-ibm:BSD:*)            # covers RT/PC BSD and\n-\techo romp-ibm-bsd${UNAME_RELEASE}   # 4.3 with uname added to\n-\texit ;;                             # report: romp-ibm BSD 4.3\n-    *:BOSX:*:*)\n-\techo rs6000-bull-bosx\n-\texit ;;\n-    DPX/2?00:B.O.S.:*:*)\n-\techo m68k-bull-sysv3\n-\texit ;;\n-    9000/[34]??:4.3bsd:1.*:*)\n-\techo m68k-hp-bsd\n-\texit ;;\n-    hp300:4.4BSD:*:* | 9000/[34]??:4.3bsd:2.*:*)\n-\techo m68k-hp-bsd4.4\n-\texit ;;\n-    9000/[34678]??:HP-UX:*:*)\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n-\tcase \"${UNAME_MACHINE}\" in\n-\t    9000/31? )            HP_ARCH=m68000 ;;\n-\t    9000/[34]?? )         HP_ARCH=m68k ;;\n-\t    9000/[678][0-9][0-9])\n-\t\tif [ -x /usr/bin/getconf ]; then\n-\t\t    sc_cpu_version=`/usr/bin/getconf SC_CPU_VERSION 2>/dev/null`\n-\t\t    sc_kernel_bits=`/usr/bin/getconf SC_KERNEL_BITS 2>/dev/null`\n-\t\t    case \"${sc_cpu_version}\" in\n-\t\t      523) HP_ARCH=\"hppa1.0\" ;; # CPU_PA_RISC1_0\n-\t\t      528) HP_ARCH=\"hppa1.1\" ;; # CPU_PA_RISC1_1\n-\t\t      532)                      # CPU_PA_RISC2_0\n-\t\t\tcase \"${sc_kernel_bits}\" in\n-\t\t\t  32) HP_ARCH=\"hppa2.0n\" ;;\n-\t\t\t  64) HP_ARCH=\"hppa2.0w\" ;;\n-\t\t\t  '') HP_ARCH=\"hppa2.0\" ;;   # HP-UX 10.20\n-\t\t\tesac ;;\n-\t\t    esac\n-\t\tfi\n-\t\tif [ \"${HP_ARCH}\" = \"\" ]; then\n-\t\t    eval $set_cc_for_build\n-\t\t    sed 's/^\t\t//' << EOF >$dummy.c\n-\n-\t\t#define _HPUX_SOURCE\n-\t\t#include <stdlib.h>\n-\t\t#include <unistd.h>\n-\n-\t\tint main ()\n-\t\t{\n-\t\t#if defined(_SC_KERNEL_BITS)\n-\t\t    long bits = sysconf(_SC_KERNEL_BITS);\n-\t\t#endif\n-\t\t    long cpu  = sysconf (_SC_CPU_VERSION);\n-\n-\t\t    switch (cpu)\n-\t\t\t{\n-\t\t\tcase CPU_PA_RISC1_0: puts (\"hppa1.0\"); break;\n-\t\t\tcase CPU_PA_RISC1_1: puts (\"hppa1.1\"); break;\n-\t\t\tcase CPU_PA_RISC2_0:\n-\t\t#if defined(_SC_KERNEL_BITS)\n-\t\t\t    switch (bits)\n-\t\t\t\t{\n-\t\t\t\tcase 64: puts (\"hppa2.0w\"); break;\n-\t\t\t\tcase 32: puts (\"hppa2.0n\"); break;\n-\t\t\t\tdefault: puts (\"hppa2.0\"); break;\n-\t\t\t\t} break;\n-\t\t#else  /* !defined(_SC_KERNEL_BITS) */\n-\t\t\t    puts (\"hppa2.0\"); break;\n-\t\t#endif\n-\t\t\tdefault: puts (\"hppa1.0\"); break;\n-\t\t\t}\n-\t\t    exit (0);\n-\t\t}\n-EOF\n-\t\t    (CCOPTS= $CC_FOR_BUILD -o $dummy $dummy.c 2>/dev/null) && HP_ARCH=`$dummy`\n-\t\t    test -z \"$HP_ARCH\" && HP_ARCH=hppa\n-\t\tfi ;;\n-\tesac\n-\tif [ ${HP_ARCH} = \"hppa2.0w\" ]\n-\tthen\n-\t    eval $set_cc_for_build\n-\n-\t    # hppa2.0w-hp-hpux* has a 64-bit kernel and a compiler generating\n-\t    # 32-bit code.  hppa64-hp-hpux* has the same kernel and a compiler\n-\t    # generating 64-bit code.  GNU and HP use different nomenclature:\n-\t    #\n-\t    # $ CC_FOR_BUILD=cc ./config.guess\n-\t    # => hppa2.0w-hp-hpux11.23\n-\t    # $ CC_FOR_BUILD=\"cc +DA2.0w\" ./config.guess\n-\t    # => hppa64-hp-hpux11.23\n-\n-\t    if echo __LP64__ | (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) |\n-\t\tgrep -q __LP64__\n-\t    then\n-\t\tHP_ARCH=\"hppa2.0w\"\n-\t    else\n-\t\tHP_ARCH=\"hppa64\"\n-\t    fi\n-\tfi\n-\techo ${HP_ARCH}-hp-hpux${HPUX_REV}\n-\texit ;;\n-    ia64:HP-UX:*:*)\n-\tHPUX_REV=`echo ${UNAME_RELEASE}|sed -e 's/[^.]*.[0B]*//'`\n-\techo ia64-hp-hpux${HPUX_REV}\n-\texit ;;\n-    3050*:HI-UX:*:*)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n-\t#include <unistd.h>\n-\tint\n-\tmain ()\n-\t{\n-\t  long cpu = sysconf (_SC_CPU_VERSION);\n-\t  /* The order matters, because CPU_IS_HP_MC68K erroneously returns\n-\t     true for CPU_PA_RISC1_0.  CPU_IS_PA_RISC returns correct\n-\t     results, however.  */\n-\t  if (CPU_IS_PA_RISC (cpu))\n-\t    {\n-\t      switch (cpu)\n-\t\t{\n-\t\t  case CPU_PA_RISC1_0: puts (\"hppa1.0-hitachi-hiuxwe2\"); break;\n-\t\t  case CPU_PA_RISC1_1: puts (\"hppa1.1-hitachi-hiuxwe2\"); break;\n-\t\t  case CPU_PA_RISC2_0: puts (\"hppa2.0-hitachi-hiuxwe2\"); break;\n-\t\t  default: puts (\"hppa-hitachi-hiuxwe2\"); break;\n-\t\t}\n-\t    }\n-\t  else if (CPU_IS_HP_MC68K (cpu))\n-\t    puts (\"m68k-hitachi-hiuxwe2\");\n-\t  else puts (\"unknown-hitachi-hiuxwe2\");\n-\t  exit (0);\n-\t}\n-EOF\n-\t$CC_FOR_BUILD -o $dummy $dummy.c && SYSTEM_NAME=`$dummy` &&\n-\t\t{ echo \"$SYSTEM_NAME\"; exit; }\n-\techo unknown-hitachi-hiuxwe2\n-\texit ;;\n-    9000/7??:4.3bsd:*:* | 9000/8?[79]:4.3bsd:*:* )\n-\techo hppa1.1-hp-bsd\n-\texit ;;\n-    9000/8??:4.3bsd:*:*)\n-\techo hppa1.0-hp-bsd\n-\texit ;;\n-    *9??*:MPE/iX:*:* | *3000*:MPE/iX:*:*)\n-\techo hppa1.0-hp-mpeix\n-\texit ;;\n-    hp7??:OSF1:*:* | hp8?[79]:OSF1:*:* )\n-\techo hppa1.1-hp-osf\n-\texit ;;\n-    hp8??:OSF1:*:*)\n-\techo hppa1.0-hp-osf\n-\texit ;;\n-    i*86:OSF1:*:*)\n-\tif [ -x /usr/sbin/sysversion ] ; then\n-\t    echo ${UNAME_MACHINE}-unknown-osf1mk\n-\telse\n-\t    echo ${UNAME_MACHINE}-unknown-osf1\n-\tfi\n-\texit ;;\n-    parisc*:Lites*:*:*)\n-\techo hppa1.1-hp-lites\n-\texit ;;\n-    C1*:ConvexOS:*:* | convex:ConvexOS:C1*:*)\n-\techo c1-convex-bsd\n-\texit ;;\n-    C2*:ConvexOS:*:* | convex:ConvexOS:C2*:*)\n-\tif getsysinfo -f scalar_acc\n-\tthen echo c32-convex-bsd\n-\telse echo c2-convex-bsd\n-\tfi\n-\texit ;;\n-    C34*:ConvexOS:*:* | convex:ConvexOS:C34*:*)\n-\techo c34-convex-bsd\n-\texit ;;\n-    C38*:ConvexOS:*:* | convex:ConvexOS:C38*:*)\n-\techo c38-convex-bsd\n-\texit ;;\n-    C4*:ConvexOS:*:* | convex:ConvexOS:C4*:*)\n-\techo c4-convex-bsd\n-\texit ;;\n-    CRAY*Y-MP:*:*:*)\n-\techo ymp-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    CRAY*[A-Z]90:*:*:*)\n-\techo ${UNAME_MACHINE}-cray-unicos${UNAME_RELEASE} \\\n-\t| sed -e 's/CRAY.*\\([A-Z]90\\)/\\1/' \\\n-\t      -e y/ABCDEFGHIJKLMNOPQRSTUVWXYZ/abcdefghijklmnopqrstuvwxyz/ \\\n-\t      -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    CRAY*TS:*:*:*)\n-\techo t90-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    CRAY*T3E:*:*:*)\n-\techo alphaev5-cray-unicosmk${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    CRAY*SV1:*:*:*)\n-\techo sv1-cray-unicos${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    *:UNICOS/mp:*:*)\n-\techo craynv-cray-unicosmp${UNAME_RELEASE} | sed -e 's/\\.[^.]*$/.X/'\n-\texit ;;\n-    F30[01]:UNIX_System_V:*:* | F700:UNIX_System_V:*:*)\n-\tFUJITSU_PROC=`uname -m | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz'`\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | sed -e 's/ /_/'`\n-\techo \"${FUJITSU_PROC}-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n-\texit ;;\n-    5000:UNIX_System_V:4.*:*)\n-\tFUJITSU_SYS=`uname -p | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/\\///'`\n-\tFUJITSU_REL=`echo ${UNAME_RELEASE} | tr 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' 'abcdefghijklmnopqrstuvwxyz' | sed -e 's/ /_/'`\n-\techo \"sparc-fujitsu-${FUJITSU_SYS}${FUJITSU_REL}\"\n-\texit ;;\n-    i*86:BSD/386:*:* | i*86:BSD/OS:*:* | *:Ascend\\ Embedded/OS:*:*)\n-\techo ${UNAME_MACHINE}-pc-bsdi${UNAME_RELEASE}\n-\texit ;;\n-    sparc*:BSD/OS:*:*)\n-\techo sparc-unknown-bsdi${UNAME_RELEASE}\n-\texit ;;\n-    *:BSD/OS:*:*)\n-\techo ${UNAME_MACHINE}-unknown-bsdi${UNAME_RELEASE}\n-\texit ;;\n-    *:FreeBSD:*:*)\n-\tUNAME_PROCESSOR=`/usr/bin/uname -p`\n-\tcase ${UNAME_PROCESSOR} in\n-\t    amd64)\n-\t\techo x86_64-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n-\t    *)\n-\t\techo ${UNAME_PROCESSOR}-unknown-freebsd`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'` ;;\n-\tesac\n-\texit ;;\n-    i*:CYGWIN*:*)\n-\techo ${UNAME_MACHINE}-pc-cygwin\n-\texit ;;\n-    *:MINGW64*:*)\n-\techo ${UNAME_MACHINE}-pc-mingw64\n-\texit ;;\n-    *:MINGW*:*)\n-\techo ${UNAME_MACHINE}-pc-mingw32\n-\texit ;;\n-    *:MSYS*:*)\n-\techo ${UNAME_MACHINE}-pc-msys\n-\texit ;;\n-    i*:windows32*:*)\n-\t# uname -m includes \"-pc\" on this system.\n-\techo ${UNAME_MACHINE}-mingw32\n-\texit ;;\n-    i*:PW*:*)\n-\techo ${UNAME_MACHINE}-pc-pw32\n-\texit ;;\n-    *:Interix*:*)\n-\tcase ${UNAME_MACHINE} in\n-\t    x86)\n-\t\techo i586-pc-interix${UNAME_RELEASE}\n-\t\texit ;;\n-\t    authenticamd | genuineintel | EM64T)\n-\t\techo x86_64-unknown-interix${UNAME_RELEASE}\n-\t\texit ;;\n-\t    IA64)\n-\t\techo ia64-unknown-interix${UNAME_RELEASE}\n-\t\texit ;;\n-\tesac ;;\n-    [345]86:Windows_95:* | [345]86:Windows_98:* | [345]86:Windows_NT:*)\n-\techo i${UNAME_MACHINE}-pc-mks\n-\texit ;;\n-    8664:Windows_NT:*)\n-\techo x86_64-pc-mks\n-\texit ;;\n-    i*:Windows_NT*:* | Pentium*:Windows_NT*:*)\n-\t# How do we know it's Interix rather than the generic POSIX subsystem?\n-\t# It also conflicts with pre-2.0 versions of AT&T UWIN. Should we\n-\t# UNAME_MACHINE based on the output of uname instead of i386?\n-\techo i586-pc-interix\n-\texit ;;\n-    i*:UWIN*:*)\n-\techo ${UNAME_MACHINE}-pc-uwin\n-\texit ;;\n-    amd64:CYGWIN*:*:* | x86_64:CYGWIN*:*:*)\n-\techo x86_64-unknown-cygwin\n-\texit ;;\n-    p*:CYGWIN*:*)\n-\techo powerpcle-unknown-cygwin\n-\texit ;;\n-    prep*:SunOS:5.*:*)\n-\techo powerpcle-unknown-solaris2`echo ${UNAME_RELEASE}|sed -e 's/[^.]*//'`\n-\texit ;;\n-    *:GNU:*:*)\n-\t# the GNU system\n-\techo `echo ${UNAME_MACHINE}|sed -e 's,[-/].*$,,'`-unknown-${LIBC}`echo ${UNAME_RELEASE}|sed -e 's,/.*$,,'`\n-\texit ;;\n-    *:GNU/*:*:*)\n-\t# other systems with GNU libc and userland\n-\techo ${UNAME_MACHINE}-unknown-`echo ${UNAME_SYSTEM} | sed 's,^[^/]*/,,' | tr '[A-Z]' '[a-z]'``echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`-${LIBC}\n-\texit ;;\n-    i*86:Minix:*:*)\n-\techo ${UNAME_MACHINE}-pc-minix\n-\texit ;;\n-    aarch64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    aarch64_be:Linux:*:*)\n-\tUNAME_MACHINE=aarch64_be\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    alpha:Linux:*:*)\n-\tcase `sed -n '/^cpu model/s/^.*: \\(.*\\)/\\1/p' < /proc/cpuinfo` in\n-\t  EV5)   UNAME_MACHINE=alphaev5 ;;\n-\t  EV56)  UNAME_MACHINE=alphaev56 ;;\n-\t  PCA56) UNAME_MACHINE=alphapca56 ;;\n-\t  PCA57) UNAME_MACHINE=alphapca56 ;;\n-\t  EV6)   UNAME_MACHINE=alphaev6 ;;\n-\t  EV67)  UNAME_MACHINE=alphaev67 ;;\n-\t  EV68*) UNAME_MACHINE=alphaev68 ;;\n-\tesac\n-\tobjdump --private-headers /bin/sh | grep -q ld.so.1\n-\tif test \"$?\" = 0 ; then LIBC=\"gnulibc1\" ; fi\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    arc:Linux:*:* | arceb:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    arm*:Linux:*:*)\n-\teval $set_cc_for_build\n-\tif echo __ARM_EABI__ | $CC_FOR_BUILD -E - 2>/dev/null \\\n-\t    | grep -q __ARM_EABI__\n-\tthen\n-\t    echo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\telse\n-\t    if echo __ARM_PCS_VFP | $CC_FOR_BUILD -E - 2>/dev/null \\\n-\t\t| grep -q __ARM_PCS_VFP\n-\t    then\n-\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabi\n-\t    else\n-\t\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}eabihf\n-\t    fi\n-\tfi\n-\texit ;;\n-    avr32*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    cris:Linux:*:*)\n-\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n-\texit ;;\n-    crisv32:Linux:*:*)\n-\techo ${UNAME_MACHINE}-axis-linux-${LIBC}\n-\texit ;;\n-    e2k:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    frv:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    hexagon:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    i*86:Linux:*:*)\n-\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n-\texit ;;\n-    ia64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    k1om:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    m32r*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    m68*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    mips:Linux:*:* | mips64:Linux:*:*)\n-\teval $set_cc_for_build\n-\tsed 's/^\t//' << EOF >$dummy.c\n-\t#undef CPU\n-\t#undef ${UNAME_MACHINE}\n-\t#undef ${UNAME_MACHINE}el\n-\t#if defined(__MIPSEL__) || defined(__MIPSEL) || defined(_MIPSEL) || defined(MIPSEL)\n-\tCPU=${UNAME_MACHINE}el\n-\t#else\n-\t#if defined(__MIPSEB__) || defined(__MIPSEB) || defined(_MIPSEB) || defined(MIPSEB)\n-\tCPU=${UNAME_MACHINE}\n-\t#else\n-\tCPU=\n-\t#endif\n-\t#endif\n-EOF\n-\teval `$CC_FOR_BUILD -E $dummy.c 2>/dev/null | grep '^CPU'`\n-\ttest x\"${CPU}\" != x && { echo \"${CPU}-unknown-linux-${LIBC}\"; exit; }\n-\t;;\n-    openrisc*:Linux:*:*)\n-\techo or1k-unknown-linux-${LIBC}\n-\texit ;;\n-    or32:Linux:*:* | or1k*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    padre:Linux:*:*)\n-\techo sparc-unknown-linux-${LIBC}\n-\texit ;;\n-    parisc64:Linux:*:* | hppa64:Linux:*:*)\n-\techo hppa64-unknown-linux-${LIBC}\n-\texit ;;\n-    parisc:Linux:*:* | hppa:Linux:*:*)\n-\t# Look for CPU level\n-\tcase `grep '^cpu[^a-z]*:' /proc/cpuinfo 2>/dev/null | cut -d' ' -f2` in\n-\t  PA7*) echo hppa1.1-unknown-linux-${LIBC} ;;\n-\t  PA8*) echo hppa2.0-unknown-linux-${LIBC} ;;\n-\t  *)    echo hppa-unknown-linux-${LIBC} ;;\n-\tesac\n-\texit ;;\n-    ppc64:Linux:*:*)\n-\techo powerpc64-unknown-linux-${LIBC}\n-\texit ;;\n-    ppc:Linux:*:*)\n-\techo powerpc-unknown-linux-${LIBC}\n-\texit ;;\n-    ppc64le:Linux:*:*)\n-\techo powerpc64le-unknown-linux-${LIBC}\n-\texit ;;\n-    ppcle:Linux:*:*)\n-\techo powerpcle-unknown-linux-${LIBC}\n-\texit ;;\n-    s390:Linux:*:* | s390x:Linux:*:*)\n-\techo ${UNAME_MACHINE}-ibm-linux-${LIBC}\n-\texit ;;\n-    sh64*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    sh*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    sparc:Linux:*:* | sparc64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    tile*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    vax:Linux:*:*)\n-\techo ${UNAME_MACHINE}-dec-linux-${LIBC}\n-\texit ;;\n-    x86_64:Linux:*:*)\n-\techo ${UNAME_MACHINE}-pc-linux-${LIBC}\n-\texit ;;\n-    xtensa*:Linux:*:*)\n-\techo ${UNAME_MACHINE}-unknown-linux-${LIBC}\n-\texit ;;\n-    i*86:DYNIX/ptx:4*:*)\n-\t# ptx 4.0 does uname -s correctly, with DYNIX/ptx in there.\n-\t# earlier versions are messed up and put the nodename in both\n-\t# sysname and nodename.\n-\techo i386-sequent-sysv4\n-\texit ;;\n-    i*86:UNIX_SV:4.2MP:2.*)\n-\t# Unixware is an offshoot of SVR4, but it has its own version\n-\t# number series starting with 2...\n-\t# I am not positive that other SVR4 systems won't match this,\n-\t# I just have to hope.  -- rms.\n-\t# Use sysv4.2uw... so that sysv4* matches it.\n-\techo ${UNAME_MACHINE}-pc-sysv4.2uw${UNAME_VERSION}\n-\texit ;;\n-    i*86:OS/2:*:*)\n-\t# If we were able to find `uname', then EMX Unix compatibility\n-\t# is probably installed.\n-\techo ${UNAME_MACHINE}-pc-os2-emx\n-\texit ;;\n-    i*86:XTS-300:*:STOP)\n-\techo ${UNAME_MACHINE}-unknown-stop\n-\texit ;;\n-    i*86:atheos:*:*)\n-\techo ${UNAME_MACHINE}-unknown-atheos\n-\texit ;;\n-    i*86:syllable:*:*)\n-\techo ${UNAME_MACHINE}-pc-syllable\n-\texit ;;\n-    i*86:LynxOS:2.*:* | i*86:LynxOS:3.[01]*:* | i*86:LynxOS:4.[02]*:*)\n-\techo i386-unknown-lynxos${UNAME_RELEASE}\n-\texit ;;\n-    i*86:*DOS:*:*)\n-\techo ${UNAME_MACHINE}-pc-msdosdjgpp\n-\texit ;;\n-    i*86:*:4.*:* | i*86:SYSTEM_V:4.*:*)\n-\tUNAME_REL=`echo ${UNAME_RELEASE} | sed 's/\\/MP$//'`\n-\tif grep Novell /usr/include/link.h >/dev/null 2>/dev/null; then\n-\t\techo ${UNAME_MACHINE}-univel-sysv${UNAME_REL}\n-\telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv${UNAME_REL}\n-\tfi\n-\texit ;;\n-    i*86:*:5:[678]*)\n-\t# UnixWare 7.x, OpenUNIX and OpenServer 6.\n-\tcase `/bin/uname -X | grep \"^Machine\"` in\n-\t    *486*)\t     UNAME_MACHINE=i486 ;;\n-\t    *Pentium)\t     UNAME_MACHINE=i586 ;;\n-\t    *Pent*|*Celeron) UNAME_MACHINE=i686 ;;\n-\tesac\n-\techo ${UNAME_MACHINE}-unknown-sysv${UNAME_RELEASE}${UNAME_SYSTEM}${UNAME_VERSION}\n-\texit ;;\n-    i*86:*:3.2:*)\n-\tif test -f /usr/options/cb.name; then\n-\t\tUNAME_REL=`sed -n 's/.*Version //p' </usr/options/cb.name`\n-\t\techo ${UNAME_MACHINE}-pc-isc$UNAME_REL\n-\telif /bin/uname -X 2>/dev/null >/dev/null ; then\n-\t\tUNAME_REL=`(/bin/uname -X|grep Release|sed -e 's/.*= //')`\n-\t\t(/bin/uname -X|grep i80486 >/dev/null) && UNAME_MACHINE=i486\n-\t\t(/bin/uname -X|grep '^Machine.*Pentium' >/dev/null) \\\n-\t\t\t&& UNAME_MACHINE=i586\n-\t\t(/bin/uname -X|grep '^Machine.*Pent *II' >/dev/null) \\\n-\t\t\t&& UNAME_MACHINE=i686\n-\t\t(/bin/uname -X|grep '^Machine.*Pentium Pro' >/dev/null) \\\n-\t\t\t&& UNAME_MACHINE=i686\n-\t\techo ${UNAME_MACHINE}-pc-sco$UNAME_REL\n-\telse\n-\t\techo ${UNAME_MACHINE}-pc-sysv32\n-\tfi\n-\texit ;;\n-    pc:*:*:*)\n-\t# Left here for compatibility:\n-\t# uname -m prints for DJGPP always 'pc', but it prints nothing about\n-\t# the processor, so we play safe by assuming i586.\n-\t# Note: whatever this is, it MUST be the same as what config.sub\n-\t# prints for the \"djgpp\" host, or else GDB configure will decide that\n-\t# this is a cross-build.\n-\techo i586-pc-msdosdjgpp\n-\texit ;;\n-    Intel:Mach:3*:*)\n-\techo i386-pc-mach3\n-\texit ;;\n-    paragon:*:*:*)\n-\techo i860-intel-osf1\n-\texit ;;\n-    i860:*:4.*:*) # i860-SVR4\n-\tif grep Stardent /usr/include/sys/uadmin.h >/dev/null 2>&1 ; then\n-\t  echo i860-stardent-sysv${UNAME_RELEASE} # Stardent Vistra i860-SVR4\n-\telse # Add other i860-SVR4 vendors below as they are discovered.\n-\t  echo i860-unknown-sysv${UNAME_RELEASE}  # Unknown i860-SVR4\n-\tfi\n-\texit ;;\n-    mini*:CTIX:SYS*5:*)\n-\t# \"miniframe\"\n-\techo m68010-convergent-sysv\n-\texit ;;\n-    mc68k:UNIX:SYSTEM5:3.51m)\n-\techo m68k-convergent-sysv\n-\texit ;;\n-    M680?0:D-NIX:5.3:*)\n-\techo m68k-diab-dnix\n-\texit ;;\n-    M68*:*:R3V[5678]*:*)\n-\ttest -r /sysV68 && { echo 'm68k-motorola-sysv'; exit; } ;;\n-    3[345]??:*:4.0:3.0 | 3[34]??A:*:4.0:3.0 | 3[34]??,*:*:4.0:3.0 | 3[34]??/*:*:4.0:3.0 | 4400:*:4.0:3.0 | 4850:*:4.0:3.0 | SKA40:*:4.0:3.0 | SDS2:*:4.0:3.0 | SHG2:*:4.0:3.0 | S7501*:*:4.0:3.0)\n-\tOS_REL=''\n-\ttest -r /etc/.relid \\\n-\t&& OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n-\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t  && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n-\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t  && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n-    3[34]??:*:4.0:* | 3[34]??,*:*:4.0:*)\n-\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t  && { echo i486-ncr-sysv4; exit; } ;;\n-    NCR*:*:4.2:* | MPRAS*:*:4.2:*)\n-\tOS_REL='.3'\n-\ttest -r /etc/.relid \\\n-\t    && OS_REL=.`sed -n 's/[^ ]* [^ ]* \\([0-9][0-9]\\).*/\\1/p' < /etc/.relid`\n-\t/bin/uname -p 2>/dev/null | grep 86 >/dev/null \\\n-\t    && { echo i486-ncr-sysv4.3${OS_REL}; exit; }\n-\t/bin/uname -p 2>/dev/null | /bin/grep entium >/dev/null \\\n-\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; }\n-\t/bin/uname -p 2>/dev/null | /bin/grep pteron >/dev/null \\\n-\t    && { echo i586-ncr-sysv4.3${OS_REL}; exit; } ;;\n-    m68*:LynxOS:2.*:* | m68*:LynxOS:3.0*:*)\n-\techo m68k-unknown-lynxos${UNAME_RELEASE}\n-\texit ;;\n-    mc68030:UNIX_System_V:4.*:*)\n-\techo m68k-atari-sysv4\n-\texit ;;\n-    TSUNAMI:LynxOS:2.*:*)\n-\techo sparc-unknown-lynxos${UNAME_RELEASE}\n-\texit ;;\n-    rs6000:LynxOS:2.*:*)\n-\techo rs6000-unknown-lynxos${UNAME_RELEASE}\n-\texit ;;\n-    PowerPC:LynxOS:2.*:* | PowerPC:LynxOS:3.[01]*:* | PowerPC:LynxOS:4.[02]*:*)\n-\techo powerpc-unknown-lynxos${UNAME_RELEASE}\n-\texit ;;\n-    SM[BE]S:UNIX_SV:*:*)\n-\techo mips-dde-sysv${UNAME_RELEASE}\n-\texit ;;\n-    RM*:ReliantUNIX-*:*:*)\n-\techo mips-sni-sysv4\n-\texit ;;\n-    RM*:SINIX-*:*:*)\n-\techo mips-sni-sysv4\n-\texit ;;\n-    *:SINIX-*:*:*)\n-\tif uname -p 2>/dev/null >/dev/null ; then\n-\t\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\t\techo ${UNAME_MACHINE}-sni-sysv4\n-\telse\n-\t\techo ns32k-sni-sysv\n-\tfi\n-\texit ;;\n-    PENTIUM:*:4.0*:*)\t# Unisys `ClearPath HMP IX 4000' SVR4/MP effort\n-\t\t\t# says <Richard.M.Bartel@ccMail.Census.GOV>\n-\techo i586-unisys-sysv4\n-\texit ;;\n-    *:UNIX_System_V:4*:FTX*)\n-\t# From Gerald Hewes <hewes@openmarket.com>.\n-\t# How about differentiating between stratus architectures? -djm\n-\techo hppa1.1-stratus-sysv4\n-\texit ;;\n-    *:*:*:FTX*)\n-\t# From seanf@swdc.stratus.com.\n-\techo i860-stratus-sysv4\n-\texit ;;\n-    i*86:VOS:*:*)\n-\t# From Paul.Green@stratus.com.\n-\techo ${UNAME_MACHINE}-stratus-vos\n-\texit ;;\n-    *:VOS:*:*)\n-\t# From Paul.Green@stratus.com.\n-\techo hppa1.1-stratus-vos\n-\texit ;;\n-    mc68*:A/UX:*:*)\n-\techo m68k-apple-aux${UNAME_RELEASE}\n-\texit ;;\n-    news*:NEWS-OS:6*:*)\n-\techo mips-sony-newsos6\n-\texit ;;\n-    R[34]000:*System_V*:*:* | R4000:UNIX_SYSV:*:* | R*000:UNIX_SV:*:*)\n-\tif [ -d /usr/nec ]; then\n-\t\techo mips-nec-sysv${UNAME_RELEASE}\n-\telse\n-\t\techo mips-unknown-sysv${UNAME_RELEASE}\n-\tfi\n-\texit ;;\n-    BeBox:BeOS:*:*)\t# BeOS running on hardware made by Be, PPC only.\n-\techo powerpc-be-beos\n-\texit ;;\n-    BeMac:BeOS:*:*)\t# BeOS running on Mac or Mac clone, PPC only.\n-\techo powerpc-apple-beos\n-\texit ;;\n-    BePC:BeOS:*:*)\t# BeOS running on Intel PC compatible.\n-\techo i586-pc-beos\n-\texit ;;\n-    BePC:Haiku:*:*)\t# Haiku running on Intel PC compatible.\n-\techo i586-pc-haiku\n-\texit ;;\n-    x86_64:Haiku:*:*)\n-\techo x86_64-unknown-haiku\n-\texit ;;\n-    SX-4:SUPER-UX:*:*)\n-\techo sx4-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    SX-5:SUPER-UX:*:*)\n-\techo sx5-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    SX-6:SUPER-UX:*:*)\n-\techo sx6-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    SX-7:SUPER-UX:*:*)\n-\techo sx7-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    SX-8:SUPER-UX:*:*)\n-\techo sx8-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    SX-8R:SUPER-UX:*:*)\n-\techo sx8r-nec-superux${UNAME_RELEASE}\n-\texit ;;\n-    Power*:Rhapsody:*:*)\n-\techo powerpc-apple-rhapsody${UNAME_RELEASE}\n-\texit ;;\n-    *:Rhapsody:*:*)\n-\techo ${UNAME_MACHINE}-apple-rhapsody${UNAME_RELEASE}\n-\texit ;;\n-    *:Darwin:*:*)\n-\tUNAME_PROCESSOR=`uname -p` || UNAME_PROCESSOR=unknown\n-\teval $set_cc_for_build\n-\tif test \"$UNAME_PROCESSOR\" = unknown ; then\n-\t    UNAME_PROCESSOR=powerpc\n-\tfi\n-\tif test `echo \"$UNAME_RELEASE\" | sed -e 's/\\..*//'` -le 10 ; then\n-\t    if [ \"$CC_FOR_BUILD\" != 'no_compiler_found' ]; then\n-\t\tif (echo '#ifdef __LP64__'; echo IS_64BIT_ARCH; echo '#endif') | \\\n-\t\t    (CCOPTS= $CC_FOR_BUILD -E - 2>/dev/null) | \\\n-\t\t    grep IS_64BIT_ARCH >/dev/null\n-\t\tthen\n-\t\t    case $UNAME_PROCESSOR in\n-\t\t\ti386) UNAME_PROCESSOR=x86_64 ;;\n-\t\t\tpowerpc) UNAME_PROCESSOR=powerpc64 ;;\n-\t\t    esac\n-\t\tfi\n-\t    fi\n-\telif test \"$UNAME_PROCESSOR\" = i386 ; then\n-\t    # Avoid executing cc on OS X 10.9, as it ships with a stub\n-\t    # that puts up a graphical alert prompting to install\n-\t    # developer tools.  Any system running Mac OS X 10.7 or\n-\t    # later (Darwin 11 and later) is required to have a 64-bit\n-\t    # processor. This is not true of the ARM version of Darwin\n-\t    # that Apple uses in portable devices.\n-\t    UNAME_PROCESSOR=x86_64\n-\tfi\n-\techo ${UNAME_PROCESSOR}-apple-darwin${UNAME_RELEASE}\n-\texit ;;\n-    *:procnto*:*:* | *:QNX:[0123456789]*:*)\n-\tUNAME_PROCESSOR=`uname -p`\n-\tif test \"$UNAME_PROCESSOR\" = \"x86\"; then\n-\t\tUNAME_PROCESSOR=i386\n-\t\tUNAME_MACHINE=pc\n-\tfi\n-\techo ${UNAME_PROCESSOR}-${UNAME_MACHINE}-nto-qnx${UNAME_RELEASE}\n-\texit ;;\n-    *:QNX:*:4*)\n-\techo i386-pc-qnx\n-\texit ;;\n-    NEO-?:NONSTOP_KERNEL:*:*)\n-\techo neo-tandem-nsk${UNAME_RELEASE}\n-\texit ;;\n-    NSE-*:NONSTOP_KERNEL:*:*)\n-\techo nse-tandem-nsk${UNAME_RELEASE}\n-\texit ;;\n-    NSR-?:NONSTOP_KERNEL:*:*)\n-\techo nsr-tandem-nsk${UNAME_RELEASE}\n-\texit ;;\n-    *:NonStop-UX:*:*)\n-\techo mips-compaq-nonstopux\n-\texit ;;\n-    BS2000:POSIX*:*:*)\n-\techo bs2000-siemens-sysv\n-\texit ;;\n-    DS/*:UNIX_System_V:*:*)\n-\techo ${UNAME_MACHINE}-${UNAME_SYSTEM}-${UNAME_RELEASE}\n-\texit ;;\n-    *:Plan9:*:*)\n-\t# \"uname -m\" is not consistent, so use $cputype instead. 386\n-\t# is converted to i386 for consistency with other x86\n-\t# operating systems.\n-\tif test \"$cputype\" = \"386\"; then\n-\t    UNAME_MACHINE=i386\n-\telse\n-\t    UNAME_MACHINE=\"$cputype\"\n-\tfi\n-\techo ${UNAME_MACHINE}-unknown-plan9\n-\texit ;;\n-    *:TOPS-10:*:*)\n-\techo pdp10-unknown-tops10\n-\texit ;;\n-    *:TENEX:*:*)\n-\techo pdp10-unknown-tenex\n-\texit ;;\n-    KS10:TOPS-20:*:* | KL10:TOPS-20:*:* | TYPE4:TOPS-20:*:*)\n-\techo pdp10-dec-tops20\n-\texit ;;\n-    XKL-1:TOPS-20:*:* | TYPE5:TOPS-20:*:*)\n-\techo pdp10-xkl-tops20\n-\texit ;;\n-    *:TOPS-20:*:*)\n-\techo pdp10-unknown-tops20\n-\texit ;;\n-    *:ITS:*:*)\n-\techo pdp10-unknown-its\n-\texit ;;\n-    SEI:*:*:SEIUX)\n-\techo mips-sei-seiux${UNAME_RELEASE}\n-\texit ;;\n-    *:DragonFly:*:*)\n-\techo ${UNAME_MACHINE}-unknown-dragonfly`echo ${UNAME_RELEASE}|sed -e 's/[-(].*//'`\n-\texit ;;\n-    *:*VMS:*:*)\n-\tUNAME_MACHINE=`(uname -p) 2>/dev/null`\n-\tcase \"${UNAME_MACHINE}\" in\n-\t    A*) echo alpha-dec-vms ; exit ;;\n-\t    I*) echo ia64-dec-vms ; exit ;;\n-\t    V*) echo vax-dec-vms ; exit ;;\n-\tesac ;;\n-    *:XENIX:*:SysV)\n-\techo i386-pc-xenix\n-\texit ;;\n-    i*86:skyos:*:*)\n-\techo ${UNAME_MACHINE}-pc-skyos`echo ${UNAME_RELEASE}` | sed -e 's/ .*$//'\n-\texit ;;\n-    i*86:rdos:*:*)\n-\techo ${UNAME_MACHINE}-pc-rdos\n-\texit ;;\n-    i*86:AROS:*:*)\n-\techo ${UNAME_MACHINE}-pc-aros\n-\texit ;;\n-    x86_64:VMkernel:*:*)\n-\techo ${UNAME_MACHINE}-unknown-esx\n-\texit ;;\n-    amd64:Isilon\\ OneFS:*:*)\n-        echo x86_64-unknown-onefs\n-\texit ;;\n-esac\n-\n-cat >&2 <<EOF\n-$0: unable to guess system type\n-\n-This script, last modified $timestamp, has failed to recognize\n-the operating system you are using. It is advised that you\n-download the most up to date version of the config scripts from\n-\n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.guess;hb=HEAD\n-and\n-  http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n-\n-If the version you run ($0) is already up to date, please\n-send the following data and any information you think might be\n-pertinent to <config-patches@gnu.org> in order to provide the needed\n-information to handle your system.\n-\n-config.guess timestamp = $timestamp\n-\n-uname -m = `(uname -m) 2>/dev/null || echo unknown`\n-uname -r = `(uname -r) 2>/dev/null || echo unknown`\n-uname -s = `(uname -s) 2>/dev/null || echo unknown`\n-uname -v = `(uname -v) 2>/dev/null || echo unknown`\n-\n-/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null`\n-/bin/uname -X     = `(/bin/uname -X) 2>/dev/null`\n-\n-hostinfo               = `(hostinfo) 2>/dev/null`\n-/bin/universe          = `(/bin/universe) 2>/dev/null`\n-/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null`\n-/bin/arch              = `(/bin/arch) 2>/dev/null`\n-/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null`\n-/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null`\n-\n-UNAME_MACHINE = ${UNAME_MACHINE}\n-UNAME_RELEASE = ${UNAME_RELEASE}\n-UNAME_SYSTEM  = ${UNAME_SYSTEM}\n-UNAME_VERSION = ${UNAME_VERSION}\n-EOF\n-\n-exit 1\n-\n-# Local variables:\n-# eval: (add-hook 'write-file-hooks 'time-stamp)\n-# time-stamp-start: \"timestamp='\"\n-# time-stamp-format: \"%:y-%02m-%02d\"\n-# time-stamp-end: \"'\"\n-# End:"
      },
      {
        "sha": "984ddb1e62b01dfc6dad664b75ffa7887e5439d8",
        "filename": "depends/config.site.in",
        "status": "removed",
        "additions": 0,
        "deletions": 101,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.site.in",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.site.in",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.site.in?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,101 +0,0 @@\n-cross_compiling=maybe\n-host_alias=@HOST@\n-ac_tool_prefix=${host_alias}-\n-\n-if test -z $with_boost; then\n-  with_boost=$prefix\n-fi\n-if test -z $with_qt_plugindir; then\n-  with_qt_plugindir=$prefix/plugins\n-fi\n-if test -z $with_qt_translationdir; then\n-  with_qt_translationdir=$prefix/translations\n-fi\n-if test -z $with_qt_bindir; then\n-  with_qt_bindir=$prefix/native/bin\n-fi\n-if test -z $with_protoc_bindir; then\n-  with_protoc_bindir=$prefix/native/bin\n-fi\n-if test -z $with_comparison_tool; then\n-  with_comparison_tool=$prefix/native/share/BitcoindComparisonTool_jar/BitcoindComparisonTool.jar\n-fi\n-\n-\n-if test -z $enable_wallet && test -n \"@no_wallet@\"; then\n-  enable_wallet=no\n-fi\n-\n-if test -z $with_miniupnpc && test -n \"@no_upnp@\"; then\n-  with_miniupnpc=no\n-fi\n-\n-if test -z $with_gui && test -n \"@no_qt@\"; then\n-  with_gui=no\n-fi\n-\n-if test x@host_os@ = xdarwin; then\n-  BREW=no\n-  PORT=no\n-fi\n-\n-if test x@host_os@ = xmingw32; then\n-  if test -z $with_qt_incdir; then\n-    with_qt_incdir=$prefix/include\n-  fi\n-  if test -z $with_qt_libdir; then\n-    with_qt_libdir=$prefix/lib\n-  fi\n-fi\n-\n-PATH=$prefix/native/bin:$PATH\n-PKG_CONFIG=\"`which pkg-config` --static\"\n-\n-# These two need to remain exported because pkg-config does not see them\n-# otherwise. That means they must be unexported at the end of configure.ac to\n-# avoid ruining the cache. Sigh.\n-\n-export PKG_CONFIG_LIBDIR=$prefix/lib/pkgconfig\n-export PKG_CONFIG_PATH=$prefix/share/pkgconfig\n-\n-CPPFLAGS=\"-I$prefix/include/ $CPPFLAGS\"\n-LDFLAGS=\"-L$prefix/lib $LDFLAGS\"\n-\n-CC=\"@CC@\"\n-CXX=\"@CXX@\"\n-OBJC=\"${CC}\"\n-OBJCXX=\"${CXX}\"\n-CCACHE=$prefix/native/bin/ccache\n-PYTHONPATH=$prefix/native/lib/python/dist-packages:$PYTHONPATH\n-\n-if test -n \"@AR@\"; then\n-  AR=@AR@\n-  ac_cv_path_ac_pt_AR=${AR}\n-fi\n-\n-if test -n \"@RANLIB@\"; then\n-  RANLIB=@RANLIB@\n-  ac_cv_path_ac_pt_RANLIB=${RANLIB}\n-fi\n-\n-if test -n \"@NM@\"; then\n-  NM=@NM@\n-  ac_cv_path_ac_pt_NM=${NM}\n-fi\n-\n-if test -n \"@debug@\"; then\n-  enable_reduce_exports=no\n-fi\n-\n-if test -n \"@CFLAGS@\"; then\n-  CFLAGS=\"@CFLAGS@ $CFLAGS\"\n-fi\n-if test -n \"@CXXFLAGS@\"; then\n-  CXXFLAGS=\"@CXXFLAGS@ $CXXFLAGS\"\n-fi\n-if test -n \"@CPPFLAGS@\"; then\n-  CPPFLAGS=\"@CPPFLAGS@ $CPPFLAGS\"\n-fi\n-if test -n \"@LDFLAGS@\"; then\n-  LDFLAGS=\"@LDFLAGS@ $LDFLAGS\"\n-fi"
      },
      {
        "sha": "ea8747d30fffb35e8a766b533f5a701f53f8a4dd",
        "filename": "depends/config.sub",
        "status": "removed",
        "additions": 0,
        "deletions": 1813,
        "changes": 1813,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.sub",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/config.sub",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/config.sub?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,1813 +0,0 @@\n-#! /bin/sh\n-# Configuration validation subroutine script.\n-#   Copyright 1992-2015 Free Software Foundation, Inc.\n-\n-timestamp='2015-11-22'\n-\n-# This file is free software; you can redistribute it and/or modify it\n-# under the terms of the GNU General Public License as published by\n-# the Free Software Foundation; either version 3 of the License, or\n-# (at your option) any later version.\n-#\n-# This program is distributed in the hope that it will be useful, but\n-# WITHOUT ANY WARRANTY; without even the implied warranty of\n-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n-# General Public License for more details.\n-#\n-# You should have received a copy of the GNU General Public License\n-# along with this program; if not, see <http://www.gnu.org/licenses/>.\n-#\n-# As a special exception to the GNU General Public License, if you\n-# distribute this file as part of a program that contains a\n-# configuration script generated by Autoconf, you may include it under\n-# the same distribution terms that you use for the rest of that\n-# program.  This Exception is an additional permission under section 7\n-# of the GNU General Public License, version 3 (\"GPLv3\").\n-\n-\n-# Please send patches to <config-patches@gnu.org>.\n-#\n-# Configuration subroutine to validate and canonicalize a configuration type.\n-# Supply the specified configuration type as an argument.\n-# If it is invalid, we print an error message on stderr and exit with code 1.\n-# Otherwise, we print the canonical config type on stdout and succeed.\n-\n-# You can get the latest version of this script from:\n-# http://git.savannah.gnu.org/gitweb/?p=config.git;a=blob_plain;f=config.sub;hb=HEAD\n-\n-# This file is supposed to be the same for all GNU packages\n-# and recognize all the CPU types, system types and aliases\n-# that are meaningful with *any* GNU software.\n-# Each package is responsible for reporting which valid configurations\n-# it does not support.  The user should be able to distinguish\n-# a failure to support a valid configuration from a meaningless\n-# configuration.\n-\n-# The goal of this file is to map all the various variations of a given\n-# machine specification into a single specification in the form:\n-#\tCPU_TYPE-MANUFACTURER-OPERATING_SYSTEM\n-# or in some cases, the newer four-part form:\n-#\tCPU_TYPE-MANUFACTURER-KERNEL-OPERATING_SYSTEM\n-# It is wrong to echo any other type of specification.\n-\n-me=`echo \"$0\" | sed -e 's,.*/,,'`\n-\n-usage=\"\\\n-Usage: $0 [OPTION] CPU-MFR-OPSYS or ALIAS\n-\n-Canonicalize a configuration name.\n-\n-Operation modes:\n-  -h, --help         print this help, then exit\n-  -t, --time-stamp   print date of last modification, then exit\n-  -v, --version      print version number, then exit\n-\n-Report bugs and patches to <config-patches@gnu.org>.\"\n-\n-version=\"\\\n-GNU config.sub ($timestamp)\n-\n-Copyright 1992-2015 Free Software Foundation, Inc.\n-\n-This is free software; see the source for copying conditions.  There is NO\n-warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\"\n-\n-help=\"\n-Try \\`$me --help' for more information.\"\n-\n-# Parse command line\n-while test $# -gt 0 ; do\n-  case $1 in\n-    --time-stamp | --time* | -t )\n-       echo \"$timestamp\" ; exit ;;\n-    --version | -v )\n-       echo \"$version\" ; exit ;;\n-    --help | --h* | -h )\n-       echo \"$usage\"; exit ;;\n-    -- )     # Stop option processing\n-       shift; break ;;\n-    - )\t# Use stdin as input.\n-       break ;;\n-    -* )\n-       echo \"$me: invalid option $1$help\"\n-       exit 1 ;;\n-\n-    *local*)\n-       # First pass through any local machine types.\n-       echo $1\n-       exit ;;\n-\n-    * )\n-       break ;;\n-  esac\n-done\n-\n-case $# in\n- 0) echo \"$me: missing argument$help\" >&2\n-    exit 1;;\n- 1) ;;\n- *) echo \"$me: too many arguments$help\" >&2\n-    exit 1;;\n-esac\n-\n-# Separate what the user gave into CPU-COMPANY and OS or KERNEL-OS (if any).\n-# Here we must recognize all the valid KERNEL-OS combinations.\n-maybe_os=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\2/'`\n-case $maybe_os in\n-  nto-qnx* | linux-gnu* | linux-android* | linux-dietlibc | linux-newlib* | \\\n-  linux-musl* | linux-uclibc* | uclinux-uclibc* | uclinux-gnu* | kfreebsd*-gnu* | \\\n-  knetbsd*-gnu* | netbsd*-gnu* | netbsd*-eabi* | \\\n-  kopensolaris*-gnu* | \\\n-  storm-chaos* | os2-emx* | rtmk-nova*)\n-    os=-$maybe_os\n-    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`\n-    ;;\n-  android-linux)\n-    os=-linux-android\n-    basic_machine=`echo $1 | sed 's/^\\(.*\\)-\\([^-]*-[^-]*\\)$/\\1/'`-unknown\n-    ;;\n-  *)\n-    basic_machine=`echo $1 | sed 's/-[^-]*$//'`\n-    if [ $basic_machine != $1 ]\n-    then os=`echo $1 | sed 's/.*-/-/'`\n-    else os=; fi\n-    ;;\n-esac\n-\n-### Let's recognize common machines as not being operating systems so\n-### that things like config.sub decstation-3100 work.  We also\n-### recognize some manufacturers as not being operating systems, so we\n-### can provide default operating systems below.\n-case $os in\n-\t-sun*os*)\n-\t\t# Prevent following clause from handling this invalid input.\n-\t\t;;\n-\t-dec* | -mips* | -sequent* | -encore* | -pc532* | -sgi* | -sony* | \\\n-\t-att* | -7300* | -3300* | -delta* | -motorola* | -sun[234]* | \\\n-\t-unicom* | -ibm* | -next | -hp | -isi* | -apollo | -altos* | \\\n-\t-convergent* | -ncr* | -news | -32* | -3600* | -3100* | -hitachi* |\\\n-\t-c[123]* | -convex* | -sun | -crds | -omron* | -dg | -ultra | -tti* | \\\n-\t-harris | -dolphin | -highlevel | -gould | -cbm | -ns | -masscomp | \\\n-\t-apple | -axis | -knuth | -cray | -microblaze*)\n-\t\tos=\n-\t\tbasic_machine=$1\n-\t\t;;\n-\t-bluegene*)\n-\t\tos=-cnk\n-\t\t;;\n-\t-sim | -cisco | -oki | -wec | -winbond)\n-\t\tos=\n-\t\tbasic_machine=$1\n-\t\t;;\n-\t-scout)\n-\t\t;;\n-\t-wrs)\n-\t\tos=-vxworks\n-\t\tbasic_machine=$1\n-\t\t;;\n-\t-chorusos*)\n-\t\tos=-chorusos\n-\t\tbasic_machine=$1\n-\t\t;;\n-\t-chorusrdb)\n-\t\tos=-chorusrdb\n-\t\tbasic_machine=$1\n-\t\t;;\n-\t-hiux*)\n-\t\tos=-hiuxwe2\n-\t\t;;\n-\t-sco6)\n-\t\tos=-sco5v6\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco5)\n-\t\tos=-sco3.2v5\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco4)\n-\t\tos=-sco3.2v4\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco3.2.[4-9]*)\n-\t\tos=`echo $os | sed -e 's/sco3.2./sco3.2v/'`\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco3.2v[4-9]*)\n-\t\t# Don't forget version if it is 3.2v4 or newer.\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco5v6*)\n-\t\t# Don't forget version if it is 3.2v4 or newer.\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-sco*)\n-\t\tos=-sco3.2v2\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-udk*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-isc)\n-\t\tos=-isc2.2\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-clix*)\n-\t\tbasic_machine=clipper-intergraph\n-\t\t;;\n-\t-isc*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-pc/'`\n-\t\t;;\n-\t-lynx*178)\n-\t\tos=-lynxos178\n-\t\t;;\n-\t-lynx*5)\n-\t\tos=-lynxos5\n-\t\t;;\n-\t-lynx*)\n-\t\tos=-lynxos\n-\t\t;;\n-\t-ptx*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86-.*/86-sequent/'`\n-\t\t;;\n-\t-windowsnt*)\n-\t\tos=`echo $os | sed -e 's/windowsnt/winnt/'`\n-\t\t;;\n-\t-psos*)\n-\t\tos=-psos\n-\t\t;;\n-\t-mint | -mint[0-9]*)\n-\t\tbasic_machine=m68k-atari\n-\t\tos=-mint\n-\t\t;;\n-esac\n-\n-# Decode aliases for certain CPU-COMPANY combinations.\n-case $basic_machine in\n-\t# Recognize the basic CPU types without company name.\n-\t# Some are omitted here because they have special meanings below.\n-\t1750a | 580 \\\n-\t| a29k \\\n-\t| aarch64 | aarch64_be \\\n-\t| alpha | alphaev[4-8] | alphaev56 | alphaev6[78] | alphapca5[67] \\\n-\t| alpha64 | alpha64ev[4-8] | alpha64ev56 | alpha64ev6[78] | alpha64pca5[67] \\\n-\t| am33_2.0 \\\n-\t| arc | arceb \\\n-\t| arm | arm[bl]e | arme[lb] | armv[2-8] | armv[3-8][lb] | armv7[arm] \\\n-\t| avr | avr32 \\\n-\t| ba \\\n-\t| be32 | be64 \\\n-\t| bfin \\\n-\t| c4x | c8051 | clipper \\\n-\t| d10v | d30v | dlx | dsp16xx \\\n-\t| e2k | epiphany \\\n-\t| fido | fr30 | frv | ft32 \\\n-\t| h8300 | h8500 | hppa | hppa1.[01] | hppa2.0 | hppa2.0[nw] | hppa64 \\\n-\t| hexagon \\\n-\t| i370 | i860 | i960 | ia64 \\\n-\t| ip2k | iq2000 \\\n-\t| k1om \\\n-\t| le32 | le64 \\\n-\t| lm32 \\\n-\t| m32c | m32r | m32rle | m68000 | m68k | m88k \\\n-\t| maxq | mb | microblaze | microblazeel | mcore | mep | metag \\\n-\t| mips | mipsbe | mipseb | mipsel | mipsle \\\n-\t| mips16 \\\n-\t| mips64 | mips64el \\\n-\t| mips64octeon | mips64octeonel \\\n-\t| mips64orion | mips64orionel \\\n-\t| mips64r5900 | mips64r5900el \\\n-\t| mips64vr | mips64vrel \\\n-\t| mips64vr4100 | mips64vr4100el \\\n-\t| mips64vr4300 | mips64vr4300el \\\n-\t| mips64vr5000 | mips64vr5000el \\\n-\t| mips64vr5900 | mips64vr5900el \\\n-\t| mipsisa32 | mipsisa32el \\\n-\t| mipsisa32r2 | mipsisa32r2el \\\n-\t| mipsisa32r6 | mipsisa32r6el \\\n-\t| mipsisa64 | mipsisa64el \\\n-\t| mipsisa64r2 | mipsisa64r2el \\\n-\t| mipsisa64r6 | mipsisa64r6el \\\n-\t| mipsisa64sb1 | mipsisa64sb1el \\\n-\t| mipsisa64sr71k | mipsisa64sr71kel \\\n-\t| mipsr5900 | mipsr5900el \\\n-\t| mipstx39 | mipstx39el \\\n-\t| mn10200 | mn10300 \\\n-\t| moxie \\\n-\t| mt \\\n-\t| msp430 \\\n-\t| nds32 | nds32le | nds32be \\\n-\t| nios | nios2 | nios2eb | nios2el \\\n-\t| ns16k | ns32k \\\n-\t| open8 | or1k | or1knd | or32 \\\n-\t| pdp10 | pdp11 | pj | pjl \\\n-\t| powerpc | powerpc64 | powerpc64le | powerpcle \\\n-\t| pyramid \\\n-\t| riscv32 | riscv64 \\\n-\t| rl78 | rx \\\n-\t| score \\\n-\t| sh | sh[1234] | sh[24]a | sh[24]aeb | sh[23]e | sh[234]eb | sheb | shbe | shle | sh[1234]le | sh3ele \\\n-\t| sh64 | sh64le \\\n-\t| sparc | sparc64 | sparc64b | sparc64v | sparc86x | sparclet | sparclite \\\n-\t| sparcv8 | sparcv9 | sparcv9b | sparcv9v \\\n-\t| spu \\\n-\t| tahoe | tic4x | tic54x | tic55x | tic6x | tic80 | tron \\\n-\t| ubicom32 \\\n-\t| v850 | v850e | v850e1 | v850e2 | v850es | v850e2v3 \\\n-\t| visium \\\n-\t| we32k \\\n-\t| x86 | xc16x | xstormy16 | xtensa \\\n-\t| z8k | z80)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n-\tc54x)\n-\t\tbasic_machine=tic54x-unknown\n-\t\t;;\n-\tc55x)\n-\t\tbasic_machine=tic55x-unknown\n-\t\t;;\n-\tc6x)\n-\t\tbasic_machine=tic6x-unknown\n-\t\t;;\n-\tleon|leon[3-9])\n-\t\tbasic_machine=sparc-$basic_machine\n-\t\t;;\n-\tm6811 | m68hc11 | m6812 | m68hc12 | m68hcs12x | nvptx | picochip)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=-none\n-\t\t;;\n-\tm88110 | m680[12346]0 | m683?2 | m68360 | m5200 | v70 | w65 | z8k)\n-\t\t;;\n-\tms1)\n-\t\tbasic_machine=mt-unknown\n-\t\t;;\n-\n-\tstrongarm | thumb | xscale)\n-\t\tbasic_machine=arm-unknown\n-\t\t;;\n-\txgate)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=-none\n-\t\t;;\n-\txscaleeb)\n-\t\tbasic_machine=armeb-unknown\n-\t\t;;\n-\n-\txscaleel)\n-\t\tbasic_machine=armel-unknown\n-\t\t;;\n-\n-\t# We use `pc' rather than `unknown'\n-\t# because (1) that's what they normally are, and\n-\t# (2) the word \"unknown\" tends to confuse beginning users.\n-\ti*86 | x86_64)\n-\t  basic_machine=$basic_machine-pc\n-\t  ;;\n-\t# Object if more than one company name word.\n-\t*-*-*)\n-\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n-\t\texit 1\n-\t\t;;\n-\t# Recognize the basic CPU types with company name.\n-\t580-* \\\n-\t| a29k-* \\\n-\t| aarch64-* | aarch64_be-* \\\n-\t| alpha-* | alphaev[4-8]-* | alphaev56-* | alphaev6[78]-* \\\n-\t| alpha64-* | alpha64ev[4-8]-* | alpha64ev56-* | alpha64ev6[78]-* \\\n-\t| alphapca5[67]-* | alpha64pca5[67]-* | arc-* | arceb-* \\\n-\t| arm-*  | armbe-* | armle-* | armeb-* | armv*-* \\\n-\t| avr-* | avr32-* \\\n-\t| ba-* \\\n-\t| be32-* | be64-* \\\n-\t| bfin-* | bs2000-* \\\n-\t| c[123]* | c30-* | [cjt]90-* | c4x-* \\\n-\t| c8051-* | clipper-* | craynv-* | cydra-* \\\n-\t| d10v-* | d30v-* | dlx-* \\\n-\t| e2k-* | elxsi-* \\\n-\t| f30[01]-* | f700-* | fido-* | fr30-* | frv-* | fx80-* \\\n-\t| h8300-* | h8500-* \\\n-\t| hppa-* | hppa1.[01]-* | hppa2.0-* | hppa2.0[nw]-* | hppa64-* \\\n-\t| hexagon-* \\\n-\t| i*86-* | i860-* | i960-* | ia64-* \\\n-\t| ip2k-* | iq2000-* \\\n-\t| k1om-* \\\n-\t| le32-* | le64-* \\\n-\t| lm32-* \\\n-\t| m32c-* | m32r-* | m32rle-* \\\n-\t| m68000-* | m680[012346]0-* | m68360-* | m683?2-* | m68k-* \\\n-\t| m88110-* | m88k-* | maxq-* | mcore-* | metag-* \\\n-\t| microblaze-* | microblazeel-* \\\n-\t| mips-* | mipsbe-* | mipseb-* | mipsel-* | mipsle-* \\\n-\t| mips16-* \\\n-\t| mips64-* | mips64el-* \\\n-\t| mips64octeon-* | mips64octeonel-* \\\n-\t| mips64orion-* | mips64orionel-* \\\n-\t| mips64r5900-* | mips64r5900el-* \\\n-\t| mips64vr-* | mips64vrel-* \\\n-\t| mips64vr4100-* | mips64vr4100el-* \\\n-\t| mips64vr4300-* | mips64vr4300el-* \\\n-\t| mips64vr5000-* | mips64vr5000el-* \\\n-\t| mips64vr5900-* | mips64vr5900el-* \\\n-\t| mipsisa32-* | mipsisa32el-* \\\n-\t| mipsisa32r2-* | mipsisa32r2el-* \\\n-\t| mipsisa32r6-* | mipsisa32r6el-* \\\n-\t| mipsisa64-* | mipsisa64el-* \\\n-\t| mipsisa64r2-* | mipsisa64r2el-* \\\n-\t| mipsisa64r6-* | mipsisa64r6el-* \\\n-\t| mipsisa64sb1-* | mipsisa64sb1el-* \\\n-\t| mipsisa64sr71k-* | mipsisa64sr71kel-* \\\n-\t| mipsr5900-* | mipsr5900el-* \\\n-\t| mipstx39-* | mipstx39el-* \\\n-\t| mmix-* \\\n-\t| mt-* \\\n-\t| msp430-* \\\n-\t| nds32-* | nds32le-* | nds32be-* \\\n-\t| nios-* | nios2-* | nios2eb-* | nios2el-* \\\n-\t| none-* | np1-* | ns16k-* | ns32k-* \\\n-\t| open8-* \\\n-\t| or1k*-* \\\n-\t| orion-* \\\n-\t| pdp10-* | pdp11-* | pj-* | pjl-* | pn-* | power-* \\\n-\t| powerpc-* | powerpc64-* | powerpc64le-* | powerpcle-* \\\n-\t| pyramid-* \\\n-\t| riscv32-* | riscv64-* \\\n-\t| rl78-* | romp-* | rs6000-* | rx-* \\\n-\t| sh-* | sh[1234]-* | sh[24]a-* | sh[24]aeb-* | sh[23]e-* | sh[34]eb-* | sheb-* | shbe-* \\\n-\t| shle-* | sh[1234]le-* | sh3ele-* | sh64-* | sh64le-* \\\n-\t| sparc-* | sparc64-* | sparc64b-* | sparc64v-* | sparc86x-* | sparclet-* \\\n-\t| sparclite-* \\\n-\t| sparcv8-* | sparcv9-* | sparcv9b-* | sparcv9v-* | sv1-* | sx*-* \\\n-\t| tahoe-* \\\n-\t| tic30-* | tic4x-* | tic54x-* | tic55x-* | tic6x-* | tic80-* \\\n-\t| tile*-* \\\n-\t| tron-* \\\n-\t| ubicom32-* \\\n-\t| v850-* | v850e-* | v850e1-* | v850es-* | v850e2-* | v850e2v3-* \\\n-\t| vax-* \\\n-\t| visium-* \\\n-\t| we32k-* \\\n-\t| x86-* | x86_64-* | xc16x-* | xps100-* \\\n-\t| xstormy16-* | xtensa*-* \\\n-\t| ymp-* \\\n-\t| z8k-* | z80-*)\n-\t\t;;\n-\t# Recognize the basic CPU types without company name, with glob match.\n-\txtensa*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\t;;\n-\t# Recognize the various machine names and aliases which stand\n-\t# for a CPU type and a company and sometimes even an OS.\n-\t386bsd)\n-\t\tbasic_machine=i386-unknown\n-\t\tos=-bsd\n-\t\t;;\n-\t3b1 | 7300 | 7300-att | att-7300 | pc7300 | safari | unixpc)\n-\t\tbasic_machine=m68000-att\n-\t\t;;\n-\t3b*)\n-\t\tbasic_machine=we32k-att\n-\t\t;;\n-\ta29khif)\n-\t\tbasic_machine=a29k-amd\n-\t\tos=-udi\n-\t\t;;\n-\tabacus)\n-\t\tbasic_machine=abacus-unknown\n-\t\t;;\n-\tadobe68k)\n-\t\tbasic_machine=m68010-adobe\n-\t\tos=-scout\n-\t\t;;\n-\talliant | fx80)\n-\t\tbasic_machine=fx80-alliant\n-\t\t;;\n-\taltos | altos3068)\n-\t\tbasic_machine=m68k-altos\n-\t\t;;\n-\tam29k)\n-\t\tbasic_machine=a29k-none\n-\t\tos=-bsd\n-\t\t;;\n-\tamd64)\n-\t\tbasic_machine=x86_64-pc\n-\t\t;;\n-\tamd64-*)\n-\t\tbasic_machine=x86_64-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tamdahl)\n-\t\tbasic_machine=580-amdahl\n-\t\tos=-sysv\n-\t\t;;\n-\tamiga | amiga-*)\n-\t\tbasic_machine=m68k-unknown\n-\t\t;;\n-\tamigaos | amigados)\n-\t\tbasic_machine=m68k-unknown\n-\t\tos=-amigaos\n-\t\t;;\n-\tamigaunix | amix)\n-\t\tbasic_machine=m68k-unknown\n-\t\tos=-sysv4\n-\t\t;;\n-\tapollo68)\n-\t\tbasic_machine=m68k-apollo\n-\t\tos=-sysv\n-\t\t;;\n-\tapollo68bsd)\n-\t\tbasic_machine=m68k-apollo\n-\t\tos=-bsd\n-\t\t;;\n-\taros)\n-\t\tbasic_machine=i386-pc\n-\t\tos=-aros\n-\t\t;;\n-        asmjs)\n-\t\tbasic_machine=asmjs-unknown\n-\t\t;;\n-\taux)\n-\t\tbasic_machine=m68k-apple\n-\t\tos=-aux\n-\t\t;;\n-\tbalance)\n-\t\tbasic_machine=ns32k-sequent\n-\t\tos=-dynix\n-\t\t;;\n-\tblackfin)\n-\t\tbasic_machine=bfin-unknown\n-\t\tos=-linux\n-\t\t;;\n-\tblackfin-*)\n-\t\tbasic_machine=bfin-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\tos=-linux\n-\t\t;;\n-\tbluegene*)\n-\t\tbasic_machine=powerpc-ibm\n-\t\tos=-cnk\n-\t\t;;\n-\tc54x-*)\n-\t\tbasic_machine=tic54x-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc55x-*)\n-\t\tbasic_machine=tic55x-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc6x-*)\n-\t\tbasic_machine=tic6x-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tc90)\n-\t\tbasic_machine=c90-cray\n-\t\tos=-unicos\n-\t\t;;\n-\tcegcc)\n-\t\tbasic_machine=arm-unknown\n-\t\tos=-cegcc\n-\t\t;;\n-\tconvex-c1)\n-\t\tbasic_machine=c1-convex\n-\t\tos=-bsd\n-\t\t;;\n-\tconvex-c2)\n-\t\tbasic_machine=c2-convex\n-\t\tos=-bsd\n-\t\t;;\n-\tconvex-c32)\n-\t\tbasic_machine=c32-convex\n-\t\tos=-bsd\n-\t\t;;\n-\tconvex-c34)\n-\t\tbasic_machine=c34-convex\n-\t\tos=-bsd\n-\t\t;;\n-\tconvex-c38)\n-\t\tbasic_machine=c38-convex\n-\t\tos=-bsd\n-\t\t;;\n-\tcray | j90)\n-\t\tbasic_machine=j90-cray\n-\t\tos=-unicos\n-\t\t;;\n-\tcraynv)\n-\t\tbasic_machine=craynv-cray\n-\t\tos=-unicosmp\n-\t\t;;\n-\tcr16 | cr16-*)\n-\t\tbasic_machine=cr16-unknown\n-\t\tos=-elf\n-\t\t;;\n-\tcrds | unos)\n-\t\tbasic_machine=m68k-crds\n-\t\t;;\n-\tcrisv32 | crisv32-* | etraxfs*)\n-\t\tbasic_machine=crisv32-axis\n-\t\t;;\n-\tcris | cris-* | etrax*)\n-\t\tbasic_machine=cris-axis\n-\t\t;;\n-\tcrx)\n-\t\tbasic_machine=crx-unknown\n-\t\tos=-elf\n-\t\t;;\n-\tda30 | da30-*)\n-\t\tbasic_machine=m68k-da30\n-\t\t;;\n-\tdecstation | decstation-3100 | pmax | pmax-* | pmin | dec3100 | decstatn)\n-\t\tbasic_machine=mips-dec\n-\t\t;;\n-\tdecsystem10* | dec10*)\n-\t\tbasic_machine=pdp10-dec\n-\t\tos=-tops10\n-\t\t;;\n-\tdecsystem20* | dec20*)\n-\t\tbasic_machine=pdp10-dec\n-\t\tos=-tops20\n-\t\t;;\n-\tdelta | 3300 | motorola-3300 | motorola-delta \\\n-\t      | 3300-motorola | delta-motorola)\n-\t\tbasic_machine=m68k-motorola\n-\t\t;;\n-\tdelta88)\n-\t\tbasic_machine=m88k-motorola\n-\t\tos=-sysv3\n-\t\t;;\n-\tdicos)\n-\t\tbasic_machine=i686-pc\n-\t\tos=-dicos\n-\t\t;;\n-\tdjgpp)\n-\t\tbasic_machine=i586-pc\n-\t\tos=-msdosdjgpp\n-\t\t;;\n-\tdpx20 | dpx20-*)\n-\t\tbasic_machine=rs6000-bull\n-\t\tos=-bosx\n-\t\t;;\n-\tdpx2* | dpx2*-bull)\n-\t\tbasic_machine=m68k-bull\n-\t\tos=-sysv3\n-\t\t;;\n-\tebmon29k)\n-\t\tbasic_machine=a29k-amd\n-\t\tos=-ebmon\n-\t\t;;\n-\telxsi)\n-\t\tbasic_machine=elxsi-elxsi\n-\t\tos=-bsd\n-\t\t;;\n-\tencore | umax | mmax)\n-\t\tbasic_machine=ns32k-encore\n-\t\t;;\n-\tes1800 | OSE68k | ose68k | ose | OSE)\n-\t\tbasic_machine=m68k-ericsson\n-\t\tos=-ose\n-\t\t;;\n-\tfx2800)\n-\t\tbasic_machine=i860-alliant\n-\t\t;;\n-\tgenix)\n-\t\tbasic_machine=ns32k-ns\n-\t\t;;\n-\tgmicro)\n-\t\tbasic_machine=tron-gmicro\n-\t\tos=-sysv\n-\t\t;;\n-\tgo32)\n-\t\tbasic_machine=i386-pc\n-\t\tos=-go32\n-\t\t;;\n-\th3050r* | hiux*)\n-\t\tbasic_machine=hppa1.1-hitachi\n-\t\tos=-hiuxwe2\n-\t\t;;\n-\th8300hms)\n-\t\tbasic_machine=h8300-hitachi\n-\t\tos=-hms\n-\t\t;;\n-\th8300xray)\n-\t\tbasic_machine=h8300-hitachi\n-\t\tos=-xray\n-\t\t;;\n-\th8500hms)\n-\t\tbasic_machine=h8500-hitachi\n-\t\tos=-hms\n-\t\t;;\n-\tharris)\n-\t\tbasic_machine=m88k-harris\n-\t\tos=-sysv3\n-\t\t;;\n-\thp300-*)\n-\t\tbasic_machine=m68k-hp\n-\t\t;;\n-\thp300bsd)\n-\t\tbasic_machine=m68k-hp\n-\t\tos=-bsd\n-\t\t;;\n-\thp300hpux)\n-\t\tbasic_machine=m68k-hp\n-\t\tos=-hpux\n-\t\t;;\n-\thp3k9[0-9][0-9] | hp9[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\thp9k2[0-9][0-9] | hp9k31[0-9])\n-\t\tbasic_machine=m68000-hp\n-\t\t;;\n-\thp9k3[2-9][0-9])\n-\t\tbasic_machine=m68k-hp\n-\t\t;;\n-\thp9k6[0-9][0-9] | hp6[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\thp9k7[0-79][0-9] | hp7[0-79][0-9])\n-\t\tbasic_machine=hppa1.1-hp\n-\t\t;;\n-\thp9k78[0-9] | hp78[0-9])\n-\t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n-\t\t;;\n-\thp9k8[67]1 | hp8[67]1 | hp9k80[24] | hp80[24] | hp9k8[78]9 | hp8[78]9 | hp9k893 | hp893)\n-\t\t# FIXME: really hppa2.0-hp\n-\t\tbasic_machine=hppa1.1-hp\n-\t\t;;\n-\thp9k8[0-9][13679] | hp8[0-9][13679])\n-\t\tbasic_machine=hppa1.1-hp\n-\t\t;;\n-\thp9k8[0-9][0-9] | hp8[0-9][0-9])\n-\t\tbasic_machine=hppa1.0-hp\n-\t\t;;\n-\thppa-next)\n-\t\tos=-nextstep3\n-\t\t;;\n-\thppaosf)\n-\t\tbasic_machine=hppa1.1-hp\n-\t\tos=-osf\n-\t\t;;\n-\thppro)\n-\t\tbasic_machine=hppa1.1-hp\n-\t\tos=-proelf\n-\t\t;;\n-\ti370-ibm* | ibm*)\n-\t\tbasic_machine=i370-ibm\n-\t\t;;\n-\ti*86v32)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n-\t\tos=-sysv32\n-\t\t;;\n-\ti*86v4*)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n-\t\tos=-sysv4\n-\t\t;;\n-\ti*86v)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n-\t\tos=-sysv\n-\t\t;;\n-\ti*86sol2)\n-\t\tbasic_machine=`echo $1 | sed -e 's/86.*/86-pc/'`\n-\t\tos=-solaris2\n-\t\t;;\n-\ti386mach)\n-\t\tbasic_machine=i386-mach\n-\t\tos=-mach\n-\t\t;;\n-\ti386-vsta | vsta)\n-\t\tbasic_machine=i386-unknown\n-\t\tos=-vsta\n-\t\t;;\n-\tiris | iris4d)\n-\t\tbasic_machine=mips-sgi\n-\t\tcase $os in\n-\t\t    -irix*)\n-\t\t\t;;\n-\t\t    *)\n-\t\t\tos=-irix4\n-\t\t\t;;\n-\t\tesac\n-\t\t;;\n-\tisi68 | isi)\n-\t\tbasic_machine=m68k-isi\n-\t\tos=-sysv\n-\t\t;;\n-\tleon-*|leon[3-9]-*)\n-\t\tbasic_machine=sparc-`echo $basic_machine | sed 's/-.*//'`\n-\t\t;;\n-\tm68knommu)\n-\t\tbasic_machine=m68k-unknown\n-\t\tos=-linux\n-\t\t;;\n-\tm68knommu-*)\n-\t\tbasic_machine=m68k-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\tos=-linux\n-\t\t;;\n-\tm88k-omron*)\n-\t\tbasic_machine=m88k-omron\n-\t\t;;\n-\tmagnum | m3230)\n-\t\tbasic_machine=mips-mips\n-\t\tos=-sysv\n-\t\t;;\n-\tmerlin)\n-\t\tbasic_machine=ns32k-utek\n-\t\tos=-sysv\n-\t\t;;\n-\tmicroblaze*)\n-\t\tbasic_machine=microblaze-xilinx\n-\t\t;;\n-\tmingw64)\n-\t\tbasic_machine=x86_64-pc\n-\t\tos=-mingw64\n-\t\t;;\n-\tmingw32)\n-\t\tbasic_machine=i686-pc\n-\t\tos=-mingw32\n-\t\t;;\n-\tmingw32ce)\n-\t\tbasic_machine=arm-unknown\n-\t\tos=-mingw32ce\n-\t\t;;\n-\tminiframe)\n-\t\tbasic_machine=m68000-convergent\n-\t\t;;\n-\t*mint | -mint[0-9]* | *MiNT | *MiNT[0-9]*)\n-\t\tbasic_machine=m68k-atari\n-\t\tos=-mint\n-\t\t;;\n-\tmips3*-*)\n-\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`\n-\t\t;;\n-\tmips3*)\n-\t\tbasic_machine=`echo $basic_machine | sed -e 's/mips3/mips64/'`-unknown\n-\t\t;;\n-\tmonitor)\n-\t\tbasic_machine=m68k-rom68k\n-\t\tos=-coff\n-\t\t;;\n-\tmorphos)\n-\t\tbasic_machine=powerpc-unknown\n-\t\tos=-morphos\n-\t\t;;\n-\tmoxiebox)\n-\t\tbasic_machine=moxie-unknown\n-\t\tos=-moxiebox\n-\t\t;;\n-\tmsdos)\n-\t\tbasic_machine=i386-pc\n-\t\tos=-msdos\n-\t\t;;\n-\tms1-*)\n-\t\tbasic_machine=`echo $basic_machine | sed -e 's/ms1-/mt-/'`\n-\t\t;;\n-\tmsys)\n-\t\tbasic_machine=i686-pc\n-\t\tos=-msys\n-\t\t;;\n-\tmvs)\n-\t\tbasic_machine=i370-ibm\n-\t\tos=-mvs\n-\t\t;;\n-\tnacl)\n-\t\tbasic_machine=le32-unknown\n-\t\tos=-nacl\n-\t\t;;\n-\tncr3000)\n-\t\tbasic_machine=i486-ncr\n-\t\tos=-sysv4\n-\t\t;;\n-\tnetbsd386)\n-\t\tbasic_machine=i386-unknown\n-\t\tos=-netbsd\n-\t\t;;\n-\tnetwinder)\n-\t\tbasic_machine=armv4l-rebel\n-\t\tos=-linux\n-\t\t;;\n-\tnews | news700 | news800 | news900)\n-\t\tbasic_machine=m68k-sony\n-\t\tos=-newsos\n-\t\t;;\n-\tnews1000)\n-\t\tbasic_machine=m68030-sony\n-\t\tos=-newsos\n-\t\t;;\n-\tnews-3600 | risc-news)\n-\t\tbasic_machine=mips-sony\n-\t\tos=-newsos\n-\t\t;;\n-\tnecv70)\n-\t\tbasic_machine=v70-nec\n-\t\tos=-sysv\n-\t\t;;\n-\tnext | m*-next )\n-\t\tbasic_machine=m68k-next\n-\t\tcase $os in\n-\t\t    -nextstep* )\n-\t\t\t;;\n-\t\t    -ns2*)\n-\t\t      os=-nextstep2\n-\t\t\t;;\n-\t\t    *)\n-\t\t      os=-nextstep3\n-\t\t\t;;\n-\t\tesac\n-\t\t;;\n-\tnh3000)\n-\t\tbasic_machine=m68k-harris\n-\t\tos=-cxux\n-\t\t;;\n-\tnh[45]000)\n-\t\tbasic_machine=m88k-harris\n-\t\tos=-cxux\n-\t\t;;\n-\tnindy960)\n-\t\tbasic_machine=i960-intel\n-\t\tos=-nindy\n-\t\t;;\n-\tmon960)\n-\t\tbasic_machine=i960-intel\n-\t\tos=-mon960\n-\t\t;;\n-\tnonstopux)\n-\t\tbasic_machine=mips-compaq\n-\t\tos=-nonstopux\n-\t\t;;\n-\tnp1)\n-\t\tbasic_machine=np1-gould\n-\t\t;;\n-\tneo-tandem)\n-\t\tbasic_machine=neo-tandem\n-\t\t;;\n-\tnse-tandem)\n-\t\tbasic_machine=nse-tandem\n-\t\t;;\n-\tnsr-tandem)\n-\t\tbasic_machine=nsr-tandem\n-\t\t;;\n-\top50n-* | op60c-*)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\tos=-proelf\n-\t\t;;\n-\topenrisc | openrisc-*)\n-\t\tbasic_machine=or32-unknown\n-\t\t;;\n-\tos400)\n-\t\tbasic_machine=powerpc-ibm\n-\t\tos=-os400\n-\t\t;;\n-\tOSE68000 | ose68000)\n-\t\tbasic_machine=m68000-ericsson\n-\t\tos=-ose\n-\t\t;;\n-\tos68k)\n-\t\tbasic_machine=m68k-none\n-\t\tos=-os68k\n-\t\t;;\n-\tpa-hitachi)\n-\t\tbasic_machine=hppa1.1-hitachi\n-\t\tos=-hiuxwe2\n-\t\t;;\n-\tparagon)\n-\t\tbasic_machine=i860-intel\n-\t\tos=-osf\n-\t\t;;\n-\tparisc)\n-\t\tbasic_machine=hppa-unknown\n-\t\tos=-linux\n-\t\t;;\n-\tparisc-*)\n-\t\tbasic_machine=hppa-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\tos=-linux\n-\t\t;;\n-\tpbd)\n-\t\tbasic_machine=sparc-tti\n-\t\t;;\n-\tpbb)\n-\t\tbasic_machine=m68k-tti\n-\t\t;;\n-\tpc532 | pc532-*)\n-\t\tbasic_machine=ns32k-pc532\n-\t\t;;\n-\tpc98)\n-\t\tbasic_machine=i386-pc\n-\t\t;;\n-\tpc98-*)\n-\t\tbasic_machine=i386-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tpentium | p5 | k5 | k6 | nexgen | viac3)\n-\t\tbasic_machine=i586-pc\n-\t\t;;\n-\tpentiumpro | p6 | 6x86 | athlon | athlon_*)\n-\t\tbasic_machine=i686-pc\n-\t\t;;\n-\tpentiumii | pentium2 | pentiumiii | pentium3)\n-\t\tbasic_machine=i686-pc\n-\t\t;;\n-\tpentium4)\n-\t\tbasic_machine=i786-pc\n-\t\t;;\n-\tpentium-* | p5-* | k5-* | k6-* | nexgen-* | viac3-*)\n-\t\tbasic_machine=i586-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tpentiumpro-* | p6-* | 6x86-* | athlon-*)\n-\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tpentiumii-* | pentium2-* | pentiumiii-* | pentium3-*)\n-\t\tbasic_machine=i686-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tpentium4-*)\n-\t\tbasic_machine=i786-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tpn)\n-\t\tbasic_machine=pn-gould\n-\t\t;;\n-\tpower)\tbasic_machine=power-ibm\n-\t\t;;\n-\tppc | ppcbe)\tbasic_machine=powerpc-unknown\n-\t\t;;\n-\tppc-* | ppcbe-*)\n-\t\tbasic_machine=powerpc-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tppcle | powerpclittle | ppc-le | powerpc-little)\n-\t\tbasic_machine=powerpcle-unknown\n-\t\t;;\n-\tppcle-* | powerpclittle-*)\n-\t\tbasic_machine=powerpcle-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tppc64)\tbasic_machine=powerpc64-unknown\n-\t\t;;\n-\tppc64-*) basic_machine=powerpc64-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tppc64le | powerpc64little | ppc64-le | powerpc64-little)\n-\t\tbasic_machine=powerpc64le-unknown\n-\t\t;;\n-\tppc64le-* | powerpc64little-*)\n-\t\tbasic_machine=powerpc64le-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tps2)\n-\t\tbasic_machine=i386-ibm\n-\t\t;;\n-\tpw32)\n-\t\tbasic_machine=i586-unknown\n-\t\tos=-pw32\n-\t\t;;\n-\trdos | rdos64)\n-\t\tbasic_machine=x86_64-pc\n-\t\tos=-rdos\n-\t\t;;\n-\trdos32)\n-\t\tbasic_machine=i386-pc\n-\t\tos=-rdos\n-\t\t;;\n-\trom68k)\n-\t\tbasic_machine=m68k-rom68k\n-\t\tos=-coff\n-\t\t;;\n-\trm[46]00)\n-\t\tbasic_machine=mips-siemens\n-\t\t;;\n-\trtpc | rtpc-*)\n-\t\tbasic_machine=romp-ibm\n-\t\t;;\n-\ts390 | s390-*)\n-\t\tbasic_machine=s390-ibm\n-\t\t;;\n-\ts390x | s390x-*)\n-\t\tbasic_machine=s390x-ibm\n-\t\t;;\n-\tsa29200)\n-\t\tbasic_machine=a29k-amd\n-\t\tos=-udi\n-\t\t;;\n-\tsb1)\n-\t\tbasic_machine=mipsisa64sb1-unknown\n-\t\t;;\n-\tsb1el)\n-\t\tbasic_machine=mipsisa64sb1el-unknown\n-\t\t;;\n-\tsde)\n-\t\tbasic_machine=mipsisa32-sde\n-\t\tos=-elf\n-\t\t;;\n-\tsei)\n-\t\tbasic_machine=mips-sei\n-\t\tos=-seiux\n-\t\t;;\n-\tsequent)\n-\t\tbasic_machine=i386-sequent\n-\t\t;;\n-\tsh)\n-\t\tbasic_machine=sh-hitachi\n-\t\tos=-hms\n-\t\t;;\n-\tsh5el)\n-\t\tbasic_machine=sh5le-unknown\n-\t\t;;\n-\tsh64)\n-\t\tbasic_machine=sh64-unknown\n-\t\t;;\n-\tsparclite-wrs | simso-wrs)\n-\t\tbasic_machine=sparclite-wrs\n-\t\tos=-vxworks\n-\t\t;;\n-\tsps7)\n-\t\tbasic_machine=m68k-bull\n-\t\tos=-sysv2\n-\t\t;;\n-\tspur)\n-\t\tbasic_machine=spur-unknown\n-\t\t;;\n-\tst2000)\n-\t\tbasic_machine=m68k-tandem\n-\t\t;;\n-\tstratus)\n-\t\tbasic_machine=i860-stratus\n-\t\tos=-sysv4\n-\t\t;;\n-\tstrongarm-* | thumb-*)\n-\t\tbasic_machine=arm-`echo $basic_machine | sed 's/^[^-]*-//'`\n-\t\t;;\n-\tsun2)\n-\t\tbasic_machine=m68000-sun\n-\t\t;;\n-\tsun2os3)\n-\t\tbasic_machine=m68000-sun\n-\t\tos=-sunos3\n-\t\t;;\n-\tsun2os4)\n-\t\tbasic_machine=m68000-sun\n-\t\tos=-sunos4\n-\t\t;;\n-\tsun3os3)\n-\t\tbasic_machine=m68k-sun\n-\t\tos=-sunos3\n-\t\t;;\n-\tsun3os4)\n-\t\tbasic_machine=m68k-sun\n-\t\tos=-sunos4\n-\t\t;;\n-\tsun4os3)\n-\t\tbasic_machine=sparc-sun\n-\t\tos=-sunos3\n-\t\t;;\n-\tsun4os4)\n-\t\tbasic_machine=sparc-sun\n-\t\tos=-sunos4\n-\t\t;;\n-\tsun4sol2)\n-\t\tbasic_machine=sparc-sun\n-\t\tos=-solaris2\n-\t\t;;\n-\tsun3 | sun3-*)\n-\t\tbasic_machine=m68k-sun\n-\t\t;;\n-\tsun4)\n-\t\tbasic_machine=sparc-sun\n-\t\t;;\n-\tsun386 | sun386i | roadrunner)\n-\t\tbasic_machine=i386-sun\n-\t\t;;\n-\tsv1)\n-\t\tbasic_machine=sv1-cray\n-\t\tos=-unicos\n-\t\t;;\n-\tsymmetry)\n-\t\tbasic_machine=i386-sequent\n-\t\tos=-dynix\n-\t\t;;\n-\tt3e)\n-\t\tbasic_machine=alphaev5-cray\n-\t\tos=-unicos\n-\t\t;;\n-\tt90)\n-\t\tbasic_machine=t90-cray\n-\t\tos=-unicos\n-\t\t;;\n-\ttile*)\n-\t\tbasic_machine=$basic_machine-unknown\n-\t\tos=-linux-gnu\n-\t\t;;\n-\ttx39)\n-\t\tbasic_machine=mipstx39-unknown\n-\t\t;;\n-\ttx39el)\n-\t\tbasic_machine=mipstx39el-unknown\n-\t\t;;\n-\ttoad1)\n-\t\tbasic_machine=pdp10-xkl\n-\t\tos=-tops20\n-\t\t;;\n-\ttower | tower-32)\n-\t\tbasic_machine=m68k-ncr\n-\t\t;;\n-\ttpf)\n-\t\tbasic_machine=s390x-ibm\n-\t\tos=-tpf\n-\t\t;;\n-\tudi29k)\n-\t\tbasic_machine=a29k-amd\n-\t\tos=-udi\n-\t\t;;\n-\tultra3)\n-\t\tbasic_machine=a29k-nyu\n-\t\tos=-sym1\n-\t\t;;\n-\tv810 | necv810)\n-\t\tbasic_machine=v810-nec\n-\t\tos=-none\n-\t\t;;\n-\tvaxv)\n-\t\tbasic_machine=vax-dec\n-\t\tos=-sysv\n-\t\t;;\n-\tvms)\n-\t\tbasic_machine=vax-dec\n-\t\tos=-vms\n-\t\t;;\n-\tvpp*|vx|vx-*)\n-\t\tbasic_machine=f301-fujitsu\n-\t\t;;\n-\tvxworks960)\n-\t\tbasic_machine=i960-wrs\n-\t\tos=-vxworks\n-\t\t;;\n-\tvxworks68)\n-\t\tbasic_machine=m68k-wrs\n-\t\tos=-vxworks\n-\t\t;;\n-\tvxworks29k)\n-\t\tbasic_machine=a29k-wrs\n-\t\tos=-vxworks\n-\t\t;;\n-\tw65*)\n-\t\tbasic_machine=w65-wdc\n-\t\tos=-none\n-\t\t;;\n-\tw89k-*)\n-\t\tbasic_machine=hppa1.1-winbond\n-\t\tos=-proelf\n-\t\t;;\n-\txbox)\n-\t\tbasic_machine=i686-pc\n-\t\tos=-mingw32\n-\t\t;;\n-\txps | xps100)\n-\t\tbasic_machine=xps100-honeywell\n-\t\t;;\n-\txscale-* | xscalee[bl]-*)\n-\t\tbasic_machine=`echo $basic_machine | sed 's/^xscale/arm/'`\n-\t\t;;\n-\tymp)\n-\t\tbasic_machine=ymp-cray\n-\t\tos=-unicos\n-\t\t;;\n-\tz8k-*-coff)\n-\t\tbasic_machine=z8k-unknown\n-\t\tos=-sim\n-\t\t;;\n-\tz80-*-coff)\n-\t\tbasic_machine=z80-unknown\n-\t\tos=-sim\n-\t\t;;\n-\tnone)\n-\t\tbasic_machine=none-none\n-\t\tos=-none\n-\t\t;;\n-\n-# Here we handle the default manufacturer of certain CPU types.  It is in\n-# some cases the only manufacturer, in others, it is the most popular.\n-\tw89k)\n-\t\tbasic_machine=hppa1.1-winbond\n-\t\t;;\n-\top50n)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\t;;\n-\top60c)\n-\t\tbasic_machine=hppa1.1-oki\n-\t\t;;\n-\tromp)\n-\t\tbasic_machine=romp-ibm\n-\t\t;;\n-\tmmix)\n-\t\tbasic_machine=mmix-knuth\n-\t\t;;\n-\trs6000)\n-\t\tbasic_machine=rs6000-ibm\n-\t\t;;\n-\tvax)\n-\t\tbasic_machine=vax-dec\n-\t\t;;\n-\tpdp10)\n-\t\t# there are many clones, so DEC is not a safe bet\n-\t\tbasic_machine=pdp10-unknown\n-\t\t;;\n-\tpdp11)\n-\t\tbasic_machine=pdp11-dec\n-\t\t;;\n-\twe32k)\n-\t\tbasic_machine=we32k-att\n-\t\t;;\n-\tsh[1234] | sh[24]a | sh[24]aeb | sh[34]eb | sh[1234]le | sh[23]ele)\n-\t\tbasic_machine=sh-unknown\n-\t\t;;\n-\tsparc | sparcv8 | sparcv9 | sparcv9b | sparcv9v)\n-\t\tbasic_machine=sparc-sun\n-\t\t;;\n-\tcydra)\n-\t\tbasic_machine=cydra-cydrome\n-\t\t;;\n-\torion)\n-\t\tbasic_machine=orion-highlevel\n-\t\t;;\n-\torion105)\n-\t\tbasic_machine=clipper-highlevel\n-\t\t;;\n-\tmac | mpw | mac-mpw)\n-\t\tbasic_machine=m68k-apple\n-\t\t;;\n-\tpmac | pmac-mpw)\n-\t\tbasic_machine=powerpc-apple\n-\t\t;;\n-\t*-unknown)\n-\t\t# Make sure to match an already-canonicalized machine name.\n-\t\t;;\n-\t*)\n-\t\techo Invalid configuration \\`$1\\': machine \\`$basic_machine\\' not recognized 1>&2\n-\t\texit 1\n-\t\t;;\n-esac\n-\n-# Here we canonicalize certain aliases for manufacturers.\n-case $basic_machine in\n-\t*-digital*)\n-\t\tbasic_machine=`echo $basic_machine | sed 's/digital.*/dec/'`\n-\t\t;;\n-\t*-commodore*)\n-\t\tbasic_machine=`echo $basic_machine | sed 's/commodore.*/cbm/'`\n-\t\t;;\n-\t*)\n-\t\t;;\n-esac\n-\n-# Decode manufacturer-specific aliases for certain operating systems.\n-\n-if [ x\"$os\" != x\"\" ]\n-then\n-case $os in\n-\t# First match some system type aliases\n-\t# that might get confused with valid system types.\n-\t# -solaris* is a basic system type, with this one exception.\n-\t-auroraux)\n-\t\tos=-auroraux\n-\t\t;;\n-\t-solaris1 | -solaris1.*)\n-\t\tos=`echo $os | sed -e 's|solaris1|sunos4|'`\n-\t\t;;\n-\t-solaris)\n-\t\tos=-solaris2\n-\t\t;;\n-\t-svr4*)\n-\t\tos=-sysv4\n-\t\t;;\n-\t-unixware*)\n-\t\tos=-sysv4.2uw\n-\t\t;;\n-\t-gnu/linux*)\n-\t\tos=`echo $os | sed -e 's|gnu/linux|linux-gnu|'`\n-\t\t;;\n-\t# First accept the basic system types.\n-\t# The portable systems comes first.\n-\t# Each alternative MUST END IN A *, to match a version number.\n-\t# -sysv* is not here because it comes later, after sysvr4.\n-\t-gnu* | -bsd* | -mach* | -minix* | -genix* | -ultrix* | -irix* \\\n-\t      | -*vms* | -sco* | -esix* | -isc* | -aix* | -cnk* | -sunos | -sunos[34]*\\\n-\t      | -hpux* | -unos* | -osf* | -luna* | -dgux* | -auroraux* | -solaris* \\\n-\t      | -sym* | -kopensolaris* | -plan9* \\\n-\t      | -amigaos* | -amigados* | -msdos* | -newsos* | -unicos* | -aof* \\\n-\t      | -aos* | -aros* | -cloudabi* | -sortix* \\\n-\t      | -nindy* | -vxsim* | -vxworks* | -ebmon* | -hms* | -mvs* \\\n-\t      | -clix* | -riscos* | -uniplus* | -iris* | -rtu* | -xenix* \\\n-\t      | -hiux* | -386bsd* | -knetbsd* | -mirbsd* | -netbsd* \\\n-\t      | -bitrig* | -openbsd* | -solidbsd* \\\n-\t      | -ekkobsd* | -kfreebsd* | -freebsd* | -riscix* | -lynxos* \\\n-\t      | -bosx* | -nextstep* | -cxux* | -aout* | -elf* | -oabi* \\\n-\t      | -ptx* | -coff* | -ecoff* | -winnt* | -domain* | -vsta* \\\n-\t      | -udi* | -eabi* | -lites* | -ieee* | -go32* | -aux* \\\n-\t      | -chorusos* | -chorusrdb* | -cegcc* \\\n-\t      | -cygwin* | -msys* | -pe* | -psos* | -moss* | -proelf* | -rtems* \\\n-\t      | -mingw32* | -mingw64* | -linux-gnu* | -linux-android* \\\n-\t      | -linux-newlib* | -linux-musl* | -linux-uclibc* \\\n-\t      | -uxpv* | -beos* | -mpeix* | -udk* | -moxiebox* \\\n-\t      | -interix* | -uwin* | -mks* | -rhapsody* | -darwin* | -opened* \\\n-\t      | -openstep* | -oskit* | -conix* | -pw32* | -nonstopux* \\\n-\t      | -storm-chaos* | -tops10* | -tenex* | -tops20* | -its* \\\n-\t      | -os2* | -vos* | -palmos* | -uclinux* | -nucleus* \\\n-\t      | -morphos* | -superux* | -rtmk* | -rtmk-nova* | -windiss* \\\n-\t      | -powermax* | -dnix* | -nx6 | -nx7 | -sei* | -dragonfly* \\\n-\t      | -skyos* | -haiku* | -rdos* | -toppers* | -drops* | -es* \\\n-\t      | -onefs* | -tirtos*)\n-\t# Remember, each alternative MUST END IN *, to match a version number.\n-\t\t;;\n-\t-qnx*)\n-\t\tcase $basic_machine in\n-\t\t    x86-* | i*86-*)\n-\t\t\t;;\n-\t\t    *)\n-\t\t\tos=-nto$os\n-\t\t\t;;\n-\t\tesac\n-\t\t;;\n-\t-nto-qnx*)\n-\t\t;;\n-\t-nto*)\n-\t\tos=`echo $os | sed -e 's|nto|nto-qnx|'`\n-\t\t;;\n-\t-sim | -es1800* | -hms* | -xray | -os68k* | -none* | -v88r* \\\n-\t      | -windows* | -osx | -abug | -netware* | -os9* | -beos* | -haiku* \\\n-\t      | -macos* | -mpw* | -magic* | -mmixware* | -mon960* | -lnews*)\n-\t\t;;\n-\t-mac*)\n-\t\tos=`echo $os | sed -e 's|mac|macos|'`\n-\t\t;;\n-\t-linux-dietlibc)\n-\t\tos=-linux-dietlibc\n-\t\t;;\n-\t-linux*)\n-\t\tos=`echo $os | sed -e 's|linux|linux-gnu|'`\n-\t\t;;\n-\t-sunos5*)\n-\t\tos=`echo $os | sed -e 's|sunos5|solaris2|'`\n-\t\t;;\n-\t-sunos6*)\n-\t\tos=`echo $os | sed -e 's|sunos6|solaris3|'`\n-\t\t;;\n-\t-opened*)\n-\t\tos=-openedition\n-\t\t;;\n-\t-os400*)\n-\t\tos=-os400\n-\t\t;;\n-\t-wince*)\n-\t\tos=-wince\n-\t\t;;\n-\t-osfrose*)\n-\t\tos=-osfrose\n-\t\t;;\n-\t-osf*)\n-\t\tos=-osf\n-\t\t;;\n-\t-utek*)\n-\t\tos=-bsd\n-\t\t;;\n-\t-dynix*)\n-\t\tos=-bsd\n-\t\t;;\n-\t-acis*)\n-\t\tos=-aos\n-\t\t;;\n-\t-atheos*)\n-\t\tos=-atheos\n-\t\t;;\n-\t-syllable*)\n-\t\tos=-syllable\n-\t\t;;\n-\t-386bsd)\n-\t\tos=-bsd\n-\t\t;;\n-\t-ctix* | -uts*)\n-\t\tos=-sysv\n-\t\t;;\n-\t-nova*)\n-\t\tos=-rtmk-nova\n-\t\t;;\n-\t-ns2 )\n-\t\tos=-nextstep2\n-\t\t;;\n-\t-nsk*)\n-\t\tos=-nsk\n-\t\t;;\n-\t# Preserve the version number of sinix5.\n-\t-sinix5.*)\n-\t\tos=`echo $os | sed -e 's|sinix|sysv|'`\n-\t\t;;\n-\t-sinix*)\n-\t\tos=-sysv4\n-\t\t;;\n-\t-tpf*)\n-\t\tos=-tpf\n-\t\t;;\n-\t-triton*)\n-\t\tos=-sysv3\n-\t\t;;\n-\t-oss*)\n-\t\tos=-sysv3\n-\t\t;;\n-\t-svr4)\n-\t\tos=-sysv4\n-\t\t;;\n-\t-svr3)\n-\t\tos=-sysv3\n-\t\t;;\n-\t-sysvr4)\n-\t\tos=-sysv4\n-\t\t;;\n-\t# This must come after -sysvr4.\n-\t-sysv*)\n-\t\t;;\n-\t-ose*)\n-\t\tos=-ose\n-\t\t;;\n-\t-es1800*)\n-\t\tos=-ose\n-\t\t;;\n-\t-xenix)\n-\t\tos=-xenix\n-\t\t;;\n-\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n-\t\tos=-mint\n-\t\t;;\n-\t-aros*)\n-\t\tos=-aros\n-\t\t;;\n-\t-zvmoe)\n-\t\tos=-zvmoe\n-\t\t;;\n-\t-dicos*)\n-\t\tos=-dicos\n-\t\t;;\n-\t-nacl*)\n-\t\t;;\n-\t-none)\n-\t\t;;\n-\t*)\n-\t\t# Get rid of the `-' at the beginning of $os.\n-\t\tos=`echo $os | sed 's/[^-]*-//'`\n-\t\techo Invalid configuration \\`$1\\': system \\`$os\\' not recognized 1>&2\n-\t\texit 1\n-\t\t;;\n-esac\n-else\n-\n-# Here we handle the default operating systems that come with various machines.\n-# The value should be what the vendor currently ships out the door with their\n-# machine or put another way, the most popular os provided with the machine.\n-\n-# Note that if you're going to try to match \"-MANUFACTURER\" here (say,\n-# \"-sun\"), then you have to tell the case statement up towards the top\n-# that MANUFACTURER isn't an operating system.  Otherwise, code above\n-# will signal an error saying that MANUFACTURER isn't an operating\n-# system, and we'll never get to this point.\n-\n-case $basic_machine in\n-\tscore-*)\n-\t\tos=-elf\n-\t\t;;\n-\tspu-*)\n-\t\tos=-elf\n-\t\t;;\n-\t*-acorn)\n-\t\tos=-riscix1.2\n-\t\t;;\n-\tarm*-rebel)\n-\t\tos=-linux\n-\t\t;;\n-\tarm*-semi)\n-\t\tos=-aout\n-\t\t;;\n-\tc4x-* | tic4x-*)\n-\t\tos=-coff\n-\t\t;;\n-\tc8051-*)\n-\t\tos=-elf\n-\t\t;;\n-\thexagon-*)\n-\t\tos=-elf\n-\t\t;;\n-\ttic54x-*)\n-\t\tos=-coff\n-\t\t;;\n-\ttic55x-*)\n-\t\tos=-coff\n-\t\t;;\n-\ttic6x-*)\n-\t\tos=-coff\n-\t\t;;\n-\t# This must come before the *-dec entry.\n-\tpdp10-*)\n-\t\tos=-tops20\n-\t\t;;\n-\tpdp11-*)\n-\t\tos=-none\n-\t\t;;\n-\t*-dec | vax-*)\n-\t\tos=-ultrix4.2\n-\t\t;;\n-\tm68*-apollo)\n-\t\tos=-domain\n-\t\t;;\n-\ti386-sun)\n-\t\tos=-sunos4.0.2\n-\t\t;;\n-\tm68000-sun)\n-\t\tos=-sunos3\n-\t\t;;\n-\tm68*-cisco)\n-\t\tos=-aout\n-\t\t;;\n-\tmep-*)\n-\t\tos=-elf\n-\t\t;;\n-\tmips*-cisco)\n-\t\tos=-elf\n-\t\t;;\n-\tmips*-*)\n-\t\tos=-elf\n-\t\t;;\n-\tor32-*)\n-\t\tos=-coff\n-\t\t;;\n-\t*-tti)\t# must be before sparc entry or we get the wrong os.\n-\t\tos=-sysv3\n-\t\t;;\n-\tsparc-* | *-sun)\n-\t\tos=-sunos4.1.1\n-\t\t;;\n-\t*-be)\n-\t\tos=-beos\n-\t\t;;\n-\t*-haiku)\n-\t\tos=-haiku\n-\t\t;;\n-\t*-ibm)\n-\t\tos=-aix\n-\t\t;;\n-\t*-knuth)\n-\t\tos=-mmixware\n-\t\t;;\n-\t*-wec)\n-\t\tos=-proelf\n-\t\t;;\n-\t*-winbond)\n-\t\tos=-proelf\n-\t\t;;\n-\t*-oki)\n-\t\tos=-proelf\n-\t\t;;\n-\t*-hp)\n-\t\tos=-hpux\n-\t\t;;\n-\t*-hitachi)\n-\t\tos=-hiux\n-\t\t;;\n-\ti860-* | *-att | *-ncr | *-altos | *-motorola | *-convergent)\n-\t\tos=-sysv\n-\t\t;;\n-\t*-cbm)\n-\t\tos=-amigaos\n-\t\t;;\n-\t*-dg)\n-\t\tos=-dgux\n-\t\t;;\n-\t*-dolphin)\n-\t\tos=-sysv3\n-\t\t;;\n-\tm68k-ccur)\n-\t\tos=-rtu\n-\t\t;;\n-\tm88k-omron*)\n-\t\tos=-luna\n-\t\t;;\n-\t*-next )\n-\t\tos=-nextstep\n-\t\t;;\n-\t*-sequent)\n-\t\tos=-ptx\n-\t\t;;\n-\t*-crds)\n-\t\tos=-unos\n-\t\t;;\n-\t*-ns)\n-\t\tos=-genix\n-\t\t;;\n-\ti370-*)\n-\t\tos=-mvs\n-\t\t;;\n-\t*-next)\n-\t\tos=-nextstep3\n-\t\t;;\n-\t*-gould)\n-\t\tos=-sysv\n-\t\t;;\n-\t*-highlevel)\n-\t\tos=-bsd\n-\t\t;;\n-\t*-encore)\n-\t\tos=-bsd\n-\t\t;;\n-\t*-sgi)\n-\t\tos=-irix\n-\t\t;;\n-\t*-siemens)\n-\t\tos=-sysv4\n-\t\t;;\n-\t*-masscomp)\n-\t\tos=-rtu\n-\t\t;;\n-\tf30[01]-fujitsu | f700-fujitsu)\n-\t\tos=-uxpv\n-\t\t;;\n-\t*-rom68k)\n-\t\tos=-coff\n-\t\t;;\n-\t*-*bug)\n-\t\tos=-coff\n-\t\t;;\n-\t*-apple)\n-\t\tos=-macos\n-\t\t;;\n-\t*-atari*)\n-\t\tos=-mint\n-\t\t;;\n-\t*)\n-\t\tos=-none\n-\t\t;;\n-esac\n-fi\n-\n-# Here we handle the case where we know the os, and the CPU type, but not the\n-# manufacturer.  We pick the logical manufacturer.\n-vendor=unknown\n-case $basic_machine in\n-\t*-unknown)\n-\t\tcase $os in\n-\t\t\t-riscix*)\n-\t\t\t\tvendor=acorn\n-\t\t\t\t;;\n-\t\t\t-sunos*)\n-\t\t\t\tvendor=sun\n-\t\t\t\t;;\n-\t\t\t-cnk*|-aix*)\n-\t\t\t\tvendor=ibm\n-\t\t\t\t;;\n-\t\t\t-beos*)\n-\t\t\t\tvendor=be\n-\t\t\t\t;;\n-\t\t\t-hpux*)\n-\t\t\t\tvendor=hp\n-\t\t\t\t;;\n-\t\t\t-mpeix*)\n-\t\t\t\tvendor=hp\n-\t\t\t\t;;\n-\t\t\t-hiux*)\n-\t\t\t\tvendor=hitachi\n-\t\t\t\t;;\n-\t\t\t-unos*)\n-\t\t\t\tvendor=crds\n-\t\t\t\t;;\n-\t\t\t-dgux*)\n-\t\t\t\tvendor=dg\n-\t\t\t\t;;\n-\t\t\t-luna*)\n-\t\t\t\tvendor=omron\n-\t\t\t\t;;\n-\t\t\t-genix*)\n-\t\t\t\tvendor=ns\n-\t\t\t\t;;\n-\t\t\t-mvs* | -opened*)\n-\t\t\t\tvendor=ibm\n-\t\t\t\t;;\n-\t\t\t-os400*)\n-\t\t\t\tvendor=ibm\n-\t\t\t\t;;\n-\t\t\t-ptx*)\n-\t\t\t\tvendor=sequent\n-\t\t\t\t;;\n-\t\t\t-tpf*)\n-\t\t\t\tvendor=ibm\n-\t\t\t\t;;\n-\t\t\t-vxsim* | -vxworks* | -windiss*)\n-\t\t\t\tvendor=wrs\n-\t\t\t\t;;\n-\t\t\t-aux*)\n-\t\t\t\tvendor=apple\n-\t\t\t\t;;\n-\t\t\t-hms*)\n-\t\t\t\tvendor=hitachi\n-\t\t\t\t;;\n-\t\t\t-mpw* | -macos*)\n-\t\t\t\tvendor=apple\n-\t\t\t\t;;\n-\t\t\t-*mint | -mint[0-9]* | -*MiNT | -MiNT[0-9]*)\n-\t\t\t\tvendor=atari\n-\t\t\t\t;;\n-\t\t\t-vos*)\n-\t\t\t\tvendor=stratus\n-\t\t\t\t;;\n-\t\tesac\n-\t\tbasic_machine=`echo $basic_machine | sed \"s/unknown/$vendor/\"`\n-\t\t;;\n-esac\n-\n-echo $basic_machine$os\n-exit\n-\n-# Local variables:\n-# eval: (add-hook 'write-file-hooks 'time-stamp)\n-# time-stamp-start: \"timestamp='\"\n-# time-stamp-format: \"%:y-%02m-%02d\"\n-# time-stamp-end: \"'\"\n-# End:"
      },
      {
        "sha": "74f9ef3f205ec0e12f6ac9e75f03da81dd7d96e7",
        "filename": "depends/description.md",
        "status": "removed",
        "additions": 0,
        "deletions": 53,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/description.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/description.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/description.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,53 +0,0 @@\n-This is a system of building and caching dependencies necessary for building Bitcoin. \n-There are several features that make it different from most similar systems:\n-\n-### It is designed to be builder and host agnostic\n-\n-In theory, binaries for any target OS/architecture can be created, from a\n-builder running any OS/architecture. In practice, build-side tools must be\n-specified when the defaults don't fit, and packages must be amended to work\n-on new hosts. For now, a build architecture of x86_64 is assumed, either on\n-Linux or OSX.\n-\n-### No reliance on timestamps\n-\n-File presence is used to determine what needs to be built. This makes the\n-results distributable and easily digestable by automated builders.\n-\n-### Each build only has its specified dependencies available at build-time.\n-\n-For each build, the sysroot is wiped and the (recursive) dependencies are\n-installed. This makes each build deterministic, since there will never be any\n-unknown files available to cause side-effects.\n-\n-### Each package is cached and only rebuilt as needed.\n-\n-Before building, a unique build-id is generated for each package. This id\n-consists of a hash of all files used to build the package (Makefiles, packages,\n-etc), and as well as a hash of the same data for each recursive dependency. If\n-any portion of a package's build recipe changes, it will be rebuilt as well as\n-any other package that depends on it. If any of the main makefiles (Makefile, \n-funcs.mk, etc) are changed, all packages will be rebuilt. After building, the\n-results are cached into a tarball that can be re-used and distributed.\n-\n-### Package build results are (relatively) deterministic.\n-\n-Each package is configured and patched so that it will yield the same\n-build-results with each consequent build, within a reasonable set of\n-constraints. Some things like timestamp insertion are unavoidable, and are\n-beyond the scope of this system. Additionally, the toolchain itself must be\n-capable of deterministic results. When revisions are properly bumped, a cached\n-build should represent an exact single payload.\n-\n-### Sources are fetched and verified automatically\n-\n-Each package must define its source location and checksum. The build will fail\n-if the fetched source does not match. Sources may be pre-seeded and/or cached\n-as desired.\n-\n-### Self-cleaning\n-\n-Build and staging dirs are wiped after use, and any previous version of a\n-cached result is removed following a successful build. Automated builders\n-should be able to build each revision and store the results with no further\n-intervention."
      },
      {
        "sha": "050a9b132137e5aa0a24ff3448abadbe0733dc62",
        "filename": "depends/funcs.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 241,
        "changes": 241,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/funcs.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/funcs.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/funcs.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,241 +0,0 @@\n-define int_vars\n-#Set defaults for vars which may be overridden per-package\n-$(1)_cc=$($($(1)_type)_CC)\n-$(1)_cxx=$($($(1)_type)_CXX)\n-$(1)_objc=$($($(1)_type)_OBJC)\n-$(1)_objcxx=$($($(1)_type)_OBJCXX)\n-$(1)_ar=$($($(1)_type)_AR)\n-$(1)_ranlib=$($($(1)_type)_RANLIB)\n-$(1)_libtool=$($($(1)_type)_LIBTOOL)\n-$(1)_nm=$($($(1)_type)_NM)\n-$(1)_cflags=$($($(1)_type)_CFLAGS) $($($(1)_type)_$(release_type)_CFLAGS)\n-$(1)_cxxflags=$($($(1)_type)_CXXFLAGS) $($($(1)_type)_$(release_type)_CXXFLAGS)\n-$(1)_ldflags=$($($(1)_type)_LDFLAGS) $($($(1)_type)_$(release_type)_LDFLAGS) -L$($($(1)_type)_prefix)/lib\n-$(1)_cppflags=$($($(1)_type)_CPPFLAGS) $($($(1)_type)_$(release_type)_CPPFLAGS) -I$($($(1)_type)_prefix)/include\n-$(1)_recipe_hash:=\n-endef\n-\n-define int_get_all_dependencies\n-$(sort $(foreach dep,$(2),$(2) $(call int_get_all_dependencies,$(1),$($(dep)_dependencies))))\n-endef\n-\n-define fetch_file\n-(test -f $$($(1)_source_dir)/$(4) || \\\n-  ( mkdir -p $$($(1)_download_dir) && echo Fetching $(1)... && \\\n-  ( $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(2)/$(3)\" || \\\n-    $(build_DOWNLOAD) \"$$($(1)_download_dir)/$(4).temp\" \"$(FALLBACK_DOWNLOAD_PATH)/$(3)\" ) && \\\n-    echo \"$(5)  $$($(1)_download_dir)/$(4).temp\" > $$($(1)_download_dir)/.$(4).hash && \\\n-    $(build_SHA256SUM) -c $$($(1)_download_dir)/.$(4).hash && \\\n-    mv $$($(1)_download_dir)/$(4).temp $$($(1)_source_dir)/$(4) && \\\n-    rm -rf $$($(1)_download_dir) ))\n-endef\n-\n-define int_get_build_recipe_hash\n-$(eval $(1)_all_file_checksums:=$(shell $(build_SHA256SUM) $(meta_depends) packages/$(1).mk $(addprefix $(PATCHES_PATH)/$(1)/,$($(1)_patches)) | cut -d\" \" -f1))\n-$(eval $(1)_recipe_hash:=$(shell echo -n \"$($(1)_all_file_checksums)\" | $(build_SHA256SUM) | cut -d\" \" -f1))\n-endef\n-\n-define int_get_build_id\n-$(eval $(1)_dependencies += $($(1)_$(host_arch)_$(host_os)_dependencies) $($(1)_$(host_os)_dependencies))\n-$(eval $(1)_all_dependencies:=$(call int_get_all_dependencies,$(1),$($($(1)_type)_native_toolchain) $($(1)_dependencies)))\n-$(foreach dep,$($(1)_all_dependencies),$(eval $(1)_build_id_deps+=$(dep)-$($(dep)_version)-$($(dep)_recipe_hash)))\n-$(eval $(1)_build_id_long:=$(1)-$($(1)_version)-$($(1)_recipe_hash)-$(release_type) $($(1)_build_id_deps))\n-$(eval $(1)_build_id:=$(shell echo -n \"$($(1)_build_id_long)\" | $(build_SHA256SUM) | cut -c-$(HASH_LENGTH)))\n-final_build_id_long+=$($(package)_build_id_long)\n-\n-#compute package-specific paths\n-$(1)_build_subdir?=.\n-$(1)_download_file?=$($(1)_file_name)\n-$(1)_source_dir:=$(SOURCES_PATH)\n-$(1)_source:=$$($(1)_source_dir)/$($(1)_file_name)\n-$(1)_staging_dir=$(base_staging_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n-$(1)_staging_prefix_dir:=$$($(1)_staging_dir)$($($(1)_type)_prefix)\n-$(1)_extract_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)\n-$(1)_download_dir:=$(base_download_dir)/$(1)-$($(1)_version)\n-$(1)_build_dir:=$$($(1)_extract_dir)/$$($(1)_build_subdir)\n-$(1)_cached_checksum:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz.hash\n-$(1)_patch_dir:=$(base_build_dir)/$(host)/$(1)/$($(1)_version)-$($(1)_build_id)/.patches-$($(1)_build_id)\n-$(1)_prefixbin:=$($($(1)_type)_prefix)/bin/\n-$(1)_cached:=$(BASE_CACHE)/$(host)/$(1)/$(1)-$($(1)_version)-$($(1)_build_id).tar.gz\n-$(1)_all_sources=$($(1)_file_name) $($(1)_extra_sources)\n-\n-#stamps\n-$(1)_fetched=$(SOURCES_PATH)/download-stamps/.stamp_fetched-$(1)-$($(1)_file_name).hash\n-$(1)_extracted=$$($(1)_extract_dir)/.stamp_extracted\n-$(1)_preprocessed=$$($(1)_extract_dir)/.stamp_preprocessed\n-$(1)_cleaned=$$($(1)_extract_dir)/.stamp_cleaned\n-$(1)_built=$$($(1)_build_dir)/.stamp_built\n-$(1)_configured=$$($(1)_build_dir)/.stamp_configured\n-$(1)_staged=$$($(1)_staging_dir)/.stamp_staged\n-$(1)_postprocessed=$$($(1)_staging_prefix_dir)/.stamp_postprocessed\n-$(1)_download_path_fixed=$(subst :,\\:,$$($(1)_download_path))\n-\n-\n-#default commands\n-$(1)_fetch_cmds ?= $(call fetch_file,$(1),$(subst \\:,:,$$($(1)_download_path_fixed)),$$($(1)_download_file),$($(1)_file_name),$($(1)_sha256_hash))\n-$(1)_extract_cmds ?= mkdir -p $$($(1)_extract_dir) && echo \"$$($(1)_sha256_hash)  $$($(1)_source)\" > $$($(1)_extract_dir)/.$$($(1)_file_name).hash &&  $(build_SHA256SUM) -c $$($(1)_extract_dir)/.$$($(1)_file_name).hash && tar --strip-components=1 -xf $$($(1)_source)\n-$(1)_preprocess_cmds ?=\n-$(1)_build_cmds ?=\n-$(1)_config_cmds ?=\n-$(1)_stage_cmds ?=\n-$(1)_set_vars ?=\n-\n-\n-all_sources+=$$($(1)_fetched)\n-endef\n-#$(foreach dep_target,$($(1)_all_dependencies),$(eval $(1)_dependency_targets=$($(dep_target)_cached)))\n-\n-\n-define int_config_attach_build_config\n-$(eval $(call $(1)_set_vars,$(1)))\n-$(1)_cflags+=$($(1)_cflags_$(release_type))\n-$(1)_cflags+=$($(1)_cflags_$(host_arch)) $($(1)_cflags_$(host_arch)_$(release_type))\n-$(1)_cflags+=$($(1)_cflags_$(host_os)) $($(1)_cflags_$(host_os)_$(release_type))\n-$(1)_cflags+=$($(1)_cflags_$(host_arch)_$(host_os)) $($(1)_cflags_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_cxxflags+=$($(1)_cxxflags_$(release_type))\n-$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)) $($(1)_cxxflags_$(host_arch)_$(release_type))\n-$(1)_cxxflags+=$($(1)_cxxflags_$(host_os)) $($(1)_cxxflags_$(host_os)_$(release_type))\n-$(1)_cxxflags+=$($(1)_cxxflags_$(host_arch)_$(host_os)) $($(1)_cxxflags_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_cppflags+=$($(1)_cppflags_$(release_type))\n-$(1)_cppflags+=$($(1)_cppflags_$(host_arch)) $($(1)_cppflags_$(host_arch)_$(release_type))\n-$(1)_cppflags+=$($(1)_cppflags_$(host_os)) $($(1)_cppflags_$(host_os)_$(release_type))\n-$(1)_cppflags+=$($(1)_cppflags_$(host_arch)_$(host_os)) $($(1)_cppflags_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_ldflags+=$($(1)_ldflags_$(release_type))\n-$(1)_ldflags+=$($(1)_ldflags_$(host_arch)) $($(1)_ldflags_$(host_arch)_$(release_type))\n-$(1)_ldflags+=$($(1)_ldflags_$(host_os)) $($(1)_ldflags_$(host_os)_$(release_type))\n-$(1)_ldflags+=$($(1)_ldflags_$(host_arch)_$(host_os)) $($(1)_ldflags_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_build_opts+=$$($(1)_build_opts_$(release_type))\n-$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)) $$($(1)_build_opts_$(host_arch)_$(release_type))\n-$(1)_build_opts+=$$($(1)_build_opts_$(host_os)) $$($(1)_build_opts_$(host_os)_$(release_type))\n-$(1)_build_opts+=$$($(1)_build_opts_$(host_arch)_$(host_os)) $$($(1)_build_opts_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_config_opts+=$$($(1)_config_opts_$(release_type))\n-$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)) $$($(1)_config_opts_$(host_arch)_$(release_type))\n-$(1)_config_opts+=$$($(1)_config_opts_$(host_os)) $$($(1)_config_opts_$(host_os)_$(release_type))\n-$(1)_config_opts+=$$($(1)_config_opts_$(host_arch)_$(host_os)) $$($(1)_config_opts_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_config_env+=$$($(1)_config_env_$(release_type))\n-$(1)_config_env+=$($(1)_config_env_$(host_arch)) $($(1)_config_env_$(host_arch)_$(release_type))\n-$(1)_config_env+=$($(1)_config_env_$(host_os)) $($(1)_config_env_$(host_os)_$(release_type))\n-$(1)_config_env+=$($(1)_config_env_$(host_arch)_$(host_os)) $($(1)_config_env_$(host_arch)_$(host_os)_$(release_type))\n-\n-$(1)_config_env+=PKG_CONFIG_LIBDIR=$($($(1)_type)_prefix)/lib/pkgconfig\n-$(1)_config_env+=PKG_CONFIG_PATH=$($($(1)_type)_prefix)/share/pkgconfig\n-$(1)_config_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_build_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_stage_env+=PATH=$(build_prefix)/bin:$(PATH)\n-$(1)_autoconf=./configure --host=$($($(1)_type)_host) --disable-dependency-tracking --prefix=$($($(1)_type)_prefix) $$($(1)_config_opts) CC=\"$$($(1)_cc)\" CXX=\"$$($(1)_cxx)\"\n-\n-ifneq ($($(1)_nm),)\n-$(1)_autoconf += NM=\"$$($(1)_nm)\"\n-endif\n-ifneq ($($(1)_ranlib),)\n-$(1)_autoconf += RANLIB=\"$$($(1)_ranlib)\"\n-endif\n-ifneq ($($(1)_ar),)\n-$(1)_autoconf += AR=\"$$($(1)_ar)\"\n-endif\n-ifneq ($($(1)_cflags),)\n-$(1)_autoconf += CFLAGS=\"$$($(1)_cflags)\"\n-endif\n-ifneq ($($(1)_cxxflags),)\n-$(1)_autoconf += CXXFLAGS=\"$$($(1)_cxxflags)\"\n-endif\n-ifneq ($($(1)_cppflags),)\n-$(1)_autoconf += CPPFLAGS=\"$$($(1)_cppflags)\"\n-endif\n-ifneq ($($(1)_ldflags),)\n-$(1)_autoconf += LDFLAGS=\"$$($(1)_ldflags)\"\n-endif\n-endef\n-\n-define int_add_cmds\n-$($(1)_fetched):\n-\t$(AT)mkdir -p $$(@D) $(SOURCES_PATH)\n-\t$(AT)rm -f $$@\n-\t$(AT)touch $$@\n-\t$(AT)cd $$(@D); $(call $(1)_fetch_cmds,$(1))\n-\t$(AT)cd $($(1)_source_dir); $(foreach source,$($(1)_all_sources),$(build_SHA256SUM) $(source) >> $$(@);)\n-\t$(AT)touch $$@\n-$($(1)_extracted): | $($(1)_fetched)\n-\t$(AT)echo Extracting $(1)...\n-\t$(AT)mkdir -p $$(@D)\n-\t$(AT)cd $$(@D); $(call $(1)_extract_cmds,$(1))\n-\t$(AT)touch $$@\n-$($(1)_preprocessed): | $($(1)_dependencies) $($(1)_extracted)\n-\t$(AT)echo Preprocessing $(1)...\n-\t$(AT)mkdir -p $$(@D) $($(1)_patch_dir)\n-\t$(AT)$(foreach patch,$($(1)_patches),cd $(PATCHES_PATH)/$(1); cp $(patch) $($(1)_patch_dir) ;)\n-\t$(AT)cd $$(@D); $(call $(1)_preprocess_cmds, $(1))\n-\t$(AT)touch $$@\n-$($(1)_configured): | $($(1)_preprocessed)\n-\t$(AT)echo Configuring $(1)...\n-\t$(AT)rm -rf $(host_prefix); mkdir -p $(host_prefix)/lib; cd $(host_prefix); $(foreach package,$($(1)_all_dependencies), tar xf $($(package)_cached); )\n-\t$(AT)mkdir -p $$(@D)\n-\t$(AT)+cd $$(@D); $($(1)_config_env) $(call $(1)_config_cmds, $(1))\n-\t$(AT)touch $$@\n-$($(1)_built): | $($(1)_configured)\n-\t$(AT)echo Building $(1)...\n-\t$(AT)mkdir -p $$(@D)\n-\t$(AT)+cd $$(@D); $($(1)_build_env) $(call $(1)_build_cmds, $(1))\n-\t$(AT)touch $$@\n-$($(1)_staged): | $($(1)_built)\n-\t$(AT)echo Staging $(1)...\n-\t$(AT)mkdir -p $($(1)_staging_dir)/$(host_prefix)\n-\t$(AT)cd $($(1)_build_dir); $($(1)_stage_env) $(call $(1)_stage_cmds, $(1))\n-\t$(AT)rm -rf $($(1)_extract_dir)\n-\t$(AT)touch $$@\n-$($(1)_postprocessed): | $($(1)_staged)\n-\t$(AT)echo Postprocessing $(1)...\n-\t$(AT)cd $($(1)_staging_prefix_dir); $(call $(1)_postprocess_cmds)\n-\t$(AT)touch $$@\n-$($(1)_cached): | $($(1)_dependencies) $($(1)_postprocessed)\n-\t$(AT)echo Caching $(1)...\n-\t$(AT)cd $$($(1)_staging_dir)/$(host_prefix); find . | sort | tar --no-recursion -czf $$($(1)_staging_dir)/$$(@F) -T -\n-\t$(AT)mkdir -p $$(@D)\n-\t$(AT)rm -rf $$(@D) && mkdir -p $$(@D)\n-\t$(AT)mv $$($(1)_staging_dir)/$$(@F) $$(@)\n-\t$(AT)rm -rf $($(1)_staging_dir)\n-$($(1)_cached_checksum): $($(1)_cached)\n-\t$(AT)cd $$(@D); $(build_SHA256SUM) $$(<F) > $$(@)\n-\n-.PHONY: $(1)\n-$(1): | $($(1)_cached_checksum)\n-.SECONDARY: $($(1)_cached) $($(1)_postprocessed) $($(1)_staged) $($(1)_built) $($(1)_configured) $($(1)_preprocessed) $($(1)_extracted) $($(1)_fetched)\n-\n-endef\n-\n-# These functions create the build targets for each package. They must be\n-# broken down into small steps so that each part is done for all packages\n-# before moving on to the next step. Otherwise, a package's info\n-# (build-id for example) would only be available to another package if it\n-# happened to be computed already.\n-\n-#set the type for host/build packages.\n-$(foreach native_package,$(native_packages),$(eval $(native_package)_type=build))\n-$(foreach package,$(packages),$(eval $(package)_type=$(host_arch)_$(host_os)))\n-\n-#set overridable defaults\n-$(foreach package,$(all_packages),$(eval $(call int_vars,$(package))))\n-\n-#include package files\n-$(foreach package,$(all_packages),$(eval include packages/$(package).mk))\n-\n-#compute a hash of all files that comprise this package's build recipe\n-$(foreach package,$(all_packages),$(eval $(call int_get_build_recipe_hash,$(package))))\n-\n-#generate a unique id for this package, incorporating its dependencies as well\n-$(foreach package,$(all_packages),$(eval $(call int_get_build_id,$(package))))\n-\n-#compute final vars after reading package vars\n-$(foreach package,$(all_packages),$(eval $(call int_config_attach_build_config,$(package))))\n-\n-#create build targets\n-$(foreach package,$(all_packages),$(eval $(call int_add_cmds,$(package))))\n-\n-#special exception: if a toolchain package exists, all non-native packages depend on it\n-$(foreach package,$(packages),$(eval $($(package)_unpacked): |$($($(host_arch)_$(host_os)_native_toolchain)_cached) ))"
      },
      {
        "sha": "2958dc50cc8dc2995bfe81a3ab67050a63488001",
        "filename": "depends/hosts/darwin.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/darwin.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/darwin.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/darwin.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,17 +0,0 @@\n-OSX_MIN_VERSION=10.7\n-OSX_SDK_VERSION=10.9\n-OSX_SDK=$(SDK_PATH)/MacOSX$(OSX_SDK_VERSION).sdk\n-LD64_VERSION=241.9\n-darwin_CC=clang -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n-darwin_CXX=clang++ -target $(host) -mmacosx-version-min=$(OSX_MIN_VERSION) --sysroot $(OSX_SDK) -mlinker-version=$(LD64_VERSION)\n-\n-darwin_CFLAGS=-pipe\n-darwin_CXXFLAGS=$(darwin_CFLAGS)\n-\n-darwin_release_CFLAGS=-O2\n-darwin_release_CXXFLAGS=$(darwin_release_CFLAGS)\n-\n-darwin_debug_CFLAGS=-O1\n-darwin_debug_CXXFLAGS=$(darwin_debug_CFLAGS)\n-\n-darwin_native_toolchain=native_cctools"
      },
      {
        "sha": "6f60d6b3fd004e9317db4717bf7dcb68b9dd43eb",
        "filename": "depends/hosts/default.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/default.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/default.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/default.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,26 +0,0 @@\n-default_host_CC = $(host_toolchain)gcc\n-default_host_CXX = $(host_toolchain)g++\n-default_host_AR = $(host_toolchain)ar\n-default_host_RANLIB = $(host_toolchain)ranlib\n-default_host_STRIP = $(host_toolchain)strip\n-default_host_LIBTOOL = $(host_toolchain)libtool\n-default_host_INSTALL_NAME_TOOL = $(host_toolchain)install_name_tool\n-default_host_OTOOL = $(host_toolchain)otool\n-default_host_NM = $(host_toolchain)nm\n-\n-define add_host_tool_func\n-$(host_os)_$1?=$$(default_host_$1)\n-$(host_arch)_$(host_os)_$1?=$$($(host_os)_$1)\n-$(host_arch)_$(host_os)_$(release_type)_$1?=$$($(host_os)_$1)\n-host_$1=$$($(host_arch)_$(host_os)_$1)\n-endef\n-\n-define add_host_flags_func\n-$(host_arch)_$(host_os)_$1 += $($(host_os)_$1)\n-$(host_arch)_$(host_os)_$(release_type)_$1 += $($(host_os)_$(release_type)_$1)\n-host_$1 = $$($(host_arch)_$(host_os)_$1)\n-host_$(release_type)_$1 = $$($(host_arch)_$(host_os)_$(release_type)_$1)\n-endef\n-\n-$(foreach tool,CC CXX AR RANLIB STRIP NM LIBTOOL OTOOL INSTALL_NAME_TOOL,$(eval $(call add_host_tool_func,$(tool))))\n-$(foreach flags,CFLAGS CXXFLAGS CPPFLAGS LDFLAGS, $(eval $(call add_host_flags_func,$(flags))))"
      },
      {
        "sha": "b13a0f1ad714ae19ec7fc4b68d162095b9c62255",
        "filename": "depends/hosts/linux.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/linux.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/linux.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/linux.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,31 +0,0 @@\n-linux_CFLAGS=-pipe\n-linux_CXXFLAGS=$(linux_CFLAGS)\n-\n-linux_release_CFLAGS=-O2\n-linux_release_CXXFLAGS=$(linux_release_CFLAGS)\n-\n-linux_debug_CFLAGS=-O1\n-linux_debug_CXXFLAGS=$(linux_debug_CFLAGS)\n-\n-linux_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC\n-\n-ifeq (86,$(findstring 86,$(build_arch)))\n-i686_linux_CC=gcc -m32\n-i686_linux_CXX=g++ -m32\n-i686_linux_AR=ar\n-i686_linux_RANLIB=ranlib\n-i686_linux_NM=nm\n-i686_linux_STRIP=strip\n-\n-x86_64_linux_CC=gcc -m64\n-x86_64_linux_CXX=g++ -m64\n-x86_64_linux_AR=ar\n-x86_64_linux_RANLIB=ranlib\n-x86_64_linux_NM=nm\n-x86_64_linux_STRIP=strip\n-else\n-i686_linux_CC=$(default_host_CC) -m32\n-i686_linux_CXX=$(default_host_CXX) -m32\n-x86_64_linux_CC=$(default_host_CC) -m64\n-x86_64_linux_CXX=$(default_host_CXX) -m64\n-endif"
      },
      {
        "sha": "dbfb62fdcf98695d515e56897ee488703e002054",
        "filename": "depends/hosts/mingw32.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/mingw32.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/hosts/mingw32.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/hosts/mingw32.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,10 +0,0 @@\n-mingw32_CFLAGS=-pipe\n-mingw32_CXXFLAGS=$(mingw32_CFLAGS)\n-\n-mingw32_release_CFLAGS=-O2\n-mingw32_release_CXXFLAGS=$(mingw32_release_CFLAGS)\n-\n-mingw32_debug_CFLAGS=-O1\n-mingw32_debug_CXXFLAGS=$(mingw32_debug_CFLAGS)\n-\n-mingw32_debug_CPPFLAGS=-D_GLIBCXX_DEBUG -D_GLIBCXX_DEBUG_PEDANTIC"
      },
      {
        "sha": "7c80362509e989e975e499e0242009e7e098ddf4",
        "filename": "depends/packages.md",
        "status": "removed",
        "additions": 0,
        "deletions": 147,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,147 +0,0 @@\n-Each recipe consists of 3 main parts: defining identifiers, setting build\n-variables, and defining build commands.\n-\n-The package \"mylib\" will be used here as an example\n-\n-General tips:\n-- mylib_foo is written as $(package)_foo in order to make recipes more similar.\n-\n-## Identifiers\n-Each package is required to define at least these variables:\n-\n-    $(package)_version:\n-    Version of the upstream library or program. If there is no version, a\n-    placeholder such as 1.0 can be used.\n-\n-    $(package)_download_path:\n-    Location of the upstream source, without the file-name. Usually http or\n-    ftp.\n-\n-    $(package)_file_name:\n-    The upstream source filename available at the download path.\n-\n-    $(package)_sha256_hash:\n-    The sha256 hash of the upstream file\n-\n-These variables are optional:\n-\n-    $(package)_build_subdir:\n-    cd to this dir before running configure/build/stage commands.\n-    \n-    $(package)_download_file:\n-    The file-name of the upstream source if it differs from how it should be\n-    stored locally. This can be used to avoid storing file-names with strange\n-    characters.\n-    \n-    $(package)_dependencies:\n-    Names of any other packages that this one depends on.\n-    \n-    $(package)_patches:\n-    Filenames of any patches needed to build the package\n-\n-    $(package)_extra_sources:\n-    Any extra files that will be fetched via $(package)_fetch_cmds. These are\n-    specified so that they can be fetched and verified via 'make download'.\n-\n-\n-## Build Variables:\n-After defining the main identifiers, build variables may be added or customized\n-before running the build commands. They should be added to a function called\n-$(package)_set_vars. For example:\n-\n-    define $(package)_set_vars\n-    ...\n-    endef\n-\n-Most variables can be prefixed with the host, architecture, or both, to make\n-the modifications specific to that case. For example:\n-\n-    Universal:     $(package)_cc=gcc\n-    Linux only:    $(package)_linux_cc=gcc\n-    x86_64 only:       $(package)_x86_64_cc = gcc\n-    x86_64 linux only: $(package)_x86_64_linux_cc = gcc\n-\n-These variables may be set to override or append their default values.\n-\n-    $(package)_cc\n-    $(package)_cxx\n-    $(package)_objc\n-    $(package)_objcxx\n-    $(package)_ar\n-    $(package)_ranlib\n-    $(package)_libtool\n-    $(package)_nm\n-    $(package)_cflags\n-    $(package)_cxxflags\n-    $(package)_ldflags\n-    $(package)_cppflags\n-    $(package)_config_env\n-    $(package)_build_env\n-    $(package)_stage_env\n-    $(package)_build_opts\n-    $(package)_config_opts\n-\n-The *_env variables are used to add environment variables to the respective\n-commands.\n-\n-Many variables respect a debug/release suffix as well, in order to use them for\n-only the appropriate build config. For example:\n-\n-    $(package)_cflags_release = -O3\n-    $(package)_cflags_i686_debug = -g\n-    $(package)_config_opts_release = --disable-debug\n-\n-These will be used in addition to the options that do not specify\n-debug/release. All builds are considered to be release unless DEBUG=1 is set by\n-the user. Other variables may be defined as needed.\n-\n-## Build commands:\n-\n-  For each build, a unique build dir and staging dir are created. For example,\n-  `work/build/mylib/1.0-1adac830f6e` and `work/staging/mylib/1.0-1adac830f6e`.\n-\n-  The following build commands are available for each recipe:\n-\n-    $(package)_fetch_cmds:\n-    Runs from: build dir\n-    Fetch the source file. If undefined, it will be fetched and verified\n-    against its hash.\n-\n-    $(package)_extract_cmds:\n-    Runs from: build dir\n-    Verify the source file against its hash and extract it. If undefined, the\n-    source is assumed to be a tarball.\n-\n-    $(package)_preprocess_cmds:\n-    Runs from: build dir/$(package)_build_subdir\n-    Preprocess the source as necessary. If undefined, does nothing.\n-\n-    $(package)_config_cmds:\n-    Runs from: build dir/$(package)_build_subdir\n-    Configure the source. If undefined, does nothing.\n-\n-    $(package)_build_cmds:\n-    Runs from: build dir/$(package)_build_subdir\n-    Build the source. If undefined, does nothing.\n-\n-    $(package)_stage_cmds:\n-    Runs from: build dir/$(package)_build_subdir\n-    Stage the build results. If undefined, does nothing.\n-\n-  The following variables are available for each recipe:\n-    \n-    $(1)_staging_dir: package's destination sysroot path\n-    $(1)_staging_prefix_dir: prefix path inside of the package's staging dir\n-    $(1)_extract_dir: path to the package's extracted sources\n-    $(1)_build_dir: path where configure/build/stage commands will be run\n-    $(1)_patch_dir: path where the package's patches (if any) are found\n-\n-Notes on build commands:\n-\n-For packages built with autotools, $($(package)_autoconf) can be used in the\n-configure step to (usually) correctly configure automatically. Any\n-$($(package)_config_opts) will be appended.\n-\n-Most autotools projects can be properly staged using:\n-\n-    $(MAKE) DESTDIR=$($(package)_staging_dir) install"
      },
      {
        "sha": "e2f85ad4fcad867d25fab7db70e62d04ee179601",
        "filename": "depends/packages/bdb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 29,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/bdb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/bdb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/bdb.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,29 +0,0 @@\n-package=bdb\n-$(package)_version=4.8.30\n-$(package)_download_path=http://download.oracle.com/berkeley-db\n-$(package)_file_name=db-$($(package)_version).NC.tar.gz\n-$(package)_sha256_hash=12edc0df75bf9abd7f82f821795bcee50f42cb2e5f76a6a281b85732798364ef\n-$(package)_build_subdir=build_unix\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared --enable-cxx --disable-replication\n-$(package)_config_opts_mingw32=--enable-mingw\n-$(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed -i.old 's/__atomic_compare_exchange/__atomic_compare_exchange_db/' dbinc/atomic.h && \\\n-  sed -i.old 's/atomic_init/atomic_init_db/' dbinc/atomic.h mp/mp_region.c mp/mp_mvcc.c mp/mp_fget.c mutex/mut_method.c mutex/mut_tas.c\n-endef\n-\n-define $(package)_config_cmds\n-  ../dist/$($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) libdb_cxx-4.8.a libdb-4.8.a\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install_lib install_include\n-endef"
      },
      {
        "sha": "215c694b6b82b498abe773f8c19b34835978909e",
        "filename": "depends/packages/boost.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 41,
        "changes": 41,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/boost.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/boost.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/boost.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,41 +0,0 @@\n-package=boost\n-$(package)_version=1_59_0\n-$(package)_download_path=http://sourceforge.net/projects/boost/files/boost/1.59.0\n-$(package)_file_name=$(package)_$($(package)_version).tar.bz2\n-$(package)_sha256_hash=727a932322d94287b62abb1bd2d41723eec4356a7728909e38adb65ca25241ca\n-\n-define $(package)_set_vars\n-$(package)_config_opts_release=variant=release\n-$(package)_config_opts_debug=variant=debug\n-$(package)_config_opts=--layout=tagged --build-type=complete --user-config=user-config.jam\n-$(package)_config_opts+=threading=multi link=static -sNO_BZIP2=1 -sNO_ZLIB=1\n-$(package)_config_opts_linux=threadapi=pthread runtime-link=shared\n-$(package)_config_opts_darwin=--toolset=darwin-4.2.1 runtime-link=shared\n-$(package)_config_opts_mingw32=binary-format=pe target-os=windows threadapi=win32 runtime-link=static\n-$(package)_config_opts_x86_64_mingw32=address-model=64\n-$(package)_config_opts_i686_mingw32=address-model=32\n-$(package)_config_opts_i686_linux=address-model=32 architecture=x86\n-$(package)_toolset_$(host_os)=gcc\n-$(package)_archiver_$(host_os)=$($(package)_ar)\n-$(package)_toolset_darwin=darwin\n-$(package)_archiver_darwin=$($(package)_libtool)\n-$(package)_config_libraries=chrono,filesystem,program_options,system,thread,test\n-$(package)_cxxflags=-fvisibility=hidden\n-$(package)_cxxflags_linux=-fPIC\n-endef\n-\n-define $(package)_preprocess_cmds\n-  echo \"using $(boost_toolset_$(host_os)) : : $($(package)_cxx) : <cxxflags>\\\"$($(package)_cxxflags) $($(package)_cppflags)\\\" <linkflags>\\\"$($(package)_ldflags)\\\" <archiver>\\\"$(boost_archiver_$(host_os))\\\" <striper>\\\"$(host_STRIP)\\\"  <ranlib>\\\"$(host_RANLIB)\\\" <rc>\\\"$(host_WINDRES)\\\" : ;\" > user-config.jam\n-endef\n-\n-define $(package)_config_cmds\n-  ./bootstrap.sh --without-icu --with-libraries=$(boost_config_libraries)\n-endef\n-\n-define $(package)_build_cmds\n-  ./b2 -d2 -j2 -d1 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) stage\n-endef\n-\n-define $(package)_stage_cmds\n-  ./b2 -d0 -j4 --prefix=$($(package)_staging_prefix_dir) $($(package)_config_opts) install\n-endef"
      },
      {
        "sha": "8ac9ab742bfe48ca5b57f7dde876fc817a268c65",
        "filename": "depends/packages/dbus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/dbus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/dbus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/dbus.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,23 +0,0 @@\n-package=dbus\n-$(package)_version=1.8.6\n-$(package)_download_path=http://dbus.freedesktop.org/releases/dbus\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=eded83ca007b719f32761e60fd8b9ffd0f5796a4caf455b01b5a5ef740ebd23f\n-$(package)_dependencies=expat\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-tests --disable-doxygen-docs --disable-xml-docs --disable-static --without-x\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C dbus libdbus-1.la\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C dbus DESTDIR=$($(package)_staging_dir) install-libLTLIBRARIES install-dbusincludeHEADERS install-nodist_dbusarchincludeHEADERS && \\\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n-endef"
      },
      {
        "sha": "1ac443537420bf29838496a17c2078b5a6ed70d0",
        "filename": "depends/packages/expat.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/expat.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/expat.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/expat.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-package=expat\n-$(package)_version=2.1.0\n-$(package)_download_path=http://sourceforge.net/projects/expat/files/expat/$($(package)_version)\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=823705472f816df21c8f6aa026dd162b280806838bb55b3432b0fb1fcca7eb86\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-static\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "2cf553ed9657b4e9ec88bfcd7cf437c36200f57a",
        "filename": "depends/packages/fontconfig.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/fontconfig.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/fontconfig.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/fontconfig.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=fontconfig\n-$(package)_version=2.11.1\n-$(package)_download_path=http://www.freedesktop.org/software/fontconfig/release/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=dc62447533bca844463a3c3fd4083b57c90f18a70506e7a9f4936b5a1e516a99\n-$(package)_dependencies=freetype expat\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-docs --disable-static\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "f7d6e0f9fc58d63769369003483908f18cdca866",
        "filename": "depends/packages/freetype.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/freetype.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/freetype.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/freetype.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=freetype\n-$(package)_version=2.5.3\n-$(package)_download_path=http://downloads.sourceforge.net/$(package)\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=c0848b29d52ef3ca27ad92e08351f023c5e24ce8cea7d8fe69fc96358e65f75e\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--without-zlib --without-png --disable-static\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "fc60323b1c918a8229f8ba4b04d63310b4d98ec5",
        "filename": "depends/packages/libICE.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libICE.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libICE.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libICE.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,23 +0,0 @@\n-package=libICE\n-$(package)_version=1.0.9\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=8f7032f2c1c64352b5423f6b48a8ebdc339cc63064af34d66a6c9aa79759e202\n-$(package)_dependencies=xtrans xproto\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-static --disable-docs --disable-specs --without-xsltproc\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "0f9307ca76acb8edb8dc892cefc046627f111654",
        "filename": "depends/packages/libSM.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libSM.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libSM.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libSM.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,23 +0,0 @@\n-package=libSM\n-$(package)_version=1.2.2\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=0baca8c9f5d934450a70896c4ad38d06475521255ca63b717a6510fdb6e287bd\n-$(package)_dependencies=xtrans xproto libICE\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--without-libuuid  --without-xsltproc  --disable-docs --disable-static\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "178d592ee63ff9d0f74de6029b4c7becdc850367",
        "filename": "depends/packages/libX11.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libX11.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libX11.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libX11.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,23 +0,0 @@\n-package=libX11\n-$(package)_version=1.6.2\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=2aa027e837231d2eeea90f3a4afe19948a6eb4c8b2bec0241eba7dbc8106bd16\n-$(package)_dependencies=libxcb xtrans xextproto xproto\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-xkb --disable-static\n-$(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "e87df2e4de6760ace30d169b24c83ee0b7cfc7dd",
        "filename": "depends/packages/libXau.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 23,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libXau.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libXau.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXau.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,23 +0,0 @@\n-package=libXau\n-$(package)_version=1.0.8\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=fdd477320aeb5cdd67272838722d6b7d544887dfe7de46e1e7cc0c27c2bea4f2\n-$(package)_dependencies=xproto\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "4db836066f96e37cf7834fcf10de4da331b1fbe1",
        "filename": "depends/packages/libXext.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libXext.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libXext.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libXext.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=libXext\n-$(package)_version=1.3.2\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=f829075bc646cdc085fa25d98d5885d83b1759ceb355933127c257e8e50432e0\n-$(package)_dependencies=xproto xextproto libX11 libXau\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-static\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "2e9be1e98ccedda520459b8d4deed2f686473746",
        "filename": "depends/packages/libevent.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 31,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libevent.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libevent.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libevent.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,31 +0,0 @@\n-package=libevent\n-$(package)_version=2.0.22\n-$(package)_download_path=https://github.com/libevent/libevent/releases/download/release-2.0.22-stable\n-$(package)_file_name=$(package)-$($(package)_version)-stable.tar.gz\n-$(package)_sha256_hash=71c2c49f0adadacfdbe6332a372c38cf9c8b7895bb73dabeaa53cdcc1d4e1fa3\n-$(package)_patches=reuseaddr.patch\n-\n-define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/reuseaddr.patch\n-endef\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --disable-openssl --disable-libevent-regress\n-  $(package)_config_opts_release=--disable-debug-mode\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-endef"
      },
      {
        "sha": "28f2bd6f25343de809c9b2c568bd88b778bb26ec",
        "filename": "depends/packages/libxcb.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libxcb.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/libxcb.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/libxcb.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,35 +0,0 @@\n-package=libxcb\n-$(package)_version=1.10\n-$(package)_download_path=http://xcb.freedesktop.org/dist\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=98d9ab05b636dd088603b64229dd1ab2d2cc02ab807892e107d674f9c3f2d5b5\n-$(package)_dependencies=xcb_proto libXau xproto\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-static\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed \"s/pthread-stubs//\" -i configure\n-endef\n-\n-# Don't install xcb headers to the default path in order to work around a qt\n-# build issue: https://bugreports.qt.io/browse/QTBUG-34748\n-# When using qt's internal libxcb, it may end up finding the real headers in\n-# depends staging. Use a non-default path to avoid that.\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf) --includedir=$(host_prefix)/include/xcb-shared\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf share/man share/doc\n-endef"
      },
      {
        "sha": "3d5a6df974bf1f25e5aa7db4c36e4e37bd127b8e",
        "filename": "depends/packages/miniupnpc.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/miniupnpc.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/miniupnpc.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/miniupnpc.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,28 +0,0 @@\n-package=miniupnpc\n-$(package)_version=1.9.20151026\n-$(package)_download_path=http://miniupnp.free.fr/files\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=f3cf9a5a31588a917d4d9237e5bc50f84d00c5aa48e27ed50d9b88dfa6a25d47\n-\n-define $(package)_set_vars\n-$(package)_build_opts=CC=\"$($(package)_cc)\"\n-$(package)_build_opts_darwin=OS=Darwin LIBTOOL=\"$($(package)_libtool)\"\n-$(package)_build_opts_mingw32=-f Makefile.mingw\n-$(package)_build_env+=CFLAGS=\"$($(package)_cflags) $($(package)_cppflags)\" AR=\"$($(package)_ar)\"\n-endef\n-\n-define $(package)_preprocess_cmds\n-  mkdir dll && \\\n-  sed -e 's|MINIUPNPC_VERSION_STRING \\\"version\\\"|MINIUPNPC_VERSION_STRING \\\"$($(package)_version)\\\"|' -e 's|OS/version|$(host)|' miniupnpcstrings.h.in > miniupnpcstrings.h && \\\n-  sed -i.old \"s|miniupnpcstrings.h: miniupnpcstrings.h.in wingenminiupnpcstrings|miniupnpcstrings.h: miniupnpcstrings.h.in|\" Makefile.mingw\n-endef\n-\n-define $(package)_build_cmds\n-\t$(MAKE) libminiupnpc.a $($(package)_build_opts)\n-endef\n-\n-define $(package)_stage_cmds\n-\tmkdir -p $($(package)_staging_prefix_dir)/include/miniupnpc $($(package)_staging_prefix_dir)/lib &&\\\n-\tinstall *.h $($(package)_staging_prefix_dir)/include/miniupnpc &&\\\n-\tinstall libminiupnpc.a $($(package)_staging_prefix_dir)/lib\n-endef"
      },
      {
        "sha": "eb8672d556a9cd03b57cb3b6e11d706183345c80",
        "filename": "depends/packages/native_biplist.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_biplist.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_biplist.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_biplist.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,15 +0,0 @@\n-package=native_biplist\n-$(package)_version=0.9\n-$(package)_download_path=https://pypi.python.org/packages/source/b/biplist\n-$(package)_file_name=biplist-$($(package)_version).tar.gz\n-$(package)_sha256_hash=b57cadfd26e4754efdf89e9e37de87885f9b5c847b2615688ca04adfaf6ca604\n-$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n-\n-define $(package)_build_cmds\n-    python setup.py build\n-endef\n-\n-define $(package)_stage_cmds\n-    mkdir -p $($(package)_install_libdir) && \\\n-    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n-endef"
      },
      {
        "sha": "cc76f9a7946558be79b9511fbf48f850eb677a1f",
        "filename": "depends/packages/native_ccache.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_ccache.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_ccache.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ccache.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,25 +0,0 @@\n-package=native_ccache\n-$(package)_version=3.2.4\n-$(package)_download_path=http://samba.org/ftp/ccache\n-$(package)_file_name=ccache-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=ffeb967edb549e67da0bd5f44f729a2022de9fdde65dfd80d2a7204d7f75332e\n-\n-define $(package)_set_vars\n-$(package)_config_opts=\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf lib include\n-endef"
      },
      {
        "sha": "1c1bcf199a0bd20fcf3c5f0cea83cedeb9cb6d04",
        "filename": "depends/packages/native_cctools.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 58,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_cctools.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_cctools.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cctools.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,58 +0,0 @@\n-package=native_cctools\n-$(package)_version=ee31ae567931c426136c94aad457c7b51d844beb\n-$(package)_download_path=https://github.com/theuni/cctools-port/archive\n-$(package)_file_name=$($(package)_version).tar.gz\n-$(package)_sha256_hash=ef107e6ab1b3994cb22e14f4f5c59ea0c0b5a988e6b21d42ed9616b018bbcbf9\n-$(package)_build_subdir=cctools\n-$(package)_clang_version=3.3\n-$(package)_clang_download_path=http://llvm.org/releases/$($(package)_clang_version)\n-$(package)_clang_download_file=clang+llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n-$(package)_clang_file_name=clang-llvm-$($(package)_clang_version)-amd64-Ubuntu-12.04.2.tar.gz\n-$(package)_clang_sha256_hash=60d8f69f032d62ef61bf527857ebb933741ec3352d4d328c5516aa520662dab7\n-$(package)_extra_sources=$($(package)_clang_file_name)\n-\n-define $(package)_fetch_cmds\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_clang_download_path),$($(package)_clang_download_file),$($(package)_clang_file_name),$($(package)_clang_sha256_hash))\n-endef\n-\n-define $(package)_extract_cmds\n-  mkdir -p toolchain/bin toolchain/lib/clang/3.5/include && \\\n-  tar --strip-components=1 -C toolchain -xf $($(package)_source_dir)/$($(package)_clang_file_name) && \\\n-  echo \"#!/bin/sh\" > toolchain/bin/$(host)-dsymutil && \\\n-  echo \"exit 0\" >> toolchain/bin/$(host)-dsymutil && \\\n-  chmod +x toolchain/bin/$(host)-dsymutil && \\\n-  tar --strip-components=1 -xf $($(package)_source)\n-endef\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--target=$(host) --disable-libuuid\n-$(package)_ldflags+=-Wl,-rpath=\\\\$$$$$$$$\\$$$$$$$$ORIGIN/../lib\n-$(package)_cc=$($(package)_extract_dir)/toolchain/bin/clang\n-$(package)_cxx=$($(package)_extract_dir)/toolchain/bin/clang++\n-endef\n-\n-define $(package)_preprocess_cmds\n-  cd $($(package)_build_subdir); ./autogen.sh\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install && \\\n-  cd $($(package)_extract_dir)/toolchain && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include && \\\n-  mkdir -p $($(package)_staging_prefix_dir)/bin $($(package)_staging_prefix_dir)/include && \\\n-  cp -P bin/clang bin/clang++ $($(package)_staging_prefix_dir)/bin/ &&\\\n-  cp lib/libLTO.so $($(package)_staging_prefix_dir)/lib/ && \\\n-  cp -rf lib/clang/$($(package)_clang_version)/include/* $($(package)_staging_prefix_dir)/lib/clang/$($(package)_clang_version)/include/ && \\\n-  cp bin/$(host)-dsymutil $($(package)_staging_prefix_dir)/bin && \\\n-  if `test -d include/c++/`; then cp -rf include/c++/ $($(package)_staging_prefix_dir)/include/; fi && \\\n-  if `test -d lib/c++/`; then cp -rf lib/c++/ $($(package)_staging_prefix_dir)/lib/; fi\n-endef"
      },
      {
        "sha": "cf694edb30e92ecf7a54a4ccdfba172a3eed44b6",
        "filename": "depends/packages/native_cdrkit.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_cdrkit.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_cdrkit.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_cdrkit.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,26 +0,0 @@\n-package=native_cdrkit\n-$(package)_version=1.1.11\n-$(package)_download_path=http://distro.ibiblio.org/fatdog/source/600/c\n-$(package)_file_name=cdrkit-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=b50d64c214a65b1a79afe3a964c691931a4233e2ba605d793eb85d0ac3652564\n-$(package)_patches=cdrkit-deterministic.patch\n-\n-define $(package)_preprocess_cmds\n-  patch -p1 < $($(package)_patch_dir)/cdrkit-deterministic.patch\n-endef\n-\n-define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX=$(build_prefix)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) genisoimage\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C genisoimage install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm bin/isovfy bin/isoinfo bin/isodump bin/isodebug bin/devdump\n-endef"
      },
      {
        "sha": "e0ae0cec700e921cdfc6c4bdc9760467655dcb4d",
        "filename": "depends/packages/native_comparisontool.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_comparisontool.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_comparisontool.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_comparisontool.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-package=native_comparisontool\n-$(package)_version=8c6666f\n-$(package)_download_path=https://github.com/theuni/bitcoind-comparisontool/raw/master\n-$(package)_file_name=pull-tests-$($(package)_version).jar\n-$(package)_sha256_hash=a865332b3827abcde684ab79f5f43c083b0b6a4c97ff5508c79f29fee24f11cd\n-$(package)_install_dirname=BitcoindComparisonTool_jar\n-$(package)_install_filename=BitcoindComparisonTool.jar\n-\n-define $(package)_extract_cmds\n-endef\n-\n-define $(package)_configure_cmds\n-endef\n-\n-define $(package)_build_cmds\n-endef\n-\n-define $(package)_stage_cmds\n-  mkdir -p $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname) && \\\n-  cp $($(package)_source) $($(package)_staging_prefix_dir)/share/$($(package)_install_dirname)/$($(package)_install_filename)\n-endef"
      },
      {
        "sha": "8e902af1b6e9af0f5c4cb91cf075365c0815f828",
        "filename": "depends/packages/native_ds_store.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_ds_store.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_ds_store.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_ds_store.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,17 +0,0 @@\n-package=native_ds_store\n-$(package)_version=c80c23706eae\n-$(package)_download_path=https://bitbucket.org/al45tair/ds_store/get\n-$(package)_download_file=$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=ce1aa412211610c63d567bbe3e06213006a2d5ba5d76d89399c151b5472cb0da\n-$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n-$(package)_dependencies=native_biplist\n-\n-define $(package)_build_cmds\n-    python setup.py build\n-endef\n-\n-define $(package)_stage_cmds\n-    mkdir -p $($(package)_install_libdir) && \\\n-    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n-endef"
      },
      {
        "sha": "a4ffb6046ccc4b50d7bded21207337a718ba70df",
        "filename": "depends/packages/native_libdmg-hfsplus.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_libdmg-hfsplus.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_libdmg-hfsplus.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_libdmg-hfsplus.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=native_libdmg-hfsplus\n-$(package)_version=0.1\n-$(package)_download_path=https://github.com/theuni/libdmg-hfsplus/archive\n-$(package)_file_name=libdmg-hfsplus-v$($(package)_version).tar.gz\n-$(package)_sha256_hash=6569a02eb31c2827080d7d59001869ea14484c281efab0ae7f2b86af5c3120b3\n-$(package)_build_subdir=build\n-\n-define $(package)_preprocess_cmds\n-  mkdir build\n-endef\n-\n-define $(package)_config_cmds\n-  cmake -DCMAKE_INSTALL_PREFIX:PATH=$(build_prefix)/bin ..\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C dmg\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C dmg install\n-endef"
      },
      {
        "sha": "d117c1c9a3f6884ba37e21f7fef6798cd1e0c62e",
        "filename": "depends/packages/native_mac_alias.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_mac_alias.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_mac_alias.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_mac_alias.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,16 +0,0 @@\n-package=native_mac_alias\n-$(package)_version=1.1.0\n-$(package)_download_path=https://bitbucket.org/al45tair/mac_alias/get\n-$(package)_download_file=v$($(package)_version).tar.bz2\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=87ad827e66790028361e43fc754f68ed041a9bdb214cca03c853f079b04fb120\n-$(package)_install_libdir=$(build_prefix)/lib/python/dist-packages\n-\n-define $(package)_build_cmds\n-    python setup.py build\n-endef\n-\n-define $(package)_stage_cmds\n-    mkdir -p $($(package)_install_libdir) && \\\n-    python setup.py install --root=$($(package)_staging_dir) --prefix=$(build_prefix) --install-lib=$($(package)_install_libdir)\n-endef"
      },
      {
        "sha": "ce50b366fa74f3fbed838624f9d7ec58396ace02",
        "filename": "depends/packages/native_protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 25,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/native_protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/native_protobuf.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,25 +0,0 @@\n-package=native_protobuf\n-$(package)_version=2.6.1\n-$(package)_download_path=https://github.com/google/protobuf/releases/download/v$($(package)_version)\n-$(package)_file_name=protobuf-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=ee445612d544d885ae240ffbcbf9267faa9f593b7b101f21d58beceb92661910\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src protoc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install-strip\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf lib include\n-endef"
      },
      {
        "sha": "c6452820a2de8ce9194fd0bfd560eb11451f7c6d",
        "filename": "depends/packages/openssl.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/openssl.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/openssl.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/openssl.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,45 +0,0 @@\n-package=openssl\n-$(package)_version=1.0.1k\n-$(package)_download_path=https://www.openssl.org/source\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=8f9faeaebad088e772f4ef5e38252d472be4d878c6b3a2718c10a4fcebe7a41c\n-\n-define $(package)_set_vars\n-$(package)_config_env=AR=\"$($(package)_ar)\" RANLIB=\"$($(package)_ranlib)\" CC=\"$($(package)_cc)\"\n-$(package)_config_opts=--prefix=$(host_prefix) --openssldir=$(host_prefix)/etc/openssl no-zlib no-shared no-dso\n-$(package)_config_opts+=no-krb5 no-camellia no-capieng no-cast no-cms no-dtls1 no-gost no-gmp no-heartbeats no-idea no-jpake no-md2\n-$(package)_config_opts+=no-mdc2 no-rc5 no-rdrand no-rfc3779 no-rsax no-sctp no-seed no-sha0 no-static_engine no-whirlpool no-rc2 no-rc4 no-ssl2 no-ssl3\n-$(package)_config_opts+=$($(package)_cflags) $($(package)_cppflags)\n-$(package)_config_opts_linux=-fPIC -Wa,--noexecstack\n-$(package)_config_opts_x86_64_linux=linux-x86_64\n-$(package)_config_opts_i686_linux=linux-generic32\n-$(package)_config_opts_arm_linux=linux-generic32\n-$(package)_config_opts_aarch64_linux=linux-generic64\n-$(package)_config_opts_mipsel_linux=linux-generic32\n-$(package)_config_opts_mips_linux=linux-generic32\n-$(package)_config_opts_powerpc_linux=linux-generic32\n-$(package)_config_opts_x86_64_darwin=darwin64-x86_64-cc\n-$(package)_config_opts_x86_64_mingw32=mingw64\n-$(package)_config_opts_i686_mingw32=mingw\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed -i.old \"/define DATE/d\" util/mkbuildinf.pl && \\\n-  sed -i.old \"s|engines apps test|engines|\" Makefile.org\n-endef\n-\n-define $(package)_config_cmds\n-  ./Configure $($(package)_config_opts)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -j1 build_libs libcrypto.pc libssl.pc openssl.pc\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) INSTALL_PREFIX=$($(package)_staging_dir) -j1 install_sw\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf share bin etc\n-endef"
      },
      {
        "sha": "59b009b66a27b3cd8083bb1e31f10abfa92b2486",
        "filename": "depends/packages/packages.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/packages.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/packages.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/packages.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-packages:=boost openssl libevent\n-darwin_packages:=zeromq\n-linux_packages:=zeromq\n-native_packages := native_ccache native_comparisontool\n-\n-qt_native_packages = native_protobuf\n-qt_packages = qrencode protobuf\n-\n-qt_linux_packages= qt expat dbus libxcb xcb_proto libXau xproto freetype fontconfig libX11 xextproto libXext xtrans\n-qt_darwin_packages=qt\n-qt_mingw32_packages=qt\n-\n-\n-wallet_packages=bdb\n-\n-upnp_packages=miniupnpc\n-\n-darwin_native_packages = native_biplist native_ds_store native_mac_alias\n-\n-ifneq ($(build_os),darwin)\n-darwin_native_packages += native_cctools native_cdrkit native_libdmg-hfsplus\n-endif"
      },
      {
        "sha": "5affad28375a9f0c6a2a11d2c46f7f19b47a0e24",
        "filename": "depends/packages/protobuf.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 28,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/protobuf.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/protobuf.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/protobuf.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,28 +0,0 @@\n-package=protobuf\n-$(package)_version=$(native_$(package)_version)\n-$(package)_download_path=$(native_$(package)_download_path)\n-$(package)_file_name=$(native_$(package)_file_name)\n-$(package)_sha256_hash=$(native_$(package)_sha256_hash)\n-$(package)_dependencies=native_$(package)\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared --with-protoc=$(build_prefix)/bin/protoc\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src libprotobuf.la\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) -C src install-libLTLIBRARIES install-nobase_includeHEADERS &&\\\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install-pkgconfigDATA\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm lib/libprotoc.a\n-endef"
      },
      {
        "sha": "7b21247133f42754d8c67ad940e2ce77357acb98",
        "filename": "depends/packages/qrencode.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qrencode.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qrencode.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qrencode.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=qrencode\n-$(package)_version=3.4.4\n-$(package)_download_path=https://fukuchi.org/works/qrencode/\n-$(package)_file_name=qrencode-$(qrencode_version).tar.bz2\n-$(package)_sha256_hash=efe5188b1ddbcbf98763b819b146be6a90481aac30cfc8d858ab78a19cde1fa5\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared -without-tools --disable-sdltest\n-$(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "901b761fde1425b367f0b93483e2b2b003fa9203",
        "filename": "depends/packages/qt.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,172 +0,0 @@\n-PACKAGE=qt\n-$(package)_version=5.5.0\n-$(package)_download_path=http://download.qt.io/official_releases/qt/5.5/$($(package)_version)/submodules\n-$(package)_suffix=opensource-src-$($(package)_version).tar.gz\n-$(package)_file_name=qtbase-$($(package)_suffix)\n-$(package)_sha256_hash=7e82b1318f88e56a2a9376e069aa608d4fd96b48cb0e1b880ae658b0a1af0561\n-$(package)_dependencies=openssl\n-$(package)_linux_dependencies=freetype fontconfig dbus libxcb libX11 xproto libXext\n-$(package)_build_subdir=qtbase\n-$(package)_qt_libs=corelib network widgets gui plugins testlib\n-$(package)_patches=mac-qmake.conf fix-xcb-include-order.patch mingw-uuidof.patch pidlist_absolute.patch\n-\n-$(package)_qttranslations_file_name=qttranslations-$($(package)_suffix)\n-$(package)_qttranslations_sha256_hash=c4bd6db6e426965c6f8824c54e81f68bbd61e2bae1bcadc328c6e81c45902a0d\n-\n-$(package)_qttools_file_name=qttools-$($(package)_suffix)\n-$(package)_qttools_sha256_hash=d9e06bd19ecc86afba5e95d45a906d1bc1ad579aa70001e36143c1aaf695bdd6\n-\n-$(package)_extra_sources  = $($(package)_qttranslations_file_name)\n-$(package)_extra_sources += $($(package)_qttools_file_name)\n-\n-define $(package)_set_vars\n-$(package)_config_opts_release = -release\n-$(package)_config_opts_debug   = -debug\n-$(package)_config_opts += -opensource -confirm-license\n-$(package)_config_opts += -no-audio-backend\n-$(package)_config_opts += -no-glib\n-$(package)_config_opts += -no-icu\n-$(package)_config_opts += -no-cups\n-$(package)_config_opts += -no-iconv\n-$(package)_config_opts += -no-gif\n-$(package)_config_opts += -no-freetype\n-$(package)_config_opts += -no-nis\n-$(package)_config_opts += -no-pch\n-$(package)_config_opts += -no-qml-debug\n-$(package)_config_opts += -nomake examples\n-$(package)_config_opts += -nomake tests\n-$(package)_config_opts += -no-feature-style-windowsmobile\n-$(package)_config_opts += -no-feature-style-windowsce\n-$(package)_config_opts += -no-sql-db2\n-$(package)_config_opts += -no-sql-ibase\n-$(package)_config_opts += -no-sql-oci\n-$(package)_config_opts += -no-sql-tds\n-$(package)_config_opts += -no-sql-mysql\n-$(package)_config_opts += -no-sql-odbc\n-$(package)_config_opts += -no-sql-psql\n-$(package)_config_opts += -no-sql-sqlite\n-$(package)_config_opts += -no-sql-sqlite2\n-$(package)_config_opts += -prefix $(host_prefix)\n-$(package)_config_opts += -hostprefix $(build_prefix)\n-$(package)_config_opts += -bindir $(build_prefix)/bin\n-$(package)_config_opts += -no-c++11\n-$(package)_config_opts += -openssl-linked\n-$(package)_config_opts += -v\n-$(package)_config_opts += -static\n-$(package)_config_opts += -silent\n-$(package)_config_opts += -pkg-config\n-$(package)_config_opts += -qt-libpng\n-$(package)_config_opts += -qt-libjpeg\n-$(package)_config_opts += -qt-zlib\n-$(package)_config_opts += -qt-pcre\n-$(package)_config_opts += -no-pulseaudio\n-$(package)_config_opts += -no-openvg\n-$(package)_config_opts += -no-xrender\n-$(package)_config_opts += -no-alsa\n-$(package)_config_opts += -no-mtdev\n-$(package)_config_opts += -no-gstreamer\n-$(package)_config_opts += -no-mitshm\n-$(package)_config_opts += -no-kms\n-$(package)_config_opts += -no-reduce-relocations\n-$(package)_config_opts += -no-egl\n-$(package)_config_opts += -no-eglfs\n-$(package)_config_opts += -no-linuxfb\n-$(package)_config_opts += -no-xinput2\n-$(package)_config_opts += -no-libudev\n-$(package)_config_opts += -no-use-gold-linker\n-$(package)_config_opts += -reduce-exports\n-$(package)_config_opts += -optimized-qmake\n-\n-ifneq ($(build_os),darwin)\n-$(package)_config_opts_darwin = -xplatform macx-clang-linux\n-$(package)_config_opts_darwin += -device-option MAC_SDK_PATH=$(OSX_SDK)\n-$(package)_config_opts_darwin += -device-option MAC_SDK_VERSION=$(OSX_SDK_VERSION)\n-$(package)_config_opts_darwin += -device-option CROSS_COMPILE=\"$(host)-\"\n-$(package)_config_opts_darwin += -device-option MAC_MIN_VERSION=$(OSX_MIN_VERSION)\n-$(package)_config_opts_darwin += -device-option MAC_TARGET=$(host)\n-$(package)_config_opts_darwin += -device-option MAC_LD64_VERSION=$(LD64_VERSION)\n-endif\n-\n-$(package)_config_opts_linux  = -qt-xkbcommon\n-$(package)_config_opts_linux += -qt-xcb\n-$(package)_config_opts_linux += -system-freetype\n-$(package)_config_opts_linux += -no-sm\n-$(package)_config_opts_linux += -fontconfig\n-$(package)_config_opts_linux += -no-opengl\n-$(package)_config_opts_arm_linux  = -platform linux-g++ -xplatform $(host)\n-$(package)_config_opts_i686_linux  = -xplatform linux-g++-32\n-$(package)_config_opts_mingw32  = -no-opengl -xplatform win32-g++ -device-option CROSS_COMPILE=\"$(host)-\"\n-$(package)_build_env  = QT_RCC_TEST=1\n-endef\n-\n-define $(package)_fetch_cmds\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_download_file),$($(package)_file_name),$($(package)_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttranslations_file_name),$($(package)_qttranslations_file_name),$($(package)_qttranslations_sha256_hash)) && \\\n-$(call fetch_file,$(package),$($(package)_download_path),$($(package)_qttools_file_name),$($(package)_qttools_file_name),$($(package)_qttools_sha256_hash))\n-endef\n-\n-define $(package)_extract_cmds\n-  mkdir -p $($(package)_extract_dir) && \\\n-  echo \"$($(package)_sha256_hash)  $($(package)_source)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_qttranslations_sha256_hash)  $($(package)_source_dir)/$($(package)_qttranslations_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  echo \"$($(package)_qttools_sha256_hash)  $($(package)_source_dir)/$($(package)_qttools_file_name)\" > $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  $(build_SHA256SUM) -c $($(package)_extract_dir)/.$($(package)_file_name).hash && \\\n-  mkdir qtbase && \\\n-  tar --strip-components=1 -xf $($(package)_source) -C qtbase && \\\n-  mkdir qttranslations && \\\n-  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttranslations_file_name) -C qttranslations && \\\n-  mkdir qttools && \\\n-  tar --strip-components=1 -xf $($(package)_source_dir)/$($(package)_qttools_file_name) -C qttools\n-endef\n-\n-define $(package)_preprocess_cmds\n-  sed -i.old \"s|updateqm.commands = \\$$$$\\$$$$LRELEASE|updateqm.commands = $($(package)_extract_dir)/qttools/bin/lrelease|\" qttranslations/translations/translations.pro && \\\n-  sed -i.old \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" qtbase/src/src.pro && \\\n-  sed -i.old \"s|X11/extensions/XIproto.h|X11/X.h|\" qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp && \\\n-  sed -i.old 's/if \\[ \"$$$$XPLATFORM_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/if \\[ \"$$$$BUILD_ON_MAC\" = \"yes\" \\]; then xspecvals=$$$$(macSDKify/' qtbase/configure && \\\n-  mkdir -p qtbase/mkspecs/macx-clang-linux &&\\\n-  cp -f qtbase/mkspecs/macx-clang/Info.plist.lib qtbase/mkspecs/macx-clang-linux/ &&\\\n-  cp -f qtbase/mkspecs/macx-clang/Info.plist.app qtbase/mkspecs/macx-clang-linux/ &&\\\n-  cp -f qtbase/mkspecs/macx-clang/qplatformdefs.h qtbase/mkspecs/macx-clang-linux/ &&\\\n-  cp -f $($(package)_patch_dir)/mac-qmake.conf qtbase/mkspecs/macx-clang-linux/qmake.conf && \\\n-  patch -p1 < $($(package)_patch_dir)/fix-xcb-include-order.patch && \\\n-  patch -p1 < $($(package)_patch_dir)/mingw-uuidof.patch && \\\n-  patch -p1 < $($(package)_patch_dir)/pidlist_absolute.patch && \\\n-  echo \"QMAKE_CFLAGS     += $($(package)_cflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  echo \"QMAKE_CXXFLAGS   += $($(package)_cxxflags) $($(package)_cppflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  echo \"QMAKE_LFLAGS     += $($(package)_ldflags)\" >> qtbase/mkspecs/common/gcc-base.conf && \\\n-  sed -i.old \"s|QMAKE_CFLAGS            = |QMAKE_CFLAGS            = $($(package)_cflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_LFLAGS            = |QMAKE_LFLAGS            = $($(package)_ldflags) |\" qtbase/mkspecs/win32-g++/qmake.conf && \\\n-  sed -i.old \"s|QMAKE_CXXFLAGS          = |QMAKE_CXXFLAGS            = $($(package)_cxxflags) $($(package)_cppflags) |\" qtbase/mkspecs/win32-g++/qmake.conf\n-endef\n-\n-define $(package)_config_cmds\n-  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n-  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n-  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n-  ./configure $($(package)_config_opts) && \\\n-  $(MAKE) sub-src-clean && \\\n-  cd ../qttranslations && ../qtbase/bin/qmake qttranslations.pro -o Makefile && \\\n-  cd translations && ../../qtbase/bin/qmake translations.pro -o Makefile && cd ../.. &&\\\n-  cd qttools/src/linguist/lrelease/ && ../../../../qtbase/bin/qmake lrelease.pro -o Makefile\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src $(addprefix sub-,$($(package)_qt_libs)) && \\\n-  $(MAKE) -C ../qttools/src/linguist/lrelease && \\\n-  $(MAKE) -C ../qttranslations\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) $(addsuffix -install_subtargets,$(addprefix sub-,$($(package)_qt_libs))) && cd .. &&\\\n-  $(MAKE) -C qttools/src/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install_target && \\\n-  $(MAKE) -C qttranslations INSTALL_ROOT=$($(package)_staging_dir) install_subtargets && \\\n-  if `test -f qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a`; then \\\n-    cp qtbase/src/plugins/platforms/xcb/xcb-static/libxcb-static.a $($(package)_staging_prefix_dir)/lib; \\\n-  fi\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf native/mkspecs/ native/lib/ lib/cmake/ && \\\n-  rm -f lib/lib*.la lib/*.prl plugins/*/*.prl\n-endef"
      },
      {
        "sha": "8fb30a5c4471cfe1b4204c4507a103d37ba5a067",
        "filename": "depends/packages/qt46.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 66,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qt46.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/qt46.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt46.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,66 +0,0 @@\n-PACKAGE=qt46\n-$(package)_version=4.6.4\n-$(package)_download_path=http://download.qt-project.org/archive/qt/4.6/\n-$(package)_file_name=qt-everywhere-opensource-src-$($(package)_version).tar.gz\n-$(package)_sha256_hash=9ad4d46c721b53a429ed5a2eecfd3c239a9ab566562f183f99d3125f1a234250\n-$(package)_dependencies=openssl freetype dbus libX11 xproto libXext libICE libSM\n-$(package)_patches=stlfix.patch \n-\n-define $(package)_set_vars\n-$(package)_config_opts  = -prefix $(host_prefix) -headerdir $(host_prefix)/include/qt4 -bindir $(build_prefix)/bin\n-$(package)_config_opts += -release -no-separate-debug-info -opensource -confirm-license\n-$(package)_config_opts += -stl -qt-zlib\n-\n-$(package)_config_opts += -nomake examples -nomake tests -nomake tools -nomake translations -nomake demos -nomake docs\n-$(package)_config_opts += -no-audio-backend -no-glib -no-nis -no-cups -no-iconv -no-gif -no-pch\n-$(package)_config_opts += -no-xkb -no-xrender -no-xrandr -no-xfixes -no-xcursor -no-xinerama -no-xsync -no-xinput -no-mitshm -no-xshape\n-$(package)_config_opts += -no-libtiff -no-fontconfig -openssl-linked\n-$(package)_config_opts += -no-sql-db2 -no-sql-ibase -no-sql-oci -no-sql-tds -no-sql-mysql\n-$(package)_config_opts += -no-sql-odbc -no-sql-psql -no-sql-sqlite -no-sql-sqlite2\n-$(package)_config_opts += -no-xmlpatterns -no-multimedia -no-phonon -no-scripttools -no-declarative\n-$(package)_config_opts += -no-phonon-backend -no-webkit -no-javascript-jit -no-script\n-$(package)_config_opts += -no-svg -no-libjpeg -no-libtiff -no-libpng -no-libmng -no-qt3support -no-opengl\n-\n-$(package)_config_opts_x86_64_linux  += -platform linux-g++-64\n-$(package)_config_opts_i686_linux  = -platform linux-g++-32\n-$(package)_build_env  = QT_RCC_TEST=1\n-endef\n-\n-define $(package)_preprocess_cmds\n-   sed -i.old \"s|/include /usr/include||\" config.tests/unix/freetype/freetype.pri && \\\n-   sed -i.old \"s|src_plugins.depends = src_gui src_sql src_svg|src_plugins.depends = src_gui src_sql|\" src/src.pro && \\\n-   sed -i.old \"s|\\.lower(|\\.toLower(|g\" src/network/ssl/qsslsocket_openssl.cpp && \\\n-   sed -i.old \"s|Key_BackSpace|Key_Backspace|\" src/gui/itemviews/qabstractitemview.cpp && \\\n-   sed -i.old \"s|/usr/X11R6/lib64|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|/usr/X11R6/lib|$(host_prefix)/lib|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|/usr/X11R6/include|$(host_prefix)/include|\" mkspecs/*/*.conf && \\\n-   sed -i.old \"s|QMAKE_LFLAGS_SHLIB\\t+= -shared|QMAKE_LFLAGS_SHLIB\\t+= -shared -Wl,--exclude-libs,ALL|\" mkspecs/common/g++.conf && \\\n-   sed -i.old \"/SSLv2_client_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n-   sed -i.old \"/SSLv2_server_method/d\" src/network/ssl/qsslsocket_openssl.cpp src/network/ssl/qsslsocket_openssl_symbols.cpp && \\\n-   patch -p1 < $($(package)_patch_dir)/stlfix.patch \n-endef\n-\n-define $(package)_config_cmds\n-  export PKG_CONFIG_SYSROOT_DIR=/ && \\\n-  export PKG_CONFIG_LIBDIR=$(host_prefix)/lib/pkgconfig && \\\n-  export PKG_CONFIG_PATH=$(host_prefix)/share/pkgconfig  && \\\n-  export CPATH=$(host_prefix)/include && \\\n-  OPENSSL_LIBS='-L$(host_prefix)/lib -lssl -lcrypto' ./configure $($(package)_config_opts) && \\\n-  cd tools/linguist/lrelease; ../../../bin/qmake  -o Makefile lrelease.pro\n-endef\n-\n-define $(package)_build_cmds\n-  export CPATH=$(host_prefix)/include && \\\n-  $(MAKE) -C src && \\\n-  $(MAKE) -C tools/linguist/lrelease\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src INSTALL_ROOT=$($(package)_staging_dir) install && \\\n-  $(MAKE) -C tools/linguist/lrelease INSTALL_ROOT=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf mkspecs/ lib/cmake/ lib/*.prl lib/*.la && \\\n-  find native/bin -type f -exec mv {} {}-qt4 \\;\n-endef"
      },
      {
        "sha": "0c7c958d62d42e52fa5cb694a026ea9f36ccabfa",
        "filename": "depends/packages/xcb_proto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 27,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xcb_proto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xcb_proto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xcb_proto.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,27 +0,0 @@\n-package=xcb_proto\n-$(package)_version=1.10\n-$(package)_download_path=http://xcb.freedesktop.org/dist\n-$(package)_file_name=xcb-proto-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=7ef40ddd855b750bc597d2a435da21e55e502a0fefa85b274f2c922800baaf05\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--disable-shared\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  find -name \"*.pyc\" -delete && \\\n-  find -name \"*.pyo\" -delete\n-endef"
      },
      {
        "sha": "98a11eb4974f8b25bf0f8c75ca1b0f0de4d5d1b9",
        "filename": "depends/packages/xextproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xextproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xextproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xextproto.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-package=xextproto\n-$(package)_version=7.3.0\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=f3f4b23ac8db9c3a9e0d8edb591713f3d70ef9c3b175970dd8823dfc92aa5bb0\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "50a90b26850ac87de0c74d2822a6590d9a9b9e8e",
        "filename": "depends/packages/xproto.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xproto.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xproto.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xproto.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n-package=xproto\n-$(package)_version=7.0.26\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/proto\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=636162c1759805a5a0114a369dffdeccb8af8c859ef6e1445f26a4e6e046514f\n-\n-define $(package)_set_vars\n-$(package)_config_opts=--disable-shared\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "99eefa6d5ea24b2d2f4e5ecf38b07390432a8549",
        "filename": "depends/packages/xtrans.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xtrans.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/xtrans.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/xtrans.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,22 +0,0 @@\n-package=xtrans\n-$(package)_version=1.3.4\n-$(package)_download_path=http://xorg.freedesktop.org/releases/individual/lib/\n-$(package)_file_name=$(package)-$($(package)_version).tar.bz2\n-$(package)_sha256_hash=054d4ee3efd52508c753e9f7bc655ef185a29bd2850dd9e2fc2ccc33544f583a\n-$(package)_dependencies=\n-\n-define $(package)_set_vars\n-$(package)_config_opts_linux=--with-pic --disable-static\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE)\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) DESTDIR=$($(package)_staging_dir) install\n-endef"
      },
      {
        "sha": "7b866e9c0f66237433d229d7c1652308dd72b5a1",
        "filename": "depends/packages/zeromq.mk",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/zeromq.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/packages/zeromq.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/zeromq.mk?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,26 +0,0 @@\n-package=zeromq\n-$(package)_version=4.0.7\n-$(package)_download_path=http://download.zeromq.org\n-$(package)_file_name=$(package)-$($(package)_version).tar.gz\n-$(package)_sha256_hash=e00b2967e074990d0538361cc79084a0a92892df2c6e7585da34e4c61ee47b03\n-\n-define $(package)_set_vars\n-  $(package)_config_opts=--without-documentation --disable-shared\n-  $(package)_config_opts_linux=--with-pic\n-endef\n-\n-define $(package)_config_cmds\n-  $($(package)_autoconf)\n-endef\n-\n-define $(package)_build_cmds\n-  $(MAKE) -C src\n-endef\n-\n-define $(package)_stage_cmds\n-  $(MAKE) -C src DESTDIR=$($(package)_staging_dir) install\n-endef\n-\n-define $(package)_postprocess_cmds\n-  rm -rf bin share\n-endef"
      },
      {
        "sha": "97f59cb7e4eea0575cf684936c7087d784a39437",
        "filename": "depends/patches/boost/darwin_boost_atomic-1.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 35,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/darwin_boost_atomic-1.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/darwin_boost_atomic-1.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-1.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,35 +0,0 @@\n-diff --git a/include/boost/atomic/detail/cas128strong.hpp b/include/boost/atomic/detail/cas128strong.hpp\n-index 906c13e..dcb4d7d 100644\n---- a/include/boost/atomic/detail/cas128strong.hpp\n-+++ b/include/boost/atomic/detail/cas128strong.hpp\n-@@ -196,15 +196,17 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void\n-     store(value_type const& value, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type value_s = 0;\n-+        storage_type value_s;\n-+        memset(&value_s, 0, sizeof(value_s));\n-         memcpy(&value_s, &value, sizeof(value_type));\n-         platform_fence_before_store(order);\n-         platform_store128(value_s, &v_);\n-@@ -247,7 +249,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n- "
      },
      {
        "sha": "ca50765200ec86d6b5591446326afc91b6d389e7",
        "filename": "depends/patches/boost/darwin_boost_atomic-2.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 55,
        "changes": 55,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/darwin_boost_atomic-2.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/darwin_boost_atomic-2.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/darwin_boost_atomic-2.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,55 +0,0 @@\n-diff --git a/include/boost/atomic/detail/gcc-atomic.hpp b/include/boost/atomic/detail/gcc-atomic.hpp\n-index a130590..4af99a1 100644\n---- a/include/boost/atomic/detail/gcc-atomic.hpp\n-+++ b/include/boost/atomic/detail/gcc-atomic.hpp\n-@@ -958,14 +958,16 @@ class base_atomic<T, void, 16, Sign>\n- \n- public:\n-     BOOST_DEFAULTED_FUNCTION(base_atomic(void), {})\n--    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT : v_(0)\n-+    explicit base_atomic(value_type const& v) BOOST_NOEXCEPT\n-     {\n-+        memset(&v_, 0, sizeof(v_));\n-         memcpy(&v_, &v, sizeof(value_type));\n-     }\n- \n-     void store(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         __atomic_store_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-     }\n-@@ -980,7 +982,8 @@ class base_atomic<T, void, 16, Sign>\n- \n-     value_type exchange(value_type const& v, memory_order order = memory_order_seq_cst) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type tmp = 0;\n-+        storage_type tmp;\n-+        memset(&tmp, 0, sizeof(tmp));\n-         memcpy(&tmp, &v, sizeof(value_type));\n-         tmp = __atomic_exchange_n(&v_, tmp, atomics::detail::convert_memory_order_to_gcc(order));\n-         value_type res;\n-@@ -994,7 +997,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, false,\n-@@ -1010,7 +1015,9 @@ class base_atomic<T, void, 16, Sign>\n-         memory_order success_order,\n-         memory_order failure_order) volatile BOOST_NOEXCEPT\n-     {\n--        storage_type expected_s = 0, desired_s = 0;\n-+        storage_type expected_s, desired_s;\n-+        memset(&expected_s, 0, sizeof(expected_s));\n-+        memset(&desired_s, 0, sizeof(desired_s));\n-         memcpy(&expected_s, &expected, sizeof(value_type));\n-         memcpy(&desired_s, &desired, sizeof(value_type));\n-         const bool success = __atomic_compare_exchange_n(&v_, &expected_s, desired_s, true,"
      },
      {
        "sha": "04514c593a101078af216a67bd905b5c615ded53",
        "filename": "depends/patches/boost/gcc_5_no_cxx11.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/gcc_5_no_cxx11.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/boost/gcc_5_no_cxx11.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/boost/gcc_5_no_cxx11.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,37 +0,0 @@\n-From eec808554936ae068b23df07ab54d4dc6302a695 Mon Sep 17 00:00:00 2001\n-From: jzmaddock <jzmaddock@gmail.com>\n-Date: Sat, 23 Aug 2014 09:38:02 +0100\n-Subject: [PATCH] Fix BOOST_NO_CXX11_VARIADIC_TEMPLATES definition - the\n- feature was introduced in GCC 4.4.\n-\n----\n- include/boost/config/compiler/gcc.hpp | 9 +--------\n- 1 file changed, 1 insertion(+), 8 deletions(-)\n-\n-diff --git a/include/boost/config/compiler/gcc.hpp b/include/boost/config/compiler/gcc.hpp\n-index f37159d..97d8a18 100644\n---- a/include/boost/config/compiler/gcc.hpp\n-+++ b/include/boost/config/compiler/gcc.hpp\n-@@ -154,14 +154,6 @@\n- #  define BOOST_NO_CXX11_FUNCTION_TEMPLATE_DEFAULT_ARGS\n- #  define BOOST_NO_CXX11_RVALUE_REFERENCES\n- #  define BOOST_NO_CXX11_STATIC_ASSERT\n--\n--// Variadic templates compiler:\n--//   http://www.generic-programming.org/~dgregor/cpp/variadic-templates.html\n--#  if defined(__VARIADIC_TEMPLATES) || (__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ >= 4) && defined(__GXX_EXPERIMENTAL_CXX0X__))\n--#    define BOOST_HAS_VARIADIC_TMPL\n--#  else\n--#    define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n--#  endif\n- #endif\n- \n- // C++0x features in 4.4.n and later\n-@@ -176,6 +168,7 @@\n- #  define BOOST_NO_CXX11_DELETED_FUNCTIONS\n- #  define BOOST_NO_CXX11_TRAILING_RESULT_TYPES\n- #  define BOOST_NO_CXX11_INLINE_NAMESPACES\n-+#  define BOOST_NO_CXX11_VARIADIC_TEMPLATES\n- #endif\n- \n- #if __GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 5)"
      },
      {
        "sha": "58695c11f5d976bd163429884e02d9a7f6f4eb4d",
        "filename": "depends/patches/libevent/reuseaddr.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/libevent/reuseaddr.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/libevent/reuseaddr.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/libevent/reuseaddr.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05",
        "patch": "@@ -1,21 +0,0 @@\n---- old/evutil.c   2015-08-28 19:26:23.488765923 -0400\n-+++ new/evutil.c   2015-08-28 19:27:41.392767019 -0400\n-@@ -321,15 +321,16 @@\n- int\n- evutil_make_listen_socket_reuseable(evutil_socket_t sock)\n- {\n--#ifndef WIN32\n- \tint one = 1;\n-+#ifndef WIN32\n- \t/* REUSEADDR on Unix means, \"don't hang on to this address after the\n- \t * listener is closed.\"  On Windows, though, it means \"don't keep other\n- \t * processes from binding to this address while we're using it. */\n- \treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (void*) &one,\n- \t    (ev_socklen_t)sizeof(one));\n- #else\n--\treturn 0;\n-+\treturn setsockopt(sock, SOL_SOCKET, SO_REUSEADDR, (const char*) &one,\n-+\t\t(ev_socklen_t)sizeof(one));\n- #endif\n- }\n- "
      },
      {
        "sha": "8ab0993dc4de142ab7766a500640be92540fe80f",
        "filename": "depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/native_cdrkit/cdrkit-deterministic.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/native_cdrkit/cdrkit-deterministic.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "ae469ea94bff0e7d3b833a836f6c56e02c12db6a",
        "filename": "depends/patches/qt/fix-xcb-include-order.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 45,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/fix-xcb-include-order.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/fix-xcb-include-order.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/fix-xcb-include-order.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "a6d0070cca6489848394febfa8a1b6e36925ba6c",
        "filename": "depends/patches/qt/mac-qmake.conf",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/mac-qmake.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/mac-qmake.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mac-qmake.conf?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "975366e61229c891974f60f91a74e8c9f7a62d5a",
        "filename": "depends/patches/qt/mingw-uuidof.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 44,
        "changes": 44,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/mingw-uuidof.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/mingw-uuidof.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/mingw-uuidof.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "0b49c050dcc1f37fc86d289ecd7bf9b1c2607206",
        "filename": "depends/patches/qt/pidlist_absolute.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 37,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/pidlist_absolute.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt/pidlist_absolute.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt/pidlist_absolute.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "f8f6fb04b0b70db71dc5b2c75d2a5cfb6bc48893",
        "filename": "depends/patches/qt46/stlfix.patch",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt46/stlfix.patch",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/depends/patches/qt46/stlfix.patch",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/patches/qt46/stlfix.patch?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "08d4f8c37fe649b87413c3cbd89013252c26f259",
        "filename": "doc/Doxyfile",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/Doxyfile",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/Doxyfile",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/Doxyfile?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "e9391292ba2492732efc3486b232337dc0dcdcff",
        "filename": "doc/README",
        "status": "added",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "c0f9ee52205dd3661327a09c8d2813221ec8197a",
        "filename": "doc/README.md",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "c13efaa145c833e693004a245f7ad1d66d1d293d",
        "filename": "doc/README_osx.txt",
        "status": "removed",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/README_osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/README_osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_osx.txt?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "b56bf4b952c9d1429c88485dbc7d38bbb7fcdc86",
        "filename": "doc/README_windows.txt",
        "status": "modified",
        "additions": 16,
        "deletions": 18,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/README_windows.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/README_windows.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/README_windows.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "bf669235e38a2c97a8cce1de70f32c7baf89ba91",
        "filename": "doc/REST-interface.md",
        "status": "removed",
        "additions": 0,
        "deletions": 96,
        "changes": 96,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "2dd930d6a4f97debef6dba19040f471f75250b6a",
        "filename": "doc/assets-attribution.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8527026e93e090a49430c17a3fe0e5a45e9738fd",
        "filename": "doc/assets-attribution.txt",
        "status": "added",
        "additions": 58,
        "deletions": 0,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/assets-attribution.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/assets-attribution.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "e73add0130f3f1e65a3419130baeddd9d63e299f",
        "filename": "doc/bips.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/bips.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/bips.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bips.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "5b41b02e18e57e42ba6ee790ca69e88439ea09c0",
        "filename": "doc/bitcoin_logo_doxygen.png",
        "status": "modified",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/bitcoin_logo_doxygen.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/bitcoin_logo_doxygen.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/bitcoin_logo_doxygen.png?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "303351ed48acea978430be58a7b67358e71edf72",
        "filename": "doc/build-msw.txt",
        "status": "added",
        "additions": 84,
        "deletions": 0,
        "changes": 84,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-msw.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-msw.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-msw.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "d923301467a7f0ae394accd19cd7362feff3120a",
        "filename": "doc/build-openbsd.md",
        "status": "removed",
        "additions": 0,
        "deletions": 162,
        "changes": 162,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-openbsd.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-openbsd.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-openbsd.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "c3cb1b78917d2e61901a7f6a9c3e17392bde2d72",
        "filename": "doc/build-osx.md",
        "status": "removed",
        "additions": 0,
        "deletions": 119,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "da838e2d0e08517beaa446bf07677809e67f5979",
        "filename": "doc/build-osx.txt",
        "status": "added",
        "additions": 52,
        "deletions": 0,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-osx.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-osx.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "96de098c38dc58b4d8ea46e874d7a9d5b972bad3",
        "filename": "doc/build-unix.md",
        "status": "removed",
        "additions": 0,
        "deletions": 248,
        "changes": 248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-unix.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-unix.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "67d0bc4ffaa950d9f410f98567ae3cc834c210a4",
        "filename": "doc/build-unix.txt",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-unix.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/build-unix.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-unix.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "2b9233d1e140631d3bc18a311a7737981710b87d",
        "filename": "doc/build-windows.md",
        "status": "removed",
        "additions": 0,
        "deletions": 40,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-windows.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/build-windows.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-windows.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "59409859f93e2a09547ab200087254358b648dbb",
        "filename": "doc/coding.txt",
        "status": "added",
        "additions": 99,
        "deletions": 0,
        "changes": 99,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/coding.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/coding.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/coding.txt?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "358792251b6751d434f9b57c459421290478a65c",
        "filename": "doc/developer-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 375,
        "changes": 375,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "55a5c28258c67704fb926e0ad71d448440babdaa",
        "filename": "doc/dnsseed-policy.md",
        "status": "removed",
        "additions": 0,
        "deletions": 54,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/dnsseed-policy.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/dnsseed-policy.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/dnsseed-policy.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "f7eca57dcb08fb3ea3e4e4d7dc274c0a33fa7431",
        "filename": "doc/files.md",
        "status": "removed",
        "additions": 0,
        "deletions": 30,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "5ca91505e7c2ae27cdbabf5a6524dc12670e82bf",
        "filename": "doc/gitian-building.md",
        "status": "removed",
        "additions": 0,
        "deletions": 472,
        "changes": 472,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "dd22428e176b874afb2f5b9d1b018592fb0175d0",
        "filename": "doc/gitian-building/create_new_vm.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_new_vm.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_new_vm.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_new_vm.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "14aef5abaea8d94a5d9ab6cc7e449f7efe4e9f97",
        "filename": "doc/gitian-building/create_vm_file_location_size.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_file_location_size.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_file_location_size.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_file_location_size.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8e29816fab9e7c8f97338ed43f0893f655134a5f",
        "filename": "doc/gitian-building/create_vm_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "a157211cf5baf909149e73fddfc2556305f4b123",
        "filename": "doc/gitian-building/create_vm_hard_disk_file_type.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_hard_disk_file_type.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_hard_disk_file_type.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "5abfee5337058f9bd638a79416040bd6c6496194",
        "filename": "doc/gitian-building/create_vm_memsize.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_memsize.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_memsize.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_memsize.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "cee16a6c63b4f2dcd592ae8c9cdc02f278fbad81",
        "filename": "doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/create_vm_storage_physical_hard_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/create_vm_storage_physical_hard_disk.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "7cda038ae47f97ddfaa905478599cafc6572dd1f",
        "filename": "doc/gitian-building/debian_install_10_configure_clock.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_10_configure_clock.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_10_configure_clock.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_10_configure_clock.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "2a648c517f429fb937275d5444a58f4830e8eae4",
        "filename": "doc/gitian-building/debian_install_11_partition_disks.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_11_partition_disks.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_11_partition_disks.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_11_partition_disks.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "0f3acc498e3e9cc04692a9c557a8eecb5029dc25",
        "filename": "doc/gitian-building/debian_install_12_choose_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_12_choose_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_12_choose_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_12_choose_disk.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "c8ef0b37ad6232f87593ea448beaba089b568a91",
        "filename": "doc/gitian-building/debian_install_14_finish.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_14_finish.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_14_finish.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_14_finish.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "d8de00dec68c826485034c698079e5808f7dadfd",
        "filename": "doc/gitian-building/debian_install_15_write_changes.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_15_write_changes.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_15_write_changes.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_15_write_changes.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "0bd985b38c113ed9bbbe03808ace284476680edc",
        "filename": "doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_16_choose_a_mirror.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_16_choose_a_mirror.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "2c19919f64b62d89883dc8e1308f179978b95ca4",
        "filename": "doc/gitian-building/debian_install_18_proxy_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_18_proxy_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_18_proxy_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_18_proxy_settings.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "5430456b14f098d9e3561653352b826d19a2c38a",
        "filename": "doc/gitian-building/debian_install_19_software_selection.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_19_software_selection.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_19_software_selection.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_19_software_selection.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "216502e1c6eb6930ce60c1a36e7476e6fb8781d9",
        "filename": "doc/gitian-building/debian_install_1_boot_menu.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_1_boot_menu.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_1_boot_menu.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_1_boot_menu.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "d853c1587188c5fd4ede94ab00f9d8b6731674ac",
        "filename": "doc/gitian-building/debian_install_20_install_grub.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_20_install_grub.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_20_install_grub.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_20_install_grub.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "493ab806a673f5c8ee47db0bb5de6af0d5042b03",
        "filename": "doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_21_install_grub_bootloader.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_21_install_grub_bootloader.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "7c4445585bc9982a5015959dba70d73b01885e08",
        "filename": "doc/gitian-building/debian_install_22_finish_installation.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_22_finish_installation.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_22_finish_installation.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_22_finish_installation.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "0228ae2c011daeababc75b915a12b28b702456c0",
        "filename": "doc/gitian-building/debian_install_2_select_a_language.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_2_select_a_language.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_2_select_a_language.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_2_select_a_language.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "7b18fba97577b521944f909ed57fd251942a9eab",
        "filename": "doc/gitian-building/debian_install_3_select_location.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_3_select_location.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_3_select_location.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_3_select_location.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8e46117de4879a6de8b276813bef12c219cb4e8b",
        "filename": "doc/gitian-building/debian_install_4_configure_keyboard.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_4_configure_keyboard.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_4_configure_keyboard.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8e3720f24322a54ef33893e8eff95383158bf3d9",
        "filename": "doc/gitian-building/debian_install_5_configure_the_network.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_5_configure_the_network.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_5_configure_the_network.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_5_configure_the_network.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "7a986d92f48ca3755e37993d098053321109751d",
        "filename": "doc/gitian-building/debian_install_6_domain_name.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_6_domain_name.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_6_domain_name.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6_domain_name.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "dcade119676ed7e0c0f92cff6d6a064929a07a07",
        "filename": "doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_6a_set_up_root_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_6a_set_up_root_password.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "6763c6e08ade2b17f050da257a76132f916e38f5",
        "filename": "doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_7_set_up_user_fullname.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_7_set_up_user_fullname.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "bb04de96d23bdaa3e29fbe19891e42b881dd0a99",
        "filename": "doc/gitian-building/debian_install_8_set_up_username.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_8_set_up_username.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_8_set_up_username.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_8_set_up_username.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "981f1181d79d0d7fe2138f036d0f1bb41ec472fa",
        "filename": "doc/gitian-building/debian_install_9_user_password.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_9_user_password.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_install_9_user_password.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_install_9_user_password.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "14cdd5ba5b52cc32fbc0da62cf3671c3679b8d79",
        "filename": "doc/gitian-building/debian_root_login.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_root_login.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/debian_root_login.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/debian_root_login.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "9e714fd15451837980b9d12a931c294fc962b2a2",
        "filename": "doc/gitian-building/network_settings.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/network_settings.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/network_settings.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/network_settings.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "9e1fa2af20f48d482892b722b7288600bece322a",
        "filename": "doc/gitian-building/port_forwarding_rules.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/port_forwarding_rules.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/port_forwarding_rules.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/port_forwarding_rules.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "5acdc3fe10eebce2422cdb6d6ae799a7630f0b8d",
        "filename": "doc/gitian-building/select_startup_disk.png",
        "status": "removed",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/select_startup_disk.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/gitian-building/select_startup_disk.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/gitian-building/select_startup_disk.png?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "e3db5b05efcd6f93eaf114d731cf090a4882d07f",
        "filename": "doc/init.md",
        "status": "removed",
        "additions": 0,
        "deletions": 125,
        "changes": 125,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/init.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/init.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/init.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "3caab818076b88f54e1da3d9cd25a809b9352ca9",
        "filename": "doc/multiwallet-qt.md",
        "status": "removed",
        "additions": 0,
        "deletions": 48,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/multiwallet-qt.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/multiwallet-qt.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/multiwallet-qt.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "206b1977f3f1c03a36ab52d812a107cbd862ee99",
        "filename": "doc/readme-qt.rst",
        "status": "added",
        "additions": 147,
        "deletions": 0,
        "changes": 147,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/readme-qt.rst",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ddc5800d98c1ae2d8ff656925816e2321a6f682/doc/readme-qt.rst",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/readme-qt.rst?ref=0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      },
      {
        "sha": "2d86588eb2ac6e8a65b2ad96aeeae9abbda7cb3a",
        "filename": "doc/reduce-traffic.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/reduce-traffic.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/reduce-traffic.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/reduce-traffic.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "801b684e6b113144259d6dbac38e811dc6755cae",
        "filename": "doc/release-notes.md",
        "status": "removed",
        "additions": 0,
        "deletions": 52,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "986b8832ec1893a5cc061ea14ac609e7836fbb4f",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 762,
        "changes": 762,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8f59f1f68c6905f9435b04bd029d3beef2a1f1e8",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 143,
        "changes": 143,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "192ed69d299811b8b662f28905f73479266be820",
        "filename": "doc/release-notes/release-notes-0.10.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 86,
        "changes": 86,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.2.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "8a110e562c45376daea69efcb0837dc879ada66a",
        "filename": "doc/release-notes/release-notes-0.10.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 165,
        "changes": 165,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.10.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.3.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "28e49fb7ea64838f81a72424217e755a62e865c8",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 505,
        "changes": 505,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "799205691ed0f26322923693c2cbf523f0b6751e",
        "filename": "doc/release-notes/release-notes-0.11.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 172,
        "changes": 172,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.11.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.11.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.1.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "38715bc75fe27a48c253ee43474f926df7065593",
        "filename": "doc/release-notes/release-notes-0.3.12.md",
        "status": "removed",
        "additions": 0,
        "deletions": 13,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.12.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.12.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.12.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "2b95ff233d4c2810f9a2fd58b63d528ba65bd108",
        "filename": "doc/release-notes/release-notes-0.3.13.md",
        "status": "removed",
        "additions": 0,
        "deletions": 26,
        "changes": 26,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.13.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.13.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.13.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "e73052ed9bf0ba3b9dc59f8218d2eb69ea950cac",
        "filename": "doc/release-notes/release-notes-0.3.14.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.14.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.14.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.14.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "b98052ef5934de489f2f527d50abb51be95244d6",
        "filename": "doc/release-notes/release-notes-0.3.15.md",
        "status": "removed",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.15.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.15.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.15.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "743f84f30e9c2ad96251f433cad3468f3e591662",
        "filename": "doc/release-notes/release-notes-0.3.16.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.16.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.16.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.16.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "d3604b8f8867f1a2629d9daf971f463b291f0a5c",
        "filename": "doc/release-notes/release-notes-0.3.17.md",
        "status": "removed",
        "additions": 0,
        "deletions": 12,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.17.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.17.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.17.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "ab1c2e0692ffba94d66a5201ac2675c83cc60f11",
        "filename": "doc/release-notes/release-notes-0.3.18.md",
        "status": "removed",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.18.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.18.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.18.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "fcd867561d62341eef06d84cee4edec1e1894fed",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "removed",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.3.20.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.1.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "09ecb736bdb3f808a5d59ce3bf851c6c159ca6ce",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 17,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "9ae21802ee89b6587f006c73838ccbd34deb882e",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "removed",
        "additions": 0,
        "deletions": 22,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "f3b6bc426470d4137edc1b477ef9c3b400e0073e",
        "filename": "doc/release-notes/release-notes-0.3.21.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.21.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.21.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.21.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "4c05e3e5e78e309770aed4974be1707a8d44d255",
        "filename": "doc/release-notes/release-notes-0.3.22.md",
        "status": "removed",
        "additions": 0,
        "deletions": 16,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.22.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.22.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.22.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "c1d520e4925d6c57ed72f0c8a34f29a250f71efe",
        "filename": "doc/release-notes/release-notes-0.3.23.md",
        "status": "removed",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.23.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.23.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.23.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "d35ac66f2c8a07e8912426c10e2e4c158680ad21",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "removed",
        "additions": 0,
        "deletions": 20,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "145072a369d85a83b312100cf4d7089a591c1bfc",
        "filename": "doc/release-notes/release-notes-0.4.0.md",
        "status": "removed",
        "additions": 0,
        "deletions": 70,
        "changes": 70,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.0.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "ac471a8d7feddfd3235a1a1b7973cb06f2e768ed",
        "filename": "doc/release-notes/release-notes-0.4.1.md",
        "status": "removed",
        "additions": 0,
        "deletions": 38,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.1.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "6c5682ea4e2811a2bab3691d1fff5987538d2aff",
        "filename": "doc/release-notes/release-notes-0.4.2.md",
        "status": "removed",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.2.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      },
      {
        "sha": "fea1ae75b5e829cf38271ad529262d806d314303",
        "filename": "doc/release-notes/release-notes-0.4.3.md",
        "status": "removed",
        "additions": 0,
        "deletions": 21,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/152a8216cc7b170eed26ee4c3a65dbe592e55f05/doc/release-notes/release-notes-0.4.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.4.3.md?ref=152a8216cc7b170eed26ee4c3a65dbe592e55f05"
      }
    ]
  },
  {
    "sha": "068663c45e121a9977f15baf0cf215e42dac9067",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNjg2NjNjNDVlMTIxYTk5NzdmMTViYWYwY2YyMTVlNDJkYWM5MDY3",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T19:13:31Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T19:13:31Z"
      },
      "message": "Update readme",
      "tree": {
        "sha": "f2ee6577fd9b31917537fc6884f27063acc98101",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2ee6577fd9b31917537fc6884f27063acc98101"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/068663c45e121a9977f15baf0cf215e42dac9067",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/068663c45e121a9977f15baf0cf215e42dac9067",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/068663c45e121a9977f15baf0cf215e42dac9067",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/068663c45e121a9977f15baf0cf215e42dac9067/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ddc5800d98c1ae2d8ff656925816e2321a6f682",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0ddc5800d98c1ae2d8ff656925816e2321a6f682"
      }
    ],
    "stats": {
      "total": 159,
      "additions": 136,
      "deletions": 23
    },
    "files": [
      {
        "sha": "841297f6fe60bfedba5b6a09615185c4ff83827d",
        "filename": "README.md",
        "status": "modified",
        "additions": 136,
        "deletions": 23,
        "changes": 159,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/068663c45e121a9977f15baf0cf215e42dac9067/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/068663c45e121a9977f15baf0cf215e42dac9067/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=068663c45e121a9977f15baf0cf215e42dac9067",
        "patch": "@@ -1,32 +1,145 @@\n+#GameUnits integration/staging tree\n+================================\n+Copyright (c) 2009-2011 Bitcoin Developers<br>\n+Copyright (c) 2011-2013 Novacoin Developers<br>\n+Copyright (c) 2016-2999 GameUnits Developers<br>\n \n-Gameunits development tree\n+![GameUnits](http://i.imgur.com/DknBlfE.png)\n \n-Gameunits is a PoS-based cryptocurrency.\n+#What is GameUnits?\n+----------------\n+[![GameUnits](http://i.imgur.com/Cokp8iC.png)](http://i.imgur.com/Cokp8iC.png)\n \n-Development process\n-===========================\n+GameUnits is a PoS-based cryptocurrency.\n \n-Developers work in their own trees, then submit pull requests when\n-they think their feature or bug fix is ready.\n+A new and exciting Open Source Gaming currency that will revolutionize in-game purchases and bring developers a monetization based on fair-play rules.\n \n-The patch will be accepted if there is broad consensus that it is a\n-good thing.  Developers should expect to rework and resubmit patches\n-if they don't match the project's coding conventions (see coding.txt)\n-or are controversial.\n+GameUnits is a lite version of Bitcoin using scrypt as a proof-of-work algorithm with Proof of Stake.\n \n-The master branch is regularly built and tested, but is not guaranteed\n-to be completely stable. Tags are regularly created to indicate new\n-stable release versions of Gameunits.\n+GameUnits Properties :\n \n-Feature branches are created when there are major new features being\n-worked on by several people.\n+-\n \n-From time to time a pull request will become outdated. If this occurs, and\n-the pull is no longer automatically mergeable; a comment on the pull will\n-be used to issue a warning of closure. The pull will be closed 15 days\n-after the warning if action is not taken by the author. Pull requests closed\n-in this manner will have their corresponding issue labeled 'stagnant'.\n+# We :heart: Pull Requests!\n+Seriously, we really do.  It doesn't matter whether you're fixing a typo or overhauling a major area of the code base.  You will be showered in :thumbsup: :thumbsup: :thumbsup:<br>\n \n-Issues with no commits will be given a similar warning, and closed after\n-15 days from their last activity. Issues closed in this manner will be \n-labeled 'stale'.\n+#License\n+-------\n+![GameUnits](http://i.imgur.com/Nfb8DQx.png)\n+\n+GameUnits is released under the terms of the MIT license. See `COPYING` for more\n+information or see http://opensource.org/licenses/MIT.\n+\n+#Development process\n+-------------------\n+\n+Developers work in their own trees, then submit pull requests when they think\n+their feature or bug fix is ready.\n+\n+If it is a simple/trivial/non-controversial change, then one of the GameUnits\n+development team members simply pulls it.\n+\n+If it is a *more complicated or potentially controversial* change, then the patch\n+submitter will be asked to start a discussion (if they haven't already) on the\n+[mailing list]().\n+\n+The patch will be accepted if there is broad consensus that it is a good thing.\n+Developers should expect to rework and resubmit patches if the code doesn't\n+match the project's coding conventions (see `doc/coding.txt`) or are\n+controversial.\n+\n+#Compiling the GameUnits daemon from source on Debian\n+-----------------------------------------------------\n+The process for compiling the GameUnits daemon, gameunitsd, from the source code is pretty simple. This guide is based on the latest stable version of Debian Linux, though it should not need many modifications for any distro forked from Debian, such as Ubuntu and Xubuntu.\n+\n+###Update and install dependencies\n+\n+```\n+apt-get update && apt-get upgrade\n+apt-get install ntp git build-essential libssl-dev libdb-dev libdb++-dev libboost-all-dev libqrencode-dev autoconf automake pkg-config unzip\n+\n+wget http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.8.tar.gz && tar -zxf download.php\\?file\\=miniupnpc-1.8.tar.gz && cd miniupnpc-1.8/\n+make && make install && cd .. && rm -rf miniupnpc-1.8 download.php\\?file\\=miniupnpc-1.8.tar.gz\n+```\n+Note: Debian testing and unstable require libboost1.54-all-dev.\n+\n+###Compile the daemon\n+```\n+git clone https://github.com/GameUnits/GameUnits\n+```\n+\n+###Compile gameunitsd\n+```\n+cd gameunits/src\n+make -f makefile.unix\n+cd src\n+strip gameunitsd\n+```\n+\n+###Compile gameunits-qt\n+```\n+-------\n+```\n+\n+###Add a user and move gameunitsd\n+```\n+adduser gameunits && usermod -g users gameunits && delgroup gameunits && chmod 0701 /home/gameunits\n+mkdir /home/gameunits/bin\n+cp ~/gameunits/src/gameunitsd /home/gameunits/bin/gameunitsd\n+chown -R gameunits:users /home/gameunits/bin\n+cd && rm -rf gameunits\n+```\n+\n+###Run the daemon\n+```\n+su gameunits\n+cd && bin/gameunitsd\n+```\n+\n+On the first run, gameunitsd will return an error and tell you to make a configuration file, named gameunits.conf, in order to add a username and password to the file.\n+```\n+nano ~/.gameunits/gameunits.conf && chmod 0600 ~/.gameunits/gameunits.conf\n+```\n+Add the following to your config file, changing the username and password to something secure: \n+```\n+daemon=1\n+rpcuser=<username>\n+rpcpassword=<secure password>\n+server=1\n+listen=1\n+txindex=1\n+#txindex will record every transaction from the blockchain to your offline db\n+#it's an optional thing. It takes a lot longerr to sync that way 0 if you don't care\n+rpcport=40001\n+port=40002\n+rpcallowip=127.0.0.1\n+addnode=51.254.127.4:1338\n+addnode=95.211.57.108:1338\n+addnode=5.196.70.166:1338\n+```\n+\n+You can just copy the username and password provided by the error message when you first ran gameunitsd.\n+\n+Run gameunitsd once more to start the daemon! \n+\n+###Optional Download gameunits bootstrap\n+```\n+cd /home/gameunits/.gameunits/\n+wget --\n+unzip bootstrap.zip\n+```\n+\n+###Using gameunitsd\n+```\n+gameunitsd help\n+```\n+\n+The above command will list all available functions of the gameunits daemon. To safely stop the daemon, execute gameunitsd stop. \n+\n+#Testing\n+-------\n+\n+Testing and code review is the bottleneck for development; we get more pull\n+requests than we can review and test. Please be patient and help out, and\n+remember this is a security-critical project where any mistake might cost people\n+lots of money.\n\\ No newline at end of file"
      }
    ]
  },
  {
    "sha": "520bc6610554f212348c1fb9c34295e3774164b8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjBiYzY2MTA1NTRmMjEyMzQ4YzFmYjljMzQyOTVlMzc3NDE2NGI4",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T21:13:43Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T21:13:43Z"
      },
      "message": "add AlertPubKey mainnet+testnet",
      "tree": {
        "sha": "16231c0786f7beefebe4640776ce784e6e96e41e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16231c0786f7beefebe4640776ce784e6e96e41e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/520bc6610554f212348c1fb9c34295e3774164b8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/520bc6610554f212348c1fb9c34295e3774164b8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/520bc6610554f212348c1fb9c34295e3774164b8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/520bc6610554f212348c1fb9c34295e3774164b8/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "068663c45e121a9977f15baf0cf215e42dac9067",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/068663c45e121a9977f15baf0cf215e42dac9067",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/068663c45e121a9977f15baf0cf215e42dac9067"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "4a309c2bbf9a1a250247c16ae795472bf5db6e66",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/520bc6610554f212348c1fb9c34295e3774164b8/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/520bc6610554f212348c1fb9c34295e3774164b8/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=520bc6610554f212348c1fb9c34295e3774164b8",
        "patch": "@@ -183,7 +183,7 @@ class CMainParams : public CChainParams {\n         pchMessageStart[2] = 0x37;\n         pchMessageStart[3] = 0x9c;\n         \n-        vAlertPubKey = ParseHex(\"\");\n+        vAlertPubKey = ParseHex(\"04aae3014be6b24dac41112e10c26d2af8c4ece223650d72491c8a273f80281e5b49809f6edae129b4042778f14d9dc5672b470ad60fba040b74981ba084df3683\");\n         \n         nDefaultPort = 1338;\n         nRPCPort = 1337;\n@@ -273,7 +273,7 @@ class CTestNetParams : public CMainParams {\n         bnProofOfStakeLimit = CBigNum(~uint256(0) >> 20);\n         bnProofOfStakeLimitV2 = CBigNum(~uint256(0) >> 16);\n         \n-        vAlertPubKey = ParseHex(\"\");\n+        vAlertPubKey = ParseHex(\"04cb8e1c5a0d005e95f90c3d7d8dc10fc0b6695696e0d360fc43973ea2dff96a9e59bdd5b14723e9fa250ae1fb41481253bca58400a45c44dde20e0797425fb9b8\");\n         nDefaultPort = 17997;\n         nRPCPort = 17996;\n         strDataDir = \"testnet\";"
      }
    ]
  },
  {
    "sha": "e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNGQ1MWEzODlmZGU5N2JhZGE5ZDA0ZWFkN2YwOTI0ZjBhMTVlMWIx",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T21:39:31Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-04T21:39:31Z"
      },
      "message": "string CLIENT_NAME > WeAreOne",
      "tree": {
        "sha": "b816171b06812c9987ed766a9edec60d461df3b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b816171b06812c9987ed766a9edec60d461df3b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4d51a389fde97bada9d04ead7f0924f0a15e1b1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "520bc6610554f212348c1fb9c34295e3774164b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/520bc6610554f212348c1fb9c34295e3774164b8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/520bc6610554f212348c1fb9c34295e3774164b8"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1587b3ff63bf2cd23445f8e644a6b545b33517a6",
        "filename": "src/version.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e4d51a389fde97bada9d04ead7f0924f0a15e1b1/src/version.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e4d51a389fde97bada9d04ead7f0924f0a15e1b1/src/version.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.cpp?ref=e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
        "patch": "@@ -8,7 +8,7 @@\n // Name of client reported in the 'version' message. Report the same name\n // for both bitcoind and bitcoin-qt, to make it harder for attackers to\n // target servers or GUI users specifically.\n-const std::string CLIENT_NAME(\"Satoshi\");\n+const std::string CLIENT_NAME(\"WeAreOne\");\n \n // Client version number\n #define CLIENT_VERSION_SUFFIX   \"\""
      }
    ]
  },
  {
    "sha": "a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMWE5OTcwMDliMmJkYzM5YjQzYzgxMzJkNzM2ZDNjMmUzZjQ4NGFk",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T21:56:15Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T21:56:15Z"
      },
      "message": "update",
      "tree": {
        "sha": "df207c5cd2d2ab997205aee213618114849a81b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df207c5cd2d2ab997205aee213618114849a81b1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1a997009b2bdc39b43c8132d736d3c2e3f484ad/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e4d51a389fde97bada9d04ead7f0924f0a15e1b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e4d51a389fde97bada9d04ead7f0924f0a15e1b1"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 5,
      "deletions": 8
    },
    "files": [
      {
        "sha": "9c38bf6a9e1001ae970a31cdcb4fff5cefe7a2fc",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1a997009b2bdc39b43c8132d736d3c2e3f484ad/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1a997009b2bdc39b43c8132d736d3c2e3f484ad/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
        "patch": "@@ -38,11 +38,8 @@ int64_t CChainParams::GetProofOfWorkReward(int nHeight, int64_t nFees) const\n     if (nHeight <= 10)\n         nSubsidy = 0 * COIN;\n     else\n-    if (nHeight <= 110)           // Business Solutions Inc \"It\u2019s not about ideas. It\u2019s about making ideas happen.\"\n-        nSubsidy = 83000 * COIN;  // GameUnits International Headquarters Funds\n-    else\n     if (nHeight <= nLastPOWBlock)\n-        nSubsidy = 0 * COIN;\n+        nSubsidy = 1000 * COIN;\n     \n     if (fDebug && GetBoolArg(\"-printcreation\"))\n         LogPrintf(\"GetProofOfWorkReward() : create=%s nSubsidy=%d\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n@@ -221,7 +218,7 @@ class CMainParams : public CChainParams {\n \t\tvSeeds.push_back(CDNSSeedData(\"5.196.70.166\", \"5.196.70.166\"));\n \n         \n-        base58Prefixes[PUBKEY_ADDRESS] = list_of(51)                    .convert_to_container<std::vector<unsigned char> >();\n+        base58Prefixes[PUBKEY_ADDRESS] = list_of(68)                    .convert_to_container<std::vector<unsigned char> >();\n         base58Prefixes[SCRIPT_ADDRESS] = list_of(115)                   .convert_to_container<std::vector<unsigned char> >();\n         base58Prefixes[SECRET_KEY]     = list_of(197)                   .convert_to_container<std::vector<unsigned char> >();\n         base58Prefixes[EXT_PUBLIC_KEY] = list_of(0xEA)(0x91)(0x10)(0x48).convert_to_container<std::vector<unsigned char> >();\n@@ -230,12 +227,12 @@ class CMainParams : public CChainParams {\n         //convertSeed6(vFixedSeeds, pnSeed6_main, ARRAYLEN(pnSeed6_main));\n         convertSeeds(vFixedSeeds, pnSeed, ARRAYLEN(pnSeed), nDefaultPort);\n \n-        nFirstYearBlock = 529900; // 525600 blocks per year + 4300 blocks \n+        nFirstYearBlock = 529900; // 525600 blocks per year\n         nSecondYearBlock = 1055500; // + 1 year blocks average \n         nThirdYearBlock = 1581100; // + 1 year blocks average \n         nFourthYearBlock = 2106700; // + 1 year blocks average \n         \n-        nLastPOWBlock = 300;\n+        nLastPOWBlock = 9000;\n     }\n \n     virtual const CBlock& GenesisBlock() const { return genesis; }"
      },
      {
        "sha": "a8edeb792e5c304862ee6c2d024754e0fc4ef689",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a1a997009b2bdc39b43c8132d736d3c2e3f484ad/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a1a997009b2bdc39b43c8132d736d3c2e3f484ad/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
        "patch": "@@ -37,7 +37,7 @@ std::map<uint256, CBlockThinIndex*> mapBlockThinIndex;\n std::set<std::pair<COutPoint, unsigned int> > setStakeSeen;\n \n \n-unsigned int nStakeMinAge       = 8 * 60 * 60;      // 8 hours \n+unsigned int nStakeMinAge       = 4 * 60 * 60;      // 4 hours \n unsigned int nModifierInterval  = 10 * 60;          // time to elapse before new modifier is computed\n \n int nCoinbaseMaturity = 50;"
      }
    ]
  },
  {
    "sha": "eb2aa6fb407b1b37b985a01576ab5061c68716a4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYjJhYTZmYjQwN2IxYjM3Yjk4NWEwMTU3NmFiNTA2MWM2ODcxNmE0",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T22:22:27Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T22:22:27Z"
      },
      "message": "gitian",
      "tree": {
        "sha": "b45450ba562368e6ccb65b5a4f93bb6fbc572cb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b45450ba562368e6ccb65b5a4f93bb6fbc572cb7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eb2aa6fb407b1b37b985a01576ab5061c68716a4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb2aa6fb407b1b37b985a01576ab5061c68716a4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eb2aa6fb407b1b37b985a01576ab5061c68716a4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb2aa6fb407b1b37b985a01576ab5061c68716a4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a1a997009b2bdc39b43c8132d736d3c2e3f484ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a1a997009b2bdc39b43c8132d736d3c2e3f484ad"
      }
    ],
    "stats": {
      "total": 138,
      "additions": 50,
      "deletions": 88
    },
    "files": [
      {
        "sha": "f27c4026c76bdbb63aa6512046fb2a3ed259b48b",
        "filename": "contrib/gitian-descriptors/README",
        "status": "modified",
        "additions": 7,
        "deletions": 51,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/README",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/README",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/README?ref=eb2aa6fb407b1b37b985a01576ab5061c68716a4",
        "patch": "@@ -122,7 +122,7 @@ The debian box will be rebooted and our setup should be complete\n ssh debian@localhost -p 22222\n \n git clone https://github.com/devrandom/gitian-builder.git\n-git clone https://github.com/KingCaper/GAMEUNITS\n+git clone https://github.com/gameunits/gameunits\n \n cd gitian-builder\n \n@@ -137,9 +137,11 @@ wget http://liquidtelecom.dl.sourceforge.net/project/flex/flex-2.5.38.tar.gz;\n wget http://download.icu-project.org/files/icu4c/55.1/icu4c-55_1-src.tgz;\n wget http://wtogami.fedorapeople.org/boost-mingw-gas-cross-compile-2013-03-03.patch;\n wget http://miniupnp.free.fr/files/download.php?file=miniupnpc-1.9.20151008.tar.gz -Ominiupnpc-1.9.20151008.tar.gz;\n-wget http://www.openssl.org/source/openssl-1.0.2d.tar.gz;\n+wget http://ftp.vim.org/security/openssl/openssl-1.0.2d.tar.gz;\n wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz;\n-wget http://download.qt.io/official_releases/qt/5.4/5.4.2/single/qt-everywhere-opensource-src-5.5.0.tar.xz\n+wget http://qt.mirror.constant.com/archive/qt/5.5/5.5.0/single/qt-everywhere-opensource-src-5.5.0.tar.xz\n+wget http://olex.openlogic.com/package_versions/20240/download?package_version_id=99137&path=https%3A%2F%2Folex-secure.openlogic.com%2Fcontent%2Fprivate%2F5e6a6f0815e830bba705e79e4a0470fbee8a5880%2Fzlib%2F1.2.8-final%2Fzlib-1.2.8.tar.gz\n+wget http://78.108.103.11/MIRROR/ftp/png/src/history/libpng16/libpng-1.6.10.tar.gz\n wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.bz2/download -Oboost_1_55_0.tar.bz2;\n \n Mirror - http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch \n@@ -148,24 +150,18 @@ Mirror - http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patc\n $ cd ..;\n $ LXC_EXECUTE=lxc-execute; PATH=\"$(pwd)/libexec/:$PATH\";\n \n-$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/boost-linux.yml\n-$ mv build/out/boost-*.zip inputs/\n-\n $ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/deps-linux.yml\n $ mv build/out/gameunits-deps-*.zip inputs/\n    \n $ ./bin/gbuild --commit gameunits=HEAD ../gameunits/contrib/gitian-descriptors/gitian-linux.yml\n $ mkdir -p ../compiled/linux\n $ mv build/out/* ../compiled/linux/\n \n-$ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/boost-win.yml\n-$ mv build/out/boost-*.zip inputs/\n-\n $ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/deps-win.yml\n-$ mv build/out/gameunits-deps-*.zip inputs/\n+$ mv build/out/gameunits-deps-* inputs/\n \n $ ./bin/gbuild ../gameunits/contrib/gitian-descriptors/qt-win.yml\n-$ mv build/out/qt-win*.zip inputs/\n+$ mv build/out/qt-win* inputs/\n \n $ ./bin/gbuild --commit gameunits=HEAD ../gameunits/contrib/gitian-descriptors/gitian-win.yml\n $ mkdir -p ../compiled/win\n@@ -191,43 +187,3 @@ Notes:\n         tail -f var/install.log\n         or\n         tail -f var/build.log\n-\n-\n-\n-\n-\n-\n-\n-\n-Gavin's notes on getting gitian builds up and running:\n-\n-You need the right hardware: you need a 64-bit-capable CPU with hardware virtualization support (Intel VT-x or AMD-V). Not all modern CPUs support hardware virtualization.\n-\n-You probably need to enable hardware virtualization in your machine's BIOS.\n-\n-You need to be running a recent version of 64-bit-Ubuntu, and you need to install several prerequisites:\n-  sudo apt-get install apache2 git apt-cacher-ng python-vm-builder qemu-kvm\n-\n-Sanity checks:\n-  sudo service apt-cacher-ng status   # Should return apt-cacher-ng is running\n-  ls -l /dev/kvm   # Should show a /dev/kvm device\n-\n-Once you've got the right hardware and software:\n-\n-    git clone git://github.com/bitcoin/bitcoin.git\n-    git clone git://github.com/devrandom/gitian-builder.git\n-    mkdir gitian-builder/inputs\n-    wget 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz' -O gitian-builder/inputs/miniupnpc-1.6.tar.gz\n-\n-    cd gitian-builder\n-    bin/make-base-vm --arch i386\n-    bin/make-base-vm --arch amd64\n-    cd ..\n-\n-    # To build\n-    cd bitcoin\n-    git pull\n-    cd ../gitian-builder\n-    git pull\n-    ./bin/gbuild --commit bitcoin=HEAD ../bitcoin/contrib/gitian.yml\n-"
      },
      {
        "sha": "c765a1514495d40daa8ac85a7e825fcee0980dff",
        "filename": "contrib/gitian-descriptors/gitian-win.yml",
        "status": "modified",
        "additions": 12,
        "deletions": 25,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/gitian-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/gitian-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-win.yml?ref=eb2aa6fb407b1b37b985a01576ab5061c68716a4",
        "patch": "@@ -17,7 +17,7 @@ packages:\n - \"bsdmainutils\"\n reference_datetime: \"2013-06-01 00:00:00\"\n remotes:\n-- \"url\": \"https://github.com/KingCaper/gameunits.git\"\n+- \"url\": \"https://github.com/gameunits/gameunits.git\"\n   \"dir\": \"gameunits\"\n files:\n - \"qt-win32-5.5.0-gitian.tar.xz\"\n@@ -81,35 +81,22 @@ script: |\n     #\n     cd src\n     make -f makefile.linux-mingw HOST=\"$HOST\" DEPSDIR=\"$DEPSDIR\" CURDIR=\"$BUILDDIR/gameunits/src\" STATIC=1 $MAKEOPTS USE_UPNP=1 BOOST_LIB_SUFFIX=\"-mt-s\" DEBUGFLAGS= \n-    cp gameunitsd.exe $BINDIR/\n+    cp gameunits.exe $BINDIR/\n     cd ..\n     #\n     #$DEPSDIR/qt/host/bin/qmake -spec unsupported/win32-g++-cross MINIUPNPC_LIB_PATH=$HOME/build/miniupnpc MINIUPNPC_INCLUDE_PATH=$HOME/build/ BDB_LIB_PATH=$HOME/build/db-4.8.30.NC/build_unix BDB_INCLUDE_PATH=$HOME/build/db-4.8.30.NC/build_unix BOOST_LIB_PATH=$HOME/build/lib BOOST_INCLUDE_PATH=$HOME/build/include BOOST_LIB_SUFFIX=-mt-s BOOST_THREAD_LIB_SUFFIX=_win32-mt-s OPENSSL_LIB_PATH=$HOME/build/openssl-1.0.1h OPENSSL_INCLUDE_PATH=$HOME/build/openssl-1.0.1h/include INCLUDEPATH=$HOME/build DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_LRELEASE=lrelease QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n-    $STAGING/host/bin/qmake -xplatform win32-g++ RELEASE=1 QMAKE_LRELEASE=\"$STAGING/host/bin/lrelease\" MINIUPNPC_LIB_PATH=\"$DEPSDIR/lib\" MINIUPNPC_INCLUDE_PATH=\"$DEPSDIR/include\" BDB_LIB_PATH=\"$DEPSDIR/lib\" BDB_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_PATH=\"$DEPSDIR/lib\" BOOST_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_SUFFIX=\"-mt-s\" BOOST_THREAD_LIB_SUFFIX=\"_win32-mt-s\" OPENSSL_LIB_PATH=\"$DEPSDIR/lib\" OPENSSL_INCLUDE_PATH=\"$DEPSDIR/include\" INCLUDEPATH=\"$DEPSDIR/include\" DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_CXXFLAGS=-frandom-seed=bitcoin USE_BUILD_INFO=1\n+    $STAGING/host/bin/qmake -xplatform win32-g++ RELEASE=1 QMAKE_LRELEASE=\"$STAGING/host/bin/lrelease\" MINIUPNPC_LIB_PATH=\"$DEPSDIR/lib\" MINIUPNPC_INCLUDE_PATH=\"$DEPSDIR/include\" BDB_LIB_PATH=\"$DEPSDIR/lib\" BDB_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_PATH=\"$DEPSDIR/lib\" BOOST_INCLUDE_PATH=\"$DEPSDIR/include\" BOOST_LIB_SUFFIX=\"-mt-s\" BOOST_THREAD_LIB_SUFFIX=\"_win32-mt-s\" OPENSSL_LIB_PATH=\"$DEPSDIR/lib\" OPENSSL_INCLUDE_PATH=\"$DEPSDIR/include\" INCLUDEPATH=\"$DEPSDIR/include\" DEFINES=BOOST_THREAD_USE_LIB BITCOIN_NEED_QT_PLUGINS=1 QMAKE_CXXFLAGS=-frandom-seed=gameunits USE_BUILD_INFO=1\n     make $MAKEOPTS\n     cp release/gameunits.exe $BINDIR/\n     #\n-    # windeployqt !?\n-    #\n-    cp $STAGING/host/bin/*.dll $BINDIR/\n-    if [ \"$BITS\" == \"32\" ]; then\n-      cp /usr/lib/gcc/i686-w64-mingw32/4.8/*.dll $BINDIR/\n-      cp /usr/i686-w64-mingw32/lib/*.dll $BINDIR/\n-    else\n-      cp /usr/lib/gcc/x86_64-w64-mingw32/4.8/*.dll $BINDIR/\n-      cp /usr/x86_64-w64-mingw32/lib/*.dll $BINDIR/\n-    fi\n-    mkdir -p $BINDIR/platforms\n-    cp $STAGING/plugins/platforms/*.dll $BINDIR/platforms/\n-    #\n     unset LD_PRELOAD\n     unset FAKETIME\n-  done # for BITS in\n-  #\n-  # sort distribution tar file and normalize user/group/mtime information for deterministic output\n-  mkdir -p $OUTDIR/src\n-  rm -rf $TEMPDIR\n-  mkdir -p $TEMPDIR\n-  cd $TEMPDIR\n-  cd $BINDIR\n-  #tar -xvf $HOME/build/gameunits/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME\n+    done # for BITS in\n+    #\n+    # sort distribution tar file and normalize user/group/mtime information for deterministic output\n+    mkdir -p $OUTDIR/src\n+    rm -rf $TEMPDIR\n+    mkdir -p $TEMPDIR\n+    cd $TEMPDIR\n+    cd $BINDIR\n+    #tar -xvf $HOME/build/gameunits/$DISTNAME | sort | tar --no-recursion -cT /dev/stdin --mode='u+rw,go+r-w,a+X' --owner=0 --group=0 --mtime=\"$REFERENCE_DATETIME\" | gzip -n > $OUTDIR/src/$DISTNAME"
      },
      {
        "sha": "f5a3463dd5825365bfce25834255cc4d2e5bd16b",
        "filename": "contrib/gitian-descriptors/qt-win.yml",
        "status": "modified",
        "additions": 31,
        "deletions": 12,
        "changes": 43,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/qt-win.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eb2aa6fb407b1b37b985a01576ab5061c68716a4/contrib/gitian-descriptors/qt-win.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/qt-win.yml?ref=eb2aa6fb407b1b37b985a01576ab5061c68716a4",
        "patch": "@@ -65,7 +65,6 @@ script: |\n     export PATH=\"$DEPSDIR/bin:$PATH\"\n     \n     #\n-    rm -rf $DEPSDIR\n     mkdir -p $INSTALLPREFIX $INSTALLPREFIX/host/bin $DEPSDIR $BUILDDIR\n     #\n     cd $BUILDDIR\n@@ -81,14 +80,14 @@ script: |\n     cd $DEPSDIR\n     tar xf $INDIR/gameunits-deps-win${BITS}-gitian.tar.xz\n     #\n-    ln -s $DEPSDIR/lib/libsicudt.a $DEPSDIR/lib/libicudt.a\n-    ln -s $DEPSDIR/lib/libsicuin.a $DEPSDIR/lib/libicuin.a\n-    ln -s $DEPSDIR/lib/libsicuio.a $DEPSDIR/lib/libicuio.a\n-    ln -s $DEPSDIR/lib/libsicule.a $DEPSDIR/lib/libicule.a\n-    ln -s $DEPSDIR/lib/libsiculx.a $DEPSDIR/lib/libiculx.a\n-    ln -s $DEPSDIR/lib/libsicutest.a $DEPSDIR/lib/libicutest.a\n-    ln -s $DEPSDIR/lib/libsicutu.a $DEPSDIR/lib/libicutu.a\n-    ln -s $DEPSDIR/lib/libsicuuc.a $DEPSDIR/lib/libicuuc.a\n+    ln -sf $DEPSDIR/lib/libsicudt.a $DEPSDIR/lib/libicudt.a\n+    ln -sf $DEPSDIR/lib/libsicuin.a $DEPSDIR/lib/libicuin.a\n+    ln -sf $DEPSDIR/lib/libsicuio.a $DEPSDIR/lib/libicuio.a\n+    ln -sf $DEPSDIR/lib/libsicule.a $DEPSDIR/lib/libicule.a\n+    ln -sf $DEPSDIR/lib/libsiculx.a $DEPSDIR/lib/libiculx.a\n+    ln -sf $DEPSDIR/lib/libsicutest.a $DEPSDIR/lib/libicutest.a\n+    ln -sf $DEPSDIR/lib/libsicutu.a $DEPSDIR/lib/libicutu.a\n+    ln -sf $DEPSDIR/lib/libsicuuc.a $DEPSDIR/lib/libicuuc.a\n     #\n     cd $BUILDDIR\n     #\n@@ -112,6 +111,8 @@ script: |\n     sed --posix \"s|QMAKE_CFLAGS            = -pipe -fno-keep-inline-dllexport|QMAKE_CFLAGS\\t\\t= -pipe -fno-keep-inline-dllexport -isystem /usr/$HOST/include/ -frandom-seed=qtbuild -I$DEPSDIR/include|\" -i ${SPECFILE}\n     #sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib --enable-deterministic-ld|\" -i ${SPECFILE}\n     sed --posix \"s|QMAKE_LFLAGS            =|QMAKE_LFLAGS\\t\\t= -L$DEPSDIR/lib|\" -i ${SPECFILE}\n+    sed \"s/src_plugins.depends = src_sql src_xml src_network/src_plugins.depends = src_xml src_network/\" -i qtbase/src/src.pro\n+    #sed \"s|X11/extensions/XIproto.h|X11/X.h|\"     -i qtbase/src/plugins/platforms/xcb/qxcbxsettings.cpp\n     # Before we tried to pass arguments to ar (static linking) in using QMAKE_LIB, however\n     #  qt removes the arguments for ar and provides a script which makes it impossible to pass the determinism flag -\n     #  so rather than try to replace ar, post-process all libraries and plugins at the end.\n@@ -127,6 +128,7 @@ script: |\n     -opensource\n     -confirm-license\n     -release\n+    -static\n     -xplatform $SPECNAME\n     -no-audio-backend\n     -no-glib\n@@ -205,12 +207,29 @@ script: |\n     -skip qtdoc\"\n     OPENSSL_LIBS=\"-L$DEPSDIR/lib -lssl -lcrypto -lgdi32\" ./configure $CONFIG_OPTS\n     #\n-    make\n+    #make qmake_all\n+    #cd qtbase\n+    #make -C src sub-corelib sub-network sub-widgets sub-gui sub-plugins sub-testlib\n+    #make -C src sub-corelib-install_subtargets sub-network-install_subtargets sub-widgets-install_subtargets sub-gui-install_subtargets sub-plugins-install_subtargets sub-testlib-install_subtargets\n+    #make -C ../qttools/src/linguist/lrelease\n+    #make -C ../qttools/src/linguist/lrelease install_target\n+    #make -C ../qttranslations\n+    #make -C ../qttranslations install_subtargets\n+    make $MAKEOPTS\n     make $MAKEOPTS install\n     #\n     cd $QTDIR/qtwebkit\n     sed 's,type nul,cat /dev/null,' -i Source/WebCore/DerivedSources.pri\n-    $INSTALLPREFIX/host/bin/qmake\n+    for TARGET in Source/WebCore/Target.pri Source/WebKit2/Target.pri Source/JavaScriptCore/Target.pri Source/ThirdParty/leveldb/Target.pri Source/ThirdParty/ANGLE/Target.pri Source/WebKit/WebKit1.pro Source/WTF/WTF.pro\n+    do\n+       sed --posix 's/^CONFIG += staticlib optimize_full/CONFIG(shared, static|shared): CONFIG += staticlib optimize_full\\nCONFIG(static, static|shared): CONFIG += optimize_full/' -i $TARGET\n+       sed 's/^CONFIG += staticlib/CONFIG(shared, static|shared): CONFIG += staticlib/' -i $TARGET\n+       echo \"CONFIG(static, static|shared) {\n+             target.path = \\$\\$[QT_INSTALL_LIBS]\n+             INSTALLS += target\n+             }\" >> $TARGET\n+    done\n+    $INSTALLPREFIX/host/bin/qmake CONFIG+=\"release static\"\n     make\n     make install\n     #\n@@ -234,4 +253,4 @@ script: |\n     unset LD_PRELOAD\n     unset FAKETIME\n     rm -rf $BUILDDIR\n-  done # for BITS in\n+    done # for BITS in"
      }
    ]
  },
  {
    "sha": "b192051d78a2ed4b74f8c71146da07e43d627620",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMTkyMDUxZDc4YTJlZDRiNzRmOGM3MTE0NmRhMDdlNDNkNjI3NjIw",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T22:34:41Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-06T22:34:41Z"
      },
      "message": "update",
      "tree": {
        "sha": "b09da62575054ed8a6804f758cad6de40df1d300",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b09da62575054ed8a6804f758cad6de40df1d300"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b192051d78a2ed4b74f8c71146da07e43d627620",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b192051d78a2ed4b74f8c71146da07e43d627620",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b192051d78a2ed4b74f8c71146da07e43d627620",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b192051d78a2ed4b74f8c71146da07e43d627620/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "eb2aa6fb407b1b37b985a01576ab5061c68716a4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eb2aa6fb407b1b37b985a01576ab5061c68716a4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eb2aa6fb407b1b37b985a01576ab5061c68716a4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f6b9eaa10ca45506d69ec41773839b08361b22fb",
        "filename": "src/qt/res/js/main.js",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b192051d78a2ed4b74f8c71146da07e43d627620/src/qt/res/js/main.js",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b192051d78a2ed4b74f8c71146da07e43d627620/src/qt/res/js/main.js",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/js/main.js?ref=b192051d78a2ed4b74f8c71146da07e43d627620",
        "patch": "@@ -552,7 +552,7 @@ var overviewPage = {\n \n         // Announcement feed\n         $.ajax({\n-            url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=2.0&q=http://blog.discovergameunits.com/rss/atom\",\n+            url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=2.0&q=http://pastebin.com/raw/iQGUdzTn\",\n             dataType: 'jsonp'\n         }).success(function(rss) {\n             rss.responseData.feed.entries = rss.responseData.feed.entries.sort(function(a,b){"
      }
    ]
  },
  {
    "sha": "b56ccd845c25bb423cacb1e1c46baf085ee697e7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNTZjY2Q4NDVjMjViYjQyM2NhY2IxZTFjNDZiYWYwODVlZTY5N2U3",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:34:46Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:34:46Z"
      },
      "message": "update",
      "tree": {
        "sha": "ee7f55cf68ba145f7545874b3a9238c4bf957546",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee7f55cf68ba145f7545874b3a9238c4bf957546"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b56ccd845c25bb423cacb1e1c46baf085ee697e7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56ccd845c25bb423cacb1e1c46baf085ee697e7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b56ccd845c25bb423cacb1e1c46baf085ee697e7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56ccd845c25bb423cacb1e1c46baf085ee697e7/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b192051d78a2ed4b74f8c71146da07e43d627620",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b192051d78a2ed4b74f8c71146da07e43d627620",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b192051d78a2ed4b74f8c71146da07e43d627620"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 53,
      "deletions": 21
    },
    "files": [
      {
        "sha": "b0e3b4e19321616d0972256936525211c34dfc14",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 47,
        "deletions": 15,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56ccd845c25bb423cacb1e1c46baf085ee697e7/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56ccd845c25bb423cacb1e1c46baf085ee697e7/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=b56ccd845c25bb423cacb1e1c46baf085ee697e7",
        "patch": "@@ -38,9 +38,12 @@ int64_t CChainParams::GetProofOfWorkReward(int nHeight, int64_t nFees) const\n     if (nHeight <= 10)\n         nSubsidy = 0 * COIN;\n     else\n+    if (nHeight <= 1337)\n+        nSubsidy = 1337 * COIN; \n+    else\n     if (nHeight <= nLastPOWBlock)\n-        nSubsidy = 1000 * COIN;\n-    \n+        nSubsidy = 1 * COIN;\n+\t\n     if (fDebug && GetBoolArg(\"-printcreation\"))\n         LogPrintf(\"GetProofOfWorkReward() : create=%s nSubsidy=%d\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n     \n@@ -52,9 +55,8 @@ int64_t CChainParams::GetProofOfStakeReward(int64_t nCoinAge, int64_t nFees) con\n {\n     // miner's coin stake reward based on coin age spent (coin-days)\n     int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);\n-\n \t\n-        if(pindexBest->nHeight+1 >= 111 && pindexBest->nHeight+1 <= 300)   \n+    if(pindexBest->nHeight+1 >= 111 && pindexBest->nHeight+1 <= 300)   \n     {\n         nSubsidy = 0 * COIN;   // no stake rewards till PoS v2\n     }\n@@ -116,7 +118,7 @@ int64_t CChainParams::GetProofOfStakeReward(int64_t nCoinAge, int64_t nFees) con\n     }\n     else if(pindexBest->nHeight+1 > nFourthYearBlock)\n     {\n-        nSubsidy = nCoinAge * NCOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 2% till supply reaches 23m\n+        nSubsidy = nCoinAge * NCOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 2% till supply reaches 21m\n     }\n     \n     if (fDebug && GetBoolArg(\"-printcreation\"))\n@@ -192,7 +194,7 @@ class CMainParams : public CChainParams {\n         bnProofOfStakeLimit = CBigNum(~uint256(0) >> 20);\n         bnProofOfStakeLimitV2 = CBigNum(~uint256(0) >> 48);\n         \n-        const char* pszTimestamp = \"-Price is what you pay.Value is what you get.- Oil impact wont crush Banks CNBC 04/02/16\";\n+        const char* pszTimestamp = \"-Price is what you pay.Value is what you get.- Lady Gaga nails national anthem at Super Bowl 50\";\n         CTransaction txNew;\n         txNew.nTime = GENESIS_BLOCK_TIME;\n         txNew.vin.resize(1);\n@@ -206,7 +208,37 @@ class CMainParams : public CChainParams {\n         genesis.nVersion = 1;\n         genesis.nTime    = GENESIS_BLOCK_TIME;\n         genesis.nBits    = bnProofOfWorkLimit.GetCompact();\n-        genesis.nNonce   = 1533561;\n+        genesis.nNonce   = 0;\n+\t\t\n+\t\t        if (true && genesis.GetHash() != hashGenesisBlock)\n+                       {\n+                           printf(\"Searching for genesis block...\\n\");\n+                           uint256 hashTarget = CBigNum().SetCompact(genesis.nBits).getuint256();\n+                           uint256 thash;\n+\n+                           while (true)\n+                           {\n+                               thash = genesis.GetHash();\n+                               if (thash <= hashTarget)\n+                                   break;\n+                               if ((genesis.nNonce & 0xFFF) == 0)\n+                               {\n+                                   printf(\"nonce %08X: hash = %s (target = %s)\\n\", genesis.nNonce, thash.ToString().c_str(), hashTarget.ToString().c_str());\n+                               }\n+                               ++genesis.nNonce;\n+                               if (genesis.nNonce == 0)\n+                               {\n+                                   printf(\"NONCE WRAPPED, incrementing time\\n\");\n+                                   ++genesis.nTime;\n+                               }\n+                           }\n+                           printf(\"genesis.nTime = %u \\n\", genesis.nTime);\n+                           printf(\"genesis.nNonce = %u \\n\", genesis.nNonce);\n+                           printf(\"genesis.nVersion = %u \\n\", genesis.nVersion);\n+                           printf(\"genesis.hashMerkleRoot = %s \\n\", genesis.hashMerkleRoot.ToString().c_str()); //improvised. worked for me, to find merkle root\n+                           printf(\"genesis.GetHash = %s\\n\", genesis.GetHash().ToString().c_str()); //first this, then comment this line out and uncomment the one under.\n+\n+        }\n \t\t\n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x00000e73918c27d84bbc01e331c0764382c841f8b52bbcea16578d0ec0fe55e3\"));\n@@ -227,12 +259,12 @@ class CMainParams : public CChainParams {\n         //convertSeed6(vFixedSeeds, pnSeed6_main, ARRAYLEN(pnSeed6_main));\n         convertSeeds(vFixedSeeds, pnSeed, ARRAYLEN(pnSeed), nDefaultPort);\n \n-        nFirstYearBlock = 529900; // 525600 blocks per year\n-        nSecondYearBlock = 1055500; // + 1 year blocks average \n-        nThirdYearBlock = 1581100; // + 1 year blocks average \n-        nFourthYearBlock = 2106700; // + 1 year blocks average \n+        nFirstYearBlock = 529900;\n+        nSecondYearBlock = 1055500; \n+        nThirdYearBlock = 1581100;  \n+        nFourthYearBlock = 2106700; \n         \n-        nLastPOWBlock = 9000;\n+        nLastPOWBlock = 2000000;\n     }\n \n     virtual const CBlock& GenesisBlock() const { return genesis; }\n@@ -276,10 +308,10 @@ class CTestNetParams : public CMainParams {\n         strDataDir = \"testnet\";\n \n         genesis.nBits  = bnProofOfWorkLimit.GetCompact();\n-        genesis.nNonce = 90555;\n+        genesis.nNonce = 0;\n \t\t\n \t\t//gensis\n-\t\t/*\n+\t\t\n         if (true && genesis.GetHash() != hashGenesisBlock)\n                        {\n                            printf(\"Searching for genesis block...\\n\");\n@@ -309,7 +341,7 @@ class CTestNetParams : public CMainParams {\n                            printf(\"genesis.GetHash = %s\\n\", genesis.GetHash().ToString().c_str()); //first this, then comment this line out and uncomment the one under.\n \n         }\n-\t\t*/\n+\t\t\n \n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x0000d5177414af65ec695613eb4fe6503985f5820a15399816b83b7202238f35\"));"
      },
      {
        "sha": "7fb549afc364011709e609954f32929337998b89",
        "filename": "src/state.h",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b56ccd845c25bb423cacb1e1c46baf085ee697e7/src/state.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b56ccd845c25bb423cacb1e1c46baf085ee697e7/src/state.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/state.h?ref=b56ccd845c25bb423cacb1e1c46baf085ee697e7",
        "patch": "@@ -46,20 +46,20 @@ enum\n     SMSG_RELAY          = (1 << 4),\n };\n \n-const int64_t GENESIS_BLOCK_TIME = 1454609666;\n+const int64_t GENESIS_BLOCK_TIME = 1454927666;\n \n static const int64_t COIN = 100000000;\n static const int64_t CENT = 1000000;\n \n static const int64_t MIN_TX_FEE = 10000;\n static const int64_t MIN_TX_FEE_ANON = 1000000;\n static const int64_t MIN_RELAY_TX_FEE = MIN_TX_FEE;\n-static const int64_t MAX_MONEY = 23000000 * COIN;\n-static const int64_t COIN_YEAR_REWARD = 50 * CENT; // 50% first year\n-static const int64_t MCOIN_YEAR_REWARD = 25 * CENT; // 25% second year\n+static const int64_t MAX_MONEY = 23000000000 * COIN;\n+static const int64_t COIN_YEAR_REWARD = 50 * COIN;  // Insane first Gamer Year\n+static const int64_t MCOIN_YEAR_REWARD = 25 * CENT; // 25% second year (Public Bitcoin Talk Annouce)\n static const int64_t OCOIN_YEAR_REWARD = 10 * CENT; // 10% third year\n-static const int64_t ICOIN_YEAR_REWARD = 5 * CENT; //  5% fourth year \n-static const int64_t NCOIN_YEAR_REWARD = 2 * CENT; //  2% fifth year\n+static const int64_t ICOIN_YEAR_REWARD = 5 * CENT;  //  5% fourth year \n+static const int64_t NCOIN_YEAR_REWARD = 1 * COIN;  //  Long Term Project\n \n \n extern int nNodeMode;"
      }
    ]
  },
  {
    "sha": "9ba54cc8aedb7959459d8199245e91a19da0390d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YmE1NGNjOGFlZGI3OTU5NDU5ZDgxOTkyNDVlOTFhMTlkYTAzOTBk",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:40:50Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:40:50Z"
      },
      "message": "up",
      "tree": {
        "sha": "56e0fe1d258b5ad9b50c51772db3c625b9a534d9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56e0fe1d258b5ad9b50c51772db3c625b9a534d9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ba54cc8aedb7959459d8199245e91a19da0390d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ba54cc8aedb7959459d8199245e91a19da0390d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ba54cc8aedb7959459d8199245e91a19da0390d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ba54cc8aedb7959459d8199245e91a19da0390d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b56ccd845c25bb423cacb1e1c46baf085ee697e7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b56ccd845c25bb423cacb1e1c46baf085ee697e7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b56ccd845c25bb423cacb1e1c46baf085ee697e7"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "22f4778a67f8da859e41ffa776d4b316216e59d7",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ba54cc8aedb7959459d8199245e91a19da0390d/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ba54cc8aedb7959459d8199245e91a19da0390d/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=9ba54cc8aedb7959459d8199245e91a19da0390d",
        "patch": "@@ -328,7 +328,7 @@ class CTestNetParams : public CMainParams {\n                                    printf(\"nonce %08X: hash = %s (target = %s)\\n\", genesis.nNonce, thash.ToString().c_str(), hashTarget.ToString().c_str());\n                                }\n                                ++genesis.nNonce;\n-                               if (genesiss.nNonce == 0)\n+                               if (genesis.nNonce == 0)\n                                {\n                                    printf(\"NONCE WRAPPED, incrementing time\\n\");\n                                    ++genesis.nTime;"
      }
    ]
  },
  {
    "sha": "1582dde57661149f855377c51daba3b551d0c7c4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTgyZGRlNTc2NjExNDlmODU1Mzc3YzUxZGFiYTNiNTUxZDBjN2M0",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:44:15Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:44:15Z"
      },
      "message": "up",
      "tree": {
        "sha": "dbb12c22a5e79000a9abfd8e5a47671afd0f239b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbb12c22a5e79000a9abfd8e5a47671afd0f239b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1582dde57661149f855377c51daba3b551d0c7c4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1582dde57661149f855377c51daba3b551d0c7c4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1582dde57661149f855377c51daba3b551d0c7c4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1582dde57661149f855377c51daba3b551d0c7c4/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9ba54cc8aedb7959459d8199245e91a19da0390d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ba54cc8aedb7959459d8199245e91a19da0390d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ba54cc8aedb7959459d8199245e91a19da0390d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9fcdb6019872779048c8b215849ee052edc895a9",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1582dde57661149f855377c51daba3b551d0c7c4/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1582dde57661149f855377c51daba3b551d0c7c4/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=1582dde57661149f855377c51daba3b551d0c7c4",
        "patch": "@@ -208,7 +208,7 @@ class CMainParams : public CChainParams {\n         genesis.nVersion = 1;\n         genesis.nTime    = GENESIS_BLOCK_TIME;\n         genesis.nBits    = bnProofOfWorkLimit.GetCompact();\n-        genesis.nNonce   = 0;\n+        genesis.nNonce   = 113492;\n \t\t\n \t\t        if (true && genesis.GetHash() != hashGenesisBlock)\n                        {\n@@ -241,8 +241,8 @@ class CMainParams : public CChainParams {\n         }\n \t\t\n         hashGenesisBlock = genesis.GetHash();\n-        assert(hashGenesisBlock == uint256(\"0x00000e73918c27d84bbc01e331c0764382c841f8b52bbcea16578d0ec0fe55e3\"));\n-        assert(genesis.hashMerkleRoot == uint256(\"0xa47bfea772615fb7de51e533b18fc94bf0fbb5230573b75e7599cf4a593a05a9\"));\n+        assert(hashGenesisBlock == uint256(\"0x0000002bc49bd2069830809f05078b1dc660db172d2ce12c2fdeb752898dcc7d\"));\n+        assert(genesis.hashMerkleRoot == uint256(\"0x5fe523908bf29ec313671bbd4d0ebeb6ab481e24c7cd3a2731de5aae2e1346cc\"));\n         \n         vSeeds.push_back(CDNSSeedData(\"gameunits.net\", \"gameunits.net\"));\n         vSeeds.push_back(CDNSSeedData(\"5.9.85.14\", \"5.9.85.14\"));"
      }
    ]
  },
  {
    "sha": "5f502384ffe65fe30ee3d768652778f2fba42a11",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjUwMjM4NGZmZTY1ZmUzMGVlM2Q3Njg2NTI3NzhmMmZiYTQyYTEx",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:46:29Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:46:29Z"
      },
      "message": "up",
      "tree": {
        "sha": "cb9e2014e08aefe7482204299db4d44fae419ba2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb9e2014e08aefe7482204299db4d44fae419ba2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f502384ffe65fe30ee3d768652778f2fba42a11",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f502384ffe65fe30ee3d768652778f2fba42a11",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f502384ffe65fe30ee3d768652778f2fba42a11",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f502384ffe65fe30ee3d768652778f2fba42a11/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1582dde57661149f855377c51daba3b551d0c7c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1582dde57661149f855377c51daba3b551d0c7c4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1582dde57661149f855377c51daba3b551d0c7c4"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "09dc35b4325dc7132096466d3ffc0d9a678a9886",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f502384ffe65fe30ee3d768652778f2fba42a11/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f502384ffe65fe30ee3d768652778f2fba42a11/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=5f502384ffe65fe30ee3d768652778f2fba42a11",
        "patch": "@@ -308,7 +308,7 @@ class CTestNetParams : public CMainParams {\n         strDataDir = \"testnet\";\n \n         genesis.nBits  = bnProofOfWorkLimit.GetCompact();\n-        genesis.nNonce = 0;\n+        genesis.nNonce = 31276;\n \t\t\n \t\t//gensis\n \t\t\n@@ -344,8 +344,8 @@ class CTestNetParams : public CMainParams {\n \t\t\n \n         hashGenesisBlock = genesis.GetHash();\n-        assert(hashGenesisBlock == uint256(\"0x0000d5177414af65ec695613eb4fe6503985f5820a15399816b83b7202238f35\"));\n-        assert(genesis.hashMerkleRoot == uint256(\"0xa47bfea772615fb7de51e533b18fc94bf0fbb5230573b75e7599cf4a593a05a9\"));\n+        assert(hashGenesisBlock == uint256(\"0x0000fa6e0c0439c972dc814e38be9387b98ede13aabf091cce3a2a5958d6909e\"));\n+        assert(genesis.hashMerkleRoot == uint256(\"0x5fe523908bf29ec313671bbd4d0ebeb6ab481e24c7cd3a2731de5aae2e1346cc\"));\n \n         vFixedSeeds.clear();\n         vSeeds.clear();"
      }
    ]
  },
  {
    "sha": "b2de325b6d00312f4818218b5056fb4539bb092e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMmRlMzI1YjZkMDAzMTJmNDgxODIxOGI1MDU2ZmI0NTM5YmIwOTJl",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:51:08Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-08T10:51:08Z"
      },
      "message": "up",
      "tree": {
        "sha": "e9db9bd9e1022075c4e53925fe303b9a1a0ef008",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9db9bd9e1022075c4e53925fe303b9a1a0ef008"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b2de325b6d00312f4818218b5056fb4539bb092e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2de325b6d00312f4818218b5056fb4539bb092e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b2de325b6d00312f4818218b5056fb4539bb092e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2de325b6d00312f4818218b5056fb4539bb092e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "5f502384ffe65fe30ee3d768652778f2fba42a11",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f502384ffe65fe30ee3d768652778f2fba42a11",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f502384ffe65fe30ee3d768652778f2fba42a11"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "d2a1529b1d60b9952f9031457a9a216be7cdfb37",
        "filename": "src/checkpoints.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b2de325b6d00312f4818218b5056fb4539bb092e/src/checkpoints.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b2de325b6d00312f4818218b5056fb4539bb092e/src/checkpoints.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.cpp?ref=b2de325b6d00312f4818218b5056fb4539bb092e",
        "patch": "@@ -25,13 +25,13 @@ namespace Checkpoints\n     //\n     MapCheckpoints mapCheckpoints =\n         boost::assign::map_list_of\n-        ( 0, uint256(\"0x00000e73918c27d84bbc01e331c0764382c841f8b52bbcea16578d0ec0fe55e3\") ) // Params().HashGenesisBlock())\n+        ( 0, uint256(\"0x0000002bc49bd2069830809f05078b1dc660db172d2ce12c2fdeb752898dcc7d\") ) // Params().HashGenesisBlock())\n     ;\n \n     // TestNet has no checkpoints\n     MapCheckpoints mapCheckpointsTestnet =\n         boost::assign::map_list_of\n-        ( 0, uint256(\"0x0000d5177414af65ec695613eb4fe6503985f5820a15399816b83b7202238f35\") ) // hashGenesisBlockTestNet\n+        ( 0, uint256(\"0x0000fa6e0c0439c972dc814e38be9387b98ede13aabf091cce3a2a5958d6909e\") ) // hashGenesisBlockTestNet\n     ;\n \n     bool CheckHardened(int nHeight, const uint256& hash)"
      }
    ]
  },
  {
    "sha": "156fd055d032cdca21a3657343c927d2c549c62d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTZmZDA1NWQwMzJjZGNhMjFhMzY1NzM0M2M5MjdkMmM1NDljNjJk",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T17:37:31Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T17:37:31Z"
      },
      "message": "up last",
      "tree": {
        "sha": "47c9e85decd4986b963e6d595e33a206b5585098",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/47c9e85decd4986b963e6d595e33a206b5585098"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/156fd055d032cdca21a3657343c927d2c549c62d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/156fd055d032cdca21a3657343c927d2c549c62d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/156fd055d032cdca21a3657343c927d2c549c62d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/156fd055d032cdca21a3657343c927d2c549c62d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b2de325b6d00312f4818218b5056fb4539bb092e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b2de325b6d00312f4818218b5056fb4539bb092e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b2de325b6d00312f4818218b5056fb4539bb092e"
      }
    ],
    "stats": {
      "total": 67,
      "additions": 2,
      "deletions": 65
    },
    "files": [
      {
        "sha": "1fcfbaac419aff4d7c6c656bfc7dc8534ebdecc1",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 65,
        "changes": 67,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/156fd055d032cdca21a3657343c927d2c549c62d/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/156fd055d032cdca21a3657343c927d2c549c62d/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=156fd055d032cdca21a3657343c927d2c549c62d",
        "patch": "@@ -210,36 +210,6 @@ class CMainParams : public CChainParams {\n         genesis.nBits    = bnProofOfWorkLimit.GetCompact();\n         genesis.nNonce   = 113492;\n \t\t\n-\t\t        if (true && genesis.GetHash() != hashGenesisBlock)\n-                       {\n-                           printf(\"Searching for genesis block...\\n\");\n-                           uint256 hashTarget = CBigNum().SetCompact(genesis.nBits).getuint256();\n-                           uint256 thash;\n-\n-                           while (true)\n-                           {\n-                               thash = genesis.GetHash();\n-                               if (thash <= hashTarget)\n-                                   break;\n-                               if ((genesis.nNonce & 0xFFF) == 0)\n-                               {\n-                                   printf(\"nonce %08X: hash = %s (target = %s)\\n\", genesis.nNonce, thash.ToString().c_str(), hashTarget.ToString().c_str());\n-                               }\n-                               ++genesis.nNonce;\n-                               if (genesis.nNonce == 0)\n-                               {\n-                                   printf(\"NONCE WRAPPED, incrementing time\\n\");\n-                                   ++genesis.nTime;\n-                               }\n-                           }\n-                           printf(\"genesis.nTime = %u \\n\", genesis.nTime);\n-                           printf(\"genesis.nNonce = %u \\n\", genesis.nNonce);\n-                           printf(\"genesis.nVersion = %u \\n\", genesis.nVersion);\n-                           printf(\"genesis.hashMerkleRoot = %s \\n\", genesis.hashMerkleRoot.ToString().c_str()); //improvised. worked for me, to find merkle root\n-                           printf(\"genesis.GetHash = %s\\n\", genesis.GetHash().ToString().c_str()); //first this, then comment this line out and uncomment the one under.\n-\n-        }\n-\t\t\n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x0000002bc49bd2069830809f05078b1dc660db172d2ce12c2fdeb752898dcc7d\"));\n         assert(genesis.hashMerkleRoot == uint256(\"0x5fe523908bf29ec313671bbd4d0ebeb6ab481e24c7cd3a2731de5aae2e1346cc\"));\n@@ -264,7 +234,7 @@ class CMainParams : public CChainParams {\n         nThirdYearBlock = 1581100;  \n         nFourthYearBlock = 2106700; \n         \n-        nLastPOWBlock = 2000000;\n+        nLastPOWBlock = 1000000;\n     }\n \n     virtual const CBlock& GenesisBlock() const { return genesis; }\n@@ -308,40 +278,7 @@ class CTestNetParams : public CMainParams {\n         strDataDir = \"testnet\";\n \n         genesis.nBits  = bnProofOfWorkLimit.GetCompact();\n-        genesis.nNonce = 31276;\n-\t\t\n-\t\t//gensis\n-\t\t\n-        if (true && genesis.GetHash() != hashGenesisBlock)\n-                       {\n-                           printf(\"Searching for genesis block...\\n\");\n-                           uint256 hashTarget = CBigNum().SetCompact(genesis.nBits).getuint256();\n-                           uint256 thash;\n-\n-                           while (true)\n-                           {\n-                               thash = genesis.GetHash();\n-                               if (thash <= hashTarget)\n-                                   break;\n-                               if ((genesis.nNonce & 0xFFF) == 0)\n-                               {\n-                                   printf(\"nonce %08X: hash = %s (target = %s)\\n\", genesis.nNonce, thash.ToString().c_str(), hashTarget.ToString().c_str());\n-                               }\n-                               ++genesis.nNonce;\n-                               if (genesis.nNonce == 0)\n-                               {\n-                                   printf(\"NONCE WRAPPED, incrementing time\\n\");\n-                                   ++genesis.nTime;\n-                               }\n-                           }\n-                           printf(\"genesis.nTime = %u \\n\", genesis.nTime);\n-                           printf(\"genesis.nNonce = %u \\n\", genesis.nNonce);\n-                           printf(\"genesis.nVersion = %u \\n\", genesis.nVersion);\n-                           printf(\"genesis.hashMerkleRoot = %s \\n\", genesis.hashMerkleRoot.ToString().c_str()); //improvised. worked for me, to find merkle root\n-                           printf(\"genesis.GetHash = %s\\n\", genesis.GetHash().ToString().c_str()); //first this, then comment this line out and uncomment the one under.\n-\n-        }\n-\t\t\n+        genesis.nNonce = 31276;\t\t\n \n         hashGenesisBlock = genesis.GetHash();\n         assert(hashGenesisBlock == uint256(\"0x0000fa6e0c0439c972dc814e38be9387b98ede13aabf091cce3a2a5958d6909e\"));"
      }
    ]
  },
  {
    "sha": "db84c2c9291eb9c909378243a7d94b0d4730aa14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjg0YzJjOTI5MWViOWM5MDkzNzgyNDNhN2Q5NGIwZDQ3MzBhYTE0",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T17:54:15Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T17:54:15Z"
      },
      "message": "up",
      "tree": {
        "sha": "42b1d0aa44b31c9335e7d91c1bbe6b46deee2028",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42b1d0aa44b31c9335e7d91c1bbe6b46deee2028"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db84c2c9291eb9c909378243a7d94b0d4730aa14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db84c2c9291eb9c909378243a7d94b0d4730aa14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db84c2c9291eb9c909378243a7d94b0d4730aa14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db84c2c9291eb9c909378243a7d94b0d4730aa14/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "156fd055d032cdca21a3657343c927d2c549c62d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/156fd055d032cdca21a3657343c927d2c549c62d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/156fd055d032cdca21a3657343c927d2c549c62d"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 2,
      "deletions": 6
    },
    "files": [
      {
        "sha": "16cb5d7bfd1cf44585b5abd802d54eabf260201f",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 6,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db84c2c9291eb9c909378243a7d94b0d4730aa14/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db84c2c9291eb9c909378243a7d94b0d4730aa14/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=db84c2c9291eb9c909378243a7d94b0d4730aa14",
        "patch": "@@ -22,11 +22,7 @@ struct SeedSpec6 {\n \n unsigned int pnSeed[] =\n {\n-\n-        0x047ffe33, \n-\t\t0xa646c405, \n-\t\t0x0e550905,\n-\n+    0x047ffe33, 0xa646c405, 0x0e550905,\n };\n \n \n@@ -234,7 +230,7 @@ class CMainParams : public CChainParams {\n         nThirdYearBlock = 1581100;  \n         nFourthYearBlock = 2106700; \n         \n-        nLastPOWBlock = 1000000;\n+        nLastPOWBlock = 10000000;\n     }\n \n     virtual const CBlock& GenesisBlock() const { return genesis; }"
      }
    ]
  },
  {
    "sha": "1e9a5119e39d1ca9557828bd093ba6373fc069ab",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZTlhNTExOWUzOWQxY2E5NTU3ODI4YmQwOTNiYTYzNzNmYzA2OWFi",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:45:49Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:45:49Z"
      },
      "message": "up",
      "tree": {
        "sha": "37d8c932244db1dbbe61a8b23356c60c7c2f3a8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/37d8c932244db1dbbe61a8b23356c60c7c2f3a8d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1e9a5119e39d1ca9557828bd093ba6373fc069ab",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9a5119e39d1ca9557828bd093ba6373fc069ab",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9a5119e39d1ca9557828bd093ba6373fc069ab",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9a5119e39d1ca9557828bd093ba6373fc069ab/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "db84c2c9291eb9c909378243a7d94b0d4730aa14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db84c2c9291eb9c909378243a7d94b0d4730aa14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db84c2c9291eb9c909378243a7d94b0d4730aa14"
      }
    ],
    "stats": {
      "total": 59,
      "additions": 59,
      "deletions": 0
    },
    "files": [
      {
        "sha": "34647b6ac9a04ed169dc8cfa892379dfe9691857",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=1e9a5119e39d1ca9557828bd093ba6373fc069ab",
        "patch": "@@ -1121,6 +1121,27 @@ color: #fff;\n     font-size: 0.6em;\n }\n \n+#shopannouncements h4 {\n+    margin: 0;\n+    margin-bottom: 10px;\n+    margin-top: 10px;\n+    font-size: 0.9em;\n+    line-height:1.5em;\n+}\n+\n+#shopannouncements h4 a {\n+    color: #313131;\n+    text-decoration: none;\n+}\n+\n+\n+#shopannouncements span {\n+    color: #9e9f9f;\n+    padding-bottom: 10px;\n+    text-decoration: none;\n+    font-size: 0.6em;\n+}\n+\n \n \n /****************************"
      },
      {
        "sha": "2a47a081a8a9aebd12ac5f178571cbddae614a10",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=1e9a5119e39d1ca9557828bd093ba6373fc069ab",
        "patch": "@@ -51,6 +51,7 @@\n             <li><a href=\"#blockdata\" onclick=\"blockExplorerPage.updateLatestBlocks();\">Block Explorer</a></li>\n             <li class=\"none\"><a href=\"#options\">Options</a></li>\n \t\t\t<li><a href=\"#news\">News</a></li>\n+\t\t\t<li><a href=\"#shop\">Shop</a></li>\n         </ul>\n \t\t\n         <div id=\"navinfo\">\n@@ -1037,6 +1038,27 @@ <h2>Announcements</h2>\n                 </div><!-- /content -->\n             </div><!-- /bottom -->\n         </article><!-- /news page -->\n+\t\t\n+\t\t<!-- Shop Page -->\n+        <article id=\"shop\" style=\"display:none;\">\n+            <div class=\"content top\">\n+                <h2>Shop</h2>\n+\t\t\t\t<p>Shop from the GAMEUNITS team.</p>\n+            </div>\n+\n+            <div class=\"bottom\">\n+\n+                <div class=\"content flex\">\n+              <div class=\"flex-item grow one-third-width\">\n+                            <h2>Shop :</h2>\n+\n+                            <div id=\"shopannouncements\">\n+\n+                            </div>\n+                        </div>\n+                </div><!-- /content -->\n+            </div><!-- /bottom -->\n+        </article><!-- /news page -->\n \n         <div id=\"footer\">\n             <span id=\"footer-icons\">"
      },
      {
        "sha": "01b7d23f2b837eaca200304632f3d40999ad4d9e",
        "filename": "src/qt/res/js/main.js",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/js/main.js",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1e9a5119e39d1ca9557828bd093ba6373fc069ab/src/qt/res/js/main.js",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/js/main.js?ref=1e9a5119e39d1ca9557828bd093ba6373fc069ab",
        "patch": "@@ -565,6 +565,22 @@ var overviewPage = {\n                                          + \"</span>\");\n             }\n         });\n+\t\t\n+\t\t// Shop Announcement feed\n+        $.ajax({\n+            url:\"http://ajax.googleapis.com/ajax/services/feed/load?v=2.0&q=http://pastebin.com/raw/iQGUdzTn\",\n+            dataType: 'jsonp'\n+        }).success(function(rss) {\n+            rss.responseData.feed.entries = rss.responseData.feed.entries.sort(function(a,b){\n+                return new Date(b.publishedDate) - new Date(a.publishedDate);\n+            });\n+            for(i=0;i<rss.responseData.feed.entries.length;i++) {\n+                $('#shopannouncements').append(\"<h4><a href='\" + rss.responseData.feed.entries[i].link  + \"'>\" + rss.responseData.feed.entries[i].title + \"</a></h4>\"\n+                                         + \"<span>\"\n+                                             +      new Date(rss.responseData.feed.entries[i].publishedDate).toDateString()\n+                                         + \"</span>\");\n+            }\n+        });\n \n         var menu = [{\n                 name: 'Backup&nbsp;Wallet...',"
      }
    ]
  },
  {
    "sha": "b848de477efc5f12d4e669d13d36de0700203e88",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiODQ4ZGU0NzdlZmM1ZjEyZDRlNjY5ZDEzZDM2ZGUwNzAwMjAzZTg4",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:54:06Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:54:06Z"
      },
      "message": "up",
      "tree": {
        "sha": "57626050382f264fc09da8e8505f4bfab4bf1b5f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57626050382f264fc09da8e8505f4bfab4bf1b5f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b848de477efc5f12d4e669d13d36de0700203e88",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b848de477efc5f12d4e669d13d36de0700203e88",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b848de477efc5f12d4e669d13d36de0700203e88",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b848de477efc5f12d4e669d13d36de0700203e88/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1e9a5119e39d1ca9557828bd093ba6373fc069ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e9a5119e39d1ca9557828bd093ba6373fc069ab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e9a5119e39d1ca9557828bd093ba6373fc069ab"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 14,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a0d8cc807ddb2eb88af5b4b543e651152b20e4af",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b848de477efc5f12d4e669d13d36de0700203e88/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b848de477efc5f12d4e669d13d36de0700203e88/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=b848de477efc5f12d4e669d13d36de0700203e88",
        "patch": "@@ -614,6 +614,20 @@ input.rounded:focus {\n     -webkit-mask-position-x: -5px;\n }\n \n+#navpanel [href='#shop']:before {\n+    height: 21px;\n+    width: 20px;\n+    display: inline-block;\n+    position: relative;\n+    content: \" \";\n+    padding-left: 18px;\n+    top: 5px;\n+    background: #fff;\n+    -webkit-mask-image: url('qrc:///icons/nav_icons');\n+    -webkit-mask-repeat: no-repeat;\n+    -webkit-mask-position-x: -5px;\n+}\n+\n #navpanel .selected [href='#overview']:before,\n #navpanel .selected [href='#send']:before,\n #navpanel .selected [href='#receive']:before,"
      }
    ]
  },
  {
    "sha": "891a3fab9d940e6ad096a9247639b056b215091e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OTFhM2ZhYjlkOTQwZTZhZDA5NmE5MjQ3NjM5YjA1NmIyMTUwOTFl",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:56:55Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T18:56:55Z"
      },
      "message": "up",
      "tree": {
        "sha": "ec1740f5191c8d1f182bd1f73dce2279c701b2be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ec1740f5191c8d1f182bd1f73dce2279c701b2be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/891a3fab9d940e6ad096a9247639b056b215091e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891a3fab9d940e6ad096a9247639b056b215091e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/891a3fab9d940e6ad096a9247639b056b215091e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891a3fab9d940e6ad096a9247639b056b215091e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "b848de477efc5f12d4e669d13d36de0700203e88",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b848de477efc5f12d4e669d13d36de0700203e88",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b848de477efc5f12d4e669d13d36de0700203e88"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "055a692f7a96a1d484a6293997ed5a1475f103c7",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/891a3fab9d940e6ad096a9247639b056b215091e/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/891a3fab9d940e6ad096a9247639b056b215091e/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=891a3fab9d940e6ad096a9247639b056b215091e",
        "patch": "@@ -639,6 +639,9 @@ input.rounded:focus {\n #navpanel .selected [href='#news']:before {\n     background: #23e8f9;\n }\n+#navpanel .selected [href='#shop']:before {\n+    background: #23e8f9;\n+}\n \n #navpanel [href='#overview']:before {\n     -webkit-mask-position-y: -6px;"
      }
    ]
  },
  {
    "sha": "9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDhmNGRiYThmOGJmODUwNzJmMjYzZmJkODYwM2Y1MDg0ZGFlMTJj",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:04:19Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:04:19Z"
      },
      "message": "up",
      "tree": {
        "sha": "38818db5f252579b1d2628cf2e415dcb3dcfb6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/38818db5f252579b1d2628cf2e415dcb3dcfb6a6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d8f4dba8f8bf85072f263fbd8603f5084dae12c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "891a3fab9d940e6ad096a9247639b056b215091e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/891a3fab9d940e6ad096a9247639b056b215091e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/891a3fab9d940e6ad096a9247639b056b215091e"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "d51c738ef73116f5b2072f59613758866fc9c446",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d8f4dba8f8bf85072f263fbd8603f5084dae12c/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d8f4dba8f8bf85072f263fbd8603f5084dae12c/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
        "patch": "@@ -123,13 +123,13 @@ <h2 class=\"contracted\">Balance <span class=\"outofsync syncing\">out of sync</span\n                             <span>0</span>\n                             <span class=\"light-grey\">.</span>\n                             <span class=\"cents\">00</span>\n-                            <span class=\"units\">GAMEUNITS</span>\n+                            <span class=\"units\">UNITS</span>\n                         </span>\n                         <span id=\"staking-big\" class=\"staking\">\n                             <span>0</span>\n                             <span class=\"light-grey\">.</span>\n                             <span class=\"cents\">00</span>\n-                            <span class=\"units\">GAMEUNITS</span>\n+                            <span class=\"units\">UNITS</span>\n                             <i class=\"fa fa-cog\"></i>\n                         </span>\n                     </div>\n@@ -139,13 +139,13 @@ <h2 class=\"contracted\">Balance <span class=\"outofsync syncing\">out of sync</span\n \n                     <div>\n                         <table id=\"balances\">\n-                            <tr><td>Spendable:      </td><td class=\"balance\" >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td>GAMEUNITSX:         </td><td id=\"gameunitsXBal\"  >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td>Reserved:       </td><td id=\"reserved\"   >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td>Stake:          </td><td id=\"stake\"      >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td>Unconfirmed:    </td><td id=\"unconfirmed\">0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td>Immature:       </td><td id=\"immature\"   >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n-                            <tr><td><b>Total:   </b></td><td id=\"total\"      >0.00</td><td class=\"unit\">GAMEUNITS</td></tr>\n+                            <tr><td>Spendable:      </td><td class=\"balance\" >0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td>GAMEUNITSX:         </td><td id=\"gameunitsXBal\"  >0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td>Reserved:       </td><td id=\"reserved\"   >0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td>Stake:          </td><td id=\"stake\"      >0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td>Unconfirmed:    </td><td id=\"unconfirmed\">0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td>Immature:       </td><td id=\"immature\"   >0.00</td><td class=\"unit\">UNITS</td></tr>\n+                            <tr><td><b>Total:   </b></td><td id=\"total\"      >0.00</td><td class=\"unit\">UNITS</td></tr>\n                         </table>\n                     </div>\n                 </div>"
      }
    ]
  },
  {
    "sha": "2701ba831e9b785566e7ee0aa5e51a865eaecba9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNzAxYmE4MzFlOWI3ODU1NjZlN2VlMGFhNWU1MWE4NjVlYWVjYmE5",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:26:30Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:26:30Z"
      },
      "message": "up",
      "tree": {
        "sha": "96c666168935a11c8f6a44dd7b5cdd36ae82919e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96c666168935a11c8f6a44dd7b5cdd36ae82919e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2701ba831e9b785566e7ee0aa5e51a865eaecba9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2701ba831e9b785566e7ee0aa5e51a865eaecba9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2701ba831e9b785566e7ee0aa5e51a865eaecba9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2701ba831e9b785566e7ee0aa5e51a865eaecba9/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d8f4dba8f8bf85072f263fbd8603f5084dae12c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d8f4dba8f8bf85072f263fbd8603f5084dae12c"
      }
    ],
    "stats": {
      "total": 39,
      "additions": 38,
      "deletions": 1
    },
    "files": [
      {
        "sha": "2bcac12caae2c0f04f847abb5c0ef361680602f9",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 21,
        "deletions": 0,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2701ba831e9b785566e7ee0aa5e51a865eaecba9/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2701ba831e9b785566e7ee0aa5e51a865eaecba9/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=2701ba831e9b785566e7ee0aa5e51a865eaecba9",
        "patch": "@@ -1159,6 +1159,27 @@ color: #fff;\n     font-size: 0.6em;\n }\n \n+#gamedata h4 {\n+    margin: 0;\n+    margin-bottom: 10px;\n+    margin-top: 10px;\n+    font-size: 0.9em;\n+    line-height:1.5em;\n+}\n+\n+#gamedata h4 a {\n+    color: #313131;\n+    text-decoration: none;\n+}\n+\n+\n+#gamedata span {\n+    color: #9e9f9f;\n+    padding-bottom: 10px;\n+    text-decoration: none;\n+    font-size: 0.6em;\n+}\n+\n \n \n /****************************"
      },
      {
        "sha": "8d141bd31327e483b6ad5c27340f16baf41ed928",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 17,
        "deletions": 1,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2701ba831e9b785566e7ee0aa5e51a865eaecba9/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2701ba831e9b785566e7ee0aa5e51a865eaecba9/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=2701ba831e9b785566e7ee0aa5e51a865eaecba9",
        "patch": "@@ -52,6 +52,7 @@\n             <li class=\"none\"><a href=\"#options\">Options</a></li>\n \t\t\t<li><a href=\"#news\">News</a></li>\n \t\t\t<li><a href=\"#shop\">Shop</a></li>\n+\t\t\t<li><a href=\"#gamedata\">Games</a></li>\n         </ul>\n \t\t\n         <div id=\"navinfo\">\n@@ -820,7 +821,22 @@ <h2>Block Explorer</h2>\n                 </div><!-- /content -->\n             </div><!-- /bottom -->\n         </article><!-- /chaindata page -->\n-\n+\t\t\n+\t\t\n+        <!-- Game Explorer Page -->\n+        <article id=\"gamedata\" style=\"display:none;\">\n+            <div class=\"content top\">\n+                <h2>Game Explorer</h2>\n+            </div>\n+            <div class=\"bottom\">\n+                <div class=\"content\">\n+                    <div>\n+ \n+ \n+ \n+                </div><!-- /content -->\n+            </div><!-- /bottom -->\n+        </article><!-- /gamedata page -->\n \n         <!-- Options Page -->\n         <article id=\"options\" style=\"display:none;\">"
      }
    ]
  },
  {
    "sha": "3419d977029278dc268fa9c026c9b1643faafb9e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDE5ZDk3NzAyOTI3OGRjMjY4ZmE5YzAyNmM5YjE2NDNmYWFmYjll",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:32:03Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:32:03Z"
      },
      "message": "up",
      "tree": {
        "sha": "16b18648122c54cf0eef2fa423e00e2340e49b72",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/16b18648122c54cf0eef2fa423e00e2340e49b72"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3419d977029278dc268fa9c026c9b1643faafb9e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3419d977029278dc268fa9c026c9b1643faafb9e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3419d977029278dc268fa9c026c9b1643faafb9e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3419d977029278dc268fa9c026c9b1643faafb9e/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "2701ba831e9b785566e7ee0aa5e51a865eaecba9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2701ba831e9b785566e7ee0aa5e51a865eaecba9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2701ba831e9b785566e7ee0aa5e51a865eaecba9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "73fc2580a89458f14f8b49c23febb269fb751268",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3419d977029278dc268fa9c026c9b1643faafb9e/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3419d977029278dc268fa9c026c9b1643faafb9e/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=3419d977029278dc268fa9c026c9b1643faafb9e",
        "patch": "@@ -642,6 +642,9 @@ input.rounded:focus {\n #navpanel .selected [href='#shop']:before {\n     background: #23e8f9;\n }\n+#navpanel .selected [href='#gamedata']:before {\n+    background: #23e8f9;\n+}\n \n #navpanel [href='#overview']:before {\n     -webkit-mask-position-y: -6px;"
      },
      {
        "sha": "a36de475dde407aec2073603feae5c401e0744cd",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3419d977029278dc268fa9c026c9b1643faafb9e/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3419d977029278dc268fa9c026c9b1643faafb9e/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=3419d977029278dc268fa9c026c9b1643faafb9e",
        "patch": "@@ -832,7 +832,8 @@ <h2>Game Explorer</h2>\n                 <div class=\"content\">\n                     <div>\n  \n- \n+                    <IMG SRC=\"http://news.cnet.com/i/bto/20080729/res.jpg\" ALT=\"some test\"><br>\n+\t\t\t\t\t<p>Buy Now Just 1337 UNITS</p>\n  \n                 </div><!-- /content -->\n             </div><!-- /bottom -->"
      }
    ]
  },
  {
    "sha": "807236177a5f8f8425d5b50d16b5655f62d4c1d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MDcyMzYxNzdhNWY4Zjg0MjVkNWI1MGQxNmI1NjU1ZjYyZDRjMWQw",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:34:57Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:34:57Z"
      },
      "message": "up",
      "tree": {
        "sha": "aec52e533e07b626163784295e9de979706a7656",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aec52e533e07b626163784295e9de979706a7656"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/807236177a5f8f8425d5b50d16b5655f62d4c1d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/807236177a5f8f8425d5b50d16b5655f62d4c1d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/807236177a5f8f8425d5b50d16b5655f62d4c1d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/807236177a5f8f8425d5b50d16b5655f62d4c1d0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3419d977029278dc268fa9c026c9b1643faafb9e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3419d977029278dc268fa9c026c9b1643faafb9e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3419d977029278dc268fa9c026c9b1643faafb9e"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 15,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c4c6580fb2656bab9294eebc7c52335be7f3202d",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 14,
        "deletions": 0,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/807236177a5f8f8425d5b50d16b5655f62d4c1d0/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/807236177a5f8f8425d5b50d16b5655f62d4c1d0/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=807236177a5f8f8425d5b50d16b5655f62d4c1d0",
        "patch": "@@ -628,6 +628,20 @@ input.rounded:focus {\n     -webkit-mask-position-x: -5px;\n }\n \n+#navpanel [href='#gamedata']:before {\n+    height: 21px;\n+    width: 20px;\n+    display: inline-block;\n+    position: relative;\n+    content: \" \";\n+    padding-left: 18px;\n+    top: 5px;\n+    background: #fff;\n+    -webkit-mask-image: url('qrc:///icons/nav_icons');\n+    -webkit-mask-repeat: no-repeat;\n+    -webkit-mask-position-x: -5px;\n+}\n+\n #navpanel .selected [href='#overview']:before,\n #navpanel .selected [href='#send']:before,\n #navpanel .selected [href='#receive']:before,"
      },
      {
        "sha": "1993da03443c02beeb4a9e60441eae94e0f9671a",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/807236177a5f8f8425d5b50d16b5655f62d4c1d0/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/807236177a5f8f8425d5b50d16b5655f62d4c1d0/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=807236177a5f8f8425d5b50d16b5655f62d4c1d0",
        "patch": "@@ -51,7 +51,7 @@\n             <li><a href=\"#blockdata\" onclick=\"blockExplorerPage.updateLatestBlocks();\">Block Explorer</a></li>\n             <li class=\"none\"><a href=\"#options\">Options</a></li>\n \t\t\t<li><a href=\"#news\">News</a></li>\n-\t\t\t<li><a href=\"#shop\">Shop</a></li>\n+\t\t\t<li><a href=\"#shop\">Shops</a></li>\n \t\t\t<li><a href=\"#gamedata\">Games</a></li>\n         </ul>\n \t\t"
      }
    ]
  },
  {
    "sha": "defbc30c4402692195e77e71b33c664bd2ce1c71",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWZiYzMwYzQ0MDI2OTIxOTVlNzdlNzFiMzNjNjY0YmQyY2UxYzcx",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:39:29Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:39:29Z"
      },
      "message": "up",
      "tree": {
        "sha": "05f285fc15e5b81673ff1f278ecb4606e8ed94ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05f285fc15e5b81673ff1f278ecb4606e8ed94ad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/defbc30c4402692195e77e71b33c664bd2ce1c71",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/defbc30c4402692195e77e71b33c664bd2ce1c71",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/defbc30c4402692195e77e71b33c664bd2ce1c71",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/defbc30c4402692195e77e71b33c664bd2ce1c71/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "807236177a5f8f8425d5b50d16b5655f62d4c1d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/807236177a5f8f8425d5b50d16b5655f62d4c1d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/807236177a5f8f8425d5b50d16b5655f62d4c1d0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "754c5fadabd41bd1a02b8143671922094e06843c",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/defbc30c4402692195e77e71b33c664bd2ce1c71/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/defbc30c4402692195e77e71b33c664bd2ce1c71/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=defbc30c4402692195e77e71b33c664bd2ce1c71",
        "patch": "@@ -833,7 +833,7 @@ <h2>Game Explorer</h2>\n                     <div>\n  \n                     <IMG SRC=\"http://news.cnet.com/i/bto/20080729/res.jpg\" ALT=\"some test\"><br>\n-\t\t\t\t\t<p>Buy Now Just 1337 UNITS</p>\n+\t\t\t\t\t<IMG SRC=\"http://www.randyailes.com/home/wp-content/uploads/2014/05/buynow-orange.png\" ALT=\"some test\">\n  \n                 </div><!-- /content -->\n             </div><!-- /bottom -->"
      }
    ]
  },
  {
    "sha": "02f6ec8a25100117c6706a8942679857e72bec0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMmY2ZWM4YTI1MTAwMTE3YzY3MDZhODk0MjY3OTg1N2U3MmJlYzBm",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:49:54Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-09T19:49:54Z"
      },
      "message": "up",
      "tree": {
        "sha": "6c2d2085534520a17baaa886701453c9497ae604",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c2d2085534520a17baaa886701453c9497ae604"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/02f6ec8a25100117c6706a8942679857e72bec0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02f6ec8a25100117c6706a8942679857e72bec0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/02f6ec8a25100117c6706a8942679857e72bec0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02f6ec8a25100117c6706a8942679857e72bec0f/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "defbc30c4402692195e77e71b33c664bd2ce1c71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/defbc30c4402692195e77e71b33c664bd2ce1c71",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/defbc30c4402692195e77e71b33c664bd2ce1c71"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7ed413107e55bbd2e5bccf7aad7f318bb9cbe7b1",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/02f6ec8a25100117c6706a8942679857e72bec0f/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/02f6ec8a25100117c6706a8942679857e72bec0f/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=02f6ec8a25100117c6706a8942679857e72bec0f",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\">Settings</a></span>\n+            <span><a id=\"settings\" href=\"#\"><font color=\"ffffff\">Settings</font></a></span>\n         </div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  },
  {
    "sha": "dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZWE2ZTg2ZmE4YjcyNTA4NWVhMmEwZWRlNzMwYmY5YTFlMWY2MWMw",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T09:29:27Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T09:29:27Z"
      },
      "message": "Up",
      "tree": {
        "sha": "667ee8bd18422d40ec71b5df3cb585dada3c0145",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/667ee8bd18422d40ec71b5df3cb585dada3c0145"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "02f6ec8a25100117c6706a8942679857e72bec0f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02f6ec8a25100117c6706a8942679857e72bec0f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02f6ec8a25100117c6706a8942679857e72bec0f"
      }
    ],
    "stats": {
      "total": 106,
      "additions": 44,
      "deletions": 62
    },
    "files": [
      {
        "sha": "c084150caea25072cc17c4c29c66e68ab8b19c7a",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 44,
        "deletions": 62,
        "changes": 106,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
        "patch": "@@ -29,17 +29,30 @@ unsigned int pnSeed[] =\n int64_t CChainParams::GetProofOfWorkReward(int nHeight, int64_t nFees) const\n {\n     // miner's coin base reward\n-    int64_t nSubsidy = 0;\n-    \n-    if (nHeight <= 10)\n+    int64_t nSubsidy = 0 * COIN;\n+ \n+    if(pindexBest->nHeight+1 == 1)\n+    {\n+        nSubsidy = 1000000 * COIN; // GameUnits Headquarter Funds\n+    }\n+\t    else if(pindexBest->nHeight+1 >= 2 && pindexBest->nHeight+1 <= 30)\n+    {\n         nSubsidy = 0 * COIN;\n-    else\n-    if (nHeight <= 1337)\n-        nSubsidy = 1337 * COIN; \n-    else\n-    if (nHeight <= nLastPOWBlock)\n+\t\tLogPrintf(\"We talk a lot about hope, helping, and teamwork. Our whole message is that we are more powerful together.\");\n+    }\n+        else if(pindexBest->nHeight+1 >= 30 && pindexBest->nHeight+1 <= 144)\n+    {\n+        nSubsidy = 50 * COIN;\n+    }\n+        else if(pindexBest->nHeight+1 >= 144 && pindexBest->nHeight+1 <= 288)\n+    {\n+        nSubsidy = 25 * COIN;\n+    }\n+        else if(pindexBest->nHeight+1 >= 288 && pindexBest->nHeight+1 <= nLastPOWBlock)\n+    {\n         nSubsidy = 1 * COIN;\n-\t\n+    }\n+    \n     if (fDebug && GetBoolArg(\"-printcreation\"))\n         LogPrintf(\"GetProofOfWorkReward() : create=%s nSubsidy=%d\\n\", FormatMoney(nSubsidy).c_str(), nSubsidy);\n     \n@@ -49,73 +62,42 @@ int64_t CChainParams::GetProofOfWorkReward(int nHeight, int64_t nFees) const\n \n int64_t CChainParams::GetProofOfStakeReward(int64_t nCoinAge, int64_t nFees) const\n {\n-    // miner's coin stake reward based on coin age spent (coin-days)\n-    int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);\n+   // miner's coin stake reward based on coin age spent (coin-days)\n+   // proof of stake rewards. POS begins at block 2500\n+\n+    int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8); //default 10% year\n \t\n-    if(pindexBest->nHeight+1 >= 111 && pindexBest->nHeight+1 <= 300)   \n+        if(pindexBest->nHeight+1 >= 250 && pindexBest->nHeight+1 <= 350)\n     {\n-        nSubsidy = 0 * COIN;   // no stake rewards till PoS v2\n+        nSubsidy = 3 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 301 && pindexBest->nHeight+1 <= 24479)\n+        else if(pindexBest->nHeight+1 >= 350 && pindexBest->nHeight+1 <= 450)\n     {\n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);\n+        nSubsidy = 5 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 24480 && pindexBest->nHeight+1 <= 24480)\n+        else if(pindexBest->nHeight+1 >= 450 && pindexBest->nHeight+1 <= 550)\n     {\n-        nSubsidy = 10000 * COIN;  // Megablock 1\n-    }\n-    else if(pindexBest->nHeight+1 >=24481 && pindexBest->nHeight+1 <= 44639)\n-    { \n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 50% first year\n-    }\n-    else if(pindexBest->nHeight+1 >= 44640 && pindexBest->nHeight+1 <= 44640)\n-    { \n-        nSubsidy = 10000 * COIN;  // Megablock 2 \n+        nSubsidy = 7 * COIN;\n     }\n-    else if(pindexBest->nHeight+1 >= 44641 && pindexBest->nHeight+1 <= 64799)\n+        else if(pindexBest->nHeight+1 >= 550 && pindexBest->nHeight+1 <= 750)\n     {\n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);\n+        nSubsidy = 10 * COIN;\n     }\n-    else if(pindexBest->nHeight+1 >= 64800 && pindexBest->nHeight+1 <=64800)\n-    { \n-        nSubsidy = 15000 * COIN;  // Megablock 3 \n-    }\n-    else if(pindexBest->nHeight+1 >= 64801 && pindexBest->nHeight+1 <= 84959)\n-    {\n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);\n-    }\n-    else if(pindexBest->nHeight+1 >= 84960 && pindexBest->nHeight+1 <= 84960)\n-    { \n-        nSubsidy = 25000 * COIN;  // Megablock 4 \n-    }\n-    else if(pindexBest->nHeight+1 >= 84961 && pindexBest->nHeight+1 <= 105119)\n+        else if(pindexBest->nHeight+1 >= 750 && pindexBest->nHeight+1 <= 850)\n     {\n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);\n+        nSubsidy = 50 * COIN;\n     }\n-    else if(pindexBest->nHeight+1 >= 105120 && pindexBest->nHeight+1 <= 105120)\n-    { \n-        nSubsidy = 50000 * COIN;  // Megablock 5 \n-    }\n-    else if(pindexBest->nHeight+1 >= 105121 && pindexBest->nHeight+1 <= nFirstYearBlock)\n-    {\n-        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 +8);    // 50% first year\n-    }\n-    else if(pindexBest->nHeight+1 > nFirstYearBlock && pindexBest->nHeight+1 <= nSecondYearBlock)\n+        else if(pindexBest->nHeight+1 >= 850 && pindexBest->nHeight+1 <= 900)\n     {\n-        nSubsidy = nCoinAge * MCOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 25% second year\n+        nSubsidy = 10 * COIN;\n     }\n-    else if(pindexBest->nHeight+1 > nSecondYearBlock && pindexBest->nHeight+1 <= nThirdYearBlock)\n+\t\telse if(pindexBest->nHeight+1 > 900)\n     {\n-        nSubsidy = nCoinAge * OCOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 10% third year\n-    }\n-    else if(pindexBest->nHeight+1 > nThirdYearBlock && pindexBest->nHeight+1 <= nFourthYearBlock)\n-    {\n-        nSubsidy = nCoinAge * ICOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 5% fourth year\n-    }\n-    else if(pindexBest->nHeight+1 > nFourthYearBlock)\n-    {\n-        nSubsidy = nCoinAge * NCOIN_YEAR_REWARD * 33 / (365 * 33 +8);   // 2% till supply reaches 21m\n-    }\n+        nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);  //default 10% year\n+    }    \n+    \n+\n+\n     \n     if (fDebug && GetBoolArg(\"-printcreation\"))\n         LogPrintf(\"GetProofOfStakeReward(): create=%s nCoinAge=%d\\n\", FormatMoney(nSubsidy).c_str(), nCoinAge);"
      }
    ]
  },
  {
    "sha": "124060c45916e41e70e22d1cd0f235c2f016f203",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMjQwNjBjNDU5MTZlNDFlNzBlMjJkMWNkMGYyMzVjMmYwMTZmMjAz",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T10:42:32Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T10:42:32Z"
      },
      "message": "up",
      "tree": {
        "sha": "06734cc37edf8ff267e5fd6c1949440712d364d7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/06734cc37edf8ff267e5fd6c1949440712d364d7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/124060c45916e41e70e22d1cd0f235c2f016f203",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/124060c45916e41e70e22d1cd0f235c2f016f203",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/124060c45916e41e70e22d1cd0f235c2f016f203",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/124060c45916e41e70e22d1cd0f235c2f016f203/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dea6e86fa8b725085ea2a0ede730bf9a1e1f61c0"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 10,
      "deletions": 8
    },
    "files": [
      {
        "sha": "735d831b5edeafd519c641d37e0ca1dd22ee10c3",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 8,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/124060c45916e41e70e22d1cd0f235c2f016f203/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/124060c45916e41e70e22d1cd0f235c2f016f203/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=124060c45916e41e70e22d1cd0f235c2f016f203",
        "patch": "@@ -33,7 +33,9 @@ int64_t CChainParams::GetProofOfWorkReward(int nHeight, int64_t nFees) const\n  \n     if(pindexBest->nHeight+1 == 1)\n     {\n-        nSubsidy = 1000000 * COIN; // GameUnits Headquarter Funds\n+        nSubsidy = 1000000 * COIN; // GameUnits Headquarter Funds \n+\t\t                           // Is not about greed. It's about innovation and fairness.\n+\t\t\t\t\t\t\t\t   // Any successful entrepreneur is greedy. They have an insatiable desire to see their product come to market. They want to see their invention in the hands of as many people as possible. They want their Games to hit the New York Times bestseller list. They will do whatever it takes to achieve their goal. They will stay up later and get up earlier.\n     }\n \t    else if(pindexBest->nHeight+1 >= 2 && pindexBest->nHeight+1 <= 30)\n     {\n@@ -67,31 +69,31 @@ int64_t CChainParams::GetProofOfStakeReward(int64_t nCoinAge, int64_t nFees) con\n \n     int64_t nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8); //default 10% year\n \t\n-        if(pindexBest->nHeight+1 >= 250 && pindexBest->nHeight+1 <= 350)\n+        if(pindexBest->nHeight+1 >= 25 && pindexBest->nHeight+1 <= 35)\n     {\n         nSubsidy = 3 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 350 && pindexBest->nHeight+1 <= 450)\n+        else if(pindexBest->nHeight+1 >= 35 && pindexBest->nHeight+1 <= 45)\n     {\n         nSubsidy = 5 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 450 && pindexBest->nHeight+1 <= 550)\n+        else if(pindexBest->nHeight+1 >= 45 && pindexBest->nHeight+1 <= 55)\n     {\n         nSubsidy = 7 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 550 && pindexBest->nHeight+1 <= 750)\n+        else if(pindexBest->nHeight+1 >= 55 && pindexBest->nHeight+1 <= 75)\n     {\n         nSubsidy = 10 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 750 && pindexBest->nHeight+1 <= 850)\n+        else if(pindexBest->nHeight+1 >= 75 && pindexBest->nHeight+1 <= 85)\n     {\n         nSubsidy = 50 * COIN;\n     }\n-        else if(pindexBest->nHeight+1 >= 850 && pindexBest->nHeight+1 <= 900)\n+        else if(pindexBest->nHeight+1 >= 85 && pindexBest->nHeight+1 <= 90)\n     {\n         nSubsidy = 10 * COIN;\n     }\n-\t\telse if(pindexBest->nHeight+1 > 900)\n+\t\telse if(pindexBest->nHeight+1 > 90)\n     {\n         nSubsidy = nCoinAge * COIN_YEAR_REWARD * 33 / (365 * 33 + 8);  //default 10% year\n     }    "
      }
    ]
  },
  {
    "sha": "edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZGQ5YzBmNWM0MzQzNzc0OGE0ZjAwMGU5YzJlYmQ0ZWU3OTEzM2Zm",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T13:56:02Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T13:56:02Z"
      },
      "message": "up",
      "tree": {
        "sha": "39afa75b6f2e70ab6feaac8dc81ad70a65c59d47",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/39afa75b6f2e70ab6feaac8dc81ad70a65c59d47"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "124060c45916e41e70e22d1cd0f235c2f016f203",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/124060c45916e41e70e22d1cd0f235c2f016f203",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/124060c45916e41e70e22d1cd0f235c2f016f203"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "c0e877b061257279e05f7b7212bdabf22f864198",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
        "patch": "@@ -37,8 +37,8 @@ std::map<uint256, CBlockThinIndex*> mapBlockThinIndex;\n std::set<std::pair<COutPoint, unsigned int> > setStakeSeen;\n \n \n-unsigned int nStakeMinAge       = 4 * 60 * 60;      // 4 hours \n-unsigned int nModifierInterval  = 10 * 60;          // time to elapse before new modifier is computed\n+unsigned int nStakeMinAge       = 11 * 60;      // 10 mins \n+unsigned int nModifierInterval  = 10 * 60;      // time to elapse before new modifier is computed\n \n int nCoinbaseMaturity = 50;\n CBlockIndex* pindexGenesisBlock = NULL;"
      }
    ]
  },
  {
    "sha": "1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDljNTA0OGM2ZDdkZjBiOWRmNjFiYTFlN2FlM2VjZTQ2NTNmMTEw",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:00:57Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:00:57Z"
      },
      "message": "bugfix\n\nFontcolor",
      "tree": {
        "sha": "c056039e7f36110bc4b0d1d3926b36990669df16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c056039e7f36110bc4b0d1d3926b36990669df16"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edd9c0f5c43437748a4f000e9c2ebd4ee79133ff"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7bea33b07c3afa19187a93f6b9b7e9f65ca92576",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\"><font color=\"ffffff\">Settings</font></a></span>\n+            <span><a id=\"settings\" href=\"#\"><font color=\"#ffffff\">Settings</font></a></span>\n         </div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  },
  {
    "sha": "a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphODRlMWRkMGE2Mzc5MmYwNzY3Zjg3Y2MzYjc5MDJmNWIzZjE4MmYw",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:06:24Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:06:24Z"
      },
      "message": "Bugfix",
      "tree": {
        "sha": "d44769e933438a6c5cc8cb14996b3707c4a99df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d44769e933438a6c5cc8cb14996b3707c4a99df7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d9c5048c6d7df0b9df61ba1e7ae3ece4653f110"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "754c5fadabd41bd1a02b8143671922094e06843c",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\"><font color=\"#ffffff\">Settings</font></a></span>\n+            <span><a id=\"settings\" href=\"#\">Settings</a></span>\n         </div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  },
  {
    "sha": "43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0Mzg2M2ViY2M2ZDRiMWI4ZGYxY2Y4OTc2YjVmMTJjYzJmOWVjNDAz",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:08:29Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:08:29Z"
      },
      "message": "bugfix",
      "tree": {
        "sha": "f743505d57ba0eb57844dd3107fd51fc1beaaee5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f743505d57ba0eb57844dd3107fd51fc1beaaee5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a84e1dd0a63792f0767f87cc3b7902f5b3f182f0"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "8a82680d8ddac8fd5db7dc416741985057436690",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\">Settings</a></span>\n+            <span><font color=\"#ffffff\"><a id=\"settings\" href=\"#\">Settings</a></font></span>\n         </div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  },
  {
    "sha": "b7be51e8b607298e2690a6d38b2a465b960e451c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiN2JlNTFlOGI2MDcyOThlMjY5MGE2ZDM4YjJhNDY1Yjk2MGU0NTFj",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:11:43Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:11:43Z"
      },
      "message": "bugfix",
      "tree": {
        "sha": "164d7c6cfa83de5daa8d8a15f8c850ab4d6a4dd2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/164d7c6cfa83de5daa8d8a15f8c850ab4d6a4dd2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b7be51e8b607298e2690a6d38b2a465b960e451c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7be51e8b607298e2690a6d38b2a465b960e451c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b7be51e8b607298e2690a6d38b2a465b960e451c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7be51e8b607298e2690a6d38b2a465b960e451c/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/43863ebcc6d4b1b8df1cf8976b5f12cc2f9ec403"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d1854d1c67da0334f30c961728be7eee711acc10",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b7be51e8b607298e2690a6d38b2a465b960e451c/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b7be51e8b607298e2690a6d38b2a465b960e451c/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=b7be51e8b607298e2690a6d38b2a465b960e451c",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><font color=\"#ffffff\"><a id=\"settings\" href=\"#\">Settings</a></font></span>\n+            <span><a id=\"settings\" href=\"#\"><font color=\"white\">Settings</a></font></span>\n         </div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  },
  {
    "sha": "ce8c50d15094a3c8c8858370d579479909011f14",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZThjNTBkMTUwOTRhM2M4Yzg4NTgzNzBkNTc5NDc5OTA5MDExZjE0",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:30:16Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:30:16Z"
      },
      "message": "Bugfix",
      "tree": {
        "sha": "abb4bf955f42a75561d6f56aed24de4fe484d5cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/abb4bf955f42a75561d6f56aed24de4fe484d5cb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ce8c50d15094a3c8c8858370d579479909011f14",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce8c50d15094a3c8c8858370d579479909011f14",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ce8c50d15094a3c8c8858370d579479909011f14",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce8c50d15094a3c8c8858370d579479909011f14/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b7be51e8b607298e2690a6d38b2a465b960e451c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b7be51e8b607298e2690a6d38b2a465b960e451c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b7be51e8b607298e2690a6d38b2a465b960e451c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "66fa08e7f3fcf04a114dea3f933c02a223c599e2",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ce8c50d15094a3c8c8858370d579479909011f14/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ce8c50d15094a3c8c8858370d579479909011f14/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=ce8c50d15094a3c8c8858370d579479909011f14",
        "patch": "@@ -100,8 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\"><font color=\"white\">Settings</a></font></span>\n-        </div>\n+            <span><a id=\"settings\" href=\"#\"><font color=\"white\">Settings</a></span></div>\n         <!-- Overview Page -->\n         <article id=\"overview\">\n \t\t"
      }
    ]
  },
  {
    "sha": "6915ac9d99a29b518a18482cbc1a9b08330634db",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2OTE1YWM5ZDk5YTI5YjUxOGExODQ4MmNiYzFhOWIwODMzMDYzNGRi",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:50:49Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:50:49Z"
      },
      "message": "fix",
      "tree": {
        "sha": "c9c99d9b79b710ff930c74118d1693588ddf39ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c9c99d9b79b710ff930c74118d1693588ddf39ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/6915ac9d99a29b518a18482cbc1a9b08330634db",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6915ac9d99a29b518a18482cbc1a9b08330634db",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/6915ac9d99a29b518a18482cbc1a9b08330634db",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6915ac9d99a29b518a18482cbc1a9b08330634db/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ce8c50d15094a3c8c8858370d579479909011f14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce8c50d15094a3c8c8858370d579479909011f14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce8c50d15094a3c8c8858370d579479909011f14"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "a165fe428fa55743583b84b87164e0190d11fc74",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/6915ac9d99a29b518a18482cbc1a9b08330634db/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/6915ac9d99a29b518a18482cbc1a9b08330634db/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=6915ac9d99a29b518a18482cbc1a9b08330634db",
        "patch": "@@ -198,6 +198,7 @@ div.menu span a {\n     display: block;\n     text-decoration: none;\n     color: #131218;\n+\tfont-color: #ffffff;\n \tfont-weight:bold;\n     text-transform: uppercase;\n     font-size: 12px;"
      }
    ]
  },
  {
    "sha": "8a832385178242d664d5a7fd4ad739eb503a2d00",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTgzMjM4NTE3ODI0MmQ2NjRkNWE3ZmQ0YWQ3MzllYjUwM2EyZDAw",
    "commit": {
      "author": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:51:54Z"
      },
      "committer": {
        "name": "Kammi6187",
        "email": "kammi_@gmx.net",
        "date": "2016-02-10T17:51:54Z"
      },
      "message": "fix",
      "tree": {
        "sha": "4dca635aef7520ba9cc5fb21fc518675186e020d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dca635aef7520ba9cc5fb21fc518675186e020d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a832385178242d664d5a7fd4ad739eb503a2d00",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a832385178242d664d5a7fd4ad739eb503a2d00",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a832385178242d664d5a7fd4ad739eb503a2d00",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a832385178242d664d5a7fd4ad739eb503a2d00/comments",
    "author": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Kammi6187",
      "id": 17164041,
      "node_id": "MDQ6VXNlcjE3MTY0MDQx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17164041?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Kammi6187",
      "html_url": "https://github.com/Kammi6187",
      "followers_url": "https://api.github.com/users/Kammi6187/followers",
      "following_url": "https://api.github.com/users/Kammi6187/following{/other_user}",
      "gists_url": "https://api.github.com/users/Kammi6187/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Kammi6187/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Kammi6187/subscriptions",
      "organizations_url": "https://api.github.com/users/Kammi6187/orgs",
      "repos_url": "https://api.github.com/users/Kammi6187/repos",
      "events_url": "https://api.github.com/users/Kammi6187/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Kammi6187/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6915ac9d99a29b518a18482cbc1a9b08330634db",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6915ac9d99a29b518a18482cbc1a9b08330634db",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6915ac9d99a29b518a18482cbc1a9b08330634db"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "3011808024bb0d768712b886f33957bae7bfbf1f",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a832385178242d664d5a7fd4ad739eb503a2d00/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a832385178242d664d5a7fd4ad739eb503a2d00/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=8a832385178242d664d5a7fd4ad739eb503a2d00",
        "patch": "@@ -100,7 +100,7 @@\n \n         </div>\n \t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\"><font color=\"white\">Settings</a></span></div>\n+            <span><a id=\"settings\" href=\"#\">Settings</a></span></div>\n         <!-- Overview Page -->\n         <article id=\"overview\">\n \t\t"
      }
    ]
  },
  {
    "sha": "47b14426782f90456448d6aeb44d1930534b534b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0N2IxNDQyNjc4MmY5MDQ1NjQ0OGQ2YWViNDRkMTkzMDUzNGI1MzRi",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T17:53:37Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T17:53:37Z"
      },
      "message": "up",
      "tree": {
        "sha": "0491e26348510d9b9eb5feafe7c0d0eb32ae3beb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0491e26348510d9b9eb5feafe7c0d0eb32ae3beb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/47b14426782f90456448d6aeb44d1930534b534b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47b14426782f90456448d6aeb44d1930534b534b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/47b14426782f90456448d6aeb44d1930534b534b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47b14426782f90456448d6aeb44d1930534b534b/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ce8c50d15094a3c8c8858370d579479909011f14",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ce8c50d15094a3c8c8858370d579479909011f14",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ce8c50d15094a3c8c8858370d579479909011f14"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "236c58923ea1bb65a27c778c236df628cd238c64",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47b14426782f90456448d6aeb44d1930534b534b/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47b14426782f90456448d6aeb44d1930534b534b/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=47b14426782f90456448d6aeb44d1930534b534b",
        "patch": "@@ -194,6 +194,12 @@ div.menu span {\n     padding: 5px;\n }\n \n+.customtxt {\n+\tfont-family: Courier;\n+\tcolor: red;\n+\tfont-size:20px;\n+}\n+\n div.menu span a {\n     display: block;\n     text-decoration: none;"
      },
      {
        "sha": "012d7150305909a212195d620e7ad64124beca49",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/47b14426782f90456448d6aeb44d1930534b534b/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/47b14426782f90456448d6aeb44d1930534b534b/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=47b14426782f90456448d6aeb44d1930534b534b",
        "patch": "@@ -99,8 +99,8 @@\n             </span>\n \n         </div>\n-\t\t\t        <div class=\"menu\">\n-            <span><a id=\"settings\" href=\"#\"><font color=\"white\">Settings</a></span></div>\n+\t\t\t        <div class=\"customtxt\">\n+            <span><a id=\"settings\" href=\"#\">Settings</a></span></div>\n         <!-- Overview Page -->\n         <article id=\"overview\">\n \t\t"
      }
    ]
  },
  {
    "sha": "25b0b2d7738129569248f931967b2553b6e3cc57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWIwYjJkNzczODEyOTU2OTI0OGY5MzE5NjdiMjU1M2I2ZTNjYzU3",
    "commit": {
      "author": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T17:54:20Z"
      },
      "committer": {
        "name": "Kammi",
        "email": "mail@me.com",
        "date": "2016-02-10T17:54:20Z"
      },
      "message": "Merge remote-tracking branch 'origin/master'\n\n# Conflicts:\n#\tsrc/qt/res/index.html",
      "tree": {
        "sha": "66ff537045e9760a225d5f4adbdea7cb4a63aafe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/66ff537045e9760a225d5f4adbdea7cb4a63aafe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25b0b2d7738129569248f931967b2553b6e3cc57",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25b0b2d7738129569248f931967b2553b6e3cc57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25b0b2d7738129569248f931967b2553b6e3cc57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25b0b2d7738129569248f931967b2553b6e3cc57/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "47b14426782f90456448d6aeb44d1930534b534b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/47b14426782f90456448d6aeb44d1930534b534b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/47b14426782f90456448d6aeb44d1930534b534b"
      },
      {
        "sha": "8a832385178242d664d5a7fd4ad739eb503a2d00",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a832385178242d664d5a7fd4ad739eb503a2d00",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a832385178242d664d5a7fd4ad739eb503a2d00"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ece0ec9603a73580349af53440aa2618c3fdb02e",
        "filename": "src/qt/res/css/main.css",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25b0b2d7738129569248f931967b2553b6e3cc57/src/qt/res/css/main.css",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25b0b2d7738129569248f931967b2553b6e3cc57/src/qt/res/css/main.css",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/css/main.css?ref=25b0b2d7738129569248f931967b2553b6e3cc57",
        "patch": "@@ -204,6 +204,7 @@ div.menu span a {\n     display: block;\n     text-decoration: none;\n     color: #131218;\n+\tfont-color: #ffffff;\n \tfont-weight:bold;\n     text-transform: uppercase;\n     font-size: 12px;"
      },
      {
        "sha": "e20d46f796dea77be419cf066e9bb44c6d138797",
        "filename": "src/qt/res/index.html",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25b0b2d7738129569248f931967b2553b6e3cc57/src/qt/res/index.html",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25b0b2d7738129569248f931967b2553b6e3cc57/src/qt/res/index.html",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/index.html?ref=25b0b2d7738129569248f931967b2553b6e3cc57",
        "patch": "@@ -99,7 +99,11 @@\n             </span>\n \n         </div>\n+<<<<<<< HEAD\n \t\t\t        <div class=\"customtxt\">\n+=======\n+\t\t\t        <div class=\"menu\">\n+>>>>>>> origin/master\n             <span><a id=\"settings\" href=\"#\">Settings</a></span></div>\n         <!-- Overview Page -->\n         <article id=\"overview\">"
      }
    ]
  }
]