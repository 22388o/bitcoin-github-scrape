[
  {
    "sha": "a3fe125490978a684528c40fc9a15ccdfdf2c92a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2ZlMTI1NDkwOTc4YTY4NDUyOGM0MGZjOWExNWNjZGZkZjJjOTJh",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-10-03T00:33:31Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:32:58Z"
      },
      "message": "check that a separator is found for psbt inputs, outputs, and global map\n\nGithub-Pull: #14377\nRebased-From: 4fb3388db95f408566e43ebb9736842cfbff0a7d",
      "tree": {
        "sha": "8a12ce2b26210bf1bc1d666420e6674158561763",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8a12ce2b26210bf1bc1d666420e6674158561763"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3fe125490978a684528c40fc9a15ccdfdf2c92a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fe125490978a684528c40fc9a15ccdfdf2c92a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3fe125490978a684528c40fc9a15ccdfdf2c92a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fe125490978a684528c40fc9a15ccdfdf2c92a/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3362a95be360dd798c32fc0184c0fe67da6ef43a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3362a95be360dd798c32fc0184c0fe67da6ef43a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3362a95be360dd798c32fc0184c0fe67da6ef43a"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 29,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2b45df85a06f31bb93783e260c169cff45743b22",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 27,
        "deletions": 3,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3fe125490978a684528c40fc9a15ccdfdf2c92a/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3fe125490978a684528c40fc9a15ccdfdf2c92a/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=a3fe125490978a684528c40fc9a15ccdfdf2c92a",
        "patch": "@@ -286,14 +286,18 @@ struct PSBTInput\n     template <typename Stream>\n     inline void Unserialize(Stream& s) {\n         // Read loop\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) return;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -408,6 +412,10 @@ struct PSBTInput\n                     break;\n             }\n         }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an input map\");\n+        }\n     }\n \n     template <typename Stream>\n@@ -461,14 +469,18 @@ struct PSBTOutput\n     template <typename Stream>\n     inline void Unserialize(Stream& s) {\n         // Read loop\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) return;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -513,6 +525,10 @@ struct PSBTOutput\n                 }\n             }\n         }\n+\n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of an output map\");\n+        }\n     }\n \n     template <typename Stream>\n@@ -588,14 +604,18 @@ struct PartiallySignedTransaction\n         }\n \n         // Read global data\n+        bool found_sep = false;\n         while(!s.empty()) {\n             // Read\n             std::vector<unsigned char> key;\n             s >> key;\n \n             // the key is empty if that was actually a separator byte\n             // This is a special case for key lengths 0 as those are not allowed (except for separator)\n-            if (key.empty()) break;\n+            if (key.empty()) {\n+                found_sep = true;\n+                break;\n+            }\n \n             // First byte of key is the type\n             unsigned char type = key[0];\n@@ -635,6 +655,10 @@ struct PartiallySignedTransaction\n             }\n         }\n \n+        if (!found_sep) {\n+            throw std::ios_base::failure(\"Separator is missing at the end of the global map\");\n+        }\n+\n         // Make sure that we got an unsigned tx\n         if (!tx) {\n             throw std::ios_base::failure(\"No unsigned transcation was provided\");"
      },
      {
        "sha": "bff5f23e25ba9e86c461ba18b244a0ed4d6f8f0a",
        "filename": "test/functional/data/rpc_psbt.json",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3fe125490978a684528c40fc9a15ccdfdf2c92a/test/functional/data/rpc_psbt.json",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3fe125490978a684528c40fc9a15ccdfdf2c92a/test/functional/data/rpc_psbt.json",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/data/rpc_psbt.json?ref=a3fe125490978a684528c40fc9a15ccdfdf2c92a",
        "patch": "@@ -17,7 +17,8 @@\n         \"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\"\n     ],\n     \"valid\" : [\n         \"cHNidP8BAHUCAAAAASaBcTce3/KF6Tet7qSze3gADAVmy7OtZGQXE8pCFxv2AAAAAAD+////AtPf9QUAAAAAGXapFNDFmQPFusKGh2DpD9UhpGZap2UgiKwA4fUFAAAAABepFDVF5uM7gyxHBQ8k0+65PJwDlIvHh7MuEwAAAQD9pQEBAAAAAAECiaPHHqtNIOA3G7ukzGmPopXJRjr6Ljl/hTPMti+VZ+UBAAAAFxYAFL4Y0VKpsBIDna89p95PUzSe7LmF/////4b4qkOnHf8USIk6UwpyN+9rRgi7st0tAXHmOuxqSJC0AQAAABcWABT+Pp7xp0XpdNkCxDVZQ6vLNL1TU/////8CAMLrCwAAAAAZdqkUhc/xCX/Z4Ai7NK9wnGIZeziXikiIrHL++E4sAAAAF6kUM5cluiHv1irHU6m80GfWx6ajnQWHAkcwRAIgJxK+IuAnDzlPVoMR3HyppolwuAJf3TskAinwf4pfOiQCIAGLONfc0xTnNMkna9b7QPZzMlvEuqFEyADS8vAtsnZcASED0uFWdJQbrUqZY3LLh+GFbTZSYG2YVi/jnF6efkE/IQUCSDBFAiEA0SuFLYXc2WHS9fSrZgZU327tzHlMDDPOXMMJ/7X85Y0CIGczio4OFyXBl/saiK9Z9R5E5CVbIBZ8hoQDHAXR8lkqASECI7cr7vCWXRC+B3jv7NYfysb3mk6haTkzgHNEZPhPKrMAAAAAAAAA\","
      }
    ]
  },
  {
    "sha": "cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZmRkNmIyZjZjMDFjNWM4ZGJlNDY5MWNjODRjNjViOTcwNTc4NGMz",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:18:52Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:34:20Z"
      },
      "message": "More concise conversion of CDataStream to string\n\nUse .str() instead of .data() and .size() when converting CDataStream to\na string. Uses std::string, avoiding conversion to a C string.\n\nGithub-Pull: #14588\nRebased-From: fe5d22bc676f158e8d567d71edb3451118759d62",
      "tree": {
        "sha": "5188ca63db09af206ea0b003b0de95ec5b88032d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5188ca63db09af206ea0b003b0de95ec5b88032d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3fe125490978a684528c40fc9a15ccdfdf2c92a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3fe125490978a684528c40fc9a15ccdfdf2c92a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3fe125490978a684528c40fc9a15ccdfdf2c92a"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2fdbe381455b211602761a74aefbd7176294b9b5",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
        "patch": "@@ -1662,10 +1662,10 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n             mtx.vin[i].scriptWitness = psbtx.inputs[i].final_script_witness;\n         }\n         ssTx << mtx;\n-        result.pushKV(\"hex\", HexStr(ssTx.begin(), ssTx.end()));\n+        result.pushKV(\"hex\", HexStr(ssTx.str()));\n     } else {\n         ssTx << psbtx;\n-        result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+        result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     }\n     result.pushKV(\"complete\", complete);\n "
      },
      {
        "sha": "c5cc277c4a5f9c60db0d41dac6b7d836b546ab08",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
        "patch": "@@ -4649,7 +4649,7 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n     UniValue result(UniValue::VOBJ);\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n     ssTx << psbtx;\n-    result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+    result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     result.pushKV(\"complete\", complete);\n \n     return result;\n@@ -4763,7 +4763,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     ssTx << psbtx;\n \n     UniValue result(UniValue::VOBJ);\n-    result.pushKV(\"psbt\", EncodeBase64((unsigned char*)ssTx.data(), ssTx.size()));\n+    result.pushKV(\"psbt\", EncodeBase64(ssTx.str()));\n     result.pushKV(\"fee\", ValueFromAmount(fee));\n     result.pushKV(\"changepos\", change_position);\n     return result;"
      }
    ]
  },
  {
    "sha": "a9eab081d5a31cec3138685fef21e428f833db03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWVhYjA4MWQ1YTMxY2VjMzEzODY4NWZlZjIxZTQyOGY4MzNkYjAz",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:24:55Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:34:57Z"
      },
      "message": "Remove redundant txConst parameter to FillPSBT\n\nGithub-Pull: #14588\nRebased-From: 4f3f5cb4b142f0fcb36241fa33b52a257901dbee",
      "tree": {
        "sha": "b21f22ed0b6b68752a968f7569c824f6654b6844",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b21f22ed0b6b68752a968f7569c824f6654b6844"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9eab081d5a31cec3138685fef21e428f833db03",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9eab081d5a31cec3138685fef21e428f833db03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9eab081d5a31cec3138685fef21e428f833db03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9eab081d5a31cec3138685fef21e428f833db03/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cfdd6b2f6c01c5c8dbe4691cc84c65b9705784c3"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 9,
      "deletions": 21
    },
    "files": [
      {
        "sha": "24df23edd13473335cb1b002bfcc88cc82664242",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 15,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a9eab081d5a31cec3138685fef21e428f833db03",
        "patch": "@@ -4502,13 +4502,13 @@ void AddKeypathToMap(const CWallet* pwallet, const CKeyID& keyID, std::map<CPubK\n     hd_keypaths.emplace(vchPubKey, keypath);\n }\n \n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const CTransaction* txConst, int sighash_type, bool sign, bool bip32derivs)\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type, bool sign, bool bip32derivs)\n {\n     LOCK(pwallet->cs_wallet);\n     // Get all of the previous transactions\n     bool complete = true;\n-    for (unsigned int i = 0; i < txConst->vin.size(); ++i) {\n-        const CTxIn& txin = txConst->vin[i];\n+    for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n+        const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n \n         // If we don't know about this input, skip it and let someone else deal with it\n@@ -4559,8 +4559,8 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const C\n     }\n \n     // Fill in the bip32 keypaths and redeemscripts for the outputs so that hardware wallets can identify change\n-    for (unsigned int i = 0; i < txConst->vout.size(); ++i) {\n-        const CTxOut& out = txConst->vout.at(i);\n+    for (unsigned int i = 0; i < psbtx.tx->vout.size(); ++i) {\n+        const CTxOut& out = psbtx.tx->vout.at(i);\n         PSBTOutput& psbt_out = psbtx.outputs.at(i);\n \n         // Dummy tx so we can use ProduceSignature to get stuff out\n@@ -4637,14 +4637,10 @@ UniValue walletprocesspsbt(const JSONRPCRequest& request)\n     // Get the sighash type\n     int nHashType = ParseSighashString(request.params[2]);\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with our data and also sign\n     bool sign = request.params[1].isNull() ? true : request.params[1].get_bool();\n     bool bip32derivs = request.params[3].isNull() ? false : request.params[3].get_bool();\n-    bool complete = FillPSBT(pwallet, psbtx, &txConst, nHashType, sign, bip32derivs);\n+    bool complete = FillPSBT(pwallet, psbtx, nHashType, sign, bip32derivs);\n \n     UniValue result(UniValue::VOBJ);\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);\n@@ -4750,13 +4746,9 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n         psbtx.outputs.push_back(PSBTOutput());\n     }\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with out data but don't sign\n     bool bip32derivs = request.params[4].isNull() ? false : request.params[4].get_bool();\n-    FillPSBT(pwallet, psbtx, &txConst, 1, false, bip32derivs);\n+    FillPSBT(pwallet, psbtx, 1, false, bip32derivs);\n \n     // Serialize the PSBT\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      },
      {
        "sha": "54477ef3a6ddb310dd97e38f89f9e7da03a89fd3",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=a9eab081d5a31cec3138685fef21e428f833db03",
        "patch": "@@ -30,5 +30,5 @@ bool EnsureWalletIsAvailable(CWallet *, bool avoidException);\n \n UniValue getaddressinfo(const JSONRPCRequest& request);\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request);\n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, const CTransaction* txConst, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n #endif //BITCOIN_WALLET_RPCWALLET_H"
      },
      {
        "sha": "94b5f2f374cebf33bcd079512182309e23a4e94d",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9eab081d5a31cec3138685fef21e428f833db03/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=a9eab081d5a31cec3138685fef21e428f833db03",
        "patch": "@@ -59,12 +59,8 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     CDataStream ssData(ParseHex(\"70736274ff01009a020000000258e87a21b56daf0c23be8e7070456c336f7cbaa5c8757924f545887bb2abdd750000000000ffffffff838d0427d0ec650a68aa46bb0b098aea4422c071b2ca78352a077959d07cea1d0100000000ffffffff0270aaf00800000000160014d85c2b71d0060b09c9886aeb815e50991dda124d00e1f5050000000016001400aea9a2e5f0f876a588df5546e8742d1d87008f000000000000000000\"), SER_NETWORK, PROTOCOL_VERSION);\n     ssData >> psbtx;\n \n-    // Use CTransaction for the constant parts of the\n-    // transaction to avoid rehashing.\n-    const CTransaction txConst(*psbtx.tx);\n-\n     // Fill transaction with our data\n-    FillPSBT(&m_wallet, psbtx, &txConst, 1, false, true);\n+    FillPSBT(&m_wallet, psbtx, 1, false, true);\n \n     // Get the final tx\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      }
    ]
  },
  {
    "sha": "70ee1f8709a54a9aeac004d8589faa08f665587a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3MGVlMWY4NzA5YTU0YTlhZWFjMDA0ZDg1ODlmYWEwOGY2NjU1ODdh",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:26:16Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:35:34Z"
      },
      "message": "New PartiallySignedTransaction constructor from CTransction\n\nNew constructor that creates a PartiallySignedTransaction from a\nCTransaction, automatically sizing the inputs and outputs vectors for\nconvenience.\n\nGithub-Pull: #14588\nRebased-From: 65166d4cf828909dc4bc49dd68a58103d015f1fd",
      "tree": {
        "sha": "e4354a95bd1d8e8737fb5dd50e11fc3e436308fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e4354a95bd1d8e8737fb5dd50e11fc3e436308fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/70ee1f8709a54a9aeac004d8589faa08f665587a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ee1f8709a54a9aeac004d8589faa08f665587a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/70ee1f8709a54a9aeac004d8589faa08f665587a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ee1f8709a54a9aeac004d8589faa08f665587a/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9eab081d5a31cec3138685fef21e428f833db03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9eab081d5a31cec3138685fef21e428f833db03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9eab081d5a31cec3138685fef21e428f833db03"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "190c0bf6878bf239db96eebb37432b3cebeb293d",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70ee1f8709a54a9aeac004d8589faa08f665587a/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70ee1f8709a54a9aeac004d8589faa08f665587a/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=70ee1f8709a54a9aeac004d8589faa08f665587a",
        "patch": "@@ -491,6 +491,12 @@ bool IsSolvable(const SigningProvider& provider, const CScript& script)\n     return false;\n }\n \n+PartiallySignedTransaction::PartiallySignedTransaction(const CTransaction& tx) : tx(tx)\n+{\n+    inputs.resize(tx.vin.size());\n+    outputs.resize(tx.vout.size());\n+}\n+\n bool PartiallySignedTransaction::IsNull() const\n {\n     return !tx && inputs.empty() && outputs.empty() && unknown.empty();"
      },
      {
        "sha": "79cd6dc53f8b69c66b75ce077bf41f8e1506cc3b",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70ee1f8709a54a9aeac004d8589faa08f665587a/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70ee1f8709a54a9aeac004d8589faa08f665587a/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=70ee1f8709a54a9aeac004d8589faa08f665587a",
        "patch": "@@ -550,6 +550,7 @@ struct PartiallySignedTransaction\n     bool IsSane() const;\n     PartiallySignedTransaction() {}\n     PartiallySignedTransaction(const PartiallySignedTransaction& psbt_in) : tx(psbt_in.tx), inputs(psbt_in.inputs), outputs(psbt_in.outputs), unknown(psbt_in.unknown) {}\n+    explicit PartiallySignedTransaction(const CTransaction& tx);\n \n     // Only checks if they refer to the same transaction\n     friend bool operator==(const PartiallySignedTransaction& a, const PartiallySignedTransaction &b)"
      },
      {
        "sha": "ec103c67637c7c78cc868ff8dccd93accd7a7cd8",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/70ee1f8709a54a9aeac004d8589faa08f665587a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/70ee1f8709a54a9aeac004d8589faa08f665587a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=70ee1f8709a54a9aeac004d8589faa08f665587a",
        "patch": "@@ -4737,14 +4737,7 @@ UniValue walletcreatefundedpsbt(const JSONRPCRequest& request)\n     FundTransaction(pwallet, rawTx, fee, change_position, request.params[3]);\n \n     // Make a blank psbt\n-    PartiallySignedTransaction psbtx;\n-    psbtx.tx = rawTx;\n-    for (unsigned int i = 0; i < rawTx.vin.size(); ++i) {\n-        psbtx.inputs.push_back(PSBTInput());\n-    }\n-    for (unsigned int i = 0; i < rawTx.vout.size(); ++i) {\n-        psbtx.outputs.push_back(PSBTOutput());\n-    }\n+    PartiallySignedTransaction psbtx(rawTx);\n \n     // Fill transaction with out data but don't sign\n     bool bip32derivs = request.params[4].isNull() ? false : request.params[4].get_bool();"
      }
    ]
  },
  {
    "sha": "39ece4fc2807b3442759d879985146ac0de9742d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOWVjZTRmYzI4MDdiMzQ0Mjc1OWQ4Nzk5ODUxNDZhYzBkZTk3NDJk",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:28:48Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:36:08Z"
      },
      "message": "Add bool PSBTInputSigned\n\nRefactor out a \"PSBTInputSigned\" function to check if a PSBT is signed,\nfor use in subsequent commits.\n\nAlso improve a related comment.\n\nGitHub-Pull: #14588\nRebased-From: 53e6fffb8f5b10f94708d33d667a67cb91c2d09d",
      "tree": {
        "sha": "d1cf0af99a4d6bdca38f67f0fb7b05b686aff61d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1cf0af99a4d6bdca38f67f0fb7b05b686aff61d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/39ece4fc2807b3442759d879985146ac0de9742d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39ece4fc2807b3442759d879985146ac0de9742d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/39ece4fc2807b3442759d879985146ac0de9742d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39ece4fc2807b3442759d879985146ac0de9742d/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "70ee1f8709a54a9aeac004d8589faa08f665587a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/70ee1f8709a54a9aeac004d8589faa08f665587a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/70ee1f8709a54a9aeac004d8589faa08f665587a"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 14,
      "deletions": 4
    },
    "files": [
      {
        "sha": "5df39f9ba4abb93b54eabebebbfd60779bd90b71",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39ece4fc2807b3442759d879985146ac0de9742d/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39ece4fc2807b3442759d879985146ac0de9742d/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=39ece4fc2807b3442759d879985146ac0de9742d",
        "patch": "@@ -1643,13 +1643,16 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, strprintf(\"TX decode failed %s\", error));\n     }\n \n-    // Get all of the previous transactions\n+    // Finalize input signatures -- in case we have partial signatures that add up to a complete\n+    //   signature, but have not combined them yet (e.g. because the combiner that created this\n+    //   PartiallySignedTransaction did not understand them), this will combine them into a final\n+    //   script.\n     bool complete = true;\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n         PSBTInput& input = psbtx.inputs.at(i);\n \n         SignatureData sigdata;\n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, sigdata, i, 1);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, sigdata, i, SIGHASH_ALL);\n     }\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "945e1623551c223690457caff7d68a8e55e35679",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39ece4fc2807b3442759d879985146ac0de9742d/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39ece4fc2807b3442759d879985146ac0de9742d/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=39ece4fc2807b3442759d879985146ac0de9742d",
        "patch": "@@ -233,10 +233,14 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n     return sigdata.complete;\n }\n \n+bool PSBTInputSigned(PSBTInput& input)\n+{\n+    return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n+}\n+\n bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash)\n {\n-    // if this input has a final scriptsig or scriptwitness, don't do anything with it\n-    if (!input.final_script_sig.empty() || !input.final_script_witness.IsNull()) {\n+    if (PSBTInputSigned(input)) {\n         return true;\n     }\n "
      },
      {
        "sha": "ebc742c09d1dd6c7281eaf46a8c4bbfe1ce908d8",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/39ece4fc2807b3442759d879985146ac0de9742d/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/39ece4fc2807b3442759d879985146ac0de9742d/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=39ece4fc2807b3442759d879985146ac0de9742d",
        "patch": "@@ -714,6 +714,9 @@ bool ProduceSignature(const SigningProvider& provider, const BaseSignatureCreato\n bool SignSignature(const SigningProvider &provider, const CScript& fromPubKey, CMutableTransaction& txTo, unsigned int nIn, const CAmount& amount, int nHashType);\n bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom, CMutableTransaction& txTo, unsigned int nIn, int nHashType);\n \n+/** Checks whether a PSBTInput is already signed. */\n+bool PSBTInputSigned(PSBTInput& input);\n+\n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);\n "
      }
    ]
  },
  {
    "sha": "ad94165db91c0416634459e18f173c5cd063dc55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDk0MTY1ZGI5MWMwNDE2NjM0NDU5ZTE4ZjE3M2M1Y2QwNjNkYzU1",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:30:50Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:36:37Z"
      },
      "message": "Simplify arguments to SignPSBTInput\n\nRemove redundant arguments to SignPSBTInput -- since it needs several\nbits of the PartiallySignedTransaction, pass in a reference instead of\ndoing it piecemeal. This saves us having to pass in both a PSBTInput and\nits index, as well as having to pass in the CTransaction. Also avoid\nredundantly passing the sighash_type, which is contained in the\nPSBTInput already.\n\nGithub-Pull: #14588\nRebased-From: 0f5bda2bd941686620ef0eb90bd7ed973cc7ef73",
      "tree": {
        "sha": "ba753d1419aa89bc6f44a74d70f3af4d74650b54",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ba753d1419aa89bc6f44a74d70f3af4d74650b54"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad94165db91c0416634459e18f173c5cd063dc55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad94165db91c0416634459e18f173c5cd063dc55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad94165db91c0416634459e18f173c5cd063dc55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad94165db91c0416634459e18f173c5cd063dc55/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "39ece4fc2807b3442759d879985146ac0de9742d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/39ece4fc2807b3442759d879985146ac0de9742d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/39ece4fc2807b3442759d879985146ac0de9742d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7de3638f4e2ac4d0e6b74610956274852170555c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 3,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -1649,10 +1649,8 @@ UniValue finalizepsbt(const JSONRPCRequest& request)\n     //   script.\n     bool complete = true;\n     for (unsigned int i = 0; i < psbtx.tx->vin.size(); ++i) {\n-        PSBTInput& input = psbtx.inputs.at(i);\n-\n         SignatureData sigdata;\n-        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, *psbtx.tx, input, sigdata, i, SIGHASH_ALL);\n+        complete &= SignPSBTInput(DUMMY_SIGNING_PROVIDER, psbtx, sigdata, i, SIGHASH_ALL);\n     }\n \n     UniValue result(UniValue::VOBJ);"
      },
      {
        "sha": "8bc142f6e1e0e4b5a07ebd287656e024bf7ed9c5",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -238,8 +238,11 @@ bool PSBTInputSigned(PSBTInput& input)\n     return !input.final_script_sig.empty() || !input.final_script_witness.IsNull();\n }\n \n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash)\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, SignatureData& sigdata, int index, int sighash)\n {\n+    PSBTInput& input = psbt.inputs.at(index);\n+    const CMutableTransaction& tx = *psbt.tx;\n+\n     if (PSBTInputSigned(input)) {\n         return true;\n     }"
      },
      {
        "sha": "f24d77cb310c861d6ad2fb1ddd8daae95c517ef4",
        "filename": "src/script/sign.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/script/sign.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/script/sign.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.h?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -718,7 +718,7 @@ bool SignSignature(const SigningProvider &provider, const CTransaction& txFrom,\n bool PSBTInputSigned(PSBTInput& input);\n \n /** Signs a PSBTInput, verifying that all provided data matches what is being signed. */\n-bool SignPSBTInput(const SigningProvider& provider, const CMutableTransaction& tx, PSBTInput& input, SignatureData& sigdata, int index, int sighash = 1);\n+bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction& psbt, SignatureData& sigdata, int index, int sighash = SIGHASH_ALL);\n \n /** Extract signature data from a transaction input, and insert it. */\n SignatureData DataFromTransaction(const CMutableTransaction& tx, unsigned int nIn, const CTxOut& txout);"
      },
      {
        "sha": "926902708a848725d0fe17c6c1470f997169b41f",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -4529,9 +4529,9 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sig\n \n         SignatureData sigdata;\n         if (sign) {\n-            complete &= SignPSBTInput(*pwallet, *psbtx.tx, input, sigdata, i, sighash_type);\n+            complete &= SignPSBTInput(*pwallet, psbtx, sigdata, i, sighash_type);\n         } else {\n-            complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), *psbtx.tx, input, sigdata, i, sighash_type);\n+            complete &= SignPSBTInput(PublicOnlySigningProvider(pwallet), psbtx, sigdata, i, sighash_type);\n         }\n \n         if (sigdata.witness) {"
      },
      {
        "sha": "abd7750874632beb6dd179ae0a3ab72c4c682e6a",
        "filename": "src/wallet/rpcwallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/rpcwallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/rpcwallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.h?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -30,5 +30,5 @@ bool EnsureWalletIsAvailable(CWallet *, bool avoidException);\n \n UniValue getaddressinfo(const JSONRPCRequest& request);\n UniValue signrawtransactionwithwallet(const JSONRPCRequest& request);\n-bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1, bool sign = true, bool bip32derivs = false);\n+bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sighash_type = 1 /* SIGHASH_ALL */, bool sign = true, bool bip32derivs = false);\n #endif //BITCOIN_WALLET_RPCWALLET_H"
      },
      {
        "sha": "8d46718a7dc0d78dde5850de360fa09f0d476942",
        "filename": "src/wallet/test/psbt_wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/test/psbt_wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad94165db91c0416634459e18f173c5cd063dc55/src/wallet/test/psbt_wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/psbt_wallet_tests.cpp?ref=ad94165db91c0416634459e18f173c5cd063dc55",
        "patch": "@@ -60,7 +60,7 @@ BOOST_AUTO_TEST_CASE(psbt_updater_test)\n     ssData >> psbtx;\n \n     // Fill transaction with our data\n-    FillPSBT(&m_wallet, psbtx, 1, false, true);\n+    FillPSBT(&m_wallet, psbtx, SIGHASH_ALL, false, true);\n \n     // Get the final tx\n     CDataStream ssTx(SER_NETWORK, PROTOCOL_VERSION);"
      }
    ]
  },
  {
    "sha": "db445d4e5a25ff13de014dbbf43bb99cde8b8769",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjQ0NWQ0ZTVhMjVmZjEzZGUwMTRkYmJmNDNiYjk5Y2RlOGI4NzY5",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-26T22:31:41Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:37:08Z"
      },
      "message": "Refactor PSBTInput signing to enforce invariant\n\nRefactor the process of PSBTInput signing to enforce the invariant that\na PSBTInput always has _either_ a witness_utxo or a non_witness_utxo,\nnever both.\n\nThis simplifies the logic of SignPSBTInput slightly, since it no longer\nhas to deal with the \"both\" case. When calling it, we now give it, in\norder of preference: (1) whichever of the utxo fields was already\npresent in the PSBT we received, or (2) if neither, the\nnon_witness_utxo field, which is just a copy of the input transaction,\nwhich we get from the wallet.\n\nSignPSBTInput no longer has to remove one of the two fields; instead, it\nwill check if we have a witness signature, and if so, it will replace\nthe non_witness_utxo with the witness_utxo (which is smaller, as it is\njust a copy of the output being spent.)\n\nAdd PSBTInput::IsSane checks in two more places, which checks for\nboth utxo fields being present; we will now give an RPC error early on\nif we are supplied such a malformed PSBT to fill in.\n\nAlso add a check to FillPSBT, to avoid touching any input that is\nalready signed. (This is now redundant, since we should no longer\npotentially harm an already-signed input, but it's harmless.)\n\nfixes #14473\n\nGithub-Pull: #14588",
      "tree": {
        "sha": "133cfa34c9677e5d5c2554c0283164c4fa2fea50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/133cfa34c9677e5d5c2554c0283164c4fa2fea50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db445d4e5a25ff13de014dbbf43bb99cde8b8769",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db445d4e5a25ff13de014dbbf43bb99cde8b8769",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db445d4e5a25ff13de014dbbf43bb99cde8b8769",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db445d4e5a25ff13de014dbbf43bb99cde8b8769/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ad94165db91c0416634459e18f173c5cd063dc55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad94165db91c0416634459e18f173c5cd063dc55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ad94165db91c0416634459e18f173c5cd063dc55"
      }
    ],
    "stats": {
      "total": 62,
      "additions": 37,
      "deletions": 25
    },
    "files": [
      {
        "sha": "f97d6a25332cea24777d105e596a3082e4a66346",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 18,
        "deletions": 7,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db445d4e5a25ff13de014dbbf43bb99cde8b8769/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db445d4e5a25ff13de014dbbf43bb99cde8b8769/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=db445d4e5a25ff13de014dbbf43bb99cde8b8769",
        "patch": "@@ -253,15 +253,19 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     // Get UTXO\n     bool require_witness_sig = false;\n     CTxOut utxo;\n+\n+    // Verify input sanity, which checks that at most one of witness or non-witness utxos is provided.\n+    if (!input.IsSane()) {\n+        return false;\n+    }\n+\n     if (input.non_witness_utxo) {\n         // If we're taking our information from a non-witness UTXO, verify that it matches the prevout.\n-        if (input.non_witness_utxo->GetHash() != tx.vin[index].prevout.hash) return false;\n-        // If both witness and non-witness UTXO are provided, verify that they match. This check shouldn't\n-        // matter, as the PSBT deserializer enforces only one of both is provided, and the only way both\n-        // can be present is when they're added simultaneously by FillPSBT (in which case they always match).\n-        // Still, check in order to not rely on callers to enforce this.\n-        if (!input.witness_utxo.IsNull() && input.non_witness_utxo->vout[tx.vin[index].prevout.n] != input.witness_utxo) return false;\n-        utxo = input.non_witness_utxo->vout[tx.vin[index].prevout.n];\n+        COutPoint prevout = tx.vin[index].prevout;\n+        if (input.non_witness_utxo->GetHash() != prevout.hash) {\n+            return false;\n+        }\n+        utxo = input.non_witness_utxo->vout[prevout.n];\n     } else if (!input.witness_utxo.IsNull()) {\n         utxo = input.witness_utxo;\n         // When we're taking our information from a witness UTXO, we can't verify it is actually data from\n@@ -279,6 +283,13 @@ bool SignPSBTInput(const SigningProvider& provider, PartiallySignedTransaction&\n     // Verify that a witness signature was produced in case one was required.\n     if (require_witness_sig && !sigdata.witness) return false;\n     input.FromSignatureData(sigdata);\n+\n+    // If we have a witness signature, use the smaller witness UTXO.\n+    if (sigdata.witness) {\n+        input.witness_utxo = utxo;\n+        input.non_witness_utxo = nullptr;\n+    }\n+\n     return sig_complete;\n }\n "
      },
      {
        "sha": "6400b4470ffe0cda83a545b28181ddc938d9870c",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 18,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db445d4e5a25ff13de014dbbf43bb99cde8b8769/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db445d4e5a25ff13de014dbbf43bb99cde8b8769/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=db445d4e5a25ff13de014dbbf43bb99cde8b8769",
        "patch": "@@ -4511,15 +4511,25 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sig\n         const CTxIn& txin = psbtx.tx->vin[i];\n         PSBTInput& input = psbtx.inputs.at(i);\n \n-        // If we don't know about this input, skip it and let someone else deal with it\n-        const uint256& txhash = txin.prevout.hash;\n-        const auto it = pwallet->mapWallet.find(txhash);\n-        if (it != pwallet->mapWallet.end()) {\n-            const CWalletTx& wtx = it->second;\n-            CTxOut utxo = wtx.tx->vout[txin.prevout.n];\n-            // Update both UTXOs from the wallet.\n-            input.non_witness_utxo = wtx.tx;\n-            input.witness_utxo = utxo;\n+        if (PSBTInputSigned(input)) {\n+            continue;\n+        }\n+\n+        // Verify input looks sane. This will check that we have at most one uxto, witness or non-witness.\n+        if (!input.IsSane()) {\n+            throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"PSBT input is not sane.\");\n+        }\n+\n+        // If we have no utxo, grab it from the wallet.\n+        if (!input.non_witness_utxo && input.witness_utxo.IsNull()) {\n+            const uint256& txhash = txin.prevout.hash;\n+            const auto it = pwallet->mapWallet.find(txhash);\n+            if (it != pwallet->mapWallet.end()) {\n+                const CWalletTx& wtx = it->second;\n+                // We only need the non_witness_utxo, which is a superset of the witness_utxo.\n+                //   The signing code will switch to the smaller witness_utxo if this is ok.\n+                input.non_witness_utxo = wtx.tx;\n+            }\n         }\n \n         // Get the Sighash type\n@@ -4541,15 +4551,6 @@ bool FillPSBT(const CWallet* pwallet, PartiallySignedTransaction& psbtx, int sig\n             }\n         }\n \n-        // If both UTXO types are present, drop the unnecessary one.\n-        if (input.non_witness_utxo && !input.witness_utxo.IsNull()) {\n-            if (sigdata.witness) {\n-                input.non_witness_utxo = nullptr;\n-            } else {\n-                input.witness_utxo.SetNull();\n-            }\n-        }\n-\n         // Get public key paths\n         if (bip32derivs) {\n             for (const auto& pubkey_it : sigdata.misc_pubkeys) {"
      }
    ]
  },
  {
    "sha": "ff56bb9b44387f7e20ae7de59087cf19ea216726",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjU2YmI5YjQ0Mzg3ZjdlMjBhZTdkZTU5MDg3Y2YxOWVhMjE2NzI2",
    "commit": {
      "author": {
        "name": "Glenn Willen",
        "email": "gwillen@nerdnet.org",
        "date": "2018-10-30T07:41:19Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:37:22Z"
      },
      "message": "Add regression test for PSBT signing bug #14473\n\nGithub-Pull: #14588\nRebased-From: e13fea975d5e4ae961faba36379a1cdaf9e50c1c",
      "tree": {
        "sha": "993c57d9fe4689d3e14dcba795361a3ec2308e4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/993c57d9fe4689d3e14dcba795361a3ec2308e4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff56bb9b44387f7e20ae7de59087cf19ea216726",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff56bb9b44387f7e20ae7de59087cf19ea216726",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff56bb9b44387f7e20ae7de59087cf19ea216726",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff56bb9b44387f7e20ae7de59087cf19ea216726/comments",
    "author": {
      "login": "gwillen",
      "id": 458997,
      "node_id": "MDQ6VXNlcjQ1ODk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/458997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gwillen",
      "html_url": "https://github.com/gwillen",
      "followers_url": "https://api.github.com/users/gwillen/followers",
      "following_url": "https://api.github.com/users/gwillen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gwillen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gwillen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gwillen/subscriptions",
      "organizations_url": "https://api.github.com/users/gwillen/orgs",
      "repos_url": "https://api.github.com/users/gwillen/repos",
      "events_url": "https://api.github.com/users/gwillen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gwillen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "db445d4e5a25ff13de014dbbf43bb99cde8b8769",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db445d4e5a25ff13de014dbbf43bb99cde8b8769",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/db445d4e5a25ff13de014dbbf43bb99cde8b8769"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 7,
      "deletions": 0
    },
    "files": [
      {
        "sha": "92132addba4aef32dac7174a6b446d3c37479f07",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff56bb9b44387f7e20ae7de59087cf19ea216726/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff56bb9b44387f7e20ae7de59087cf19ea216726/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=ff56bb9b44387f7e20ae7de59087cf19ea216726",
        "patch": "@@ -168,6 +168,13 @@ def run_test(self):\n             assert tx_in[\"sequence\"] > MAX_BIP125_RBF_SEQUENCE\n         assert_equal(decoded_psbt[\"tx\"][\"locktime\"], 0)\n \n+        # Regression test for 14473 (mishandling of already-signed witness transaction):\n+        psbtx_info = self.nodes[0].walletcreatefundedpsbt([{\"txid\":unspent[\"txid\"], \"vout\":unspent[\"vout\"]}], [{self.nodes[2].getnewaddress():unspent[\"amount\"]+1}])\n+        complete_psbt = self.nodes[0].walletprocesspsbt(psbtx_info[\"psbt\"])\n+        double_processed_psbt = self.nodes[0].walletprocesspsbt(complete_psbt[\"psbt\"])\n+        assert_equal(complete_psbt, double_processed_psbt)\n+        # We don't care about the decode result, but decoding must succeed.\n+        self.nodes[0].decodepsbt(double_processed_psbt[\"psbt\"])\n \n         # Make sure change address wallet does not have P2SH innerscript access to results in success\n         # when attempting BnB coin selection"
      }
    ]
  },
  {
    "sha": "7bee41452bee4d10ab075999580853bdc3431e8b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmVlNDE0NTJiZWU0ZDEwYWIwNzU5OTk1ODA4NTNiZGMzNDMxZThi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-09-20T18:43:06Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2018-12-03T18:37:52Z"
      },
      "message": "Add test for conversion from non-witness to witness UTXO\n\nGithub-Pull: #14197\nRebased-From: 862d159d635c1de219d94e030b186a745fe28eb9",
      "tree": {
        "sha": "0fa4809b3d6c3bebb0a49a63cb45ea5d560af0de",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0fa4809b3d6c3bebb0a49a63cb45ea5d560af0de"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bee41452bee4d10ab075999580853bdc3431e8b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bee41452bee4d10ab075999580853bdc3431e8b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bee41452bee4d10ab075999580853bdc3431e8b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bee41452bee4d10ab075999580853bdc3431e8b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ff56bb9b44387f7e20ae7de59087cf19ea216726",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff56bb9b44387f7e20ae7de59087cf19ea216726",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ff56bb9b44387f7e20ae7de59087cf19ea216726"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 46,
      "deletions": 1
    },
    "files": [
      {
        "sha": "a31719088f8211b621b8d32b78853f41675fcb7a",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 46,
        "deletions": 1,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bee41452bee4d10ab075999580853bdc3431e8b/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bee41452bee4d10ab075999580853bdc3431e8b/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=7bee41452bee4d10ab075999580853bdc3431e8b",
        "patch": "@@ -6,7 +6,7 @@\n \"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n-from test_framework.util import assert_equal, assert_raises_rpc_error, find_output\n+from test_framework.util import assert_equal, assert_raises_rpc_error, find_output, disconnect_nodes, connect_nodes_bi, sync_blocks\n \n import json\n import os\n@@ -23,6 +23,45 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n+    def test_utxo_conversion(self):\n+        mining_node = self.nodes[2]\n+        offline_node = self.nodes[0]\n+        online_node = self.nodes[1]\n+\n+        # Disconnect offline node from others\n+        disconnect_nodes(offline_node, 1)\n+        disconnect_nodes(online_node, 0)\n+        disconnect_nodes(offline_node, 2)\n+        disconnect_nodes(mining_node, 0)\n+\n+        # Mine a transaction that credits the offline address\n+        offline_addr = offline_node.getnewaddress(address_type=\"p2sh-segwit\")\n+        online_addr = online_node.getnewaddress(address_type=\"p2sh-segwit\")\n+        online_node.importaddress(offline_addr, \"\", False)\n+        mining_node.sendtoaddress(address=offline_addr, amount=1.0)\n+        mining_node.generate(nblocks=1)\n+        sync_blocks([mining_node, online_node])\n+\n+        # Construct an unsigned PSBT on the online node (who doesn't know the output is Segwit, so will include a non-witness UTXO)\n+        utxos = online_node.listunspent(addresses=[offline_addr])\n+        raw = online_node.createrawtransaction([{\"txid\":utxos[0][\"txid\"], \"vout\":utxos[0][\"vout\"]}],[{online_addr:0.9999}])\n+        psbt = online_node.walletprocesspsbt(online_node.converttopsbt(raw))[\"psbt\"]\n+        assert(\"non_witness_utxo\" in mining_node.decodepsbt(psbt)[\"inputs\"][0])\n+\n+        # Have the offline node sign the PSBT (which will update the UTXO to segwit)\n+        signed_psbt = offline_node.walletprocesspsbt(psbt)[\"psbt\"]\n+        assert(\"witness_utxo\" in mining_node.decodepsbt(signed_psbt)[\"inputs\"][0])\n+\n+        # Make sure we can mine the resulting transaction\n+        txid = mining_node.sendrawtransaction(mining_node.finalizepsbt(signed_psbt)[\"hex\"])\n+        mining_node.generate(1)\n+        sync_blocks([mining_node, online_node])\n+        assert_equal(online_node.gettxout(txid,0)[\"confirmations\"], 1)\n+\n+        # Reconnect\n+        connect_nodes_bi(self.nodes, 0, 1)\n+        connect_nodes_bi(self.nodes, 0, 2)\n+\n     def run_test(self):\n         # Create and fund a raw tx for sending 10 BTC\n         psbtx1 = self.nodes[0].walletcreatefundedpsbt([], {self.nodes[2].getnewaddress():10})['psbt']\n@@ -235,6 +274,12 @@ def run_test(self):\n             extracted = self.nodes[2].finalizepsbt(extractor['extract'], True)['hex']\n             assert_equal(extracted, extractor['result'])\n \n+        # Unload extra wallets\n+        for i, signer in enumerate(signers):\n+            self.nodes[2].unloadwallet(\"wallet{}\".format(i))\n+\n+        self.test_utxo_conversion()\n+\n \n if __name__ == '__main__':\n     PSBTTest().main()"
      }
    ]
  }
]