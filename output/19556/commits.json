[
  {
    "sha": "eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWVlMTEwNGQ3OGViNTlhNTgyZWUxNzA5ZmY0YWMyYzMzZWUxMTkw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-19T07:07:54Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-09-05T14:24:08Z"
      },
      "message": "Remove mempool global from init\n\nCan be reviewed with the git diff options\n\n--color-moved=dimmed-zebra --color-moved-ws=ignore-all-space --ignore-all-space",
      "tree": {
        "sha": "254a4c983b57d69a7f2bcec663d5b5120ef79aad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/254a4c983b57d69a7f2bcec663d5b5120ef79aad"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUisrAv+PEa0ehZXN09h3whfqxS17zs2Hclz0tq+mxWNEpuJxzy76mw60ffDgJkT\nSYv/sQCLC+OyLDPOaACvdJMmbAOPmCd2qz/i050BKDr9XD0uTIB5IozffxyBibM9\nQMSRlVvU/3Qm13U4sOEgoQfBPfQc4rbQSSEEWGK7ub1S1B8aAUZkReULR/Qm9HoX\nTIV6JNU/CrInkEtg1dam2oVij0qn9dyHaQhunxMTeasF+IBTD+nkxUXHaEEKK1cq\nGrFD+/tPRgG7KPTJqaQZtC2gtpLbU7T2if9etc6IP8+xz6AAu5g4/kjDarriuxY5\nnzEZdzdwZjmXXT+V5P6SKb8L5GbOlIQiWkblU5K9mYSWCRKNb5VSXDpazkp5TVuY\ni+lAjZCATuO2pf3VMifnh/0JdBGoRsfDhmY52TvoPqqOXfoUiJcXHQrBB0/cyhBY\nXrivozQmwb5ikKCblhBABz/hyTJ8ljSN92/vK9LDY7uYVJl50SgmcctsXRnw9f57\nUlorCkuE\n=IC+E\n-----END PGP SIGNATURE-----",
        "payload": "tree 254a4c983b57d69a7f2bcec663d5b5120ef79aad\nparent 3ba25e3bdde3464eed5d2743d68546e48b005544\nauthor MarcoFalke <falke.marco@gmail.com> 1595142474 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1599315848 +0200\n\nRemove mempool global from init\n\nCan be reviewed with the git diff options\n\n--color-moved=dimmed-zebra --color-moved-ws=ignore-all-space --ignore-all-space\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3ba25e3bdde3464eed5d2743d68546e48b005544",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3ba25e3bdde3464eed5d2743d68546e48b005544",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3ba25e3bdde3464eed5d2743d68546e48b005544"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 23,
      "deletions": 12
    },
    "files": [
      {
        "sha": "60042c682b0b1dd8a88451a2f28debf696f3416a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
        "patch": "@@ -187,7 +187,7 @@ void Shutdown(NodeContext& node)\n     /// Be sure that anything that writes files or flushes caches only does this if the respective\n     /// module was initialized.\n     util::ThreadRename(\"shutoff\");\n-    mempool.AddTransactionsUpdated(1);\n+    if (node.mempool) node.mempool->AddTransactionsUpdated(1);\n \n     StopHTTPRPC();\n     StopREST();\n@@ -231,8 +231,8 @@ void Shutdown(NodeContext& node)\n     node.connman.reset();\n     node.banman.reset();\n \n-    if (::mempool.IsLoaded() && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n-        DumpMempool(::mempool);\n+    if (node.mempool && node.mempool->IsLoaded() && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+        DumpMempool(*node.mempool);\n     }\n \n     if (fFeeEstimatesInitialized)\n@@ -738,10 +738,7 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n         return;\n     }\n     } // End scope of CImportingNow\n-    if (args.GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n-        LoadMempool(::mempool);\n-    }\n-    ::mempool.SetIsLoaded(!ShutdownRequested());\n+    chainman.ActiveChainstate().LoadMempool(args);\n }\n \n /** Sanity checks\n@@ -1054,11 +1051,6 @@ bool AppInitParameterInteraction(const ArgsManager& args)\n         }\n     }\n \n-    // Checkmempool and checkblockindex default to true in regtest mode\n-    int ratio = std::min<int>(std::max<int>(args.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n-    if (ratio != 0) {\n-        mempool.setSanityCheck(1.0 / ratio);\n-    }\n     fCheckBlockIndex = args.GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = args.GetBoolArg(\"-checkpoints\", DEFAULT_CHECKPOINTS_ENABLED);\n \n@@ -1368,10 +1360,18 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     node.banman = MakeUnique<BanMan>(GetDataDir() / \"banlist.dat\", &uiInterface, args.GetArg(\"-bantime\", DEFAULT_MISBEHAVING_BANTIME));\n     assert(!node.connman);\n     node.connman = MakeUnique<CConnman>(GetRand(std::numeric_limits<uint64_t>::max()), GetRand(std::numeric_limits<uint64_t>::max()), args.GetBoolArg(\"-networkactive\", true));\n+\n     // Make mempool generally available in the node context. For example the connection manager, wallet, or RPC threads,\n     // which are all started after this, may use it from the node context.\n     assert(!node.mempool);\n     node.mempool = &::mempool;\n+    if (node.mempool) {\n+        int ratio = std::min<int>(std::max<int>(args.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n+        if (ratio != 0) {\n+            node.mempool->setSanityCheck(1.0 / ratio);\n+        }\n+    }\n+\n     assert(!node.chainman);\n     node.chainman = &g_chainman;\n     ChainstateManager& chainman = *Assert(node.chainman);"
      },
      {
        "sha": "684cfc807ac28a4094148956eeaf91f9fd640011",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
        "patch": "@@ -4227,6 +4227,14 @@ bool static LoadBlockIndexDB(ChainstateManager& chainman, const CChainParams& ch\n     return true;\n }\n \n+void CChainState::LoadMempool(const ArgsManager& args)\n+{\n+    if (args.GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+        ::LoadMempool(m_mempool);\n+    }\n+    m_mempool.SetIsLoaded(!ShutdownRequested());\n+}\n+\n bool CChainState::LoadChainTip(const CChainParams& chainparams)\n {\n     AssertLockHeld(cs_main);"
      },
      {
        "sha": "17a0adb083539aa6c8e44316c2ec2f803cd78f83",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeee1104d78eb59a582ee1709ff4ac2c33ee1190/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
        "patch": "@@ -671,6 +671,9 @@ class CChainState {\n      */\n     void CheckBlockIndex(const Consensus::Params& consensusParams);\n \n+    /** Load the persisted mempool from disk */\n+    void LoadMempool(const ArgsManager& args);\n+\n     /** Update the chain tip based on database information, i.e. CoinsTip()'s best block. */\n     bool LoadChainTip(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n "
      }
    ]
  },
  {
    "sha": "fa0359c5b30730744aa8a7cd9ffab79ded91041f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTAzNTljNWIzMDczMDc0NGFhOGE3Y2Q5ZmZhYjc5ZGVkOTEwNDFm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-19T12:52:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-09-05T14:24:52Z"
      },
      "message": "Remove mempool global from p2p",
      "tree": {
        "sha": "e09c366e0af66d8de5bab694f947645225af71fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e09c366e0af66d8de5bab694f947645225af71fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa0359c5b30730744aa8a7cd9ffab79ded91041f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhXHwv/ZJSBlAl62y1/8yAEKjXbrpc1E5LRfXAwb1NLf7sl7/j3P0azms+zqhnj\n0oN0Eq6b5o/Deypb5DwU2jPJB/ciFIZ2xC8CcB9Sysr1RzK8Pjd9FAo0q5V6jJOP\njiapVn8DS6pXSKpzp4FcEs3E2VVja22PakpIATj0CAwKlyV8m20LuyGNyogt2HAp\nqquXQOpzgq0cEjmTirS+njmyuGN/wVRgWv67eOgENIfLFAJsBmlJNDurVAOD9CQ7\nD+oCL/RDu1tHwdXF/u28UhXY0h5XwWQawnXL63wXUX7gRwdXkm+iJ0nQyJZ8L1HB\nYx97kCyozJ1WccO61Ne2Fa+q3ozl1PRDP8tvpTOoVBHWuCbuSICe4aUDY8/gHLXr\nkU65isu9eI6jvatU/NUCPa7hNOLWVjFfELrYM8IJh5xRjVWToSklimgCZegSVt4L\nYPHybwp2DzmyUhj9QVGSEkLZrULmFn0uX3j1sj5isIJNcsa08ax6a4zdnxqVW+ED\nX5SnVzNw\n=vVtK\n-----END PGP SIGNATURE-----",
        "payload": "tree e09c366e0af66d8de5bab694f947645225af71fe\nparent eeee1104d78eb59a582ee1709ff4ac2c33ee1190\nauthor MarcoFalke <falke.marco@gmail.com> 1595163170 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1599315892 +0200\n\nRemove mempool global from p2p\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0359c5b30730744aa8a7cd9ffab79ded91041f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0359c5b30730744aa8a7cd9ffab79ded91041f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0359c5b30730744aa8a7cd9ffab79ded91041f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeee1104d78eb59a582ee1709ff4ac2c33ee1190",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eeee1104d78eb59a582ee1709ff4ac2c33ee1190"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "15508683cea69756685d1416e42e91bfe948df12",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa0359c5b30730744aa8a7cd9ffab79ded91041f/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa0359c5b30730744aa8a7cd9ffab79ded91041f/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fa0359c5b30730744aa8a7cd9ffab79ded91041f",
        "patch": "@@ -1710,7 +1710,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n }\n \n //! Determine whether or not a peer can request a transaction, and return it (or nullptr if not found or not allowed).\n-CTransactionRef static FindTxForGetData(const CNode& peer, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n+static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode& peer, const GenTxid& gtxid, const std::chrono::seconds mempool_req, const std::chrono::seconds now) LOCKS_EXCLUDED(cs_main)\n {\n     auto txinfo = mempool.info(gtxid);\n     if (txinfo.tx) {\n@@ -1766,7 +1766,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             continue;\n         }\n \n-        CTransactionRef tx = FindTxForGetData(pfrom, ToGenTxid(inv), mempool_req, now);\n+        CTransactionRef tx = FindTxForGetData(mempool, pfrom, ToGenTxid(inv), mempool_req, now);\n         if (tx) {\n             // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.IsMsgTx() ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n@@ -2732,7 +2732,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n                 }\n             } else if (inv.IsGenTxMsg()) {\n                 const GenTxid gtxid = ToGenTxid(inv);\n-                const bool fAlreadyHave = AlreadyHaveTx(gtxid, mempool);\n+                const bool fAlreadyHave = AlreadyHaveTx(gtxid, m_mempool);\n                 LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n \n                 pfrom.AddKnownTx(inv.hash);\n@@ -3003,7 +3003,7 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n \n         std::list<CTransactionRef> lRemovedTxn;\n \n-        // We do the AlreadyHave() check using wtxid, rather than txid - in the\n+        // We do the AlreadyHaveTx() check using wtxid, rather than txid - in the\n         // absence of witness malleation, this is strictly better, because the\n         // recent rejects filter may contain the wtxid but rarely contains\n         // the txid of a segwit transaction that has been rejected."
      }
    ]
  },
  {
    "sha": "fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZiMzgxYWY4Mjc5YjJkMmNhNzY4ZGYwYmY2OGQ3ZWIwMzZhMmY5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-07-19T18:30:46Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-09-05T14:24:56Z"
      },
      "message": "Remove mempool global",
      "tree": {
        "sha": "35e45709d385b239d7470aca4bec066e68ee72f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/35e45709d385b239d7470aca4bec066e68ee72f9"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh4hAv7ByG2zdo9aeO3FTzTE4BCghHSNt3TUeJSdAYXQa+sAGtG/kbsj0jtDs75\nXkKNebaNPhJIJOhcrVm/CXp5jz8JN5M8KY26QzTkm4IeMCqTx/HIma0PeKpgEij8\nesipO/RuzDMuhfKsl4oCs1uHNQiVxfJF6JePibOd2Drg8tJSVtq8JMBZzML/S9Kr\nyXEaONCVvR5dlCzerAZPJa8htNu33QIvbVFJGU/kw1yysdiwPnGftNaM6cYPHTnz\n0TxCxFWF1r9gg8+PTOQhGMAGO1FHiF5nQDphwrhqctHzULIAbVC6H55/XJY4B3nR\nITpxqKBZwQX/7/oOTUk5TKVxZTjcuzTPMB+X53E0FfqzWTA3qSB1+vuHU5a0uZGY\nhoJWww1KU04V8tqQo0E1wk8C+IkQkZZE4qmZoF3iXIVLH89KNVl0VX/5p8k4Eyjp\nVunuCiRGQIlEgdC6lOyTYGDcxsW3pvatsKm6I6pQ7flzqmfbExey160X/9SDFo8M\nK36AZb7s\n=qKyI\n-----END PGP SIGNATURE-----",
        "payload": "tree 35e45709d385b239d7470aca4bec066e68ee72f9\nparent fa0359c5b30730744aa8a7cd9ffab79ded91041f\nauthor MarcoFalke <falke.marco@gmail.com> 1595183446 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1599315896 +0200\n\nRemove mempool global\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa0359c5b30730744aa8a7cd9ffab79ded91041f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa0359c5b30730744aa8a7cd9ffab79ded91041f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa0359c5b30730744aa8a7cd9ffab79ded91041f"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 11,
      "deletions": 12
    },
    "files": [
      {
        "sha": "633dd8cefcb57112f44c4cfbd9ea8176f6062572",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -302,7 +302,7 @@ void Shutdown(NodeContext& node)\n     GetMainSignals().UnregisterBackgroundSignalScheduler();\n     globalVerifyHandle.reset();\n     ECC_Stop();\n-    node.mempool = nullptr;\n+    node.mempool.reset();\n     node.chainman = nullptr;\n     node.scheduler.reset();\n \n@@ -1364,7 +1364,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n     // Make mempool generally available in the node context. For example the connection manager, wallet, or RPC threads,\n     // which are all started after this, may use it from the node context.\n     assert(!node.mempool);\n-    node.mempool = &::mempool;\n+    node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n     if (node.mempool) {\n         int ratio = std::min<int>(std::max<int>(args.GetArg(\"-checkmempool\", chainparams.DefaultConsistencyChecks() ? 1 : 0), 0), 1000000);\n         if (ratio != 0) {\n@@ -1559,7 +1559,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 chainman.m_total_coinstip_cache = nCoinCacheUsage;\n                 chainman.m_total_coinsdb_cache = nCoinDBCache;\n \n-                UnloadBlockIndex(node.mempool);\n+                UnloadBlockIndex(node.mempool.get());\n \n                 // new CBlockTreeDB tries to delete the existing file, which\n                 // fails if it's still open from the previous loop. Close it first:"
      },
      {
        "sha": "49d0c37235783d1a5abf88aa0ddb42d217d5331a",
        "filename": "src/node/context.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/node/context.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/node/context.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -9,6 +9,7 @@\n #include <net.h>\n #include <net_processing.h>\n #include <scheduler.h>\n+#include <txmempool.h>\n \n NodeContext::NodeContext() {}\n NodeContext::~NodeContext() {}"
      },
      {
        "sha": "d9d0750951c536a1a5b8cb8f4607b014c8608589",
        "filename": "src/node/context.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/node/context.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/node/context.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/context.h?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -35,7 +35,7 @@ class WalletClient;\n //! be used without pulling in unwanted dependencies or functionality.\n struct NodeContext {\n     std::unique_ptr<CConnman> connman;\n-    CTxMemPool* mempool{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n+    std::unique_ptr<CTxMemPool> mempool;\n     std::unique_ptr<PeerLogicValidation> peer_logic;\n     ChainstateManager* chainman{nullptr}; // Currently a raw pointer because the memory is not managed by this struct\n     std::unique_ptr<BanMan> banman;"
      },
      {
        "sha": "f0bcbe55f9201ba88ec962d93426f64c18af8969",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -102,7 +102,7 @@ static CTxMemPool* GetMemPool(const util::Ref& context, HTTPRequest* req)\n         RESTERR(req, HTTP_NOT_FOUND, \"Mempool disabled or instance not found\");\n         return nullptr;\n     }\n-    return node->mempool;\n+    return node->mempool.get();\n }\n \n static RetFormat ParseDataFormat(std::string& param, const std::string& strReq)\n@@ -393,7 +393,7 @@ static bool rest_tx(const util::Ref& context, HTTPRequest* req, const std::strin\n     const NodeContext* const node = GetNodeContext(context, req);\n     if (!node) return false;\n     uint256 hashBlock = uint256();\n-    const CTransactionRef tx = GetTransaction(/* block_index */ nullptr, node->mempool, hash, Params().GetConsensus(), hashBlock);\n+    const CTransactionRef tx = GetTransaction(/* block_index */ nullptr, node->mempool.get(), hash, Params().GetConsensus(), hashBlock);\n     if (!tx) {\n         return RESTERR(req, HTTP_NOT_FOUND, hashStr + \" not found\");\n     }"
      },
      {
        "sha": "93e8357e8689e8944b1d03d6010b2b7731327626",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -191,7 +191,7 @@ static UniValue getrawtransaction(const JSONRPCRequest& request)\n     }\n \n     uint256 hash_block;\n-    const CTransactionRef tx = GetTransaction(blockindex, node.mempool, hash, Params().GetConsensus(), hash_block);\n+    const CTransactionRef tx = GetTransaction(blockindex, node.mempool.get(), hash, Params().GetConsensus(), hash_block);\n     if (!tx) {\n         std::string errmsg;\n         if (blockindex) {"
      },
      {
        "sha": "536a131313e08708b46c4bc6ab89d0a6730fe3b9",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -141,7 +141,7 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n \n     pblocktree.reset(new CBlockTreeDB(1 << 20, true));\n \n-    m_node.mempool = &::mempool;\n+    m_node.mempool = MakeUnique<CTxMemPool>(&::feeEstimator);\n     m_node.mempool->setSanityCheck(1.0);\n \n     m_node.chainman = &::g_chainman;\n@@ -187,8 +187,8 @@ TestingSetup::~TestingSetup()\n     m_node.connman.reset();\n     m_node.banman.reset();\n     m_node.args = nullptr;\n-    UnloadBlockIndex(m_node.mempool);\n-    m_node.mempool = nullptr;\n+    UnloadBlockIndex(m_node.mempool.get());\n+    m_node.mempool.reset();\n     m_node.scheduler.reset();\n     m_node.chainman->Reset();\n     m_node.chainman = nullptr;"
      },
      {
        "sha": "bdbae66511a541f0cd0e88685c5894858c9d3e67",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -148,7 +148,6 @@ arith_uint256 nMinimumChainWork;\n CFeeRate minRelayTxFee = CFeeRate(DEFAULT_MIN_RELAY_TX_FEE);\n \n CBlockPolicyEstimator feeEstimator;\n-CTxMemPool mempool(&feeEstimator);\n \n // Internal stuff\n namespace {"
      },
      {
        "sha": "53c2dd65e5fe0687dc8f341553eee6cf9e4bc2df",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafb381af8279b2d2ca768df0bf68d7eb036a2f9/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fafb381af8279b2d2ca768df0bf68d7eb036a2f9",
        "patch": "@@ -113,7 +113,6 @@ enum class SynchronizationState {\n \n extern RecursiveMutex cs_main;\n extern CBlockPolicyEstimator feeEstimator;\n-extern CTxMemPool mempool;\n typedef std::unordered_map<uint256, CBlockIndex*, BlockHasher> BlockMap;\n extern Mutex g_best_block_mutex;\n extern std::condition_variable g_best_block_cv;"
      }
    ]
  }
]