Empact,2018-04-11T06:57:19Z,"Concept ACK, both for the addition of testing and due to the fact that ProcessMessage is >1300 lines at the moment. Would be great if other applications of the method were ready, to help inform its interface.",https://github.com/bitcoin/bitcoin/pull/12935#issuecomment-380347558,380347558,
skeees,2018-04-11T16:51:24Z,This is a move-only commit - so maybe not the right place - but it might be nice to separate the misbehaving peer punishment logic from the re-attempting to accept orphans to the mempool logic - good first step though,https://github.com/bitcoin/bitcoin/pull/12935#issuecomment-380521404,380521404,
Empact,2018-04-11T06:55:39Z,"Looks like `lRemovedTxn` still needs to be cleared in this method, unless moving it wholly into `ProcessOrphans` is appropriate.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180651168,180651168,src/net_processing.cpp
MarcoFalke,2018-04-11T17:11:27Z,"Sorry, that indeed looks ugly right now. I will rebase this on #11775, which removes `lRemovedTxn` in whole.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180830562,180830562,src/net_processing.cpp
ryanofsky,2018-04-13T18:13:30Z,"Seems like it woud be more robust (prevent hangs if the node wasn't disconnected) to call `network_thread_join` after `disconnect_p2ps`. This is the pattern used most other places (except `feature_block` for some reason). This would also make shutdown order the reverse of initialization order, which is a good pattern in general.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181469335,181469335,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:16:30Z,"It seems not great to immediately start, stop, and restart the network thread. Could just split up the reconnect method up into connect / disconnect methods to avoid this.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470108,181470108,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:18:09Z,"Maybe just take a num_connections=1 optional argument and shorten to\n\n```python\nfor _ in range(num_connections):\n    self.nodes[0].add_p2p_connection(P2PDataStore())\n```",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181470581,181470581,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:27:45Z,"Check for reject reason below is now dropped (I guess is because the mininode is no longer whitelisted), so might be clearer to update this comment.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473228,181473228,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:29:50Z,Can the `expect_disconnect` case actually wait and verify the disconnect happened?,https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181473709,181473709,test/functional/test_framework/mininode.py
ryanofsky,2018-04-13T18:45:12Z,"More test description would be helpful here (it took me a while to figure it out): Test confirms that mininode 1 doesn't get disconnected right away after sending the node an invalid orphan transaction. It then confirms mininode 1 is disconnected later when mininode 0 provides the missing parent which makes it possible to detect the orphan was invalid.\n\nAt least this explains the `tx_withhold`",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181477903,181477903,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:49:05Z,"What is ""may be rejected by policy"" referring to and which transactions does it apply to?",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181478907,181478907,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T18:52:37Z,"Would be nice just for clarity if this could explicitly verify mininode 1 was disconnected and mininode is still connected. I understand the condition is implied from the peer count combined with `expect_disconnect=False` above, but it's not clear why this can't just be tested directly.",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181480094,181480094,test/functional/p2p_invalid_tx.py
ryanofsky,2018-04-13T19:12:07Z,"Could make sense to rebase the test commit before the refactoring commit, to make it clear existing code is supposed to pass the new test.\n\nOr maybe just put the new test in a standalone PR if the refactoring is going to be held up by #11775 anyway (https://github.com/bitcoin/bitcoin/pull/12935#discussion_r180830562).",https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181485154,181485154,test/functional/p2p_invalid_tx.py
MarcoFalke,2018-04-13T20:07:27Z,Agree. Should be fixed in both places.,https://github.com/bitcoin/bitcoin/pull/12935#discussion_r181497585,181497585,test/functional/p2p_invalid_tx.py
