[
  {
    "sha": "74ab12bd57dbc482f70aad67066745970b776350",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGFiMTJiZDU3ZGJjNDgyZjcwYWFkNjcwNjY3NDU5NzBiNzc2MzUw",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-09T20:57:18Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2011-08-09T21:01:06Z"
      },
      "message": "Fix URI amount parser",
      "tree": {
        "sha": "bf852be596c6244b63179497b714607b7c40796e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bf852be596c6244b63179497b714607b7c40796e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74ab12bd57dbc482f70aad67066745970b776350",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74ab12bd57dbc482f70aad67066745970b776350",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74ab12bd57dbc482f70aad67066745970b776350",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74ab12bd57dbc482f70aad67066745970b776350/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b0849613bf02b61774b23804c8feed54aa88474a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b0849613bf02b61774b23804c8feed54aa88474a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b0849613bf02b61774b23804c8feed54aa88474a"
      }
    ],
    "stats": {
      "total": 53,
      "additions": 49,
      "deletions": 4
    },
    "files": [
      {
        "sha": "4f2dbf987acaf51acc8f23b9533d0e14fee9c195",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 49,
        "deletions": 4,
        "changes": 53,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74ab12bd57dbc482f70aad67066745970b776350/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74ab12bd57dbc482f70aad67066745970b776350/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=74ab12bd57dbc482f70aad67066745970b776350",
        "patch": "@@ -45,6 +45,54 @@ void GUIUtil::setupAmountWidget(QLineEdit *widget, QWidget *parent)\n     widget->setAlignment(Qt::AlignRight|Qt::AlignVCenter);\n }\n \n+static\n+int64 parseNumber(std::string strNumber, bool fHex)\n+{\n+    int64 nAmount = 0;\n+    std::istringstream stream(strNumber);\n+    stream >> (fHex ? std::hex : std::dec) >> nAmount;\n+    return nAmount;\n+}\n+\n+int64 URIParseAmount(std::string strAmount)\n+{\n+    int64 nAmount = 0;\n+    bool fHex = false;\n+    if (strAmount[0] == 'x' || strAmount[0] == 'X')\n+    {\n+        fHex = true;\n+        strAmount = strAmount.substr(1);\n+    }\n+    size_t nPosX = strAmount.find('X', 1);\n+    if (nPosX == std::string::npos)\n+        nPosX = strAmount.find('x', 1);\n+    int nExponent = 0;\n+    if (nPosX != std::string::npos)\n+        nExponent = parseNumber(strAmount.substr(nPosX + 1), fHex);\n+    else\n+    {\n+        // Non-compliant URI, assume standard units\n+        nExponent = fHex ? 4 : 8;\n+        nPosX = strAmount.size();\n+    }\n+    size_t nPosP = strAmount.find('.');\n+    size_t nFractionLen = 0;\n+    if (nPosP == std::string::npos)\n+        nPosP = nPosX;\n+    else\n+        nFractionLen = (nPosX - nPosP) - 1;\n+    nExponent -= nFractionLen;\n+    strAmount = strAmount.substr(0, nPosP) + (nFractionLen ? strAmount.substr(nPosP + 1, nFractionLen) : \"\");\n+    if (nExponent > 0)\n+        strAmount.append(nExponent, '0');\n+    else\n+    if (nExponent < 0)\n+        // WTF? truncate I guess\n+        strAmount = strAmount.substr(0, strAmount.size() + nExponent);\n+    nAmount = parseNumber(strAmount, fHex);\n+    return nAmount;\n+}\n+\n bool GUIUtil::parseBitcoinURL(const QUrl *url, SendCoinsRecipient *out)\n {\n     if(url->scheme() != QString(\"bitcoin\"))\n@@ -61,10 +109,7 @@ bool GUIUtil::parseBitcoinURL(const QUrl *url, SendCoinsRecipient *out)\n     }\n     else // Amount is non-empty\n     {\n-        if(!BitcoinUnits::parse(BitcoinUnits::BTC, amount, &rv.amount))\n-        {\n-            return false;\n-        }\n+        rv.amount = URIParseAmount(amount.toStdString());\n     }\n     if(out)\n     {"
      }
    ]
  }
]