[
  {
    "sha": "ad085f9ba15c131fc5cc77086a620f2e366aac7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZDA4NWY5YmExNWMxMzFmYzVjYzc3MDg2YTYyMGYyZTM2NmFhYzdj",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-08-31T01:04:06Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-09-16T18:17:01Z"
      },
      "message": "multiprocess: Delay wallet client construction\n\nDelay wallet client construction until after logging, thread and other\ninit for two reasons:\n\n- More responsive multiprocess GUI startup. When bitcoin-gui is started\n  this moves the call from bitcoin-gui to bitcoin-node that spawns\n  bitcoin-wallet off of the GUI event thread and onto the background GUI\n  init executor thread.\n\n- Avoids feature_logging.py test failures with bitcoin-node by making\n  bitcoin-wallet logging start after bitcoin-node logging starts,\n  because the tests are not written to handle the bitcoin-wallet logging\n  init code running first.\n\nThis partially reverts commit b266b3e0bf29d0f3d5deaeec62d57c5025b35525,\nmoving wallet client creation back to the place it was located before.",
      "tree": {
        "sha": "15ae7e775054d670ba7def6754e04e934d974383",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/15ae7e775054d670ba7def6754e04e934d974383"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ad085f9ba15c131fc5cc77086a620f2e366aac7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad085f9ba15c131fc5cc77086a620f2e366aac7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ad085f9ba15c131fc5cc77086a620f2e366aac7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ad085f9ba15c131fc5cc77086a620f2e366aac7c/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6ef84e0503994c53f77093e7ea5951a7b0edea7a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6ef84e0503994c53f77093e7ea5951a7b0edea7a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6ef84e0503994c53f77093e7ea5951a7b0edea7a"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 23,
      "deletions": 6
    },
    "files": [
      {
        "sha": "017c598ad5683e57164edf49ebb1e5b6c7064f4f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -1065,11 +1065,6 @@ bool AppInitLockDataDirectory()\n bool AppInitInterfaces(NodeContext& node)\n {\n     node.chain = node.init->makeChain();\n-    // Create client interfaces for wallets that are supposed to be loaded\n-    // according to -wallet and -disablewallet options. This only constructs\n-    // the interfaces, it doesn't load wallet data. Wallets actually get loaded\n-    // when load() and start() interface methods are called below.\n-    g_wallet_init_interface.Construct(node);\n     return true;\n }\n \n@@ -1133,6 +1128,13 @@ bool AppInitMain(NodeContext& node, interfaces::BlockAndHeaderTipInfo* tip_info)\n \n     GetMainSignals().RegisterBackgroundSignalScheduler(*node.scheduler);\n \n+    // Create client interfaces for wallets that are supposed to be loaded\n+    // according to -wallet and -disablewallet options. This only constructs\n+    // the interfaces, it doesn't load wallet data. Wallets actually get loaded\n+    // when load() and start() interface methods are called below.\n+    g_wallet_init_interface.Construct(node);\n+    uiInterface.InitWallet();\n+\n     /* Register RPC commands regardless of -server setting so they will be\n      * available in the GUI RPC console even if external calls are disabled.\n      */"
      },
      {
        "sha": "ee941b46025b8986c592d718d620c4706c7cbb9b",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -197,6 +197,10 @@ class Node\n     using ShowProgressFn = std::function<void(const std::string& title, int progress, bool resume_possible)>;\n     virtual std::unique_ptr<Handler> handleShowProgress(ShowProgressFn fn) = 0;\n \n+    //! Register handler for wallet client constructed messages.\n+    using InitWalletFn = std::function<void()>;\n+    virtual std::unique_ptr<Handler> handleInitWallet(InitWalletFn fn) = 0;\n+\n     //! Register handler for number of connections changed messages.\n     using NotifyNumConnectionsChangedFn = std::function<void(int new_num_connections)>;\n     virtual std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) = 0;"
      },
      {
        "sha": "b1d39cd00a7b2db628e83318f874dedc209bb153",
        "filename": "src/node/interfaces.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/interfaces.cpp?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -281,6 +281,10 @@ class NodeImpl : public Node\n     {\n         return MakeHandler(::uiInterface.ShowProgress_connect(fn));\n     }\n+    std::unique_ptr<Handler> handleInitWallet(InitWalletFn fn) override\n+    {\n+        return MakeHandler(::uiInterface.InitWallet_connect(fn));\n+    }\n     std::unique_ptr<Handler> handleNotifyNumConnectionsChanged(NotifyNumConnectionsChangedFn fn) override\n     {\n         return MakeHandler(::uiInterface.NotifyNumConnectionsChanged_connect(fn));"
      },
      {
        "sha": "29fa16d8be26dd55817c4ddadd9849a1b07b8a13",
        "filename": "src/node/ui_interface.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/ui_interface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/ui_interface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.cpp?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -15,6 +15,7 @@ struct UISignals {\n     boost::signals2::signal<CClientUIInterface::ThreadSafeMessageBoxSig, boost::signals2::optional_last_value<bool>> ThreadSafeMessageBox;\n     boost::signals2::signal<CClientUIInterface::ThreadSafeQuestionSig, boost::signals2::optional_last_value<bool>> ThreadSafeQuestion;\n     boost::signals2::signal<CClientUIInterface::InitMessageSig> InitMessage;\n+    boost::signals2::signal<CClientUIInterface::InitWalletSig> InitWallet;\n     boost::signals2::signal<CClientUIInterface::NotifyNumConnectionsChangedSig> NotifyNumConnectionsChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyNetworkActiveChangedSig> NotifyNetworkActiveChanged;\n     boost::signals2::signal<CClientUIInterface::NotifyAlertChangedSig> NotifyAlertChanged;\n@@ -34,6 +35,7 @@ static UISignals g_ui_signals;\n ADD_SIGNALS_IMPL_WRAPPER(ThreadSafeMessageBox);\n ADD_SIGNALS_IMPL_WRAPPER(ThreadSafeQuestion);\n ADD_SIGNALS_IMPL_WRAPPER(InitMessage);\n+ADD_SIGNALS_IMPL_WRAPPER(InitWallet);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNumConnectionsChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyNetworkActiveChanged);\n ADD_SIGNALS_IMPL_WRAPPER(NotifyAlertChanged);\n@@ -45,6 +47,7 @@ ADD_SIGNALS_IMPL_WRAPPER(BannedListChanged);\n bool CClientUIInterface::ThreadSafeMessageBox(const bilingual_str& message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeMessageBox(message, caption, style).value_or(false);}\n bool CClientUIInterface::ThreadSafeQuestion(const bilingual_str& message, const std::string& non_interactive_message, const std::string& caption, unsigned int style) { return g_ui_signals.ThreadSafeQuestion(message, non_interactive_message, caption, style).value_or(false);}\n void CClientUIInterface::InitMessage(const std::string& message) { return g_ui_signals.InitMessage(message); }\n+void CClientUIInterface::InitWallet() { return g_ui_signals.InitWallet(); }\n void CClientUIInterface::NotifyNumConnectionsChanged(int newNumConnections) { return g_ui_signals.NotifyNumConnectionsChanged(newNumConnections); }\n void CClientUIInterface::NotifyNetworkActiveChanged(bool networkActive) { return g_ui_signals.NotifyNetworkActiveChanged(networkActive); }\n void CClientUIInterface::NotifyAlertChanged() { return g_ui_signals.NotifyAlertChanged(); }"
      },
      {
        "sha": "f969bcde2179c24022015f242ec3c539af923851",
        "filename": "src/node/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/node/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/ui_interface.h?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -82,6 +82,9 @@ class CClientUIInterface\n     /** Progress message during initialization. */\n     ADD_SIGNALS_DECL_WRAPPER(InitMessage, void, const std::string& message);\n \n+    /** Wallet client created. */\n+    ADD_SIGNALS_DECL_WRAPPER(InitWallet, void, );\n+\n     /** Number of network connections changed. */\n     ADD_SIGNALS_DECL_WRAPPER(NotifyNumConnectionsChanged, void, int newNumConnections);\n "
      },
      {
        "sha": "e30892aeb76fd1e4a76b1d9d5dbaa854c762d197",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -271,7 +271,6 @@ void BitcoinApplication::createSplashScreen(const NetworkStyle *networkStyle)\n     // We don't hold a direct pointer to the splash screen after creation, but the splash\n     // screen will take care of deleting itself when finish() happens.\n     m_splash->show();\n-    connect(this, &BitcoinApplication::requestedInitialize, m_splash, &SplashScreen::handleLoadWallet);\n     connect(this, &BitcoinApplication::splashFinished, m_splash, &SplashScreen::finish);\n     connect(this, &BitcoinApplication::requestedShutdown, m_splash, &QWidget::close);\n }"
      },
      {
        "sha": "736af27acc03c2e2c08dae7eb06ec2b7ca7a85c5",
        "filename": "src/qt/splashscreen.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/splashscreen.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/splashscreen.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.cpp?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -194,6 +194,7 @@ void SplashScreen::subscribeToCoreSignals()\n     // Connect signals to client\n     m_handler_init_message = m_node->handleInitMessage(std::bind(InitMessage, this, std::placeholders::_1));\n     m_handler_show_progress = m_node->handleShowProgress(std::bind(ShowProgress, this, std::placeholders::_1, std::placeholders::_2, std::placeholders::_3));\n+    m_handler_init_wallet = m_node->handleInitWallet([this]() { handleLoadWallet(); });\n }\n \n void SplashScreen::handleLoadWallet()"
      },
      {
        "sha": "8a5875d2a6e2b10eab47a65bf909d1eef5a2fc6b",
        "filename": "src/qt/splashscreen.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/splashscreen.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ad085f9ba15c131fc5cc77086a620f2e366aac7c/src/qt/splashscreen.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/splashscreen.h?ref=ad085f9ba15c131fc5cc77086a620f2e366aac7c",
        "patch": "@@ -66,6 +66,7 @@ public Q_SLOTS:\n     bool m_shutdown = false;\n     std::unique_ptr<interfaces::Handler> m_handler_init_message;\n     std::unique_ptr<interfaces::Handler> m_handler_show_progress;\n+    std::unique_ptr<interfaces::Handler> m_handler_init_wallet;\n     std::unique_ptr<interfaces::Handler> m_handler_load_wallet;\n     std::list<std::unique_ptr<interfaces::Wallet>> m_connected_wallets;\n     std::list<std::unique_ptr<interfaces::Handler>> m_connected_wallet_handlers;"
      }
    ]
  }
]