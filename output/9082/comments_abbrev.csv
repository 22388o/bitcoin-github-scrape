gmaxwell,2016-11-04T08:57:39Z,"NAK. Non-witness peers are still connected to, though the node makes sure that it doesn't get partitioned. This undoes an intentional design decision. It is not acceptable to have the network topology suddenly change all at once time when segwit activates, due to the risk of creating partitioning (we can't fetch blocks from non-witness peers once segwit is active: so we need to be sure that we're ",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258375327,258375327,
gmaxwell,2016-11-04T09:03:12Z,"If it were just limited to feelers, that might be good though-- since we'd like to learn that they've been upgraded, but it doesn't need to know if witness is active or not. It could just ignore the witness flag for feeler probes-- any interest in changing your patch to do just that?\n\nIt would have been good if the decision to not connect out to witness peers were better documented. \n",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258376339,258376339,
rebroad,2016-11-04T11:52:12Z,"@gmaxwell  Thank you for reviewing this. I'm not sure I understand the partitioning risk you mention. With the currently implementation, I'd already call this partitioned in that 0.13.1 nodes that can make only  outbound connections rarely and only briefly are connecting to non-witness nodes, whereas with this change, only half would be forced to connect to witness nodes, and the other half would ",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258412387,258412387,
rebroad,2016-11-04T12:20:30Z,"Also, in the event that SegWit doesn't activate and timesout, the code as it currently is with 0.13.1 is such that it will only ever use half of the outgoing connections, i.e. if maxoutbound is 8, then after 4 outbound connections are established, it will not connect to any peer unless it is node_witness, which after the timeout, will be none. (Not that I am wanting this to happen, I am in favor o",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258417235,258417235,
sipa,2016-11-05T20:19:30Z,"Concept ACK if you make the behaviour not depend on segwit being active or not, and just whether or not we have 4 connections to node_witness nodes.\n\nThe reason is that it's critical not to be partitioned off segwit nodes at the time it activates (and afterwards), as there are numerous hard-to-reason about edge cases right at activation time. As connections tend to persist for a long time, this ",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258638043,258638043,
rebroad,2016-11-06T04:01:32Z,"@sipa thank you for reviewing this, and I will make the change you advise.\n",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258659039,258659039,
rebroad,2016-11-06T04:10:34Z,"@sipa I've just re-read your comment and I think you may have misunderstood the functionality of this PR as it was. It forces a minimum of 4 connections to Witness nodes prior to SegWit activation, and after activation is makes the minimum 6. Therefore, the it is already doing the ""start preferring a while before"" that you mention. The current functionality (partly due to #8949), which I think may",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258659301,258659301,
sipa,2016-11-06T07:17:05Z,"@rebroad Yes, I believe the current logic of only allowing non-relevant peers before 4 outbounds results in an unintentionally strong preference for witness peers, so I like using the nRelevant you have instead, and not applying it to feelers. I don't think there is a need for making the behaviour conditional on segwit being active though - that just results in more edge cases.\n",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258664763,258664763,
rebroad,2016-11-06T07:20:44Z,@sipa Have now removed the check for Witness activation. Thanks again.\n,https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-258664864,258664864,
sipa,2016-11-08T02:27:01Z,"Seems I was wrong:\n\n```\n14:39:41 < gmaxwell> sipa: ""an unintentionally strong preference for witness peers"" <\nwell it was as strong as I intend it to be, after SW activates I was planning on merging\nthe NODE_WITNESS preference into the node-network one and making it absolute\nand not a preference. In releases post sw I think we shouldn't connect out at all to non\nsw peers.\n```\n\nSo this sh",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-259027283,259027283,
rebroad,2016-11-24T18:37:09Z,@sipa still seems odd to me that it'll only connect to non SegWit nodes upon start-up and then never again once those connections have dropped. Intentional or not.,https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-262830207,262830207,
sipa,2016-11-24T20:18:23Z,"@rebroad The goal is to never connect to anything but segwit nodes. The connection count rule is just there because initially there may just not be enough segwit peers. Old nodes are not useful for you to connect out to, as they can't give blocks anymore after activation. We of course still allow them to connect in.",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-262840167,262840167,
rebroad,2017-01-26T04:54:25Z,"@sipa Given that SegWit has not activated, and from the current charts never will, then it seems entirely premature to be avoiding non-SegWit nodes at all, doesn't it? At least until there is a reasonable chance of SegWit looking likely to activate.",https://github.com/bitcoin/bitcoin/pull/9082#issuecomment-275307851,275307851,
sipa,2016-11-06T06:50:36Z,"Several problems with this:\n- You're reading fWitnessActive here without holding cs_main, so you have a potential data race (even though in this particular case, likely every supported platform will actually do what you'd expect, this is undefined behaviour according to the C++ standard, and the compiler is allowed to make this do anything - including deleting your files). To correctly write what",https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86680233,86680233,src/net.cpp
rebroad,2016-11-06T07:18:54Z,"@sipa preferential peering already happens before the activation with this PR. The only reason for checking IsWitnessEnabled is to make it even more preferential afterwards. In order to make it ""more preferential"" it seems to me that the network code does need to know about such concept - how else could it be done please?\n",https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86680539,86680539,src/net.cpp
sipa,2016-11-06T09:33:01Z,This comment seems outdated.\n,https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86681328,86681328,src/net.cpp
sipa,2016-11-06T09:52:31Z,I believe the `&&` between `nTries < 40` and `nRelevant < 5` should be an `||`.\n,https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86681659,86681659,src/net.cpp
sipa,2016-11-06T09:53:26Z,Using `(nMaxOutBound >> 1)` avoided a hard coded constant here.\n,https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86681685,86681685,src/net.cpp
rebroad,2016-11-07T04:35:34Z,"@sipa and by the way, thank you for the comments regarding C++ standards - useful to know I need to brush up on them.\n",https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86712303,86712303,src/net.cpp
sipa,2016-11-07T06:44:51Z,@rebroad Read my 3rd point. Just don't.\n,https://github.com/bitcoin/bitcoin/pull/9082#discussion_r86719866,86719866,src/net.cpp
rebroad,2016-11-24T18:35:02Z,"I intentionally changed it to && instead of || as I felt || was too strong, but can change it back if this is preferred.",https://github.com/bitcoin/bitcoin/pull/9082#discussion_r89537525,89537525,src/net.cpp
rebroad,2016-11-24T18:35:51Z,I felt a minimum of 4 was a better criteria than half of the default 8 as if someone reduced maxOutbound then I think fewer than 4 is too few.,https://github.com/bitcoin/bitcoin/pull/9082#discussion_r89537560,89537560,src/net.cpp
