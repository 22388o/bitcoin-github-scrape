[
  {
    "sha": "73d8ef72742ab9193e9e95158b26176bfaab3f66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3M2Q4ZWY3Mjc0MmFiOTE5M2U5ZTk1MTU4YjI2MTc2YmZhYWIzZjY2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-01-04T19:13:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-23T13:47:10Z"
      },
      "message": "qt: Add BitcoinUnits::formatWithPrivacy() function",
      "tree": {
        "sha": "e9748d61ab7185245fe33c54e91164cb725b213f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e9748d61ab7185245fe33c54e91164cb725b213f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/73d8ef72742ab9193e9e95158b26176bfaab3f66",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7JKWUACgkQQQEIES5+\nqB9FKA/9Faykfw8F6C/9grsj50v+wvdj2/lvHAhCzurzx+PFeJm/hzQUzBSxhKGx\nhq2as6rH+rWCTGxdp0R2w9w05hQ8GuH8bz/rZ1cPxG1EGJqucuIUC5DrjzpI1Nuu\n9iGJIvxvEM8D7vHVWw8jCpfs2vdKY8+Gd8LvOJB58W3KZI8c4dDZOgSsS4d9rAQl\nkGMtfgwnIm9kltQASyRkvge3ZdZu9nr49qaCtBER8Vamf0FtPYHaXOmJzIyeusdJ\neS2MBDTtF6pEKjsfhQ978c3rTyZica7sWEQ5LJsDmnJIx9qy7MAA7v1gcJjO1A2o\nOfN7E+Bj3pu3ZICgzlkl14NAku09SKw87W8hm8XCd/VasF3GjrIcZx9Nk1vdtBn8\nie+9YQyVhIqZeIOl8gPHOk/yJrGnlLXZPKvFNCVCOiPXTJkVJ1LvZkuBBCWrlvEB\niGYXVHyBxRZR6OKsnD3vYTEDQ0ctA+x3UUFW6WibzM9KorWsovC4G9ZEoPmFPcvu\natJV1CDQ9u7VXjsbiJlRoEQhKvys5qHrYlzrByR9FN5Iu5HM8RmX30g2V3x6b/Uh\npDWT59NbOGL+AujUCEn04qzd+Eld9MdhTKv3mGr1XGInCtS0PJ96sbmqZeH5+thY\nKzDNUc5JPPRMVlZMr1Zw0auTYcFBYoAnhYu3xePmssZTei8xtNw=\n=IWjz\n-----END PGP SIGNATURE-----",
        "payload": "tree e9748d61ab7185245fe33c54e91164cb725b213f\nparent 978c5a212240fd03af13d6f72ba3c27da6298f61\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1578165212 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590241630 +0300\n\nqt: Add BitcoinUnits::formatWithPrivacy() function\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73d8ef72742ab9193e9e95158b26176bfaab3f66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/73d8ef72742ab9193e9e95158b26176bfaab3f66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73d8ef72742ab9193e9e95158b26176bfaab3f66/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "978c5a212240fd03af13d6f72ba3c27da6298f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/978c5a212240fd03af13d6f72ba3c27da6298f61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/978c5a212240fd03af13d6f72ba3c27da6298f61"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 18,
      "deletions": 2
    },
    "files": [
      {
        "sha": "318a6dcbfdb1976dac9e0db48bb8b66ae7c88f08",
        "filename": "src/qt/bitcoinunits.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73d8ef72742ab9193e9e95158b26176bfaab3f66/src/qt/bitcoinunits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73d8ef72742ab9193e9e95158b26176bfaab3f66/src/qt/bitcoinunits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.cpp?ref=73d8ef72742ab9193e9e95158b26176bfaab3f66",
        "patch": "@@ -6,6 +6,8 @@\n \n #include <QStringList>\n \n+#include <cassert>\n+\n BitcoinUnits::BitcoinUnits(QObject *parent):\n         QAbstractListModel(parent),\n         unitlist(availableUnits())\n@@ -94,7 +96,7 @@ int BitcoinUnits::decimals(int unit)\n     }\n }\n \n-QString BitcoinUnits::format(int unit, const CAmount& nIn, bool fPlus, SeparatorStyle separators)\n+QString BitcoinUnits::format(int unit, const CAmount& nIn, bool fPlus, SeparatorStyle separators, bool justify)\n {\n     // Note: not using straight sprintf here because we do NOT want\n     // localized number formatting.\n@@ -106,6 +108,7 @@ QString BitcoinUnits::format(int unit, const CAmount& nIn, bool fPlus, Separator\n     qint64 n_abs = (n > 0 ? n : -n);\n     qint64 quotient = n_abs / coin;\n     QString quotient_str = QString::number(quotient);\n+    if (justify) quotient_str = quotient_str.rightJustified(16 - num_decimals, ' ');\n \n     // Use SI-style thin space separators as these are locale independent and can't be\n     // confused with the decimal marker.\n@@ -150,6 +153,17 @@ QString BitcoinUnits::formatHtmlWithUnit(int unit, const CAmount& amount, bool p\n     return QString(\"<span style='white-space: nowrap;'>%1</span>\").arg(str);\n }\n \n+QString BitcoinUnits::formatWithPrivacy(int unit, const CAmount& amount, SeparatorStyle separators, bool privacy)\n+{\n+    assert(amount >= 0);\n+    QString value;\n+    if (privacy) {\n+        value = format(unit, 0, false, separators, true).replace('0', '#');\n+    } else {\n+        value = format(unit, amount, false, separators, true);\n+    }\n+    return value + QString(\" \") + shortName(unit);\n+}\n \n bool BitcoinUnits::parse(int unit, const QString &value, CAmount *val_out)\n {"
      },
      {
        "sha": "5b8c351d738ab90497561f5a15890f171e90c599",
        "filename": "src/qt/bitcoinunits.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/73d8ef72742ab9193e9e95158b26176bfaab3f66/src/qt/bitcoinunits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/73d8ef72742ab9193e9e95158b26176bfaab3f66/src/qt/bitcoinunits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinunits.h?ref=73d8ef72742ab9193e9e95158b26176bfaab3f66",
        "patch": "@@ -72,11 +72,13 @@ class BitcoinUnits: public QAbstractListModel\n     //! Number of decimals left\n     static int decimals(int unit);\n     //! Format as string\n-    static QString format(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n+    static QString format(int unit, const CAmount& amount, bool plussign = false, SeparatorStyle separators = separatorStandard, bool justify = false);\n     //! Format as string (with unit)\n     static QString formatWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n     //! Format as HTML string (with unit)\n     static QString formatHtmlWithUnit(int unit, const CAmount& amount, bool plussign=false, SeparatorStyle separators=separatorStandard);\n+    //! Format as string (with unit) of fixed length to preserve privacy, if it is set.\n+    static QString formatWithPrivacy(int unit, const CAmount& amount, SeparatorStyle separators, bool privacy);\n     //! Parse string to coin amount\n     static bool parse(int unit, const QString &value, CAmount *val_out);\n     //! Gets title for amount column including current display unit if optionsModel reference available */"
      }
    ]
  },
  {
    "sha": "8d75115844baefe5cad4d82ec8dce001dd16eb9c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZDc1MTE1ODQ0YmFlZmU1Y2FkNGQ4MmVjOGRjZTAwMWRkMTZlYjlj",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-01-04T19:20:00Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-05-27T08:55:44Z"
      },
      "message": "qt: Add privacy feature to Overview page",
      "tree": {
        "sha": "3e22c8258639bbf54c819fd9a058b928762e36ff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e22c8258639bbf54c819fd9a058b928762e36ff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8d75115844baefe5cad4d82ec8dce001dd16eb9c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7OKxIACgkQQQEIES5+\nqB9ANg//SlTC/3R/wqhC4c19QR+WN9oOWAt5so5LbX+ujOkvhx4mqKWv33xBtpHk\nmdMXIrdj63Xkj8CwVIcPnp2dZcEtmI3DumFCL9JcXGxVB9FTE7hfdsi7WzrnxGFv\nUV6lRN7VggA7u+S2PuzR+3e9R3eniVzk5L0Iyk37JTW07+vTihvxp5E+uyKU4aqc\ny+EtcOtuOvX4ylTqyPFGy6Rj7C/mVKBa4+LrXFWgijHF/V0jyNcmYMYHuO34djtV\n32QHAeNMNyqjtxjxYS7Sk4p/YJZ0TdVKPQRtZAG5eMiTB6f0n/iYjeqbVt+Aro97\nldkaQe89zUe6JYvvqRlAO9M348qjUQNbvOlvc1IxGCnENIapGMFmpJzfuXeh66or\nCm3NfEsJEXzwXNhVGGd8/ndv5YrjJyhARomEzbOK4aXElMl2/OhMjlINz0EEKfk3\nxo0TZGv451lBbV8s+r5J9mVKDmbGgJczHX5DKZVyq3LwutfqiIkT7sDRnPu5nnSw\nBlg0a1BKJg3wdeWv0YrPQNCTPMM3HToc0aXQBlSF2Rc5Q/de6fNq0ywZUgv431S0\nugckqzpPuOBMyVvTdF1FFCjSVKrJi9Y/ljyzgpBQ9/ApsHO/7UDTRRKG7xb5w8/t\nmaTCxTLr1Hs8nG93crIUE9jTKna2seFRBBNiDONJNsjR5DIiN1w=\n=Xiwh\n-----END PGP SIGNATURE-----",
        "payload": "tree 3e22c8258639bbf54c819fd9a058b928762e36ff\nparent 73d8ef72742ab9193e9e95158b26176bfaab3f66\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1578165600 +0200\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1590569744 +0300\n\nqt: Add privacy feature to Overview page\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d75115844baefe5cad4d82ec8dce001dd16eb9c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8d75115844baefe5cad4d82ec8dce001dd16eb9c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8d75115844baefe5cad4d82ec8dce001dd16eb9c/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "73d8ef72742ab9193e9e95158b26176bfaab3f66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/73d8ef72742ab9193e9e95158b26176bfaab3f66",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/73d8ef72742ab9193e9e95158b26176bfaab3f66"
      }
    ],
    "stats": {
      "total": 105,
      "additions": 78,
      "deletions": 27
    },
    "files": [
      {
        "sha": "321812c1f0f83ade507e8c235cb0499706f1e5cc",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -350,6 +350,11 @@ void BitcoinGUI::createActions()\n     showHelpMessageAction->setMenuRole(QAction::NoRole);\n     showHelpMessageAction->setStatusTip(tr(\"Show the %1 help message to get a list with possible Bitcoin command-line options\").arg(PACKAGE_NAME));\n \n+    m_mask_values_action = new QAction(tr(\"&Mask values\"), this);\n+    m_mask_values_action->setShortcut(QKeySequence(Qt::CTRL + Qt::SHIFT + Qt::Key_M));\n+    m_mask_values_action->setStatusTip(tr(\"Mask the values in the Overview tab\"));\n+    m_mask_values_action->setCheckable(true);\n+\n     connect(quitAction, &QAction::triggered, qApp, QApplication::quit);\n     connect(aboutAction, &QAction::triggered, this, &BitcoinGUI::aboutClicked);\n     connect(aboutQtAction, &QAction::triggered, qApp, QApplication::aboutQt);\n@@ -412,6 +417,8 @@ void BitcoinGUI::createActions()\n             connect(activity, &CreateWalletActivity::finished, activity, &QObject::deleteLater);\n             activity->create();\n         });\n+\n+        connect(m_mask_values_action, &QAction::toggled, this, &BitcoinGUI::setPrivacy);\n     }\n #endif // ENABLE_WALLET\n \n@@ -452,6 +459,8 @@ void BitcoinGUI::createMenuBar()\n         settings->addAction(encryptWalletAction);\n         settings->addAction(changePassphraseAction);\n         settings->addSeparator();\n+        settings->addAction(m_mask_values_action);\n+        settings->addSeparator();\n     }\n     settings->addAction(optionsAction);\n \n@@ -1398,6 +1407,12 @@ void BitcoinGUI::unsubscribeFromCoreSignals()\n     m_handler_question->disconnect();\n }\n \n+bool BitcoinGUI::isPrivacyModeActivated() const\n+{\n+    assert(m_mask_values_action);\n+    return m_mask_values_action->isChecked();\n+}\n+\n UnitDisplayStatusBarControl::UnitDisplayStatusBarControl(const PlatformStyle *platformStyle) :\n     optionsModel(nullptr),\n     menu(nullptr)"
      },
      {
        "sha": "7326e2941afa1e19bd91f8a73a74059c6eb65521",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -98,6 +98,8 @@ class BitcoinGUI : public QMainWindow\n     /** Disconnect core signals from GUI client */\n     void unsubscribeFromCoreSignals();\n \n+    bool isPrivacyModeActivated() const;\n+\n protected:\n     void changeEvent(QEvent *e);\n     void closeEvent(QCloseEvent *event);\n@@ -154,6 +156,7 @@ class BitcoinGUI : public QMainWindow\n     QAction* m_close_wallet_action{nullptr};\n     QAction* m_wallet_selector_label_action = nullptr;\n     QAction* m_wallet_selector_action = nullptr;\n+    QAction* m_mask_values_action{nullptr};\n \n     QLabel *m_wallet_selector_label = nullptr;\n     QComboBox* m_wallet_selector = nullptr;\n@@ -206,6 +209,7 @@ class BitcoinGUI : public QMainWindow\n     void receivedURI(const QString &uri);\n     /** Signal raised when RPC console shown */\n     void consoleShown(RPCConsole* console);\n+    void setPrivacy(bool privacy);\n \n public Q_SLOTS:\n     /** Set number of connections shown in the UI */"
      },
      {
        "sha": "4d3f90c484800218db4e61eb6cf8201666e3bd36",
        "filename": "src/qt/forms/overviewpage.ui",
        "status": "modified",
        "additions": 18,
        "deletions": 10,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/forms/overviewpage.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/forms/overviewpage.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/overviewpage.ui?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -6,8 +6,8 @@\n    <rect>\n     <x>0</x>\n     <y>0</y>\n-    <width>596</width>\n-    <height>342</height>\n+    <width>798</width>\n+    <height>318</height>\n    </rect>\n   </property>\n   <property name=\"windowTitle\">\n@@ -118,6 +118,7 @@\n              <widget class=\"QLabel\" name=\"labelWatchPending\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -129,7 +130,7 @@\n                <string>Unconfirmed transactions to watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -143,6 +144,7 @@\n              <widget class=\"QLabel\" name=\"labelUnconfirmed\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -154,7 +156,7 @@\n                <string>Total of transactions that have yet to be confirmed, and do not yet count toward the spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -168,6 +170,7 @@\n              <widget class=\"QLabel\" name=\"labelWatchImmature\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -179,7 +182,7 @@\n                <string>Mined balance in watch-only addresses that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -226,6 +229,7 @@\n              <widget class=\"QLabel\" name=\"labelImmature\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -237,7 +241,7 @@\n                <string>Mined balance that has not yet matured</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">0.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -271,6 +275,7 @@\n              <widget class=\"QLabel\" name=\"labelTotal\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -282,7 +287,7 @@\n                <string>Your current total balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">21 000 000.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -296,6 +301,7 @@\n              <widget class=\"QLabel\" name=\"labelWatchTotal\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -307,7 +313,7 @@\n                <string>Current total balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">21 000 000.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -338,6 +344,7 @@\n              <widget class=\"QLabel\" name=\"labelBalance\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -349,7 +356,7 @@\n                <string>Your current spendable balance</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">21 000 000.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>\n@@ -363,6 +370,7 @@\n              <widget class=\"QLabel\" name=\"labelWatchAvailable\">\n               <property name=\"font\">\n                <font>\n+                <family>Monospace</family>\n                 <weight>75</weight>\n                 <bold>true</bold>\n                </font>\n@@ -374,7 +382,7 @@\n                <string>Your current balance in watch-only addresses</string>\n               </property>\n               <property name=\"text\">\n-               <string notr=\"true\">0.000\u2009000\u200900 BTC</string>\n+               <string notr=\"true\">21 000 000.00000000 BTC</string>\n               </property>\n               <property name=\"alignment\">\n                <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>"
      },
      {
        "sha": "1ab30fefc79d866438aa1c0b3c15771e392c7e35",
        "filename": "src/qt/overviewpage.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 16,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/overviewpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/overviewpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.cpp?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -16,7 +16,9 @@\n #include <qt/walletmodel.h>\n \n #include <QAbstractItemDelegate>\n+#include <QApplication>\n #include <QPainter>\n+#include <QStatusTipEvent>\n \n #define DECORATION_SIZE 54\n #define NUM_ITEMS 5\n@@ -152,6 +154,21 @@ void OverviewPage::handleOutOfSyncWarningClicks()\n     Q_EMIT outOfSyncWarningClicked();\n }\n \n+void OverviewPage::setPrivacy(bool privacy)\n+{\n+    m_privacy = privacy;\n+    if (m_balances.balance != -1) {\n+        setBalance(m_balances);\n+    }\n+\n+    ui->listTransactions->setVisible(!m_privacy);\n+\n+    const QString status_tip = m_privacy ? tr(\"Privacy mode activated for the Overview tab. To unmask the values, uncheck Settings->Mask values.\") : \"\";\n+    setStatusTip(status_tip);\n+    QStatusTipEvent event(status_tip);\n+    QApplication::sendEvent(this, &event);\n+}\n+\n OverviewPage::~OverviewPage()\n {\n     delete ui;\n@@ -163,25 +180,25 @@ void OverviewPage::setBalance(const interfaces::WalletBalances& balances)\n     m_balances = balances;\n     if (walletModel->wallet().isLegacy()) {\n         if (walletModel->wallet().privateKeysDisabled()) {\n-            ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+            ui->labelBalance->setText(BitcoinUnits::formatWithPrivacy(unit, balances.watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelUnconfirmed->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n         } else {\n-            ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelWatchAvailable->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelWatchPending->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelWatchImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n-            ui->labelWatchTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, false, BitcoinUnits::separatorAlways));\n+            ui->labelBalance->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelUnconfirmed->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelWatchAvailable->setText(BitcoinUnits::formatWithPrivacy(unit, balances.watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelWatchPending->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelWatchImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n+            ui->labelWatchTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.watch_only_balance + balances.unconfirmed_watch_only_balance + balances.immature_watch_only_balance, BitcoinUnits::separatorAlways, m_privacy));\n         }\n     } else {\n-        ui->labelBalance->setText(BitcoinUnits::formatWithUnit(unit, balances.balance, false, BitcoinUnits::separatorAlways));\n-        ui->labelUnconfirmed->setText(BitcoinUnits::formatWithUnit(unit, balances.unconfirmed_balance, false, BitcoinUnits::separatorAlways));\n-        ui->labelImmature->setText(BitcoinUnits::formatWithUnit(unit, balances.immature_balance, false, BitcoinUnits::separatorAlways));\n-        ui->labelTotal->setText(BitcoinUnits::formatWithUnit(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, false, BitcoinUnits::separatorAlways));\n+        ui->labelBalance->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance, BitcoinUnits::separatorAlways, m_privacy));\n+        ui->labelUnconfirmed->setText(BitcoinUnits::formatWithPrivacy(unit, balances.unconfirmed_balance, BitcoinUnits::separatorAlways, m_privacy));\n+        ui->labelImmature->setText(BitcoinUnits::formatWithPrivacy(unit, balances.immature_balance, BitcoinUnits::separatorAlways, m_privacy));\n+        ui->labelTotal->setText(BitcoinUnits::formatWithPrivacy(unit, balances.balance + balances.unconfirmed_balance + balances.immature_balance, BitcoinUnits::separatorAlways, m_privacy));\n     }\n     // only show immature (newly mined) balance if it's non-zero, so as not to complicate things\n     // for the non-mining users"
      },
      {
        "sha": "4cf673b6a64834d92e9a2e33c12ef0715653b39d",
        "filename": "src/qt/overviewpage.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/overviewpage.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/overviewpage.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/overviewpage.h?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -39,6 +39,7 @@ class OverviewPage : public QWidget\n \n public Q_SLOTS:\n     void setBalance(const interfaces::WalletBalances& balances);\n+    void setPrivacy(bool privacy);\n \n Q_SIGNALS:\n     void transactionClicked(const QModelIndex &index);\n@@ -49,6 +50,7 @@ public Q_SLOTS:\n     ClientModel *clientModel;\n     WalletModel *walletModel;\n     interfaces::WalletBalances m_balances;\n+    bool m_privacy{false};\n \n     TxViewDelegate *txdelegate;\n     std::unique_ptr<TransactionFilterProxy> filter;"
      },
      {
        "sha": "2ba2587852b43a13bfa5029d7fe190c2d59253c5",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -202,7 +202,7 @@ void TestGUI(interfaces::Node& node)\n     OverviewPage overviewPage(platformStyle.get());\n     overviewPage.setWalletModel(&walletModel);\n     QLabel* balanceLabel = overviewPage.findChild<QLabel*>(\"labelBalance\");\n-    QString balanceText = balanceLabel->text();\n+    QString balanceText = balanceLabel->text().trimmed();\n     int unit = walletModel.getOptionsModel()->getDisplayUnit();\n     CAmount balance = walletModel.wallet().getBalance();\n     QString balanceComparison = BitcoinUnits::formatWithUnit(unit, balance, false, BitcoinUnits::separatorAlways);"
      },
      {
        "sha": "5e68ee4f9318c193a85bcd742c3f8bcedd5b77d6",
        "filename": "src/qt/walletframe.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletframe.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletframe.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletframe.cpp?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -53,6 +53,7 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n     walletView->setClientModel(clientModel);\n     walletView->setWalletModel(walletModel);\n     walletView->showOutOfSyncWarning(bOutOfSync);\n+    walletView->setPrivacy(gui->isPrivacyModeActivated());\n \n     WalletView* current_wallet_view = currentWalletView();\n     if (current_wallet_view) {\n@@ -73,6 +74,7 @@ bool WalletFrame::addWallet(WalletModel *walletModel)\n     connect(walletView, &WalletView::encryptionStatusChanged, gui, &BitcoinGUI::updateWalletStatus);\n     connect(walletView, &WalletView::incomingTransaction, gui, &BitcoinGUI::incomingTransaction);\n     connect(walletView, &WalletView::hdEnabledStatusChanged, gui, &BitcoinGUI::updateWalletStatus);\n+    connect(gui, &BitcoinGUI::setPrivacy, walletView, &WalletView::setPrivacy);\n \n     return true;\n }"
      },
      {
        "sha": "35e36e39be9bceb94324ee475b573949257b892e",
        "filename": "src/qt/walletview.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletview.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletview.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.cpp?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -85,6 +85,8 @@ WalletView::WalletView(const PlatformStyle *_platformStyle, QWidget *parent):\n     connect(sendCoinsPage, &SendCoinsDialog::message, this, &WalletView::message);\n     // Pass through messages from transactionView\n     connect(transactionView, &TransactionView::message, this, &WalletView::message);\n+\n+    connect(this, &WalletView::setPrivacy, overviewPage, &OverviewPage::setPrivacy);\n }\n \n WalletView::~WalletView()"
      },
      {
        "sha": "fd09456baa190959660ed9027a8b5507258bcdd0",
        "filename": "src/qt/walletview.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletview.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8d75115844baefe5cad4d82ec8dce001dd16eb9c/src/qt/walletview.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletview.h?ref=8d75115844baefe5cad4d82ec8dce001dd16eb9c",
        "patch": "@@ -115,6 +115,7 @@ public Q_SLOTS:\n     void requestedSyncWarningInfo();\n \n Q_SIGNALS:\n+    void setPrivacy(bool privacy);\n     void transactionClicked();\n     void coinsSent();\n     /**  Fired when a message should be reported to the user */"
      }
    ]
  }
]