laanwj,2016-10-26T12:13:32Z,"utACK, but please remove the deprecation warning. We may want to repurpose the ints as 'verbosity level' in the future, if an even more verbose mode is added. See https://github.com/bitcoin/bitcoin/pull/8704#issuecomment-256321542 . There's zero overhead in simply accepting both without warnings or complaints.\n\nMaybe add a `GetVerbosityLevel` function that accepts UniValue and returns int. It wo",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-256329271,256329271,
luke-jr,2016-10-26T12:15:42Z,"Seems if we're going to do a verbosity level for getblock, we should just make that the ""preferred"" form here too?\n",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-256329719,256329719,
jnewbery,2016-10-26T12:29:46Z,"> Seems if we're going to do a verbosity level for getblock, we should just make that the ""preferred"" form here too?\n\nNACK. There are several other RPCs which take a bool for a more verbose output: getrawmempool, getmempoolancestors, getmempooldescendants, getblockheader, getblock, gettxout (where the option is includemempool). As far as I can tell, getrawtransaction is the _only_ call which cur",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-256332743,256332743,
jnewbery,2016-10-26T12:39:59Z,@laanwj - warning removed and commits squashed.\n,https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-256334888,256334888,
jonasschnelli,2016-10-28T08:50:31Z,"utACK 837c06fe22a08d49f480ae629767c1ed8b7b9246, maybe consider nits/simplifications.\n",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-256869307,256869307,
jnewbery,2016-11-02T17:45:48Z,Thanks @jonasschnelli . Nits fixed and squashed.\n,https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-257943267,257943267,
laanwj,2016-11-21T08:13:56Z,"@jnewbery this just needs my above comment fixed and it can be merged.\n",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-261870936,261870936,
jnewbery,2016-11-21T11:10:34Z,Thanks @laanwj . I've made the suggested change. I want to write some additional test cases to cover the new code and then I'll push the new commits.,https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-261908999,261908999,
jnewbery,2016-11-22T14:40:46Z,"@laanwj - as requested, `getrawtransaction` now throws an error whenever an argument is passed in which isn't either a bool or an int. I've also added test cases to rawtransaction.py to cover cover the RPC.",https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-262257703,262257703,
laanwj,2016-11-23T06:12:29Z,utACK https://github.com/bitcoin/bitcoin/pull/9025/commits/240189b2c14244c3058e80b40bd4dacbd200c4c7,https://github.com/bitcoin/bitcoin/pull/9025#issuecomment-262440900,262440900,
jonasschnelli,2016-10-28T08:47:57Z,maybe `s/or set to 0/or set to false/`?\n,https://github.com/bitcoin/bitcoin/pull/9025#discussion_r85492879,85492879,src/rpc/rawtransaction.cpp
jonasschnelli,2016-10-28T08:50:09Z,maybe simplify with `s/(request.params[1].isBool() && request.params[1].get_bool())/request.params[1].isTrue()/`\n,https://github.com/bitcoin/bitcoin/pull/9025#discussion_r85493169,85493169,src/rpc/rawtransaction.cpp
laanwj,2016-11-02T20:28:24Z,"Note that isTrue doesn't _fail_ if the value is not a bool, so this also accepts non-bool and non-int values. E.g.:\n\n```\nsrc/bitcoin-cli -regtest getrawtransaction 0000000000000000000000000000000000000000000000000000000000000000 '""b""'\nerror code: -5\nerror message:\nNo information available about transaction\n```\n\nSame for `{}` `[]` etc. Should probably raise an error in that case.\n",https://github.com/bitcoin/bitcoin/pull/9025#discussion_r86235013,86235013,src/rpc/rawtransaction.cpp
