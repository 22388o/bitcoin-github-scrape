[
  {
    "sha": "8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YjlhZGNhNDQ2MWQwY2I2YmRmY2E3Yjc0MjI4ZDQzMGI5YjlkMTE2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T10:48:22Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-12-20T15:07:33Z"
      },
      "message": "Allow `-noserver` with bitcoind\n\nAllow running bitcoind without server.\n\n- Default to -server mode (of course) for bitcoind with SoftSetBoolArg\n- Remove fForceServer argument from AppInit2\n- Move fDaemon to a static variable in bitcoind",
      "tree": {
        "sha": "8c808c370f97b626bc9318a7ece95de2a6525435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8c808c370f97b626bc9318a7ece95de2a6525435"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e508b55885ba747dce2e3fd5ef4c05572cda0b0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9e508b55885ba747dce2e3fd5ef4c05572cda0b0"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 11,
      "deletions": 17
    },
    "files": [
      {
        "sha": "5d872188443d3f10604f92c56138660531049779",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -30,6 +30,8 @@\n  * Use the buttons <code>Namespaces</code>, <code>Classes</code> or <code>Files</code> at the top of the page to start navigating the code.\n  */\n \n+static bool fDaemon;\n+\n void DetectShutdownThread(boost::thread_group* threadGroup)\n {\n     bool fShutdown = ShutdownRequested();\n@@ -108,6 +110,8 @@ bool AppInit(int argc, char* argv[])\n         fDaemon = GetBoolArg(\"-daemon\", false);\n         if (fDaemon)\n         {\n+            fprintf(stdout, \"Bitcoin server starting\\n\");\n+\n             // Daemonize\n             pid_t pid = fork();\n             if (pid < 0)\n@@ -127,9 +131,10 @@ bool AppInit(int argc, char* argv[])\n                 fprintf(stderr, \"Error: setsid() returned %d errno %d\\n\", sid, errno);\n         }\n #endif\n+        SoftSetBoolArg(\"-server\", true);\n \n         detectShutdownThread = new boost::thread(boost::bind(&DetectShutdownThread, &threadGroup));\n-        fRet = AppInit2(threadGroup, true);\n+        fRet = AppInit2(threadGroup);\n     }\n     catch (std::exception& e) {\n         PrintExceptionContinue(&e, \"AppInit()\");"
      },
      {
        "sha": "275985604ede17deafabfad2b5ba0d7aa68bd100",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -242,10 +242,7 @@ std::string HelpMessage(HelpMessageMode hmm)\n     strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n     strUsage += \"  -regtest               \" + _(\"Enter regression test mode, which uses a special chain in which blocks can be solved instantly.\") + \"\\n\";\n     strUsage += \"                         \" + _(\"This is intended for regression testing tools and app development.\") + \"\\n\";\n-    if (hmm == HMM_BITCOIN_QT)\n-    {\n-        strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n-    }\n+    strUsage += \"  -server                \" + _(\"Accept command line and JSON-RPC commands\") + \"\\n\";\n \n     if (hmm == HMM_BITCOIND)\n     {\n@@ -356,7 +353,7 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n /** Initialize bitcoin.\n  *  @pre Parameters should be parsed and config file should be read.\n  */\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n+bool AppInit2(boost::thread_group& threadGroup)\n {\n     // ********************************************************* Step 1: setup\n #ifdef _MSC_VER\n@@ -483,11 +480,7 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     else if (nScriptCheckThreads > MAX_SCRIPTCHECK_THREADS)\n         nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n \n-    if (fDaemon || fForceServer)\n-        fServer = true;\n-    else\n-        fServer = GetBoolArg(\"-server\", false);\n-\n+    fServer = GetBoolArg(\"-server\", false);\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n #ifdef ENABLE_WALLET\n@@ -569,9 +562,6 @@ bool AppInit2(boost::thread_group& threadGroup, bool fForceServer)\n     LogPrintf(\"Using at most %i connections (%i file descriptors available)\\n\", nMaxConnections, nFD);\n     std::ostringstream strErrors;\n \n-    if (fDaemon)\n-        fprintf(stdout, \"Bitcoin server starting\\n\");\n-\n     if (nScriptCheckThreads) {\n         LogPrintf(\"Using %u threads for script verification\\n\", nScriptCheckThreads);\n         for (int i=0; i<nScriptCheckThreads-1; i++)"
      },
      {
        "sha": "2f56923055354ef96a094151a61310b5a21aa419",
        "filename": "src/init.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/init.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.h?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -20,7 +20,7 @@ extern CWallet* pwalletMain;\n void StartShutdown();\n bool ShutdownRequested();\n void Shutdown();\n-bool AppInit2(boost::thread_group& threadGroup, bool fForceServer);\n+bool AppInit2(boost::thread_group& threadGroup);\n \n /* The help message mode determines what help message to show */\n enum HelpMessageMode"
      },
      {
        "sha": "9565d3ef7a83876d2cfe8d236768d39f68af5313",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -289,7 +289,7 @@ int main(int argc, char *argv[])\n         QObject::connect(pollShutdownTimer, SIGNAL(timeout()), guiref, SLOT(detectShutdown()));\n         pollShutdownTimer->start(200);\n \n-        if(AppInit2(threadGroup, false))\n+        if(AppInit2(threadGroup))\n         {\n             {\n                 // Put this in a block, so that the Model objects are cleaned up before"
      },
      {
        "sha": "c6a1318fd78d26cc304c29451f2c15fef9748dc7",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b9adca4461d0cb6bdfca7b74228d430b9b9d116/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=8b9adca4461d0cb6bdfca7b74228d430b9b9d116",
        "patch": "@@ -121,7 +121,6 @@ extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugLog;\n-extern bool fDaemon;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fNoListen;"
      }
    ]
  }
]