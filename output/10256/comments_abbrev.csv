TheBlueMatt,2017-04-26T00:45:24Z,utACK. It would be cool to also test the include_mempool flag to gettxout to check that a) things which are spent in the mempool arent visible via gettxout (even though they are without include_mempool) and b) things which are only available in the mempool are inversely visible.,https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-297205628,297205628,
jimmysong,2017-04-26T01:24:07Z,"@TheBlueMatt Thank you for your excellent suggestion. I've made the changes as you suggested, squashed and rebased.",https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-297210918,297210918,
jimmysong,2017-04-28T21:54:46Z,"nits addressed, rebased and squashed.",https://github.com/bitcoin/bitcoin/pull/10256#issuecomment-298115603,298115603,
jnewbery,2017-04-28T21:28:23Z,"nit: my personal preference is to make this kind of 'heading' comment into a log, so test runners have some feedback as they're running the test.",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023127,114023127,test/functional/wallet.py
jnewbery,2017-04-28T21:29:31Z,"This comment isn't quite right. We're not looking at a confirmed transaction here, we're looking at a transaction output who's spend is unconfirmed. That's why if include_mempool is set to False, we still think we own this output",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023292,114023292,test/functional/wallet.py
jnewbery,2017-04-28T21:31:13Z,"no need for brackets here. [assert is a statement, not a function](http://stackoverflow.com/a/30770447/933705).\n\nThis should just be: `assert not txout`",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114023528,114023528,test/functional/wallet.py
jnewbery,2017-04-28T21:34:33Z,"I think the intent is clearer if you collect both txouts above, and then test that one of them is equal to 10 and the other is equal to balance. Something like:\n\n```\ntxout0 = self.nodes[0].gettxout(mempool_txid, 0, True)\ntxout1 = self.nodes[0].gettxout(mempool_txid, 1, True)\n\nbalance = self.nodes[0].getbalance()\nassert_equal(set(10, balance), set(txout0['value'], txout1['value']))\n",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024035,114024035,test/functional/wallet.py
jnewbery,2017-04-28T21:36:03Z,"consider using named arguments when the positional arguments are just bools. It makes it difficult for the reader to know what the argument is for (alright, I know you've explained it in the comment above, but the reader still needs to trust that you're right!)",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114024244,114024244,test/functional/wallet.py
jimmysong,2017-04-28T21:49:37Z,good idea,https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114026198,114026198,test/functional/wallet.py
MarcoFalke,2017-04-29T12:45:04Z,"nit: In the future you might use named args for arguments that are unnamed boolean or integers of a function that takes more than one arg.\n\n\n```py\ngettxout(txid=mempool_txid, n=1,include_mempool= True)",https://github.com/bitcoin/bitcoin/pull/10256#discussion_r114052814,114052814,test/functional/wallet.py
