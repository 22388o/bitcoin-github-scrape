[
  {
    "sha": "fa84723e73d3d7766e7821881ac96ec203e50efc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTg0NzIzZTczZDNkNzc2NmU3ODIxODgxYWM5NmVjMjAzZTUwZWZj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-17T18:33:52Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-09-17T18:34:56Z"
      },
      "message": "amount: Move CAmount CENT to unit test header",
      "tree": {
        "sha": "9c787a6f86911345f09c5cb1b708cc58095f9209",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/9c787a6f86911345f09c5cb1b708cc58095f9209"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa84723e73d3d7766e7821881ac96ec203e50efc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJbn/PQAAoJEM4rdWl+aaVIrQcMAJsK6KCxcMt0GB34HNTvpDyw\nZ6CCUSsvU1XqBqlNEB9xEcNum+g6oo4mHmJOq1f/HIWOYmvZSR0VGP9ckYyOFVvX\nSrMOp9i5i+5750kx6kOAucbKZaHaD/UBBKD5HBojTyRpmb9atdl59MaOw4HqlEEk\nrO0LCVkhyBImDgtRwEdEZyTwaC0Sv8yOOUhJHPd4rFmncP/jnjghxoBzOO+DyoS9\nrEFAn+0FacrubZISUNXC+BhHOXklZKoKtGIttShFGLwhiK7oR8ApX3PTIKk3b6FC\nESoBFc2VBaYMPfd4jLTgzK09eADJQoZAwNwRlV4HeZJRgdkl7KHQtXf+a8i/ECxd\nLCnGKBPu9MpJbZza3Lzb7x4YSAWQ2IepZThdgha1gfp/Zksog+DUO1jdPN9TSAax\nooBbxqtbVXaP+TM1RFI7yjWve4LFTFp0uazFQJhFXN46y26Dzbr6UcpwgUfpe4e7\nkRTGt3imiE5/Us0Bgrgre4K2L0A/DnLrXDzpPXQi2g==\n=J8Et\n-----END PGP SIGNATURE-----",
        "payload": "tree 9c787a6f86911345f09c5cb1b708cc58095f9209\nparent 4901c00792c1dabae4bb01e6373c9b1ed9ef3008\nauthor MarcoFalke <falke.marco@gmail.com> 1537209232 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1537209296 -0400\n\namount: Move CAmount CENT to unit test header\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa84723e73d3d7766e7821881ac96ec203e50efc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa84723e73d3d7766e7821881ac96ec203e50efc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa84723e73d3d7766e7821881ac96ec203e50efc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4901c00792c1dabae4bb01e6373c9b1ed9ef3008",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4901c00792c1dabae4bb01e6373c9b1ed9ef3008",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4901c00792c1dabae4bb01e6373c9b1ed9ef3008"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "449fd1b15f6e0e7bb8e7f1b5f48394d291df4ac6",
        "filename": "src/amount.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa84723e73d3d7766e7821881ac96ec203e50efc/src/amount.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa84723e73d3d7766e7821881ac96ec203e50efc/src/amount.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/amount.h?ref=fa84723e73d3d7766e7821881ac96ec203e50efc",
        "patch": "@@ -12,7 +12,6 @@\n typedef int64_t CAmount;\n \n static const CAmount COIN = 100000000;\n-static const CAmount CENT = 1000000;\n \n /** No amount larger than this (in satoshi) is valid.\n  *"
      },
      {
        "sha": "b8d82c0a89d92e7b5765e8d1dd9c7e23a4cfe204",
        "filename": "src/bench/ccoins_caching.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa84723e73d3d7766e7821881ac96ec203e50efc/src/bench/ccoins_caching.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa84723e73d3d7766e7821881ac96ec203e50efc/src/bench/ccoins_caching.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/ccoins_caching.cpp?ref=fa84723e73d3d7766e7821881ac96ec203e50efc",
        "patch": "@@ -12,8 +12,8 @@\n // FIXME: Dedup with SetupDummyInputs in test/transaction_tests.cpp.\n //\n // Helper: create two dummy transactions, each with\n-// two outputs.  The first has 11 and 50 CENT outputs\n-// paid to a TX_PUBKEY, the second 21 and 22 CENT outputs\n+// two outputs.  The first has 11 and 50 COIN outputs\n+// paid to a TX_PUBKEY, the second 21 and 22 COIN outputs\n // paid to a TX_PUBKEYHASH.\n //\n static std::vector<CMutableTransaction>\n@@ -31,16 +31,16 @@ SetupDummyInputs(CBasicKeyStore& keystoreRet, CCoinsViewCache& coinsRet)\n \n     // Create some dummy input transactions\n     dummyTransactions[0].vout.resize(2);\n-    dummyTransactions[0].vout[0].nValue = 11 * CENT;\n+    dummyTransactions[0].vout[0].nValue = 11 * COIN;\n     dummyTransactions[0].vout[0].scriptPubKey << ToByteVector(key[0].GetPubKey()) << OP_CHECKSIG;\n-    dummyTransactions[0].vout[1].nValue = 50 * CENT;\n+    dummyTransactions[0].vout[1].nValue = 50 * COIN;\n     dummyTransactions[0].vout[1].scriptPubKey << ToByteVector(key[1].GetPubKey()) << OP_CHECKSIG;\n     AddCoins(coinsRet, dummyTransactions[0], 0);\n \n     dummyTransactions[1].vout.resize(2);\n-    dummyTransactions[1].vout[0].nValue = 21 * CENT;\n+    dummyTransactions[1].vout[0].nValue = 21 * COIN;\n     dummyTransactions[1].vout[0].scriptPubKey = GetScriptForDestination(key[2].GetPubKey().GetID());\n-    dummyTransactions[1].vout[1].nValue = 22 * CENT;\n+    dummyTransactions[1].vout[1].nValue = 22 * COIN;\n     dummyTransactions[1].vout[1].scriptPubKey = GetScriptForDestination(key[3].GetPubKey().GetID());\n     AddCoins(coinsRet, dummyTransactions[1], 0);\n \n@@ -72,15 +72,15 @@ static void CCoinsCaching(benchmark::State& state)\n     t1.vin[2].prevout.n = 1;\n     t1.vin[2].scriptSig << std::vector<unsigned char>(65, 0) << std::vector<unsigned char>(33, 4);\n     t1.vout.resize(2);\n-    t1.vout[0].nValue = 90 * CENT;\n+    t1.vout[0].nValue = 90 * COIN;\n     t1.vout[0].scriptPubKey << OP_1;\n \n     // Benchmark.\n     while (state.KeepRunning()) {\n         bool success = AreInputsStandard(t1, coins);\n         assert(success);\n         CAmount value = coins.GetValueIn(t1);\n-        assert(value == (50 + 21 + 22) * CENT);\n+        assert(value == (50 + 21 + 22) * COIN);\n     }\n }\n "
      },
      {
        "sha": "38727671338f9e13e0fdd8e75e1659d7c2f2884c",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa84723e73d3d7766e7821881ac96ec203e50efc/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa84723e73d3d7766e7821881ac96ec203e50efc/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=fa84723e73d3d7766e7821881ac96ec203e50efc",
        "patch": "@@ -37,6 +37,8 @@ static inline uint64_t InsecureRandBits(int bits) { return insecure_rand_ctx.ran\n static inline uint64_t InsecureRandRange(uint64_t range) { return insecure_rand_ctx.randrange(range); }\n static inline bool InsecureRandBool() { return insecure_rand_ctx.randbool(); }\n \n+static constexpr CAmount CENT{1000000};\n+\n /** Basic testing setup.\n  * This just configures logging and chain parameters.\n  */"
      },
      {
        "sha": "326ef9b27a0ea0c5e07c335838ce15b83b98451f",
        "filename": "src/utilmoneystr.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa84723e73d3d7766e7821881ac96ec203e50efc/src/utilmoneystr.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa84723e73d3d7766e7821881ac96ec203e50efc/src/utilmoneystr.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utilmoneystr.cpp?ref=fa84723e73d3d7766e7821881ac96ec203e50efc",
        "patch": "@@ -48,7 +48,7 @@ bool ParseMoney(const char* pszIn, CAmount& nRet)\n         if (*p == '.')\n         {\n             p++;\n-            int64_t nMult = CENT*10;\n+            int64_t nMult = COIN / 10;\n             while (isdigit(*p) && (nMult > 0))\n             {\n                 nUnits += nMult * (*p++ - '0');"
      },
      {
        "sha": "5348401f452f534aef084f7655563e6759a52259",
        "filename": "src/wallet/coinselection.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa84723e73d3d7766e7821881ac96ec203e50efc/src/wallet/coinselection.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa84723e73d3d7766e7821881ac96ec203e50efc/src/wallet/coinselection.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.h?ref=fa84723e73d3d7766e7821881ac96ec203e50efc",
        "patch": "@@ -10,7 +10,7 @@\n #include <random.h>\n \n //! target minimum change amount\n-static const CAmount MIN_CHANGE = CENT;\n+static constexpr CAmount MIN_CHANGE{COIN / 100};\n //! final minimum change amount after paying for fees\n static const CAmount MIN_FINAL_CHANGE = MIN_CHANGE/2;\n "
      }
    ]
  }
]