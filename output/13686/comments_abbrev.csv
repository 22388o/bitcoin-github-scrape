domob1812,2018-07-17T11:20:47Z,"I split the patch into three commits which I think make sense logically and for the review.  But of course I'm happy to squash any of the changes, or to revert parts of them (as code readability is a matter of taste).",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-405548089,405548089,
promag,2018-07-24T15:56:16Z,"Concept ACK.\n\nFrom a quick view LGTM.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-407458155,407458155,
DrahtBot,2018-07-27T12:31:55Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19572 (ZMQ: Create ""sequence"" notifier, enabling client-side mempool tracking by instagibbs)\n* #18309 (zmq: Add support ",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-408405205,408405205,
domob1812,2018-08-08T16:16:10Z,Rebased,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-411464381,411464381,
kostyantyn,2018-08-20T22:00:15Z,"What do you think about wrapping the code with `zmq` namespace and removing `ZMQ/zmq` prefix from class/function names? \nBasically when the location of the file is `a/b/c.cpp` then we have:\n```c++\nnamespace a {\nnamespace b {\nclass C {}\n}\n}\n```",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-414477412,414477412,
domob1812,2018-08-21T05:59:43Z,"@kostyantyn:  At least for now, there seems to be not much namespace usage at all in the Bitcoin code - so I'm not sure if we should change that lightly.  Also, note that `zmq` is the namespace that is also used by ZMQ's own C++ language bindings; they are currently not used, but I proposed to change that (#13957).\n\nAlso, note that C++ namespaces are [different from Java's](https://stackoverfl",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-414558960,414558960,
laanwj,2018-08-31T11:38:00Z,"Concept ACK\n\n@jmcorgan do you mind taking a look here?",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-417638053,417638053,
domob1812,2018-11-05T14:24:08Z,Rebased,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-435892994,435892994,
domob1812,2018-12-11T09:28:35Z,"@hebasto:  For some reason, Github won't let me reply this directly to your comment above.  The guard is not necessary, since it is present already where the `src/zmq` files themselves are used - e.g. in `src/init.cpp`.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-446132335,446132335,
domob1812,2019-05-02T08:03:41Z,Rebased.  Is there anything missing for me to do here?  I think this is a real improvement to the quality of the ZMQ code.,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-488584288,488584288,
fanquake,2019-06-16T02:20:14Z,@jmcorgan Are you able to take a look at this?,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-502413698,502413698,
domob1812,2019-10-17T08:35:33Z,"Rebased.  Can I do anything to speed up review / merging of this one?  It should not need review by the original author or a ZMQ expert, as this is mostly just ""standard"" refactoring from manual memory management to the use of proper RAII (e.g. `std::unique_ptr`).",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-543069070,543069070,
domob1812,2019-10-17T10:43:58Z,"Thanks for the review!  I've addressed your comments in follow-up commits (I do not want to force-push right now and perhaps mess up your ongoing review).  I will add them as fixups to the proper commits later when you are done with the review.\n\nI can then also split out the creation of `TryForEachAndRemoveFailed` into a separate commit if you prefer that.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-543116340,543116340,
domob1812,2020-01-01T08:02:17Z,Rebased,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-570032472,570032472,
domob1812,2020-09-01T07:07:49Z,"Thanks for the review, @hebasto, very appreciated!  I've addressed your suggestions now with fixup commits.  I will now rebase this onto current master, and then go clean up the commit history (including splitting out the refactor as suggested by @promag and you).",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-684502925,684502925,
domob1812,2020-09-01T08:06:00Z,"Rebase done, and I've now cleaned up the commit history as well (squashed in the ""fixup"" commits as appropriate).  Also split out the `TryForEachAndRemoveFailed` refactor into its own commit.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-684534581,684534581,
hebasto,2020-09-06T08:17:30Z,The first commit 707c4803d5edd2d5ebd6febb33e08bb031630652 is not compiled for me. Make iterator type `auto`?,https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-687722745,687722745,
domob1812,2020-09-07T09:06:24Z,"> The first commit [707c480](https://github.com/bitcoin/bitcoin/commit/707c4803d5edd2d5ebd6febb33e08bb031630652) is not compiled for me. Make iterator type `auto`?\n\nSorry for that, it is fixed now.  The overall PR is not changed (except I've rebased it to current `master`), but now each individual commit builds.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-688183325,688183325,
domob1812,2020-09-15T07:40:16Z,"> Mind making the latest commit [166ddcb](https://github.com/bitcoin/bitcoin/commit/166ddcbef82ba2b6734e8f09584fb73e4f9f98a4) a sripted-diff with the following script:\n\nGood point, done.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-692529582,692529582,
instagibbs,2020-09-15T14:23:58Z,"utACK 6fe2ef2acb00b1df7f6a0c0dea1a81a1924be0e1\n\nI restarted one travis job that appeared to be a spurious timeout.",https://github.com/bitcoin/bitcoin/pull/13686#issuecomment-692749601,692749601,
ken2812221,2018-09-14T07:02:39Z,Missing a bunch of includes here. See appveyor CI result.,https://github.com/bitcoin/bitcoin/pull/13686#discussion_r217617362,217617362,src/zmq/zmqabstractnotifier.h
domob1812,2018-11-06T10:04:39Z,"I missed that comment - I've now revised the commit to include `<string>`.  There are still CI errors, though, which I don't understand so far.  Has anyone an insight of where they come from?  I'll try to resolve them now.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r231062743,231062743,src/zmq/zmqabstractnotifier.h
ken2812221,2018-11-09T09:23:20Z,"I would suggest adding the following code for Windows.\n```cpp\n#if defined(WIN32) && defined(SendMessage)\n#undef SendMessage\n#endif\n```\nWindows headers have defined `SendMessage` as `SendMessageA` or `SendMessageW`\n\nOr you could rename the method name `SendMessage`.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r232186774,232186774,src/zmq/zmqpublishnotifier.cpp
domob1812,2018-11-10T20:08:00Z,"Thanks, very interesting!  From a quick look, I didn't see what my PR changes here and why it worked before - but I guess a defensive rename of the method is not a bad idea.  I did that now in a separate commit and pushed it, just to see if it fixes the CI issues.  If it does, I can include this directly in one of the commits or perhaps just keep it as it is.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r232464426,232464426,src/zmq/zmqpublishnotifier.cpp
domob1812,2018-11-11T17:55:33Z,"Indeed, looks like the tests pass now.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r232497791,232497791,src/zmq/zmqpublishnotifier.cpp
hebasto,2018-12-10T15:04:08Z,"Why is a guard dropped?\n```\n#ifdef ENABLE_ZMQ\n#include <zmq.h>\n#endif\n```",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r240245100,240245100,src/zmq/zmqnotificationinterface.cpp
domob1812,2019-10-17T08:34:28Z,"I think I've replied on this before, but just in case and for the record:  The guard that used to be here was redundant, as there is a guard already (e.g. in `init.cpp`) around `zmqnotificationinterface` itself.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335874634,335874634,src/zmq/zmqnotificationinterface.cpp
promag,2019-10-17T08:56:41Z,"f18bc54cab43ef1de8502b8f84b5585ae68af4bc\n\nAccording to developer notes put `{` here.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335885561,335885561,src/zmq/zmqnotificationinterface.cpp
promag,2019-10-17T08:57:28Z,"f18bc54cab43ef1de8502b8f84b5585ae68af4bc\n\nCould make this refactor in a separate commit?",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335885955,335885955,src/zmq/zmqnotificationinterface.cpp
promag,2019-10-17T09:00:24Z,"d10f274a6e0291e752e25b2bd99c0472d22a420f\n\n`MakeUnique`?",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335887469,335887469,src/zmq/zmqabstractnotifier.h
domob1812,2019-10-17T10:42:39Z,Done.,https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335934025,335934025,src/zmq/zmqnotificationinterface.cpp
domob1812,2019-10-17T10:42:46Z,Done.,https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335934078,335934078,src/zmq/zmqabstractnotifier.h
domob1812,2019-10-17T11:03:27Z,"Yes sure, if you prefer.  Let's finish the review of the code first, and then I will rework the commit history as desired afterwards (else we might mess up the ongoing review with force-pushes).",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r335941538,335941538,src/zmq/zmqnotificationinterface.cpp
hebasto,2020-08-27T08:57:24Z,"69f92ffce9f0d11d9389610e702b99d9038f3fed\n\n> Could make this refactor in a separate commit?\n\nAgree with @promag.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478264263,478264263,src/zmq/zmqnotificationinterface.cpp
hebasto,2020-08-27T09:00:50Z,"69f92ffce9f0d11d9389610e702b99d9038f3fed\n\nIf this code is touched to make it easier to read and maintain, may I suggest a simpler approach:\n```\n    if (!notifiers.empty()) {\n        auto notificationInterface = std::unique_ptr<CZMQNotificationInterface>(new CZMQNotificationInterface());\n        notificationInterface->notifiers = std::move(notifiers);\n\n        if (notificationInterf",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478266424,478266424,src/zmq/zmqnotificationinterface.cpp
hebasto,2020-08-27T09:07:51Z,"```suggestion\n#include <cstdarg>\n#include <cstddef>\n#include <map>\n#include <string>\n#include <utility>\n```",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478270471,478270471,src/zmq/zmqpublishnotifier.cpp
hebasto,2020-08-27T09:09:54Z,Is this required here as no defines from `bitcoin-config.h` is used here?,https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478271658,478271658,src/zmq/zmqpublishnotifier.cpp
hebasto,2020-08-27T09:11:41Z,"49e2cb78563df27ff0a5d2ad985e074ee98afcce\nnanonit:\n```suggestion\nvoid zmqError(const char* str);\n```",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478272697,478272697,src/zmq/zmqutil.h
hebasto,2020-08-27T09:12:11Z,"49e2cb78563df27ff0a5d2ad985e074ee98afcce\nnanonit:\n```suggestion\nvoid zmqError(const char* str)\n```",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r478273007,478273007,src/zmq/zmqutil.cpp
domob1812,2020-09-01T06:59:13Z,"Indeed, I've pushed this change together with the two nanonits below (in a single commit).",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r480894881,480894881,src/zmq/zmqpublishnotifier.cpp
domob1812,2020-09-01T07:01:02Z,"I guess not, removed.",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r480896304,480896304,src/zmq/zmqpublishnotifier.cpp
domob1812,2020-09-01T07:06:19Z,"Indeed, looks better.  I've updated the code accordingly (except I changed the `auto notificationInterface = ...` line slightly into what I consider even clearer; but let me know if you prefer your suggestion).",https://github.com/bitcoin/bitcoin/pull/13686#discussion_r480900191,480900191,src/zmq/zmqnotificationinterface.cpp
instagibbs,2020-09-15T14:13:24Z,Note for reviewers: I think this is resolved?,https://github.com/bitcoin/bitcoin/pull/13686#discussion_r488701385,488701385,src/zmq/zmqnotificationinterface.cpp
