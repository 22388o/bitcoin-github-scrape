[
  {
    "sha": "fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQzZDJhNjI0Mzc3ZGU0YjAzMTFlNmRkZDQ0NmMzNmRhZmQxZGRj",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-19T21:52:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-20T13:31:02Z"
      },
      "message": "test: Create data dir in BasicTestingSetup",
      "tree": {
        "sha": "6663ba6afdd3b667880fdc5aee0b410c20f85d89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6663ba6afdd3b667880fdc5aee0b410c20f85d89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjc5Qv/aDu5n8gfXNqO/ym1u9Pz8rWlABJp1varQ703dY3IUXoPQSzA8TjgDbHk\nhaFg+LovQWOubg6uYTZV+t82Q0K+sCpzDgsAE9639nMF6WYdxexzzdR1y3xYNVkV\nc7JqdLfHpXg6zM2lV6gyxWt0Q/LQ7iVcqPoZmIDkC3mbTiv7M+OyZlPb9LdN/zqc\n50U/CiozqjlJAgxHFL2X9uud60IMQ0IDtdvE5CHhyMRbjbvBujjI0Fj4fZO+Qohi\nlBr+Vq3nMxTlcNKSkI57MksF646g+j+QXOndrbOClnkqcb55t1cksHEbB3kaEv+z\nmMlN/oD3G3y7lQY11P2fmOtdYWQZtLdzGI6S8Hs7hW2uaoUxb6T6FNCNb/S5iWnu\n2Cm670DDEhwVrFeTAIMAnFRvlzdGpOuQaBaY8hC2YaymHWc61+FRovcCq40dnxDf\nQn3KqQrmSvmzvDK5Y+bHxPZSNXNDOZ59WeyI8KF02DiDWQZdmLe9LMHAYDQhKIcQ\nFAa39Eq4\n=uZDo\n-----END PGP SIGNATURE-----",
        "payload": "tree 6663ba6afdd3b667880fdc5aee0b410c20f85d89\nparent b1344eac5fcccd1847438ca203ce625f30d1151d\nauthor MarcoFalke <falke.marco@gmail.com> 1560981155 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1561037462 -0400\n\ntest: Create data dir in BasicTestingSetup\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b1344eac5fcccd1847438ca203ce625f30d1151d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b1344eac5fcccd1847438ca203ce625f30d1151d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b1344eac5fcccd1847438ca203ce625f30d1151d"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 28,
      "deletions": 42
    },
    "files": [
      {
        "sha": "a9db4054774c4c55f67db8b0b74acfc18dfd64ae",
        "filename": "src/test/blockfilter_index_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/blockfilter_index_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/blockfilter_index_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/blockfilter_index_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -267,8 +267,6 @@ BOOST_FIXTURE_TEST_CASE(blockfilter_index_initial_sync, TestChain100Setup)\n \n BOOST_FIXTURE_TEST_CASE(blockfilter_index_init_destroy, BasicTestingSetup)\n {\n-    SetDataDir(\"tempdir\");\n-\n     BlockFilterIndex* filter_index;\n \n     filter_index = GetBlockFilterIndex(BlockFilterType::BASIC);"
      },
      {
        "sha": "a518dbaf55a8cda6fad8625fc04c40a497420e05",
        "filename": "src/test/dbwrapper_tests.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/dbwrapper_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/dbwrapper_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/dbwrapper_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -27,7 +27,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (const bool obfuscate : {false, true}) {\n-        fs::path ph = SetDataDir(std::string(\"dbwrapper\").append(obfuscate ? \"_true\" : \"_false\"));\n+        fs::path ph = GetDataDir() / (obfuscate ? \"dbwrapper_obfuscate_true\" : \"dbwrapper_obfuscate_false\");\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n         char key = 'k';\n         uint256 in = InsecureRand256();\n@@ -47,7 +47,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_batch)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (const bool obfuscate : {false, true}) {\n-        fs::path ph = SetDataDir(std::string(\"dbwrapper_batch\").append(obfuscate ? \"_true\" : \"_false\"));\n+        fs::path ph = GetDataDir() / (obfuscate ? \"dbwrapper_batch_obfuscate_true\" : \"dbwrapper_batch_obfuscate_false\");\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         char key = 'i';\n@@ -83,7 +83,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n {\n     // Perform tests both obfuscated and non-obfuscated.\n     for (const bool obfuscate : {false, true}) {\n-        fs::path ph = SetDataDir(std::string(\"dbwrapper_iterator\").append(obfuscate ? \"_true\" : \"_false\"));\n+        fs::path ph = GetDataDir() / (obfuscate ? \"dbwrapper_iterator_obfuscate_true\" : \"dbwrapper_iterator_obfuscate_false\");\n         CDBWrapper dbw(ph, (1 << 20), true, false, obfuscate);\n \n         // The two keys are intentionally chosen for ordering\n@@ -123,7 +123,7 @@ BOOST_AUTO_TEST_CASE(dbwrapper_iterator)\n BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n {\n     // We're going to share this fs::path between two wrappers\n-    fs::path ph = SetDataDir(\"existing_data_no_obfuscate\");\n+    fs::path ph = GetDataDir() / \"existing_data_no_obfuscate\";\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -164,7 +164,7 @@ BOOST_AUTO_TEST_CASE(existing_data_no_obfuscate)\n BOOST_AUTO_TEST_CASE(existing_data_reindex)\n {\n     // We're going to share this fs::path between two wrappers\n-    fs::path ph = SetDataDir(\"existing_data_reindex\");\n+    fs::path ph = GetDataDir() / \"existing_data_reindex\";\n     create_directories(ph);\n \n     // Set up a non-obfuscated wrapper to write some initial data.\n@@ -199,7 +199,7 @@ BOOST_AUTO_TEST_CASE(existing_data_reindex)\n \n BOOST_AUTO_TEST_CASE(iterator_ordering)\n {\n-    fs::path ph = SetDataDir(\"iterator_ordering\");\n+    fs::path ph = GetDataDir() / \"iterator_ordering\";\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<256; ++x) {\n         uint8_t key = x;\n@@ -277,7 +277,7 @@ BOOST_AUTO_TEST_CASE(iterator_string_ordering)\n {\n     char buf[10];\n \n-    fs::path ph = SetDataDir(\"iterator_string_ordering\");\n+    fs::path ph = GetDataDir() / \"iterator_string_ordering\";\n     CDBWrapper dbw(ph, (1 << 20), true, false, false);\n     for (int x=0x00; x<10; ++x) {\n         for (int y = 0; y < 10; y++) {"
      },
      {
        "sha": "ef3946a115203de3d14fe4375012b28977d3e64a",
        "filename": "src/test/flatfile_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/flatfile_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/flatfile_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/flatfile_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -11,7 +11,7 @@ BOOST_FIXTURE_TEST_SUITE(flatfile_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(flatfile_filename)\n {\n-    auto data_dir = SetDataDir(\"flatfile_test\");\n+    const auto data_dir = GetDataDir();\n \n     FlatFilePos pos(456, 789);\n \n@@ -24,7 +24,7 @@ BOOST_AUTO_TEST_CASE(flatfile_filename)\n \n BOOST_AUTO_TEST_CASE(flatfile_open)\n {\n-    auto data_dir = SetDataDir(\"flatfile_test\");\n+    const auto data_dir = GetDataDir();\n     FlatFileSeq seq(data_dir, \"a\", 16 * 1024);\n \n     std::string line1(\"A purely peer-to-peer version of electronic cash would allow online \"\n@@ -85,7 +85,7 @@ BOOST_AUTO_TEST_CASE(flatfile_open)\n \n BOOST_AUTO_TEST_CASE(flatfile_allocate)\n {\n-    auto data_dir = SetDataDir(\"flatfile_test\");\n+    const auto data_dir = GetDataDir();\n     FlatFileSeq seq(data_dir, \"a\", 100);\n \n     bool out_of_space;\n@@ -105,7 +105,7 @@ BOOST_AUTO_TEST_CASE(flatfile_allocate)\n \n BOOST_AUTO_TEST_CASE(flatfile_flush)\n {\n-    auto data_dir = SetDataDir(\"flatfile_test\");\n+    const auto data_dir = GetDataDir();\n     FlatFileSeq seq(data_dir, \"a\", 100);\n \n     bool out_of_space;"
      },
      {
        "sha": "10d3bbde55af3017f8c1eb8ff2a1b1b9cc7f6997",
        "filename": "src/test/fs_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/fs_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/fs_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fs_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -11,7 +11,7 @@ BOOST_FIXTURE_TEST_SUITE(fs_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(fsbridge_fstream)\n {\n-    fs::path tmpfolder = SetDataDir(\"fsbridge_fstream\");\n+    fs::path tmpfolder = GetDataDir();\n     // tmpfile1 should be the same as tmpfile2\n     fs::path tmpfile1 = tmpfolder / \"fs_tests_\u20bf_\ud83c\udfc3\";\n     fs::path tmpfile2 = tmpfolder / L\"fs_tests_\u20bf_\ud83c\udfc3\";"
      },
      {
        "sha": "d23a4b8fcc423b1cb9376207fbf9e05df092a80b",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -89,7 +89,6 @@ BOOST_AUTO_TEST_CASE(cnode_listen_port)\n \n BOOST_AUTO_TEST_CASE(caddrdb_read)\n {\n-    SetDataDir(\"caddrdb_read\");\n     CAddrManUncorrupted addrmanUncorrupted;\n     addrmanUncorrupted.MakeDeterministic();\n \n@@ -135,7 +134,6 @@ BOOST_AUTO_TEST_CASE(caddrdb_read)\n \n BOOST_AUTO_TEST_CASE(caddrdb_read_corrupted)\n {\n-    SetDataDir(\"caddrdb_read_corrupted\");\n     CAddrManCorrupted addrmanCorrupted;\n     addrmanCorrupted.MakeDeterministic();\n "
      },
      {
        "sha": "fe98a1ceac71efdcb2c5442c1f68d03c2c8898de",
        "filename": "src/test/setup_common.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/setup_common.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -34,6 +34,9 @@ std::ostream& operator<<(std::ostream& os, const uint256& num)\n BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n     : m_path_root(fs::temp_directory_path() / \"test_common_\" PACKAGE_NAME / strprintf(\"%lu_%i\", (unsigned long)GetTime(), (int)(InsecureRandRange(1 << 30))))\n {\n+    fs::create_directories(m_path_root);\n+    gArgs.ForceSetArg(\"-datadir\", m_path_root.string());\n+    ClearDatadirCache();\n     SHA256AutoDetect();\n     ECC_Start();\n     SetupEnvironment();\n@@ -55,23 +58,13 @@ BasicTestingSetup::~BasicTestingSetup()\n     ECC_Stop();\n }\n \n-fs::path BasicTestingSetup::SetDataDir(const std::string& name)\n-{\n-    fs::path ret = m_path_root / name;\n-    fs::create_directories(ret);\n-    gArgs.ForceSetArg(\"-datadir\", ret.string());\n-    return ret;\n-}\n-\n TestingSetup::TestingSetup(const std::string& chainName) : BasicTestingSetup(chainName)\n {\n-    SetDataDir(\"tempdir\");\n     const CChainParams& chainparams = Params();\n     // Ideally we'd move all the RPC tests to the functional testing framework\n     // instead of unit tests, but for now we need these here.\n \n     RegisterAllCoreRPCCommands(tableRPC);\n-    ClearDatadirCache();\n \n     // We have to run a scheduler thread to prevent ActivateBestChain\n     // from blocking due to queue overrun."
      },
      {
        "sha": "b1bb5e6b25ac9a7179826ded6406a99c9d6d89f8",
        "filename": "src/test/setup_common.h",
        "status": "modified",
        "additions": 2,
        "deletions": 5,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/setup_common.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/setup_common.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/setup_common.h?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -54,22 +54,19 @@ static inline bool InsecureRandBool() { return g_insecure_rand_ctx.randbool(); }\n static constexpr CAmount CENT{1000000};\n \n /** Basic testing setup.\n- * This just configures logging and chain parameters.\n+ * This just configures logging, data dir and chain parameters.\n  */\n struct BasicTestingSetup {\n     ECCVerifyHandle globalVerifyHandle;\n \n     explicit BasicTestingSetup(const std::string& chainName = CBaseChainParams::MAIN);\n     ~BasicTestingSetup();\n-\n-    fs::path SetDataDir(const std::string& name);\n-\n private:\n     const fs::path m_path_root;\n };\n \n /** Testing setup that configures a complete environment.\n- * Included are data directory, coins database, script check threads setup.\n+ * Included are coins database, script check threads setup.\n  */\n struct TestingSetup : public BasicTestingSetup {\n     boost::thread_group threadGroup;"
      },
      {
        "sha": "d1fcb345b47f297cc2ed68601486a1f39742b056",
        "filename": "src/test/util_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/util_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/test/util_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -1398,7 +1398,7 @@ static void TestOtherProcess(fs::path dirname, std::string lockname, int fd)\n \n BOOST_AUTO_TEST_CASE(test_LockDirectory)\n {\n-    fs::path dirname = SetDataDir(\"test_LockDirectory\") / fs::unique_path();\n+    fs::path dirname = GetDataDir() / \"lock_dir\";\n     const std::string lockname = \".lock\";\n #ifndef WIN32\n     // Revert SIGCHLD to default, otherwise boost.test will catch and fail on\n@@ -1487,7 +1487,7 @@ BOOST_AUTO_TEST_CASE(test_LockDirectory)\n BOOST_AUTO_TEST_CASE(test_DirIsWritable)\n {\n     // Should be able to write to the data dir.\n-    fs::path tmpdirname = SetDataDir(\"test_DirIsWritable\");\n+    fs::path tmpdirname = GetDataDir();\n     BOOST_CHECK_EQUAL(DirIsWritable(tmpdirname), true);\n \n     // Should not be able to write to a non-existent dir."
      },
      {
        "sha": "c9614565722d09cc516fe0bef88d08595e81cf1f",
        "filename": "src/wallet/test/db_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/db_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/db_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/db_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -16,7 +16,7 @@ BOOST_FIXTURE_TEST_SUITE(db_tests, BasicTestingSetup)\n BOOST_AUTO_TEST_CASE(getwalletenv_file)\n {\n     std::string test_name = \"test_name.dat\";\n-    fs::path datadir = SetDataDir(\"tempdir\");\n+    const fs::path datadir = GetDataDir();\n     fs::path file_path = datadir / test_name;\n     std::ofstream f(file_path.BOOST_FILESYSTEM_C_STR);\n     f.close();\n@@ -30,7 +30,7 @@ BOOST_AUTO_TEST_CASE(getwalletenv_file)\n BOOST_AUTO_TEST_CASE(getwalletenv_directory)\n {\n     std::string expected_name = \"wallet.dat\";\n-    fs::path datadir = SetDataDir(\"tempdir\");\n+    const fs::path datadir = GetDataDir();\n \n     std::string filename;\n     std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(datadir, filename);\n@@ -40,8 +40,8 @@ BOOST_AUTO_TEST_CASE(getwalletenv_directory)\n \n BOOST_AUTO_TEST_CASE(getwalletenv_g_dbenvs_multiple)\n {\n-    fs::path datadir = SetDataDir(\"tempdir\");\n-    fs::path datadir_2 = SetDataDir(\"tempdir_2\");\n+    fs::path datadir = GetDataDir() / \"1\";\n+    fs::path datadir_2 = GetDataDir() / \"2\";\n     std::string filename;\n \n     std::shared_ptr<BerkeleyEnvironment> env_1 = GetWalletEnv(datadir, filename);\n@@ -54,8 +54,8 @@ BOOST_AUTO_TEST_CASE(getwalletenv_g_dbenvs_multiple)\n \n BOOST_AUTO_TEST_CASE(getwalletenv_g_dbenvs_free_instance)\n {\n-    fs::path datadir = SetDataDir(\"tempdir\");\n-    fs::path datadir_2 = SetDataDir(\"tempdir_2\");\n+    fs::path datadir = GetDataDir() / \"1\";\n+    fs::path datadir_2 = GetDataDir() / \"2\";\n     std::string filename;\n \n     std::shared_ptr <BerkeleyEnvironment> env_1_a = GetWalletEnv(datadir, filename);"
      },
      {
        "sha": "fcd1f3fea8ba03476e6b1edec793d5e16fb69e47",
        "filename": "src/wallet/test/init_test_fixture.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/init_test_fixture.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/init_test_fixture.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/init_test_fixture.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -13,7 +13,7 @@ InitWalletDirTestingSetup::InitWalletDirTestingSetup(const std::string& chainNam\n     std::string sep;\n     sep += fs::path::preferred_separator;\n \n-    m_datadir = SetDataDir(\"tempdir\");\n+    m_datadir = GetDataDir();\n     m_cwd = fs::current_path();\n \n     m_walletdir_path_cases[\"default\"] = m_datadir / \"wallets\";\n@@ -41,4 +41,4 @@ InitWalletDirTestingSetup::~InitWalletDirTestingSetup()\n void InitWalletDirTestingSetup::SetWalletDir(const fs::path& walletdir_path)\n {\n     gArgs.ForceSetArg(\"-walletdir\", walletdir_path.string());\n-}\n\\ No newline at end of file\n+}"
      },
      {
        "sha": "7f261a61893cc7ebe660c3e07a7e9dc3a52aab6f",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad3d2a624377de4b0311e6ddd446c36dafd1ddc/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "patch": "@@ -192,7 +192,7 @@ BOOST_FIXTURE_TEST_CASE(importwallet_rescan, TestChain100Setup)\n     auto locked_chain = chain->lock();\n     LockAssertion lock(::cs_main);\n \n-    std::string backup_file = (SetDataDir(\"importwallet_rescan\") / \"wallet.backup\").string();\n+    std::string backup_file = (GetDataDir() / \"wallet.backup\").string();\n \n     // Import key into wallet and call dumpwallet to create backup file.\n     {"
      }
    ]
  },
  {
    "sha": "fa4a04a5a942d582c62773d815c7e1e9897975d0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRhMDRhNWE5NDJkNTgyYzYyNzczZDgxNWM3ZTFlOTg5Nzk3NWQw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-28T18:34:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-20T13:31:07Z"
      },
      "message": "test: use common setup in gui tests",
      "tree": {
        "sha": "f7ac6d4ee66ebc3c593081d3a5db64f935850c10",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7ac6d4ee66ebc3c593081d3a5db64f935850c10"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4a04a5a942d582c62773d815c7e1e9897975d0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgo9wv9Gy3YRX/cN3APGO5Q5m4lyCkpa6qng8N68Uj8LFMCvmrJAT1u9LW5Gzxo\nKuL0Zygx39Z0CZ9zR5LuQpVp1gp+uFekXW28bXFWvFC7LaK9pZQrkYY3kaH5oGSq\nvIykG1OEMbmRrxqIMlfDDDKtV9PcIXt+Uy/TGT9bczY/QH1V8Ho/E6cG6TxsuQOB\nA7C+Y1nqsInMzP2pznN/OkrakMZNTrO6qe9rATUiicBVkSMnSZCgZ2QWmPmXJYHA\nwQu5cHuv6ALVF9vY3Gvp8SYE5NLHK8QQhQN7mxGQyX7APtIl8ik2FLsJzj49Kx70\ng+uu3DyoBv0qCwEfEZB+w1P7S7trXQJJbNqJG17ecg6DRhNFhdCaKpoOItn4+tpn\nPL0DiKmfgzyAxqqxicwGXustguHZf80R6lnlj86SMNigBLVpXydj0vCYU+7rE8UV\nTuRDtbPyJk0xHJ+vF4UHQttKKzUpVpL3ewfVTfv509SBqxFJNQX47r3Wd+vqYFVY\n/gepKNJZ\n=2t96\n-----END PGP SIGNATURE-----",
        "payload": "tree f7ac6d4ee66ebc3c593081d3a5db64f935850c10\nparent fad3d2a624377de4b0311e6ddd446c36dafd1ddc\nauthor MarcoFalke <falke.marco@gmail.com> 1559068490 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1561037467 -0400\n\ntest: use common setup in gui tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4a04a5a942d582c62773d815c7e1e9897975d0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4a04a5a942d582c62773d815c7e1e9897975d0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4a04a5a942d582c62773d815c7e1e9897975d0/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad3d2a624377de4b0311e6ddd446c36dafd1ddc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fad3d2a624377de4b0311e6ddd446c36dafd1ddc"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 5,
      "deletions": 11
    },
    "files": [
      {
        "sha": "27f6377bca9dc5b63db6aa32ccf33a890b624363",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4a04a5a942d582c62773d815c7e1e9897975d0/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4a04a5a942d582c62773d815c7e1e9897975d0/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=fa4a04a5a942d582c62773d815c7e1e9897975d0",
        "patch": "@@ -5,6 +5,7 @@\n #include <qt/test/apptests.h>\n \n #include <chainparams.h>\n+#include <key.h>\n #include <qt/bitcoin.h>\n #include <qt/bitcoingui.h>\n #include <qt/networkstyle.h>\n@@ -62,6 +63,7 @@ void AppTests::appTests()\n     }\n #endif\n \n+    ECC_Stop(); // Already started by the common test setup, so stop it to avoid interference\n     m_app.parameterSetup();\n     m_app.createOptionsModel(true /* reset settings */);\n     QScopedPointer<const NetworkStyle> style("
      },
      {
        "sha": "9f66c3d3a9e8345f5126d79692f8c4bff3520f6c",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 11,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4a04a5a942d582c62773d815c7e1e9897975d0/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4a04a5a942d582c62773d815c7e1e9897975d0/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=fa4a04a5a942d582c62773d815c7e1e9897975d0",
        "patch": "@@ -11,9 +11,9 @@\n #include <qt/bitcoin.h>\n #include <qt/test/apptests.h>\n #include <qt/test/rpcnestedtests.h>\n-#include <util/system.h>\n #include <qt/test/uritests.h>\n #include <qt/test/compattests.h>\n+#include <test/setup_common.h>\n \n #ifdef ENABLE_WALLET\n #include <qt/test/addressbooktests.h>\n@@ -48,14 +48,8 @@ extern void noui_connect();\n // This is all you need to run all the tests\n int main(int argc, char *argv[])\n {\n-    SetupEnvironment();\n-    SetupNetworking();\n-    SelectParams(CBaseChainParams::REGTEST);\n-    noui_connect();\n-    ClearDatadirCache();\n-    fs::path pathTemp = fs::temp_directory_path() / strprintf(\"test_bitcoin-qt_%lu_%i\", (unsigned long)GetTime(), (int)GetRand(100000));\n-    fs::create_directories(pathTemp);\n-    gArgs.ForceSetArg(\"-datadir\", pathTemp.string());\n+    BasicTestingSetup test{CBaseChainParams::REGTEST};\n+\n     auto node = interfaces::MakeNode();\n \n     bool fInvalid = false;\n@@ -109,7 +103,5 @@ int main(int argc, char *argv[])\n     }\n #endif\n \n-    fs::remove_all(pathTemp);\n-\n     return fInvalid;\n }"
      }
    ]
  },
  {
    "sha": "fabc57e07dc34c103552cb51c9277bb48ef97739",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWJjNTdlMDdkYzM0YzEwMzU1MmNiNTFjOTI3N2JiNDhlZjk3NzM5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-20T13:34:45Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-06-20T16:12:24Z"
      },
      "message": "test: Log to debug.log in all tests",
      "tree": {
        "sha": "34b541df706817511b175e3a75e3060d593d99a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/34b541df706817511b175e3a75e3060d593d99a5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fabc57e07dc34c103552cb51c9277bb48ef97739",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgc9Av9EFdc4wJWfxX5sAT+CXNwXpvRvydphiPY8T4L6Xm5aW0sdTjDY8sHywwO\ndtlfSJ00ieFScfeygHdj0hMRE0d8P6jwz/sTLP6yP2LgkZujBUILQOeeWKcdQA3S\nCzOWefmz1DzhKFjCQBH4gqRo7tsj43r7kgEvarSThC7JuyTuVdJ+weO3+uWhxf3X\n8NwSRB9EeSAFfNZ32MPN1VMD2FQFCpBbtLEbsZufsOwvTl5XevleNNCGgDmL1pLg\n+Nt+8cpx/l0HwyKJVW95cG+ywiz2mFzuW4SYFnqSlr5V3WYX0yDdmgd3HdfsDHip\nUBq4CGJBC2Nz2EYtRizRLqmkApFSaCynyDLq6LMgCHTkpb+aEJf0ciXmUw5IEkhm\nQvbiKLc0Dheeg5WKgKAWXuaGpb+z6XMq+h60PYShbVT4DLZbundZWjgIrd7B3GRn\nTtdMROE8xxnIKmgaHxXHv250lNUPtxGiSndMKAOyu6tXTMrPK3EDarVRo/imNOkn\nNqX8pV56\n=SyUs\n-----END PGP SIGNATURE-----",
        "payload": "tree 34b541df706817511b175e3a75e3060d593d99a5\nparent fa4a04a5a942d582c62773d815c7e1e9897975d0\nauthor MarcoFalke <falke.marco@gmail.com> 1561037685 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1561047144 -0400\n\ntest: Log to debug.log in all tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabc57e07dc34c103552cb51c9277bb48ef97739",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fabc57e07dc34c103552cb51c9277bb48ef97739",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fabc57e07dc34c103552cb51c9277bb48ef97739/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa4a04a5a942d582c62773d815c7e1e9897975d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4a04a5a942d582c62773d815c7e1e9897975d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4a04a5a942d582c62773d815c7e1e9897975d0"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 19,
      "deletions": 1
    },
    "files": [
      {
        "sha": "dc2d130a2ae5e5436b0dbfdabec8a22ffd8ff84b",
        "filename": "src/logging.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabc57e07dc34c103552cb51c9277bb48ef97739/src/logging.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabc57e07dc34c103552cb51c9277bb48ef97739/src/logging.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.cpp?ref=fabc57e07dc34c103552cb51c9277bb48ef97739",
        "patch": "@@ -75,6 +75,14 @@ bool BCLog::Logger::StartLogging()\n     return true;\n }\n \n+void BCLog::Logger::DisconnectTestLogger()\n+{\n+    std::lock_guard<std::mutex> scoped_lock(m_cs);\n+    m_buffering = true;\n+    if (m_fileout != nullptr) fclose(m_fileout);\n+    m_fileout = nullptr;\n+}\n+\n void BCLog::Logger::EnableCategory(BCLog::LogFlags flag)\n {\n     m_categories |= flag;"
      },
      {
        "sha": "75cd5353c0ecf20c8708d341f7cbf2c6921f8e7e",
        "filename": "src/logging.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabc57e07dc34c103552cb51c9277bb48ef97739/src/logging.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabc57e07dc34c103552cb51c9277bb48ef97739/src/logging.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging.h?ref=fabc57e07dc34c103552cb51c9277bb48ef97739",
        "patch": "@@ -100,6 +100,8 @@ namespace BCLog {\n \n         /** Start logging (and flush all buffered messages) */\n         bool StartLogging();\n+        /** Only for testing */\n+        void DisconnectTestLogger();\n \n         void ShrinkDebugFile();\n "
      },
      {
        "sha": "22e49b06cb11aacdbdcd8f9588898c894e5f8b69",
        "filename": "src/qt/test/apptests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabc57e07dc34c103552cb51c9277bb48ef97739/src/qt/test/apptests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabc57e07dc34c103552cb51c9277bb48ef97739/src/qt/test/apptests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/apptests.cpp?ref=fabc57e07dc34c103552cb51c9277bb48ef97739",
        "patch": "@@ -64,6 +64,8 @@ void AppTests::appTests()\n #endif\n \n     ECC_Stop(); // Already started by the common test setup, so stop it to avoid interference\n+    LogInstance().DisconnectTestLogger();\n+\n     m_app.parameterSetup();\n     m_app.createOptionsModel(true /* reset settings */);\n     QScopedPointer<const NetworkStyle> style("
      },
      {
        "sha": "86e5632e2c1a20b1142d1eb57364fcca2b7aed5a",
        "filename": "src/qt/test/rpcnestedtests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabc57e07dc34c103552cb51c9277bb48ef97739/src/qt/test/rpcnestedtests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabc57e07dc34c103552cb51c9277bb48ef97739/src/qt/test/rpcnestedtests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/rpcnestedtests.cpp?ref=fabc57e07dc34c103552cb51c9277bb48ef97739",
        "patch": "@@ -35,6 +35,7 @@ void RPCNestedTests::rpcNestedTests()\n     tableRPC.appendCommand(\"rpcNestedTest\", &vRPCCommands[0]);\n     //mempool.setSanityCheck(1.0);\n \n+    LogInstance().DisconnectTestLogger(); // Already started by the common test setup, so stop it to avoid interference\n     TestingSetup test;\n \n     if (RPCIsInWarmup(nullptr)) SetRPCWarmupFinished();"
      },
      {
        "sha": "aaf69b957558071f3c08a74777987b52f6fbb11f",
        "filename": "src/test/setup_common.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fabc57e07dc34c103552cb51c9277bb48ef97739/src/test/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fabc57e07dc34c103552cb51c9277bb48ef97739/src/test/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/setup_common.cpp?ref=fabc57e07dc34c103552cb51c9277bb48ef97739",
        "patch": "@@ -10,6 +10,7 @@\n #include <consensus/params.h>\n #include <consensus/validation.h>\n #include <crypto/sha256.h>\n+#include <init.h>\n #include <miner.h>\n #include <net_processing.h>\n #include <noui.h>\n@@ -37,14 +38,17 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n     fs::create_directories(m_path_root);\n     gArgs.ForceSetArg(\"-datadir\", m_path_root.string());\n     ClearDatadirCache();\n+    SelectParams(chainName);\n+    gArgs.ForceSetArg(\"-printtoconsole\", \"0\");\n+    InitLogging();\n+    LogInstance().StartLogging();\n     SHA256AutoDetect();\n     ECC_Start();\n     SetupEnvironment();\n     SetupNetworking();\n     InitSignatureCache();\n     InitScriptExecutionCache();\n     fCheckBlockIndex = true;\n-    SelectParams(chainName);\n     static bool noui_connected = false;\n     if (!noui_connected) {\n         noui_connect();\n@@ -54,6 +58,7 @@ BasicTestingSetup::BasicTestingSetup(const std::string& chainName)\n \n BasicTestingSetup::~BasicTestingSetup()\n {\n+    LogInstance().DisconnectTestLogger();\n     fs::remove_all(m_path_root);\n     ECC_Stop();\n }"
      }
    ]
  }
]