[
  {
    "sha": "f14e687feb554e64bf38715c001da0c0954be694",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmMTRlNjg3ZmViNTU0ZTY0YmYzODcxNWMwMDFkYTBjMDk1NGJlNjk0",
    "commit": {
      "author": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-03T15:42:06Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-04-04T10:58:14Z"
      },
      "message": "Chainparams: Decouple CAlert from CChainParams",
      "tree": {
        "sha": "390dd0216e1b94411e36a80f94864f9d160a00fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/390dd0216e1b94411e36a80f94864f9d160a00fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f14e687feb554e64bf38715c001da0c0954be694",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f14e687feb554e64bf38715c001da0c0954be694",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f14e687feb554e64bf38715c001da0c0954be694",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f14e687feb554e64bf38715c001da0c0954be694/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2dc679d22f821d26a9f8a7eef6d095ef21d1b27c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dc679d22f821d26a9f8a7eef6d095ef21d1b27c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2dc679d22f821d26a9f8a7eef6d095ef21d1b27c"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 12,
      "deletions": 10
    },
    "files": [
      {
        "sha": "aa7ac748dad6ac124578d107feb960dda14f3b40",
        "filename": "src/alert.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f14e687feb554e64bf38715c001da0c0954be694/src/alert.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f14e687feb554e64bf38715c001da0c0954be694/src/alert.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.cpp?ref=f14e687feb554e64bf38715c001da0c0954be694",
        "patch": "@@ -5,7 +5,6 @@\n \n #include \"alert.h\"\n \n-#include \"chainparams.h\"\n #include \"clientversion.h\"\n #include \"net.h\"\n #include \"pubkey.h\"\n@@ -145,9 +144,9 @@ bool CAlert::RelayTo(CNode* pnode) const\n     return false;\n }\n \n-bool CAlert::CheckSignature() const\n+bool CAlert::CheckSignature(const std::vector<unsigned char>& alertKey) const\n {\n-    CPubKey key(Params().AlertKey());\n+    CPubKey key(alertKey);\n     if (!key.Verify(Hash(vchMsg.begin(), vchMsg.end()), vchSig))\n         return error(\"CAlert::CheckSignature(): verify signature failed\");\n \n@@ -169,9 +168,9 @@ CAlert CAlert::getAlertByHash(const uint256 &hash)\n     return retval;\n }\n \n-bool CAlert::ProcessAlert(bool fThread)\n+bool CAlert::ProcessAlert(const std::vector<unsigned char>& alertKey, bool fThread)\n {\n-    if (!CheckSignature())\n+    if (!CheckSignature(alertKey))\n         return false;\n     if (!IsInEffect())\n         return false;"
      },
      {
        "sha": "746967c4aff3699a5ddff1eda589e1ebdd58d0ac",
        "filename": "src/alert.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f14e687feb554e64bf38715c001da0c0954be694/src/alert.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f14e687feb554e64bf38715c001da0c0954be694/src/alert.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/alert.h?ref=f14e687feb554e64bf38715c001da0c0954be694",
        "patch": "@@ -100,8 +100,8 @@ class CAlert : public CUnsignedAlert\n     bool AppliesTo(int nVersion, std::string strSubVerIn) const;\n     bool AppliesToMe() const;\n     bool RelayTo(CNode* pnode) const;\n-    bool CheckSignature() const;\n-    bool ProcessAlert(bool fThread = true); // fThread means run -alertnotify in a free-running thread\n+    bool CheckSignature(const std::vector<unsigned char>& alertKey) const;\n+    bool ProcessAlert(const std::vector<unsigned char>& alertKey, bool fThread = true); // fThread means run -alertnotify in a free-running thread\n     static void Notify(const std::string& strMessage, bool fThread);\n \n     /*"
      },
      {
        "sha": "bd424b18264b18b1db94b4b9123426f67c7661e0",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f14e687feb554e64bf38715c001da0c0954be694/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f14e687feb554e64bf38715c001da0c0954be694/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=f14e687feb554e64bf38715c001da0c0954be694",
        "patch": "@@ -4262,7 +4262,7 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n         uint256 alertHash = alert.GetHash();\n         if (pfrom->setKnown.count(alertHash) == 0)\n         {\n-            if (alert.ProcessAlert())\n+            if (alert.ProcessAlert(Params().AlertKey()))\n             {\n                 // Relay\n                 pfrom->setKnown.insert(alertHash);"
      },
      {
        "sha": "6b6df5199a04bd07216111333c4d66904aada235",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 2,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f14e687feb554e64bf38715c001da0c0954be694/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f14e687feb554e64bf38715c001da0c0954be694/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=f14e687feb554e64bf38715c001da0c0954be694",
        "patch": "@@ -10,6 +10,7 @@\n #include \"clientversion.h\"\n #include \"data/alertTests.raw.h\"\n \n+#include \"chainparams.h\"\n #include \"serialize.h\"\n #include \"streams.h\"\n #include \"util.h\"\n@@ -119,10 +120,11 @@ BOOST_FIXTURE_TEST_SUITE(Alert_tests, ReadAlerts)\n BOOST_AUTO_TEST_CASE(AlertApplies)\n {\n     SetMockTime(11);\n+    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n \n     BOOST_FOREACH(const CAlert& alert, alerts)\n     {\n-        BOOST_CHECK(alert.CheckSignature());\n+        BOOST_CHECK(alert.CheckSignature(alertKey));\n     }\n \n     BOOST_CHECK(alerts.size() >= 3);\n@@ -159,14 +161,15 @@ BOOST_AUTO_TEST_CASE(AlertApplies)\n BOOST_AUTO_TEST_CASE(AlertNotify)\n {\n     SetMockTime(11);\n+    const std::vector<unsigned char>& alertKey = Params(CBaseChainParams::MAIN).AlertKey();\n \n     boost::filesystem::path temp = GetTempPath() / \"alertnotify.txt\";\n     boost::filesystem::remove(temp);\n \n     mapArgs[\"-alertnotify\"] = std::string(\"echo %s >> \") + temp.string();\n \n     BOOST_FOREACH(CAlert alert, alerts)\n-        alert.ProcessAlert(false);\n+        alert.ProcessAlert(alertKey, false);\n \n     std::vector<std::string> r = read_lines(temp);\n     BOOST_CHECK_EQUAL(r.size(), 4u);"
      }
    ]
  }
]