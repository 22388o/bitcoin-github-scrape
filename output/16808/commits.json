[
  {
    "sha": "27a158617ca2c705947043457d0ba850fa23cfee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2ExNTg2MTdjYTJjNzA1OTQ3MDQzNDU3ZDBiYTg1MGZhMjNjZmVl",
    "commit": {
      "author": {
        "name": "GChuf",
        "email": "gasper.cefarin@gmail.com",
        "date": "2019-09-05T18:21:26Z"
      },
      "committer": {
        "name": "GChuf",
        "email": "gasper.cefarin@gmail.com",
        "date": "2019-09-11T12:40:21Z"
      },
      "message": "gui: fix language list\n\nManually fixes some language names which were not displayed correctly",
      "tree": {
        "sha": "b8177e6ff37d9af88b6104eaac13660b88980a9c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8177e6ff37d9af88b6104eaac13660b88980a9c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27a158617ca2c705947043457d0ba850fa23cfee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27a158617ca2c705947043457d0ba850fa23cfee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27a158617ca2c705947043457d0ba850fa23cfee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27a158617ca2c705947043457d0ba850fa23cfee/comments",
    "author": {
      "login": "GChuf",
      "id": 42591821,
      "node_id": "MDQ6VXNlcjQyNTkxODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42591821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GChuf",
      "html_url": "https://github.com/GChuf",
      "followers_url": "https://api.github.com/users/GChuf/followers",
      "following_url": "https://api.github.com/users/GChuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/GChuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GChuf/subscriptions",
      "organizations_url": "https://api.github.com/users/GChuf/orgs",
      "repos_url": "https://api.github.com/users/GChuf/repos",
      "events_url": "https://api.github.com/users/GChuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GChuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "GChuf",
      "id": 42591821,
      "node_id": "MDQ6VXNlcjQyNTkxODIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/42591821?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GChuf",
      "html_url": "https://github.com/GChuf",
      "followers_url": "https://api.github.com/users/GChuf/followers",
      "following_url": "https://api.github.com/users/GChuf/following{/other_user}",
      "gists_url": "https://api.github.com/users/GChuf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GChuf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GChuf/subscriptions",
      "organizations_url": "https://api.github.com/users/GChuf/orgs",
      "repos_url": "https://api.github.com/users/GChuf/repos",
      "events_url": "https://api.github.com/users/GChuf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GChuf/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e202382a987351a59d5cda98ea9f2aee99f61a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e202382a987351a59d5cda98ea9f2aee99f61a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e202382a987351a59d5cda98ea9f2aee99f61a5"
      }
    ],
    "stats": {
      "total": 34,
      "additions": 29,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8c44317e19d7cef27721ba8b08ad1f7c0dc20f5f",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 29,
        "deletions": 5,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27a158617ca2c705947043457d0ba850fa23cfee/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27a158617ca2c705947043457d0ba850fa23cfee/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=27a158617ca2c705947043457d0ba850fa23cfee",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Copyright (c) 2011-2019 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -98,15 +98,39 @@ OptionsDialog::OptionsDialog(QWidget *parent, bool enableWallet) :\n     {\n         QLocale locale(langStr);\n \n-        /** check if the locale name consists of 2 parts (language_country) */\n-        if(langStr.contains(\"_\"))\n+        if (locale.nativeLanguageName().length()==0) /* If locale name is an empty string, fix it manually. */\n         {\n-            /** display language strings as \"native language - native country (locale name)\", e.g. \"Deutsch - Deutschland (de)\" */\n+            if (langStr.contains(\"szl\") && langStr.length()==3)\n+            {\n+                ui->lang->addItem(QString(\"Silesian (\") + langStr + QString(\")\"), QVariant(langStr));\n+            }\n+            else if (langStr.contains(\"pam\") && langStr.length()==3)\n+            {\n+                ui->lang->addItem(QString(\"Kapampangan (\") + langStr + QString(\")\"), QVariant(langStr));\n+            }\n+            else if (langStr.contains(\"la\") && langStr.length()==2)\n+            {\n+                ui->lang->addItem(QString(\"Latin (\") + langStr + QString(\")\"), QVariant(langStr));\n+            }\n+            else if (langStr.contains(\"eo\") && langStr.length()==2)\n+            {\n+                ui->lang->addItem(QString(\"esperanto (\") + langStr + QString(\")\"), QVariant(langStr));\n+            }\n+            else\n+            {\n+                ui->lang->addItem(QString(\"Unknown (\") + langStr + QString(\")\"), QVariant(langStr));\n+            }\n+        }\n+\n+        /* check if the locale name consists of 2 parts (language_country) */\n+        else if (langStr.contains(\"_\"))\n+        {\n+            /* display language strings as \"native language - native country (locale name)\", e.g. \"Deutsch - Deutschland (de)\" */\n             ui->lang->addItem(locale.nativeLanguageName() + QString(\" - \") + locale.nativeCountryName() + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n         }\n         else\n         {\n-            /** display language strings as \"native language (locale name)\", e.g. \"Deutsch (de)\" */\n+            /* display language strings as \"native language (locale name)\", e.g. \"Deutsch (de)\" */\n             ui->lang->addItem(locale.nativeLanguageName() + QString(\" (\") + langStr + QString(\")\"), QVariant(langStr));\n         }\n     }"
      }
    ]
  }
]