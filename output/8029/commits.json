[
  {
    "sha": "2692e1b10bd7a0be644ed8a69c54152bc741e855",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNjkyZTFiMTBiZDdhMGJlNjQ0ZWQ4YTY5YzU0MTUyYmM3NDFlODU1",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-05-09T08:30:27Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2016-05-12T12:47:44Z"
      },
      "message": "[Doc] Simplify OS X build notes\n\nAdd \u2014c++11 flags to brew dependancies that support it\nRemove release-build section, this is covered by depends/release-notes",
      "tree": {
        "sha": "b95b6ce297f30ff3fcc0db9f8b5a89daa8380664",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b95b6ce297f30ff3fcc0db9f8b5a89daa8380664"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2692e1b10bd7a0be644ed8a69c54152bc741e855",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCgAGBQJXNHtwAAoJEC7rn1zAlSbBwKAP/0v7e/PisjiBBh+sHotQTCkc\n2hxEtccFRaEe98nSshe6NxqzWpozkTeS9HdlYbLp5ih4mh40QTfIwcJ8590ABszI\nLEWtDtzfDsag9JZlHrbLbnZ67y3DH8A4JO8/vu4Ac2U9EiAnKa4wXaZR+ThAteNE\nx6pbXaZkZyK8Xu5ieIFxnUiOGYuglF+INnSdeTKWo/1ipH2VMSea+AzqHaFPZGOG\nPm0urUIgIkq+vaP5pL6zJa2X9tJJUTdaiU4RZ5IYhCLldXrQ7TQWpGML8H92Im35\nNhNW/DBhULXz9ApsoXSza7aoyQvjzak+np7OArL1e/TNwt2DLtOZ5IRm86YrMEpW\nek+FdVC1tEMogeM83i5rIfR7nmKUMc1LOk88hyniDqodIqTtKeJsY5AJP3wdXtB9\nwLVDrCo6RsFAzjtisfIzqn/EjB/iOL+kzreR/7oDmPejLoKGdtmdyu/fRx1mbrh+\nZ7It5KkpmVS6+RY9yc95yNsSoDp85I/9ZX3lY3LwS1UKM17KUXAPgFkQScwu0wi6\nCkyzyLPeIwOjw1FQzZRTwiZ6567Rg/Q8+tok9pE/dEe4WizOHjDiH3h/6Ccd0sLi\nrRMSkltfNftZz1aQjmFnNyHUky6c8zKDYHGZBngH4h65tH3gEw7Du4RyUlb9Vbkh\nNoWE3Gy5v+CgtHonSnir\n=r4jK\n-----END PGP SIGNATURE-----",
        "payload": "tree b95b6ce297f30ff3fcc0db9f8b5a89daa8380664\nparent f17032f703288d43a76cffe8fa89b87ade9e3074\nauthor fanquake <fanquake@gmail.com> 1462782627 +0800\ncommitter fanquake <fanquake@gmail.com> 1463057264 +0800\n\n[Doc] Simplify OS X build notes\n\nAdd \u2014c++11 flags to brew dependancies that support it\nRemove release-build section, this is covered by depends/release-notes\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2692e1b10bd7a0be644ed8a69c54152bc741e855",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2692e1b10bd7a0be644ed8a69c54152bc741e855",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2692e1b10bd7a0be644ed8a69c54152bc741e855/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f17032f703288d43a76cffe8fa89b87ade9e3074",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f17032f703288d43a76cffe8fa89b87ade9e3074",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f17032f703288d43a76cffe8fa89b87ade9e3074"
      }
    ],
    "stats": {
      "total": 136,
      "additions": 50,
      "deletions": 86
    },
    "files": [
      {
        "sha": "89d7816c9a42b35387c3beddebc523a364d44156",
        "filename": "doc/build-osx.md",
        "status": "modified",
        "additions": 50,
        "deletions": 86,
        "changes": 136,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2692e1b10bd7a0be644ed8a69c54152bc741e855/doc/build-osx.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2692e1b10bd7a0be644ed8a69c54152bc741e855/doc/build-osx.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/build-osx.md?ref=2692e1b10bd7a0be644ed8a69c54152bc741e855",
        "patch": "@@ -1,129 +1,93 @@\n Mac OS X Build Instructions and Notes\n ====================================\n-This guide will show you how to build Bitcoin Core for OS X.\n-\n-Notes\n------\n-\n-* Tested on OS X 10.7 through 10.11 on 64-bit Intel processors only.\n-\n-* All of the commands should be executed in a Terminal application. The\n-built-in one is located in `/Applications/Utilities`.\n+The commands in this guide should be executed in a Terminal application.\n+The built-in one is located in `/Applications/Utilities/Terminal.app`.\n \n Preparation\n -----------\n+Download and install [Xcode](https://developer.apple.com/xcode/download).\n \n-You need to install Xcode with all the options checked so that the compiler\n-and everything is available in /usr not just /Developer. Xcode should be\n-available on your OS X installation media, but if not, you can get the\n-current version from https://developer.apple.com/xcode/. If you install\n-Xcode 4.3 or later, you'll need to install its command line tools. This can\n-be done in `Xcode > Preferences > Downloads > Components` and generally must\n-be re-done or updated every time Xcode is updated.\n-\n-You will also need to install [Homebrew](http://brew.sh) in order to install library\n-dependencies.\n+Once installed, run `xcode-select --install` to install the OS X command line tools.\n \n-The installation of the actual dependencies is covered in the instructions\n-sections below.\n+Install [Homebrew](http://brew.sh).\n \n-Instructions: Homebrew\n+Dependencies\n ----------------------\n \n-#### Install dependencies using Homebrew\n+    brew install automake berkeley-db4 libtool boost --c++11 miniupnpc openssl pkg-config protobuf --c++11 qt5 libevent\n \n-    brew install autoconf automake berkeley-db4 libtool boost miniupnpc openssl pkg-config protobuf qt5 libevent\n+NOTE: Building with Qt4 is still supported, however, could result in a broken UI. Building with Qt5 is recommended.\n \n-NOTE: Building with Qt4 is still supported, however, could result in a broken UI. As such, building with Qt5 is recommended.\n-\n-### Building `bitcoin`\n+Build Bitcoin Core\n+------------------------\n \n-1. Clone the GitHub tree to get the source code and go into the directory.\n+1. Clone the bitcoin source code and cd into `bitcoin`\n \n-        git clone https://github.com/bitcoin/bitcoin.git\n+        git clone https://github.com/bitcoin/bitcoin\n         cd bitcoin\n \n 2.  Build bitcoin-core:\n-    This will configure and build the headless bitcoin binaries as well as the gui (if Qt is found).\n-    You can disable the gui build by passing `--without-gui` to configure.\n+\n+    Configure and build the headless bitcoin binaries as well as the GUI (if Qt is found).\n+\n+    You can disable the GUI build by passing `--without-gui` to configure.\n \n         ./autogen.sh\n         ./configure\n         make\n \n-3.  It is also a good idea to build and run the unit tests:\n+3.  It is recommended to build and run the unit tests:\n \n         make check\n \n-4.  (Optional) You can also install bitcoind to your path:\n-\n-        make install\n-\n-Use Qt Creator as IDE\n-------------------------\n-You can use Qt Creator as IDE, for debugging and for manipulating forms, etc.\n-Download Qt Creator from https://www.qt.io/download/. Download the \"community edition\" and only install Qt Creator (uncheck the rest during the installation process).\n-\n-1. Make sure you installed everything through Homebrew mentioned above\n-2. Do a proper ./configure --enable-debug\n-3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n-4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n-5. Leave the file selection as it is\n-6. Confirm the \"summary page\"\n-7. In the \"Projects\" tab select \"Manage Kits...\"\n-8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n-9. Select LLDB as debugger (you might need to set the path to your installation)\n-10. Start debugging with Qt Creator\n-\n-Creating a release build\n-------------------------\n-You can ignore this section if you are building `bitcoind` for your own use.\n-\n-bitcoind/bitcoin-cli binaries are not included in the Bitcoin-Qt.app bundle.\n-\n-If you are building `bitcoind` or `Bitcoin Core` for others, your build machine should be set up\n-as follows for maximum compatibility:\n+4.  You can also create a .dmg that contains the .app bundle (optional):\n \n-All dependencies should be compiled with these flags:\n-\n- -mmacosx-version-min=10.7\n- -arch x86_64\n- -isysroot $(xcode-select --print-path)/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk\n-\n-Once dependencies are compiled, see [doc/release-process.md](release-process.md) for how the Bitcoin Core\n-bundle is packaged and signed to create the .dmg disk image that is distributed.\n+        make deploy\n \n Running\n -------\n \n-It's now available at `./bitcoind`, provided that you are still in the `src`\n-directory. We have to first create the RPC configuration file, though.\n+Bitcoin Core is now available at `./src/bitcoind`\n \n-Run `./bitcoind` to get the filename where it should be put, or just try these\n-commands:\n+Before running, it's recommended you create an RPC configuration file.\n \n     echo -e \"rpcuser=bitcoinrpc\\nrpcpassword=$(xxd -l 16 -p /dev/urandom)\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n+\n     chmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n \n-The next time you run it, it will start downloading the blockchain, but it won't\n-output anything while it's doing this. This process may take several hours;\n-you can monitor its process by looking at the debug.log file, like this:\n+The first time you run bitcoind, it will start downloading the blockchain. This process could take several hours.\n+\n+You can monitor the download process by looking at the debug.log file:\n \n     tail -f $HOME/Library/Application\\ Support/Bitcoin/debug.log\n \n Other commands:\n -------\n \n-    ./bitcoind -daemon    # to start the bitcoin daemon.\n-    ./bitcoin-cli --help  # for a list of command-line options.\n-    ./bitcoin-cli help    # When the daemon is running, to get a list of RPC commands\n+    ./src/bitcoind -daemon # Starts the bitcoin daemon.\n+    ./src/bitcoin-cli --help # Outputs a list of command-line options.\n+    ./src/bitcoin-cli help # Outputs a list of RPC commands when the daemon is running.\n+\n+Using Qt Creator as IDE\n+------------------------\n+You can use Qt Creator as an IDE, for bitcoin development.\n+Download and install the community edition of [Qt Creator](https://www.qt.io/download/).\n+Uncheck everything except Qt Creator during the installation process.\n \n-Using Qt official installer while building\n-------------------------------------------\n+1. Make sure you installed everything through Homebrew mentioned above\n+2. Do a proper ./configure --enable-debug\n+3. In Qt Creator do \"New Project\" -> Import Project -> Import Existing Project\n+4. Enter \"bitcoin-qt\" as project name, enter src/qt as location\n+5. Leave the file selection as it is\n+6. Confirm the \"summary page\"\n+7. In the \"Projects\" tab select \"Manage Kits...\"\n+8. Select the default \"Desktop\" kit and select \"Clang (x86 64bit in /usr/bin)\" as compiler\n+9. Select LLDB as debugger (you might need to set the path to your installation)\n+10. Start debugging with Qt Creator\n+\n+Notes\n+-----\n+\n+* Tested on OS X 10.7 through 10.11 on 64-bit Intel processors only.\n \n-If you prefer to use the latest Qt installed from the official binary\n-installer over the brew version, you have to make several changes to\n-the installed tree and its binaries (all these changes are contained\n-in the brew version already). The changes needed are described in\n-[#7714](https://github.com/bitcoin/bitcoin/issues/7714). We do not\n-support building Bitcoin Core this way though.\n+* Building with downloaded Qt binaries is not officially supported. See the notes in [#7714](https://github.com/bitcoin/bitcoin/issues/7714)"
      }
    ]
  }
]