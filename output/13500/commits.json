[
  {
    "sha": "cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDNmNGFhODA4MTBmYzA3N2M3Zjk1MjhhNGVmNTNjMTQzOGM4NmUx",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-18T22:21:32Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-06-18T22:21:32Z"
      },
      "message": "Decouple wallet version from client version\n\nInstead of comparing version numbers in the wallet to the client\nversion number, compare them to the latest supported wallet version\nin the client. This allows for wallet version numbers to be unrelated\nto the client version number.",
      "tree": {
        "sha": "a85a7e569b1b20d4beda285d852a3d51659b92ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a85a7e569b1b20d4beda285d852a3d51659b92ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "088240685456494a26047c8f3d5ecf578f70dbce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/088240685456494a26047c8f3d5ecf578f70dbce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/088240685456494a26047c8f3d5ecf578f70dbce"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d0c8096bb0b6acbcb87c44ee4b79660ba6131668",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
        "patch": "@@ -4104,7 +4104,7 @@ std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(const std::string& name,\n         if (nMaxVersion == 0) // the -upgradewallet without argument case\n         {\n             LogPrintf(\"Performing wallet upgrade to %i\\n\", FEATURE_LATEST);\n-            nMaxVersion = CLIENT_VERSION;\n+            nMaxVersion = FEATURE_LATEST;\n             walletInstance->SetMinVersion(FEATURE_LATEST); // permanently upgrade the wallet immediately\n         }\n         else"
      },
      {
        "sha": "9c25ee7d765ac595542cf8fc0969fdd0e30b07c1",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd3f4aa80810fc077c7f9528a4ef53c1438c86e1/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=cd3f4aa80810fc077c7f9528a4ef53c1438c86e1",
        "patch": "@@ -537,7 +537,7 @@ DBErrors WalletBatch::LoadWallet(CWallet* pwallet)\n         int nMinVersion = 0;\n         if (m_batch.Read((std::string)\"minversion\", nMinVersion))\n         {\n-            if (nMinVersion > CLIENT_VERSION)\n+            if (nMinVersion > FEATURE_LATEST)\n                 return DBErrors::TOO_NEW;\n             pwallet->LoadMinVersion(nMinVersion);\n         }\n@@ -640,7 +640,7 @@ DBErrors WalletBatch::FindWalletTx(std::vector<uint256>& vTxHash, std::vector<CW\n         int nMinVersion = 0;\n         if (m_batch.Read((std::string)\"minversion\", nMinVersion))\n         {\n-            if (nMinVersion > CLIENT_VERSION)\n+            if (nMinVersion > FEATURE_LATEST)\n                 return DBErrors::TOO_NEW;\n         }\n "
      }
    ]
  }
]