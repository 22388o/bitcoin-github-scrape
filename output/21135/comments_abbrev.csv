fanquake,2021-02-10 07:59:21,"Aside from the missing test additions, this approach is currently too naive. There is likely to be the presence of `endbr64` instructions in the .text section, which we do not control (i.e from libc). I'm also not sure that targeting a specific symbol via objdump will work, as that will still dump all output after the symbol (and may require a too newer version of objdump).",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-776518855,776518855,
laanwj,2021-02-10 10:07:42,"> There is likely to be the presence of endbr64 instructions in the .text section, which we do not control (i.e from libc). \n\nThe check is naive, but maybe enough. Let's update test-security-check for it and see if it distinguishes between the hardening flag being present or not?\n\nRemember that we do not link libc statically at this point so there should be no instructions from libc in the",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-776596749,776596749,
practicalswift,2021-02-10 20:55:15,Concept ACK: hardening good! :),https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-777029372,777029372,
fanquake,2021-02-11 06:58:02,"I've pulled in @laanwj's changes, as well as added a basic test for the PE binaries. One thing to note is that our `test_bitcoin.exe` binary doesn't currently have an `endbr64` instruction in `main`, like all the other PE binaries.\n\nThe only `endbr64` instructions that come after `main` are from some ZeroMQ functions:\n```bash\nobjdump -C --disassemble=main --section=.text src/test/test_bitc",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-777239731,777239731,
fanquake,2021-02-11 07:03:34,"I've currently moved the security check tests to the multiprocess CI job, which uses Focal.\n\n~~Another issue is that the [CI which currently runs the security check tests](https://github.com/bitcoin/bitcoin/blob/master/ci/test/00_setup_env_native_qt5.sh) uses Bionic, which has a GCC (7.4.0) which does not have the `-fcf-protection` option. So we'll need to move the running of the security chec",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-777241730,777241730,
DrahtBot,2021-03-03 09:41:18,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #21664 (contrib: use LIEF for macOS and Windows symbol & security checks by fanquake)\n\nIf you consider this pull request",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-789579889,789579889,
laanwj,2021-03-03 09:51:46,Is there anything specific holding this up?,https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-789586424,789586424,
fanquake,2021-03-04 06:00:31,"> Is there anything specific holding this up?\n\nJust my lack of getting things done. I was planning on modifying this so we didn't have to special case `test_bitcoin.exe`",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-790318945,790318945,
fanquake,2021-05-09 04:48:43,"Going to close this PR, open an issue explaining why control flow instrumentation isn't always present, and then open separate PRs per platform modifying dependencies and adding the security checks. The way we test for this will also be simpler now that we are using LIEF.",https://github.com/bitcoin/bitcoin/pull/21135#issuecomment-835679408,835679408,
laanwj,2021-02-10 10:08:20,Does PE have a `.text` section?,https://github.com/bitcoin/bitcoin/pull/21135#discussion_r573599866,573599866,contrib/devtools/security-check.py
laanwj,2021-02-10 10:21:31,"At some point we might want to add a 'skipped' return status for checks that could not be performed for a platform (they would count as true for the final return value, but might be displayed differently).",https://github.com/bitcoin/bitcoin/pull/21135#discussion_r573608783,573608783,contrib/devtools/security-check.py
laanwj,2021-02-10 10:22:54,"It's too bad that x86 has variable-length instructions (so it's tricky to find instruction boundaries), or we could just look in the section contents for the raw instruction instead of parsing text.",https://github.com/bitcoin/bitcoin/pull/21135#discussion_r573609698,573609698,contrib/devtools/security-check.py
prusnak,2021-02-10 10:39:17,"```suggestion\n    ('control_flow', check_ELF_control_flow_instrumentation),\n```",https://github.com/bitcoin/bitcoin/pull/21135#discussion_r573620785,573620785,contrib/devtools/security-check.py
prusnak,2021-02-10 10:39:26,"```suggestion\n    ('control_flow', check_PE_control_flow_instrumentation),\n```",https://github.com/bitcoin/bitcoin/pull/21135#discussion_r573620881,573620881,contrib/devtools/security-check.py
fanquake,2021-02-11 06:12:09,Thanks. Included these suggestions.,https://github.com/bitcoin/bitcoin/pull/21135#discussion_r574269170,574269170,contrib/devtools/security-check.py
fanquake,2021-02-11 06:12:27,You've implemented this!,https://github.com/bitcoin/bitcoin/pull/21135#discussion_r574269233,574269233,contrib/devtools/security-check.py
fanquake,2021-02-11 06:13:08,Agree. I think printing some sort of informational output may be useful. ,https://github.com/bitcoin/bitcoin/pull/21135#discussion_r574269372,574269372,contrib/devtools/security-check.py
fanquake,2021-02-11 06:16:37,"Yes, see https://docs.microsoft.com/en-us/windows/win32/debug/pe-format#special-sections, and filltering by --section here prevents additional output from `objdump`.",https://github.com/bitcoin/bitcoin/pull/21135#discussion_r574270250,574270250,contrib/devtools/security-check.py
