sipa,2016-11-07T22:27:54Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-258983777,258983777,
TheBlueMatt,2016-11-07T22:52:49Z,Rebased.\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-258989559,258989559,
TheBlueMatt,2016-11-09T19:22:54Z,"As mentioned on IRC, this now reverts #9087, which conflicted, but no one registered any serious desire to maintain its functionality since it was realtively trivial.\n",https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-259501679,259501679,
sipa,2016-11-11T02:37:51Z,utACK ae223576077448bd4ec250c73f5d8fe5e9a9ac7d\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-259866536,259866536,
theuni,2016-11-11T05:20:00Z,utACK ae223576077448bd4ec250c73f5d8fe5e9a9ac7d other than the comment nit. Obviously not a blocker though.\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-259883426,259883426,
jtimon,2016-11-17T20:18:48Z,ut ACK ae22357 apart from the couple of small nits.\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-261357816,261357816,
sdaftuar,2016-11-17T20:51:38Z,utACK ae223576077448bd4ec250c73f5d8fe5e9a9ac7d\n,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-261365714,261365714,
rebroad,2016-11-21T08:11:57Z,Is this change part of a roadmap that is documented somewhere?,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-261870541,261870541,
jtimon,2016-11-21T22:37:42Z,"@rebroad It is part of a longer branch by @TheBlueMatt : https://github.com/TheBlueMatt/bitcoin/tree/net_processing_file which does enough decoupling to cleanly separate the p2p messages part out of main.o. But I think the PRs (and commits) stand on their own (I did less review on the previous steps). Perhaps @TheBlueMatt can give more details.\n ",https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-262089866,262089866,
rebroad,2016-11-22T15:19:12Z,@jtimon thanks. I also meant to ask: why is this being done? Is it because main.cpp is considered to be too large?,https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-262268561,262268561,
sipa,2016-11-23T22:59:06Z,"@rebroad Splitting main into several files would be trivial to do, if we don't care much about clean separation between the resulting files. This PR is part of an ongoing effort to separate network processing (currently spread over net, protocol, and main) and block validation with clear interfaces between them. The end result is not only splitting main into two files, but splitting it into two fi",https://github.com/bitcoin/bitcoin/pull/9075#issuecomment-262650587,262650587,
sipa,2016-11-04T22:05:32Z,"This does not actually remove a duplicate. If there is a reorganization, and some block within it is invalid, `InvalidChainFound` will be called with the tip of the chain, rather than the block that failed. This may have an effect on the large fork detection logic.\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r86640812,86640812,src/main.cpp
sipa,2016-11-04T23:48:31Z,Nit: You can use std::map::emplace here to avoid two searches (the bool returned in the pair tells you whether an insert occurred or now). You could also remember the created iterator and pass it to mapBlockSource.erase below. (and likewise above)\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r86650669,86650669,src/main.cpp
sipa,2016-11-05T00:11:00Z,So glad to see this duplication go!\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r86652134,86652134,src/main.cpp
TheBlueMatt,2016-11-07T00:16:12Z,Eek! Youre right. Just removed the commit...it wasnt important anyway.\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r86700955,86700955,src/main.cpp
TheBlueMatt,2016-11-07T00:32:28Z,Fixed\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r86701402,86701402,src/main.cpp
theuni,2016-11-08T23:03:19Z,Stale comment? Or am I not seeing the race?\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r87104196,87104196,src/main.cpp
TheBlueMatt,2016-11-09T01:18:43Z,"Race if multiple nodes send you something near the same time you might send the DoS/Reject to the ""wrong"" node, of course we dont really care because we'll get to them next time they send us a block (and someone will still get it).\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r87119435,87119435,src/main.cpp
sipa,2016-11-11T02:32:50Z,"I assumed this just referred to the fact that we drop the cs_main lock between here and the call to `ProcessNewBlock` below, so in theory mapBlockSource could be modified in between, and we'd lose the expected callbacks.\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r87528261,87528261,src/main.cpp
theuni,2016-11-11T05:13:18Z,"Thanks. After discussion on IRC, I'm good with this. Though the comment could be a bit more descriptive, it makes the issue seem like more than it is.\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r87538434,87538434,src/main.cpp
jtimon,2016-11-17T19:58:41Z,not sure why this shouldn't be `if (fAccepted && !sc.found)`\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88533999,88533999,src/rpc/mining.cpp
jtimon,2016-11-17T20:00:50Z,"you don't need to duplicate  CValidationState state, you can move the first declaration out of the locked context. \n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88534424,88534424,src/main.cpp
sdaftuar,2016-11-17T20:53:19Z,Personally I like making it clear that this CValidationState is unrelated to the other one; it was confusing in the old code that validation errors from different blocks might get put in the same CValidationState (which would get cleared out in ActivateBestChainStep).\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88543558,88543558,src/main.cpp
sipa,2016-11-17T21:04:56Z,"If it is not accepted, there will certainly have been a callback to signal what was invalid about it. Thus, not having had a signal implies it was accepted.\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88545646,88545646,src/rpc/mining.cpp
jtimon,2016-11-17T22:15:36Z,Not a big deal anyway.\n,https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88559518,88559518,src/main.cpp
TheBlueMatt,2016-11-17T23:12:54Z,"Technically this is a change in behavior...previously: if you got an error (disk space, etc) during connection you would print it in the BIP22 result function, after this patch (though, indeed, adding an fAccepted check wouldnt help) you will no longer print that, and your node will just exit (probably after retuning ""success"" from this function.\n",https://github.com/bitcoin/bitcoin/pull/9075#discussion_r88568772,88568772,src/rpc/mining.cpp
