[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626481426",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9091#issuecomment-626481426",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/9091",
    "id": 626481426,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyNjQ4MTQyNg==",
    "user": {
      "login": "cryptozeny",
      "id": 37016180,
      "node_id": "MDQ6VXNlcjM3MDE2MTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/37016180?u=1710aedad2a564f9be9d6975e7f4c93dcdd83bbc&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cryptozeny",
      "html_url": "https://github.com/cryptozeny",
      "followers_url": "https://api.github.com/users/cryptozeny/followers",
      "following_url": "https://api.github.com/users/cryptozeny/following{/other_user}",
      "gists_url": "https://api.github.com/users/cryptozeny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cryptozeny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cryptozeny/subscriptions",
      "organizations_url": "https://api.github.com/users/cryptozeny/orgs",
      "repos_url": "https://api.github.com/users/cryptozeny/repos",
      "events_url": "https://api.github.com/users/cryptozeny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cryptozeny/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-11T05:39:52Z",
    "updated_at": "2020-05-11T05:39:52Z",
    "author_association": "NONE",
    "body": "nice idea. any update?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/626481426/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86707478",
    "pull_request_review_id": 7351239,
    "id": 86707478,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NzA3NDc4",
    "diff_hunk": "@@ -5954,10 +5954,38 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         if (nCount == MAX_HEADERS_RESULTS) {\n             // Headers message had its maximum size; the peer may have more headers.\n-            // TODO: optimize: if pindexLast is an ancestor of chainActive.Tip or pindexBestHeader, continue\n-            // from there instead.\n-            LogPrint(\"net\", \"more getheaders (%d) to end to peer=%d (startheight:%d)\\n\", pindexLast->nHeight, pfrom->id, pfrom->nStartingHeight);\n-            pfrom->PushMessage(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexLast), uint256());\n+            //\n+            // Optimize where to fetch the next headers from. Places the last header could be;-\n+            // 1 - neither an ancestor of chainActive.Tip() nor BestHeader. fetch from pindexLast\n+            // 2 - ancestor of chainActive.Tip() and BestHeader. fetch from BestHeader\n+            // 3 - ancestor of BestHeader not chainActive.Tip(). Tip is an ancestor of BestHeader\n+            //     fetch from BestHeader\n+            // 4 - ancestor of chainActive.Tip and BestHeader. Tip is forked from BestHeader\n+            //     fetch from the point where tip forks from BestHeader (since we don't know which fork\n+            //     the other peer is following but can nevertheless assume they don't fork before our fork).\n+            // 5 - ancestor of BestHeader not chainActive.Tip(). Tip is forked from BestHeader.\n+            //     fetch from pindexLast (not BestHeader, given the unusual circumstances)\n+            // 6 - ancestor of chainActive.Tip not BestHeader. Tip is forked from BestHeader.\n+            //     fetch from pindexLast (not Tip, given the unusual circumstances)\n+\n+            CBlockIndex *pindexContinue = pindexLast;\n+            std::string strDesc;\n+            if (LastCommonAncestor(pindexLast, pindexBestHeader) == pindexLast) {\n+                // received header is an ancestor of pindexBestHeader (cases 2, 3, 4, 5)\n+                CBlockIndex *pindexFork = LastCommonAncestor(pindexBestHeader, chainActive.Tip());\n+                if (pindexFork == chainActive.Tip()) {\n+                    // Out current tip an ancestor of pindexBestHeader",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "e2106229982ef678535d1b7dffc5c57cb8e77e3f",
    "original_commit_id": "a165da326415e9eec5c2f940e896798fb84dbd8c",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`s/Out/Our`?\n",
    "created_at": "2016-11-07T02:51:55Z",
    "updated_at": "2017-02-16T11:38:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9091#discussion_r86707478",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9091",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86707478"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9091#discussion_r86707478"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9091"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86707478/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5977,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86708838",
    "pull_request_review_id": 7352485,
    "id": 86708838,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDg2NzA4ODM4",
    "diff_hunk": "@@ -5954,10 +5954,38 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv,\n \n         if (nCount == MAX_HEADERS_RESULTS) {\n             // Headers message had its maximum size; the peer may have more headers.\n-            // TODO: optimize: if pindexLast is an ancestor of chainActive.Tip or pindexBestHeader, continue\n-            // from there instead.\n-            LogPrint(\"net\", \"more getheaders (%d) to end to peer=%d (startheight:%d)\\n\", pindexLast->nHeight, pfrom->id, pfrom->nStartingHeight);\n-            pfrom->PushMessage(NetMsgType::GETHEADERS, chainActive.GetLocator(pindexLast), uint256());\n+            //\n+            // Optimize where to fetch the next headers from. Places the last header could be;-\n+            // 1 - neither an ancestor of chainActive.Tip() nor BestHeader. fetch from pindexLast\n+            // 2 - ancestor of chainActive.Tip() and BestHeader. fetch from BestHeader\n+            // 3 - ancestor of BestHeader not chainActive.Tip(). Tip is an ancestor of BestHeader\n+            //     fetch from BestHeader\n+            // 4 - ancestor of chainActive.Tip and BestHeader. Tip is forked from BestHeader\n+            //     fetch from the point where tip forks from BestHeader (since we don't know which fork\n+            //     the other peer is following but can nevertheless assume they don't fork before our fork).\n+            // 5 - ancestor of BestHeader not chainActive.Tip(). Tip is forked from BestHeader.\n+            //     fetch from pindexLast (not BestHeader, given the unusual circumstances)\n+            // 6 - ancestor of chainActive.Tip not BestHeader. Tip is forked from BestHeader.\n+            //     fetch from pindexLast (not Tip, given the unusual circumstances)\n+\n+            CBlockIndex *pindexContinue = pindexLast;\n+            std::string strDesc;\n+            if (LastCommonAncestor(pindexLast, pindexBestHeader) == pindexLast) {\n+                // received header is an ancestor of pindexBestHeader (cases 2, 3, 4, 5)\n+                CBlockIndex *pindexFork = LastCommonAncestor(pindexBestHeader, chainActive.Tip());\n+                if (pindexFork == chainActive.Tip()) {\n+                    // Out current tip an ancestor of pindexBestHeader",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 28,
    "commit_id": "e2106229982ef678535d1b7dffc5c57cb8e77e3f",
    "original_commit_id": "a165da326415e9eec5c2f940e896798fb84dbd8c",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@dcousens Thanks for taking a look at this. Fixed.\n",
    "created_at": "2016-11-07T03:18:02Z",
    "updated_at": "2017-02-16T11:38:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/9091#discussion_r86708838",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9091",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86708838"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/9091#discussion_r86708838"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/9091"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/86708838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 5977,
    "side": "RIGHT",
    "in_reply_to_id": 86707478
  }
]