gmaxwell,2013-08-28T09:29:16Z,"For some discussion. This is, I believe, a really modest change. Some may favor more extensive revamps, and I wouldn't disagreeâ€” but I think we should do at least this much to stop some of the bad incentive bleeding.\n\nMaking this change, or one like it, is an item on on my personal UTXO spring cleaning checklist: https://en.bitcoin.it/wiki/User:Gmaxwell/utxo_spring_cleaning  and fits into a larg",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-23401735,23401735,
gavinandresen,2013-09-17T09:50:53Z,"I've been playing with variations of this for a couple hours, and wrote a unit test (I'll email you the patch).\n\nACK in general, with one nit:\n\nIt looks like 109 isn't the right number, I'm getting P2SH signatures that are 108-110 bytes big. @sipa : what is the maximum DER-encoded signature plus compress public key size?\n",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24576023,24576023,
petertodd,2013-09-17T17:51:33Z,"@gmaxwell @gavinandresen Signatures can be up to 73 bytes long,(1) so that gets you 73+1 for the signature, and (33+1)+1 for the scriptPubKey, and another byte for the length of the scriptPubKey, 110 bytes in total.\n\n1) https://en.bitcoin.it/wiki/Elliptic_Curve_Digital_Signature_Algorithm <- I wrote this after checking with @sipa\n",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24608419,24608419,
sipa,2013-09-17T17:54:48Z,"The average should be 109 though, and in fact, we could change the negate-S anti-malleability rule in a way that guarantees it's at most 109, and on average 108.5.\n",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24608664,24608664,
BitcoinPullTester,2013-09-17T18:43:59Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/d6eb259953699f5bea208ff41a0967d8ea513a70 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24612501,24612501,
gmaxwell,2013-09-17T19:18:23Z,"I think exact size doesn't matter too much, so long as its not so big that people have no disincentive to start stashing a bunch of junk in their scriptsigs, and not so small that people shy away from cleaning up.  109 was entirely too prime, so I put in 110.\n",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24615453,24615453,
petertodd,2013-09-17T20:35:24Z,Note that right now you can do the following:\n\nscriptPubKey: 1 (pubkeys) m CHECKMULTISIG\nscriptSig: (37 bytes of garbage) (73-byte signature)\n\nthus inserting ~37 bytes of garbage for free because we don't actually check that the CHECKMULTISIG dummy PUSHDATA is equal to zero in IsStandard() - do we have agreement this should be fixed? I can write a patch; it's a source of tx malleability too. ,https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24620084,24620084,
cozz,2013-09-17T20:50:07Z,"From coin control, I know that the biggest txin is 149 bytes. \nTo verify, I have printfed some ::GetSerializeSize(txin, SER_NETWORK, PROTOCOL_VERSION),\nthe values are from 147 to 149.\nWe have now 41 + 110 = 151.\nThis is 2 bytes too much.\n\nI have printfed this: (unsigned int)txin.scriptSig.size()\nand it spits out values from 106 to 108.\nWe already had 109 and 110 in the lottery, I would say",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24621225,24621225,
gmaxwell,2013-09-17T20:52:05Z,@cozz ... you were testing P2SH? \n,https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24621383,24621383,
cozz,2013-09-17T21:00:39Z,"@gmaxwell no, I am talking about a default tx, sorry for bothering.\n",https://github.com/bitcoin/bitcoin/pull/2945#issuecomment-24622000,24622000,
