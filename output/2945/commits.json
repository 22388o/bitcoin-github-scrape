[
  {
    "sha": "d6eb259953699f5bea208ff41a0967d8ea513a70",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNmViMjU5OTUzNjk5ZjViZWEyMDhmZjQxYTA5NjdkOGVhNTEzYTcw",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-08-28T09:15:39Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2013-09-17T17:56:54Z"
      },
      "message": "[Fee logic] Don't count txins for priority to encourage sweeping.\n\nThis changes the priority calculation to not include the size of per-txin\n data including up to 110 bytes of scriptsig so that transactions which\n sweep up extra UTXO don't lose priority relative to ones that don't.\n\nI'd toyed with some other variations, but it seems like any formulation\n which results in an incentive stronger than making them not count will\n sometimes create incentives to add extra outputs so that you have\n extra inputs to consume later.  The maximum credit is limited so that\n users don't lose the disincentive to stuff random data in their\n transactions, the limit of 110 is based on the size of a P2SH\n redemption with a compressed public key.\n\nThis shouldn't need a staged deployment because the priority is not\n used as a relay criteria, only a mining criteria.",
      "tree": {
        "sha": "84dfb0bff2f5e9ffb28d3e638487927b813bf50e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84dfb0bff2f5e9ffb28d3e638487927b813bf50e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6eb259953699f5bea208ff41a0967d8ea513a70",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6eb259953699f5bea208ff41a0967d8ea513a70",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6eb259953699f5bea208ff41a0967d8ea513a70",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6eb259953699f5bea208ff41a0967d8ea513a70/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bb7d0fc12fcfbb2a91e39cb49f2a0873344dbae0"
      }
    ],
    "stats": {
      "total": 26,
      "additions": 23,
      "deletions": 3
    },
    "files": [
      {
        "sha": "8184705ab9b241d55a7e5fdc8171600686cc5add",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 2,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6eb259953699f5bea208ff41a0967d8ea513a70/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6eb259953699f5bea208ff41a0967d8ea513a70/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=d6eb259953699f5bea208ff41a0967d8ea513a70",
        "patch": "@@ -242,9 +242,21 @@ CBlockTemplate* CreateNewBlock(const CScript& scriptPubKeyIn)\n             }\n             if (fMissingInputs) continue;\n \n-            // Priority is sum(valuein * age) / txsize\n+            // Priority is sum(valuein * age) / modified_txsize\n             unsigned int nTxSize = ::GetSerializeSize(tx, SER_NETWORK, PROTOCOL_VERSION);\n-            dPriority /= nTxSize;\n+            unsigned int nTxSizeMod = nTxSize;\n+            // In order to avoid disincentivizing cleaning up the UTXO set we don't count\n+            // the constant overhead for each txin and up to 110 bytes of scriptSig (which\n+            // is enough to cover a compressed pubkey p2sh redemption) for priority.\n+            // Providing any more cleanup incentive than making additional inputs free would\n+            // risk encouraging people to create junk outputs to redeem later.\n+            BOOST_FOREACH(const CTxIn& txin, tx.vin)\n+            {\n+                unsigned int offset = 41U + min(110U, (unsigned int)txin.scriptSig.size());\n+                if (nTxSizeMod > offset)\n+                    nTxSizeMod -= offset;\n+            }\n+            dPriority /= nTxSizeMod;\n \n             // This is a more accurate fee-per-kilobyte than is used by the client code, because the\n             // client code rounds up the size to the nearest 1K. That's good, because it gives an"
      },
      {
        "sha": "012dbef80a7a8fa5d28e0c49fadbe1738bf1ecca",
        "filename": "src/wallet.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6eb259953699f5bea208ff41a0967d8ea513a70/src/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6eb259953699f5bea208ff41a0967d8ea513a70/src/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.cpp?ref=d6eb259953699f5bea208ff41a0967d8ea513a70",
        "patch": "@@ -1300,7 +1300,15 @@ bool CWallet::CreateTransaction(const vector<pair<CScript, int64> >& vecSend,\n                     strFailReason = _(\"Transaction too large\");\n                     return false;\n                 }\n-                dPriority /= nBytes;\n+                unsigned int nTxSizeMod = nBytes;\n+                // See miner.c's dPriority logic for the matching network-node side code.\n+                BOOST_FOREACH(const CTxIn& txin, (*(CTransaction*)&wtxNew).vin)\n+                {\n+                    unsigned int offset = 41U + min(110U, (unsigned int)txin.scriptSig.size());\n+                    if (nTxSizeMod > offset)\n+                        nTxSizeMod -= offset;\n+                }\n+                dPriority /= nTxSizeMod;\n \n                 // Check that enough fee is included\n                 int64 nPayFee = nTransactionFee * (1 + (int64)nBytes / 1000);"
      }
    ]
  }
]