hebasto,2021-07-20 13:42:27,cc @promag @jarolrod @fanquake ,https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-883403597,883403597,
RandyMcMillan,2021-07-22 13:52:57,"Tested 3bf2fa518 macOS 11.4 arm64\n\n![Remote Desktop Picture July 22, 2021 at 9 40 50 AM EDT](https://user-images.githubusercontent.com/152159/126649683-4ef0f17d-fdcc-488e-9365-993d8ca0c007.png)\n",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-884930348,884930348,
hebasto,2021-07-23 07:34:01,Rebased 3bf2fa51816622072ba3a4dd80c5cf6a1efd04ab -> b419da72aac605d2dbb90dbcb3b502ae54b2e006 ([pr22506.01](https://github.com/hebasto/bitcoin/commits/pr22506.01) -> [pr22506.02](https://github.com/hebasto/bitcoin/commits/pr22506.02)) due to the conflict with #22526.,https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-885456079,885456079,
RandyMcMillan,2021-07-26 23:27:47,"![Remote Desktop Picture July 26, 2021 at 7 24 27 PM EDT](https://user-images.githubusercontent.com/152159/127071753-d15e99c4-3c2e-461e-b05b-b959f93520dc.png)\n\nTested your in scope commits together -> \n[hebasto-mac-prs](https://github.com/RandyMcMillan/bitcoin/commits/hebasto-mac-prs)\n\n",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-887095827,887095827,
hebasto,2021-08-03 06:43:44,"Rebased b419da72aac605d2dbb90dbcb3b502ae54b2e006 -> aacb8fef335c998cb6c71edb65f31a0f93318cc1 ([pr22506.02](https://github.com/hebasto/bitcoin/commits/pr22506.02) -> [pr22506.03](https://github.com/hebasto/bitcoin/commits/pr22506.03)) due to the conflict with #22448.\n\nAlso the PR description has been updated.",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-891579376,891579376,
hebasto,2021-08-03 09:23:46,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n1190773d43326d653f6fe5a0287f60283f7030c07fe301b602e5835bfaf10ddf  guix-build-aacb8fef335c/output/aarch64-linux-gnu/SHA256SUMS.part\nc05e6f7b1838616379eb7530e25bc5c642beb8557a8b50cd0495b4c9fac5c4a9  guix-build-aacb8fef335c/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-891686323,891686323,
jarolrod,2021-08-25 16:41:16,"GUIX hashes, mine match @hebasto :\n\n```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\n1190773d43326d653f6fe5a0287f60283f7030c07fe301b602e5835bfaf10ddf  guix-build-aacb8fef335c/output/aarch64-linux-gnu/SHA256SUMS.part\nc05e6f7b1838616379eb7530e25bc5c642beb8557a8b50cd0495b4c9fac5c4a9  guix-build-aacb8fef335c/output/a",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-905697404,905697404,
laanwj,2021-09-09 14:57:49,"I think this cross-compilation configuration should be supported, but I'm not sure the changes here are correct. I wonder if it can be handled in a more general way as well, that doesn't need to special-case Darwin inside package builds.",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-916178001,916178001,
hebasto,2021-09-09 15:06:23,"> I think this cross-compilation configuration should be supported, but I'm not sure the changes here are correct. I wonder if it can be handled in a more general way as well, that doesn't need to special-case Darwin inside package builds.\n\nThis PR just adds the `else` branch to the already existed Darwin-specific block, no?",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-916185587,916185587,
fanquake,2021-11-25 12:16:33,"Please un-draft and rebase this, as well as update the PR description.",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-979161006,979161006,
hebasto,2021-11-25 13:30:29,"Rebased aacb8fef335c998cb6c71edb65f31a0f93318cc1 -> 46cf7877e40499dab4416fb3c9f5b72ede6c5f69 ([pr22506.03](https://github.com/hebasto/bitcoin/commits/pr22506.03) -> [pr22506.04](https://github.com/hebasto/bitcoin/commits/pr22506.04)) on top of the #23583.\n\nAlso the PR description has been updated.\n\n@fanquake \n> Please un-draft and rebase this, as well as update the PR description.\n\nD",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-979217765,979217765,
hebasto,2021-11-25 13:34:46,"@laanwj \n> I think this cross-compilation configuration should be supported, but I'm not sure the changes here are correct. I wonder if it can be handled in a more general way as well, that doesn't need to special-case Darwin inside package builds.\n\nI've made more research, and figured out that a general approach breaks cross compiling on linux for macos due to our custom `macx-clang-linux` ",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-979220645,979220645,
hebasto,2021-11-25 16:38:37,"#### Guix builds:\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\nd8eef09fbee959ae2814239686e240d5ed22820e61b375e646d8e5e6c6d6953e  guix-build-46cf7877e404/output/aarch64-linux-gnu/SHA256SUMS.part\n406427d4fdb4553cbc806a6fb50b3af0846a70a1081f05df66292697b80150f7  guix-build-46cf7877e404/output/aarch64-linux-gnu/bitc",https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-979349517,979349517,
hebasto,2021-11-26 12:23:00,Closing in favor of #23603.,https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-979940453,979940453,
DrahtBot,2021-11-27 09:18:33,<!--9cd9c72976c961c55c7acef8f6ba82cd-->\n### Guix builds\n\n| File | commit 681b25e3cd7d084f642693152322ed9a40f33ba0<br>(master) | commit 20ed954df8bb86ac13d271d7ba61bd20e26073ba<br>(master and this pull) |\n|--|--|--|\n| SHA256SUMS.part | [`3adc72d019c8264f...`](https://drahtbot.space/guix/bitcoin/bitcoin/681b25e3cd7d084f642693152322ed9a40f33ba0/SHA256SUMS.part) | [`9059f2369894fc8e...`](https://,https://github.com/bitcoin/bitcoin/pull/22506#issuecomment-980529856,980529856,
fanquake,2021-07-21 07:38:10,"Haven't looked at this other than to say, if this is explicitly fixing the `NO_QT=1` build, why is it touching Qt code.",https://github.com/bitcoin/bitcoin/pull/22506#discussion_r673733717,673733717,depends/packages/qt.mk
hebasto,2021-07-21 07:43:25,"The reason to include this change here is to do not change build system behavior while building without `NO_QT=1`:\n- on Intel-based macOS 11.4\n- on M1-based macOS with installed Rosetta 2",https://github.com/bitcoin/bitcoin/pull/22506#discussion_r673737141,673737141,depends/packages/qt.mk
laanwj,2021-09-09 14:55:58,"the ""darwin"" comes out of the blue here, it's not in a MacOS specific block, `($(host_arch),$(build_arch))` is not specifically related to it and might arise on different systems as well when cross-compiling",https://github.com/bitcoin/bitcoin/pull/22506#discussion_r705427492,705427492,depends/packages/qt.mk
hebasto,2021-09-09 14:58:15,"> the ""darwin"" comes out of the blue here...\n\nThese lines are placed within the `else` branch of the `ifneq ($(build_os),darwin)` statement.\n",https://github.com/bitcoin/bitcoin/pull/22506#discussion_r705429811,705429811,depends/packages/qt.mk
fanquake,2021-11-25 13:14:58,"Can you maintain the surrounding style until we eitherr commit to a new one, and/or change things wholesale. Otherwise depends is becoming a bit of a mis-mash, and potentially just more confusing to those who aren't familiar with it.",https://github.com/bitcoin/bitcoin/pull/22506#discussion_r756879977,756879977,depends/builders/darwin.mk
fanquake,2021-11-25 13:33:39,I'm having trouble parsing this comment. Can you describe the actual problem? What about the custom mkspec is the issue?,https://github.com/bitcoin/bitcoin/pull/22506#discussion_r756894303,756894303,depends/packages/qt.mk
