sipa,2015-08-31T16:59:57Z,Are you sure this re-locks if no exception is thrown?\n,https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136428502,136428502,
casey,2015-08-31T17:03:51Z,"Sorry, I missed a line, fixed.\n",https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136429311,136429311,
dcousens,2015-08-31T17:13:20Z,"ACK,  but IMHO I don't see why not to just bump to boost 1.50.\n",https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136432030,136432030,
sipa,2015-08-31T17:14:21Z,@theuni @laanwj Comments on Boost 1.50?\n,https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136432457,136432457,
theuni,2015-08-31T17:31:14Z,"@dcousens  This is not about ""us"" bumping boost, it's about us failing to compile in environments that would otherwise compile fine.\n\nIt's fine to require a newer version if it brings big new features that'd be hard to match without it, but in this case I don't think it's worth it. Concept ACK on the approach here.\n",https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136437096,136437096,
pstratem,2015-09-01T00:37:25Z,I prefer my solution.\n\nhttps://github.com/bitcoin/bitcoin/pull/6610\n,https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-136537586,136537586,
laanwj,2015-09-03T15:44:12Z,"I like this solution better than #6610. At least it scopes the lock(), instead of depending on an extra call to `lock.owns_lock()` to determine where the exception came from.\n\nAlthough implementing a RAII reverse_lock of our own would have my preference, it's the cleanest solution.\n",https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-137489881,137489881,
casey,2015-09-03T16:58:20Z,"Opened #6630, which adds our own implementation of reverse_lock, along with some tests for it.\n",https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-137511193,137511193,
laanwj,2015-09-03T19:47:35Z,Closing (#6630)\n,https://github.com/bitcoin/bitcoin/pull/6608#issuecomment-137555587,137555587,
