[
  {
    "sha": "34e5015cd21e27c1bf635d92531afac93f553096",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGU1MDE1Y2QyMWUyN2MxYmY2MzVkOTI1MzFhZmFjOTNmNTUzMDk2",
    "commit": {
      "author": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-02-21T12:57:44Z"
      },
      "committer": {
        "name": "Ross Nicoll",
        "email": "jrn@jrn.me.uk",
        "date": "2015-02-21T13:14:19Z"
      },
      "message": "Add unit tests for next difficulty calculations\n\nSplit GetNextWorkRequired() into two functions to allow the difficulty calculations to\nbe tested without requiring a full blockchain.\nAdd unit tests to cover basic difficulty calculation, plus each of the min/max actual\ntime, and maximum difficulty target conditions.",
      "tree": {
        "sha": "0497bd7f74f211fd261ec173225ab8eca1760fdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0497bd7f74f211fd261ec173225ab8eca1760fdb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34e5015cd21e27c1bf635d92531afac93f553096",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJU6ISrAAoJEJFC5fflM847RC8IAJGxJiyv5z/EmkKCJEU6CU3a\ncuCjORvxRQFyBPYShvbe7W22nQZilUAFMtjgReuyNqnRoU3E0wlYPzdWZT4WKXZ9\nPUMvcBQdwJXuLefaZuPmI+i+Mtk8D5/uXlHXT+J5xI8yTe+8q+9VNN53lyWM2RX3\nnqrbV1OMECqWP31BsWG18use6JcuXfFZw2o+XoFCWYH2a0sp6Ue5l7TCZHwitoUs\n0XMVCxkbkf+bPKJbGb5r83s3ZaL4uYfX80eItkRmvvmBrRZ/wqUurPgIhoDSKKGj\nWV9M+mDYL9luDyT1t+34B3tZCbj+khkD7it6Pj5Y3aA41VqIdFVacu1SxiELbWo=\n=pZCh\n-----END PGP SIGNATURE-----",
        "payload": "tree 0497bd7f74f211fd261ec173225ab8eca1760fdb\nparent aaba10f275059cd762c1f07597aa5efb24176cdd\nauthor Ross Nicoll <jrn@jrn.me.uk> 1424523464 +0000\ncommitter Ross Nicoll <jrn@jrn.me.uk> 1424524459 +0000\n\nAdd unit tests for next difficulty calculations\n\nSplit GetNextWorkRequired() into two functions to allow the difficulty calculations to\nbe tested without requiring a full blockchain.\nAdd unit tests to cover basic difficulty calculation, plus each of the min/max actual\ntime, and maximum difficulty target conditions.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e5015cd21e27c1bf635d92531afac93f553096",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34e5015cd21e27c1bf635d92531afac93f553096",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34e5015cd21e27c1bf635d92531afac93f553096/comments",
    "author": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rnicoll",
      "id": 3513077,
      "node_id": "MDQ6VXNlcjM1MTMwNzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3513077?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnicoll",
      "html_url": "https://github.com/rnicoll",
      "followers_url": "https://api.github.com/users/rnicoll/followers",
      "following_url": "https://api.github.com/users/rnicoll/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnicoll/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnicoll/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnicoll/subscriptions",
      "organizations_url": "https://api.github.com/users/rnicoll/orgs",
      "repos_url": "https://api.github.com/users/rnicoll/repos",
      "events_url": "https://api.github.com/users/rnicoll/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnicoll/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "aaba10f275059cd762c1f07597aa5efb24176cdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aaba10f275059cd762c1f07597aa5efb24176cdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/aaba10f275059cd762c1f07597aa5efb24176cdd"
      }
    ],
    "stats": {
      "total": 75,
      "additions": 74,
      "deletions": 1
    },
    "files": [
      {
        "sha": "6774745de2453ebe9d998e3a7f90b8252ae09432",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e5015cd21e27c1bf635d92531afac93f553096/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e5015cd21e27c1bf635d92531afac93f553096/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=34e5015cd21e27c1bf635d92531afac93f553096",
        "patch": "@@ -55,6 +55,7 @@ BITCOIN_TESTS =\\\n   test/multisig_tests.cpp \\\n   test/netbase_tests.cpp \\\n   test/pmt_tests.cpp \\\n+  test/pow_tests.cpp \\\n   test/rpc_tests.cpp \\\n   test/sanity_tests.cpp \\\n   test/script_P2SH_tests.cpp \\"
      },
      {
        "sha": "b75b293c908ba67b3663df29193d33f50e8c0fd9",
        "filename": "src/pow.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e5015cd21e27c1bf635d92531afac93f553096/src/pow.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e5015cd21e27c1bf635d92531afac93f553096/src/pow.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.cpp?ref=34e5015cd21e27c1bf635d92531afac93f553096",
        "patch": "@@ -48,8 +48,13 @@ unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHead\n         pindexFirst = pindexFirst->pprev;\n     assert(pindexFirst);\n \n+    return CalculateNextWorkRequired(pindexLast, pindexFirst->GetBlockTime());\n+}\n+\n+unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime)\n+{\n     // Limit adjustment step\n-    int64_t nActualTimespan = pindexLast->GetBlockTime() - pindexFirst->GetBlockTime();\n+    int64_t nActualTimespan = pindexLast->GetBlockTime() - nFirstBlockTime;\n     LogPrintf(\"  nActualTimespan = %d  before bounds\\n\", nActualTimespan);\n     if (nActualTimespan < Params().TargetTimespan()/4)\n         nActualTimespan = Params().TargetTimespan()/4;"
      },
      {
        "sha": "a5fbba62364c0f1709cd11723b5137694dac6586",
        "filename": "src/pow.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e5015cd21e27c1bf635d92531afac93f553096/src/pow.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e5015cd21e27c1bf635d92531afac93f553096/src/pow.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/pow.h?ref=34e5015cd21e27c1bf635d92531afac93f553096",
        "patch": "@@ -14,6 +14,7 @@ class uint256;\n class arith_uint256;\n \n unsigned int GetNextWorkRequired(const CBlockIndex* pindexLast, const CBlockHeader *pblock);\n+unsigned int CalculateNextWorkRequired(const CBlockIndex* pindexLast, int64_t nFirstBlockTime);\n \n /** Check whether a block hash satisfies the proof-of-work requirement specified by nBits */\n bool CheckProofOfWork(uint256 hash, unsigned int nBits);"
      },
      {
        "sha": "e42c1b0a8b66af7e2952c1b48f172b983af92de4",
        "filename": "src/test/pow_tests.cpp",
        "status": "added",
        "additions": 66,
        "deletions": 0,
        "changes": 66,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34e5015cd21e27c1bf635d92531afac93f553096/src/test/pow_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34e5015cd21e27c1bf635d92531afac93f553096/src/test/pow_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/pow_tests.cpp?ref=34e5015cd21e27c1bf635d92531afac93f553096",
        "patch": "@@ -0,0 +1,66 @@\n+// Copyright (c) 2015 The Bitcoin Core developers\n+// Distributed under the MIT/X11 software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include \"main.h\"\n+#include \"pow.h\"\n+#include \"util.h\"\n+\n+#include <boost/test/unit_test.hpp>\n+\n+using namespace std;\n+\n+BOOST_AUTO_TEST_SUITE(pow_tests)\n+\n+/* Test calculation of next difficulty target with no constraints applying */\n+BOOST_AUTO_TEST_CASE(get_next_work)\n+{\n+    SelectParams(CBaseChainParams::MAIN);\n+\n+    int64_t nLastRetargetTime = 1261130161; // Block #30240\n+    CBlockIndex pindexLast;\n+    pindexLast.nHeight = 32255;\n+    pindexLast.nTime = 1262152739;  // Block #32255\n+    pindexLast.nBits = 0x1d00ffff;\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime), 0x1d00d86a);\n+}\n+\n+/* Test the constraint on the upper bound for next work */\n+BOOST_AUTO_TEST_CASE(get_next_work_pow_limit)\n+{\n+    SelectParams(CBaseChainParams::MAIN);\n+\n+    int64_t nLastRetargetTime = 1231006505; // Block #0\n+    CBlockIndex pindexLast;\n+    pindexLast.nHeight = 2015;\n+    pindexLast.nTime = 1233061996;  // Block #2015\n+    pindexLast.nBits = 0x1d00ffff;\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime), 0x1d00ffff);\n+}\n+\n+/* Test the constraint on the lower bound for actual time taken */\n+BOOST_AUTO_TEST_CASE(get_next_work_lower_limit_actual)\n+{\n+    SelectParams(CBaseChainParams::MAIN);\n+\n+    int64_t nLastRetargetTime = 1279008237; // Block #66528\n+    CBlockIndex pindexLast;\n+    pindexLast.nHeight = 68543;\n+    pindexLast.nTime = 1279297671;  // Block #68543\n+    pindexLast.nBits = 0x1c05a3f4;\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime), 0x1c0168fd);\n+}\n+\n+/* Test the constraint on the upper bound for actual time taken */\n+BOOST_AUTO_TEST_CASE(get_next_work_upper_limit_actual)\n+{\n+    SelectParams(CBaseChainParams::MAIN);\n+    int64_t nLastRetargetTime = 1263163443; // NOTE: Not an actual block time\n+    CBlockIndex pindexLast;\n+    pindexLast.nHeight = 46367;\n+    pindexLast.nTime = 1269211443;  // Block #46367\n+    pindexLast.nBits = 0x1c387f6f;\n+    BOOST_CHECK_EQUAL(CalculateNextWorkRequired(&pindexLast, nLastRetargetTime), 0x1d00e1fd);\n+}\n+\n+BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  }
]