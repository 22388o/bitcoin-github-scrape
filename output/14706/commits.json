[
  {
    "sha": "74f1037caa66e8906b8fd24b506c19f614a13fbe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NGYxMDM3Y2FhNjZlODkwNmI4ZmQyNGI1MDZjMTlmNjE0YTEzZmJl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-11-11T19:40:16Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-11-11T19:40:16Z"
      },
      "message": "Fix icc (Intel C++ compiler) warnings\n\n```\nprotocol.cpp(83): warning 68: integer conversion resulted in a change of sign\n      nMessageSize = -1;\n                     ^\ntest/serialize_tests.cpp(203): warning 68: integer conversion resulted in a change of sign\n          uint64_t j = -1;\n                       ^\n./validationinterface.h(150): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::RegisterValidationInterface(CValidationInterface*);\n                  ^\n./validationinterface.h(151): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::UnregisterValidationInterface(CValidationInterface*);\n                  ^\n./validationinterface.h(152): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::UnregisterAllValidationInterfaces();\n                  ^\n./validationinterface.h(160): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::RegisterValidationInterface(CValidationInterface*);\n                  ^\n./validationinterface.h(161): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::UnregisterValidationInterface(CValidationInterface*);\n                  ^\n./validationinterface.h(162): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::UnregisterAllValidationInterfaces();\n                  ^\n./validationinterface.h(163): warning 1098: the qualifier on this friend declaration is ignored\n      friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n                  ^\n```",
      "tree": {
        "sha": "03c3493842c9871e080b335c9b19b62a627d224d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/03c3493842c9871e080b335c9b19b62a627d224d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/74f1037caa66e8906b8fd24b506c19f614a13fbe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f1037caa66e8906b8fd24b506c19f614a13fbe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/74f1037caa66e8906b8fd24b506c19f614a13fbe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/74f1037caa66e8906b8fd24b506c19f614a13fbe/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "edc715240cb6738262ae96dea476544052eb5351",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/edc715240cb6738262ae96dea476544052eb5351",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/edc715240cb6738262ae96dea476544052eb5351"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "1cf34f8ca0d312d390918652791c39ff561401b8",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=74f1037caa66e8906b8fd24b506c19f614a13fbe",
        "patch": "@@ -80,7 +80,7 @@ CMessageHeader::CMessageHeader(const MessageStartChars& pchMessageStartIn)\n {\n     memcpy(pchMessageStart, pchMessageStartIn, MESSAGE_START_SIZE);\n     memset(pchCommand, 0, sizeof(pchCommand));\n-    nMessageSize = -1;\n+    nMessageSize = std::numeric_limits<decltype(nMessageSize)>::max();\n     memset(pchChecksum, 0, CHECKSUM_SIZE);\n }\n "
      },
      {
        "sha": "002f61f6a28e89f703ccb5141e60692ca1c31338",
        "filename": "src/test/serialize_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/test/serialize_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/test/serialize_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/serialize_tests.cpp?ref=74f1037caa66e8906b8fd24b506c19f614a13fbe",
        "patch": "@@ -200,7 +200,7 @@ BOOST_AUTO_TEST_CASE(varints)\n     }\n \n     for (uint64_t i = 0;  i < 100000000000ULL; i += 999999937) {\n-        uint64_t j = -1;\n+        uint64_t j = std::numeric_limits<uint64_t>::max();\n         ss >> VARINT(j);\n         BOOST_CHECK_MESSAGE(i == j, \"decoded:\" << j << \" expected:\" << i);\n     }"
      },
      {
        "sha": "7173c82dbd451c2e9dca6d5754f546e09bde2956",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/74f1037caa66e8906b8fd24b506c19f614a13fbe/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=74f1037caa66e8906b8fd24b506c19f614a13fbe",
        "patch": "@@ -147,20 +147,20 @@ class CValidationInterface {\n      * Notifies listeners that a block which builds directly on our current tip\n      * has been received and connected to the headers tree, though not validated yet */\n     virtual void NewPoWValidBlock(const CBlockIndex *pindex, const std::shared_ptr<const CBlock>& block) {};\n-    friend void ::RegisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterAllValidationInterfaces();\n+    friend void RegisterValidationInterface(CValidationInterface*);\n+    friend void UnregisterValidationInterface(CValidationInterface*);\n+    friend void UnregisterAllValidationInterfaces();\n };\n \n struct MainSignalsInstance;\n class CMainSignals {\n private:\n     std::unique_ptr<MainSignalsInstance> m_internals;\n \n-    friend void ::RegisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterValidationInterface(CValidationInterface*);\n-    friend void ::UnregisterAllValidationInterfaces();\n-    friend void ::CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n+    friend void RegisterValidationInterface(CValidationInterface*);\n+    friend void UnregisterValidationInterface(CValidationInterface*);\n+    friend void UnregisterAllValidationInterfaces();\n+    friend void CallFunctionInValidationInterfaceQueue(std::function<void ()> func);\n \n     void MempoolEntryRemoved(CTransactionRef tx, MemPoolRemovalReason reason);\n "
      }
    ]
  }
]