Empact,2018-11-11T19:21:23Z,"nit: how about including the warnings in the commit message, so the changes are explained in the repo itself?",https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437696862,437696862,
practicalswift,2018-11-11T19:23:21Z,@Empact Good idea! Fixed :-),https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437697008,437697008,
gmaxwell,2018-11-11T19:35:47Z,"NAK.  Consensus changes without a proof of no effective change and without any justification given (beyond the implicit 'silences a warning in an unsupported compiler'), and also fixing type warnings via peppering in casts (which at best merely silences the warning but doesn't change the behaviour it was warning about).",https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437697907,437697907,
practicalswift,2018-11-11T20:09:24Z,"@gmaxwell \n\nThanks for the quick review!\n\nI've now removed this change to `interpreter.cpp` (avoidance of unintended unsigned integer wraparound):\n\n```\ndiff --git a/src/script/interpreter.cpp b/src/script/interpreter.cpp\nindex 95b25b491..3e77d6b9c 100644\n--- a/src/script/interpreter.cpp\n+++ b/src/script/interpreter.cpp\n@@ -51,8 +51,8 @@ bool CastToBool(const valtype& vch)\n ",https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437700509,437700509,
practicalswift,2018-11-11T23:12:41Z,"> [â€¦] in an unsupported compiler\n\nBased on the comment https://github.com/bitcoin/bitcoin/pull/12695#issuecomment-374736165 I thought we didn't make any assumptions about what compilers will be used:\n\n_Generally we don't want to make any assumptions about what compiler will be used, unless an option is known to directly conflict between common ones. I don't think that's the case here. The ",https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437714460,437714460,
sipa,2018-11-12T00:53:37Z,"@practicalswift Release binaries are built using gcc (linux and windows) and clang (macos), nothing else. We aim to have things work in other compilers for those who self-compile without the use of the depends system, but those obviously don't carry the same amount of support or testing.",https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437722336,437722336,
practicalswift,2018-11-12T08:05:58Z,@sipa Thanks for clarifying! Makes perfect sense.,https://github.com/bitcoin/bitcoin/pull/14706#issuecomment-437790375,437790375,
