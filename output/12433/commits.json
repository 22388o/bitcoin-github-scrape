[
  {
    "sha": "370ebf2a2397f267f9daccba2548861497b94ca3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNzBlYmYyYTIzOTdmMjY3ZjlkYWNjYmEyNTQ4ODYxNDk3Yjk0Y2Ez",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-02-26T16:42:57Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2018-02-26T16:42:57Z"
      },
      "message": "[refactor][qt] move SendCoinsRecipient to its own file",
      "tree": {
        "sha": "8272f6a26e0f62db0c487df784a1633f8f6deb4c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8272f6a26e0f62db0c487df784a1633f8f6deb4c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/370ebf2a2397f267f9daccba2548861497b94ca3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAlqUORMACgkQV/+b28ww\nEAn4DhAAw3rgDiqoZznVfFF8SwuCnYPduJYlFhYgCPMrkWcw6UV5ci0NYo5gibce\nZQfj5x7MYReBuzXtMmojAezsMFtvegQWbuGvbL9VAbu9XGEKieHl5XEf1VHXgMQp\nQGF92kMqLuuW1g+Shan7JUhmzkGhm7JIKaWFeV2IYzoghmMXbS9MOPOtOSVwP5Ug\nwTEZSBlEO180yEJW74gSNE6AhOx5GIZIMsBUJel0X86kDnUNk5Ld5of07BGQ/kNi\nhICZq22zWDdX8d+pxrzrtN4Zqe7hPj7eg32jaUoKlthA1b3aIqcihiMPvORCSmTb\nOva9DNkxUtCiWI2xk5uohFjCqpWQ4MdLKZHZ6zkRbeg6w3RscgHDOYIP6tUYWfN+\nt3J0GgoiJ3HNgPB0hgVrXrIUkgm14n3at0q4SE1BINKVpKoYI12FXzRELg+VGfLn\ndBltNyhsEy0TTWCjrmPY0Fvq00UQRNa8h/U68ULEGjBt0aUCuI/Zlt5c8pxqGFih\ni+B+nIRq828rlKN9KDmMSPi38jcjJwkFWehZa0ry8XmG6+qlZV2QjoHYrqJjU2Z3\nbbCZiA6Vbvr/Hv7ia7lHZVpK0l+ZKWIzA97PqG8ffye394oE7grxhTzLGD3yC5Mq\nGxKZwwWwNFf2FLDT4wf1UGyGX34uMn6gSuQW0OHoHmndy6p/nW0=\n=b0+W\n-----END PGP SIGNATURE-----",
        "payload": "tree 8272f6a26e0f62db0c487df784a1633f8f6deb4c\nparent 228b086b9a3de02b534474027353a80dead2c292\nauthor Sjors Provoost <sjors@sprovoost.nl> 1519663377 +0100\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1519663377 +0100\n\n[refactor][qt] move SendCoinsRecipient to its own file\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/370ebf2a2397f267f9daccba2548861497b94ca3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/370ebf2a2397f267f9daccba2548861497b94ca3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/370ebf2a2397f267f9daccba2548861497b94ca3/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "228b086b9a3de02b534474027353a80dead2c292",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/228b086b9a3de02b534474027353a80dead2c292",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/228b086b9a3de02b534474027353a80dead2c292"
      }
    ],
    "stats": {
      "total": 184,
      "additions": 115,
      "deletions": 69
    },
    "files": [
      {
        "sha": "fe8ced62161c698840a227d0c5594630a1f5aecf",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -148,6 +148,7 @@ QT_MOC_CPP = \\\n   qt/moc_rpcconsole.cpp \\\n   qt/moc_sendcoinsdialog.cpp \\\n   qt/moc_sendcoinsentry.cpp \\\n+  qt/moc_sendcoinsrecipient.cpp \\\n   qt/moc_signverifymessagedialog.cpp \\\n   qt/moc_splashscreen.cpp \\\n   qt/moc_trafficgraphwidget.cpp \\\n@@ -221,6 +222,7 @@ BITCOIN_QT_H = \\\n   qt/rpcconsole.h \\\n   qt/sendcoinsdialog.h \\\n   qt/sendcoinsentry.h \\\n+  qt/sendcoinsrecipient.h \\\n   qt/signverifymessagedialog.h \\\n   qt/splashscreen.h \\\n   qt/trafficgraphwidget.h \\\n@@ -336,6 +338,7 @@ BITCOIN_QT_WALLET_CPP = \\\n   qt/recentrequeststablemodel.cpp \\\n   qt/sendcoinsdialog.cpp \\\n   qt/sendcoinsentry.cpp \\\n+  qt/sendcoinsrecipient.cpp \\\n   qt/signverifymessagedialog.cpp \\\n   qt/transactiondesc.cpp \\\n   qt/transactiondescdialog.cpp \\"
      },
      {
        "sha": "f095615208cbbdff79815781826ae2626f525f13",
        "filename": "src/Makefile.qttest.include",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/Makefile.qttest.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/Makefile.qttest.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qttest.include?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -7,13 +7,13 @@ TESTS += qt/test/test_bitcoin-qt\n \n TEST_QT_MOC_CPP = \\\n   qt/test/moc_compattests.cpp \\\n-  qt/test/moc_rpcnestedtests.cpp \\\n-  qt/test/moc_uritests.cpp\n+  qt/test/moc_rpcnestedtests.cpp\n \n if ENABLE_WALLET\n TEST_QT_MOC_CPP += \\\n   qt/test/moc_paymentservertests.cpp \\\n-  qt/test/moc_wallettests.cpp\n+  qt/test/moc_wallettests.cpp \\\n+  qt/test/moc_uritests.cpp\n endif\n \n TEST_QT_H = \\\n@@ -37,12 +37,12 @@ qt_test_test_bitcoin_qt_SOURCES = \\\n   qt/test/compattests.cpp \\\n   qt/test/rpcnestedtests.cpp \\\n   qt/test/test_main.cpp \\\n-  qt/test/uritests.cpp \\\n   $(TEST_QT_H) \\\n   $(TEST_BITCOIN_CPP) \\\n   $(TEST_BITCOIN_H)\n if ENABLE_WALLET\n qt_test_test_bitcoin_qt_SOURCES += \\\n+  qt/test/uritests.cpp \\\n   qt/test/paymentservertests.cpp \\\n   qt/test/wallettests.cpp \\\n   wallet/test/wallet_test_fixture.cpp"
      },
      {
        "sha": "d79c0ea5e0cf67cf3f68bbd6211752ae8842a8a4",
        "filename": "src/qt/guiutil.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/guiutil.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/guiutil.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.cpp?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -143,6 +143,7 @@ void setupAmountWidget(QLineEdit *widget, QWidget *parent)\n     widget->setAlignment(Qt::AlignRight|Qt::AlignVCenter);\n }\n \n+#ifdef ENABLE_WALLET\n bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out)\n {\n     // return if URI is not valid or is no bitcoin: URI\n@@ -245,6 +246,7 @@ QString formatBitcoinURI(const SendCoinsRecipient &info)\n \n     return ret;\n }\n+#endif // ENABLE_WALLET\n \n bool isDust(const QString& address, const CAmount& amount)\n {"
      },
      {
        "sha": "96587f61e547ed27e97b089af9ef0c01cc9af2ed",
        "filename": "src/qt/guiutil.h",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/guiutil.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/guiutil.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/guiutil.h?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -5,6 +5,10 @@\n #ifndef BITCOIN_QT_GUIUTIL_H\n #define BITCOIN_QT_GUIUTIL_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include <config/bitcoin-config.h>\n+#endif\n+\n #include <amount.h>\n #include <fs.h>\n \n@@ -18,7 +22,10 @@\n #include <QLabel>\n \n class QValidatedLineEdit;\n+\n+#ifdef ENABLE_WALLET\n class SendCoinsRecipient;\n+#endif // ENABLE_WALLET\n \n QT_BEGIN_NAMESPACE\n class QAbstractItemView;\n@@ -44,10 +51,12 @@ namespace GUIUtil\n     void setupAddressWidget(QValidatedLineEdit *widget, QWidget *parent);\n     void setupAmountWidget(QLineEdit *widget, QWidget *parent);\n \n+#ifdef ENABLE_WALLET\n     // Parse \"bitcoin:\" URI into recipient object, return true on successful parsing\n     bool parseBitcoinURI(const QUrl &uri, SendCoinsRecipient *out);\n     bool parseBitcoinURI(QString uri, SendCoinsRecipient *out);\n     QString formatBitcoinURI(const SendCoinsRecipient &info);\n+#endif // ENABLE_WALLET\n \n     // Returns true if given address+amount meets \"dust\" definition\n     bool isDust(const QString& address, const CAmount& amount);"
      },
      {
        "sha": "015e4e37d3be09eddad18906dfdfab89db04a16c",
        "filename": "src/qt/openuridialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/openuridialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/openuridialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/openuridialog.cpp?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -32,6 +32,7 @@ QString OpenURIDialog::getURI()\n \n void OpenURIDialog::accept()\n {\n+#ifdef ENABLE_WALLET\n     SendCoinsRecipient rcp;\n     if(GUIUtil::parseBitcoinURI(getURI(), &rcp))\n     {\n@@ -40,6 +41,7 @@ void OpenURIDialog::accept()\n     } else {\n         ui->uriEdit->setValid(false);\n     }\n+#endif // ENABLE_WALLET\n }\n \n void OpenURIDialog::on_selectFileButton_clicked()"
      },
      {
        "sha": "917de164491309c8011ba5e452de53ac45eaaa4a",
        "filename": "src/qt/sendcoinsrecipient.cpp",
        "status": "added",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/sendcoinsrecipient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/sendcoinsrecipient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsrecipient.cpp?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -0,0 +1,22 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <qt/sendcoinsrecipient.h>\n+\n+SendCoinsRecipient::SendCoinsRecipient() :\n+    amount(0),\n+    fSubtractFeeFromAmount(false),\n+    nVersion(SendCoinsRecipient::CURRENT_VERSION)\n+{\n+}\n+\n+SendCoinsRecipient::SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n+    address(addr),\n+    label(_label),\n+    amount(_amount),\n+    message(_message),\n+    fSubtractFeeFromAmount(false),\n+    nVersion(SendCoinsRecipient::CURRENT_VERSION)\n+{\n+}"
      },
      {
        "sha": "d3964c6f4d629cb386ae34aa10a876eba2f5d8b8",
        "filename": "src/qt/sendcoinsrecipient.h",
        "status": "added",
        "additions": 68,
        "deletions": 0,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/sendcoinsrecipient.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/sendcoinsrecipient.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsrecipient.h?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -0,0 +1,68 @@\n+// Copyright (c) 2011-2018 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_QT_SENDCOINSRECIPIENT_H\n+#define BITCOIN_QT_SENDCOINSRECIPIENT_H\n+\n+#include <qt/paymentrequestplus.h>\n+\n+class SendCoinsRecipient\n+{\n+public:\n+    explicit SendCoinsRecipient();\n+    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message);\n+\n+    // If from an unauthenticated payment request, this is used for storing\n+    // the addresses, e.g. address-A<br />address-B<br />address-C.\n+    // Info: As we don't need to process addresses in here when using\n+    // payment requests, we can abuse it for displaying an address list.\n+    // Todo: This is a hack, should be replaced with a cleaner solution!\n+    QString address;\n+    QString label;\n+    CAmount amount;\n+    // If from a payment request, this is used for storing the memo\n+    QString message;\n+\n+    // If from a payment request, paymentRequest.IsInitialized() will be true\n+    PaymentRequestPlus paymentRequest;\n+    // Empty if no authentication or invalid signature/cert/etc.\n+    QString authenticatedMerchant;\n+\n+    bool fSubtractFeeFromAmount; // memory only\n+\n+    static const int CURRENT_VERSION = 1;\n+    int nVersion;\n+\n+    ADD_SERIALIZE_METHODS;\n+\n+    template <typename Stream, typename Operation>\n+    inline void SerializationOp(Stream& s, Operation ser_action) {\n+        std::string sAddress = address.toStdString();\n+        std::string sLabel = label.toStdString();\n+        std::string sMessage = message.toStdString();\n+        std::string sPaymentRequest;\n+        if (!ser_action.ForRead() && paymentRequest.IsInitialized())\n+            paymentRequest.SerializeToString(&sPaymentRequest);\n+        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n+\n+        READWRITE(this->nVersion);\n+        READWRITE(sAddress);\n+        READWRITE(sLabel);\n+        READWRITE(amount);\n+        READWRITE(sMessage);\n+        READWRITE(sPaymentRequest);\n+        READWRITE(sAuthenticatedMerchant);\n+\n+        if (ser_action.ForRead())\n+        {\n+            address = QString::fromStdString(sAddress);\n+            label = QString::fromStdString(sLabel);\n+            message = QString::fromStdString(sMessage);\n+            if (!sPaymentRequest.empty())\n+                paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n+            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n+        }\n+    }\n+};\n+#endif // BITCOIN_QT_SENDCOINSRECIPIENT_H"
      },
      {
        "sha": "991bb79c4709d083863c9e19aa3544b91a470cc8",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -9,20 +9,19 @@\n #include <chainparams.h>\n #include <qt/test/rpcnestedtests.h>\n #include <util.h>\n-#include <qt/test/uritests.h>\n #include <qt/test/compattests.h>\n \n #ifdef ENABLE_WALLET\n #include <qt/test/paymentservertests.h>\n #include <qt/test/wallettests.h>\n+#include <qt/test/uritests.h>\n+#include <openssl/ssl.h>\n #endif\n \n #include <QApplication>\n #include <QObject>\n #include <QTest>\n \n-#include <openssl/ssl.h>\n-\n #if defined(QT_STATICPLUGIN)\n #include <QtPlugin>\n #if QT_VERSION < 0x050000\n@@ -74,13 +73,14 @@ int main(int argc, char *argv[])\n     QApplication app(argc, argv);\n     app.setApplicationName(\"Bitcoin-Qt-test\");\n \n+#ifdef ENABLE_WALLET\n     SSL_library_init();\n \n     URITests test1;\n     if (QTest::qExec(&test1) != 0) {\n         fInvalid = true;\n     }\n-#ifdef ENABLE_WALLET\n+\n     PaymentServerTests test2;\n     if (QTest::qExec(&test2) != 0) {\n         fInvalid = true;"
      },
      {
        "sha": "7734ab76be44457f0adb74522080b8f02a2cf086",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 1,
        "deletions": 61,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/370ebf2a2397f267f9daccba2548861497b94ca3/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=370ebf2a2397f267f9daccba2548861497b94ca3",
        "patch": "@@ -5,7 +5,7 @@\n #ifndef BITCOIN_QT_WALLETMODEL_H\n #define BITCOIN_QT_WALLETMODEL_H\n \n-#include <qt/paymentrequestplus.h>\n+#include <qt/sendcoinsrecipient.h>\n #include <qt/walletmodeltransaction.h>\n \n #include <support/allocators/secure.h>\n@@ -36,66 +36,6 @@ QT_BEGIN_NAMESPACE\n class QTimer;\n QT_END_NAMESPACE\n \n-class SendCoinsRecipient\n-{\n-public:\n-    explicit SendCoinsRecipient() : amount(0), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) { }\n-    explicit SendCoinsRecipient(const QString &addr, const QString &_label, const CAmount& _amount, const QString &_message):\n-        address(addr), label(_label), amount(_amount), message(_message), fSubtractFeeFromAmount(false), nVersion(SendCoinsRecipient::CURRENT_VERSION) {}\n-\n-    // If from an unauthenticated payment request, this is used for storing\n-    // the addresses, e.g. address-A<br />address-B<br />address-C.\n-    // Info: As we don't need to process addresses in here when using\n-    // payment requests, we can abuse it for displaying an address list.\n-    // Todo: This is a hack, should be replaced with a cleaner solution!\n-    QString address;\n-    QString label;\n-    CAmount amount;\n-    // If from a payment request, this is used for storing the memo\n-    QString message;\n-\n-    // If from a payment request, paymentRequest.IsInitialized() will be true\n-    PaymentRequestPlus paymentRequest;\n-    // Empty if no authentication or invalid signature/cert/etc.\n-    QString authenticatedMerchant;\n-\n-    bool fSubtractFeeFromAmount; // memory only\n-\n-    static const int CURRENT_VERSION = 1;\n-    int nVersion;\n-\n-    ADD_SERIALIZE_METHODS;\n-\n-    template <typename Stream, typename Operation>\n-    inline void SerializationOp(Stream& s, Operation ser_action) {\n-        std::string sAddress = address.toStdString();\n-        std::string sLabel = label.toStdString();\n-        std::string sMessage = message.toStdString();\n-        std::string sPaymentRequest;\n-        if (!ser_action.ForRead() && paymentRequest.IsInitialized())\n-            paymentRequest.SerializeToString(&sPaymentRequest);\n-        std::string sAuthenticatedMerchant = authenticatedMerchant.toStdString();\n-\n-        READWRITE(this->nVersion);\n-        READWRITE(sAddress);\n-        READWRITE(sLabel);\n-        READWRITE(amount);\n-        READWRITE(sMessage);\n-        READWRITE(sPaymentRequest);\n-        READWRITE(sAuthenticatedMerchant);\n-\n-        if (ser_action.ForRead())\n-        {\n-            address = QString::fromStdString(sAddress);\n-            label = QString::fromStdString(sLabel);\n-            message = QString::fromStdString(sMessage);\n-            if (!sPaymentRequest.empty())\n-                paymentRequest.parse(QByteArray::fromRawData(sPaymentRequest.data(), sPaymentRequest.size()));\n-            authenticatedMerchant = QString::fromStdString(sAuthenticatedMerchant);\n-        }\n-    }\n-};\n-\n /** Interface to Bitcoin wallet from Qt view code. */\n class WalletModel : public QObject\n {"
      }
    ]
  }
]