[
  {
    "sha": "28ee7e8b8c658bab4a5e13a13254950e226453a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOGVlN2U4YjhjNjU4YmFiNGE1ZTEzYTEzMjU0OTUwZTIyNjQ1M2E3",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-19T14:33:55Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2015-01-19T14:37:48Z"
      },
      "message": "Get rid of DetectShutdownThread\n\nThe main thread spends time waiting for the DetectShutdownThread.\nSo why not just run this waiting loop function in the main thread?\n\nOne thread-stack less saves 4MB of virtual memory on 32-bit, and 8MB on\n64-bit.",
      "tree": {
        "sha": "2f2af0781de370ce41c05455d2a987e6038d3d76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2f2af0781de370ce41c05455d2a987e6038d3d76"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/28ee7e8b8c658bab4a5e13a13254950e226453a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28ee7e8b8c658bab4a5e13a13254950e226453a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/28ee7e8b8c658bab4a5e13a13254950e226453a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/28ee7e8b8c658bab4a5e13a13254950e226453a7/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e1aecae33a672b00fac31b6c3cc4c2f6a833ebfb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e1aecae33a672b00fac31b6c3cc4c2f6a833ebfb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e1aecae33a672b00fac31b6c3cc4c2f6a833ebfb"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 3,
      "deletions": 13
    },
    "files": [
      {
        "sha": "a0a96c2dfa61750d9c8764852a11591940b10953",
        "filename": "src/bitcoind.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 13,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/28ee7e8b8c658bab4a5e13a13254950e226453a7/src/bitcoind.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/28ee7e8b8c658bab4a5e13a13254950e226453a7/src/bitcoind.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoind.cpp?ref=28ee7e8b8c658bab4a5e13a13254950e226453a7",
        "patch": "@@ -33,7 +33,7 @@\n \n static bool fDaemon;\n \n-void DetectShutdownThread(boost::thread_group* threadGroup)\n+void WaitForShutdown(boost::thread_group* threadGroup)\n {\n     bool fShutdown = ShutdownRequested();\n     // Tell the main threads to shutdown.\n@@ -56,7 +56,6 @@ void DetectShutdownThread(boost::thread_group* threadGroup)\n bool AppInit(int argc, char* argv[])\n {\n     boost::thread_group threadGroup;\n-    boost::thread* detectShutdownThread = NULL;\n \n     bool fRet = false;\n \n@@ -144,7 +143,6 @@ bool AppInit(int argc, char* argv[])\n #endif\n         SoftSetBoolArg(\"-server\", true);\n \n-        detectShutdownThread = new boost::thread(boost::bind(&DetectShutdownThread, &threadGroup));\n         fRet = AppInit2(threadGroup);\n     }\n     catch (const std::exception& e) {\n@@ -155,20 +153,12 @@ bool AppInit(int argc, char* argv[])\n \n     if (!fRet)\n     {\n-        if (detectShutdownThread)\n-            detectShutdownThread->interrupt();\n-\n         threadGroup.interrupt_all();\n         // threadGroup.join_all(); was left out intentionally here, because we didn't re-test all of\n         // the startup-failure cases to make sure they don't result in a hang due to some\n         // thread-blocking-waiting-for-another-thread-during-startup case\n-    }\n-\n-    if (detectShutdownThread)\n-    {\n-        detectShutdownThread->join();\n-        delete detectShutdownThread;\n-        detectShutdownThread = NULL;\n+    } else {\n+        WaitForShutdown(&threadGroup);\n     }\n     Shutdown();\n "
      }
    ]
  }
]