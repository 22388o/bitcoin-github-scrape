practicalswift,2017-12-12T20:37:07Z,"Strong concept ACK!\n\nPros:\n* Less work required to maintain the Python scripts\n* Avoids potential bugs due to subtle Python 2/3 incompatibilities\n\nCons:\n* ?",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-351186465,351186465,
MarcoFalke,2017-12-12T21:25:00Z,"ACK for devtools. Not sure about unit tests and user facing scripts such as rpcauth.py, see also discussion in #11433",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-351199374,351199374,
jnewbery,2017-12-12T22:10:05Z,"Marco, your comment from #11433:\n\n> I am not against deprecating py2, but we should do it properly such that ./configure fails early and warns about it. Also it should be mentioned in the release notes.\n\nWould you support this PR for all Python files including user-facing scripts and tests if it met those conditions?",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-351211557,351211557,
droark,2017-12-12T23:10:23Z,"Concept ACK. I'm not aware of any major projects still on Py2 and intending to stay there. AFAIK, just about everything that's still Py2 is due to legacy and/or manpower issues. Here's how I'd like to see things handled.\n\n- Make the decision to go Py3-only.\n- Add something in release notes for the next major version (0.16 or 0.17, I assume) indicating that Py2 will no longer be usable in the",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-351225803,351225803,
MarcoFalke,2017-12-12T23:27:11Z,"@jnewbery I'd be -0 on that. The reason that the functional tests run at 3.4+ only, is because it would be nearly impossible to have them compatible with both 2.7 and 3.4. However, the python code used for the unit tests and the few scripts meant for users is rather condensed and hopefully not much refactored in the future. So by not touching them, they should keep their compatibility.\nNote that",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-351229317,351229317,
laanwj,2017-12-19T08:02:48Z,"ACK on the idea to go Py3-only long-term. There's a burden on supporting multiple versions of python and that burden will only become larger as Python 3 progresses, by locking us out of new features and better ways to do things.\n\n(this is a similar argument as that for going to C++11)\n\nThe only problematic case are scripts that depend on libraries that only support Python2. These are rare,",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352668098,352668098,
droark,2017-12-19T08:14:15Z,"@laanwj - I haven't tried the scripts yet but I think macdeploy's libraries all support Py3. It looks like there are three external packages: [biplist](https://bitbucket.org/wooster/biplist/commits/), [ds_store](https://github.com/al45tair/ds_store/commits/master), and [mac_alias](https://github.com/al45tair/mac_alias/commits/master). The commit lists seem to indicate that there's a reasonable cha",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352670438,352670438,
fanquake,2017-12-19T08:41:50Z,"We are still patching [biplist and mac_alias](https://github.com/bitcoin/bitcoin/tree/master/depends/patches), so you could definitely send those patches upstream.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352676208,352676208,
laanwj,2017-12-19T10:07:21Z,"OTOH the situation of having some things work in py2 but not others is confusing. It doesn't really benefit anyone, and there's also an overhead explaining it to contributors. That's one argument for doing this at once.\n",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352697504,352697504,
droark,2017-12-19T21:05:48Z,"@fanquake - Yep, mac_alias doesn't have those fixes. I'll submit upstream. I'll also try with biplist but I don't know how that'll go, since it's not a Py3 fix.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352886128,352886128,
droark,2017-12-19T22:49:23Z,Have submitted PRs for [biplist](https://bitbucket.org/wooster/biplist/pull-requests/9) (not Py3) and [mac_alias](https://github.com/al45tair/mac_alias/pull/3). It's a start!,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-352910751,352910751,
laanwj,2018-02-23T16:37:43Z,"Needs rebase, I think we should do this for 0.17.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-368063002,368063002,
droark,2018-02-23T17:19:47Z,"Just for cross-referencing, the mac_alias patch made it into the mainline and was removed from Core [here](https://github.com/bitcoin/bitcoin/pull/12417). I pinged the biplist maintainer. He said he'd been busy and would take a look at my PR eventually.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-368076761,368076761,
practicalswift,2018-02-23T22:12:15Z,@laanwj Excellent! Let's get rid of Python 2!,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-368153407,368153407,
droark,2018-02-26T03:54:53Z,"Hi. Andrew (the biplist maintainer) reviewed the Core patch and rejected it. Here's his rationale. Any thoughts? I admit that I'm not super familiar with the biplist codebase, so it would take a little time for me to come up with a coherent response.\n\n(Technically, this isn't a Py3 issue, but since I brought it up here earlier....)\n\n> I looked into this, and it looks like v1.0.2 added sort",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-368383185,368383185,
jnewbery,2018-02-27T15:36:34Z,"Rebased and addressed @ryanofsky's review comments.\n\n> Since this marked WIP, it might be good to update the PR description to say what other changes are underway or planned.\n\nThis is marked as WIP since I was looking for initial feedback and haven't tested or carefully reviewed my suggested changes. Since there seems to be some enthusiasm for removing python2 support, I'll clean this PR u",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-368919374,368919374,
jtimon,2018-02-27T21:25:29Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-369031460,369031460,
eklitzke,2018-03-11T09:03:26Z,"Concept ACK.\n\nwrt the comments from @droark, it's easy to wrap iterator types using `sorted()` or types like `collections.OrderedDict()`. If reproducibility is an issue then we should handle that, but that's possible to achieve in Py3 (and if Py2 code relies on it, that code is broken anyway).",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-372100074,372100074,
ryanofsky,2018-03-12T22:22:20Z,"utACK 4f3238250bc01eedee7c60b4d6681d3e21c6783c. Changes since last review were porting `check-doc.py`, fixing newlines for prints with trailing commas, updating copyright years.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-372482427,372482427,
practicalswift,2018-03-12T22:27:38Z,utACK 4f3238250bc01eedee7c60b4d6681d3e21c6783c,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-372483661,372483661,
MarcoFalke,2018-03-13T16:29:52Z,"* Changed title-tag.\n* Needs feedback addressed.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-372729283,372729283,
jnewbery,2018-03-15T23:23:32Z,Thanks all for review. Will address feedback next week.,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-373553947,373553947,
jnewbery,2018-03-26T20:52:00Z,"I've gone through and reviewed/tested my changes, and I think they're good. Ready for wider review.\n\nThe only python file that is not now explicitly Python3 is `gen_base58_test_vectors.py`. It would require some substantial modifications to work in Python3 (since it's using string/bytes manipulation which changed completely between Python2 and Python3). That file is not modified or used very m",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376307594,376307594,
laanwj,2018-03-27T19:17:12Z,"> That file is not modified or used very much, so I've left it as Python2, adding an explicit note to the doc string saying that it's Python2 only.\n\nI might port it over some time - agree it's not relevant to this PR (as it's never called by the test framework, build system, nor any other script.)",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376642749,376642749,
MarcoFalke,2018-03-28T00:53:49Z,utACK bc6fdf2d15648a5fc68df8021d9186737de6fe7b,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376723387,376723387,
eklitzke,2018-03-28T02:07:49Z,"ACK bc6fdf2d15648a5fc68df8021d9186737de6fe7b\n\n@jnewbery @MarcoFalke cherry-pick https://github.com/eklitzke/bitcoin/commit/563b4f5e398ca8824d42fe271d1485eb3934ed41 if you would like to make the base58 code work on python3",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376736032,376736032,
jnewbery,2018-03-28T13:21:10Z,Thanks @eklitzke - I've cherry-picked your commit (updating the hashbang and docstring).,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376883969,376883969,
practicalswift,2018-03-28T14:00:32Z,utACK 18740586baee546064cba9286e2d681a849ae443,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376897243,376897243,
ken2812221,2018-03-28T17:24:27Z,"gitian build fails on security-check.py\n<pre>\n+ make -j4 -C src check-security\nmake: Entering directory `/home/ubuntu/build/bitcoin/distsrc-i686-w64-mingw32/src'\nChecking binary security...\nTraceback (most recent call last):\n  File ""../contrib/devtools/security-check.py"", line 201, in <module>\n    if not func(filename):\n  File ""../contrib/devtools/security-check.py"", line 144, in c",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376967883,376967883,
jnewbery,2018-03-28T17:36:14Z,"huh. That's confusing. All the other calls to `subprocess.Popen` expect stdout to be bytes, but line 124 expects stdout to be a string. Will open a fixup PR.",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376971663,376971663,
jnewbery,2018-03-28T17:38:34Z,@ken2812221 thanks for reporting this. Can you try again with https://github.com/jnewbery/bitcoin/tree/python3_fixup and let me know if it resolves your issue?,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376972389,376972389,
ken2812221,2018-03-28T18:17:17Z,"@jnewbery  After apply your commit\n<pre>\n+ make -j4 -C src check-security\nmake: Entering directory `/home/ubuntu/build/bitcoin/distsrc-i686-w64-mingw32/src'\nChecking binary security...\nTraceback (most recent call last):\n  File ""../contrib/devtools/security-check.py"", line 201, in <module>\n    if not func(filename):\n  File ""../contrib/devtools/security-check.py"", line 144, in check_",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376985256,376985256,
ken2812221,2018-03-28T18:21:35Z,"It also fails on building linux\nhttps://gist.github.com/ken2812221/5ef0feec721f48867bbd23b92593e508",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376986587,376986587,
jnewbery,2018-03-28T18:35:55Z,Thanks @ken2812221 . I've pushed a new commit. Can you retry?,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-376991241,376991241,
ken2812221,2018-03-28T19:07:54Z,"<pre>\n+ make -j4 -C src check-security\nmake: Entering directory `/home/ubuntu/build/bitcoin/distsrc-i686-w64-mingw32/src'\nChecking binary security...\nTraceback (most recent call last):\n  File ""../contrib/devtools/security-check.py"", line 192, in <module>\n    etype = identify_executable(filename)\n  File ""../contrib/devtools/security-check.py"", line 182, in identify_executable\n    if",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377001287,377001287,
jnewbery,2018-03-28T19:51:01Z,New branch pushed. Can you try again?,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377013810,377013810,
ken2812221,2018-03-28T20:26:47Z,"Building windows is OK, but buiding linux still fail at check-symbols as I post on gist",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377024627,377024627,
jnewbery,2018-03-28T20:59:17Z,Please retry check-symbols.py with latest commit.,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377034521,377034521,
ken2812221,2018-03-29T02:21:44Z,"This commit really works. Thanks.\n\nJohn Newbery <notifications@github.com> 於 2018年3月29日 週四 上午5:00 寫道：\n\n> Please retry check-symbols.py with latest commit.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377034521>,\n> or mute the thread\n> <https://github.com/notifica",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377099391,377099391,
jnewbery,2018-03-29T14:18:11Z,"@ken2812221 , thanks so much for your patience and help here. I've opened a PR to fix symbol-check and security-check: #12829",https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377249923,377249923,
practicalswift,2018-03-29T14:31:30Z,Goodbye Python 2. Welcome Python 3!,https://github.com/bitcoin/bitcoin/pull/11881#issuecomment-377254044,377254044,
ryanofsky,2017-12-20T16:03:47Z,"Trailing comma in python2 outputs space instead of newline. I think equivalent in python3 would be \n\n```python\nprint(""optimizing {}..."".format(file), end=' ')\n```",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r158063982,158063982,contrib/devtools/optimize-pngs.py
ryanofsky,2017-12-20T16:09:42Z,"equivalent would be `print(""done"")`",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r158065573,158065573,contrib/devtools/optimize-pngs.py
ryanofsky,2017-12-20T16:13:52Z,"This was just broken before, I guess? I don't see how it could have worked.",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r158066714,158066714,contrib/macdeploy/macdeployqtplus
jnewbery,2018-02-27T15:33:03Z,indeed,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r170961957,170961957,contrib/macdeploy/macdeployqtplus
jnewbery,2018-02-27T15:33:15Z,thanks. Fixed,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r170962041,170962041,contrib/devtools/optimize-pngs.py
jnewbery,2018-02-27T15:33:23Z,thanks. Fixed,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r170962086,170962086,contrib/devtools/optimize-pngs.py
MarcoFalke,2018-03-13T16:28:31Z,"You changed this to `universal_newlines`, so the type should be `str`.\n\nThus, the `decode` a couple of lines down will fail.",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r174197743,174197743,contrib/macdeploy/macdeployqtplus
jnewbery,2018-03-19T12:55:09Z,Thanks. Fixed,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r175423711,175423711,contrib/macdeploy/macdeployqtplus
MarcoFalke,2018-03-19T14:00:01Z,Was this fixed?,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r175443410,175443410,contrib/devtools/optimize-pngs.py
MarcoFalke,2018-03-19T14:01:13Z,Same here,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r175443790,175443790,contrib/devtools/optimize-pngs.py
MarcoFalke,2018-03-23T21:12:24Z,"One line above this:\n\nYou are switching this file to python3, so `check_output` will return byte-strings instead of text strings. Thus, you can not apply a regex on them.",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r176864644,176864644,contrib/devtools/check-doc.py
ryanofsky,2018-03-23T21:44:20Z,Should be fixable if you switch the patterns to bytestrings `b'pattern'`,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r176870903,176870903,contrib/devtools/check-doc.py
MarcoFalke,2018-03-26T21:11:24Z,NACK based on my earlier feedback in this pull request.,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177236133,177236133,doc/release-notes.md
jnewbery,2018-03-27T19:44:19Z,"I disagree. We should remove support for a legacy language which will soon not be maintained, and which may hide subtle bugs due to incompatibilities with the new language.\n\nWhat do we gain by claiming to support python2?",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177549348,177549348,doc/release-notes.md
MarcoFalke,2018-03-27T23:10:44Z,"I am not saying we should claim to support python2, but we should not claim that python2 support has been discontinued for ""all test files"" (specifically *util tests*, since the functional tests are already on python3). I think it is reasonable to support python2 util tests until we need to switch off of it because it would otherwise be a burden to continue to support python2. I don't see why we s",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177599198,177599198,doc/release-notes.md
droark,2018-03-28T00:08:20Z,"@MarcoFalke - Honestly, supporting on a ""best effort basis"" seems like a nightmare waiting to happen. Person A introduces a commit that breaks Py2 compatibility, Person B complains that unit tests are failing, Persons C-? have to deal with the whole thing. I think having 2 & 3 supported is good for transition purposes, and making sure that nothing is broken during a switch. Beyond that, I'm with @",https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177607980,177607980,doc/release-notes.md
MarcoFalke,2018-03-28T00:53:34Z,I think it is not worth arguing about that.,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177613769,177613769,doc/release-notes.md
MarcoFalke,2018-03-28T20:10:58Z,Post-merge nit: Should probably use `check_call` instead.,https://github.com/bitcoin/bitcoin/pull/11881#discussion_r177874942,177874942,contrib/devtools/optimize-pngs.py
