[
  {
    "sha": "4d7d387734f5643bf95af8ffc681534b755c558b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZDdkMzg3NzM0ZjU2NDNiZjk1YWY4ZmZjNjgxNTM0Yjc1NWM1NThi",
    "commit": {
      "author": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-02T19:31:32Z"
      },
      "committer": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-02T19:31:32Z"
      },
      "message": "Fixing C4101 warning",
      "tree": {
        "sha": "c2a1cc9bbebd7cc1bc25b18c8049801aaf1239e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2a1cc9bbebd7cc1bc25b18c8049801aaf1239e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4d7d387734f5643bf95af8ffc681534b755c558b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d7d387734f5643bf95af8ffc681534b755c558b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4d7d387734f5643bf95af8ffc681534b755c558b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4d7d387734f5643bf95af8ffc681534b755c558b/comments",
    "author": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b8d92236f61699846f67d8ce6cb55458a46f9de1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b8d92236f61699846f67d8ce6cb55458a46f9de1"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b5f55e82a38e7dc4c877ef62795013b313027403",
        "filename": "src/core_read.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/core_read.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/core_read.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/core_read.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -97,7 +97,7 @@ bool DecodeHexTx(CTransaction& tx, const std::string& strHexTx)\n     try {\n         ssData >> tx;\n     }\n-    catch (std::exception &e) {\n+    catch (...) {\n         return false;\n     }\n "
      },
      {
        "sha": "874fcd339878a174d422db21fb4230d5380ffceb",
        "filename": "src/db.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/db.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/db.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.h?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -129,7 +129,7 @@ class CDB\n             CDataStream ssValue((char*)datValue.get_data(), (char*)datValue.get_data() + datValue.get_size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n         }\n-        catch (std::exception &e) {\n+        catch (...) {\n             return false;\n         }\n "
      },
      {
        "sha": "3eeee616b3625f6d8a8ed149d0a41e03f77fffaf",
        "filename": "src/leveldbwrapper.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/leveldbwrapper.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/leveldbwrapper.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.h?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -99,7 +99,7 @@ class CLevelDBWrapper\n         try {\n             CDataStream ssValue(strValue.data(), strValue.data() + strValue.size(), SER_DISK, CLIENT_VERSION);\n             ssValue >> value;\n-        } catch(std::exception &e) {\n+        } catch(...) {\n             return false;\n         }\n         return true;"
      },
      {
        "sha": "d1d30d2f2aa5efc5b420ccc15bfd700de875a3cb",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -3134,7 +3134,7 @@ bool LoadExternalBlockFile(FILE* fileIn, CDiskBlockPos *dbp)\n                 blkdat >> nSize;\n                 if (nSize < 80 || nSize > MAX_BLOCK_SIZE)\n                     continue;\n-            } catch (std::exception &e) {\n+            } catch (...) {\n                 // no valid block header found; don't complain\n                 break;\n             }"
      },
      {
        "sha": "ece8f214b2ea61c663a937259dcc76c08ac7d456",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -689,7 +689,7 @@ int CNetMessage::readHeader(const char *pch, unsigned int nBytes)\n     try {\n         hdrbuf >> hdr;\n     }\n-    catch (std::exception &e) {\n+    catch (...) {\n         return -1;\n     }\n "
      },
      {
        "sha": "dde0549ebd29258e18935e542d35cb213562bbd8",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -553,7 +553,7 @@ Value submitblock(const Array& params, bool fHelp)\n     try {\n         ssBlock >> pblock;\n     }\n-    catch (std::exception &e) {\n+    catch (...) {\n         throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"Block decode failed\");\n     }\n "
      },
      {
        "sha": "cdea30b0d8b88415b922e9aca019b0474b41ff29",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -540,7 +540,7 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             ssData >> tx;\n             txVariants.push_back(tx);\n         }\n-        catch (std::exception &e) {\n+        catch (...) {\n             throw JSONRPCError(RPC_DESERIALIZATION_ERROR, \"TX decode failed\");\n         }\n     }"
      },
      {
        "sha": "00b3617544ce90af78688c4c8d22f2007729227f",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -628,7 +628,7 @@ void StartRPCThreads()\n             try {\n                 vEndpoints.push_back(ParseEndpoint(addr, defaultPort));\n             }\n-            catch(boost::system::system_error &e)\n+            catch(...)\n             {\n                 uiInterface.ThreadSafeMessageBox(\n                     strprintf(_(\"Could not parse -rpcbind value %s as network address\"), addr),"
      },
      {
        "sha": "0b0acfd9d8835ac99b130cab638ef87c8ae4cefd",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4d7d387734f5643bf95af8ffc681534b755c558b/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4d7d387734f5643bf95af8ffc681534b755c558b/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=4d7d387734f5643bf95af8ffc681534b755c558b",
        "patch": "@@ -572,7 +572,7 @@ CTxMemPool::WriteFeeEstimates(CAutoFile& fileout) const\n         fileout << CLIENT_VERSION; // version that wrote the file\n         minerPolicyEstimator->Write(fileout);\n     }\n-    catch (std::exception &e) {\n+    catch (...) {\n         LogPrintf(\"CTxMemPool::WriteFeeEstimates() : unable to write policy estimator data (non-fatal)\");\n         return false;\n     }\n@@ -591,7 +591,7 @@ CTxMemPool::ReadFeeEstimates(CAutoFile& filein)\n         LOCK(cs);\n         minerPolicyEstimator->Read(filein, minRelayFee);\n     }\n-    catch (std::exception &e) {\n+    catch (...) {\n         LogPrintf(\"CTxMemPool::ReadFeeEstimates() : unable to read policy estimator data (non-fatal)\");\n         return false;\n     }"
      }
    ]
  }
]