[
  {
    "sha": "b4adb58785bbc4b461cab126db7d6729dafb594a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNGFkYjU4Nzg1YmJjNGI0NjFjYWIxMjZkYjdkNjcyOWRhZmI1OTRh",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-22T10:46:11Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-28T23:52:47Z"
      },
      "message": "Show how long AcceptBlock() takes to process.",
      "tree": {
        "sha": "49ced511a9d0d807cdc5ddffb644d575871ac538",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49ced511a9d0d807cdc5ddffb644d575871ac538"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4adb58785bbc4b461cab126db7d6729dafb594a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4adb58785bbc4b461cab126db7d6729dafb594a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4adb58785bbc4b461cab126db7d6729dafb594a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4adb58785bbc4b461cab126db7d6729dafb594a/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6b8a17119e30ddc5dd5b92ed77da49740c495ed6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6b8a17119e30ddc5dd5b92ed77da49740c495ed6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6b8a17119e30ddc5dd5b92ed77da49740c495ed6"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2ac97384aa2843693a5cdcbf0f49cbed865fb355",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4adb58785bbc4b461cab126db7d6729dafb594a/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4adb58785bbc4b461cab126db7d6729dafb594a/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=b4adb58785bbc4b461cab126db7d6729dafb594a",
        "patch": "@@ -1780,6 +1780,7 @@ bool CBlock::AcceptBlock()\n \n bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n {\n+    int64 nStart = GetTimeMillis();\n     // Check for duplicate\n     uint256 hash = pblock->GetHash();\n     if (mapBlockIndex.count(hash))\n@@ -1833,6 +1834,8 @@ bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n     if (!pblock->AcceptBlock())\n         return error(\"ProcessBlock() : AcceptBlock FAILED\");\n \n+    printf(\"Block ACCEPTED %15\"PRI64d\"ms\\n\", GetTimeMillis() - nStart);\n+\n     // Recursively process any orphan blocks that depended on this one\n     vector<uint256> vWorkQueue;\n     vWorkQueue.push_back(hash);\n@@ -1844,15 +1847,21 @@ bool ProcessBlock(CNode* pfrom, CBlock* pblock)\n              ++mi)\n         {\n             CBlock* pblockOrphan = (*mi).second;\n-            if (pblockOrphan->AcceptBlock())\n-                vWorkQueue.push_back(pblockOrphan->GetHash());\n-            mapOrphanBlocks.erase(pblockOrphan->GetHash());\n+            uint256 orphanhash = pblockOrphan->GetHash();\n+            nStart = GetTimeMillis();\n+            if (pblockOrphan->AcceptBlock()) {\n+                vWorkQueue.push_back(orphanhash);\n+                printf(\"Orphan block %s ACCEPTED %15\"PRI64d\"ms\\n\", orphanhash.ToString().substr(0,20).c_str(),\n+                  GetTimeMillis() - nStart);\n+            } else\n+                printf(\"Orphan block %s REJECTED %15\"PRI64d\"ms\\n\", orphanhash.ToString().substr(0,20).c_str(),\n+                  GetTimeMillis() - nStart);\n+            mapOrphanBlocks.erase(orphanhash);\n             delete pblockOrphan;\n         }\n         mapOrphanBlocksByPrev.erase(hashPrev);\n     }\n \n-    printf(\"ProcessBlock: ACCEPTED\\n\");\n     return true;\n }\n "
      }
    ]
  }
]