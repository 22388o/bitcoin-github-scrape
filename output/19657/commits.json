[
  {
    "sha": "fa4dfd215f62e88d668311701735c332c264fa2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTRkZmQyMTVmNjJlODhkNjY4MzExNzAxNzM1YzMzMmMyNjRmYTJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-04T10:55:35Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-08-04T14:13:33Z"
      },
      "message": "test: Wait until is_connected in add_p2p_connection",
      "tree": {
        "sha": "424588fce802c26e7aa4554c00081f8a2408954c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/424588fce802c26e7aa4554c00081f8a2408954c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa4dfd215f62e88d668311701735c332c264fa2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUj+Tgv6Ax+BGsXW+2HQWmME06Ku/cw7/ugpByJp/ATafcg2d+Lt2TzTZi8FZ6e/\nhc1YAfRk4KAfLcENY21ySBUgzA2U3L9GiNCHZ4K2lfDS1Cdk8FQ6rgK2bfaGOnsg\n1m9HuK0TqSndrXQyjDK7kL0hHdvrlurmxwx7XWcrXjQDkzrA3DtllGmPPJx3NfsO\nTNozB92fKkyQurw4fkuMcP3NI34DDGikbUXs57ObfIu02MsP/2fh5XTZP9hMxSkU\nymPBPZhTcVSAOT23eN5sOqxN05gH91e3qTCRWkBd4m7l28ZyyO/ZVr8uHq67qN72\nFmAEFNTCFR9MRdb+fwX+8zh6Da3+PfPOyLwcXPkcWUrPbnB9TijwsoD38u05yNF3\n3uaYFnbYtpE8UuYG+f+FQ/cI6q4TOc8avONPWjnVMxnkOFAe5+MSLAyfeHq2UvEc\nhKr16Dy2n4RSOTKUOyNXfFAKfLeMz8aaXPmS78NeXgd0/IIW5ZnJJKutfTb8Ex3k\ny1EyZ9EB\n=NcCV\n-----END PGP SIGNATURE-----",
        "payload": "tree 424588fce802c26e7aa4554c00081f8a2408954c\nparent 3c93623be20d534bb653410db03d38152135e2e6\nauthor MarcoFalke <falke.marco@gmail.com> 1596538535 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1596550413 +0200\n\ntest: Wait until is_connected in add_p2p_connection\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4dfd215f62e88d668311701735c332c264fa2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa4dfd215f62e88d668311701735c332c264fa2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa4dfd215f62e88d668311701735c332c264fa2a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3c93623be20d534bb653410db03d38152135e2e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c93623be20d534bb653410db03d38152135e2e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3c93623be20d534bb653410db03d38152135e2e6"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 11,
      "deletions": 14
    },
    "files": [
      {
        "sha": "ce3856fc95520a8d0d1e2a41a96025520628ad6d",
        "filename": "test/functional/p2p_filter.py",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/p2p_filter.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/p2p_filter.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_filter.py?ref=fa4dfd215f62e88d668311701735c332c264fa2a",
        "patch": "@@ -218,11 +218,6 @@ def run_test(self):\n         # Add peer but do not send version yet\n         filter_peer_without_nrelay = self.nodes[0].add_p2p_connection(P2PBloomFilter(), send_version=False, wait_for_verack=False)\n         # Send version with fRelay=False\n-        filter_peer_without_nrelay.wait_until(\n-            lambda: filter_peer_without_nrelay.is_connected,\n-            timeout=10,\n-            check_connected=False,\n-        )\n         version_without_fRelay = msg_version()\n         version_without_fRelay.nRelay = 0\n         filter_peer_without_nrelay.send_message(version_without_fRelay)"
      },
      {
        "sha": "2fc524524180f8e1d40ea9c3de8e5dbc64af9d54",
        "filename": "test/functional/p2p_leak.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/p2p_leak.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/p2p_leak.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_leak.py?ref=fa4dfd215f62e88d668311701735c332c264fa2a",
        "patch": "@@ -63,23 +63,20 @@ def on_cmpctblock(self, message): self.bad_message(message)\n     def on_getblocktxn(self, message): self.bad_message(message)\n     def on_blocktxn(self, message): self.bad_message(message)\n \n+\n # Node that never sends a version. We'll use this to send a bunch of messages\n # anyway, and eventually get disconnected.\n class CNodeNoVersionMisbehavior(CLazyNode):\n-    # Send enough veracks without a message to reach the peer discouragement\n-    # threshold. This should get us disconnected. NOTE: implementation-specific\n-    # test; update if our discouragement policy for peer misbehavior changes.\n-    def on_open(self):\n-        super().on_open()\n-        for _ in range(DISCOURAGEMENT_THRESHOLD):\n-            self.send_message(msg_verack())\n+    pass\n+\n \n # Node that never sends a version. This one just sits idle and hopes to receive\n # any message (it shouldn't!)\n class CNodeNoVersionIdle(CLazyNode):\n     def __init__(self):\n         super().__init__()\n \n+\n # Node that sends a version but not a verack.\n class CNodeNoVerackIdle(CLazyNode):\n     def __init__(self):\n@@ -114,6 +111,11 @@ def run_test(self):\n         no_version_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVersionIdle(), send_version=False, wait_for_verack=False)\n         no_verack_idlenode = self.nodes[0].add_p2p_connection(CNodeNoVerackIdle(), wait_for_verack=False)\n \n+        # Send enough veracks without a message to reach the peer discouragement\n+        # threshold. This should get us disconnected.\n+        for _ in range(DISCOURAGEMENT_THRESHOLD):\n+            no_version_disconnect_node.send_message(msg_verack())\n+\n         # Wait until we got the verack in response to the version. Though, don't wait for the other node to receive the\n         # verack, since we never sent one\n         no_verack_idlenode.wait_for_verack()\n@@ -153,7 +155,6 @@ def run_test(self):\n         p2p_old_node = self.nodes[0].add_p2p_connection(P2PInterface(), send_version=False, wait_for_verack=False)\n         old_version_msg = msg_version()\n         old_version_msg.nVersion = 31799\n-        wait_until(lambda: p2p_old_node.is_connected)\n         with self.nodes[0].assert_debug_log(['peer=4 using obsolete version 31799; disconnecting']):\n             p2p_old_node.send_message(old_version_msg)\n             p2p_old_node.wait_for_disconnect()"
      },
      {
        "sha": "eaf637fbb88c509409bd538890880caf9a8f7e38",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=fa4dfd215f62e88d668311701735c332c264fa2a",
        "patch": "@@ -474,7 +474,7 @@ def wait_for_verack(self, timeout=60):\n         def test_function():\n             return \"verack\" in self.last_message\n \n-        self.wait_until(test_function, timeout=timeout, check_connected=False)\n+        self.wait_until(test_function, timeout=timeout)\n \n     # Message sending helper functions\n "
      },
      {
        "sha": "6432918bde40e21ec4b971a2ec8a97b635010913",
        "filename": "test/functional/test_framework/test_node.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/test_framework/test_node.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa4dfd215f62e88d668311701735c332c264fa2a/test/functional/test_framework/test_node.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_node.py?ref=fa4dfd215f62e88d668311701735c332c264fa2a",
        "patch": "@@ -524,6 +524,7 @@ def add_p2p_connection(self, p2p_conn, *, wait_for_verack=True, **kwargs):\n \n         p2p_conn.peer_connect(**kwargs, net=self.chain, timeout_factor=self.timeout_factor)()\n         self.p2ps.append(p2p_conn)\n+        p2p_conn.wait_until(lambda: p2p_conn.is_connected, check_connected=False)\n         if wait_for_verack:\n             # Wait for the node to send us the version and verack\n             p2p_conn.wait_for_verack()"
      }
    ]
  }
]