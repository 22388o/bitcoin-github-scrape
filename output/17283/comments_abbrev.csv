DrahtBot,2019-10-28 20:03:00,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17261](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17261.html) (Make ScriptPubKeyMan an actual interface an",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-547121494,547121494,
jonatack,2019-10-29 19:14:47,"Updated the gist of the CLI help output after this PR (same urls as before):\n[`bitcoin-cli help getaddressinfo` before this PR](https://gist.github.com/jonatack/022af5221a85c069780359a22643c810)\n[`bitcoin-cli help getaddressinfo` after this PR](https://gist.github.com/jonatack/4ee5f6abc62a3d99269570206a5f90ba)",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-547585725,547585725,
fjahr,2019-10-30 10:37:57,Code review ACK e123923e630c051f676501aab9454ecbf3bd3956,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-547837994,547837994,
jachiang,2019-10-31 14:16:14,"Code review ACK e123923e630c051f676501aab9454ecbf3bd3956\n\nI find the clarification on `Label` vs. `Labels` in comments/help and the newly added test coverage of `Labels` helpful for anybody interfacing with `getaddressinfo`. Use `Labels` :)",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-548396311,548396311,
jonatack,2019-11-02 10:41:46,Thank you @jachiang and @promag for reviewing.,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-549031770,549031770,
michaelfolkson,2019-11-03 14:02:14,tACK e123923e630c051f676501aab9454ecbf3bd3956. CLI help output as described. Looking forward to reviewing the deprecation of label PR ;),https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-549139469,549139469,
jonatack,2019-11-05 09:25:23,Rebased.,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-549737369,549737369,
jonatack,2019-11-06 12:55:20,"appveyor failures are unrelated:\n```\nbech32_tests.obj : error LNK2001: unresolved external symbol ""bool __cdecl CaseInsensitiveEqual\n```",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-550296936,550296936,
ryanofsky,2019-11-06 13:41:07,"> appveyor failures are unrelated:\n\nAppveyor error is apparently fixed by https://github.com/bitcoin/bitcoin/pull/17384#issuecomment-550305021",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-550313265,550313265,
jonatack,2019-11-07 09:49:03,Rebased and incorporated @promag's feedback.,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-551004708,551004708,
jnewbery,2019-11-15 17:42:13,"Concept ACK. Thanks Jon.\n\nI find the `purpose` field in the `labels` return object very strange, and think that we should probably remove it before encouraging people to rely on `labels`. The code to add the purpose field:\n\nhttps://github.com/bitcoin/bitcoin/blob/21ee676dd6a7d9704367b6412bf8e1e443ec2b5b/src/wallet/rpcwallet.cpp#L3672\n\nwas added in #12892 (from code originally in #7729)",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-554458001,554458001,
jonatack,2019-11-23 12:00:28,"Thank you for the review, @jnewbery! I took your suggestions: removed mention of upcoming deprecation of the label field from the rpc help, updated the PR description and commit messages, and removed the copyright header updates. \n\nI think this PR now does what is needed for the current situation while making minimum changes WRT existing review and is hopefully RFM.\n\n>  if you do agree wit",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-557792065,557792065,
jonatack,2019-11-24 17:27:23,Deprecated getaddressinfo labels `purpose` in #17578 which builds on this PR.,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-557909569,557909569,
jonatack,2019-11-25 02:00:08,Deprecated the getaddressinfo `label` field in #17585 which builds on this PR.,https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-557958004,557958004,
fjahr,2019-11-25 15:16:18,"Re-ACK 33f5fc32e5bfbe1e89c4d20ce455bcc6dc194151\n\nReviewed code changes. Build failure seems unrelated, would need a rebuild.",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-558200398,558200398,
sidhujag,2019-11-28 18:23:28,"This seemed to break CI / Trusty or at the very least, Trusty distribution seemed to not be able to be fetched from here on.",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-559578761,559578761,
jonatack,2019-11-28 20:55:04,"> This seemed to break CI / Trusty or at the very least, Trusty distribution seemed to not be able to be fetched from here on.\n\n@sidhujag I think it's unrelated; see #17626.",https://github.com/bitcoin/bitcoin/pull/17283#issuecomment-559601521,559601521,
jachiang,2019-10-29 08:28:31,Question: Would it make sense for the `labels_value` method to indicate that it is only for the single member `labels` case (since `getaddressinfo` may support multiple labels in the future)? ,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r339941464,339941464,test/functional/test_framework/wallet_util.py
jonatack,2019-10-29 08:33:37,"Thanks @jachiang. I thought I'd update it if/when adding support for multiple labels, though happy to take a good suggestion now for a better name or docstring.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r339943464,339943464,test/functional/test_framework/wallet_util.py
jachiang,2019-10-29 08:41:30,"You're right, a docstring or inline comment would have probably sufficient for sb who is just looking at the functional test, and not the rpc code (where labels vector is actually documented). Happy to wait and see what other reviewers think :)",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r339946433,339946433,test/functional/test_framework/wallet_util.py
jonatack,2019-10-29 10:19:55,"The rpc code doc seems good, but explaining it in the help might be a good idea. Thanks, might update that. Thanks for the review!",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r339992183,339992183,test/functional/test_framework/wallet_util.py
fjahr,2019-10-29 14:11:27,There seems to be just some white space formatting in the commit on the following lines. Since they are changed in the next commit again I would combine these commits. ,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340098104,340098104,src/wallet/rpcwallet.cpp
fjahr,2019-10-29 16:38:35,"Would combine this commit with bb87d8aac71dc87d1f11c26bd97fa6dc7b650a75, as you are mostly touching LoC that you touched in the that one as well.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340192545,340192545,test/functional/wallet_basic.py
fjahr,2019-10-29 16:40:58,"I think this one is touching the same lines as 3dcf1481cefae6ff2d585181578004045c3e3a1c, so I would combine these commits as well.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340193820,340193820,test/functional/wallet_importmulti.py
jonatack,2019-10-29 18:41:25,"Yes, the first commit is limited to formatting fixes only, to keep it separate from the content fixes, and the specific label/labels content changes. It was more work to keep them separate but hopefully clearer for reviewing, and in case of requested edits or dropping any unwanted commits. I named the commits accordingly.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340259949,340259949,src/wallet/rpcwallet.cpp
jonatack,2019-10-29 18:44:44,Updated the code doc and help with more details.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340261546,340261546,test/functional/test_framework/wallet_util.py
jonatack,2019-10-29 18:48:13,"I made a conscious effort to keep the logical changes separate, in case any changes were not wanted, for example if extracting this function to wallet_util.py was seen as unneeded abstraction.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340263205,340263205,test/functional/wallet_basic.py
jonatack,2019-10-29 18:54:33,The main change of this commit is extending testing of the getaddressinfo `labels` response to the `test_importmulti` functions. I can try to move the renamings to the previous commit.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340266524,340266524,test/functional/wallet_importmulti.py
jonatack,2019-10-30 09:59:24,"@fjahr I squashed the 4 commits adding RPC getaddressinfo ""labels"" test coverage and improving the existing ""label"" tests down to a single commit at e123923e630c051f676501aab9454ecbf3bd3956. Can you please re-ACK?",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340521248,340521248,test/functional/wallet_importmulti.py
ariard,2019-10-30 17:25:16,"Not sure about this, but deprecation shouldn't be spread among multiples version (instead of multiple PRs inside same version) ?",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340755884,340755884,src/wallet/rpcwallet.cpp
jonatack,2019-10-30 17:49:38,Yes. This is merely a recommandation in the help as a helpful guide for application developers confused whether to use `label` and `labels`.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r340768673,340768673,src/wallet/rpcwallet.cpp
promag,2019-11-01 23:41:21,"1d6884d4d4b541d0c04ef10da208ef657122aa1f\n\nThe code below is clear and simple, why add the obvious comment?",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r341784213,341784213,src/wallet/rpcwallet.cpp
promag,2019-11-01 23:41:27,"1d6884d4d4b541d0c04ef10da208ef657122aa1f\n\nIMO these ""return foo field"" comments are useless.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r341784224,341784224,src/wallet/rpcwallet.cpp
promag,2019-11-01 23:42:05,"1d6884d4d4b541d0c04ef10da208ef657122aa1f\n\nPretty obvious too?",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r341784302,341784302,src/wallet/rpcwallet.cpp
jonatack,2019-11-02 10:40:22,"Thank you for reviewing, @promag. Some of the comments add info that isn't obvious and the others are for consistency and separation. I propose to keep the 3 ACKs here and remove the too-obvious comments in the follow-up (to add multiple labels / deprecate the label field).",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r341806560,341806560,src/wallet/rpcwallet.cpp
jonatack,2019-11-07 09:46:36,Removed.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r343558223,343558223,src/wallet/rpcwallet.cpp
jonatack,2019-11-07 09:46:43,"Had to rebase, so removed the obvious comments.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r343558292,343558292,src/wallet/rpcwallet.cpp
jonatack,2019-11-07 09:46:58,Removed,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r343558407,343558407,src/wallet/rpcwallet.cpp
luke-jr,2019-11-08 19:24:54,"It seems unclear if multiple labels makes sense, so I don't think we're ready to deprecate this yet.\n\n(Multiple tags does make sense, but ""label"" has historically been a description for the specific tx)",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r344330751,344330751,src/wallet/rpcwallet.cpp
jonatack,2019-11-23 11:35:48,"Removed the line about deprecation.\n```diff\n-""\""label\"" :  \""label\""   (string) The label associated with the address. Defaults to \""\"". Equivalent to the name field in the labels array\n""\n-""                              below. This label field may be deprecated in the future; prefer consuming the labels array below instead.\n""\n+""\""label\"" :  \""label\""   (string) The label associated with ",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r349869158,349869158,src/wallet/rpcwallet.cpp
jnewbery,2019-11-26 14:40:41,"nit (please don't invalidate review ACKs to change this): this commenting would be better placed next to the `DescribeWalletAddress` function or `DescribeWalletAddressVisitor` class, since it's very possible that the key-values returned will change in future, and keeping comments close to the code it's describing reduce the chances of them going stale.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350780148,350780148,src/wallet/rpcwallet.cpp
jnewbery,2019-11-26 14:42:06,nit: Seems redundant. The code below is very easy to read.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350780920,350780920,src/wallet/rpcwallet.cpp
jnewbery,2019-11-26 14:48:00,"Is this intentionally an invalid address? The previous example was a valid address, which I think is useful since users can test the RPC and see a valid return object by using the example",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350784833,350784833,src/wallet/rpcwallet.cpp
jonatack,2019-11-26 15:03:14,Good idea -- will update #17578 with this.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350794224,350794224,src/wallet/rpcwallet.cpp
jonatack,2019-11-26 15:04:50,"ACK, will update #17578 with this.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350795149,350795149,src/wallet/rpcwallet.cpp
jonatack,2019-11-26 15:06:16,"Yes, I noticed addresses with a missing character in other RPC examples and thought it might be the norm. Will update #17578.",https://github.com/bitcoin/bitcoin/pull/17283#discussion_r350795989,350795989,src/wallet/rpcwallet.cpp
jonatack,2019-12-02 09:23:20,Removed.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r352487580,352487580,src/wallet/rpcwallet.cpp
jonatack,2019-12-02 09:23:41,Removed in #17578.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r352487734,352487734,src/wallet/rpcwallet.cpp
jonatack,2019-12-02 09:24:08,Added a valid address in #17578.,https://github.com/bitcoin/bitcoin/pull/17283#discussion_r352487927,352487927,src/wallet/rpcwallet.cpp
