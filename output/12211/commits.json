[
  {
    "sha": "cc90a4f46bfff17ca358eedf29d2b77117ad4465",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYzkwYTRmNDZiZmZmMTdjYTM1OGVlZGYyOWQyYjc3MTE3YWQ0NDY1",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-01-17T18:23:26Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2018-01-17T18:23:26Z"
      },
      "message": "Avoid potential null dereference in ReceiveCoinsDialog constructor\n\nNot a bug in practice because current WalletModel::getDefaultAddressType()\nimplementation does not dereference its `this` pointer.",
      "tree": {
        "sha": "96a2e1654993d88f974ff6b2c173b66e51fbc336",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96a2e1654993d88f974ff6b2c173b66e51fbc336"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cc90a4f46bfff17ca358eedf29d2b77117ad4465",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc90a4f46bfff17ca358eedf29d2b77117ad4465",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cc90a4f46bfff17ca358eedf29d2b77117ad4465",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cc90a4f46bfff17ca358eedf29d2b77117ad4465/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c7978be899646194b6abc5b34a7f6a3311490033",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c7978be899646194b6abc5b34a7f6a3311490033",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c7978be899646194b6abc5b34a7f6a3311490033"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7fd5285467d8346e03db7129d55a7e70102f6b05",
        "filename": "src/qt/receivecoinsdialog.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 9,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cc90a4f46bfff17ca358eedf29d2b77117ad4465/src/qt/receivecoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cc90a4f46bfff17ca358eedf29d2b77117ad4465/src/qt/receivecoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/receivecoinsdialog.cpp?ref=cc90a4f46bfff17ca358eedf29d2b77117ad4465",
        "patch": "@@ -43,15 +43,6 @@ ReceiveCoinsDialog::ReceiveCoinsDialog(const PlatformStyle *_platformStyle, QWid\n         ui->removeRequestButton->setIcon(_platformStyle->SingleColorIcon(\":/icons/remove\"));\n     }\n \n-    // configure bech32 checkbox, disable if launched with legacy as default:\n-    if (model->getDefaultAddressType() == OUTPUT_TYPE_BECH32) {\n-        ui->useBech32->setCheckState(Qt::Checked);\n-    } else {\n-        ui->useBech32->setCheckState(Qt::Unchecked);\n-    }\n-\n-    ui->useBech32->setVisible(model->getDefaultAddressType() != OUTPUT_TYPE_LEGACY);\n-\n     // context menu actions\n     QAction *copyURIAction = new QAction(tr(\"Copy URI\"), this);\n     QAction *copyLabelAction = new QAction(tr(\"Copy label\"), this);\n@@ -102,6 +93,15 @@ void ReceiveCoinsDialog::setModel(WalletModel *_model)\n             SLOT(recentRequestsView_selectionChanged(QItemSelection, QItemSelection)));\n         // Last 2 columns are set by the columnResizingFixer, when the table geometry is ready.\n         columnResizingFixer = new GUIUtil::TableViewLastColumnResizingFixer(tableView, AMOUNT_MINIMUM_COLUMN_WIDTH, DATE_COLUMN_WIDTH, this);\n+\n+        // configure bech32 checkbox, disable if launched with legacy as default:\n+        if (model->getDefaultAddressType() == OUTPUT_TYPE_BECH32) {\n+            ui->useBech32->setCheckState(Qt::Checked);\n+        } else {\n+            ui->useBech32->setCheckState(Qt::Unchecked);\n+        }\n+\n+        ui->useBech32->setVisible(model->getDefaultAddressType() != OUTPUT_TYPE_LEGACY);\n     }\n }\n "
      }
    ]
  }
]