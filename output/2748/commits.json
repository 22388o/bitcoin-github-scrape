[
  {
    "sha": "eeb8569d710d59292368785065005ffc0c4ece44",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZWI4NTY5ZDcxMGQ1OTI5MjM2ODc4NTA2NTAwNWZmYzBjNGVjZTQ0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-05-27T23:55:01Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-07T08:20:28Z"
      },
      "message": "autotools: cleanup usage of MSG_NOSIGNAL\n\nThis is Part of an autotools buildsystem port.\n\nPreviously MSG_NOSIGNAL was defined in a few places, and -DMSG_NOSIGNAL=0 was\npassed by the osx build to signify that it was unavailable there. For Win32, it\nwas assumed to be unavailable.\n\nThis commit flips the logic so that the unix build declares the feature. The\nHAVE_MSG_NOSIGNAL define will be (automatically detected and) set by autotools\nas well, so that both build methods will give the same results.\n\nThere should be no observable changes in functionality here.",
      "tree": {
        "sha": "4dd2235a655ce682a1d3e43d5e2e4bd29f7c70d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dd2235a655ce682a1d3e43d5e2e4bd29f7c70d8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/eeb8569d710d59292368785065005ffc0c4ece44",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeb8569d710d59292368785065005ffc0c4ece44",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/eeb8569d710d59292368785065005ffc0c4ece44",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeb8569d710d59292368785065005ffc0c4ece44/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "122e9f8ba4b403fbefe20740d7d030a1eec6795f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/122e9f8ba4b403fbefe20740d7d030a1eec6795f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/122e9f8ba4b403fbefe20740d7d030a1eec6795f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 10,
      "deletions": 4
    },
    "files": [
      {
        "sha": "28eee5f8d96900f65dc32ab537233c62b5f96213",
        "filename": "src/compat.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/compat.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/compat.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/compat.h?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -28,7 +28,6 @@\n \n typedef u_int SOCKET;\n #ifdef WIN32\n-#define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n typedef int socklen_t;\n #else"
      },
      {
        "sha": "84f77d0a757a5225e52d2e61a360971751733e0c",
        "filename": "src/makefile.osx",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/makefile.osx",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/makefile.osx",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.osx?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -56,7 +56,7 @@ LIBS += \\\n TESTDEFS += -DBOOST_TEST_DYN_LINK\n endif\n \n-DEFS=-DMAC_OSX -DMSG_NOSIGNAL=0 -DBOOST_SPIRIT_THREADSAFE\n+DEFS=-DMAC_OSX -DBOOST_SPIRIT_THREADSAFE\n \n ifdef RELEASE\n # Compile for maximum compatibility and smallest size."
      },
      {
        "sha": "fd049a00c9ac0e52ffe2de5b624297b9b74b6c5d",
        "filename": "src/makefile.unix",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/makefile.unix",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/makefile.unix",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/makefile.unix?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -13,7 +13,7 @@ USE_IPV6:=1\n \n LINK:=$(CXX)\n \n-DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64\n+DEFS=-DBOOST_SPIRIT_THREADSAFE -D_FILE_OFFSET_BITS=64 -DHAVE_MSG_NOSIGNAL\n \n DEFS += $(addprefix -I,$(CURDIR) $(CURDIR)/obj $(BOOST_INCLUDE_PATH) $(BDB_INCLUDE_PATH) $(OPENSSL_INCLUDE_PATH))\n LIBS = $(addprefix -L,$(BOOST_LIB_PATH) $(BDB_LIB_PATH) $(OPENSSL_LIB_PATH))"
      },
      {
        "sha": "d5500d842712c69139e535adfb42f3243d2a7519",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -21,6 +21,10 @@\n #include <miniupnpc/upnperrors.h>\n #endif\n \n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n using namespace std;\n using namespace boost;\n "
      },
      {
        "sha": "27bb11982e80284f7a1433c6e0eef2f130ae1f20",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -15,6 +15,10 @@\n #include <boost/algorithm/string/case_conv.hpp> // for to_lower()\n #include <boost/algorithm/string/predicate.hpp> // for startswith() and endswith()\n \n+#if !defined(HAVE_MSG_NOSIGNAL)\n+#define MSG_NOSIGNAL 0\n+#endif\n+\n using namespace std;\n \n // Settings"
      },
      {
        "sha": "88da7c9fe231c90218c7bfac7a96f9ccd56f3518",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/eeb8569d710d59292368785065005ffc0c4ece44/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/eeb8569d710d59292368785065005ffc0c4ece44/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=eeb8569d710d59292368785065005ffc0c4ece44",
        "patch": "@@ -91,7 +91,6 @@ T* alignup(T* p)\n }\n \n #ifdef WIN32\n-#define MSG_NOSIGNAL        0\n #define MSG_DONTWAIT        0\n \n #ifndef S_IRUSR"
      }
    ]
  },
  {
    "sha": "e98281566676f76709e2d69533613e7e7bb61b4d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplOTgyODE1NjY2NzZmNzY3MDllMmQ2OTUzMzYxM2U3ZTdiYjYxYjRk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-03T22:37:18Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-07T08:20:28Z"
      },
      "message": "autotools: include bitcoin-config.h for autotools builds",
      "tree": {
        "sha": "b1ab26a0dcea5c05a6d47498d5599b1f31ca171e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b1ab26a0dcea5c05a6d47498d5599b1f31ca171e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e98281566676f76709e2d69533613e7e7bb61b4d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98281566676f76709e2d69533613e7e7bb61b4d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e98281566676f76709e2d69533613e7e7bb61b4d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98281566676f76709e2d69533613e7e7bb61b4d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "eeb8569d710d59292368785065005ffc0c4ece44",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/eeb8569d710d59292368785065005ffc0c4ece44",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/eeb8569d710d59292368785065005ffc0c4ece44"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 37,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b376a67c8a763f150dc57458719a85b11d3d61f2",
        "filename": "src/clientversion.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/clientversion.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/clientversion.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/clientversion.h?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -1,6 +1,9 @@\n #ifndef CLIENTVERSION_H\n #define CLIENTVERSION_H\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#else\n //\n // client versioning and copyright year\n //\n@@ -18,6 +21,8 @@\n // Todo: update this when changing our copyright comments in the source\n #define COPYRIGHT_YEAR 2013\n \n+#endif //HAVE_CONFIG_H\n+\n // Converts the parameter X to a string after macro replacement on X has been performed.\n // Don't merge these into one macro!\n #define STRINGIZE(X) DO_STRINGIZE(X)"
      },
      {
        "sha": "021669be99b9a22eaff4a904f7ea5a7242de910a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -19,6 +19,10 @@\n #include <boost/algorithm/string/predicate.hpp>\n #include <openssl/crypto.h>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifndef WIN32\n #include <signal.h>\n #endif"
      },
      {
        "sha": "bfffcdb076d45327f2fd64ef6cca01cb9f9e9ab4",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -12,6 +12,10 @@\n \n #include <list>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n class CWallet;\n class CBlock;\n class CBlockIndex;"
      },
      {
        "sha": "dc4f65884fedd3cf71e3ce1dd1b8c9a4950e4b7c",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -10,6 +10,10 @@\n #include \"ui_interface.h\"\n #include \"script.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifdef WIN32\n #include <string.h>\n #endif"
      },
      {
        "sha": "6beea77dffe5877f9065bebbc9d1160a633fb0a9",
        "filename": "src/netbase.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/netbase.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/netbase.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.h?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -10,6 +10,10 @@\n #include \"serialize.h\"\n #include \"compat.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n extern int nConnectTimeout;\n \n #ifdef WIN32"
      },
      {
        "sha": "0451060075fde6ceaf2b2ff5361c9ce883d1b5c1",
        "filename": "src/qt/addressbookpage.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/addressbookpage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/addressbookpage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/addressbookpage.cpp?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -8,6 +8,10 @@\n #include \"csvmodelwriter.h\"\n #include \"guiutil.h\"\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n #ifdef USE_QRCODE\n #include \"qrcodedialog.h\"\n #endif"
      },
      {
        "sha": "fffc34decde03ee0e3013c581538995da036b122",
        "filename": "src/qt/notificator.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/notificator.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/notificator.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/notificator.h?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -4,6 +4,10 @@\n #include <QObject>\n #include <QIcon>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n QT_BEGIN_NAMESPACE\n class QSystemTrayIcon;\n #ifdef USE_DBUS"
      },
      {
        "sha": "47955e9c33f22112f4320d306541e1d99f9f3b24",
        "filename": "src/qt/optionsdialog.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/optionsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/optionsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsdialog.cpp?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -11,6 +11,10 @@\n #include <QLocale>\n #include <QMessageBox>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n OptionsDialog::OptionsDialog(QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::OptionsDialog),"
      },
      {
        "sha": "b2cd6f75f49976c15a3c6c11896c246538bd2145",
        "filename": "src/qt/optionsmodel.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/optionsmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e98281566676f76709e2d69533613e7e7bb61b4d/src/qt/optionsmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/optionsmodel.cpp?ref=e98281566676f76709e2d69533613e7e7bb61b4d",
        "patch": "@@ -7,6 +7,10 @@\n \n #include <QSettings>\n \n+#if defined(HAVE_CONFIG_H)\n+#include \"bitcoin-config.h\"\n+#endif\n+\n OptionsModel::OptionsModel(QObject *parent) :\n     QAbstractListModel(parent)\n {"
      }
    ]
  },
  {
    "sha": "3602b34c8cfd88ff26a71c984e8e72391190954d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjAyYjM0YzhjZmQ4OGZmMjZhNzFjOTg0ZThlNzIzOTExOTA5NTRk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-03T22:39:18Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-07T08:20:28Z"
      },
      "message": "autotools: add gitignore",
      "tree": {
        "sha": "126bdec9a7d0c63bd6be65fabbc22aef24703ce0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/126bdec9a7d0c63bd6be65fabbc22aef24703ce0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3602b34c8cfd88ff26a71c984e8e72391190954d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3602b34c8cfd88ff26a71c984e8e72391190954d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3602b34c8cfd88ff26a71c984e8e72391190954d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3602b34c8cfd88ff26a71c984e8e72391190954d/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e98281566676f76709e2d69533613e7e7bb61b4d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e98281566676f76709e2d69533613e7e7bb61b4d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e98281566676f76709e2d69533613e7e7bb61b4d"
      }
    ],
    "stats": {
      "total": 38,
      "additions": 38,
      "deletions": 0
    },
    "files": [
      {
        "sha": "cfe4c13e7c460f89ca37a04bedd69168d391a867",
        "filename": ".gitignore",
        "status": "modified",
        "additions": 38,
        "deletions": 0,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3602b34c8cfd88ff26a71c984e8e72391190954d/.gitignore",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3602b34c8cfd88ff26a71c984e8e72391190954d/.gitignore",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.gitignore?ref=3602b34c8cfd88ff26a71c984e8e72391190954d",
        "patch": "@@ -2,6 +2,44 @@ src/*.exe\n src/bitcoin\n src/bitcoind\n src/test_bitcoin\n+src/test_bitcoin-qt\n+\n+src/.deps/\n+src/COPYING\n+src/INSTALL\n+src/Makefile.in\n+src/aclocal.m4\n+src/bitcoin-config.h\n+src/bitcoin-config.h.in\n+src/autom4te.cache/\n+src/config.guess\n+src/config.log\n+src/config.status\n+src/config.sub\n+src/configure\n+src/depcomp\n+src/install-sh\n+src/missing\n+src/stamp-h1\n+src/libbitcoind.a\n+src/libbitcoinqt.a\n+src/bitcoin-*.tar.gz\n+\n+src/leveldb/.deps/\n+\n+src/test/.deps\n+src/test/.dirstamp\n+\n+src/qt/.deps/\n+src/qt/.dirstamp\n+src/qt/*.moc\n+src/qt/moc_*.cpp\n+src/qt/forms/ui_*.h\n+\n+src/qt/test/.deps/\n+src/qt/test/.dirstamp\n+src/qt/test/moc*.cpp\n+\n .*.swp\n *.*~*\n *.bak"
      }
    ]
  },
  {
    "sha": "fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU4MDVmYWRjMzY5YWI4ZmQ2OTVkYmQyZmEwY2M3YTBiZWUxNTE0",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-03T22:40:40Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "theuni-nospam-@xbmc.org",
        "date": "2013-06-07T08:20:28Z"
      },
      "message": "autotools: add autotools files",
      "tree": {
        "sha": "c0a6dfcfab33231b143965e23e7d7373ef9a9694",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c0a6dfcfab33231b143965e23e7d7373ef9a9694"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3602b34c8cfd88ff26a71c984e8e72391190954d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3602b34c8cfd88ff26a71c984e8e72391190954d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3602b34c8cfd88ff26a71c984e8e72391190954d"
      }
    ],
    "stats": {
      "total": 2289,
      "additions": 2289,
      "deletions": 0
    },
    "files": [
      {
        "sha": "1230ea45db39df82582c874413d41ec1e2066db2",
        "filename": "src/Makefile.am",
        "status": "added",
        "additions": 248,
        "deletions": 0,
        "changes": 248,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,248 @@\n+ACLOCAL_AMFLAGS = -I m4\n+AM_CPPFLAGS =  $(INCLUDES) -I$(top_srcdir)/obj -I$(top_srcdir)/leveldb/include \\\n+               -I$(top_srcdir)/leveldb/helpers -I$(builddir)/qt $(BOOST_INCLUDES)\n+AM_LDFLAGS = $(PTHREAD_CFLAGS)\n+bin_PROGRAMS = bitcoind $(BUILD_TEST_PROGRAMS)\n+EXTRA_PROGRAMS = test_bitcoin test_bitcoin-qt\n+noinst_LIBRARIES = libbitcoind.a\n+TESTS = $(BUILD_TEST_PROGRAMS)\n+\n+TEST_DATA_DIR=$(top_srcdir)/test/data\n+\n+TEST_DATA_FILES= ./test/data/script_valid.json \\\n+./test/data/base58_keys_valid.json ./test/data/sig_canonical.json \\\n+./test/data/sig_noncanonical.json ./test/data/base58_encode_decode.json \\\n+./test/data/alertTests ./test/data/base58_keys_invalid.json \\\n+./test/data/script_invalid.json ./test/data/tx_invalid.json \\\n+./test/data/tx_valid.json\n+\n+# bitcoin core #\n+BITCOIN_CORE_H = addrman.h alert.h allocators.h base58.h bignum.h \\\n+bitcoinrpc.h bloom.h checkpoints.h checkqueue.h clientversion.h compat.h \\\n+crypter.h db.h hash.h init.h key.h keystore.h leveldb.h limitedmap.h main.h \\\n+mruset.h netbase.h net.h protocol.h script.h serialize.h sync.h \\\n+threadsafety.h txdb.h ui_interface.h uint256.h util.h version.h walletdb.h \\\n+wallet.h json/json_spirit.h json/json_spirit_error_position.h \\\n+json/json_spirit_reader.h json/json_spirit_reader_template.h \\\n+json/json_spirit_stream_reader.h json/json_spirit_utils.h \\\n+json/json_spirit_value.h json/json_spirit_writer.h \\\n+json/json_spirit_writer_template.h\n+\n+libbitcoind_a_SOURCES = alert.cpp version.cpp checkpoints.cpp netbase.cpp \\\n+addrman.cpp crypter.cpp key.cpp db.cpp init.cpp keystore.cpp main.cpp net.cpp \\\n+protocol.cpp bitcoinrpc.cpp rpcdump.cpp rpcnet.cpp rpcmining.cpp \\\n+rpcwallet.cpp rpcblockchain.cpp rpcrawtransaction.cpp script.cpp sync.cpp \\\n+util.cpp wallet.cpp walletdb.cpp hash.cpp bloom.cpp noui.cpp leveldb.cpp \\\n+txdb.cpp $(BITCOIN_CORE_H)\n+nodist_libbitcoind_a_SOURCES = obj/build.h\n+#\n+\n+\n+# bitcoind binary #\n+bitcoind_LDADD = libbitcoind.a leveldb/libleveldb.a leveldb/libmemenv.a \\\n+                 $(BOOST_LIBS)\n+bitcoind_SOURCES = bitcoind.cpp\n+#\n+\n+\n+# test_bitcoin binary #\n+test_bitcoin_CPPFLAGS = $(AM_CPPFLAGS) $(TESTDEFS) \\\n+                        -DTEST_DATA_DIR=$(TEST_DATA_DIR)\n+test_bitcoin_LDADD = $(bitcoind_LDADD) $(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+test_bitcoin_SOURCES = test/accounting_tests.cpp test/alert_tests.cpp \\\n+test/allocator_tests.cpp test/base32_tests.cpp test/base58_tests.cpp \\\n+test/base64_tests.cpp test/bignum_tests.cpp test/bloom_tests.cpp \\\n+test/canonical_tests.cpp test/checkblock_tests.cpp test/Checkpoints_tests.cpp \\\n+test/compress_tests.cpp test/DoS_tests.cpp test/getarg_tests.cpp \\\n+test/key_tests.cpp test/miner_tests.cpp test/mruset_tests.cpp \\\n+test/multisig_tests.cpp test/netbase_tests.cpp test/pmt_tests.cpp \\\n+test/rpc_tests.cpp test/script_P2SH_tests.cpp test/script_tests.cpp \\\n+test/serialize_tests.cpp test/sigopcount_tests.cpp test/test_bitcoin.cpp \\\n+test/transaction_tests.cpp test/uint160_tests.cpp test/uint256_tests.cpp \\\n+test/util_tests.cpp test/wallet_tests.cpp $(TEST_DATA_FILES)\n+\n+# bitcoin qt core #\n+QT_TS = qt/locale/bitcoin_af_ZA.ts qt/locale/bitcoin_ar.ts \\\n+qt/locale/bitcoin_bg.ts qt/locale/bitcoin_bs.ts qt/locale/bitcoin_ca_ES.ts \\\n+qt/locale/bitcoin_ca.ts qt/locale/bitcoin_cs.ts qt/locale/bitcoin_cy.ts \\\n+qt/locale/bitcoin_da.ts qt/locale/bitcoin_de.ts qt/locale/bitcoin_el_GR.ts \\\n+qt/locale/bitcoin_en.ts qt/locale/bitcoin_eo.ts qt/locale/bitcoin_es_CL.ts \\\n+qt/locale/bitcoin_es.ts qt/locale/bitcoin_et.ts qt/locale/bitcoin_eu_ES.ts \\\n+qt/locale/bitcoin_fa_IR.ts qt/locale/bitcoin_fa.ts qt/locale/bitcoin_fi.ts \\\n+qt/locale/bitcoin_fr_CA.ts qt/locale/bitcoin_fr.ts qt/locale/bitcoin_gu_IN.ts \\\n+qt/locale/bitcoin_he.ts qt/locale/bitcoin_hi_IN.ts qt/locale/bitcoin_hr.ts \\\n+qt/locale/bitcoin_hu.ts qt/locale/bitcoin_it.ts qt/locale/bitcoin_ja.ts \\\n+qt/locale/bitcoin_la.ts qt/locale/bitcoin_lt.ts qt/locale/bitcoin_lv_LV.ts \\\n+qt/locale/bitcoin_nb.ts qt/locale/bitcoin_nl.ts qt/locale/bitcoin_pl.ts \\\n+qt/locale/bitcoin_pt_BR.ts qt/locale/bitcoin_pt_PT.ts \\\n+qt/locale/bitcoin_ro_RO.ts qt/locale/bitcoin_ru.ts qt/locale/bitcoin_sk.ts \\\n+qt/locale/bitcoin_sr.ts qt/locale/bitcoin_sv.ts qt/locale/bitcoin_th_TH.ts \\\n+qt/locale/bitcoin_tr.ts qt/locale/bitcoin_uk.ts qt/locale/bitcoin_zh_CN.ts \\\n+qt/locale/bitcoin_zh_TW.ts\n+\n+QT_QM = qt/locale/bitcoin_af_ZA.qm qt/locale/bitcoin_ar.qm \\\n+qt/locale/bitcoin_bg.qm qt/locale/bitcoin_bs.qm qt/locale/bitcoin_ca_ES.qm \\\n+qt/locale/bitcoin_ca.qm qt/locale/bitcoin_cs.qm qt/locale/bitcoin_cy.qm \\\n+qt/locale/bitcoin_da.qm qt/locale/bitcoin_de.qm qt/locale/bitcoin_el_GR.qm \\\n+qt/locale/bitcoin_en.qm qt/locale/bitcoin_eo.qm qt/locale/bitcoin_es_CL.qm \\\n+qt/locale/bitcoin_es.qm qt/locale/bitcoin_et.qm qt/locale/bitcoin_eu_ES.qm \\\n+qt/locale/bitcoin_fa_IR.qm qt/locale/bitcoin_fa.qm qt/locale/bitcoin_fi.qm \\\n+qt/locale/bitcoin_fr_CA.qm qt/locale/bitcoin_fr.qm qt/locale/bitcoin_gu_IN.qm \\\n+qt/locale/bitcoin_he.qm qt/locale/bitcoin_hi_IN.qm qt/locale/bitcoin_hr.qm \\\n+qt/locale/bitcoin_hu.qm qt/locale/bitcoin_it.qm qt/locale/bitcoin_ja.qm \\\n+qt/locale/bitcoin_la.qm qt/locale/bitcoin_lt.qm qt/locale/bitcoin_lv_LV.qm \\\n+qt/locale/bitcoin_nb.qm qt/locale/bitcoin_nl.qm qt/locale/bitcoin_pl.qm \\\n+qt/locale/bitcoin_pt_BR.qm qt/locale/bitcoin_pt_PT.qm \\\n+qt/locale/bitcoin_ro_RO.qm qt/locale/bitcoin_ru.qm qt/locale/bitcoin_sk.qm \\\n+qt/locale/bitcoin_sr.qm qt/locale/bitcoin_sv.qm qt/locale/bitcoin_th_TH.qm \\\n+qt/locale/bitcoin_tr.qm qt/locale/bitcoin_uk.qm qt/locale/bitcoin_zh_CN.qm \\\n+qt/locale/bitcoin_zh_TW.qm\n+\n+QT_FORMS_UI = qt/forms/aboutdialog.ui qt/forms/addressbookpage.ui \\\n+qt/forms/askpassphrasedialog.ui qt/forms/editaddressdialog.ui \\\n+qt/forms/optionsdialog.ui qt/forms/overviewpage.ui qt/forms/qrcodedialog.ui \\\n+qt/forms/rpcconsole.ui qt/forms/sendcoinsdialog.ui qt/forms/sendcoinsentry.ui \\\n+qt/forms/signverifymessagedialog.ui qt/forms/transactiondescdialog.ui\n+\n+QT_MOC_CPP = qt/moc_aboutdialog.cpp qt/moc_addressbookpage.cpp \\\n+qt/moc_addresstablemodel.cpp qt/moc_askpassphrasedialog.cpp \\\n+qt/moc_bitcoinaddressvalidator.cpp qt/moc_bitcoinamountfield.cpp \\\n+qt/moc_bitcoingui.cpp qt/moc_bitcoinunits.cpp qt/moc_clientmodel.cpp \\\n+qt/moc_csvmodelwriter.cpp qt/moc_editaddressdialog.cpp qt/moc_guiutil.cpp \\\n+qt/moc_monitoreddatamapper.cpp qt/moc_notificator.cpp \\\n+qt/moc_optionsdialog.cpp qt/moc_optionsmodel.cpp qt/moc_paymentserver.cpp \\\n+qt/moc_qrcodedialog.cpp qt/moc_qvalidatedlineedit.cpp \\\n+qt/moc_qvaluecombobox.cpp qt/moc_sendcoinsdialog.cpp \\\n+qt/moc_sendcoinsentry.cpp qt/moc_signverifymessagedialog.cpp \\\n+qt/moc_splashscreen.cpp qt/moc_transactiondesc.cpp \\\n+qt/moc_transactiondescdialog.cpp qt/moc_transactionfilterproxy.cpp \\\n+qt/moc_transactiontablemodel.cpp qt/moc_transactionview.cpp \\\n+qt/moc_walletframe.cpp qt/moc_walletmodel.cpp qt/moc_walletstack.cpp \\\n+qt/moc_walletview.cpp qt/moc_rpcconsole.cpp qt/moc_overviewpage.cpp \\\n+qt/moc_macdockiconhandler.cpp qt/moc_macnotificationhandler.cpp\n+\n+TEST_QT_MOC_CPP = qt/test/moc_uritests.cpp\n+\n+QT_MOC = qt/overviewpage.moc qt/rpcconsole.moc\n+\n+QT_QRC_CPP = qt/qrc_bitcoin.cpp\n+QT_QRC = qt/bitcoin.qrc\n+\n+QT_FORMS_H = qt/forms/ui_aboutdialog.h qt/forms/ui_askpassphrasedialog.h \\\n+qt/forms/ui_optionsdialog.h qt/forms/ui_sendcoinsentry.h \\\n+qt/forms/ui_transactiondescdialog.h qt/forms/ui_addressbookpage.h \\\n+qt/forms/ui_editaddressdialog.h qt/forms/ui_overviewpage.h \\\n+qt/forms/ui_qrcodedialog.h qt/forms/ui_rpcconsole.h \\\n+qt/forms/ui_sendcoinsdialog.h qt/forms/ui_signverifymessagedialog.h\n+\n+BITCOIN_QT_H  = qt/aboutdialog.h qt/addressbookpage.h qt/addresstablemodel.h \\\n+qt/askpassphrasedialog.h qt/bitcoinaddressvalidator.h qt/bitcoinamountfield.h \\\n+qt/bitcoingui.h qt/bitcoinunits.h qt/clientmodel.h qt/csvmodelwriter.h \\\n+qt/editaddressdialog.h qt/guiconstants.h qt/guiutil.h qt/macdockiconhandler.h \\\n+qt/macnotificationhandler.h qt/monitoreddatamapper.h qt/notificator.h \\\n+qt/optionsdialog.h qt/optionsmodel.h qt/overviewpage.h qt/paymentserver.h \\\n+qt/qrcodedialog.h qt/qvalidatedlineedit.h qt/qvaluecombobox.h qt/rpcconsole.h \\\n+qt/sendcoinsdialog.h qt/sendcoinsentry.h qt/signverifymessagedialog.h \\\n+qt/splashscreen.h qt/transactiondesc.h qt/transactiondescdialog.h \\\n+qt/transactionfilterproxy.h qt/transactionrecord.h qt/transactiontablemodel.h \\\n+qt/transactionview.h qt/walletframe.h qt/walletmodel.h qt/walletstack.h \\\n+qt/walletview.h qt/test/uritests.h\n+\n+libbitcoinqt_a_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) -I$(top_srcdir)/qt \\\n+                          -I$(top_srcdir)/qt/forms $(QT_DBUS_INCLUDES)\n+libbitcoinqt_a_SOURCES =  qt/aboutdialog.cpp qt/addressbookpage.cpp \\\n+qt/addresstablemodel.cpp qt/askpassphrasedialog.cpp \\\n+qt/bitcoinaddressvalidator.cpp qt/bitcoinamountfield.cpp qt/bitcoingui.cpp \\\n+qt/bitcoinstrings.cpp qt/bitcoinunits.cpp qt/clientmodel.cpp \\\n+qt/csvmodelwriter.cpp qt/editaddressdialog.cpp qt/guiutil.cpp \\\n+qt/monitoreddatamapper.cpp qt/notificator.cpp qt/optionsdialog.cpp \\\n+qt/optionsmodel.cpp qt/overviewpage.cpp qt/paymentserver.cpp \\\n+qt/qrc_bitcoin.cpp qt/qvalidatedlineedit.cpp qt/qvaluecombobox.cpp \\\n+qt/rpcconsole.cpp qt/sendcoinsdialog.cpp qt/sendcoinsentry.cpp \\\n+qt/signverifymessagedialog.cpp qt/splashscreen.cpp qt/transactiondesc.cpp \\\n+qt/transactiondescdialog.cpp qt/transactionfilterproxy.cpp \\\n+qt/transactionrecord.cpp qt/transactiontablemodel.cpp qt/transactionview.cpp \\\n+qt/walletframe.cpp qt/walletmodel.cpp qt/walletstack.cpp qt/walletview.cpp \\\n+$(QT_FORMS_H) $(QT_QM) $(QT_QRC_CPP) $(BITCOIN_QT_H) $(QT_FORMS_UI) $(QT_QRC) \\\n+$(QT_TS)\n+\n+nodist_libbitcoinqt_a_SOURCES = $(QT_MOC_CPP) $(QT_MOC)\n+if BUILD_QT\n+noinst_LIBRARIES += libbitcoinqt.a\n+BUILT_SOURCES = $(QT_FORMS_H) $(QT_MOC_CPP) $(QT_QRC_CPP) $(QT_QM) $(QT_MOC) \\\n+                $(TEST_QT_MOC_CPP)\n+if TARGET_DARWIN\n+libbitcoinqt_a_SOURCES += qt/macdockiconhandler.mm qt/macnotificationhandler.mm\n+endif\n+if USE_QRCODE\n+libbitcoinqt_a_SOURCES += qt/qrcodedialog.cpp\n+endif\n+endif\n+#\n+\n+\n+# bitcoin-qt binary #\n+bitcoin_qt_CPPFLAGS = $(AM_CPPFLAGS) $(QT_INCLUDES) -I$(top_srcdir)/qt \\\n+                      -I$(top_srcdir)/qt/forms\n+bitcoin_qt_SOURCES = qt/bitcoin.cpp\n+bitcoin_qt_LDADD = libbitcoinqt.a $(bitcoind_LDADD) $(QT_LIBS) $(QT_DBUS_LIBS)\n+\n+if BUILD_QT\n+bin_PROGRAMS += bitcoin-qt\n+endif\n+#\n+\n+# test_bitcoin-qt binary #\n+test_bitcoin_qt_CPPFLAGS = $(bitcoin_qt_CPPFLAGS) $(QT_TEST_INCLUDES)\n+test_bitcoin_qt_SOURCES = qt/test/test_main.cpp qt/test/uritests.cpp\n+nodist_test_bitcoin_qt_SOURCES = $(TEST_QT_MOC_CPP)\n+test_bitcoin_qt_LDADD = $(bitcoin_qt_LDADD) $(QT_TEST_LIBS)\n+\n+.mm.o:\n+\t$(OBJC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n+\t$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(QT_INCLUDES) $(CXXFLAGS)  -c -o $@ $<\n+\n+ui_%.h: %.ui\n+\t@test -f $(UIC) && $(UIC) -o $@ $< || echo error: could not build $@\n+\n+$(QT_QRC_CPP): $(QT_QRC) $(QT_QM)\n+\t@test -f $(RCC) && $(RCC) -name bitcoin -o $@ $< || \\\n+        echo error: could not build $@\n+\n+%.moc: %.cpp\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\n+moc_%.cpp: %.h\n+\t$(MOC) $(QT_INCLUDES) $(MOC_DEFS) -o $@ $<\n+\n+%.qm: %.ts\n+\t@test -f $(LRELEASE) && $(LRELEASE) $< $@ || \\\n+        echo error: could not build $@\n+\n+leveldb/libleveldb.a:\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n+        AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS)\" libleveldb.a\n+\n+leveldb/libmemenv.a:\n+\t@echo \"Building LevelDB ...\" && cd leveldb && CXX=$(CXX) CC=$(CC) \\\n+        AR=$(AR) $(MAKE) $(LEVELDB_TARGET_FLAGS) OPT=\"$(CXXFLAGS)\" libmemenv.a\n+\n+CLEANFILES = $(BUILT_SOURCES) leveldb/libleveldb.a leveldb/libmemenv.a \\\n+             $(QT_FORMS_H) $(QT_MOC_CPP) $(QT_QRC_CPP) $(QT_QM) $(QT_MOC)\n+\n+DISTCLEANFILES = obj/build.h\n+\n+EXTRA_DIST = leveldb qt/res\n+\n+clean-local:\n+\t-$(MAKE) -C leveldb clean\n+\n+dist-hook:\n+\t-$(MAKE) -C $(top_distdir)/leveldb clean\n+\n+distcheck-hook:\n+\tcp -rf $(top_srcdir)/leveldb $(top_distdir)/_build\n+\t-$(MAKE) -C $(top_distdir)/_build/leveldb clean\n+\n+distcleancheck:\n+\t@:"
      },
      {
        "sha": "4e7011a59658c80bd81d28ea744da0e4405181e6",
        "filename": "src/autogen.sh",
        "status": "added",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/autogen.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/autogen.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/autogen.sh?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1 @@\n+autoreconf -vif"
      },
      {
        "sha": "3f552637f340d46f93fd0dd591533f1ba53def7e",
        "filename": "src/configure.ac",
        "status": "added",
        "additions": 496,
        "deletions": 0,
        "changes": 496,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/configure.ac?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,496 @@\n+dnl require autoconf 2.60 (AS_ECHO/AS_ECHO_N)\n+AC_PREREQ([2.60])\n+define(_CLIENT_VERSION_MAJOR, 0)\n+define(_CLIENT_VERSION_MINOR, 8)\n+define(_CLIENT_VERSION_REVISION, 99)\n+define(_CLIENT_VERSION_BUILD, 0)\n+define(_CLIENT_VERSION_IS_RELEASE, false)\n+define(_COPYRIGHT_YEAR, 2013)\n+AC_INIT([Bitcoin],[_CLIENT_VERSION_MAJOR._CLIENT_VERSION_MINOR._CLIENT_VERSION_REVISION],[info@bitcoin.org],[bitcoin])\n+AC_CONFIG_MACRO_DIR([m4])\n+AC_CANONICAL_HOST\n+\n+dnl ==============================================================\n+dnl Setup for automake\n+dnl ==============================================================\n+\n+dnl reset CXXFLAGS if empty (autoconf adds its own defaults otherwise)\n+:${CXXFLAGS=\"\"}\n+\n+AM_INIT_AUTOMAKE([no-define subdir-objects foreign])\n+\n+dnl make the compilation flags quiet unless V=1 is used\n+m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n+\n+AC_ARG_ENABLE([upnp],\n+  [AS_HELP_STRING([--enable-upnp],\n+  [enable UPNP (default is yes if libminiupnpc is found)])],\n+  [use_upnp=$enableval],\n+  [use_upnp=auto])\n+\n+AC_ARG_ENABLE([upnp-default],\n+  [AS_HELP_STRING([--enable-upnp-default],\n+  [if UPNP is enabled, turn it on at startup (default is no)])],\n+  [use_upnp_default=$enableval],\n+  [use_upnp_default=no])\n+\n+dnl enable ipv6 support\n+AC_ARG_ENABLE([ipv6],\n+  [AS_HELP_STRING([--enable-ipv6],\n+  [enable ipv6 (default is yes)])],\n+  [use_ipv6=$enableval],\n+  [use_ipv6=yes])\n+\n+dnl enable qt support\n+AC_ARG_ENABLE([qt],\n+  [AS_HELP_STRING([--enable-qt],\n+  [enable qt (default is yes)])],\n+  [use_qt=$enableval],\n+  [use_qt=yes])\n+\n+dnl compile with full warnings and debugging symbols\n+AC_ARG_ENABLE(debug,\n+    AS_HELP_STRING([--enable-debug],[compile with debug symbols (default is no)]),\n+    [use_debug=$enableval],\n+    [use_debug=no])\n+    AC_MSG_CHECKING([if compiling with debugging symbols])\n+\n+AC_ARG_ENABLE(tests,\n+    AS_HELP_STRING([--enable-tests],[compile tests (default is yes)]),\n+    [use_tests=$enableval],\n+    [use_tests=yes])\n+\n+AC_ARG_ENABLE([qr],\n+  [AS_HELP_STRING([--enable-qr],\n+  [enable QR code support (default is yes if libqrencode is found)])],\n+  [use_qr=$enableval],\n+  [use_qr=auto])\n+\n+AC_ARG_ENABLE([dbus],\n+  [AS_HELP_STRING([--enable-dbus],\n+  [enable DBus support (default is yes if QtDBus is found)])],\n+  [use_dbus=$enableval],\n+  [use_dbus=auto])\n+\n+AC_ARG_ENABLE([hardening],\n+  [AS_HELP_STRING([--enable-hardening],\n+  [attempt to harden the resulting executables (default is yes)])],\n+  [use_hardening=$enableval],\n+  [use_hardening=yes])\n+\n+AC_ARG_WITH([qt-incdir],[AS_HELP_STRING([--with-qt-incdir=INC_DIR],[specify qt include path (overridden by pkgconfig)])], [qt_include_path=$withval], [qt_include_path=])\n+AC_ARG_WITH([qt-libdir],[AS_HELP_STRING([--with-qt-libdir=LIB_DIR],[specify qt lib path (overridden by pkgconfig)])], [qt_lib_path=$withval], [qt_lib_path=])\n+AC_ARG_WITH([qt-bindir],[AS_HELP_STRING([--with-qt-bindir=BIN_DIR],[specify qt bin path (overridden by pkgconfig)])], [qt_bin_path=$withval], [qt_bin_path=])\n+AC_ARG_WITH([qt-plugindir],[AS_HELP_STRING([--with-qt-plugindir=PLUGIN_DIR],[specify qt plugin path (overridden by pkgconfig)])], [qt_plugin_path=$withval], [qt_plugin_path=])\n+\n+AC_CONFIG_SRCDIR([.])\n+AC_CONFIG_HEADERS([bitcoin-config.h])\n+\n+dnl Checks for programs.\n+AC_PROG_CXX\n+AC_PROG_CC\n+AC_PROG_CPP\n+AC_PROG_INSTALL\n+AC_PROG_OBJC\n+AC_CHECK_TOOL(AR, ar)\n+AC_CHECK_TOOL(RANLIB, ranlib)\n+AC_PATH_PROGS([MOC], [moc moc-qt4], moc, $qt_bin_path:$PATH)\n+AC_PATH_PROGS([UIC], [uic uic-qt4], uic, $qt_bin_path:$PATH)\n+AC_PATH_PROG([RCC], [rcc], rcc, $qt_bin_path:$PATH)\n+AC_PATH_PROG([LRELEASE], [lrelease], lrelease, $qt_bin_path:$PATH)\n+\n+## TODO: Remove these hard-coded paths and flags. They are here for the sake of\n+##       compatibility with the legacy buildsystem.\n+##\n+CXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wformat -Wformat-security -Wno-unused-parameter -frandom-seed=bitcoin\"\n+CPPFLAGS=\"$CPPFLAGS -DBOOST_SPIRIT_THREADSAFE -DHAVE_BUILD_INFO\"\n+DEBUG_CXXFLAGS=\"-g -ggdb\"\n+RELEASE_CXXFLAGS=\"-O2\"\n+\n+use_pkgconfig=yes\n+case $host in\n+  *mingw*)\n+\n+     #pkgconfig does more harm than good with mingw\n+     use_pkgconfig=no\n+\n+     TARGET_OS=windows\n+     AC_CHECK_LIB([mingwthrd],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([kernel32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([user32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([gdi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comdlg32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winspool],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([winmm],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shell32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([comctl32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ole32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([oleaut32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([uuid],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([rpcrt4],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([advapi32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([ws2_32],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([mswsock],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([shlwapi],      [main],, AC_MSG_ERROR(lib missing))\n+     AC_CHECK_LIB([iphlpapi],      [main],, AC_MSG_ERROR(lib missing))\n+     CPPFLAGS=\"$CPPFLAGS -D_MT -DWIN32 -D_WINDOWS -DBOOST_THREAD_USE_LIB\"\n+     LEVELDB_TARGET_FLAGS=\"TARGET_OS=OS_WINDOWS_CROSSCOMPILE\"\n+     CXXFLAGS=\"$CXXFLAGS -w\"\n+     ;;\n+  *darwin*)\n+     TARGET_OS=darwin\n+\n+     if  test x$cross_compiling != xyes; then\n+       AC_CHECK_PROG([PORT],port, port)\n+       if test x$PORT = xport; then\n+         dnl add default macports paths\n+         CPPFLAGS=\"$CPPFLAGS -I/opt/local/include -I/opt/local/include/db48\"\n+         LDFLAGS=\"$LDFLAGS -L/opt/local/lib -L/opt/local/lib/db48\"\n+       fi\n+\n+       AC_CHECK_PROG([BREW],brew, brew)\n+       if test x$BREW = xbrew; then\n+         dnl add default homebrew paths\n+         CPPFLAGS=\"$CPPFLAGS -I/usr/local/opt/berkeley-db4/include\"\n+         LDFLAGS=\"$LDFLAGS -L/usr/local/opt/berkeley-db4/lib\"\n+       fi\n+     fi\n+\n+     if test x$use_qt = xyes; then\n+       MOC_DEFS=\"-DQ_OS_MAC\"\n+       base_frameworks=\"-framework Foundation -framework ApplicationServices -framework AppKit\"\n+       AX_CHECK_LINK_FLAG([$base_frameworks],[LDFLAGS=\"$LDFLAGS $base_frameworks\"],[AC_MSG_ERROR(could not find base frameworks)])\n+     fi\n+\n+     RELEASE_CXXFLAGS=\"$RELEASE_CXXFLAGS -isysroot /Developer/SDKs/MacOSX10.5.sdk -mmacosx-version-min=10.5 -arch i386 -O3\"\n+     CPPFLAGS=\"$CPPFLAGS -DMAC_OSX\"\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+   *)\n+     TESTDEFS=\"-DBOOST_TEST_DYN_LINK\"\n+     ;;\n+esac\n+\n+if test x$use_debug != xno; then\n+  CXXFLAGS=\"$CXXFLAGS $DEBUG_CXXFLAGS\"\n+else\n+  CXXFLAGS=\"$CXXFLAGS $RELEASE_CXXFLAGS\"\n+fi\n+\n+AC_LANG_PUSH([C++])\n+dnl Require little endian\n+AC_C_BIGENDIAN([AC_MSG_ERROR(\"Big Endian not supported\")])\n+\n+dnl Check for pthread compile/link requirements\n+AX_PTHREAD\n+INCLUDES=\"$INCLUDES $PTHREAD_CFLAGS\"\n+\n+AX_CHECK_LINK_FLAG([-Wl,--large-address-aware], [LDFLAGS=\"$LDFLAGS -Wl,--large-address-aware\"])\n+\n+if test x$use_hardening != xno; then\n+  AX_CHECK_COMPILE_FLAG([-Wstack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -Wstack-protector\"])\n+  AX_CHECK_COMPILE_FLAG([-fPIE],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fPIE\"])\n+\n+  AX_CHECK_PREPROC_FLAG([-D_FORTIFY_SOURCE=2],[HARDENED_CPPFLAGS=\"$HARDENED_CPPFLAGS -D_FORTIFY_SOURCE=2\"])\n+\n+  AX_CHECK_LINK_FLAG([-pie], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--dynamicbase], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n+  AX_CHECK_LINK_FLAG([-Wl,--nxcompat], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n+\n+  # -fstack-protector-all can produce broken binaries with mingw\n+  if test x$TARGET_OS != xwindows; then\n+    AX_CHECK_COMPILE_FLAG([-fno-stack-protector],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fno-stack-protector\"])\n+    AX_CHECK_COMPILE_FLAG([-fstack-protector-all],[HARDENED_CXXFLAGS=\"$HARDENED_CXXFLAGS -fstack-protector-all\"])\n+  fi\n+\n+  CXXFLAGS=\"$CXXFLAGS $HARDENED_CXXFLAGS\"\n+  CPPFLAGS=\"$CPPFLAGS $HARDENED_CPPFLAGS\"\n+  LDFLAGS=\"$LDFLAGS $HARDENED_LDFLAGS\"\n+fi\n+\n+dnl this flag screws up non-darwin gcc even when the check fails. special-case it.\n+if test x$TARGET_OS = xdarwin; then\n+  AX_CHECK_LINK_FLAG([-dead-strip], [LDFLAGS=\"$LDFLAGS -dead_strip\"])\n+fi\n+\n+AC_CHECK_HEADERS([stdio.h stdlib.h unistd.h strings.h sys/types.h sys/stat.h])\n+\n+dnl Check for MSG_NOSIGNAL\n+AC_MSG_CHECKING(for MSG_NOSIGNAL)\n+AC_TRY_COMPILE([#include <sys/socket.h>],\n+ [ int f = MSG_NOSIGNAL; ],\n+ [ AC_MSG_RESULT(yes); AC_DEFINE(HAVE_MSG_NOSIGNAL, 1,[Define this symbol if you have MSG_NOSIGNAL]) ],\n+ [ AC_MSG_RESULT(no)]\n+)\n+\n+dnl Check for libdb_cxx\n+AC_CHECK_LIB([db_cxx], [main],, AC_MSG_ERROR(libdb missing))\n+\n+dnl Check for libminiupnpc (optional)\n+if test x$use_upnp != xno; then\n+  AC_CHECK_LIB([miniupnpc], [main],, [have_miniupnpc=no])\n+fi\n+\n+dnl Check for boost libs\n+AX_BOOST_BASE\n+AX_BOOST_SYSTEM\n+AX_BOOST_FILESYSTEM\n+AX_BOOST_PROGRAM_OPTIONS\n+AX_BOOST_THREAD\n+AX_BOOST_UNIT_TEST_FRAMEWORK\n+AX_BOOST_CHRONO\n+BOOST_LIBS=\"$BOOST_LDFLAGS $BOOST_SYSTEM_LIB $BOOST_FILESYSTEM_LIB $BOOST_PROGRAM_OPTIONS_LIB $BOOST_THREAD_LIB\"\n+BOOST_INCLUDES=\"$BOOST_CPPFLAGS\"\n+\n+if test x$TARGET_OS = xwindows; then\n+  BOOST_LIBS=\"$BOOST_LIBS $BOOST_CHRONO_LIB\"\n+fi\n+\n+if test x$use_pkgconfig = xyes; then\n+  : #NOP\n+  m4_ifdef(\n+    [PKG_CHECK_MODULES],\n+    [\n+      PKG_CHECK_MODULES([SSL], [libssl], [INCLUDES=\"$INCLUDES $SSL_CFLAGS\"; LIBS=\"$LIBS $SSL_LIBS\"], [AC_MSG_ERROR(openssl  not found.)])\n+      PKG_CHECK_MODULES([CRYPTO], [libcrypto], [INCLUDES=\"$CRYPTO_CFLAGS\"; LIBS=\"$LIBS $CRYPTO_LIBS\"], [AC_MSG_ERROR(libcrypto  not found.)])\n+\n+      if test x$use_qt = xyes; then\n+        PKG_CHECK_MODULES([QT], [QtCore QtGui QtNetwork], [QT_INCLUDES=\"$QT_CFLAGS\"; have_qt=yes], [have_qt=no])\n+        if test x$use_tests = xyes; then\n+          PKG_CHECK_MODULES([QT_TEST], [QtTest], [QT_TEST_INCLUDES=\"$QT_TEST_CFLAGS\"; have_qt_test=yes], [have_qt_test=no])\n+        fi\n+        if test x$use_dbus != xno; then\n+          PKG_CHECK_MODULES([QT_DBUS], [QtDBus], [QT_DBUS_INCLUDES=\"$QT_DBUS_CFLAGS\"; have_qt_dbus=yes], [have_qt_dbus=no])\n+        fi\n+      fi\n+      if test x$use_qr != xno; then\n+        PKG_CHECK_MODULES([QR], [libqrencode], [INCLUDES=\"$QR_CFLAGS\"; LIBS=\"$LIBS $QR_LIBS\"; have_qrencode=yes], [have_qrencode=no])\n+      fi\n+    ]\n+  )\n+else\n+    AC_CHECK_HEADER([openssl/crypto.h],,AC_MSG_ERROR(libcrypto headers missing))\n+    AC_CHECK_LIB([crypto],      [main],, AC_MSG_ERROR(libcrypto missing))\n+\n+    AC_CHECK_HEADER([openssl/ssl.h],, AC_MSG_ERROR(libssl headers missing),)\n+    AC_CHECK_LIB([ssl],         [main],, AC_MSG_ERROR(libssl missing))\n+\n+      TEMP_LIBS=\"$LIBS\"\n+      LIBS=\n+      if test x$qt_lib_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_lib_path\"\n+        LIBS=\"$QT_LIBS\"\n+      fi\n+      if test x$qt_plugin_path != x; then\n+        QT_LIBS=\"$QT_LIBS -L$qt_plugin_path/codecs\"\n+        LIBS=\"$QT_LIBS\"\n+      fi\n+      AC_CHECK_LIB([qcncodecs],      [main],, AC_MSG_ERROR(libqcncodecs not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([qjpcodecs],      [main],, AC_MSG_ERROR(libqjpcodecs not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([qkrcodecs],      [main],, AC_MSG_ERROR(libqkrcodecs not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([qtwcodecs],      [main],, AC_MSG_ERROR(libqtwcodecs not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([imm32],      [main],, AC_MSG_ERROR(libimm32 not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([QtCore],      [main],, AC_MSG_ERROR(libQtCore not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([QtGui],      [main],, AC_MSG_ERROR(libQtGui not found. Install it or use --disable-qt.))\n+      AC_CHECK_LIB([QtNetwork],      [main],, AC_MSG_ERROR(libQtNetwork not found. Install it or use --disable-qt.))\n+      QT_LIBS=\"$LIBS\"\n+      LIBS=\"$TEMP_LIBS\"\n+\n+      TEMP_CPPFLAGS=\"$CPPFLAGS\"\n+      if test x$qt_include_path != x; then\n+        QT_INCLUDES=\"-I$qt_include_path -I$qt_include_path/QtCore -I$qt_include_path/QtGui -I$qt_include_path/QtNetwork -I$qt_include_path/QtTest -I$qt_include_path/QtDBus\"\n+        CPPFLAGS=\"$CPPFLAGS $QT_INCLUDES\"\n+      fi\n+      AC_CHECK_HEADER([QtPlugin],, AC_MSG_ERROR(QtCore headers missing. Install them or use --disable-qt.),)\n+      AC_CHECK_HEADER([QApplication],, AC_MSG_ERROR(QtGUI headers missing. Install them or use --disable-qt.),)\n+      AC_CHECK_HEADER([QLocalSocket],, AC_MSG_ERROR(QtNetwork headers missing. Install them or use --disable-qt.),)\n+\n+      if test x$use_tests = xyes; then\n+        TEMP_LIBS=\"$LIBS\"\n+        LIBS=\n+        if test x$qt_lib_path != x; then\n+          LIBS=\"-L$qt_lib_path\"\n+        fi\n+        AC_CHECK_LIB([QtTest],      [main],, have_qt_test=no)\n+        AC_CHECK_HEADER([QTest],, have_qt_test=no)\n+        QT_TEST_LIBS=\"$LIBS\"\n+        LIBS=\"$TEMP_LIBS\"\n+      fi\n+      if test x$use_dbus != xno; then\n+        TEMP_LIBS=\"$LIBS\"\n+        LIBS=\n+        if test x$qt_lib_path != x; then\n+          LIBS=\"-L$qt_lib_path\"\n+        fi\n+        AC_CHECK_LIB([QtDBus],      [main],, have_qt_dbus=no)\n+        AC_CHECK_HEADER([QtDBus],, have_qt_dbus=no)\n+        QT_DBUS_LIBS=\"$LIBS\"\n+        LIBS=\"$TEMP_LIBS\"\n+      fi\n+      if test x$use_qr != xno; then\n+        AC_CHECK_LIB([qrencode], [main],, [have_qrencode=no])\n+        AC_CHECK_HEADER([qrencode.h],, have_qrencode=no)\n+      fi\n+      CPPFLAGS=\"$TEMP_CPPFLAGS\"\n+      AC_LANG_POP\n+fi\n+\n+if test x$use_ipv6 = xyes; then\n+  dnl Check for ipv6 build requirements\n+  AC_MSG_CHECKING(for IPV6 build support)\n+  AC_TRY_LINK([\n+  #if defined(_WINDOWS)\n+  #include <winsock2.h>\n+  #else\n+  #include <sys/types.h>\n+  #include <sys/socket.h>\n+  #include <netinet/in.h>\n+  #endif\n+  ],[\n+  #if !defined(_WINDOWS)\n+  struct in6_addr ipv6Addr;\n+  struct sockaddr_in6 addr;\n+  #endif\n+  int temp = socket(AF_INET6, SOCK_STREAM, 0);],\n+  [AC_MSG_RESULT(yes); have_ipv6=yes; AC_DEFINE(HAVE_IPV6, 1, [Define this symbol if you have ipv6 build support])],\n+  [AC_MSG_RESULT(no)]; have_ipv6=no)\n+fi\n+\n+dnl enable ipv6 support\n+AC_MSG_CHECKING([if ipv6 can be enabled])\n+if test x$have_ipv6 = xno; then\n+  if test x$use_ipv6 = xyes; then\n+     AC_MSG_ERROR(\"ipv6 requested but cannot be built. use --disable-ipv6\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_ipv6 = xyes; then\n+      AC_MSG_RESULT(yes)\n+      AC_DEFINE([USE_IPV6],[1],[Define if ipv6 support should be compiled in])\n+  else\n+      AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable qr support\n+AC_MSG_CHECKING([if qr can be enabled])\n+if test x$have_qrencode = xno; then\n+  if test x$use_qr != xno; then\n+     AC_MSG_ERROR(\"QR support requested but cannot be built. use --disable-qr\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_qr != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_DEFINE([USE_QRCODE],[1],[Define if QR support should be compiled in])\n+    use_qr=yes\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable upnp support\n+AC_MSG_CHECKING([if upnp can be enabled])\n+if test x$have_miniupnpc = xno; then\n+  if test x$use_upnp = xyes; then\n+     AC_MSG_ERROR(\"upnp requested but cannot be built. use --disable-upnp\")\n+  fi\n+  AC_MSG_RESULT(no)\n+else\n+  if test x$use_upnp != xno; then\n+    AC_MSG_RESULT(yes)\n+    AC_MSG_CHECKING([if upnp should be on by default])\n+    use_upnp=yes\n+    upnp_setting=0\n+    if test x$use_upnp_default != xno; then\n+      use_upnp_default=yes\n+      upnp_setting=1\n+    fi\n+    AC_MSG_RESULT($use_upnp_default)\n+    AC_DEFINE_UNQUOTED([USE_UPNP],[$upnp_setting],[Define to 1 for upnp runtime support])\n+    if test x$TARGET_OS = xwindows; then\n+      CPPFLAGS=\"$CPPFLAGS -DSTATICLIB\"\n+    fi\n+  else\n+    AC_MSG_RESULT(no)\n+  fi\n+fi\n+\n+dnl enable qt support\n+AC_MSG_CHECKING([if qt can be enabled])\n+if test x$use_qt = xyes; then\n+  if test x$have_qt = xno; then\n+     AC_MSG_ERROR(\"qt support requested but qt could not be located. use --disable-qt\")\n+  fi\n+  if test x$MOC = x; then\n+    AC_MSG_ERROR(\"qt support requested but moc was not found. use --disable-qt\")\n+  fi\n+  if test x$UIC = x; then\n+    AC_MSG_WARN(\"qt support requested but uic was not found.\")\n+  fi\n+  if test x$RCC = x; then\n+    AC_MSG_WARN(\"qt support requested but rcc was not found.\")\n+  fi\n+  if test x$LRELEASE = x; then\n+    AC_MSG_WARN(\"qt support requested but lrelease was not found.\")\n+  fi\n+  if test x$use_tests = xyes; then\n+    if test x$have_qt_test = xno; then\n+      AC_MSG_ERROR(\"libQtTest not found. Use --disable-tests or --disable-qt.\")\n+    fi\n+  fi\n+  if test x$have_qt_dbus = xno;  then\n+    if test x$use_dbus = xyes; then\n+      AC_MSG_ERROR(\"libQtDBus not found. Use --disable-dbus.\")\n+    else\n+      use_dbus=no\n+    fi\n+  fi\n+fi\n+\n+AC_MSG_RESULT($use_qt)\n+\n+AC_MSG_CHECKING([if dbus can be enabled])\n+if test x$use_dbus != xno; then\n+  use_dbus=yes\n+  AC_DEFINE([USE_DBUS],[1],[Define if dbus support should be compiled in])\n+fi\n+AC_MSG_RESULT($use_dbus)\n+\n+\n+if test x$use_tests = xyes; then\n+  BUILD_TEST_PROGRAMS=\"$BUILD_TEST_PROGRAMS test_bitcoin${EXEEXT}\"\n+  if test x$use_qt = xyes; then\n+    BUILD_TEST_PROGRAMS=\"$BUILD_TEST_PROGRAMS test_bitcoin-qt${EXEEXT}\"\n+  fi\n+fi\n+\n+AM_CONDITIONAL([BUILD_QT], [test x$use_qt = xyes])\n+AM_CONDITIONAL([TARGET_DARWIN], [test x$TARGET_OS = xdarwin])\n+AM_CONDITIONAL([USE_QRCODE], [test x$use_qr = xyes])\n+\n+AC_DEFINE(CLIENT_VERSION_MAJOR, _CLIENT_VERSION_MAJOR, [Major version])\n+AC_DEFINE(CLIENT_VERSION_MINOR, _CLIENT_VERSION_MINOR, [Minor version])\n+AC_DEFINE(CLIENT_VERSION_REVISION, _CLIENT_VERSION_REVISION, [Build revision])\n+AC_DEFINE(CLIENT_VERSION_BUILD, _CLIENT_VERSION_BUILD, [Version Build])\n+AC_DEFINE(CLIENT_VERSION_IS_RELEASE, _CLIENT_VERSION_IS_RELEASE, [Version is release])\n+AC_DEFINE(COPYRIGHT_YEAR, _COPYRIGHT_YEAR, [Version is release])\n+\n+AC_SUBST(USE_UPNP)\n+AC_SUBST(USE_QRCODE)\n+AC_SUBST(USE_IPV6)\n+AC_SUBST(INCLUDES)\n+AC_SUBST(BOOST_LIBS)\n+AC_SUBST(MOC_DEFS)\n+AC_SUBST(QT_INCLUDES)\n+AC_SUBST(QT_TEST_LIBS)\n+AC_SUBST(QT_LIBS)\n+AC_SUBST(QT_DBUS_LIBS)\n+AC_SUBST(QT_DBUS_INCLUDES)\n+AC_SUBST(QT_TEST_INCLUDES)\n+AC_SUBST(TESTDEFS)\n+AC_SUBST(LEVELDB_TARGET_FLAGS)\n+AC_SUBST(BUILD_TEST_PROGRAMS)\n+AC_CONFIG_FILES([Makefile])\n+AC_CONFIG_COMMANDS([build.h], [../share/genbuild.sh obj/build.h])\n+AC_OUTPUT"
      },
      {
        "sha": "54a2a1bee74e97f9c20eae32667dc6cf66c05bdd",
        "filename": "src/m4/ax_boost_base.m4",
        "status": "added",
        "additions": 258,
        "deletions": 0,
        "changes": 258,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_base.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_base.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_base.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,258 @@\n+# ===========================================================================\n+#       http://www.gnu.org/software/autoconf-archive/ax_boost_base.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_BASE([MINIMUM-VERSION], [ACTION-IF-FOUND], [ACTION-IF-NOT-FOUND])\n+#\n+# DESCRIPTION\n+#\n+#   Test for the Boost C++ libraries of a particular version (or newer)\n+#\n+#   If no path to the installed boost library is given the macro searchs\n+#   under /usr, /usr/local, /opt and /opt/local and evaluates the\n+#   $BOOST_ROOT environment variable. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CPPFLAGS) / AC_SUBST(BOOST_LDFLAGS)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Peter Adolphs\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_BASE],\n+[\n+AC_ARG_WITH([boost],\n+  [AS_HELP_STRING([--with-boost@<:@=ARG@:>@],\n+    [use Boost library from a standard location (ARG=yes),\n+     from the specified location (ARG=<path>),\n+     or disable it (ARG=no)\n+     @<:@ARG=yes@:>@ ])],\n+    [\n+    if test \"$withval\" = \"no\"; then\n+        want_boost=\"no\"\n+    elif test \"$withval\" = \"yes\"; then\n+        want_boost=\"yes\"\n+        ac_boost_path=\"\"\n+    else\n+        want_boost=\"yes\"\n+        ac_boost_path=\"$withval\"\n+    fi\n+    ],\n+    [want_boost=\"yes\"])\n+\n+\n+AC_ARG_WITH([boost-libdir],\n+        AS_HELP_STRING([--with-boost-libdir=LIB_DIR],\n+        [Force given directory for boost libraries. Note that this will override library path detection, so use this parameter only if default library detection fails and you know exactly where your boost libraries are located.]),\n+        [\n+        if test -d \"$withval\"\n+        then\n+                ac_boost_lib_path=\"$withval\"\n+        else\n+                AC_MSG_ERROR(--with-boost-libdir expected directory name)\n+        fi\n+        ],\n+        [ac_boost_lib_path=\"\"]\n+)\n+\n+if test \"x$want_boost\" = \"xyes\"; then\n+    boost_lib_version_req=ifelse([$1], ,1.20.0,$1)\n+    boost_lib_version_req_shorten=`expr $boost_lib_version_req : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+    boost_lib_version_req_major=`expr $boost_lib_version_req : '\\([[0-9]]*\\)'`\n+    boost_lib_version_req_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    boost_lib_version_req_sub_minor=`expr $boost_lib_version_req : '[[0-9]]*\\.[[0-9]]*\\.\\([[0-9]]*\\)'`\n+    if test \"x$boost_lib_version_req_sub_minor\" = \"x\" ; then\n+        boost_lib_version_req_sub_minor=\"0\"\n+        fi\n+    WANT_BOOST_VERSION=`expr $boost_lib_version_req_major \\* 100000 \\+  $boost_lib_version_req_minor \\* 100 \\+ $boost_lib_version_req_sub_minor`\n+    AC_MSG_CHECKING(for boostlib >= $boost_lib_version_req)\n+    succeeded=no\n+\n+    dnl On 64-bit systems check for system libraries in both lib64 and lib.\n+    dnl The former is specified by FHS, but e.g. Debian does not adhere to\n+    dnl this (as it rises problems for generic multi-arch support).\n+    dnl The last entry in the list is chosen by default when no libraries\n+    dnl are found, e.g. when only header-only libraries are installed!\n+    libsubdirs=\"lib\"\n+    ax_arch=`uname -m`\n+    if test $ax_arch = x86_64 -o $ax_arch = ppc64 -o $ax_arch = s390x -o $ax_arch = sparc64; then\n+        libsubdirs=\"lib64 lib lib64\"\n+    fi\n+\n+    dnl first we check the system location for boost libraries\n+    dnl this location ist chosen if boost libraries are installed with the --layout=system option\n+    dnl or if you install boost with RPM\n+    if test \"$ac_boost_path\" != \"\"; then\n+        BOOST_CPPFLAGS=\"-I$ac_boost_path/include\"\n+        for ac_boost_path_tmp in $libsubdirs; do\n+                if test -d \"$ac_boost_path\"/\"$ac_boost_path_tmp\" ; then\n+                        BOOST_LDFLAGS=\"-L$ac_boost_path/$ac_boost_path_tmp\"\n+                        break\n+                fi\n+        done\n+    elif test \"$cross_compiling\" != yes; then\n+        for ac_boost_path_tmp in /usr /usr/local /opt /opt/local ; do\n+            if test -d \"$ac_boost_path_tmp/include/boost\" && test -r \"$ac_boost_path_tmp/include/boost\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$ac_boost_path_tmp/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                BOOST_LDFLAGS=\"-L$ac_boost_path_tmp/$libsubdir\"\n+                BOOST_CPPFLAGS=\"-I$ac_boost_path_tmp/include\"\n+                break;\n+            fi\n+        done\n+    fi\n+\n+    dnl overwrite ld flags if we have required special directory with\n+    dnl --with-boost-libdir parameter\n+    if test \"$ac_boost_lib_path\" != \"\"; then\n+       BOOST_LDFLAGS=\"-L$ac_boost_lib_path\"\n+    fi\n+\n+    CPPFLAGS_SAVED=\"$CPPFLAGS\"\n+    CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+    export CPPFLAGS\n+\n+    LDFLAGS_SAVED=\"$LDFLAGS\"\n+    LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+    export LDFLAGS\n+\n+    AC_REQUIRE([AC_PROG_CXX])\n+    AC_LANG_PUSH(C++)\n+        AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+    @%:@include <boost/version.hpp>\n+    ]], [[\n+    #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+    // Everything is okay\n+    #else\n+    #  error Boost version is too old\n+    #endif\n+    ]])],[\n+        AC_MSG_RESULT(yes)\n+    succeeded=yes\n+    found_system=yes\n+        ],[\n+        ])\n+    AC_LANG_POP([C++])\n+\n+\n+\n+    dnl if we found no boost with system layout we search for boost libraries\n+    dnl built and installed without the --layout=system option or for a staged(not installed) version\n+    if test \"x$succeeded\" != \"xyes\"; then\n+        _version=0\n+        if test \"$ac_boost_path\" != \"\"; then\n+            if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                    _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                    V_CHECK=`expr $_version_tmp \\> $_version`\n+                    if test \"$V_CHECK\" = \"1\" ; then\n+                        _version=$_version_tmp\n+                    fi\n+                    VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                    BOOST_CPPFLAGS=\"-I$ac_boost_path/include/boost-$VERSION_UNDERSCORE\"\n+                done\n+            fi\n+        else\n+            if test \"$cross_compiling\" != yes; then\n+                for ac_boost_path in /usr /usr/local /opt /opt/local ; do\n+                    if test -d \"$ac_boost_path\" && test -r \"$ac_boost_path\"; then\n+                        for i in `ls -d $ac_boost_path/include/boost-* 2>/dev/null`; do\n+                            _version_tmp=`echo $i | sed \"s#$ac_boost_path##\" | sed 's/\\/include\\/boost-//' | sed 's/_/./'`\n+                            V_CHECK=`expr $_version_tmp \\> $_version`\n+                            if test \"$V_CHECK\" = \"1\" ; then\n+                                _version=$_version_tmp\n+                                best_path=$ac_boost_path\n+                            fi\n+                        done\n+                    fi\n+                done\n+\n+                VERSION_UNDERSCORE=`echo $_version | sed 's/\\./_/'`\n+                BOOST_CPPFLAGS=\"-I$best_path/include/boost-$VERSION_UNDERSCORE\"\n+                if test \"$ac_boost_lib_path\" = \"\"; then\n+                    for libsubdir in $libsubdirs ; do\n+                        if ls \"$best_path/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                    done\n+                    BOOST_LDFLAGS=\"-L$best_path/$libsubdir\"\n+                fi\n+            fi\n+\n+            if test \"x$BOOST_ROOT\" != \"x\"; then\n+                for libsubdir in $libsubdirs ; do\n+                    if ls \"$BOOST_ROOT/stage/$libsubdir/libboost_\"* >/dev/null 2>&1 ; then break; fi\n+                done\n+                if test -d \"$BOOST_ROOT\" && test -r \"$BOOST_ROOT\" && test -d \"$BOOST_ROOT/stage/$libsubdir\" && test -r \"$BOOST_ROOT/stage/$libsubdir\"; then\n+                    version_dir=`expr //$BOOST_ROOT : '.*/\\(.*\\)'`\n+                    stage_version=`echo $version_dir | sed 's/boost_//' | sed 's/_/./g'`\n+                        stage_version_shorten=`expr $stage_version : '\\([[0-9]]*\\.[[0-9]]*\\)'`\n+                    V_CHECK=`expr $stage_version_shorten \\>\\= $_version`\n+                    if test \"$V_CHECK\" = \"1\" -a \"$ac_boost_lib_path\" = \"\" ; then\n+                        AC_MSG_NOTICE(We will use a staged boost library from $BOOST_ROOT)\n+                        BOOST_CPPFLAGS=\"-I$BOOST_ROOT\"\n+                        BOOST_LDFLAGS=\"-L$BOOST_ROOT/stage/$libsubdir\"\n+                    fi\n+                fi\n+            fi\n+        fi\n+\n+        CPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+        export CPPFLAGS\n+        LDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+        export LDFLAGS\n+\n+        AC_LANG_PUSH(C++)\n+            AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n+        @%:@include <boost/version.hpp>\n+        ]], [[\n+        #if BOOST_VERSION >= $WANT_BOOST_VERSION\n+        // Everything is okay\n+        #else\n+        #  error Boost version is too old\n+        #endif\n+        ]])],[\n+            AC_MSG_RESULT(yes)\n+        succeeded=yes\n+        found_system=yes\n+            ],[\n+            ])\n+        AC_LANG_POP([C++])\n+    fi\n+\n+    if test \"$succeeded\" != \"yes\" ; then\n+        if test \"$_version\" = \"0\" ; then\n+            AC_MSG_NOTICE([[We could not detect the boost libraries (version $boost_lib_version_req_shorten or higher). If you have a staged boost library (still not installed) please specify \\$BOOST_ROOT in your environment and do not give a PATH to --with-boost option.  If you are sure you have boost installed, then check your version number looking in <boost/version.hpp>. See http://randspringer.de/boost for more documentation.]])\n+        else\n+            AC_MSG_NOTICE([Your boost libraries seems to old (version $_version).])\n+        fi\n+        # execute ACTION-IF-NOT-FOUND (if present):\n+        ifelse([$3], , :, [$3])\n+    else\n+        AC_SUBST(BOOST_CPPFLAGS)\n+        AC_SUBST(BOOST_LDFLAGS)\n+        AC_DEFINE(HAVE_BOOST,,[define if the Boost library is available])\n+        # execute ACTION-IF-FOUND (if present):\n+        ifelse([$2], , :, [$2])\n+    fi\n+\n+    CPPFLAGS=\"$CPPFLAGS_SAVED\"\n+    LDFLAGS=\"$LDFLAGS_SAVED\"\n+fi\n+\n+])"
      },
      {
        "sha": "9b3958ec74d2c32a02a0d32b7b23cba46e9fc383",
        "filename": "src/m4/ax_boost_chrono.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_chrono.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_chrono.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_chrono.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_chrono.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_CHRONO\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_CHRONO_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_CHRONO\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2012 Xiyue Deng <manphiz@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 1\n+\n+AC_DEFUN([AX_BOOST_CHRONO],\n+[\n+\tAC_ARG_WITH([boost-chrono],\n+\tAS_HELP_STRING([--with-boost-chrono@<:@=special-lib@:>@],\n+                   [use the Chrono library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-chrono=boost_chrono-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_chrono_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_chrono_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Chrono library is available,\n+\t\t\t\t\t   ax_cv_boost_chrono,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/chrono.hpp>]],\n+                                   [[boost::chrono::system_clock::time_point time;]])],\n+                   ax_cv_boost_chrono=yes, ax_cv_boost_chrono=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_chrono\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_CHRONO,,[define if the Boost::Chrono library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_chrono_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_chrono*.so* $BOOSTLIBDIR/libboost_chrono*.dylib* $BOOSTLIBDIR/libboost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_chrono.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_chrono\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_chrono*.dll* $BOOSTLIBDIR/boost_chrono*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_chrono.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_chrono.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                 [link_chrono=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_chrono_lib boost_chrono-$ax_boost_user_chrono_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_CHRONO_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_CHRONO_LIB) link_chrono=\"yes\"; break],\n+                                   [link_chrono=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_chrono\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "2a62da8d89f9e284edbe4f00a0988cc984dce23d",
        "filename": "src/m4/ax_boost_filesystem.m4",
        "status": "added",
        "additions": 118,
        "deletions": 0,
        "changes": 118,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_filesystem.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_filesystem.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_filesystem.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,118 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_boost_filesystem.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_FILESYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for Filesystem library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_FILESYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_FILESYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#   Copyright (c) 2009 Roman Rybalko <libtorrent@romanr.info>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 21\n+\n+AC_DEFUN([AX_BOOST_FILESYSTEM],\n+[\n+\tAC_ARG_WITH([boost-filesystem],\n+\tAS_HELP_STRING([--with-boost-filesystem@<:@=special-lib@:>@],\n+                   [use the Filesystem library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-filesystem=boost_filesystem-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_filesystem_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_filesystem_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+\t\tLIBS_SAVED=$LIBS\n+\t\tLIBS=\"$LIBS $BOOST_SYSTEM_LIB\"\n+\t\texport LIBS\n+\n+        AC_CACHE_CHECK(whether the Boost::Filesystem library is available,\n+\t\t\t\t\t   ax_cv_boost_filesystem,\n+        [AC_LANG_PUSH([C++])\n+         AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/filesystem/path.hpp>]],\n+                                   [[using namespace boost::filesystem;\n+                                   path my_path( \"foo/bar/data.txt\" );\n+                                   return 0;]])],\n+\t\t\t\t\t       ax_cv_boost_filesystem=yes, ax_cv_boost_filesystem=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_filesystem\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_FILESYSTEM,,[define if the Boost::Filesystem library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+            if test \"x$ax_boost_user_filesystem_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_filesystem*.so* $BOOSTLIBDIR/libboost_filesystem*.dylib* $BOOSTLIBDIR/libboost_filesystem*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_filesystem.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.a*$;\\1;' -e 's;^lib\\(boost_filesystem.*\\)\\.dylib$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_filesystem*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_filesystem.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_filesystem.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                 [link_filesystem=\"no\"])\n+\t\t\t\tdone\n+\t\t    fi\n+            else\n+               for ax_lib in $ax_boost_user_filesystem_lib boost_filesystem-$ax_boost_user_filesystem_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_FILESYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_FILESYSTEM_LIB) link_filesystem=\"yes\"; break],\n+                                   [link_filesystem=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_filesystem\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\t\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\t\tLIBS=\"$LIBS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d612f91da36a2d55f8676f958cb46397c4509135",
        "filename": "src/m4/ax_boost_program_options.m4",
        "status": "added",
        "additions": 108,
        "deletions": 0,
        "changes": 108,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_program_options.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_program_options.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_program_options.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,108 @@\n+# ============================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_program_options.html\n+# ============================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_PROGRAM_OPTIONS\n+#\n+# DESCRIPTION\n+#\n+#   Test for program options library from the Boost C++ libraries. The macro\n+#   requires a preceding call to AX_BOOST_BASE. Further documentation is\n+#   available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_PROGRAM_OPTIONS\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 20\n+\n+AC_DEFUN([AX_BOOST_PROGRAM_OPTIONS],\n+[\n+\tAC_ARG_WITH([boost-program-options],\n+\t\tAS_HELP_STRING([--with-boost-program-options@<:@=special-lib@:>@],\n+                       [use the program options library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-program-options=boost_program_options-gcc-mt-1_33_1 ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_program_options_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_program_options_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t    export want_boost\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\t\tAC_CACHE_CHECK([whether the Boost::Program_Options library is available],\n+\t\t\t\t\t   ax_cv_boost_program_options,\n+\t\t\t\t\t   [AC_LANG_PUSH(C++)\n+\t\t\t\tAC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/program_options.hpp>\n+                                                          ]],\n+                                  [[boost::program_options::options_description generic(\"Generic options\");\n+                                   return 0;]])],\n+                           ax_cv_boost_program_options=yes, ax_cv_boost_program_options=no)\n+\t\t\t\t\tAC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"$ax_cv_boost_program_options\" = yes; then\n+\t\t\t\tAC_DEFINE(HAVE_BOOST_PROGRAM_OPTIONS,,[define if the Boost::PROGRAM_OPTIONS library is available])\n+                  BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+                if test \"x$ax_boost_user_program_options_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_program_options*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_program_options\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_program_options*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_program_options*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_program_options.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                 [link_program_options=\"no\"])\n+\t\t\t\tdone\n+                fi\n+                else\n+                  for ax_lib in $ax_boost_user_program_options_lib boost_program_options-$ax_boost_user_program_options_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, main,\n+                                   [BOOST_PROGRAM_OPTIONS_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_PROGRAM_OPTIONS_LIB) link_program_options=\"yes\"; break],\n+                                   [link_program_options=\"no\"])\n+                  done\n+                fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t\tif test \"x$link_program_options\" != \"xyes\"; then\n+\t\t\t\t\tAC_MSG_ERROR([Could not link against [$ax_lib] !])\n+\t\t\t\tfi\n+\t\tfi\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "7fbf6d360d7f2ab8e9811ce0cfb6d40cef64ed17",
        "filename": "src/m4/ax_boost_system.m4",
        "status": "added",
        "additions": 120,
        "deletions": 0,
        "changes": 120,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_system.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_system.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_system.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,120 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_system.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_SYSTEM\n+#\n+# DESCRIPTION\n+#\n+#   Test for System library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_SYSTEM_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_SYSTEM\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2008 Michael Tindal\n+#   Copyright (c) 2008 Daniel Casimiro <dan.casimiro@gmail.com>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 14\n+\n+AC_DEFUN([AX_BOOST_SYSTEM],\n+[\n+\tAC_ARG_WITH([boost-system],\n+\tAS_HELP_STRING([--with-boost-system@<:@=special-lib@:>@],\n+                   [use the System library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-system=boost_system-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_system_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_system_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::System library is available,\n+\t\t\t\t\t   ax_cv_boost_system,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/system/error_code.hpp>]],\n+                                   [[boost::system::system_category]])],\n+                   ax_cv_boost_system=yes, ax_cv_boost_system=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_system\" = \"xyes\"; then\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_SYSTEM,,[define if the Boost::System library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+            if test \"x$ax_boost_user_system_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_system*.so* $BOOSTLIBDIR/libboost_system*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_system.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_system\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_system*.{dll,a}* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_system.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_system.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                 [link_system=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_system_lib boost_system-$ax_boost_user_system_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_SYSTEM_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_SYSTEM_LIB) link_system=\"yes\"; break],\n+                                   [link_system=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_system\" = \"xno\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "d9cd8a1d1d4bf04e121976a9989dccf4b5c88a38",
        "filename": "src/m4/ax_boost_thread.m4",
        "status": "added",
        "additions": 153,
        "deletions": 0,
        "changes": 153,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_thread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_thread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_thread.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,153 @@\n+# ===========================================================================\n+#      http://www.gnu.org/software/autoconf-archive/ax_boost_thread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_THREAD\n+#\n+# DESCRIPTION\n+#\n+#   Test for Thread library from the Boost C++ libraries. The macro requires\n+#   a preceding call to AX_BOOST_BASE. Further documentation is available at\n+#   <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_THREAD_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_THREAD\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2009 Thomas Porschberg <thomas@randspringer.de>\n+#   Copyright (c) 2009 Michael Tindal\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 22\n+\n+AC_DEFUN([AX_BOOST_THREAD],\n+[\n+\tAC_ARG_WITH([boost-thread],\n+\tAS_HELP_STRING([--with-boost-thread@<:@=special-lib@:>@],\n+                   [use the Thread library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-thread=boost_thread-gcc-mt ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_thread_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_thread_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+        AC_REQUIRE([AC_CANONICAL_BUILD])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Thread library is available,\n+\t\t\t\t\t   ax_cv_boost_thread,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t CXXFLAGS_SAVE=$CXXFLAGS\n+\n+\t\t\t # let us handle platform dependent issues in\n+\t\t\t # configure.ac\n+\n+\t\t\t # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t\t\t # \t CXXFLAGS=\"-pthreads $CXXFLAGS\"\n+\t\t\t # elif test \"x$build_os\" = \"xming32\" ; then\n+\t\t\t # \t CXXFLAGS=\"-mthreads $CXXFLAGS\"\n+\t\t\t # else\n+\t\t\t # \tCXXFLAGS=\"-pthread $CXXFLAGS\"\n+\t\t\t # fi\n+\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/thread/thread.hpp>]],\n+                                   [[boost::thread_group thrds;\n+                                   return 0;]])],\n+                   ax_cv_boost_thread=yes, ax_cv_boost_thread=no)\n+\t\t\t CXXFLAGS=$CXXFLAGS_SAVE\n+             AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_thread\" = \"xyes\"; then\n+           # if test \"x$build_os\" = \"xsolaris\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthreads $BOOST_CPPFLAGS\"\n+\t   # \t   elif test \"x$build_os\" = \"xming32\" ; then\n+\t   # \t\t  BOOST_CPPFLAGS=\"-mthreads $BOOST_CPPFLAGS\"\n+\t   # \t   else\n+\t   # \t\t  BOOST_CPPFLAGS=\"-pthread $BOOST_CPPFLAGS\"\n+\t   # \t   fi\n+\n+\t\t\tAC_SUBST(BOOST_CPPFLAGS)\n+\n+\t\t\tAC_DEFINE(HAVE_BOOST_THREAD,,[define if the Boost::Thread library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+\t\t\tLDFLAGS_SAVE=$LDFLAGS\n+                        # case \"x$build_os\" in\n+                        #   *bsd* )\n+                        #        LDFLAGS=\"-pthread $LDFLAGS\"\n+                        #   break;\n+                        #   ;;\n+                        # esac\n+            if test \"x$ax_boost_user_thread_lib\" = \"x\"; then\n+                for libextension in `ls $BOOSTLIBDIR/libboost_thread*.so* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.so.*$;\\1;'` `ls $BOOSTLIBDIR/libboost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^lib\\(boost_thread.*\\)\\.a*$;\\1;'`; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                if test \"x$link_thread\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_thread*.dll* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.dll.*$;\\1;'` `ls $BOOSTLIBDIR/boost_thread*.a* 2>/dev/null | sed 's,.*/,,' | sed -e 's;^\\(boost_thread.*\\)\\.a*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                 [link_thread=\"no\"])\n+\t\t\t\tdone\n+                fi\n+\n+            else\n+               for ax_lib in $ax_boost_user_thread_lib boost_thread-$ax_boost_user_thread_lib; do\n+\t\t\t\t      AC_CHECK_LIB($ax_lib, exit,\n+                                   [BOOST_THREAD_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_THREAD_LIB) link_thread=\"yes\"; break],\n+                                   [link_thread=\"no\"])\n+                  done\n+\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\t# if test \"x$link_thread\" = \"xno\"; then\n+\t\t\t# \tAC_MSG_ERROR(Could not link against $ax_lib !)\n+                        # else\n+                        #    case \"x$build_os\" in\n+                        #       *bsd* )\n+\t\t\t# \tBOOST_LDFLAGS=\"-pthread $BOOST_LDFLAGS\"\n+                        #       break;\n+                        #       ;;\n+                        #    esac\n+\n+\t\t\t# fi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "1115f551212ae50807a3ae7aefe9477418a0103e",
        "filename": "src/m4/ax_boost_unit_test_framework.m4",
        "status": "added",
        "additions": 137,
        "deletions": 0,
        "changes": 137,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_unit_test_framework.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_boost_unit_test_framework.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_boost_unit_test_framework.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,137 @@\n+# ================================================================================\n+#  http://www.gnu.org/software/autoconf-archive/ax_boost_unit_test_framework.html\n+# ================================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# DESCRIPTION\n+#\n+#   Test for Unit_Test_Framework library from the Boost C++ libraries. The\n+#   macro requires a preceding call to AX_BOOST_BASE. Further documentation\n+#   is available at <http://randspringer.de/boost/index.html>.\n+#\n+#   This macro calls:\n+#\n+#     AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+#\n+#   And sets:\n+#\n+#     HAVE_BOOST_UNIT_TEST_FRAMEWORK\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Thomas Porschberg <thomas@randspringer.de>\n+#\n+#   Copying and distribution of this file, with or without modification, are\n+#   permitted in any medium without royalty provided the copyright notice\n+#   and this notice are preserved. This file is offered as-is, without any\n+#   warranty.\n+\n+#serial 19\n+\n+AC_DEFUN([AX_BOOST_UNIT_TEST_FRAMEWORK],\n+[\n+\tAC_ARG_WITH([boost-unit-test-framework],\n+\tAS_HELP_STRING([--with-boost-unit-test-framework@<:@=special-lib@:>@],\n+                   [use the Unit_Test_Framework library from boost - it is possible to specify a certain library for the linker\n+                        e.g. --with-boost-unit-test-framework=boost_unit_test_framework-gcc ]),\n+        [\n+        if test \"$withval\" = \"no\"; then\n+\t\t\twant_boost=\"no\"\n+        elif test \"$withval\" = \"yes\"; then\n+            want_boost=\"yes\"\n+            ax_boost_user_unit_test_framework_lib=\"\"\n+        else\n+\t\t    want_boost=\"yes\"\n+\t\tax_boost_user_unit_test_framework_lib=\"$withval\"\n+\t\tfi\n+        ],\n+        [want_boost=\"yes\"]\n+\t)\n+\n+\tif test \"x$want_boost\" = \"xyes\"; then\n+        AC_REQUIRE([AC_PROG_CC])\n+\t\tCPPFLAGS_SAVED=\"$CPPFLAGS\"\n+\t\tCPPFLAGS=\"$CPPFLAGS $BOOST_CPPFLAGS\"\n+\t\texport CPPFLAGS\n+\n+\t\tLDFLAGS_SAVED=\"$LDFLAGS\"\n+\t\tLDFLAGS=\"$LDFLAGS $BOOST_LDFLAGS\"\n+\t\texport LDFLAGS\n+\n+        AC_CACHE_CHECK(whether the Boost::Unit_Test_Framework library is available,\n+\t\t\t\t\t   ax_cv_boost_unit_test_framework,\n+        [AC_LANG_PUSH([C++])\n+\t\t\t AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[@%:@include <boost/test/unit_test.hpp>]],\n+                                    [[using boost::unit_test::test_suite;\n+\t\t\t\t\t\t\t test_suite* test= BOOST_TEST_SUITE( \"Unit test example 1\" ); return 0;]])],\n+                   ax_cv_boost_unit_test_framework=yes, ax_cv_boost_unit_test_framework=no)\n+         AC_LANG_POP([C++])\n+\t\t])\n+\t\tif test \"x$ax_cv_boost_unit_test_framework\" = \"xyes\"; then\n+\t\t\tAC_DEFINE(HAVE_BOOST_UNIT_TEST_FRAMEWORK,,[define if the Boost::Unit_Test_Framework library is available])\n+            BOOSTLIBDIR=`echo $BOOST_LDFLAGS | sed -e 's/@<:@^\\/@:>@*//'`\n+\n+            if test \"x$ax_boost_user_unit_test_framework_lib\" = \"x\"; then\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for monitor_library in `ls $BOOSTLIBDIR/libboost_unit_test_framework*.so* $BOOSTLIBDIR/libboost_unit_test_framework*.dylib* $BOOSTLIBDIR/libboost_unit_test_framework*.a* 2>/dev/null` ; do\n+                    if test -r $monitor_library ; then\n+                       libextension=`echo $monitor_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.dylib.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t    if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                      AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t  break\n+\t\t\t\t    fi\n+                done\n+                if test \"x$link_unit_test_framework\" != \"xyes\"; then\n+                for libextension in `ls $BOOSTLIBDIR/boost_unit_test_framework*.dll* $BOOSTLIBDIR/boost_unit_test_framework*.a* 2>/dev/null  | sed 's,.*/,,' | sed -e 's;^\\(boost_unit_test_framework.*\\)\\.dll.*$;\\1;' -e 's;^\\(boost_unit_test_framework.*\\)\\.a.*$;\\1;'` ; do\n+                     ax_lib=${libextension}\n+\t\t\t\t    AC_CHECK_LIB($ax_lib, exit,\n+                                 [BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"; AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB) link_unit_test_framework=\"yes\"; break],\n+                                 [link_unit_test_framework=\"no\"])\n+\t\t\t\tdone\n+                fi\n+            else\n+                link_unit_test_framework=\"no\"\n+\t\t\tsaved_ldflags=\"${LDFLAGS}\"\n+                for ax_lib in boost_unit_test_framework-$ax_boost_user_unit_test_framework_lib $ax_boost_user_unit_test_framework_lib ; do\n+                   if test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                      break;\n+                   fi\n+                   for unittest_library in `ls $BOOSTLIBDIR/lib${ax_lib}.so* $BOOSTLIBDIR/lib${ax_lib}.a* 2>/dev/null` ; do\n+                   if test -r $unittest_library ; then\n+                       libextension=`echo $unittest_library | sed 's,.*/,,' | sed -e 's;^lib\\(boost_unit_test_framework.*\\)\\.so.*$;\\1;' -e 's;^lib\\(boost_unit_test_framework.*\\)\\.a*$;\\1;'`\n+                       ax_lib=${libextension}\n+                       link_unit_test_framework=\"yes\"\n+                    else\n+                       link_unit_test_framework=\"no\"\n+                    fi\n+\n+\t\t\t\tif test \"x$link_unit_test_framework\" = \"xyes\"; then\n+                        BOOST_UNIT_TEST_FRAMEWORK_LIB=\"-l$ax_lib\"\n+                        AC_SUBST(BOOST_UNIT_TEST_FRAMEWORK_LIB)\n+\t\t\t\t\t    break\n+\t\t\t\t    fi\n+                  done\n+               done\n+            fi\n+            if test \"x$ax_lib\" = \"x\"; then\n+                AC_MSG_ERROR(Could not find a version of the library!)\n+            fi\n+\t\t\tif test \"x$link_unit_test_framework\" != \"xyes\"; then\n+\t\t\t\tAC_MSG_ERROR(Could not link against $ax_lib !)\n+\t\t\tfi\n+\t\tfi\n+\n+\t\tCPPFLAGS=\"$CPPFLAGS_SAVED\"\n+\tLDFLAGS=\"$LDFLAGS_SAVED\"\n+\tfi\n+])"
      },
      {
        "sha": "c3a8d695a1bcda95fd91cb6d8c03a94cdcb5b9c7",
        "filename": "src/m4/ax_check_compile_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_compile_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_compile_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_compile_flag.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_compile_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_COMPILE_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's compiler\n+#   or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the current language's default\n+#   flags (e.g. CFLAGS) when the check is done.  The check is thus made with\n+#   the flags: \"CFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to\n+#   force the compiler to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_COMPILE_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]flags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG compiler accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$[]_AC_LANG_PREFIX[]FLAGS\n+  _AC_LANG_PREFIX[]FLAGS=\"$[]_AC_LANG_PREFIX[]FLAGS $4 $1\"\n+  AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  _AC_LANG_PREFIX[]FLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_COMPILE_FLAGS"
      },
      {
        "sha": "e2d0d363e4c4ac672d36a2c964973136d007be73",
        "filename": "src/m4/ax_check_link_flag.m4",
        "status": "added",
        "additions": 71,
        "deletions": 0,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_link_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_link_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_link_flag.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,71 @@\n+# ===========================================================================\n+#    http://www.gnu.org/software/autoconf-archive/ax_check_link_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_LINK_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the linker or gives an error.\n+#   (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the linker's default flags\n+#   when the check is done.  The check is thus made with the flags: \"LDFLAGS\n+#   EXTRA-FLAGS FLAG\".  This can for example be used to force the linker to\n+#   issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{PREPROC,COMPILE}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_LINK_FLAG],\n+[AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_ldflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether the linker accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$LDFLAGS\n+  LDFLAGS=\"$LDFLAGS $4 $1\"\n+  AC_LINK_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  LDFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_LINK_FLAGS"
      },
      {
        "sha": "b1cfef6b86dd6ed3321fe2b92e215a06cfbdbcdd",
        "filename": "src/m4/ax_check_preproc_flag.m4",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_preproc_flag.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_check_preproc_flag.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_check_preproc_flag.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,72 @@\n+# ===========================================================================\n+#   http://www.gnu.org/software/autoconf-archive/ax_check_preproc_flag.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_CHECK_PREPROC_FLAG(FLAG, [ACTION-SUCCESS], [ACTION-FAILURE], [EXTRA-FLAGS])\n+#\n+# DESCRIPTION\n+#\n+#   Check whether the given FLAG works with the current language's\n+#   preprocessor or gives an error.  (Warnings, however, are ignored)\n+#\n+#   ACTION-SUCCESS/ACTION-FAILURE are shell commands to execute on\n+#   success/failure.\n+#\n+#   If EXTRA-FLAGS is defined, it is added to the preprocessor's default\n+#   flags when the check is done.  The check is thus made with the flags:\n+#   \"CPPFLAGS EXTRA-FLAGS FLAG\".  This can for example be used to force the\n+#   preprocessor to issue an error when a bad flag is given.\n+#\n+#   NOTE: Implementation based on AX_CFLAGS_GCC_OPTION. Please keep this\n+#   macro in sync with AX_CHECK_{COMPILE,LINK}_FLAG.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Guido U. Draheim <guidod@gmx.de>\n+#   Copyright (c) 2011 Maarten Bosmans <mkbosmans@gmail.com>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 2\n+\n+AC_DEFUN([AX_CHECK_PREPROC_FLAG],\n+[AC_PREREQ(2.59)dnl for _AC_LANG_PREFIX\n+AS_VAR_PUSHDEF([CACHEVAR],[ax_cv_check_[]_AC_LANG_ABBREV[]cppflags_$4_$1])dnl\n+AC_CACHE_CHECK([whether _AC_LANG preprocessor accepts $1], CACHEVAR, [\n+  ax_check_save_flags=$CPPFLAGS\n+  CPPFLAGS=\"$CPPFLAGS $4 $1\"\n+  AC_PREPROC_IFELSE([AC_LANG_PROGRAM()],\n+    [AS_VAR_SET(CACHEVAR,[yes])],\n+    [AS_VAR_SET(CACHEVAR,[no])])\n+  CPPFLAGS=$ax_check_save_flags])\n+AS_IF([test x\"AS_VAR_GET(CACHEVAR)\" = xyes],\n+  [m4_default([$2], :)],\n+  [m4_default([$3], :)])\n+AS_VAR_POPDEF([CACHEVAR])dnl\n+])dnl AX_CHECK_PREPROC_FLAGS"
      },
      {
        "sha": "6d400ed4e8e29dfc7a650e2ca704a228d0dc61ba",
        "filename": "src/m4/ax_pthread.m4",
        "status": "added",
        "additions": 317,
        "deletions": 0,
        "changes": 317,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_pthread.m4",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514/src/m4/ax_pthread.m4",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/m4/ax_pthread.m4?ref=fa5805fadc369ab8fd695dbd2fa0cc7a0bee1514",
        "patch": "@@ -0,0 +1,317 @@\n+# ===========================================================================\n+#        http://www.gnu.org/software/autoconf-archive/ax_pthread.html\n+# ===========================================================================\n+#\n+# SYNOPSIS\n+#\n+#   AX_PTHREAD([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])\n+#\n+# DESCRIPTION\n+#\n+#   This macro figures out how to build C programs using POSIX threads. It\n+#   sets the PTHREAD_LIBS output variable to the threads library and linker\n+#   flags, and the PTHREAD_CFLAGS output variable to any special C compiler\n+#   flags that are needed. (The user can also force certain compiler\n+#   flags/libs to be tested by setting these environment variables.)\n+#\n+#   Also sets PTHREAD_CC to any special C compiler that is needed for\n+#   multi-threaded programs (defaults to the value of CC otherwise). (This\n+#   is necessary on AIX to use the special cc_r compiler alias.)\n+#\n+#   NOTE: You are assumed to not only compile your program with these flags,\n+#   but also link it with them as well. e.g. you should link with\n+#   $PTHREAD_CC $CFLAGS $PTHREAD_CFLAGS $LDFLAGS ... $PTHREAD_LIBS $LIBS\n+#\n+#   If you are only building threads programs, you may wish to use these\n+#   variables in your default LIBS, CFLAGS, and CC:\n+#\n+#     LIBS=\"$PTHREAD_LIBS $LIBS\"\n+#     CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+#     CC=\"$PTHREAD_CC\"\n+#\n+#   In addition, if the PTHREAD_CREATE_JOINABLE thread-attribute constant\n+#   has a nonstandard name, defines PTHREAD_CREATE_JOINABLE to that name\n+#   (e.g. PTHREAD_CREATE_UNDETACHED on AIX).\n+#\n+#   Also HAVE_PTHREAD_PRIO_INHERIT is defined if pthread is found and the\n+#   PTHREAD_PRIO_INHERIT symbol is defined when compiling with\n+#   PTHREAD_CFLAGS.\n+#\n+#   ACTION-IF-FOUND is a list of shell commands to run if a threads library\n+#   is found, and ACTION-IF-NOT-FOUND is a list of commands to run it if it\n+#   is not found. If ACTION-IF-FOUND is not specified, the default action\n+#   will define HAVE_PTHREAD.\n+#\n+#   Please let the authors know if this macro fails on any platform, or if\n+#   you have any other suggestions or comments. This macro was based on work\n+#   by SGJ on autoconf scripts for FFTW (http://www.fftw.org/) (with help\n+#   from M. Frigo), as well as ac_pthread and hb_pthread macros posted by\n+#   Alejandro Forero Cuervo to the autoconf macro repository. We are also\n+#   grateful for the helpful feedback of numerous users.\n+#\n+#   Updated for Autoconf 2.68 by Daniel Richard G.\n+#\n+# LICENSE\n+#\n+#   Copyright (c) 2008 Steven G. Johnson <stevenj@alum.mit.edu>\n+#   Copyright (c) 2011 Daniel Richard G. <skunk@iSKUNK.ORG>\n+#\n+#   This program is free software: you can redistribute it and/or modify it\n+#   under the terms of the GNU General Public License as published by the\n+#   Free Software Foundation, either version 3 of the License, or (at your\n+#   option) any later version.\n+#\n+#   This program is distributed in the hope that it will be useful, but\n+#   WITHOUT ANY WARRANTY; without even the implied warranty of\n+#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General\n+#   Public License for more details.\n+#\n+#   You should have received a copy of the GNU General Public License along\n+#   with this program. If not, see <http://www.gnu.org/licenses/>.\n+#\n+#   As a special exception, the respective Autoconf Macro's copyright owner\n+#   gives unlimited permission to copy, distribute and modify the configure\n+#   scripts that are the output of Autoconf when processing the Macro. You\n+#   need not follow the terms of the GNU General Public License when using\n+#   or distributing such scripts, even though portions of the text of the\n+#   Macro appear in them. The GNU General Public License (GPL) does govern\n+#   all other use of the material that constitutes the Autoconf Macro.\n+#\n+#   This special exception to the GPL applies to versions of the Autoconf\n+#   Macro released by the Autoconf Archive. When you make and distribute a\n+#   modified version of the Autoconf Macro, you may extend this special\n+#   exception to the GPL to apply to your modified version as well.\n+\n+#serial 20\n+\n+AU_ALIAS([ACX_PTHREAD], [AX_PTHREAD])\n+AC_DEFUN([AX_PTHREAD], [\n+AC_REQUIRE([AC_CANONICAL_HOST])\n+AC_LANG_PUSH([C])\n+ax_pthread_ok=no\n+\n+# We used to check for pthread.h first, but this fails if pthread.h\n+# requires special compiler flags (e.g. on True64 or Sequent).\n+# It gets checked for in the link test anyway.\n+\n+# First of all, check if the user has set any of the PTHREAD_LIBS,\n+# etcetera environment variables, and if threads linking works using\n+# them:\n+if test x\"$PTHREAD_LIBS$PTHREAD_CFLAGS\" != x; then\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        AC_MSG_CHECKING([for pthread_join in LIBS=$PTHREAD_LIBS with CFLAGS=$PTHREAD_CFLAGS])\n+        AC_TRY_LINK_FUNC(pthread_join, ax_pthread_ok=yes)\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test x\"$ax_pthread_ok\" = xno; then\n+                PTHREAD_LIBS=\"\"\n+                PTHREAD_CFLAGS=\"\"\n+        fi\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+fi\n+\n+# We must check for the threads library under a number of different\n+# names; the ordering is very important because some systems\n+# (e.g. DEC) have both -lpthread and -lpthreads, where one of the\n+# libraries is broken (non-POSIX).\n+\n+# Create a list of thread flags to try.  Items starting with a \"-\" are\n+# C compiler flags, and other items are library names, except for \"none\"\n+# which indicates that we try without any flags at all, and \"pthread-config\"\n+# which is a program returning the flags for the Pth emulation library.\n+\n+ax_pthread_flags=\"pthreads none -Kthread -kthread lthread -pthread -pthreads -mthreads pthread --thread-safe -mt pthread-config\"\n+\n+# The ordering *is* (sometimes) important.  Some notes on the\n+# individual items follow:\n+\n+# pthreads: AIX (must check this before -lpthread)\n+# none: in case threads are in libc; should be tried before -Kthread and\n+#       other compiler flags to prevent continual compiler warnings\n+# -Kthread: Sequent (threads in libc, but -Kthread needed for pthread.h)\n+# -kthread: FreeBSD kernel threads (preferred to -pthread since SMP-able)\n+# lthread: LinuxThreads port on FreeBSD (also preferred to -pthread)\n+# -pthread: Linux/gcc (kernel threads), BSD/gcc (userland threads)\n+# -pthreads: Solaris/gcc\n+# -mthreads: Mingw32/gcc, Lynx/gcc\n+# -mt: Sun Workshop C (may only link SunOS threads [-lthread], but it\n+#      doesn't hurt to check since this sometimes defines pthreads too;\n+#      also defines -D_REENTRANT)\n+#      ... -mt is also the pthreads flag for HP/aCC\n+# pthread: Linux, etcetera\n+# --thread-safe: KAI C++\n+# pthread-config: use pthread-config program (for GNU Pth library)\n+\n+case ${host_os} in\n+        solaris*)\n+\n+        # On Solaris (at least, for some versions), libc contains stubbed\n+        # (non-functional) versions of the pthreads routines, so link-based\n+        # tests will erroneously succeed.  (We need to link with -pthreads/-mt/\n+        # -lpthread.)  (The stubs are missing pthread_cleanup_push, or rather\n+        # a function called by this macro, so we could check for that, but\n+        # who knows whether they'll stub that too in a future libc.)  So,\n+        # we'll just look for -pthreads and -lpthread first:\n+\n+        ax_pthread_flags=\"-pthreads pthread -mt -pthread $ax_pthread_flags\"\n+        ;;\n+\n+        darwin*)\n+        ax_pthread_flags=\"-pthread $ax_pthread_flags\"\n+        ;;\n+esac\n+\n+if test x\"$ax_pthread_ok\" = xno; then\n+for flag in $ax_pthread_flags; do\n+\n+        case $flag in\n+                none)\n+                AC_MSG_CHECKING([whether pthreads work without any flags])\n+                ;;\n+\n+                -*)\n+                AC_MSG_CHECKING([whether pthreads work with $flag])\n+                PTHREAD_CFLAGS=\"$flag\"\n+                ;;\n+\n+                pthread-config)\n+                AC_CHECK_PROG(ax_pthread_config, pthread-config, yes, no)\n+                if test x\"$ax_pthread_config\" = xno; then continue; fi\n+                PTHREAD_CFLAGS=\"`pthread-config --cflags`\"\n+                PTHREAD_LIBS=\"`pthread-config --ldflags` `pthread-config --libs`\"\n+                ;;\n+\n+                *)\n+                AC_MSG_CHECKING([for the pthreads library -l$flag])\n+                PTHREAD_LIBS=\"-l$flag\"\n+                ;;\n+        esac\n+\n+        save_LIBS=\"$LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Check for various functions.  We must include pthread.h,\n+        # since some functions may be macros.  (On the Sequent, we\n+        # need a special flag -Kthread to make this header compile.)\n+        # We check for pthread_join because it is in -lpthread on IRIX\n+        # while pthread_create is in libc.  We check for pthread_attr_init\n+        # due to DEC craziness with -lpthreads.  We check for\n+        # pthread_cleanup_push because it is one of the few pthread\n+        # functions on Solaris that doesn't have a non-functional libc stub.\n+        # We try pthread_create on general principles.\n+        AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>\n+                        static void routine(void *a) { a = 0; }\n+                        static void *start_routine(void *a) { return a; }],\n+                       [pthread_t th; pthread_attr_t attr;\n+                        pthread_create(&th, 0, start_routine, 0);\n+                        pthread_join(th, 0);\n+                        pthread_attr_init(&attr);\n+                        pthread_cleanup_push(routine, 0);\n+                        pthread_cleanup_pop(0) /* ; */])],\n+                [ax_pthread_ok=yes],\n+                [])\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        AC_MSG_RESULT($ax_pthread_ok)\n+        if test \"x$ax_pthread_ok\" = xyes; then\n+                break;\n+        fi\n+\n+        PTHREAD_LIBS=\"\"\n+        PTHREAD_CFLAGS=\"\"\n+done\n+fi\n+\n+# Various other checks:\n+if test \"x$ax_pthread_ok\" = xyes; then\n+        save_LIBS=\"$LIBS\"\n+        LIBS=\"$PTHREAD_LIBS $LIBS\"\n+        save_CFLAGS=\"$CFLAGS\"\n+        CFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n+\n+        # Detect AIX lossage: JOINABLE attribute is called UNDETACHED.\n+        AC_MSG_CHECKING([for joinable pthread attribute])\n+        attr_name=unknown\n+        for attr in PTHREAD_CREATE_JOINABLE PTHREAD_CREATE_UNDETACHED; do\n+            AC_LINK_IFELSE([AC_LANG_PROGRAM([#include <pthread.h>],\n+                           [int attr = $attr; return attr /* ; */])],\n+                [attr_name=$attr; break],\n+                [])\n+        done\n+        AC_MSG_RESULT($attr_name)\n+        if test \"$attr_name\" != PTHREAD_CREATE_JOINABLE; then\n+            AC_DEFINE_UNQUOTED(PTHREAD_CREATE_JOINABLE, $attr_name,\n+                               [Define to necessary symbol if this constant\n+                                uses a non-standard name on your system.])\n+        fi\n+\n+        AC_MSG_CHECKING([if more special flags are required for pthreads])\n+        flag=no\n+        case ${host_os} in\n+            aix* | freebsd* | darwin*) flag=\"-D_THREAD_SAFE\";;\n+            osf* | hpux*) flag=\"-D_REENTRANT\";;\n+            solaris*)\n+            if test \"$GCC\" = \"yes\"; then\n+                flag=\"-D_REENTRANT\"\n+            else\n+                flag=\"-mt -D_REENTRANT\"\n+            fi\n+            ;;\n+        esac\n+        AC_MSG_RESULT(${flag})\n+        if test \"x$flag\" != xno; then\n+            PTHREAD_CFLAGS=\"$flag $PTHREAD_CFLAGS\"\n+        fi\n+\n+        AC_CACHE_CHECK([for PTHREAD_PRIO_INHERIT],\n+            ax_cv_PTHREAD_PRIO_INHERIT, [\n+                AC_LINK_IFELSE([\n+                    AC_LANG_PROGRAM([[#include <pthread.h>]], [[int i = PTHREAD_PRIO_INHERIT;]])],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=yes],\n+                    [ax_cv_PTHREAD_PRIO_INHERIT=no])\n+            ])\n+        AS_IF([test \"x$ax_cv_PTHREAD_PRIO_INHERIT\" = \"xyes\"],\n+            AC_DEFINE([HAVE_PTHREAD_PRIO_INHERIT], 1, [Have PTHREAD_PRIO_INHERIT.]))\n+\n+        LIBS=\"$save_LIBS\"\n+        CFLAGS=\"$save_CFLAGS\"\n+\n+        # More AIX lossage: compile with *_r variant\n+        if test \"x$GCC\" != xyes; then\n+            case $host_os in\n+                aix*)\n+                AS_CASE([\"x/$CC\"],\n+                  [x*/c89|x*/c89_128|x*/c99|x*/c99_128|x*/cc|x*/cc128|x*/xlc|x*/xlc_v6|x*/xlc128|x*/xlc128_v6],\n+                  [#handle absolute path differently from PATH based program lookup\n+                   AS_CASE([\"x$CC\"],\n+                     [x/*],\n+                     [AS_IF([AS_EXECUTABLE_P([${CC}_r])],[PTHREAD_CC=\"${CC}_r\"])],\n+                     [AC_CHECK_PROGS([PTHREAD_CC],[${CC}_r],[$CC])])])\n+                ;;\n+            esac\n+        fi\n+fi\n+\n+test -n \"$PTHREAD_CC\" || PTHREAD_CC=\"$CC\"\n+\n+AC_SUBST(PTHREAD_LIBS)\n+AC_SUBST(PTHREAD_CFLAGS)\n+AC_SUBST(PTHREAD_CC)\n+\n+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:\n+if test x\"$ax_pthread_ok\" = xyes; then\n+        ifelse([$1],,AC_DEFINE(HAVE_PTHREAD,1,[Define if you have POSIX threads libraries and header files.]),[$1])\n+        :\n+else\n+        ax_pthread_ok=no\n+        $2\n+fi\n+AC_LANG_POP\n+])dnl AX_PTHREAD"
      }
    ]
  }
]