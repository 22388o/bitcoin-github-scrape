[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143201072",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143201072",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143201072,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzIwMTA3Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T12:18:51Z",
    "updated_at": "2015-09-25T12:18:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "One thing that I think is maybe not great about the behavior of this, is let's say we have:\n\nTXs:\nA, Fee 10, Size 1\nB, Fee 10, Size 1\nC, Fee 21, Size 2\n\nIf A and B are the min in the set, submitting C should kick them out. Now, let's say B wanted to increase their fee, they would need to go above 21 to get in. As implemented, it doesn't seem to me that two TX's could both raise by 1 to, combined, provide more fee (because it seems tx's get added one at a time?)\n\nPerhaps a better compromise between these two behaviors would be to have a two part mempool, the inclusion set and the to-be ousted set and trigger a \"GC\" with some frequency. The to be ousted-set can be RBF'd or something.\n\nLastly justification on who might take advantage of such a behavior, perhaps a major exchange with a bunch of settlements out at once would want to make sure they all go through expediently and can coordinate increasing them all a hair.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143201072/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143229977",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143229977",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143229977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzIyOTk3Nw==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T13:52:35Z",
    "updated_at": "2015-09-25T13:52:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that my earlier comment is not fully needed, because mempool is a large multiple of block size, currently. Perhaps a more future proof implementation would allow setting:\n- an optional hard memory cap\n- a (potentially) dynamic size which is a large multiple of the current block size\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143229977/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143347863",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143347863",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143347863,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM0Nzg2Mw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T20:38:10Z",
    "updated_at": "2015-09-25T20:38:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JeremyRubin No, you're right, this breaks relaying of child-pays-for-parent when mempool grows large (assuming the package is not already present). The easy solution is to allow fee calulation of packages together when processing orphans, and then you send your package in reverse-dependancy order.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143347863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143378272",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143378272",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143378272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM3ODI3Mg==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-25T23:45:51Z",
    "updated_at": "2015-09-25T23:45:51Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt re: my comment on high fee txs.  I see now, you aren't doing the overall fee check in order to boot a package.  I just assumed the StageTrimToSize logic was the same.  So how do you think about free relay then?  Could you write up a quick intro describing the algorithm as it would help to know how you think about it.  Is the idea that all even though the tx causing the eviction hasn't covered the fees to pay for the evicted packages relay, by boosting the minRelayRate you're essentially forcing all future transactions to do so?\n\nIt's an interesting idea, one question is how big a sweet spot there is between having the half-life too long  and worrying about the \"cram relayFee high all of a sudden\" attack vs having it too low and perhaps having some vague concern about free relay.\n\nWhy does your increased relay fee only apply to low priority transactions?  I think it has to apply to all.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143378272/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143382724",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143382724",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143382724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM4MjcyNA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-26T00:25:09Z",
    "updated_at": "2015-09-26T00:25:09Z",
    "author_association": "CONTRIBUTOR",
    "body": "@morcos see the description of the main commit:\n\"This limits mempool by walking the lowest-feerate txn in mempool\nwhen it goes over -maxmempool in size, removing them.\nIt then sets the minimum relay fee to the maximum fee\ntransaction-and-dependant-set it removed, plus the default minimum\nrelay fee. After the next block is received, the minimum relay fee\nis allowed to decrease exponentially (with a half-life of one day).\n\nThe minimum -maxmempool size is 10*-limitdescendantsize, as it is\neasy for an attacker to play games with the cheapest\n-limitdescendantsize transactions.\n\nNote that this effectively disables high-priority transaction relay\niff the mempool becomes large.\"\n\nAs for your specific questions: Yes, the idea is that you can relay some cheap crap for a bit, driving up the min relay fee by the default min relay fee each time (which was always meant as a \"this is what it costs to send a transaction around the network\" constant, though it hasn't always done a good job of being accurate there).\n\nThe increased relay fee will effectively apply to low priority transactions, as they will be the package selected by the final TrimToSize call. Thus, priority-based relay will effectively remain enabled until people's mempools fill up.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143382724/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143386645",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143386645",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143386645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM4NjY0NQ==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-26T00:57:32Z",
    "updated_at": "2015-09-26T00:57:32Z",
    "author_association": "MEMBER",
    "body": "But in particular the increased relay fee does NOT apply to high priority txs?  That's what I don't understand.  It seems you could use the same stable of high priority inputs over and over to gain free relay.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143386645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143390920",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143390920",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143390920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzM5MDkyMA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-26T01:59:13Z",
    "updated_at": "2015-09-26T01:59:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, indeed, there is an attack there where you can cause lots of relay for free there. You cant really get much into the mempool (only up to the max package size) and you do have to increase the feerate each time, but only by one satoshi per kb...\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143390920/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143500720",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143500720",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143500720,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzUwMDcyMA==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-26T22:30:34Z",
    "updated_at": "2015-09-26T22:30:42Z",
    "author_association": "NONE",
    "body": "What's wrong with XT's method of discarding a random transaction so that you can't predictably  manipulate the mempool?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143500720/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143501742",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-143501742",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 143501742,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0MzUwMTc0Mg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-26T22:36:31Z",
    "updated_at": "2015-09-26T22:36:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@NanoAkron It makes it trivial to DoS the network, among many other issues.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/143501742/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144501017",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144501017",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144501017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDUwMTAxNw==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T18:32:56Z",
    "updated_at": "2015-09-30T18:32:56Z",
    "author_association": "MEMBER",
    "body": "I think the `ROLLING_FEE_HALFLIFE` should be 12 hours.  Here's my analysis:\nThe purpose of the `rollingMinimumFeeRate` is to strike the right balance between two things.  \n- Future transactions should be obligated to pay for the cost of transactions that were evicted (and their own relay fee) otherwise a large package of transactions could be evicted by a small tx with a slightly higher fee rate.  This could happen repeatedly for a bandwidth attack.\n- It must decay so an attacker can not pack the mempool full of high fee txs one time and peg the effective min relay rate very high for a long time for the cost of stuffing the mempool once.\n\nFrom the point of view of the bandwidth attack:  \nAssume the prevailing fee rate at the bottom of the mempool is X times the relay rate.  Then a full size 2.5MB package can be evicted from there by paying X+1 on a small 200 byte tx.  Effectively you have now paid the minimum relay fee on (200X + 200) bytes, but have relayed 2.5MB + 200 bytes, so you got free relay of 2.5MB - X \\* 200 bytes.  \n\nAs soon as the `rollingMinimumFeeRate` has dropped from X back down to X-1, you can repeat the attack.  At a half-life of 12 hours and assuming X = 20, then it'll take about 53 mins for that to happen.  So you can free relay 47 kB per min.  This seems sufficiently small compared to the bare minimum network relay capacity of 100 kB per min (1 block every 10 mins).  \n\nSince the decay is exponential, you'll actually take a lot longer than 53 mins to repeat the attack if the prevailing fee rate multiple X is considerably less than 20.   However as the prevailing fee rate climbs the attack could be considered a bigger concern.  This should be addressed by having a default minimum relay rate that is higher.  It seams reasonable that over the long term the default minimum relay rate will not be much less than 1/20th of the prevailing fee rate at the bottom of mempools.\n\nFrom the point of view of stuffing the mempool:  \nIf we imagine a 100MB mempool, then filling it with 30MB of transactions (sizewise = 100MB of usage) at a 100K sat/KB fee rate  will cost 30 BTC.   \n\nIn this case access to the network will be blocked for all txs less than 100k feerate for 5 hours while those transactions are mined anyway.  The additional gain the `rollingMinimumFeeRate` gives an attacker is another 7 hours until the decay has brought down the feerate to 50K.   \n\nSince the attacker could have stopped anything under 50K feerate anyway for 10 hours by just issuing 60MB worth of transactions at that fee rate.  This attack is not significantly worse.\n\nSo I think 12 hours strikes about the right balance.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144501017/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 1,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144517292",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144517292",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144517292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDUxNzI5Mg==",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-09-30T19:40:03Z",
    "updated_at": "2015-09-30T19:40:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "concept ACK - prefer 24-48 hours - will do some testing\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144517292/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144581220",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144581220",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144581220,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU4MTIyMA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-01T00:19:41Z",
    "updated_at": "2015-10-01T00:19:41Z",
    "author_association": "MEMBER",
    "body": "Reorgs should probably be handled differently -- I don't think it makes sense for eviction to take place when calling `AcceptToMemoryPool()` from `DisconnectBlock()`; instead perhaps we can just let the mempool grow during a reorg and trim it down to size at the end?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144581220/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144593118",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144593118",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144593118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDU5MzExOA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-01T01:52:41Z",
    "updated_at": "2015-10-26T20:57:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "Addressed a few nits...Things left to do:\n- [x] Figure out the decay constant/drop min fee to 0 when it gets near 0 (if we decide to push forward with this tomorrow, we should discuss this value)\n- [x] Steal code from #6557 to use CalculateDescendants to make the TrimToSize code simpler\n- [x] Write some basic sanity-check test cases\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144593118/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144961886",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144961886",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144961886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDk2MTg4Ng==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T08:48:31Z",
    "updated_at": "2015-10-02T08:48:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "Removed more than a third of the lines in TrimToSize and removed some other code in mempool sorting thanks to some suggestions from @morcos and @sdaftuar.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144961886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144979788",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-144979788",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 144979788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NDk3OTc4OA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T09:59:08Z",
    "updated_at": "2015-10-02T09:59:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Halflife set to:\nif mempool is < max_mempool_size / 4:\n    halflife = 3 hours\nelif mempool < max_mempool_size / 2:\n    halflife = 6 hours\nelse\n    halflife = 12 hours.\n\nWhen halflife is < minRelayTxFee (1000 satoshisPerKb), it is rounded down to 0 and free relay is re-enabled.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/144979788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145028966",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145028966",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145028966,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAyODk2Ng==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T13:57:10Z",
    "updated_at": "2015-10-02T13:57:10Z",
    "author_association": "MEMBER",
    "body": "+1 on the half life suggestions.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145028966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145150751",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145150751",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145150751,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE1MDc1MQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T20:44:24Z",
    "updated_at": "2015-10-02T20:44:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, did even better and solved an edge case (thanks again to @sdaftuar for suggestions) by just adding the new tx to the mempool first, and then calling TrimToSize blind and checking if the tx is still in mempool afterwards.\n\nAlso reverted the mempool sorting change after discussion with @morcos on IRC - though it is a win in the \"optimize for maximum mempool feerate\" metric, it seems better to leave it as is because it may result in a larger ending mempool.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145150751/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145164748",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145164748",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145164748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTE2NDc0OA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T21:52:54Z",
    "updated_at": "2015-10-02T21:52:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Incorporated mempool expiry from @sipa, rebased and squashed. Should be reviewable/testable, but needs test cases.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145164748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145269499",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145269499",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145269499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTI2OTQ5OQ==",
    "user": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?u=57b50a05caa63fb86d8f910668719907e9ecf667&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-03T17:15:39Z",
    "updated_at": "2015-10-03T17:15:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "It'd be good to add some design doc comments explaining the intent of this code. CTxMemPool::GetMinFee() especially is quite mysterious and full of magic constants right now, which is easier to understand when you read @sdaftuar's comments, but that's much harder to discover if you're starting from the source code.\n\nWe also should add a way to get the current minimum relay fee from the RPC interface, e.g. through getmempoolinfo\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145269499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145269690",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145269690",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145269690,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTI2OTY5MA==",
    "user": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?u=57b50a05caa63fb86d8f910668719907e9ecf667&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-03T17:16:11Z",
    "updated_at": "2015-10-03T17:16:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "Code looks reasonable so far, though I haven't looked into it in enough detail to give a utACK just yet.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145269690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145591235",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145591235",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145591235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTU5MTIzNQ==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-05T16:28:10Z",
    "updated_at": "2015-10-05T16:28:10Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt I was just talking with @sdaftuar and now we think the max is required for the sort.  I know you reverted back to max, but I just wanted to memorialize that it is actually necessary.  Otherwise, it might possible to purposefully construct packages which will cause a parent to sort down and get evicted, allowing an attacker to control evicting a particular tx.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145591235/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145970517",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-145970517",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 145970517,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTk3MDUxNw==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T19:19:13Z",
    "updated_at": "2015-10-06T19:19:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "```\nIn file included from wallet/wallet.cpp:24:\n./txmempool.h:291:25: warning: in-class initializer for static data member of type 'const double' is a GNU extension [-Wgnu-static-float-init]\n    static const double ROLLING_FEE_HALFLIFE = 60 * 60 * 12;\n                        ^                      ~~~~~~~~~~~~\n1 warning generated.\n```\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/145970517/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146010872",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146010872",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146010872,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjAxMDg3Mg==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T21:46:07Z",
    "updated_at": "2015-10-06T21:46:07Z",
    "author_association": "CONTRIBUTOR",
    "body": "Comments should all be addressed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146010872/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146339870",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146339870",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146339870,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjMzOTg3MA==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-07T21:36:20Z",
    "updated_at": "2015-10-07T21:36:20Z",
    "author_association": "MEMBER",
    "body": "There's an issue with the way the locking is done -- with the current code, we need to hold cs_main in order to call `TrimToSize()` (eg in `ActivateBestChain()`) or else it's possible for there to be a race condition with `AcceptToMemoryPool()` and we could, for instance, let an orphan in to the mempool (because the mempool lock isn't held from the `HaveInputs()` check to acceptance).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146339870/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146384879",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146384879",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146384879,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM4NDg3OQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T00:52:49Z",
    "updated_at": "2015-10-08T00:52:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdaftuar Argh, you're right...could switch it to require you check your inputs with mempool.cs, but its probably just easier to stick with cs_main for this one.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146384879/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146391005",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146391005",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146391005,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjM5MTAwNQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T01:50:15Z",
    "updated_at": "2015-10-08T01:50:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed bugs and changed the 0-setting feerate stuff:\n- When a transaction is removed, the minimum mempool fee is set to the max of its package's feerate and ::minRelayTxFee. This way, when a transaction is removed, feerate is set to ::minRelayTxFee (ie the value under which we consider txn to have effectively \"0 fee\") until the next block.\n- After that, the feerate is allowed to decay as previously, until it reaches half of ::minRelayTxFee, and then it is set to 0. However, during this decay, before it reaches 0, the returned fee is set to ::minRelayTxFee (it is no longer added to ::minRelayTxFee in ATMP), this way we never require a fee less than ::minRelayTxFee for a tx to be considered \"non-0-fee\".\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146391005/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146404540",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146404540",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146404540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQwNDU0MA==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T03:05:39Z",
    "updated_at": "2015-10-08T03:05:39Z",
    "author_association": "MEMBER",
    "body": "@TheBlueMatt huh?  You can't remove the addition of ::minRelayTxFee to the rollingMinFee.  That's the only thing that makes this mempool limiting work, unless I'm misunderstanding what you did.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146404540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146404984",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146404984",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146404984,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQwNDk4NA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T03:09:49Z",
    "updated_at": "2015-10-08T03:09:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "When I was thinking about how to fix it, I was going to add ::minRelayTxFee instead of max, but it seems wires got crossed and I didn't change the max...\n\nOn October 7, 2015 8:05:47 PM PDT, Alex Morcos notifications@github.com wrote:\n\n> @TheBlueMatt huh?  You can't remove the addition of ::minRelayTxFee to\n> the rollingMinFee.  That's the only thing that makes this mempool\n> limiting work, unless I'm misunderstanding what you did.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146404540\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146404984/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146405074",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146405074",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146405074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQwNTA3NA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T03:10:44Z",
    "updated_at": "2015-10-08T03:10:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "ie the ::minRelayTxFee is added, but it's added to the mempool's limit, not in ATMP.\n\nOn October 7, 2015 8:05:47 PM PDT, Alex Morcos notifications@github.com wrote:\n\n> @TheBlueMatt huh?  You can't remove the addition of ::minRelayTxFee to\n> the rollingMinFee.  That's the only thing that makes this mempool\n> limiting work, unless I'm misunderstanding what you did.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146404540\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146405074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146407074",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146407074",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146407074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQwNzA3NA==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T03:20:27Z",
    "updated_at": "2015-10-08T03:20:27Z",
    "author_association": "MEMBER",
    "body": "oh ok...  but thats really putting the wrong kind of logic in the mempool.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146407074/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146407350",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146407350",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 146407350,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjQwNzM1MA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T03:23:35Z",
    "updated_at": "2015-10-08T03:23:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not sure I agree... Mempool has logic for \"this is the fee needed to get into this mempool\". The \"this fee is effectively 0\" parameter is not a mempool policy, indeed, but it's already a parameter. It has some idea of how it wants to decay the fee, which could be better moved outside of mempool, but putting it in ATMP also feels strange... It's a property of the mempool, not a global one.\n\nOn October 7, 2015 8:20:35 PM PDT, Alex Morcos notifications@github.com wrote:\n\n> oh ok...  but thats really putting the wrong kind of logic in the\n> mempool.\n> \n> ---\n> \n> Reply to this email directly or view it on GitHub:\n> https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-146407074\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/146407350/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147649344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-147649344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 147649344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NzY0OTM0NA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-13T08:44:00Z",
    "updated_at": "2015-10-13T08:44:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "Squashed/rebased and reverted the minRelayTxFee bump.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/147649344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148173903",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148173903",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148173903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODE3MzkwMw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-14T19:46:32Z",
    "updated_at": "2015-10-14T19:46:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdaftuar I was being lazy and not bothering since the behavior either way is just as good. But, OK, I fixed it.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148173903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148203761",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148203761",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148203761,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODIwMzc2MQ==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-14T21:17:03Z",
    "updated_at": "2015-10-14T21:17:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "concept ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148203761/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148218232",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148218232",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148218232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODIxODIzMg==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-14T22:12:38Z",
    "updated_at": "2015-10-14T22:12:38Z",
    "author_association": "MEMBER",
    "body": "ACK!\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148218232/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148263649",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148263649",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148263649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODI2MzY0OQ==",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?u=578995010af9e1872285cb8e67bcb4f6052d52dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T02:43:07Z",
    "updated_at": "2015-10-15T02:48:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148263649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148375798",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148375798",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148375798,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODM3NTc5OA==",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T12:52:29Z",
    "updated_at": "2015-10-15T12:52:29Z",
    "author_association": "MEMBER",
    "body": "ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148375798/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148379789",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148379789",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148379789,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODM3OTc4OQ==",
    "user": {
      "login": "jgarzik",
      "id": 494411,
      "node_id": "MDQ6VXNlcjQ5NDQxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/494411?u=0b02049ec38b6bb7d55c5c66d9bbeb0d4b822129&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jgarzik",
      "html_url": "https://github.com/jgarzik",
      "followers_url": "https://api.github.com/users/jgarzik/followers",
      "following_url": "https://api.github.com/users/jgarzik/following{/other_user}",
      "gists_url": "https://api.github.com/users/jgarzik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jgarzik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jgarzik/subscriptions",
      "organizations_url": "https://api.github.com/users/jgarzik/orgs",
      "repos_url": "https://api.github.com/users/jgarzik/repos",
      "events_url": "https://api.github.com/users/jgarzik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jgarzik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-15T13:10:19Z",
    "updated_at": "2015-10-15T13:10:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "ut ACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148379789/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148761612",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148761612",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148761612,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODc2MTYxMg==",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-16T16:28:44Z",
    "updated_at": "2015-10-16T16:28:44Z",
    "author_association": "MEMBER",
    "body": "ACK (apart from sipa's nit) \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148761612/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148874040",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148874040",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148874040,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODg3NDA0MA==",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?u=b7dd63827227d69794b5fe28797b1bd107b930dd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-17T01:19:36Z",
    "updated_at": "2015-10-17T20:02:23Z",
    "author_association": "MEMBER",
    "body": "I've done some benchmarking.  I ran a historical simulation over 1 million transactions between July 6th and July 14th.  And I repeated this for 3 different code bases.  \n- master as of 7/31 (before multindex and package tracking)\n- master as of 10/16\n- this pull\n\nResults are below, I think you can see that the average is within measurement error.  The slight increase in the median is to be expected.  \nAll times in ms.\n\n| Txns accepted to the mempool | pre-packages | master 10/16 | 6722 |\n| --- | --- | --- | --- |\n| Average | 0.786 | 0.790 | 0.782 |\n| Median | 0.268 | 0.279 | 0.298 |\n| 90th percentile | 1.04 | 0.91 | 0.93 |\n| 99th percentile | 8.03 | 7.91 | 7.71 |\n| 99.9th percentile | 45.8 | 45.7 | 43.1 |\n| max | 286 | 286 | 398 |\n\nI broke down the timing a little bit more and it's clear that the vast majority of the outliers come from CheckInputs and HaveInputs.  For instance if you look at the 1k transactions between the 99.8th and 99.9th percentile.  (EDIT: oops posted slightly wrong stats the first time, conclusion the same)\n\n| AcceptToMemoryPool | time in ms |\n| --- | --- |\n| Total | 41.4 |\n| CheckInputs | 32.5 |\n| HaveInputs | 7.1 |\n| remaining | 1.8 |\n\nAlthough I did see 3 (out of 1M) transactions where the addUnchecked call took > 50ms in this pull.\n\nThese measurements were made with libsecp256k1 merged and default dbcache size.\n6722 used a 100 MB mempool limit.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148874040/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148874654",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-148874654",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 148874654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0ODg3NDY1NA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-17T01:29:57Z",
    "updated_at": "2015-10-17T01:29:57Z",
    "author_association": "MEMBER",
    "body": "Those numbers look reasonable and are probably consistent with what I've\nbeen seeing. I temporarily can't benchmark easily to verify.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/148874654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149171010",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149171010",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149171010,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTE3MTAxMA==",
    "user": {
      "login": "rubensayshi",
      "id": 649160,
      "node_id": "MDQ6VXNlcjY0OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubensayshi",
      "html_url": "https://github.com/rubensayshi",
      "followers_url": "https://api.github.com/users/rubensayshi/followers",
      "following_url": "https://api.github.com/users/rubensayshi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubensayshi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubensayshi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubensayshi/subscriptions",
      "organizations_url": "https://api.github.com/users/rubensayshi/orgs",
      "repos_url": "https://api.github.com/users/rubensayshi/repos",
      "events_url": "https://api.github.com/users/rubensayshi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubensayshi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T09:56:05Z",
    "updated_at": "2015-10-19T09:56:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149171010/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149268107",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149268107",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149268107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTI2ODEwNw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-19T16:24:41Z",
    "updated_at": "2015-10-19T16:24:41Z",
    "author_association": "MEMBER",
    "body": "ACK.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149268107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149707956",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149707956",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149707956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcwNzk1Ng==",
    "user": {
      "login": "ABISprotocol",
      "id": 4469280,
      "node_id": "MDQ6VXNlcjQ0NjkyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4469280?u=fab4a6b78eaddf661da2f1f2c02d4153850f13df&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ABISprotocol",
      "html_url": "https://github.com/ABISprotocol",
      "followers_url": "https://api.github.com/users/ABISprotocol/followers",
      "following_url": "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url": "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ABISprotocol/subscriptions",
      "organizations_url": "https://api.github.com/users/ABISprotocol/orgs",
      "repos_url": "https://api.github.com/users/ABISprotocol/repos",
      "events_url": "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ABISprotocol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T21:25:15Z",
    "updated_at": "2015-10-20T21:25:15Z",
    "author_association": "NONE",
    "body": "Since #6557 was closed (in favor of opening this pull request, according to @sdaftuar from a comment in #6557) I am again coming back to evaluate whether this new pull request does the following:\n\na) addresses my concerns as expressed in comments [here](https://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122119307) and [here](https://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122438594) in #6201 ~ these comments related to the ability of people in the developing world to access bitcoin and the problems inherent with taking a bitcoin-development approach that would not include the bulk of people in the developing and underdeveloped world.  (See full comments for details.)\n\nb) Has code that effectively affirms the principle that \"[mempool limiting and dynamic fee determination are superior to a static parameter change](https://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122512074)\" \n\nc) Incorporates a floating relay fee, such as this https://github.com/sipa/bitcoin/commit/6498673f99da9976df170052648ff2f0026210d2 or its equivalent.\n\nReasoning for this request:\nSee history on\n#6201\n#6455\n#6470\n#6557\n(history of closed pull requests leading to this one (#6722) shown above)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149707956/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149712837",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149712837",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149712837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcxMjgzNw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T21:47:52Z",
    "updated_at": "2015-10-20T21:47:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ABISprotocol I'm not actually sure if you're asking a question or what, but I think the answer is \"yes\". Yes, it does the things in (b) and (c), I guess? As for what you're talking about in (a), I have no idea. Please make specific criticisms.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149712837/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149721490",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149721490",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149721490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyMTQ5MA==",
    "user": {
      "login": "ABISprotocol",
      "id": 4469280,
      "node_id": "MDQ6VXNlcjQ0NjkyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4469280?u=fab4a6b78eaddf661da2f1f2c02d4153850f13df&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ABISprotocol",
      "html_url": "https://github.com/ABISprotocol",
      "followers_url": "https://api.github.com/users/ABISprotocol/followers",
      "following_url": "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url": "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ABISprotocol/subscriptions",
      "organizations_url": "https://api.github.com/users/ABISprotocol/orgs",
      "repos_url": "https://api.github.com/users/ABISprotocol/repos",
      "events_url": "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ABISprotocol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:31:27Z",
    "updated_at": "2015-10-20T22:31:27Z",
    "author_association": "NONE",
    "body": "@TheBlueMatt I have been very specific since #6201 when I raised these issues, the pull requests since then which have led to this one have in part been responsive to the issues I raised, but have been closed.\n\nWhen you say \"I think the answer is \"yes\" (...) it does the things in (b) and (c), I guess?\" I would appreciate a better answer, where you cite how it does so.  If you believe that it does the things in (b) and (c) please cite a commit / change as part of this pull request that would do either (b) or (c) and describe in layman's terms how it would do so.\n\nWith respect to (a), please see the comments cited in (a) for details, as suggested in my prior comment.  The issues raised in my comments remain a serious and valid concern.\n\n@morcos @laanwj \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149721490/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149723456",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149723456",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149723456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyMzQ1Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T22:43:46Z",
    "updated_at": "2015-10-20T22:43:46Z",
    "author_association": "MEMBER",
    "body": "@ABISprotocol This page is for discussing technical issues. Please take the philosophical considerations elsewhere.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149723456/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149726830",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149726830",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149726830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyNjgzMA==",
    "user": {
      "login": "ABISprotocol",
      "id": 4469280,
      "node_id": "MDQ6VXNlcjQ0NjkyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4469280?u=fab4a6b78eaddf661da2f1f2c02d4153850f13df&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ABISprotocol",
      "html_url": "https://github.com/ABISprotocol",
      "followers_url": "https://api.github.com/users/ABISprotocol/followers",
      "following_url": "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url": "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ABISprotocol/subscriptions",
      "organizations_url": "https://api.github.com/users/ABISprotocol/orgs",
      "repos_url": "https://api.github.com/users/ABISprotocol/repos",
      "events_url": "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ABISprotocol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T23:04:51Z",
    "updated_at": "2015-10-20T23:06:10Z",
    "author_association": "NONE",
    "body": "@sipa I believe I have raised substantial technical issues in my past and present comments.  I think it is unfair of you to attempt to diminish my participation.  Instead, please let me know if the issues I have raised have been addressed, and if so, please cite a basic message as to how they have been addressed.  Thank you for your consideration of my comments.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149726830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149727534",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149727534",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149727534,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTcyNzUzNA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T23:10:04Z",
    "updated_at": "2015-10-20T23:13:46Z",
    "author_association": "MEMBER",
    "body": "(a) If you're talking about accessibility of _on blockchain_ transactions: no. We can't guarantee that every possible useful transaction will have a negligable fee for every person on earth. If that was the case, DoS attacks that intervene with everyone's ability to use it would also be negligable in cost for every person on earth. This is a philosophical question, and not something that changes in this pull request. Miners are already incentivized to choose the transactions that grant them the highest profits, and this PR merely extends that behaviour to the mempool.\n\n(b) Yes, see (c)\n\n(c) Yes, read the title of this pull request please.\n\nYou're very welcome to discuss these issues, but not here as I don't think they are related to this pull request. This is about dealing active problems on the network in line of existing behaviour.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149727534/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149733563",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149733563",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149733563,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTczMzU2Mw==",
    "user": {
      "login": "ABISprotocol",
      "id": 4469280,
      "node_id": "MDQ6VXNlcjQ0NjkyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4469280?u=fab4a6b78eaddf661da2f1f2c02d4153850f13df&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ABISprotocol",
      "html_url": "https://github.com/ABISprotocol",
      "followers_url": "https://api.github.com/users/ABISprotocol/followers",
      "following_url": "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url": "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ABISprotocol/subscriptions",
      "organizations_url": "https://api.github.com/users/ABISprotocol/orgs",
      "repos_url": "https://api.github.com/users/ABISprotocol/repos",
      "events_url": "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ABISprotocol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-20T23:29:49Z",
    "updated_at": "2015-10-20T23:29:49Z",
    "author_association": "NONE",
    "body": "@sipa Your remarks regarding (c) are dismissive, \"read title of this pull request please\" assumes stupidity of the commenter(s), namely myself, and is not a kind way to address my participation.  I will assume someone else will better answer my concerns. @laanwj \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149733563/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149797846",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-149797846",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 149797846,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0OTc5Nzg0Ng==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T06:50:04Z",
    "updated_at": "2015-10-21T06:50:04Z",
    "author_association": "MEMBER",
    "body": "utACK\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/149797846/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150042573",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-150042573",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 150042573,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDA0MjU3Mw==",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?u=034ef1433a0704d9c91b57b993009b0383d6b7c0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-21T22:29:52Z",
    "updated_at": "2015-10-21T22:33:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ABISprotocol what specific question do you want to ask?\n\nI'll try to answer, paraphrasing you:\n\n> [does this PR affect the] ability of people in the developing world to access [to] bitcoin?\n\nIf you classify access as the ability to run a full node,  then,  this PR,  which will allow users to adjust the software to meet the capabilities of their hardware,  **does** increase access.\n\n> b) Has code that effectively affirms the principle that \"mempool limiting and dynamic fee determination are superior to a static parameter change\"\n\nIf there isn't spam,  why should we maintain the higher static parameter? \nMy understanding of this algorithm could be summarised as:\n\n> sort mempool transactions by fee in descending order, then filter/reduce the resultant collection such that when the maximum memory size is reached, drop any remaining transactions\n\nThe implementation isn't so straightforward due to complications that arise when you account for CPFP and descendants, but, that is the base concept AFAIK.\n@TheBlueMatt would that be correct?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150042573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150103587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-150103587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 150103587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1MDEwMzU4Nw==",
    "user": {
      "login": "ABISprotocol",
      "id": 4469280,
      "node_id": "MDQ6VXNlcjQ0NjkyODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4469280?u=fab4a6b78eaddf661da2f1f2c02d4153850f13df&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ABISprotocol",
      "html_url": "https://github.com/ABISprotocol",
      "followers_url": "https://api.github.com/users/ABISprotocol/followers",
      "following_url": "https://api.github.com/users/ABISprotocol/following{/other_user}",
      "gists_url": "https://api.github.com/users/ABISprotocol/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ABISprotocol/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ABISprotocol/subscriptions",
      "organizations_url": "https://api.github.com/users/ABISprotocol/orgs",
      "repos_url": "https://api.github.com/users/ABISprotocol/repos",
      "events_url": "https://api.github.com/users/ABISprotocol/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ABISprotocol/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-22T04:28:27Z",
    "updated_at": "2015-10-22T04:28:27Z",
    "author_association": "NONE",
    "body": "-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA512\n\nHello,\n\nBy access, I didn't mean necessarily the ability to run a full node.\nI was more concerned with the ability of users to make a transaction\nat all (regardless of what software they might be using) and not be\nsqueezed out by the upward creep of fees.\n\nSee, for example, this, cited previously here in (a), which discusses\nthe issue in more detail:\nhttps://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122119307\n\nAs stated there, \"In observing this sad trend of gradual fee increases\nand what I see as censorship of small transactions, in a year's time,\ngiven what happened in 2013 with #2577 and what is now happening with\nthis issue here in 2015, it is entirely likely that further\ntransaction and fee policies will be adopted which will edge out even\nthose who are trying to make BTC transactions equivalent to 0.20 USD.\nSharp currency declines (in the USD, euro, other currencies) and\nincreases in value of BTC would create situations in which one might\nneed to purchase small quantities of BTC, but paradoxically such\npolicies as those proposed in this pull request might stymie\nentry-level buyers in the marketplace. In addition, the potential for\nmicrogiving in bitcoin is reduced by these kind of development\nproposals, and microgiving is one of the most significant developments\nto come to finance. It is one that cannot be adequately implemented by\nlegacy systems in no small part due to their burdensome fees, which up\nto this point, bitcoin has not had. However, this appears to be\nchanging rapidly.\n\nAs a consequence, a large number of people in the developing and\nunderdeveloped world will be edged out by policies created by people\nwho create and develop this new economic system without consideration\nof the voices of those who are least likely to be heard here. This\nimplies that the billions who potentially could have been helped by\nthis technology, now, will not.\"\n\nThis is the concern which focuses on access, and it has to do with\npeople being driven out as fees go up and up. Development direction\nshould thus ultimately orient itself towards finding a way to support\nboth on-chain and off-chain micro-transactions.  How these are defined\nis important as well because it is certain that a micro-transaction in\nthe context of bitcoin which can be supported by the network.  As\n@gmaxwell has pointed out,\nhttps://github.com/bitcoin/bitcoin/pull/6201#issuecomment-122143706\n\"It's important to be specific in what you're talking about when you\nsay microtransactions. In some contexts it means value transfers under\n\"$10\" in others, under \"$1\" in others under \"$0.01\" and in yet other\nunder \"$0.00001\". There is some level under which just simply cannot\nbe supported: because a single attack at moderate cost could saturate\nthe bandwidth of a substantial portion of the network (keep in mind\nBitcoin is a broadcast system, and any system that can't keep up can't\nparticipate).\"\n\nNote here that there are a large number of persons in the world\ngetting by on the equivalent of 1 to 2 USD per day if salaried. At one\ntime I lived abroad for several years for less than fifty USD per\nmonth (and for a period of time lived in the USA with much less than\nthat). This is much of the world. These are statements of fact which\ncannot be ignored and which are as relevant to the discussion as\nsubsidy, cost of mining, and other vital factors. The trend of upward\ncost of transacting in the bitcoin network is not going to reverse if\nthe status quo continues, but developers do have a choice in how they\nproceed right now and moving forward.\n\nThus the inclusion or exclusion of persons in the developing world\nwhen it comes to the bitcoin network and access is not an issue which\ncan be dismissed, nor can developers suggest that these points are not\ntechnical enough and must be discussed elsewhere, because the\nsubstance of the pull requests mentioned in this thread directly\nimpact whether or not whether billions of people in the developing\nworld (and in particular those who might only be making, at most, a\nfew dollars per day) will be able to transact in the bitcoin system,\nor whether they will ultimately be excluded from it completely as the\nuse of it spreads.\n\nSo, does this PR affect the ability of people in the developing world\nto access bitcoin, in that context?  I would submit that this PR,\nwhile it does provide the ability to run a full node, does not\nincrease access substantially within the context of the issues raised\nabove (see also section (a) in my original comment to this pull\nrequest), and thus I would submit that there is more to be done.  I\nwill not assume that off-chain solutions are the only way to address\nthese issues, as we see from looking at BlockCypher's on-chain\nmicrotransaction API for values between 2,000 satoshis (~$0.005) and\n4,000,000 satoshis (~$9.50).\nhttp://dev.blockcypher.com/#microtransaction-api  I encourage you to\nlook at my own project for some ideas as well:  http://abis.io\n\nDaniel Cousens:\n\n> @ABISprotocol what specific question do you want to ask?\n> \n> I'll try to answer, paraphrasing you:\n> \n> > [does this PR affect the] ability of people in the developing\n> > world to access [to] bitcoin?\n> \n> If you classify access as the ability to run a full node,  then,\n> this PR,  which will allow users to adjust the software to meet the\n> capabilities of their hardware,  **does** increase access.\n> \n> > b) Has code that effectively affirms the principle that \"mempool\n> > limiting and dynamic fee determination are superior to a static\n> > parameter change\"\n> \n> If there isn't spam,  why should we maintain the higher static\n> parameter? My understanding of this algorithm could be summarised\n> algorithmically as:\n> \n> > sort mempool transactions by fee in descending order, then\n> > filter/reduce the resultant collection such that when the maximum\n> > memory size is reached, drop all remaining transactions\n> \n> The implementation isn't so straightforward, but, conceptually,\n> AFAIK. @TheBlueMatt would that be correct?\n> \n> --- Reply to this email directly or view it on GitHub: \n> https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-150042573\n> \n> ---\n> \n> http://abis.io ~\n> \"a protocol concept to enable decentralization\n> and expansion of a giving economy, and a new social good\"\n> https://keybase.io/odinn\n> -----BEGIN PGP SIGNATURE-----\n\niQEcBAEBCgAGBQJWKGXZAAoJEGxwq/inSG8CJgsIAKWrlYNfqQp2NT4/q+R22MaD\n1B/5MUrTndjhqbP2zcNTESwzbsUwZdgBljGwTRHlKy+eg8JpuFQn//e5wNqJT6UK\n1KEDzWzXpoqCqgNeJHeBP7uSMb+9VUs/sV5D1Cgey6Kl/Ss9gJ1fhvvodBBkxK55\nzStpgw7+MYQ4ZNxh+2a/txT/aG7quWq64KlMA/dfUT4sXPsJCxnwUcTVJh6fkPM1\nsmAWMyHWvz9M6WBxQYeDhJ/rjLXSP36D6Tjf0j/Y9/ehJf+wAucB9o7E0J6T4NjP\n7xy6hCKr40iyefB3RwwfGZK6aVAcIkeC6p8gP/GKJVrCVV8LMyVT0NyPzKtUPD0=\n=oyDy\n-----END PGP SIGNATURE-----\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/150103587/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157706114",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-157706114",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 157706114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzcwNjExNA==",
    "user": {
      "login": "rubensayshi",
      "id": 649160,
      "node_id": "MDQ6VXNlcjY0OTE2MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649160?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rubensayshi",
      "html_url": "https://github.com/rubensayshi",
      "followers_url": "https://api.github.com/users/rubensayshi/followers",
      "following_url": "https://api.github.com/users/rubensayshi/following{/other_user}",
      "gists_url": "https://api.github.com/users/rubensayshi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rubensayshi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rubensayshi/subscriptions",
      "organizations_url": "https://api.github.com/users/rubensayshi/orgs",
      "repos_url": "https://api.github.com/users/rubensayshi/repos",
      "events_url": "https://api.github.com/users/rubensayshi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rubensayshi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T13:04:16Z",
    "updated_at": "2015-11-18T13:04:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is going to be in v0.12.0?\nit's not in the release-notes yet for v0.12.0? \n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/157706114/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158551077",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-158551077",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 158551077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODU1MTA3Nw==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-20T22:57:28Z",
    "updated_at": "2015-11-20T22:57:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, this should be added to the release-notes.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/158551077/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841806474",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#issuecomment-841806474",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/6722",
    "id": 841806474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDg0MTgwNjQ3NA==",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?u=6a4a31aaddbc438e053c52d084a698a5f622f1ea&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-05-16T11:49:43Z",
    "updated_at": "2021-05-16T11:49:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "> @JeremyRubin No, you're right, this breaks relaying of child-pays-for-parent when mempool grows large (assuming the package is not already present). The easy solution is to allow fee calulation of packages together when processing orphans, and then you send your package in reverse-dependancy order.\r\n\r\nDid this end up being implemented?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/841806474/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40412933",
    "pull_request_review_id": null,
    "id": 40412933,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDEyOTMz",
    "diff_hunk": "@@ -284,6 +284,13 @@ class CTxMemPool\n     uint64_t totalTxSize; //! sum of all mempool tx' byte sizes\n     uint64_t cachedInnerUsage; //! sum of dynamic memory usage of all the map elements (NOT the maps themselves)\n \n+    mutable int64_t lastRollingFeeUpdate;\n+    mutable bool blockSinceLastRollingFeeBump;\n+    mutable double rollingMinimumFeeRate; //! minimum fee to get into the pool, decreases exponentially\n+    static const double ROLLING_FEE_HALFLIFE = 60 * 60 * 24;",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 16,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7ef6af92b293417515a36a29fb659c9e9c5c8ed2",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "travis complains about a missing `mutable bool blockSinceLastRollingFeeUpdate;` here.\n",
    "created_at": "2015-09-25T09:22:40Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40412933",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40412933"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40412933"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40412933/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 290,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453419",
    "pull_request_review_id": null,
    "id": 40453419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzNDE5",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    AssertLockHeld(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow))\n+                continue;\n+\n+            const uint256& hashnow = itnow->GetTx().GetHash();\n+            if (protect.count(hashnow)) {\n+                // If this transaction is in the protected set, we're done with 'rootit'.\n+                good = false;\n+                break;\n+            }\n+            // Add 'hashnow' to the 'now' set, and update its statistics.\n+            now.insert(itnow);\n+            nowfee += itnow->GetFee();\n+            nowsize += itnow->GetTxSize();\n+            nowusage += itnow->DynamicMemoryUsage();\n+            todo.pop_front();\n+\n+            // Find dependencies of 'hashnow' and them to todo.\n+            std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hashnow, 0));\n+            while (iter != mapNextTx.end() && iter->first.hash == hashnow) {\n+                const uint256& nexthash = iter->second.ptx->GetHash();\n+                txiter nextit = mapTx.find(nexthash);\n+                assert(nextit != mapTx.end());\n+                if (!stage.count(nextit) && !now.count(nextit))\n+                    todo.push_back(nextit);\n+                iter++;\n+            }\n+        }\n+\n+        // Check that we aren't removing a set who's total feerate is below that of the set we're removing\n+        // ... and then add now to stage\n+        if (good && (double)nowfee * toadd.GetTxSize() <= (double)toadd.GetFee() * nowsize) {\n+            stage.insert(now.begin(), now.end());\n+            expsize -= nowusage;\n+            bestFeeRateRemoved = std::max(bestFeeRateRemoved, CFeeRate(nowfee, nowsize));\n+        }\n+        it++;\n+    }\n+\n+    if (expsize <= sizelimit) {\n+        BOOST_FOREACH(const txiter& it, stage)\n+            removeUnchecked(it);",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 152,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "152dcb6abaa5c218fa98b3d71e3804585ea791a0",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "You can't call this by itself anymore.  Use removeStaged\n",
    "created_at": "2015-09-25T17:20:39Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 947,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453689",
    "pull_request_review_id": null,
    "id": 40453689,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzNjg5",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    AssertLockHeld(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow))\n+                continue;\n+\n+            const uint256& hashnow = itnow->GetTx().GetHash();\n+            if (protect.count(hashnow)) {\n+                // If this transaction is in the protected set, we're done with 'rootit'.\n+                good = false;\n+                break;\n+            }\n+            // Add 'hashnow' to the 'now' set, and update its statistics.\n+            now.insert(itnow);\n+            nowfee += itnow->GetFee();\n+            nowsize += itnow->GetTxSize();\n+            nowusage += itnow->DynamicMemoryUsage();\n+            todo.pop_front();\n+\n+            // Find dependencies of 'hashnow' and them to todo.\n+            std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hashnow, 0));\n+            while (iter != mapNextTx.end() && iter->first.hash == hashnow) {\n+                const uint256& nexthash = iter->second.ptx->GetHash();\n+                txiter nextit = mapTx.find(nexthash);\n+                assert(nextit != mapTx.end());\n+                if (!stage.count(nextit) && !now.count(nextit))\n+                    todo.push_back(nextit);\n+                iter++;\n+            }\n+        }\n+\n+        // Check that we aren't removing a set who's total feerate is below that of the set we're removing\n+        // ... and then add now to stage\n+        if (good && (double)nowfee * toadd.GetTxSize() <= (double)toadd.GetFee() * nowsize) {\n+            stage.insert(now.begin(), now.end());\n+            expsize -= nowusage;\n+            bestFeeRateRemoved = std::max(bestFeeRateRemoved, CFeeRate(nowfee, nowsize));\n+        }\n+        it++;\n+    }\n+\n+    if (expsize <= sizelimit) {\n+        BOOST_FOREACH(const txiter& it, stage)\n+            removeUnchecked(it);\n+\n+        trackRemovedOrAddFailed(bestFeeRateRemoved);\n+        return true;\n+    } else {\n+        trackRemovedOrAddFailed(CFeeRate(toadd.GetFee(), toadd.GetTxSize()));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 157,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "152dcb6abaa5c218fa98b3d71e3804585ea791a0",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It doesn't make sense to bump the rolling fee for a tx that didn't get in.   A very high fee tx might not make it in if there are large packages or transactions (even of low fee rate) at the bottom of the mempool.  That's a problem in and of itself for the tx that doesn't get in, but it's even worse if you make that the new minimum relay rate.\n",
    "created_at": "2015-09-25T17:23:33Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453689",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453689"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453689"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453689/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 952,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453957",
    "pull_request_review_id": null,
    "id": 40453957,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDUzOTU3",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 61,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "152dcb6abaa5c218fa98b3d71e3804585ea791a0",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd be concerned about the tradeoff here between one-time cost to stuff the mempool full of very high fee txs, and the length of time that stuffing causes the min relay rate to remain high.   Expecially with 100MB mempool, thats only about 30MB of txs.  So for example at 100k sat / kb fee rate, for 30 BTC you can knock the min relay fee up to 100k satoshis and the effect lasts for some time.\n",
    "created_at": "2015-09-25T17:26:05Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453957",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453957"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40453957"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40453957/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 856,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472178",
    "pull_request_review_id": null,
    "id": 40472178,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyMTc4",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    AssertLockHeld(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow))\n+                continue;\n+\n+            const uint256& hashnow = itnow->GetTx().GetHash();\n+            if (protect.count(hashnow)) {\n+                // If this transaction is in the protected set, we're done with 'rootit'.\n+                good = false;\n+                break;\n+            }\n+            // Add 'hashnow' to the 'now' set, and update its statistics.\n+            now.insert(itnow);\n+            nowfee += itnow->GetFee();\n+            nowsize += itnow->GetTxSize();\n+            nowusage += itnow->DynamicMemoryUsage();\n+            todo.pop_front();\n+\n+            // Find dependencies of 'hashnow' and them to todo.\n+            std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hashnow, 0));\n+            while (iter != mapNextTx.end() && iter->first.hash == hashnow) {\n+                const uint256& nexthash = iter->second.ptx->GetHash();\n+                txiter nextit = mapTx.find(nexthash);\n+                assert(nextit != mapTx.end());\n+                if (!stage.count(nextit) && !now.count(nextit))\n+                    todo.push_back(nextit);\n+                iter++;\n+            }\n+        }\n+\n+        // Check that we aren't removing a set who's total feerate is below that of the set we're removing\n+        // ... and then add now to stage\n+        if (good && (double)nowfee * toadd.GetTxSize() <= (double)toadd.GetFee() * nowsize) {\n+            stage.insert(now.begin(), now.end());\n+            expsize -= nowusage;\n+            bestFeeRateRemoved = std::max(bestFeeRateRemoved, CFeeRate(nowfee, nowsize));\n+        }\n+        it++;\n+    }\n+\n+    if (expsize <= sizelimit) {\n+        BOOST_FOREACH(const txiter& it, stage)\n+            removeUnchecked(it);\n+\n+        trackRemovedOrAddFailed(bestFeeRateRemoved);\n+        return true;\n+    } else {\n+        trackRemovedOrAddFailed(CFeeRate(toadd.GetFee(), toadd.GetTxSize()));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 157,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "152dcb6abaa5c218fa98b3d71e3804585ea791a0",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hmm? No a very high fee tx will always evict transactions with lower feerate even if it ends up evicting a very large package to do so.\n",
    "created_at": "2015-09-25T20:29:02Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40472178",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472178"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40472178"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472178/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 952,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472516",
    "pull_request_review_id": null,
    "id": 40472516,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcyNTE2",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 61,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "152dcb6abaa5c218fa98b3d71e3804585ea791a0",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Sure, the ROLLING_FEE_HALFLIFE could be dropped a lot. I had originally figured it based on decreasing the mempool right away, but since it now waits at least for one block before it lets the min feerate drop, I think it probably could be dropped a lot. Maybe we even dont want an exponential decrease either.\n",
    "created_at": "2015-09-25T20:32:56Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40472516",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472516"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40472516"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40472516/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 856,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40487766",
    "pull_request_review_id": null,
    "id": 40487766,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NzY2",
    "diff_hunk": "@@ -837,3 +845,109 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow))\n+                continue;",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 113,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "0ae46697fecbb524ec056ace7005e1c291556c72",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "need to pop_front() before continuing, otherwise its an infinite loop\n",
    "created_at": "2015-09-26T00:51:29Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40487766",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40487766"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40487766"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40487766/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 908,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40488841",
    "pull_request_review_id": null,
    "id": 40488841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4ODQx",
    "diff_hunk": "@@ -837,3 +845,109 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow))\n+                continue;",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 113,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "0ae46697fecbb524ec056ace7005e1c291556c72",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "LOL, oops...\n",
    "created_at": "2015-09-26T01:53:09Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40488841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40488841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40488841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40488841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 908,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40495966",
    "pull_request_review_id": null,
    "id": 40495966,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk1OTY2",
    "diff_hunk": "@@ -837,3 +845,111 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::reverse_iterator it = mapTx.get<1>().rbegin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().rend()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it.base());\n+        rootit--;",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 94,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "22d846f57374ffc4a71eaf942d3c9ccd252ae956",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "this is a bug.  rootit is an iterator by txid hash, so decrementing it puts you at a completely random transaction.\nthe base iterator needs to be decremented before projecting.\n\n@sdaftuar and i didn't like this oddness, so the first commit in #6557 reverses the feerate sort.  there was no reason to do it the other way in the first place.  maybe you should just grab that?\n",
    "created_at": "2015-09-26T17:30:15Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40495966",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40495966"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40495966"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40495966/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499037",
    "pull_request_review_id": null,
    "id": 40499037,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDM3",
    "diff_hunk": "@@ -841,6 +842,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n \n+    // -mempoollimit limits\n+    int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+    if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 10)\n+        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 100));",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "22d846f57374ffc4a71eaf942d3c9ccd252ae956",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Keep in mind this is a ratio of 2 different measurements.  Serialized transaction size for descendant limit and mempool memory usage for maxmempool.  There is about a 3x ratio between those measurements.  So a 25MB mempool would actually only fit about 3 maximum sized packages...  (I used 4x as a conservative ratio, and similarly wanted a 10x difference so ended up with 40x between the arguments.)\n",
    "created_at": "2015-09-26T22:22:38Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40499037",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499037"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40499037"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499037/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 849,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499174",
    "pull_request_review_id": null,
    "id": 40499174,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MTc0",
    "diff_hunk": "@@ -841,6 +842,12 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     fCheckBlockIndex = GetBoolArg(\"-checkblockindex\", chainparams.DefaultConsistencyChecks());\n     fCheckpointsEnabled = GetBoolArg(\"-checkpoints\", true);\n \n+    // -mempoollimit limits\n+    int64_t nMempoolSizeLimit = GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000;\n+    int64_t nMempoolDescendantSizeLimit = GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) * 1000;\n+    if (nMempoolSizeLimit < 0 || nMempoolSizeLimit < nMempoolDescendantSizeLimit * 10)\n+        return InitError(strprintf(_(\"Error: -maxmempool must be at least %d MB\"), GetArg(\"-limitdescendantsize\", DEFAULT_DESCENDANT_SIZE_LIMIT) / 100));",
    "path": "src/init.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "22d846f57374ffc4a71eaf942d3c9ccd252ae956",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oops, yea, my notes to fix this from earlier were saying do something like 100MB, for this reason...Last time I ignore my notes and just do what I think when I'm sick :/\n",
    "created_at": "2015-09-26T22:38:15Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40499174",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499174"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40499174"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40499174/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 849,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40824946",
    "pull_request_review_id": null,
    "id": 40824946,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0OTQ2",
    "diff_hunk": "@@ -837,3 +845,110 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.\n+    indexed_transaction_set::nth_index<1>::type::iterator it = mapTx.get<1>().begin();\n+    // Iterate from lowest feerate to highest feerate in the mempool:\n+    while (expsize > sizelimit && it != mapTx.get<1>().end()) {\n+        if (CompareTxMemPoolEntryByFee()(*it, toadd)) {\n+            // If the transaction's feerate is worse than what we're looking for, we have processed everything in the mempool\n+            // that could improve the staged set. If we don't have an acceptable solution by now, bail out.\n+            break;\n+        }\n+        txiter rootit = mapTx.project<0>(it);\n+        if (stage.count(rootit)) {\n+            // If the transaction is already staged for deletion, we know its descendants are already processed, so skip it.\n+            it++;\n+            continue;\n+        }\n+\n+        // Iterate breadth-first over all descendants of transaction 'rootit'...\n+        std::deque<txiter> todo; // List of hashes that we still need to process (descendants of 'rootit').\n+        setEntries now; // Set of tx entries that will need to be added to stage if 'rootit' is included.\n+        CAmount nowfee = 0; // Sum of the fees in 'now'.\n+        size_t nowsize = 0; // Sum of the tx sizes in 'now'.\n+        size_t nowusage = 0; // Sum of the memory usages of transactions in 'now'.\n+        todo.push_back(rootit); // Add 'rootit' to the todo list, to initiate processing its children.\n+        bool good = true; // Whether including 'rootit' (and all its descendants) is a good idea.\n+\n+        while (!todo.empty()) {\n+            const txiter& itnow = todo.front();\n+            if (now.count(itnow)) {\n+                todo.pop_front();\n+                continue;\n+            }\n+\n+            const uint256& hashnow = itnow->GetTx().GetHash();\n+            if (protect.count(hashnow)) {\n+                // If this transaction is in the protected set, we're done with 'rootit'.\n+                good = false;\n+                break;\n+            }\n+            // Add 'hashnow' to the 'now' set, and update its statistics.\n+            now.insert(itnow);\n+            nowfee += itnow->GetFee();\n+            nowsize += itnow->GetTxSize();\n+            nowusage += itnow->DynamicMemoryUsage();\n+            todo.pop_front();\n+\n+            // Find dependencies of 'hashnow' and them to todo.\n+            std::map<COutPoint, CInPoint>::iterator iter = mapNextTx.lower_bound(COutPoint(hashnow, 0));\n+            while (iter != mapNextTx.end() && iter->first.hash == hashnow) {\n+                const uint256& nexthash = iter->second.ptx->GetHash();\n+                txiter nextit = mapTx.find(nexthash);\n+                assert(nextit != mapTx.end());\n+                if (!stage.count(nextit) && !now.count(nextit))\n+                    todo.push_back(nextit);\n+                iter++;\n+            }\n+        }\n+\n+        // Check that we aren't removing a set who's total feerate is below that of the set we're removing\n+        // ... and then add now to stage\n+        if (good && (double)nowfee * toadd.GetTxSize() <= (double)toadd.GetFee() * nowsize) {\n+            stage.insert(now.begin(), now.end());\n+            expsize -= nowusage;\n+            bestFeeRateRemoved = std::max(bestFeeRateRemoved, CFeeRate(nowfee, nowsize));\n+        }\n+        it++;\n+    }\n+\n+    if (expsize <= sizelimit) {\n+        RemoveStaged(stage);\n+        trackRemovedOrAddFailed(bestFeeRateRemoved);",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 153,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "104c63dad6c3b0a463df1829fe41643f99ac6bd5",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "These functions will be called every time through even if the mempool wasn't full to start with\n",
    "created_at": "2015-09-30T17:36:38Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40824946",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40824946"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40824946"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40824946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 948,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40828264",
    "pull_request_review_id": null,
    "id": 40828264,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI4MjY0",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee().GetFee(nSize);\n+        if (mempoolRejectFee > 0 && nFees < ::minRelayTxFee.GetFee(nSize) + mempoolRejectFee) {",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "104c63dad6c3b0a463df1829fe41643f99ac6bd5",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "With the way the half-life calculation works, I believe it would take a very long time before mempoolRejectFee will reach 0 again, after an eviction; this in turn would cause us to wait a really long time before being willing to relay low-fee transactions that have high priority.  Perhaps the mempool could round the min fee it returns down to 0 at some point so that this doesn't take forever, or we can adjust the way we use it here to allow for the priority calculation to kick in even if the mempoolRejectFee isn't exactly 0?\n",
    "created_at": "2015-09-30T18:02:13Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40828264",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40828264"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40828264"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40828264/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40832241",
    "pull_request_review_id": null,
    "id": 40832241,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMyMjQx",
    "diff_hunk": "@@ -51,6 +51,8 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 100;",
    "path": "src/main.h",
    "position": null,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "104c63dad6c3b0a463df1829fe41643f99ac6bd5",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it'd be better to make this default value as large as we think users can reasonably live with. 100MB of memory is only about 30MB of actual transactions, or 30 full blocks.  It seems to me like all the attacks someone could do on a limited mempool involve trying to play games with the effects of eviction, so having a bigger default mempool just causes all attacks to scale up in cost to carry out, because an attacker has to generate more transactions just to trigger eviction.\n\n#6557 has a 500MB default; if we're concerned that may be too big, how about 250 or 300MB?\n",
    "created_at": "2015-09-30T18:31:47Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40832241",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40832241"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40832241"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40832241/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 55,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40833980",
    "pull_request_review_id": null,
    "id": 40833980,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODMzOTgw",
    "diff_hunk": "@@ -837,3 +845,110 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);\n+\n+    size_t expsize = DynamicMemoryUsage() + toadd.DynamicMemoryUsage(); // Track the expected resulting memory usage of the mempool.",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 84,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "104c63dad6c3b0a463df1829fe41643f99ac6bd5",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I haven't thought about how much this is likely to matter but I don't think this is the best way to guess the expected size of the resulting mempool -- it misses the extra overhead from mapLinks, mapNextTx, and the multi_index pointers itself.  \n\nI think this code here is almost correct:\nhttps://github.com/sdaftuar/bitcoin/blob/7008233767bd5e03521d96cde414394975e940d7/src/txmempool.cpp#L797\n\n[There is an error though; the value of \"9\" that is used in the multi_index memory estimator should actually be a \"6\" I think in both DynamicMemoryUsage and GuessDynamicMemoryUsage.]\n",
    "created_at": "2015-09-30T18:43:59Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40833980",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40833980"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40833980"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40833980/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 879,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40836107",
    "pull_request_review_id": null,
    "id": 40836107,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM2MTA3",
    "diff_hunk": "@@ -837,3 +845,110 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee() const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / ROLLING_FEE_HALFLIFE);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackRemovedOrAddFailed(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+bool CTxMemPool::TrimToSize(size_t sizelimit, const CTxMemPoolEntry& toadd) {\n+    LOCK(cs);\n+\n+    CFeeRate bestFeeRateRemoved;\n+    setEntries stage;\n+    std::set<uint256> protect;\n+    BOOST_FOREACH(const CTxIn& in, toadd.GetTx().vin)\n+        protect.insert(in.prevout.hash);",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 82,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "104c63dad6c3b0a463df1829fe41643f99ac6bd5",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If you change `TrimToSize()` to take as an argument the ancestors of the entry being considered (which is calculated earlier in `AcceptToMemoryPool()`), then you can get rid of `protect`, and instead just check that each package root that you consider isn't an ancestor of the entry being added.  (This is what I did in #6557 and I think it helps make the code a lot simpler, especially combined with using `CalculateDescendants()` to grab all the descendants instead of writing a new loop here.)\n",
    "created_at": "2015-09-30T18:58:44Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40836107",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40836107"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r40836107"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/40836107/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 877,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41306866",
    "pull_request_review_id": null,
    "id": 41306866,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA2ODY2",
    "diff_hunk": "@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx is was trimmed",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 64,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "f23d7ab4ac3ac5ed2137591ec9fd7266ba4bbad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"is was\" -> \"was\"\n",
    "created_at": "2015-10-06T18:58:09Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41306866",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41306866"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41306866"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41306866/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 958,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41307526",
    "pull_request_review_id": null,
    "id": 41307526,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzA3NTI2",
    "diff_hunk": "@@ -837,3 +869,45 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < ::minRelayTxFee.GetFeePerK())",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 108,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "f23d7ab4ac3ac5ed2137591ec9fd7266ba4bbad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would it perhaps be better to pass the minRelayTxFee in, so that we're not needing to access globals inside the mempool?\n",
    "created_at": "2015-10-06T19:02:53Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41307526",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41307526"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41307526"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41307526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41314592",
    "pull_request_review_id": null,
    "id": 41314592,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE0NTky",
    "diff_hunk": "@@ -837,3 +869,45 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < ::minRelayTxFee.GetFeePerK())",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 108,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "f23d7ab4ac3ac5ed2137591ec9fd7266ba4bbad8",
    "user": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "On further thought -- would it make more sense to just move this code out of the mempool and into main.cpp, to isolate the mempool from relay policy?  We could make `TrimToSize()` return the fee rate of the last package it removes, and then leave `AcceptToMemoryPool()` responsible for deciding what to do with the prevailing relay fee after eviction (including this logic for decaying things back down).\n",
    "created_at": "2015-10-06T20:05:29Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41314592",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41314592"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41314592"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41314592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41321243",
    "pull_request_review_id": null,
    "id": 41321243,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzIxMjQz",
    "diff_hunk": "@@ -837,3 +869,45 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < ::minRelayTxFee.GetFeePerK())\n+            rollingMinimumFeeRate = 0;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+void CTxMemPool::TrimToSize(size_t sizelimit) {\n+    LOCK(cs);\n+\n+    while (DynamicMemoryUsage() > sizelimit) {\n+        indexed_transaction_set::nth_index<1>::type::iterator it = mapTx.get<1>().begin();\n+        setEntries stage;\n+        CalculateDescendants(mapTx.project<0>(it), stage);\n+        RemoveStaged(stage);\n+        trackPackageRemoved(CFeeRate(it->GetFeesWithDescendants(), it->GetSizeWithDescendants()));",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 130,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "f23d7ab4ac3ac5ed2137591ec9fd7266ba4bbad8",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This seems like it has two problems.  First, the descendant package information will have been updated by the removal of all the descendants in RemoveStaged.  More importantly, won't the iterator be invalid once it has been erased?\n",
    "created_at": "2015-10-06T20:58:20Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41321243",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41321243"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41321243"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41321243/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 911,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41326086",
    "pull_request_review_id": null,
    "id": 41326086,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI2MDg2",
    "diff_hunk": "@@ -837,3 +869,45 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < ::minRelayTxFee.GetFeePerK())",
    "path": "src/txmempool.cpp",
    "position": null,
    "original_position": 108,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "f23d7ab4ac3ac5ed2137591ec9fd7266ba4bbad8",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see GetMinFee() as a \"minimum feerate this mempool reasonably accepts\" not a part of your relay policy. You can tweak your relay policy by having a bigger mempool. Someone who wants to refactor all of the relay policy to be separated, later, can do so, but that seems far out-of-scope for this pull.\n",
    "created_at": "2015-10-06T21:37:49Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41326086",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41326086"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41326086"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41326086/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41407947",
    "pull_request_review_id": null,
    "id": 41407947,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3OTQ3",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CFeeRate mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        if (mempoolRejectFee > ::minRelayTxFee && nFees < ::minRelayTxFee.GetFee(nSize) + mempoolRejectFee.GetFee(nSize)) {",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not sure if this is ideal.  \n- If a bunch of free txs fill the mempool, they can then start evicting each other and continue getting relayed with no effective min relay rate ever getting created.\n- If we ignore free txs, then if the mempool is full of minRelayTxFee txs then we're reliant on `blockSinceLastRollingFeeBump` to prevent us from decaying the mempoolRejectFee immediately and as soon as a block comes in, it'll revert straight to 0.  \n\nThe free rate limiter in the first case and having to wait for a block in the second case probably prevent either of these problems from being significant, but its seems a bit fragile.\n",
    "created_at": "2015-10-07T15:53:22Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41407947",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41407947"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41407947"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41407947/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420730",
    "pull_request_review_id": null,
    "id": 41420730,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwNzMw",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CFeeRate mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        if (mempoolRejectFee > ::minRelayTxFee && nFees < ::minRelayTxFee.GetFee(nSize) + mempoolRejectFee.GetFee(nSize)) {\n+            return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 53,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "how about:\n`state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\", false, strprintf(\"%d < %d + %d\", nFees, ::minRelayTxFee.GetFee(nSize), mempoolRejectFee.GetFee(nSize)));`\n",
    "created_at": "2015-10-07T17:37:15Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420730",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420730"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420730"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420730/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 890,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420748",
    "pull_request_review_id": null,
    "id": 41420748,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwNzQ4",
    "diff_hunk": "@@ -837,3 +869,42 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;",
    "path": "src/txmempool.cpp",
    "position": 117,
    "original_position": 115,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "how about adding:\n`LogPrint(\"mempool\", \"Rolling Min Fee bumped to %f\\n\", rollingMinimumFeeRate);`\n",
    "created_at": "2015-10-07T17:37:24Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420748",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420748"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420748"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420748/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 894,
    "original_line": 896,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420755",
    "pull_request_review_id": null,
    "id": 41420755,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDIwNzU1",
    "diff_hunk": "@@ -837,3 +869,42 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;\n+    }\n+}\n+\n+void CTxMemPool::TrimToSize(size_t sizelimit) {\n+    LOCK(cs);\n+",
    "path": "src/txmempool.cpp",
    "position": 123,
    "original_position": 121,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "What do you think about tracking the size and number of transactions that are removed here and debug logging it at the end?\n",
    "created_at": "2015-10-07T17:37:27Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420755",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420755"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41420755"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41420755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 900,
    "original_line": 902,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41447522",
    "pull_request_review_id": null,
    "id": 41447522,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTIy",
    "diff_hunk": "@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (expired != 0)\n+                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+            if (!mempool.exists(tx.GetHash()))\n+                return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 72,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "also log slightly more info here\n",
    "created_at": "2015-10-07T21:07:18Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41447522",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41447522"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41447522"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41447522/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 966,
    "original_line": 966,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41450271",
    "pull_request_review_id": null,
    "id": 41450271,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMjcx",
    "diff_hunk": "@@ -2354,6 +2368,8 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         }\n     }\n \n+    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);",
    "path": "src/main.cpp",
    "position": 130,
    "original_position": 109,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "morcos",
      "id": 4360349,
      "node_id": "MDQ6VXNlcjQzNjAzNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4360349?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/morcos",
      "html_url": "https://github.com/morcos",
      "followers_url": "https://api.github.com/users/morcos/followers",
      "following_url": "https://api.github.com/users/morcos/following{/other_user}",
      "gists_url": "https://api.github.com/users/morcos/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/morcos/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/morcos/subscriptions",
      "organizations_url": "https://api.github.com/users/morcos/orgs",
      "repos_url": "https://api.github.com/users/morcos/repos",
      "events_url": "https://api.github.com/users/morcos/events{/privacy}",
      "received_events_url": "https://api.github.com/users/morcos/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm not a fan of having this in InvalidateBlock.\n",
    "created_at": "2015-10-07T21:30:20Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41450271",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41450271"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41450271"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41450271/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2373,
    "original_line": 2371,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41465900",
    "pull_request_review_id": null,
    "id": 41465900,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1OTAw",
    "diff_hunk": "@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (expired != 0)\n+                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+            if (!mempool.exists(tx.GetHash()))\n+                return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"mempool full\");",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 72,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Not sure what else to log here?\n",
    "created_at": "2015-10-08T00:44:02Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41465900",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41465900"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41465900"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41465900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 966,
    "original_line": 966,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466408",
    "pull_request_review_id": null,
    "id": 41466408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2NDA4",
    "diff_hunk": "@@ -2354,6 +2368,8 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n         }\n     }\n \n+    mempool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);",
    "path": "src/main.cpp",
    "position": 130,
    "original_position": 109,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree, but the alternative seems to be to do it per disconnected block?\n",
    "created_at": "2015-10-08T00:53:14Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41466408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41466408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2373,
    "original_line": 2371,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466708",
    "pull_request_review_id": null,
    "id": 41466708,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY2NzA4",
    "diff_hunk": "@@ -837,3 +869,42 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+    }\n+    return CFeeRate(rollingMinimumFeeRate);\n+}\n+\n+void CTxMemPool::trackPackageRemoved(const CFeeRate& rate) {\n+    AssertLockHeld(cs);\n+    if (rate.GetFeePerK() > rollingMinimumFeeRate) {\n+        rollingMinimumFeeRate = rate.GetFeePerK();\n+        blockSinceLastRollingFeeBump = false;",
    "path": "src/txmempool.cpp",
    "position": 117,
    "original_position": 115,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Did it in one print at the end of TrimToSize instead.\n",
    "created_at": "2015-10-08T00:58:56Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41466708",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466708"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41466708"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41466708/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 894,
    "original_line": 896,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41468645",
    "pull_request_review_id": null,
    "id": 41468645,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4NjQ1",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CFeeRate mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n+        if (mempoolRejectFee > ::minRelayTxFee && nFees < ::minRelayTxFee.GetFee(nSize) + mempoolRejectFee.GetFee(nSize)) {",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 52,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "7940a90bcc032e6c1693340b6378627e2b62f943",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yea, indeed, trying to address suhas' comments about not wanting to call ::minRelayTxFee in mempool made this worse, but I agree that it wasnt ideal to begin with.\n",
    "created_at": "2015-10-08T01:41:55Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41468645",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41468645"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41468645"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41468645/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 889,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41758998",
    "pull_request_review_id": null,
    "id": 41758998,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU4OTk4",
    "diff_hunk": "@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);\n+            if (expired != 0)\n+                LogPrint(\"mempool\", \"Expired %i transactions from the memory pool\\n\", expired);\n+\n+            pool.TrimToSize(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000, ::minRelayTxFee);\n+            if (!mempool.exists(tx.GetHash()))",
    "path": "src/main.cpp",
    "position": null,
    "original_position": 71,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "abb36aa255e5ce93e25d8ee9cf17c5a2843833cc",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "there a reason why it's not pool.exists rather than mempool?\n",
    "created_at": "2015-10-12T14:04:30Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41758998",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41758998"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r41758998"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/41758998/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 965,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041520",
    "pull_request_review_id": null,
    "id": 42041520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNTIw",
    "diff_hunk": "@@ -397,6 +419,20 @@ class CTxMemPool\n      */\n     bool CalculateMemPoolAncestors(const CTxMemPoolEntry &entry, setEntries &setAncestors, uint64_t limitAncestorCount, uint64_t limitAncestorSize, uint64_t limitDescendantCount, uint64_t limitDescendantSize, std::string &errString, bool fSearchForParents = true);\n \n+    /** The minimum fee to get into the mempool, which may itself not be enough\n+\t *  for larger-sized transactions.\n+\t *  The minReasonableRelayFee constructor arg is used to bound the time it\n+     *  takes the fee rate to go back down all the way to 0. When the feerate\n+     *  would otherwise be half of this, it is set to 0 instead.\n+\t */",
    "path": "src/txmempool.h",
    "position": null,
    "original_position": 96,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: docblock alignment/formatting is squiff \n",
    "created_at": "2015-10-14T19:34:45Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42041520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42041520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 427,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041893",
    "pull_request_review_id": null,
    "id": 42041893,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxODkz",
    "diff_hunk": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);",
    "path": "src/main.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think recent events proved this was too low, so I'm not sure we should revert it all the way back.\n",
    "created_at": "2015-10-14T19:37:55Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42041893",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041893"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42041893"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42041893/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42043050",
    "pull_request_review_id": null,
    "id": 42043050,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQzMDUw",
    "diff_hunk": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);",
    "path": "src/main.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh? Recent events proved it was too low as the only mempool-limiting mechanism (which it is now). But if it doesnt matter for mempool limiting I'm not sure thats true?\n",
    "created_at": "2015-10-14T19:47:19Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42043050",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42043050"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42043050"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42043050/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42078247",
    "pull_request_review_id": null,
    "id": 42078247,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc4MjQ3",
    "diff_hunk": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);",
    "path": "src/main.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "btcdrak",
      "id": 7275704,
      "node_id": "MDQ6VXNlcjcyNzU3MDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7275704?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/btcdrak",
      "html_url": "https://github.com/btcdrak",
      "followers_url": "https://api.github.com/users/btcdrak/followers",
      "following_url": "https://api.github.com/users/btcdrak/following{/other_user}",
      "gists_url": "https://api.github.com/users/btcdrak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/btcdrak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/btcdrak/subscriptions",
      "organizations_url": "https://api.github.com/users/btcdrak/orgs",
      "repos_url": "https://api.github.com/users/btcdrak/repos",
      "events_url": "https://api.github.com/users/btcdrak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/btcdrak/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Wouldn't this be better discussed in a separate PR?\n",
    "created_at": "2015-10-15T02:42:02Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42078247",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42078247"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42078247"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42078247/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42080052",
    "pull_request_review_id": null,
    "id": 42080052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwMDUy",
    "diff_hunk": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);",
    "path": "src/main.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changint it to anything but 1000, probably. But the 5000 change was done as a temporary hack to fix mempool until something better comes along. Dont take this as an update, its just reverting the now-useless commit :)\n",
    "created_at": "2015-10-15T03:22:37Z",
    "updated_at": "2015-10-19T09:41:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42080052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42080052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42080052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42080052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42479274",
    "pull_request_review_id": null,
    "id": 42479274,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc5Mjc0",
    "diff_hunk": "@@ -75,7 +75,7 @@ uint64_t nPruneTarget = 0;\n bool fAlerts = DEFAULT_ALERTS;\n \n /** Fees smaller than this (in satoshi) are considered zero fee (for relaying and mining) */\n-CFeeRate minRelayTxFee = CFeeRate(5000);\n+CFeeRate minRelayTxFee = CFeeRate(1000);",
    "path": "src/main.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "9e93640be6c49fa1505ba5c5df8c89210da5a6e4",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, please, let's leave changing default values for policy parameters to separate PRs.\n",
    "created_at": "2015-10-20T10:36:26Z",
    "updated_at": "2015-10-20T10:36:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42479274",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42479274"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42479274"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42479274/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 78,
    "original_line": 78,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480405",
    "pull_request_review_id": null,
    "id": 42480405,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwNDA1",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);",
    "path": "src/main.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would prefer that this new `GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE)` global was initialized only in one place: init.cpp\n",
    "created_at": "2015-10-20T10:49:10Z",
    "updated_at": "2015-10-20T10:49:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480405",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480405"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480405"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480405/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 888,
    "original_line": 888,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480489",
    "pull_request_review_id": null,
    "id": 42480489,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwNDg5",
    "diff_hunk": "@@ -954,6 +954,17 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n \n         // Store transaction in memory\n         pool.addUnchecked(hash, entry, setAncestors, !IsInitialBlockDownload());\n+\n+        // trim mempool and check if tx was trimmed\n+        if (!fOverrideMempoolLimit) {\n+            int expired = pool.Expire(GetTime() - GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60);",
    "path": "src/main.cpp",
    "position": 75,
    "original_position": 75,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY)` could also be initialized in init.cpp\n",
    "created_at": "2015-10-20T10:50:02Z",
    "updated_at": "2015-10-20T10:50:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480489",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480489"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480489"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480489/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 960,
    "original_line": 960,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480972",
    "pull_request_review_id": null,
    "id": 42480972,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgwOTcy",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe these belong to txmempool.h ?\n",
    "created_at": "2015-10-20T10:56:18Z",
    "updated_at": "2015-10-20T10:56:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480972",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480972"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42480972"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42480972/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481483",
    "pull_request_review_id": null,
    "id": 42481483,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxNDgz",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMHO the logic for deciding what goes into the mempool doesn't belong in\ntxmempool, only what is necessary to maintain its efficiency and\ncorrectness.\n",
    "created_at": "2015-10-20T11:02:38Z",
    "updated_at": "2015-10-20T11:02:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481483",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481483"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481483"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481483/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481557",
    "pull_request_review_id": null,
    "id": 42481557,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxNTU3",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);",
    "path": "src/main.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree, but I don't care strongly. It's already violated in many places,\nthough.\n",
    "created_at": "2015-10-20T11:03:33Z",
    "updated_at": "2015-10-20T11:03:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481557",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481557"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481557"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481557/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 888,
    "original_line": 888,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481993",
    "pull_request_review_id": null,
    "id": 42481993,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgxOTkz",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The logic is in txmempool already, these are just default values for a couple of new policy globals.\n",
    "created_at": "2015-10-20T11:09:10Z",
    "updated_at": "2015-10-20T11:09:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481993",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481993"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42481993"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42481993/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42482248",
    "pull_request_review_id": null,
    "id": 42482248,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgyMjQ4",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The logic for enforcing it is, but not the logic to decide what the limits\nare.\n\nPlease don't encourage moving more policy decisions to the mempool...\n",
    "created_at": "2015-10-20T11:12:16Z",
    "updated_at": "2015-10-20T11:12:16Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42482248",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42482248"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42482248"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42482248/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42483170",
    "pull_request_review_id": null,
    "id": 42483170,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDgzMTcw",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Well, my general approach is not moving more policy to main. I had encapsulated policy in txmempool (including all the uses of global minTxRelayFee) , decoupled policy/fee from txmempool (done in master thanks to @morcos ) and also decoupled txmempool from policy/fee once. Of course it doesn't make sense to redo that work while waiting for one of these mempool limit PRs to be merged since they are clearly going to break that effort again.\n\nWhat about moving them to policy/policy.h instead of putting them on main?\n",
    "created_at": "2015-10-20T11:24:51Z",
    "updated_at": "2015-10-20T11:24:51Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42483170",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42483170"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42483170"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42483170/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559396",
    "pull_request_review_id": null,
    "id": 42559396,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5Mzk2",
    "diff_hunk": "@@ -879,17 +876,20 @@ bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransa\n         CAmount nFees = nValueIn-nValueOut;\n         double dPriority = view.GetPriority(tx, chainActive.Height());\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), mempool.HasNoInputsOf(tx));\n+        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx));\n         unsigned int nSize = entry.GetTxSize();\n \n         // Don't accept it if it can't get into a block\n-        CAmount txMinFee = GetMinRelayFee(tx, nSize, true);\n+        CAmount txMinFee = GetMinRelayFee(tx, pool, nSize, true);\n         if (fLimitFree && nFees < txMinFee)\n             return state.DoS(0, false, REJECT_INSUFFICIENTFEE, \"insufficient fee\", false,\n                 strprintf(\"%d < %d\", nFees, txMinFee));\n \n-        // Require that free transactions have sufficient priority to be mined in the next block.\n-        if (GetBoolArg(\"-relaypriority\", true) && nFees < ::minRelayTxFee.GetFee(nSize) && !AllowFree(view.GetPriority(tx, chainActive.Height() + 1))) {\n+        CAmount mempoolRejectFee = pool.GetMinFee(GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(nSize);",
    "path": "src/main.cpp",
    "position": 60,
    "original_position": 60,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Seems like an easy thing to do in a separate PR.\n",
    "created_at": "2015-10-20T21:48:42Z",
    "updated_at": "2015-10-20T21:48:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42559396",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559396"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42559396"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559396/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 888,
    "original_line": 888,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559430",
    "pull_request_review_id": null,
    "id": 42559430,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTU5NDMw",
    "diff_hunk": "@@ -51,6 +51,10 @@ static const unsigned int DEFAULT_ANCESTOR_SIZE_LIMIT = 900;\n static const unsigned int DEFAULT_DESCENDANT_LIMIT = 1000;\n /** Default for -limitdescendantsize, maximum kilobytes of in-mempool descendants */\n static const unsigned int DEFAULT_DESCENDANT_SIZE_LIMIT = 2500;\n+/** Default for -maxmempool, maximum megabytes of mempool memory usage */\n+static const unsigned int DEFAULT_MAX_MEMPOOL_SIZE = 300;\n+/** Default for -mempoolexpiry, expiration time for mempool transactions in hours */\n+static const unsigned int DEFAULT_MEMPOOL_EXPIRY = 72;",
    "path": "src/main.h",
    "position": 7,
    "original_position": 7,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can we do this in a separate PR? It seems a bit late to be bikeshedding on where to put constants.\n",
    "created_at": "2015-10-20T21:48:55Z",
    "updated_at": "2015-10-20T21:48:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42559430",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559430"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42559430"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42559430/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 57,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42978487",
    "pull_request_review_id": null,
    "id": 42978487,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTc4NDg3",
    "diff_hunk": "@@ -305,15 +306,18 @@ void CTxMemPoolEntry::UpdateState(int64_t modifySize, CAmount modifyFee, int64_t\n     }\n }\n \n-CTxMemPool::CTxMemPool(const CFeeRate& _minRelayFee) :\n+CTxMemPool::CTxMemPool(const CFeeRate& _minReasonableRelayFee) :\n     nTransactionsUpdated(0)\n {\n+    clear();",
    "path": "src/txmempool.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This change produces a crash on osx.\n\n```\njonasschnelli$ ./src/bitcoind --regtest\nlibc++abi.dylib: terminating with uncaught exception of type boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >: boost: mutex lock failed in pthread_mutex_lock: Invalid argument\n```\n\nStacktrace goes back to `cxx_global_var_initXX()`.\nI think calling `LOCK()` from global var init (`CTxMemPool mempool(::minRelayTxFee);`) through this new `clear()` (which LOCKS mempool) is problematic.\n",
    "created_at": "2015-10-26T10:44:55Z",
    "updated_at": "2015-10-26T10:44:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42978487",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42978487"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r42978487"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/42978487/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 312,
    "original_line": 312,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633066967",
    "pull_request_review_id": 660420885,
    "id": 633066967,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYzMzA2Njk2Nw==",
    "diff_hunk": "@@ -837,3 +862,62 @@ const CTxMemPool::setEntries & CTxMemPool::GetMemPoolChildren(txiter entry) cons\n     assert(it != mapLinks.end());\n     return it->second.children;\n }\n+\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n+    LOCK(cs);\n+    if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n+        return CFeeRate(rollingMinimumFeeRate);\n+\n+    int64_t time = GetTime();\n+    if (time > lastRollingFeeUpdate + 10) {\n+        double halflife = ROLLING_FEE_HALFLIFE;\n+        if (DynamicMemoryUsage() < sizelimit / 4)\n+            halflife /= 4;\n+        else if (DynamicMemoryUsage() < sizelimit / 2)\n+            halflife /= 2;\n+\n+        rollingMinimumFeeRate = rollingMinimumFeeRate / pow(2.0, (time - lastRollingFeeUpdate) / halflife);\n+        lastRollingFeeUpdate = time;\n+\n+        if (rollingMinimumFeeRate < minReasonableRelayFee.GetFeePerK() / 2) {\n+            rollingMinimumFeeRate = 0;\n+            return CFeeRate(0);\n+        }\n+    }\n+    return std::max(CFeeRate(rollingMinimumFeeRate), minReasonableRelayFee);",
    "path": "src/txmempool.cpp",
    "position": 110,
    "original_position": 110,
    "commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "original_commit_id": "58254aa3bc2e92840679183cc884eb76670af525",
    "user": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why is it limited to minReasonableRelayFee here, but on line 869, it isn't?",
    "created_at": "2021-05-16T09:21:46Z",
    "updated_at": "2021-05-16T09:21:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r633066967",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633066967"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/6722#discussion_r633066967"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/6722"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/633066967/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 887,
    "original_line": 887,
    "side": "RIGHT"
  }
]