[
  {
    "sha": "65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NWI5NDU0NTAzNmFlNmUzOGU3OWU5YzcxNjZhM2JhMWRkYjgzZjY2",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-06-08T20:34:58Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2015-06-08T20:34:58Z"
      },
      "message": "Use best header chain timestamps to detect partitioning\n\nThe partition checking code was using chainActive timestamps\nto detect partitioning; with headers-first syncing, it should use\n(and with this pull request, does use) pIndexBestHeader timestamps.\n\nFixes issue #6251",
      "tree": {
        "sha": "52cc4ffb2c8ecb667b41cc9fbbc51badb523a6ab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/52cc4ffb2c8ecb667b41cc9fbbc51badb523a6ab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlV1/N8ACgkQdYgkL74406gsNACfZqTwwEX3YcNyq2rH8Z7PEENz\nEFMAniim2sGubXF9MAK6NbbLJqMN17Ub\n=w70P\n-----END PGP SIGNATURE-----",
        "payload": "tree 52cc4ffb2c8ecb667b41cc9fbbc51badb523a6ab\nparent 55294a9fb673ab0a7c99b9c18279fe12a5a07890\nauthor Gavin Andresen <gavinandresen@gmail.com> 1433795698 -0400\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1433795698 -0400\n\nUse best header chain timestamps to detect partitioning\n\nThe partition checking code was using chainActive timestamps\nto detect partitioning; with headers-first syncing, it should use\n(and with this pull request, does use) pIndexBestHeader timestamps.\n\nFixes issue #6251\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "55294a9fb673ab0a7c99b9c18279fe12a5a07890",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/55294a9fb673ab0a7c99b9c18279fe12a5a07890",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/55294a9fb673ab0a7c99b9c18279fe12a5a07890"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 16,
      "deletions": 14
    },
    "files": [
      {
        "sha": "ac1b68de8beffd16a82dd1503746e6a41f63f7e1",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
        "patch": "@@ -1396,7 +1396,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Monitor the chain, and alert if we get blocks much quicker or slower than expected\n     int64_t nPowTargetSpacing = Params().GetConsensus().nPowTargetSpacing;\n     CScheduler::Function f = boost::bind(&PartitionCheck, &IsInitialBlockDownload,\n-                                         boost::ref(cs_main), boost::cref(chainActive), nPowTargetSpacing);\n+                                         boost::ref(cs_main), boost::cref(pindexBestHeader), nPowTargetSpacing);\n     scheduler.scheduleEvery(f, nPowTargetSpacing);\n \n #ifdef ENABLE_WALLET"
      },
      {
        "sha": "d74db2b9205d8c35fd668c95a45294b5fd40ac37",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
        "patch": "@@ -1711,9 +1711,10 @@ void ThreadScriptCheck() {\n // we're being fed a bad chain (blocks being generated much\n // too slowly or too quickly).\n //\n-void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CChain& chain, int64_t nPowTargetSpacing)\n+void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CBlockIndex *const &bestHeader,\n+                    int64_t nPowTargetSpacing)\n {\n-    if (initialDownloadCheck()) return;\n+    if (bestHeader == NULL || initialDownloadCheck()) return;\n \n     static int64_t lastAlertTime = 0;\n     int64_t now = GetAdjustedTime();\n@@ -1729,10 +1730,13 @@ void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const\n     int64_t startTime = GetAdjustedTime()-SPAN_SECONDS;\n \n     LOCK(cs);\n-    int h = chain.Height();\n-    while (h > 0 && chain[h]->GetBlockTime() >= startTime)\n-        --h;\n-    int nBlocks = chain.Height()-h;\n+    const CBlockIndex* i = bestHeader;\n+    int nBlocks = 0;\n+    while (i->GetBlockTime() >= startTime) {\n+        ++nBlocks;\n+        i = i->pprev;\n+        if (i == NULL) return; // Ran out of chain, we must not be fully sync'ed\n+    }\n \n     // How likely is it to find that many by chance?\n     double p = boost::math::pdf(poisson, nBlocks);"
      },
      {
        "sha": "2d39367fc671a5b749da4614499e6043c8e20da2",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
        "patch": "@@ -186,7 +186,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle);\n /** Run an instance of the script checking thread */\n void ThreadScriptCheck();\n /** Try to detect Partition (network isolation) attacks against us */\n-void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CChain& chain, int64_t nPowTargetSpacing);\n+void PartitionCheck(bool (*initialDownloadCheck)(), CCriticalSection& cs, const CBlockIndex *const &bestHeader, int64_t nPowTargetSpacing);\n /** Check whether we are doing an initial block download (synchronizing from disk or network) */\n bool IsInitialBlockDownload();\n /** Format a string that describes several potential problems detected by the core */"
      },
      {
        "sha": "38dcc6023c1969d538e9e297dde491a1bdee93b9",
        "filename": "src/test/alert_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 6,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/test/alert_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/65b94545036ae6e38e79e9c7166a3ba1ddb83f66/src/test/alert_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/alert_tests.cpp?ref=65b94545036ae6e38e79e9c7166a3ba1ddb83f66",
        "patch": "@@ -201,7 +201,6 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n {\n     // Test PartitionCheck\n     CCriticalSection csDummy;\n-    CChain chainDummy;\n     CBlockIndex indexDummy[100];\n     CChainParams& params = Params(CBaseChainParams::MAIN);\n     int64_t nPowTargetSpacing = params.GetConsensus().nPowTargetSpacing;\n@@ -220,17 +219,16 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n         // Other members don't matter, the partition check code doesn't\n         // use them\n     }\n-    chainDummy.SetTip(&indexDummy[99]);\n \n     // Test 1: chain with blocks every nPowTargetSpacing seconds,\n     // as normal, no worries:\n-    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n     BOOST_CHECK(strMiscWarning.empty());\n \n     // Test 2: go 3.5 hours without a block, expect a warning:\n     now += 3*60*60+30*60;\n     SetMockTime(now);\n-    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n     BOOST_CHECK(!strMiscWarning.empty());\n     BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n     strMiscWarning = \"\";\n@@ -239,7 +237,7 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n     // code:\n     now += 60*10;\n     SetMockTime(now);\n-    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n     BOOST_CHECK(strMiscWarning.empty());\n \n     // Test 4: get 2.5 times as many blocks as expected:\n@@ -248,7 +246,7 @@ BOOST_AUTO_TEST_CASE(PartitionAlert)\n     int64_t quickSpacing = nPowTargetSpacing*2/5;\n     for (int i = 0; i < 100; i++) // Tweak chain timestamps:\n         indexDummy[i].nTime = now - (100-i)*quickSpacing;\n-    PartitionCheck(falseFunc, csDummy, chainDummy, nPowTargetSpacing);\n+    PartitionCheck(falseFunc, csDummy, &indexDummy[99], nPowTargetSpacing);\n     BOOST_CHECK(!strMiscWarning.empty());\n     BOOST_TEST_MESSAGE(std::string(\"Got alert text: \")+strMiscWarning);\n     strMiscWarning = \"\";"
      }
    ]
  }
]