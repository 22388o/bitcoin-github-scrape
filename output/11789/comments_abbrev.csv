Sjors,2017-11-29T18:56:21Z,ConceptACK. The `--combinedlogslen` option seems quite useful outside of Travis as well.,https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-347960116,347960116,
MarcoFalke,2017-11-29T20:49:00Z,"utACK ff8a9b068ae15c569ce66abb58bf6f909b879a7d.\n\nShould also work on travis: C.f. the red ones in https://travis-ci.org/MarcoFalke/bitcoin/builds/309170074",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-347991570,347991570,
jnewbery,2017-11-29T21:07:18Z,"Thanks @MarcoFalke - good to know!\n\nI haven't tested this on windows and I don't have a windows test environment to hand. Is someone able to do that?",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-347996428,347996428,
MarcoFalke,2017-11-29T21:32:07Z,"@jnewbery We are using some non-windows code in other places, so I'd be surprised to see it running on Windows with current master.",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-348003016,348003016,
laanwj,2017-11-30T12:40:22Z,"I'm fairly sure that this way of launching another python script does not work on windows (because there is no #! interpreter handling). But yeah, as we don't run Travis on windows, I don't think it should prevent this from getting merged. Easy enough to just avoid the option if it doesn't work if you run manually.\n\nutACK ff8a9b0",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-348177076,348177076,
jnewbery,2017-11-30T12:51:49Z,"> I'm fairly sure that this way of launching another python script does not work on windows (because there is no #! interpreter handling)\n\nGood point. I think that's right, which I think means that `test_runner.py` wouldn't work at all on windows - the tests themselves are invoked in the same way.\n\nIf we want to modify this to work on windows I think we'd need to modify all those calls to ",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-348179510,348179510,
laanwj,2017-11-30T17:01:21Z,"> If we want to modify this to work on windows I think we'd need to modify all those calls to push python to the head of the args list in all those calls to subprocess\n\nRight. Handling this in a fully portable way is non-trivial - you'd have to figure out what the current interpreter is, and start the script with that. Not sure what the canonical way is. Would warrant an utility function in it",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-348252769,348252769,
jnewbery,2017-11-30T17:11:56Z,"Python launcher for windows: https://docs.python.org/3/using/windows.html#python-launcher-for-windows should help. If the test_runner is launched with the launcher and all the scripts have the same shebang, then I think they'd use the same interpreter.",https://github.com/bitcoin/bitcoin/pull/11789#issuecomment-348255889,348255889,
MarcoFalke,2017-11-29T19:28:06Z,"Sorry I missed this when looking at that branch initially, but I doubt this will work on Windows.\n\nSince there are plans to work on native Windows builds (https://github.com/bitcoin/bitcoin/pull/11526#issuecomment-345606323) and hopefully tests, I'd prefer if we avoided the code churn.",https://github.com/bitcoin/bitcoin/pull/11789#discussion_r153890740,153890740,test/functional/test_runner.py
MarcoFalke,2017-11-29T20:11:03Z,"Also, subprocess.run was introduced in python 3.5. However, our supported version is 3.4",https://github.com/bitcoin/bitcoin/pull/11789#discussion_r153901883,153901883,test/functional/test_runner.py
jnewbery,2017-11-29T20:15:43Z,"yeah - I noticed that too :(\n\nPushed a new version which I think should fix both problems:\n- use `subprocess.Popen().communicate()`\n- don't use the braindead `shell=True` argument and actually pass in arguments to the subprocess properly",https://github.com/bitcoin/bitcoin/pull/11789#discussion_r153902987,153902987,test/functional/test_runner.py
