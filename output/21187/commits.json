[
  {
    "sha": "d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjFkMmIyNjRjZDc3YzAyN2EwNmY2ODI4OWNmNGMzZjE3N2QxZWQw",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-09T06:42:11Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-18T09:28:06Z"
      },
      "message": "[net] Change AdvertiseLocal to GetLocalAddrForPeer\n\nGossiping addresses to peers is the responsibility of net processing.\nChange AdvertiseLocal() in net to just return an (optional) address\nfor net processing to advertise. Update function name to reflect\nnew responsibility.",
      "tree": {
        "sha": "8af47d2c169f527e619efae3c9c979874e3a486e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8af47d2c169f527e619efae3c9c979874e3a486e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9bbf08bf98487eeb75f143c120cfd544ea3135fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9bbf08bf98487eeb75f143c120cfd544ea3135fb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9bbf08bf98487eeb75f143c120cfd544ea3135fb"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "bd89df63bfeb67f97bdccaa1bcc779db288b2e56",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "patch": "@@ -201,8 +201,7 @@ bool IsPeerAddrLocalGood(CNode *pnode)\n            IsReachable(addrLocal.GetNetwork());\n }\n \n-// pushes our own address to a peer\n-void AdvertiseLocal(CNode *pnode)\n+Optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n {\n     if (fListen && pnode->fSuccessfullyConnected)\n     {\n@@ -222,10 +221,12 @@ void AdvertiseLocal(CNode *pnode)\n         }\n         if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false))\n         {\n-            LogPrint(BCLog::NET, \"AdvertiseLocal: advertising address %s\\n\", addrLocal.ToString());\n-            pnode->PushAddress(addrLocal, rng);\n+            LogPrint(BCLog::NET, \"Advertising address %s to peer=%d\\n\", addrLocal.ToString(), pnode->GetId());\n+            return addrLocal;\n         }\n     }\n+    // Address is unroutable. Don't advertise.\n+    return nullopt;\n }\n \n // learn a new local address"
      },
      {
        "sha": "67d1cf0e55cd41d29cc35302a9167451db71f365",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "patch": "@@ -197,7 +197,8 @@ enum\n };\n \n bool IsPeerAddrLocalGood(CNode *pnode);\n-void AdvertiseLocal(CNode *pnode);\n+/** Returns a local address that we should advertise to this peer */\n+Optional<CAddress> GetLocalAddrForPeer(CNode *pnode);\n \n /**\n  * Mark a network as reachable or unreachable (no automatic connects to it)"
      },
      {
        "sha": "60b2975b674c5743aafeb726a4fbd6e513ebadd7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "patch": "@@ -4426,7 +4426,10 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n             if (pto->m_next_local_addr_send != 0us) {\n                 pto->m_addr_known->reset();\n             }\n-            AdvertiseLocal(pto);\n+            if (Optional<CAddress> local_addr = GetLocalAddrForPeer(pto)) {\n+                FastRandomContext insecure_rand;\n+                pto->PushAddress(*local_addr, insecure_rand);\n+            }\n             pto->m_next_local_addr_send = PoissonNextSend(current_time, AVG_LOCAL_ADDRESS_BROADCAST_INTERVAL);\n         }\n "
      },
      {
        "sha": "1c7c35528e79d5dc4bb3a315a9893936d13636f9",
        "filename": "src/test/net_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/test/net_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d21d2b264cd77c027a06f68289cf4c3f177d1ed0/src/test/net_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/net_tests.cpp?ref=d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "patch": "@@ -691,7 +691,7 @@ BOOST_AUTO_TEST_CASE(ipv4_peer_with_ipv6_addrMe_test)\n     pnode->SetAddrLocal(addrLocal);\n \n     // before patch, this causes undefined behavior detectable with clang's -fsanitize=memory\n-    AdvertiseLocal(&*pnode);\n+    GetLocalAddrForPeer(&*pnode);\n \n     // suppress no-checks-run warning; if this test fails, it's by triggering a sanitizer\n     BOOST_CHECK(1);"
      }
    ]
  },
  {
    "sha": "3e68efa615968e0c9d68a7f197c7852478f6be78",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZTY4ZWZhNjE1OTY4ZTBjOWQ2OGE3ZjE5N2M3ODUyNDc4ZjZiZTc4",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2020-07-09T06:52:48Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2021-02-18T09:43:13Z"
      },
      "message": "[net] Move checks from GetLocalAddrForPeer to caller\n\nGetLocalAddrForPeer() is only called in one place. The checks inside that\nfunction make more sense to be carried out be the caller:\n\n- fSuccessfullyConnected is already checked at the top of\n  SendMessages(), so must be true when we call GetLocalAddrForPeer()\n- fListen can go into the conditional before GetLocalAddrForPeer() is\n  called.",
      "tree": {
        "sha": "301599bfff85fb0e1a83b2d5dfccc46180e894cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/301599bfff85fb0e1a83b2d5dfccc46180e894cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3e68efa615968e0c9d68a7f197c7852478f6be78",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e68efa615968e0c9d68a7f197c7852478f6be78",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3e68efa615968e0c9d68a7f197c7852478f6be78",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3e68efa615968e0c9d68a7f197c7852478f6be78/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21d2b264cd77c027a06f68289cf4c3f177d1ed0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d21d2b264cd77c027a06f68289cf4c3f177d1ed0"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 20,
      "deletions": 21
    },
    "files": [
      {
        "sha": "533815b75522b379fd645507f9b30bfc90875767",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 20,
        "changes": 37,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e68efa615968e0c9d68a7f197c7852478f6be78/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e68efa615968e0c9d68a7f197c7852478f6be78/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=3e68efa615968e0c9d68a7f197c7852478f6be78",
        "patch": "@@ -203,27 +203,24 @@ bool IsPeerAddrLocalGood(CNode *pnode)\n \n Optional<CAddress> GetLocalAddrForPeer(CNode *pnode)\n {\n-    if (fListen && pnode->fSuccessfullyConnected)\n+    CAddress addrLocal = GetLocalAddress(&pnode->addr, pnode->GetLocalServices());\n+    if (gArgs.GetBoolArg(\"-addrmantest\", false)) {\n+        // use IPv4 loopback during addrmantest\n+        addrLocal = CAddress(CService(LookupNumeric(\"127.0.0.1\", GetListenPort())), pnode->GetLocalServices());\n+    }\n+    // If discovery is enabled, sometimes give our peer the address it\n+    // tells us that it sees us as in case it has a better idea of our\n+    // address than we do.\n+    FastRandomContext rng;\n+    if (IsPeerAddrLocalGood(pnode) && (!addrLocal.IsRoutable() ||\n+         rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n     {\n-        CAddress addrLocal = GetLocalAddress(&pnode->addr, pnode->GetLocalServices());\n-        if (gArgs.GetBoolArg(\"-addrmantest\", false)) {\n-            // use IPv4 loopback during addrmantest\n-            addrLocal = CAddress(CService(LookupNumeric(\"127.0.0.1\", GetListenPort())), pnode->GetLocalServices());\n-        }\n-        // If discovery is enabled, sometimes give our peer the address it\n-        // tells us that it sees us as in case it has a better idea of our\n-        // address than we do.\n-        FastRandomContext rng;\n-        if (IsPeerAddrLocalGood(pnode) && (!addrLocal.IsRoutable() ||\n-             rng.randbits((GetnScore(addrLocal) > LOCAL_MANUAL) ? 3 : 1) == 0))\n-        {\n-            addrLocal.SetIP(pnode->GetAddrLocal());\n-        }\n-        if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false))\n-        {\n-            LogPrint(BCLog::NET, \"Advertising address %s to peer=%d\\n\", addrLocal.ToString(), pnode->GetId());\n-            return addrLocal;\n-        }\n+        addrLocal.SetIP(pnode->GetAddrLocal());\n+    }\n+    if (addrLocal.IsRoutable() || gArgs.GetBoolArg(\"-addrmantest\", false))\n+    {\n+        LogPrint(BCLog::NET, \"Advertising address %s to peer=%d\\n\", addrLocal.ToString(), pnode->GetId());\n+        return addrLocal;\n     }\n     // Address is unroutable. Don't advertise.\n     return nullopt;"
      },
      {
        "sha": "428a45e73b23e7d52aeda6f71cfcbc07ea790d47",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3e68efa615968e0c9d68a7f197c7852478f6be78/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3e68efa615968e0c9d68a7f197c7852478f6be78/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3e68efa615968e0c9d68a7f197c7852478f6be78",
        "patch": "@@ -4416,7 +4416,9 @@ bool PeerManagerImpl::SendMessages(CNode* pto)\n         // Address refresh broadcast\n         auto current_time = GetTime<std::chrono::microseconds>();\n \n-        if (pto->RelayAddrsWithConn() && !::ChainstateActive().IsInitialBlockDownload() && pto->m_next_local_addr_send < current_time) {\n+        if (fListen && pto->RelayAddrsWithConn() &&\n+            !::ChainstateActive().IsInitialBlockDownload() &&\n+            pto->m_next_local_addr_send < current_time) {\n             // If we've sent before, clear the bloom filter for the peer, so that our\n             // self-announcement will actually go out.\n             // This might be unnecessary if the bloom filter has already rolled"
      }
    ]
  }
]