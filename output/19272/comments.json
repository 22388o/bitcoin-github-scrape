[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643800731",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-643800731",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 643800731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MzgwMDczMQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-14T18:01:39Z",
    "updated_at": "2020-06-19T20:25:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19145 (Add hash_type options for gettxoutsetinfo by fjahr)\n* #19107 (p2p: Refactor, move all header verification into the network layer, without changing behavior by troygiorshev)\n* #18642 (Use std::chrono for the time to rotate destination of addr messages + tests by naumenkogs)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/643800731/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644499712",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-644499712",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 644499712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDQ5OTcxMg==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-16T02:51:37Z",
    "updated_at": "2020-06-16T02:51:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "ACK 6b18bfefed402a904db45a19b9cd8c1cb5d4c337",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644499712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644607169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-644607169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 644607169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NDYwNzE2OQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-16T08:10:03Z",
    "updated_at": "2020-06-16T08:10:03Z",
    "author_association": "MEMBER",
    "body": "Thanks for reviewing @troygiorshev. Took your suggestion and also removed an unnecessary `disconnect_p2ps()` call in `test_oversized_msg()`.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/644607169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645285506",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645285506",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645285506,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTI4NTUwNg==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-17T10:14:47Z",
    "updated_at": "2020-06-17T10:14:47Z",
    "author_association": "MEMBER",
    "body": "Thank you for reviewing, @gzhao408. Took your suggestion and credited you as co-author in the commit.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645285506/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645462753",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645462753",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645462753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTQ2Mjc1Mw==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-17T15:57:39Z",
    "updated_at": "2020-06-17T15:57:39Z",
    "author_association": "MEMBER",
    "body": "I don't think we should be removing the `disconnect_p2ps` calls at the end of each subtest. Ideally the subtest finishes by leaving the node and fixture in as close a state to they were in originally. See https://github.com/bitcoin/bitcoin/pull/19304#discussion_r441643412",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645462753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645494091",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645494091",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645494091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTQ5NDA5MQ==",
    "user": {
      "login": "glozow",
      "id": 25183001,
      "node_id": "MDQ6VXNlcjI1MTgzMDAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/25183001?u=3e27bc6589085f3450be1b0e969d04008cc77565&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/glozow",
      "html_url": "https://github.com/glozow",
      "followers_url": "https://api.github.com/users/glozow/followers",
      "following_url": "https://api.github.com/users/glozow/following{/other_user}",
      "gists_url": "https://api.github.com/users/glozow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/glozow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/glozow/subscriptions",
      "organizations_url": "https://api.github.com/users/glozow/orgs",
      "repos_url": "https://api.github.com/users/glozow/repos",
      "events_url": "https://api.github.com/users/glozow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/glozow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-17T16:53:13Z",
    "updated_at": "2020-06-17T19:08:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jnewbery good point... \r\n> Ideally the subtest finishes by leaving the node and fixture in as close a state to they were in originally\r\n\r\nIn terms of state, I'm thinking state = (1) the `test_node.p2ps` array and (2) the connections between the node and its peers. \r\n\r\n(1) I think it's ok if the array has an extra entry if we're not using the `.p2p` property? Would you agree? If not, then yeah, we need to put `disconnect_p2ps()` back \ud83d\ude04 .\r\n\r\n(2) For connections: Definitely agree that subtests should disconnect peers to clean up after themselves. Either `node.disconnect_p2ps` or `peer.peer_disconnect` Some of the subtests call `wait_for_disconnect` which makes sure that they are disconnected from the peer's POV (no peer._transport). With #19252,`disconnect_p2ps` waits for node's POV (not in node.getpeerinfo()). \r\n\r\nI'm not sure if disconnected from peer's POV  == disconnected from the node's POV. If they're effectively the same, I'd say it's unnecessary to call `disconnect_p2ps` after `wait_for_disconnect`.\r\n\r\nI might be overthinking this haha, I dug into this when I thought superfluous `disconnect_p2ps` would cause performance problems \ud83d\ude05 .",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645494091/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645771410",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645771410",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645771410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTc3MTQxMA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T04:53:24Z",
    "updated_at": "2020-06-18T04:53:24Z",
    "author_association": "MEMBER",
    "body": "AFAICT the tests are order-independent with this PR, and I checked that this passes when rebased to current master:\r\n```diff\r\n+from test_framework.util import assert_equal\r\n  \r\n+    def assert_no_connected_peers(self):\r\n+        assert_equal(self.nodes[0].num_connected_mininodes(), 0)\r\n+\r\n     def run_test(self):\r\n         self.test_magic_bytes()\r\n+        self.assert_no_connected_peers()\r\n         self.test_checksum()\r\n+        self.assert_no_connected_peers()\r\n         self.test_size()\r\n+        self.assert_no_connected_peers()\r\n         self.test_msgtype()\r\n+        self.assert_no_connected_peers()\r\n         self.test_oversized_inv_msg()\r\n+        self.assert_no_connected_peers()\r\n         self.test_oversized_getdata_msg()\r\n+        self.assert_no_connected_peers()\r\n         self.test_oversized_headers_msg()\r\n+        self.assert_no_connected_peers()\r\n         self.test_resource_exhaustion()\r\n+        self.assert_no_connected_peers()\r\n```\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645771410/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645777808",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645777808",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645777808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTc3NzgwOA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T05:14:39Z",
    "updated_at": "2020-06-18T10:37:59Z",
    "author_association": "MEMBER",
    "body": "Anyway, removed the removal of `disconnect_p2ps`, and rebased to master to be sure all is well with the latest version of `disconnect_p2ps`. Edit: Improved the logging and the assertions with new ideas after reviewing #19107.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645777808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645964504",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645964504",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645964504,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTk2NDUwNA==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T11:47:06Z",
    "updated_at": "2020-06-18T11:47:06Z",
    "author_association": "MEMBER",
    "body": "@MarcoFalke several PRs on this test have been merged but no approval from you on this one. I think they are good improvements but feel free to close it if you disagree; it will save me from spinning my wheels.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645964504/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645968808",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645968808",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645968808,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTk2ODgwOA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T11:56:48Z",
    "updated_at": "2020-06-18T11:56:48Z",
    "author_association": "MEMBER",
    "body": "I generally use the conflicts list of DrahtBot to see which pr has the most reviews and is the most ready to merge and then get them in one by one if they have received their ACKs.\r\n\r\nWill take another look here. One sec",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645968808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645999775",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-645999775",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 645999775,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NTk5OTc3NQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T12:57:04Z",
    "updated_at": "2020-06-18T13:11:30Z",
    "author_association": "MEMBER",
    "body": "Rebased for merged #19304, reverted the chain setting, and removed a line left over from the last change (thanks Marco).\r\n\r\n```diff\r\n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\r\nVALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\r\n\r\n-        self.setup_clean_chain = False\r\n+        self.setup_clean_chain = True\r\n```\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/645999775/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646212014",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-646212014",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 646212014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjIxMjAxNA==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T17:44:26Z",
    "updated_at": "2020-06-18T17:44:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK ca658361c7e6a137d1ee8be8a005b35ad0426fa3\r\n\r\nReviewed and stepped through each test.  Verified that none of these changes caused linting errors.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646212014/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646307936",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-646307936",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 646307936,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjMwNzkzNg==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T21:11:30Z",
    "updated_at": "2020-06-18T21:11:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK 98af0f02055409af7f3d1a5df06d315f36b0b856",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/646307936/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647543895",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-647543895",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 647543895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzU0Mzg5NQ==",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?u=3f68150a5f30acd541d1ed279376cd20b78046b1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-22T14:10:07Z",
    "updated_at": "2020-06-24T19:58:02Z",
    "author_association": "MEMBER",
    "body": "Rebased, no changes. Thank you for ACKing @troygiorshev! Should be trivial to re-ack with `git range-diff 8ef15e8 98af0f0 56010f9`",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/647543895/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648531842",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-648531842",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 648531842,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODUzMTg0Mg==",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?u=84369c78e74365314bd9806230ab56f2c1585fb4&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T01:41:43Z",
    "updated_at": "2020-06-24T01:41:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "reACK 56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/648531842/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649036276",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#issuecomment-649036276",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19272",
    "id": 649036276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0OTAzNjI3Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-24T19:54:01Z",
    "updated_at": "2020-06-24T19:54:01Z",
    "author_association": "MEMBER",
    "body": "ACK 56010f9256 \ud83c\udf9b\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nACK 56010f9256 \ud83c\udf9b\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUicWwv+KIsi9o22/6uZbUTRM0UsyIPesQTV0ZcUzpXX8Sz27WY/psDv60xlD3+W\r\neUGgldLLYL1EBH8wWRbyMWsQ4WFQJILWXl6+8Cr2b8Lv9N1NhJ/z+u+FLfHHMlXt\r\ndRxOMXXsytLgH8g3eW8f7zWbH0RaHtre+gcBiYqWAEbzq4i8D8h4lEO8ggA5c9TC\r\niGgj4ACk04YvOXDTOOgfF4DJQXIn3CuHrh7y55zo5X7+hZp43YEDRaVtKnggLTiM\r\ndXZ3r3p+6i4Wqn2uFiZuw06rJN6PtSPEcBa8T3dmGVHixzPlXV5W3aILjU9TUGSV\r\ntMoysA6J0N/RPZVEL0pucUOjrJPB3l6ULSEnl4anjC9rvURvaWJogqwJ5Fa/73Tq\r\nOAFMkcO5iZod95zCDr6Alt34VI7nsJ//rej6/qpkeOSNc6vhQFbuSPaj5QNo/2Sc\r\nBF2ySsHCMluT0JrkGY8EYvMUJka5cO7D894tRvaudfhn6wWT2mNc/E+95LTsGflG\r\nEWs3YKPd\r\n=Yt/T\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `937d2e5bea5f5ff38ae343e4664be89319c7ac06458b75aca1a579bbd3abbcd1  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108937d2e5bea5f5ff38ae343e4664be89319c7ac06458b75aca1a579bbd3abbcd1f0102b1b41f1e5f0b64c1d09c95363978a9908fff01045f90d52f670c538a5bda1949651430208f1204bf312dcf8baa34258f9e9b8005e1055b20f6470a242c56ad7f88bc3a186139b08f1045ef3af44f0089f54ff4fefbb29080083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff0104c45f01c2e4bb0ad5eb0f01c80a7981008f0208e3707d6e366ac7eb1843df3600434f5f390219b1a4c15483245c7f2691c9c8308f1045ef3af43f008d797f720ecc915180083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010b6b9f4ae5b94e8db586f114c63b4df0308f020a50b3180783133877baa12ebfcac622aa6e763393fccf5a56edc6df9ef3ca0f608f1045ef3af43f0083e890a2a6bcd23fa0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/649036276/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439822415",
    "pull_request_review_id": 430212838,
    "id": 439822415,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTgyMjQxNQ==",
    "diff_hunk": "@@ -93,40 +101,47 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', msg_type, str(size)]):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 79,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "bc42270f216454fb9fb79183cb4a159d0f92f9c1",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "splitting up msg_type and size could match them on different lines, while we want to match both on the same line",
    "created_at": "2020-06-14T11:59:37Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r439822415",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439822415"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r439822415"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439822415/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439861808",
    "pull_request_review_id": 430246154,
    "id": 439861808,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg2MTgwOA==",
    "diff_hunk": "@@ -93,40 +101,47 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', msg_type, str(size)]):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 79,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "bc42270f216454fb9fb79183cb4a159d0f92f9c1",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point! Fixed. This made it apparent that in `net_processing.cpp` the debug logging for misbehaving from `headers` message size was a bit different from the equivalent misbehavior logging for `inv`, `getdata`, and `addr` message sizes. Fixed. If we don't want to touch it, we can also have each test pass in their own debug log message to test for.",
    "created_at": "2020-06-14T19:47:42Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r439861808",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439861808"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r439861808"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/439861808/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 106,
    "side": "RIGHT",
    "in_reply_to_id": 439822415
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440531901",
    "pull_request_review_id": 431094873,
    "id": 440531901,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzMTkwMQ==",
    "diff_hunk": "@@ -93,40 +101,47 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test serving many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")\n         for _ in range(80):\n             conn.send_message(msg_at_size)\n \n         # Check that, even though the node is being hammered by nonsense from one\n         # connection, it can still service other peers in a timely way.\n+        self.log.info(\"(b) Check node still services peer in a timely way\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 112,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "6b18bfefed402a904db45a19b9cd8c1cb5d4c337",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe this should specify \"other peers\"?  As it stands someone may miss the difference between `conn` and `conn2`.\r\n```suggestion\r\n        self.log.info(\"(b) Check node still services other peers in a timely way\")\r\n```",
    "created_at": "2020-06-16T01:18:11Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r440531901",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440531901"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r440531901"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440531901/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 135,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440664439",
    "pull_request_review_id": 431259474,
    "id": 440664439,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY2NDQzOQ==",
    "diff_hunk": "@@ -93,40 +101,47 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', 'peer=4 (40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test serving many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")\n         for _ in range(80):\n             conn.send_message(msg_at_size)\n \n         # Check that, even though the node is being hammered by nonsense from one\n         # connection, it can still service other peers in a timely way.\n+        self.log.info(\"(b) Check node still services peer in a timely way\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 112,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "6b18bfefed402a904db45a19b9cd8c1cb5d4c337",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-06-16T08:08:06Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r440664439",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440664439"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r440664439"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/440664439/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 135,
    "side": "RIGHT",
    "in_reply_to_id": 440531901
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174152",
    "pull_request_review_id": 433212471,
    "id": 442174152,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NDE1Mg==",
    "diff_hunk": "@@ -39,19 +43,22 @@ def __repr__(self):\n class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 25,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why is this changed?",
    "created_at": "2020-06-18T12:02:35Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442174152",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174152"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442174152"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174152/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174257",
    "pull_request_review_id": 433212471,
    "id": 442174257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NDI1Nw==",
    "diff_hunk": "@@ -19,7 +22,8 @@\n from test_framework.test_framework import BitcoinTestFramework\n \n MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 13,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nMSG_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH\r\n```",
    "created_at": "2020-06-18T12:02:49Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442174257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442174257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442174257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177051",
    "pull_request_review_id": 433216288,
    "id": 442177051,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzA1MQ==",
    "diff_hunk": "@@ -39,19 +43,22 @@ def __repr__(self):\n class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 25,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "i thought it was faster but can revert that change while rebasing",
    "created_at": "2020-06-18T12:08:15Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177051",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177051"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177051"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177051/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 442174152
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177573",
    "pull_request_review_id": 433217003,
    "id": 442177573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzU3Mw==",
    "diff_hunk": "@@ -39,19 +43,22 @@ def __repr__(self):\n class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 25,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "why would it be faster to copy the blocksdir as opposed to copy nothing?",
    "created_at": "2020-06-18T12:09:19Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 442174152
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177828",
    "pull_request_review_id": 433217378,
    "id": 442177828,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE3NzgyOA==",
    "diff_hunk": "@@ -19,7 +22,8 @@\n from test_framework.test_framework import BitcoinTestFramework\n \n MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 13,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good eye; that's an error introduced this morning in my last rebase, will fix",
    "created_at": "2020-06-18T12:09:47Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177828",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177828"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442177828"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442177828/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 442174257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442202120",
    "pull_request_review_id": 433250342,
    "id": 442202120,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwMjEyMA==",
    "diff_hunk": "@@ -19,7 +22,8 @@\n from test_framework.test_framework import BitcoinTestFramework\n \n MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 13,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Removed the line.",
    "created_at": "2020-06-18T12:52:11Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442202120",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442202120"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442202120"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442202120/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 27,
    "side": "RIGHT",
    "in_reply_to_id": 442174257
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442204131",
    "pull_request_review_id": 433253093,
    "id": 442204131,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwNDEzMQ==",
    "diff_hunk": "@@ -39,19 +43,22 @@ def __repr__(self):\n class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 25,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I (mis)understood(?) the discussions to say that using the cached chain was faster than spinning up a new one. Reverted.",
    "created_at": "2020-06-18T12:55:36Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442204131",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442204131"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442204131"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442204131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 442174152
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442205896",
    "pull_request_review_id": 433255430,
    "id": 442205896,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIwNTg5Ng==",
    "diff_hunk": "@@ -39,19 +43,22 @@ def __repr__(self):\n class InvalidMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n-        self.setup_clean_chain = True\n+        self.setup_clean_chain = False",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 25,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "efb9a952723d38312540ca4ce0fa2495b7fcbe52",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "There is no new chain generated in this test:\r\n\r\n```\r\n$ git grep generate 'test/functional/p2p_invalid_messages.py'\r\n$",
    "created_at": "2020-06-18T12:58:20Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442205896",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442205896"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442205896"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442205896/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 46,
    "side": "RIGHT",
    "in_reply_to_id": 442174152
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442308344",
    "pull_request_review_id": 433393267,
    "id": 442308344,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwODM0NA==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't understand this change. This is a \"headers\" message, so the original log seems correct - that it's a headers message of size x.",
    "created_at": "2020-06-18T15:21:23Z",
    "updated_at": "2020-06-19T12:28:11Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442308344",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442308344"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442308344"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442308344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442309750",
    "pull_request_review_id": 433393267,
    "id": 442309750,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwOTc1MA==",
    "diff_hunk": "@@ -86,73 +92,83 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n+        msgs = ['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff', DISCONNECTING]\n+        with self.nodes[0].assert_debug_log(msgs):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n+        with self.nodes[0].assert_debug_log([DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n+        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER  peer=', DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 130,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This comment \"test for memory exhaustion\" is no longer relevant. When the test was written, it tested the node's memory usage before and after sending the messages and asserted that it hadn't gone up. That was an unreliable test and so the memory checking was removed.",
    "created_at": "2020-06-18T15:23:24Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442309750",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442309750"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442309750"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442309750/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442311096",
    "pull_request_review_id": 433393267,
    "id": 442311096,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMTA5Ng==",
    "diff_hunk": "@@ -24,8 +27,8 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n+DISCONNECTING = 'disconnecting peer='",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 17,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "My preference is not to test the debug log for actions that we can test directly. Here, we can directly test that the peer has been disconnected, so I don't think we need to test for this message in the debug log.",
    "created_at": "2020-06-18T15:25:20Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442311096",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442311096"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442311096"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442311096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442315686",
    "pull_request_review_id": 433403255,
    "id": 442315686,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNTY4Ng==",
    "diff_hunk": "@@ -86,73 +92,83 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n+        msgs = ['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff', DISCONNECTING]\n+        with self.nodes[0].assert_debug_log(msgs):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n+        with self.nodes[0].assert_debug_log([DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n+        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER  peer=', DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 130,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks @jnewbery, what change would you suggest instead?",
    "created_at": "2020-06-18T15:31:57Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442315686",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442315686"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442315686"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442315686/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 442309750
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442318053",
    "pull_request_review_id": 433406342,
    "id": 442318053,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxODA1Mw==",
    "diff_hunk": "@@ -24,8 +27,8 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n+DISCONNECTING = 'disconnecting peer='",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 17,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I added this after noticing both here and in the #19107 that some of the tests aren't testing for the disconnection, and it's a free additional check. If a change made one of these disconnections no longer happen or be logged without warning, and no test needing to be changed, ISTM that could be a regression. ",
    "created_at": "2020-06-18T15:35:19Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442318053",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442318053"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442318053"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442318053/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT",
    "in_reply_to_id": 442311096
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442321180",
    "pull_request_review_id": 433410643,
    "id": 442321180,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMTE4MA==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't disagree but opted for the smallest change. Do you think the `inv`, `getdata`, and `addr` oversized messages misbehavior logging should be changed instead? Or are they all good as-is (in which case the `headers` one remains different, and each specific one can be passed into the `test_oversized_msg()` assertion function from the caller.)",
    "created_at": "2020-06-18T15:39:58Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442321180",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442321180"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442321180"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442321180/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT",
    "in_reply_to_id": 442308344
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442322742",
    "pull_request_review_id": 433412730,
    "id": 442322742,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMjc0Mg==",
    "diff_hunk": "@@ -86,73 +92,83 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n+        msgs = ['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff', DISCONNECTING]\n+        with self.nodes[0].assert_debug_log(msgs):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n+        with self.nodes[0].assert_debug_log([DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n+        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER  peer=', DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 130,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We could just remove \"to test for memory exhaustion\" but saying why could be good here.",
    "created_at": "2020-06-18T15:42:15Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442322742",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442322742"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442322742"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442322742/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 442309750
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442323055",
    "pull_request_review_id": 433413153,
    "id": 442323055,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyMzA1NQ==",
    "diff_hunk": "@@ -24,8 +27,8 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n+DISCONNECTING = 'disconnecting peer='",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 17,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Right - I think the fix is to test for disconnection, not to test for the log message that accompanies disconnection.",
    "created_at": "2020-06-18T15:42:42Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442323055",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442323055"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442323055"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442323055/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT",
    "in_reply_to_id": 442311096
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442327769",
    "pull_request_review_id": 433419276,
    "id": 442327769,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyNzc2OQ==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ah ok, it's to be consistent with the other logs. That's fine.",
    "created_at": "2020-06-18T15:49:24Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442327769",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442327769"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442327769"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442327769/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT",
    "in_reply_to_id": 442308344
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328131",
    "pull_request_review_id": 433419764,
    "id": 442328131,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyODEzMQ==",
    "diff_hunk": "@@ -86,73 +92,83 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n+        msgs = ['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff', DISCONNECTING]\n+        with self.nodes[0].assert_debug_log(msgs):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n+        with self.nodes[0].assert_debug_log([DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n+        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER  peer=', DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 130,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, I suggest removing \"to test for memory exhaustion\" because the test isn't doing that.",
    "created_at": "2020-06-18T15:49:56Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442328131",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328131"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442328131"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328131/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 442309750
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328340",
    "pull_request_review_id": 433420007,
    "id": 442328340,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMyODM0MA==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "IMO they should all be changed to `<type> message size = %u`.  `<type> message` because that sounds better to my ear, and `size` as opposed to `size()` because we're talking about the value of the function, not the function itself.\r\n\r\nThat said, I'll ACK anything that's consistent among these 4 logs.",
    "created_at": "2020-06-18T15:50:13Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442328340",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328340"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442328340"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442328340/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT",
    "in_reply_to_id": 442308344
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442342711",
    "pull_request_review_id": 433438848,
    "id": 442342711,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MjcxMQ==",
    "diff_hunk": "@@ -24,8 +27,8 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n+DISCONNECTING = 'disconnecting peer='",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 17,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Ok, in 4 cases it was only logging the disconnection because `disconnect_p2ps()` was previously being called in the scope of the `assert_debug_log`. Updating along with my review feedback in #19107.",
    "created_at": "2020-06-18T16:11:51Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442342711",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442342711"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442342711"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442342711/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT",
    "in_reply_to_id": 442311096
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442364941",
    "pull_request_review_id": 433467589,
    "id": 442364941,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NDk0MQ==",
    "diff_hunk": "@@ -86,73 +92,83 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n+        msgs = ['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff', DISCONNECTING]\n+        with self.nodes[0].assert_debug_log(msgs):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n+        with self.nodes[0].assert_debug_log([DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n+        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER  peer=', DISCONNECTING]):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', 'message {} size() = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('inv', msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg('getdata', msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg('headers', msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages of max data size 4MB to test for memory exhaustion\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 130,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks -- done.",
    "created_at": "2020-06-18T16:47:00Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442364941",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442364941"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442364941"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442364941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 156,
    "side": "RIGHT",
    "in_reply_to_id": 442309750
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442367444",
    "pull_request_review_id": 433470776,
    "id": 442367444,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NzQ0NA==",
    "diff_hunk": "@@ -24,8 +27,8 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n+DISCONNECTING = 'disconnecting peer='",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 17,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done -- good call, thanks.",
    "created_at": "2020-06-18T16:51:11Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442367444",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442367444"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442367444"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442367444/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 31,
    "side": "RIGHT",
    "in_reply_to_id": 442311096
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442369845",
    "pull_request_review_id": 433473955,
    "id": 442369845,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2OTg0NQ==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@troygiorshev I share your preference but opted for the minimum possible change. Given both of your reviews will try the changes you suggest.",
    "created_at": "2020-06-18T16:55:25Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442369845",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442369845"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442369845"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442369845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT",
    "in_reply_to_id": 442308344
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442387680",
    "pull_request_review_id": 433497802,
    "id": 442387680,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM4NzY4MA==",
    "diff_hunk": "@@ -3245,7 +3245,7 @@ bool ProcessMessage(CNode& pfrom, const std::string& msg_type, CDataStream& vRec\n         unsigned int nCount = ReadCompactSize(vRecv);\n         if (nCount > MAX_HEADERS_RESULTS) {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"headers message size = %u\", nCount));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"message headers size() = %u\", nCount));",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "255fbcaee556e743fc41532c13d80edd25941d50",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2020-06-18T17:26:43Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442387680",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442387680"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442387680"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442387680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3248,
    "side": "RIGHT",
    "in_reply_to_id": 442308344
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442403419",
    "pull_request_review_id": 433518548,
    "id": 442403419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwMzQxOQ==",
    "diff_hunk": "@@ -122,20 +124,21 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        self.log.info(\"Test oversized inv/getdata/headers messages are logged as misbehaving\")\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): inv message size = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): getdata message size = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 27,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "cb71adbf9338c8a3f8348c936d4c1caa1086a33f",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit cb71adbf9338c8a3f8348c936d4c1caa1086a33f:\r\n\r\nno need to pass the message type, since the message already knows its own type:\r\n\r\n```diff\r\ndiff --git a/test/functional/p2p_invalid_messages.py b/test/functional/p2p_invalid_messages.py\r\nindex f1ef5c6414..ad918bf3bb 100755\r\n--- a/test/functional/p2p_invalid_messages.py\r\n+++ b/test/functional/p2p_invalid_messages.py\r\n@@ -124,7 +124,8 @@ class InvalidMessagesTest(BitcoinTestFramework):\r\n             conn.sync_with_ping(timeout=1)\r\n             self.nodes[0].disconnect_p2ps()\r\n \r\n-    def test_oversized_msg(self, msg_type, msg, size):\r\n+    def test_oversized_msg(self, _, msg, size):\r\n+        msg_type = msg.msgtype.decode('ascii')\r\n         self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\r\n         with self.nodes[0].assert_debug_log(['Misbehaving', '{} message size = {}'.format(msg_type, size)]):\r\n             self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\r\n",
    "created_at": "2020-06-18T17:54:59Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442403419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442403419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442403419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442403419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442404333",
    "pull_request_review_id": 433518548,
    "id": 442404333,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQwNDMzMw==",
    "diff_hunk": "@@ -80,49 +80,49 @@ def test_buffer(self):\n     def test_magic_bytes(self):\n         self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n+        with self.nodes[0].assert_debug_log('PROCESSMESSAGE: INVALID MESSAGESTART badmsg'):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "058dbcec567eb5b6fa780f0adbbd70b421621c38",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "in commit 058dbcec567eb5b6fa780f0adbbd70b421621c38\r\n\r\nThis must stay an array. Otherwise it will assert nothing.",
    "created_at": "2020-06-18T17:56:40Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442404333",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442404333"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442404333"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442404333/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481523",
    "pull_request_review_id": 433619589,
    "id": 442481523,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4MTUyMw==",
    "diff_hunk": "@@ -80,49 +80,49 @@ def test_buffer(self):\n     def test_magic_bytes(self):\n         self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n+        with self.nodes[0].assert_debug_log('PROCESSMESSAGE: INVALID MESSAGESTART badmsg'):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "058dbcec567eb5b6fa780f0adbbd70b421621c38",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, done. I should have verified the method. Am in the long-standing habit of accepting either a string or an array in framework APIs I make, e.g.\r\n```diff\r\n     def assert_debug_log(self, expected_msgs, unexpected_msgs=None, timeout=2):\r\n+        if type(expected_msgs) == str:\r\n+            expected_msgs = [expected_msgs]\r\n+        if type(unexpected_msgs) == str:\r\n+            unexpected_msgs = [unexpected_msgs]\r\n         if unexpected_msgs is None:\r\n             unexpected_msgs = []\r\n```",
    "created_at": "2020-06-18T20:22:46Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442481523",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481523"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442481523"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481523/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 442404333
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481841",
    "pull_request_review_id": 433620013,
    "id": 442481841,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4MTg0MQ==",
    "diff_hunk": "@@ -122,20 +124,21 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        self.log.info(\"Test oversized inv/getdata/headers messages are logged as misbehaving\")\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): inv message size = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): getdata message size = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg_type, msg, size):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 27,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "cb71adbf9338c8a3f8348c936d4c1caa1086a33f",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nice; done.",
    "created_at": "2020-06-18T20:23:28Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442481841",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481841"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442481841"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442481841/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 127,
    "side": "RIGHT",
    "in_reply_to_id": 442403419
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442504928",
    "pull_request_review_id": 433650386,
    "id": 442504928,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNDkyOA==",
    "diff_hunk": "@@ -80,49 +80,49 @@ def test_buffer(self):\n     def test_magic_bytes(self):\n         self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n+        with self.nodes[0].assert_debug_log('PROCESSMESSAGE: INVALID MESSAGESTART badmsg'):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "058dbcec567eb5b6fa780f0adbbd70b421621c38",
    "user": {
      "login": "troygiorshev",
      "id": 5553787,
      "node_id": "MDQ6VXNlcjU1NTM3ODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5553787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/troygiorshev",
      "html_url": "https://github.com/troygiorshev",
      "followers_url": "https://api.github.com/users/troygiorshev/followers",
      "following_url": "https://api.github.com/users/troygiorshev/following{/other_user}",
      "gists_url": "https://api.github.com/users/troygiorshev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/troygiorshev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/troygiorshev/subscriptions",
      "organizations_url": "https://api.github.com/users/troygiorshev/orgs",
      "repos_url": "https://api.github.com/users/troygiorshev/repos",
      "events_url": "https://api.github.com/users/troygiorshev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/troygiorshev/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "plug: https://github.com/bitcoin/bitcoin/pull/18210",
    "created_at": "2020-06-18T21:11:24Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442504928",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442504928"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442504928"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442504928/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 442404333
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442772204",
    "pull_request_review_id": 433984115,
    "id": 442772204,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjc3MjIwNA==",
    "diff_hunk": "@@ -80,49 +80,49 @@ def test_buffer(self):\n     def test_magic_bytes(self):\n         self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n-        with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n+        with self.nodes[0].assert_debug_log('PROCESSMESSAGE: INVALID MESSAGESTART badmsg'):",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": null,
    "original_position": 5,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "058dbcec567eb5b6fa780f0adbbd70b421621c38",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I did try to add `: List[str]`, but for some reason it didn't complain when I passed a string. Maybe mypy was broken on my machine? ",
    "created_at": "2020-06-19T10:52:48Z",
    "updated_at": "2020-06-19T12:28:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442772204",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442772204"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r442772204"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/442772204/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 83,
    "side": "RIGHT",
    "in_reply_to_id": 442404333
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444932532",
    "pull_request_review_id": 436698677,
    "id": 444932532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzMjUzMg==",
    "diff_hunk": "@@ -24,8 +27,7 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Probably I am missing something, but this 5 bytes message length seems to be coming from `ser_string()` in `messages.py`. But is it something that the node also recognizes? It doesn't seem to be part of the p2p protocol.   ",
    "created_at": "2020-06-24T14:24:33Z",
    "updated_at": "2020-06-24T15:46:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r444932532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444932532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r444932532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444932532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444938726",
    "pull_request_review_id": 436698677,
    "id": 444938726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDkzODcyNg==",
    "diff_hunk": "@@ -76,83 +80,94 @@ def test_buffer(self):\n         self.nodes[0].disconnect_p2ps()\n \n     def test_magic_bytes(self):\n+        self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # modify magic bytes\n             msg = b'\\xff' * 4 + msg[4:]\n             conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n-\n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_msg(self, msg, size):\n+        msg_type = msg.msgtype.decode('ascii')\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '{} message size = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg(msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n-\n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages, each of maximum valid data size (4MB)\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 136,
    "original_position": 136,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "user": {
      "login": "rajarshimaitra",
      "id": 36541669,
      "node_id": "MDQ6VXNlcjM2NTQxNjY5",
      "avatar_url": "https://avatars.githubusercontent.com/u/36541669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rajarshimaitra",
      "html_url": "https://github.com/rajarshimaitra",
      "followers_url": "https://api.github.com/users/rajarshimaitra/followers",
      "following_url": "https://api.github.com/users/rajarshimaitra/following{/other_user}",
      "gists_url": "https://api.github.com/users/rajarshimaitra/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rajarshimaitra/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rajarshimaitra/subscriptions",
      "organizations_url": "https://api.github.com/users/rajarshimaitra/orgs",
      "repos_url": "https://api.github.com/users/rajarshimaitra/repos",
      "events_url": "https://api.github.com/users/rajarshimaitra/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rajarshimaitra/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Nit: \"Sending 80 junk messages...\". makes the log a bit more clear. ",
    "created_at": "2020-06-24T14:32:23Z",
    "updated_at": "2020-06-24T15:46:26Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r444938726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444938726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r444938726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/444938726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 155,
    "original_line": 155,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445354212",
    "pull_request_review_id": 437227155,
    "id": 445354212,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTM1NDIxMg==",
    "diff_hunk": "@@ -76,83 +80,94 @@ def test_buffer(self):\n         self.nodes[0].disconnect_p2ps()\n \n     def test_magic_bytes(self):\n+        self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # modify magic bytes\n             msg = b'\\xff' * 4 + msg[4:]\n             conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n             # Checksum is after start bytes (4B), message type (12B), len (4B)\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n             msg = msg_unrecognized(str_data=\"d\")\n             msg.msgtype = b'\\xff' * 12\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n-\n-    def test_large_inv(self):\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_msg(self, msg, size):\n+        msg_type = msg.msgtype.decode('ascii')\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '{} message size = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n+        self.nodes[0].disconnect_p2ps()\n+\n+    def test_oversized_inv_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_inv([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_getdata_msg(self):\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_getdata([CInv(MSG_TX, 1)] * size), size)\n+\n+    def test_oversized_headers_msg(self):\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg(msg_headers([CBlockHeader()] * size), size)\n+\n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n-\n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages, each of maximum valid data size (4MB)\")",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 136,
    "original_position": 136,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "\"junk messages\" is stated in the log immediately beforehand:\r\n```\r\n2020-06-25 ... TestFramework (INFO): Test node stays up despite many large junk messages\r\n2020-06-25 ... TestFramework (INFO): (a) Send 80 messages, each of maximum valid data size (4MB)\r\n2020-06-25 ... TestFramework (INFO): (b) Check node still services peers in a timely way\r\n2020-06-25 ... TestFramework (INFO): (c) Wait for node to drop junk messages, while remaining connected\r\n```",
    "created_at": "2020-06-25T07:18:00Z",
    "updated_at": "2020-06-25T07:18:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r445354212",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445354212"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r445354212"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445354212/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 155,
    "original_line": 155,
    "side": "RIGHT",
    "in_reply_to_id": 444938726
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445492211",
    "pull_request_review_id": 437406485,
    "id": 445492211,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTQ5MjIxMQ==",
    "diff_hunk": "@@ -24,8 +27,7 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix",
    "path": "test/functional/p2p_invalid_messages.py",
    "position": 16,
    "original_position": 16,
    "commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "original_commit_id": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We set `VALID_DATA_LIMIT` so that the length of the serialised `msg_unrecognized` message built with it will equal `MAX_PROTOCOL_MESSAGE_LENGTH`. This is verified at line 153; you can also add the following assertion at line 111\r\n```diff\r\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\r\n+            assert_equal(len(msg.serialize()), MAX_PROTOCOL_MESSAGE_LENGTH + 1)\r\n```\r\nor try changing the offset from 5 to 4 or 6.\r\n\r\nI've added this assertion and some other ones while testing @troygiorshev's net message headers refactoring and may propose the changes if they look worthwhile to me after a few days' time.",
    "created_at": "2020-06-25T11:33:58Z",
    "updated_at": "2020-06-25T11:33:58Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r445492211",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445492211"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19272#discussion_r445492211"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19272"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/445492211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 30,
    "original_line": 30,
    "side": "RIGHT",
    "in_reply_to_id": 444932532
  }
]