[
  {
    "sha": "9fa494dc0969c61d5ef33708a08923cca19ce091",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZmE0OTRkYzA5NjljNjFkNWVmMzM3MDhhMDg5MjNjY2ExOWNlMDkx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-17T09:08:56Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-19T12:14:16Z"
      },
      "message": "net: update misbehavior logging for oversized messages\n\nso that oversized ADDR, GETDATA, HEADERS and INV messages print\nthe same consistent debug logs.",
      "tree": {
        "sha": "51e793a84110f1b77b945aafdb5c19f8e69cb1ce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51e793a84110f1b77b945aafdb5c19f8e69cb1ce"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9fa494dc0969c61d5ef33708a08923cca19ce091",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7srB0ACgkQT1chs9Dj\nkh1pGhAAmDa/d6LwUk5OwXNN42l0icDUakCoXs0gsO87qTqqAv5ojjO9n1tkzElg\nvd4qlaRIcjG3lcjtLikvBKPJtwvehSrjmVW0ZRaqVDXAefnmvdJduKCz6TT4N/RG\ne98WtBsUtsOv8CcZ2GgkwRWqzj68Zcwado/ft59/M3U9/jT5QnP+x3NDRIP7Ckk/\npWVBPSXXV6Vt8yfW/eOL31HuuBKq+Z9yX2/ocoDuGt0KAufjbD8nF0h/eHWfiF/c\nq1MJuiX2rzMiy+BCEAS3fP52S4R+iKmWx/eFu7/12BYr6ciIzqrXn4p7SiX1ikH+\n09R3U7Xu4dtQ8vdBJ1ZfnEVdh0xh0+EQj451WKGHdCeAhReE4/zUZIwdM4FspGGc\ntfBpkal3VCCz3C5rTPnEQTDRFE1i6w56di8+6tTEfeUJ8NpbLOQ2uz8nF6865anr\ngVYob7orlSjoCMBrPve46jvqUoAStxSnbveqpSeh2+P7CyH2C8Bf+EyHtKV2fHHb\nm+1NRyyfbax81sFDUOdNqIs+j/yGI5uhW/TQ8QXHqDzPzc+aKEwQH6A44avVCtAh\nPdyidik+qnqtBSFLRm8n8aZxgmIjJ6V2g45V1XIZqUu8hjmtR5AOAo6HUrM3GYDj\nS/kCvHs/hS5HLnvYvApkRAc5y2oqx5mlz/x0Au/jXVbYsVcwLjQ=\n=8dtr\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwINy1kfU6Yr+pjBjIYwOuqH/EwPrLAGasGqKvCojG1UfWCP/wEDQWrQg+oN+q\n3U2+FGaZufMI8QRe7Kwg8AiNQYgUYCvlaQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQeuysc69E973zsYC+\n2NL2egjxBF7srB/wCLkq1Q0zC9FwAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQkQbY22nFBRUbjb+hjwPcSgjx\nBF7srCDwCMjEo9ZnPCDyAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRh\nci5ldGVybml0eXdhbGwuY29t8BDd4SmVtarXyGR3br+oRGvvCPEEXuysIPAIYQBq\nrCouDYYAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 51e793a84110f1b77b945aafdb5c19f8e69cb1ce\nparent 5f72ddb7ee4cc177de31f43c69390ee72687222a\nauthor Jon Atack <jon@atack.com> 1592384936 +0200\ncommitter Jon Atack <jon@atack.com> 1592568856 +0200\n\nnet: update misbehavior logging for oversized messages\n\nso that oversized ADDR, GETDATA, HEADERS and INV messages print\nthe same consistent debug logs.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa494dc0969c61d5ef33708a08923cca19ce091",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa494dc0969c61d5ef33708a08923cca19ce091",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa494dc0969c61d5ef33708a08923cca19ce091/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5f72ddb7ee4cc177de31f43c69390ee72687222a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f72ddb7ee4cc177de31f43c69390ee72687222a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5f72ddb7ee4cc177de31f43c69390ee72687222a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "b54a8a7c6d0c0f5a3107fd28325ee420a65e3a83",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa494dc0969c61d5ef33708a08923cca19ce091/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa494dc0969c61d5ef33708a08923cca19ce091/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=9fa494dc0969c61d5ef33708a08923cca19ce091",
        "patch": "@@ -2454,7 +2454,7 @@ void ProcessMessage(\n         if (vAddr.size() > 1000)\n         {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"message addr size() = %u\", vAddr.size()));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"addr message size = %u\", vAddr.size()));\n             return;\n         }\n \n@@ -2530,7 +2530,7 @@ void ProcessMessage(\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"message inv size() = %u\", vInv.size()));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"inv message size = %u\", vInv.size()));\n             return;\n         }\n \n@@ -2596,7 +2596,7 @@ void ProcessMessage(\n         if (vInv.size() > MAX_INV_SZ)\n         {\n             LOCK(cs_main);\n-            Misbehaving(pfrom.GetId(), 20, strprintf(\"message getdata size() = %u\", vInv.size()));\n+            Misbehaving(pfrom.GetId(), 20, strprintf(\"getdata message size = %u\", vInv.size()));\n             return;\n         }\n "
      },
      {
        "sha": "5c7e27a3a81c822fb87f3ca6e58aa81b94cdd5f4",
        "filename": "test/functional/p2p_addr_relay.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa494dc0969c61d5ef33708a08923cca19ce091/test/functional/p2p_addr_relay.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa494dc0969c61d5ef33708a08923cca19ce091/test/functional/p2p_addr_relay.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_addr_relay.py?ref=9fa494dc0969c61d5ef33708a08923cca19ce091",
        "patch": "@@ -49,9 +49,9 @@ def run_test(self):\n         addr_source = self.nodes[0].add_p2p_connection(P2PInterface())\n         msg = msg_addr()\n \n-        self.log.info('Send too large addr message')\n+        self.log.info('Send too-large addr message')\n         msg.addrs = ADDRS * 101\n-        with self.nodes[0].assert_debug_log(['message addr size() = 1010']):\n+        with self.nodes[0].assert_debug_log(['addr message size = 1010']):\n             addr_source.send_and_ping(msg)\n \n         self.log.info('Check that addr message content is relayed and added to addrman')"
      },
      {
        "sha": "8fe594cc783aeef4bcc057369f20e3830e6740c6",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9fa494dc0969c61d5ef33708a08923cca19ce091/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9fa494dc0969c61d5ef33708a08923cca19ce091/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=9fa494dc0969c61d5ef33708a08923cca19ce091",
        "patch": "@@ -121,10 +121,10 @@ def test_msgtype(self):\n \n     def test_large_inv(self):\n         conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): message inv size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): inv message size = 50001']):\n             msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): message getdata size() = 50001']):\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): getdata message size = 50001']):\n             msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n             conn.send_and_ping(msg)\n         with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):"
      }
    ]
  },
  {
    "sha": "e2b21d8a597c536a8617408d43958bfe9f98a442",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMmIyMWQ4YTU5N2M1MzZhODYxNzQwOGQ0Mzk1OGJmZTlmOThhNDQy",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-14T10:38:44Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-19T12:14:25Z"
      },
      "message": "test: add p2p_invalid_messages logging",
      "tree": {
        "sha": "5a1bdc445a1ebb3bf1474a2c6289dd0dda9781d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5a1bdc445a1ebb3bf1474a2c6289dd0dda9781d6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e2b21d8a597c536a8617408d43958bfe9f98a442",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7srCEACgkQT1chs9Dj\nkh1WAw//TG0IgUSqUjkqkzPXPDHtBuwfPhdsyu8dYXK5Np/+gSaPTknceWIsHTGO\nHxQriphe6FPIGhC86NaK7c80Q6kbx4eAS9rY3B+Ohx6QeorkqndKcRko0p0tKiI8\nGPthSc1UwisqX0s76n8oKGcVZ4R2amdSJodrqYy2ztZ7Ybh9fNmUvenpxt0xTGG7\ncwmiLp7bctzgAxIgkClUDhwAQbp2BHrVGL1cZXEuF0H6MZ8MNDlic0r1cUn7p5ip\n/LxlJy8iBJ8ifIsYa52hDvZgtvKz1aXDn0cg6xZOLlAaMsMVvQuNAIfkojxQjeeG\n4DJLjRilqw2FlHhzvotTctuQwjPyICUk9Zgvaf/K6Jt6tS21pi3yYIt6l3CQF5Ja\ntG0+xxzccQ6lG6Q8a/dcNvCd3vIU0CbHpMcDldWdM1ZN7Q0Xd+EZWXLFlHlnzWpi\nJX3aRI+nODpv01G1bK+6zvzg8Cz1zCx+/9Eu2Nt++UJitpR7+/UgWUFigdR4JrT+\n7SmziBN75LL0hzSYmMcGMcy3VJTa83mwWr3WEL8k06rgHFi6bl5ODxpw4N15GPp9\nsX+vgQmWF2q2wUtcAWe+UVL4l/co+obW0F/CJdsESR4EfN0ZkwjgmAViS//sJUZP\nllJcmUm6Sozur2fSOhhFi27tuS20Fk5xDhDjI1Bw+AIYx2GGwSM=\n=i/Ee\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICWOM0eZ+J+Clxk0rPWLJUYbDskfsZqmxB18/+W2MB4DCP/wEBl153OgLvrx\nbXy2qU/wj8sI8QRe7Kwk8AhVM+fHSJt+3gCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEFhAiJkfhjGhhM8AedDwNL8I\n8CDD8qRgc03uyeStM+Kb5zVSXs0GlyuZifzkz12GFN+w2gjxBF7srCPwCL/4uLOe\n8cotAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn//AQjVf4g7w0KyvV1S9KlaVBGQjxBF7srCTwCM7PY7pG2WmFAIPf\n4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t8BDxGzHq\ntJEF5gJlGqM/cuSvCPEEXuysI/AIGxJBJtfuGpoAg9/jDS75DI4uLWh0dHBzOi8v\nYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5a1bdc445a1ebb3bf1474a2c6289dd0dda9781d6\nparent 9fa494dc0969c61d5ef33708a08923cca19ce091\nauthor Jon Atack <jon@atack.com> 1592131124 +0200\ncommitter Jon Atack <jon@atack.com> 1592568865 +0200\n\ntest: add p2p_invalid_messages logging\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b21d8a597c536a8617408d43958bfe9f98a442",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b21d8a597c536a8617408d43958bfe9f98a442",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b21d8a597c536a8617408d43958bfe9f98a442/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9fa494dc0969c61d5ef33708a08923cca19ce091",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9fa494dc0969c61d5ef33708a08923cca19ce091",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9fa494dc0969c61d5ef33708a08923cca19ce091"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "007613b30075180855ed638d2429e079dbf74098",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 12,
        "deletions": 7,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e2b21d8a597c536a8617408d43958bfe9f98a442/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e2b21d8a597c536a8617408d43958bfe9f98a442/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=e2b21d8a597c536a8617408d43958bfe9f98a442",
        "patch": "@@ -57,7 +57,7 @@ def run_test(self):\n         self.test_resource_exhaustion()\n \n     def test_buffer(self):\n-        self.log.info(\"Test message with header split across two buffers, should be received\")\n+        self.log.info(\"Test message with header split across two buffers is received\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         # Create valid message\n         msg = conn.build_message(msg_ping(nonce=12345))\n@@ -76,6 +76,7 @@ def test_buffer(self):\n         self.nodes[0].disconnect_p2ps()\n \n     def test_magic_bytes(self):\n+        self.log.info(\"Test message with invalid magic bytes disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: INVALID MESSAGESTART badmsg']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n@@ -86,6 +87,7 @@ def test_magic_bytes(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n+        self.log.info(\"Test message with invalid checksum logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['CHECKSUM ERROR (badmsg, 2 bytes), expected 78df0a04 was ffffffff']):\n             msg = conn.build_message(msg_unrecognized(str_data=\"d\"))\n@@ -98,16 +100,17 @@ def test_checksum(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n+        self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['']):\n-            # Create a message with oversized payload\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n             self.nodes[0].p2p.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n+        self.log.info(\"Test message with invalid message type logs an error\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['PROCESSMESSAGE: ERRORS IN HEADER']):\n             msg = msg_unrecognized(str_data=\"d\")\n@@ -120,6 +123,7 @@ def test_msgtype(self):\n             self.nodes[0].disconnect_p2ps()\n \n     def test_large_inv(self):\n+        self.log.info(\"Test oversized inv/getdata/headers messages are logged as misbehaving\")\n         conn = self.nodes[0].add_p2p_connection(P2PInterface())\n         with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): inv message size = 50001']):\n             msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n@@ -133,25 +137,26 @@ def test_large_inv(self):\n         self.nodes[0].disconnect_p2ps()\n \n     def test_resource_exhaustion(self):\n+        self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n         assert len(msg_at_size.serialize()) == MSG_LIMIT\n \n-        self.log.info(\"Sending a bunch of large, junk messages to test memory exhaustion. May take a bit...\")\n-\n-        # Run a bunch of times to test for memory exhaustion.\n+        self.log.info(\"(a) Send 80 messages, each of maximum valid data size (4MB)\")\n         for _ in range(80):\n             conn.send_message(msg_at_size)\n \n         # Check that, even though the node is being hammered by nonsense from one\n         # connection, it can still service other peers in a timely way.\n+        self.log.info(\"(b) Check node still services peers in a timely way\")\n         for _ in range(20):\n             conn2.sync_with_ping(timeout=2)\n \n-        # Peer 1, despite being served up a bunch of nonsense, should still be connected.\n-        self.log.info(\"Waiting for node to drop junk messages.\")\n+        self.log.info(\"(c) Wait for node to drop junk messages, while remaining connected\")\n         conn.sync_with_ping(timeout=400)\n+\n+        # Peer 1, despite being served up a bunch of nonsense, should still be connected.\n         assert conn.is_connected\n         self.nodes[0].disconnect_p2ps()\n "
      }
    ]
  },
  {
    "sha": "57960192a5362ff1a7b996995332535f4c2a25c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Nzk2MDE5MmE1MzYyZmYxYTdiOTk2OTk1MzMyNTM1ZjRjMmEyNWMz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-14T10:43:57Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-19T12:14:29Z"
      },
      "message": "test: refactor test_large_inv() into 3 tests with common method",
      "tree": {
        "sha": "ae52992f4c5cedb9ec7c2b4d9c9a247b01478cb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ae52992f4c5cedb9ec7c2b4d9c9a247b01478cb6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/57960192a5362ff1a7b996995332535f4c2a25c3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7srCUACgkQT1chs9Dj\nkh3WBA//SDrLry94B0xrxl7Z+/yQuhokcy0qUeXhGUvjpBAr7pZVxlFTyn1cE4XV\ne5QfcPqPbfRjleSXbeeDa/N/OULB7NBHZhTMhapYHu8WfbNLZEzOSz5s+qi2cZfD\nwScrFG8lGHhtgLDu/hkuNYqkTGEmtTGKNNV7iXpgAFku4LjOltgb5y4oblpU11Da\nCYAFonkQYhD8IV8hG37Ipplk5Wyww+zu6O9QZ5XNYuOLwWWihL/vUd1zGwPIwU3V\nGS7QeC+LDh29P9XUG22sWmv+Df+Ns1vOKbvD3zVWiCcxyKsc3C/YdUbfOsQg/HaA\nASg9lkT5Plm+0HFVLscj1MCce/UDh4xl1xQ7KwTqcJ3Y+Urv+5B2nm0Z6/Lp2TOL\n5nwhevErDwBiuM2m65WN4O2YVFFG8VqZImRgNNeJW021fpv3jpiyNed1bfUU9eSs\nlIwvt4PBA23rAf+aFVWi7YJCXWGmdHPttCJVCFfVbBO+YGdT7vxio+57SwmqnDiB\ng7mp9WP/Ft2OBWFRbf45EJjz2y8bMOf9B29LNh9PShHWRVuwf9ld2U7Okos4GrvD\nXIpcqzPLEW7qXVqypW+pq1R1WZf/Kl1UYJAkU0NJPH9anSKQlRTZ8NEIBks4aZd3\nJEGkZP8uA6+gAxOuwOxRNvYS88q5CKL5CMyK0PGKDfs5X5u1ztI=\n=F6Q8\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIKn0a8ZgnvnpaIdoBqu1JrHIf+DMEzqMQRXye/Di0q/FCP/wEAwVARVhjFIa\nBeScPkXZYpEI8QRe7Kwo8AiDQltA9tw0OACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEDffyQ9ynII8brs0JHNCfQEI8QRe7Kwo\n8AhXvro3paaYdgCD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEL9iheF/TBE3f4A3VjhbmgAI8QRe7Kwm8AhpQEwCM00J\nawCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ/AQ4rKtf1xoT7eXJvd3mK4h2AjxBF7srCfwCFVNT2hr4eDXAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ae52992f4c5cedb9ec7c2b4d9c9a247b01478cb6\nparent e2b21d8a597c536a8617408d43958bfe9f98a442\nauthor Jon Atack <jon@atack.com> 1592131437 +0200\ncommitter Jon Atack <jon@atack.com> 1592568869 +0200\n\ntest: refactor test_large_inv() into 3 tests with common method\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57960192a5362ff1a7b996995332535f4c2a25c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/57960192a5362ff1a7b996995332535f4c2a25c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57960192a5362ff1a7b996995332535f4c2a25c3/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e2b21d8a597c536a8617408d43958bfe9f98a442",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e2b21d8a597c536a8617408d43958bfe9f98a442",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e2b21d8a597c536a8617408d43958bfe9f98a442"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 17,
      "deletions": 13
    },
    "files": [
      {
        "sha": "387d2665498ba7e56120c985bdf18b59ca68a632",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 17,
        "deletions": 13,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/57960192a5362ff1a7b996995332535f4c2a25c3/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/57960192a5362ff1a7b996995332535f4c2a25c3/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=57960192a5362ff1a7b996995332535f4c2a25c3",
        "patch": "@@ -53,7 +53,9 @@ def run_test(self):\n         self.test_checksum()\n         self.test_size()\n         self.test_msgtype()\n-        self.test_large_inv()\n+        self.test_oversized_inv_msg()\n+        self.test_oversized_getdata_msg()\n+        self.test_oversized_headers_msg()\n         self.test_resource_exhaustion()\n \n     def test_buffer(self):\n@@ -122,20 +124,22 @@ def test_msgtype(self):\n             conn.sync_with_ping(timeout=1)\n             self.nodes[0].disconnect_p2ps()\n \n-    def test_large_inv(self):\n-        self.log.info(\"Test oversized inv/getdata/headers messages are logged as misbehaving\")\n-        conn = self.nodes[0].add_p2p_connection(P2PInterface())\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(0 -> 20): inv message size = 50001']):\n-            msg = msg_inv([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(20 -> 40): getdata message size = 50001']):\n-            msg = msg_getdata([CInv(MSG_TX, 1)] * 50001)\n-            conn.send_and_ping(msg)\n-        with self.nodes[0].assert_debug_log(['Misbehaving', '(40 -> 60): headers message size = 2001']):\n-            msg = msg_headers([CBlockHeader()] * 2001)\n-            conn.send_and_ping(msg)\n+    def test_oversized_msg(self, msg, size):\n+        msg_type = msg.msgtype.decode('ascii')\n+        self.log.info(\"Test {} message of size {} is logged as misbehaving\".format(msg_type, size))\n+        with self.nodes[0].assert_debug_log(['Misbehaving', '{} message size = {}'.format(msg_type, size)]):\n+            self.nodes[0].add_p2p_connection(P2PInterface()).send_and_ping(msg)\n         self.nodes[0].disconnect_p2ps()\n \n+    def test_oversized_inv_msg(self):\n+        self.test_oversized_msg(msg_inv([CInv(MSG_TX, 1)] * 50001), 50001)\n+\n+    def test_oversized_getdata_msg(self):\n+        self.test_oversized_msg(msg_getdata([CInv(MSG_TX, 1)] * 50001), 50001)\n+\n+    def test_oversized_headers_msg(self):\n+        self.test_oversized_msg(msg_headers([CBlockHeader()] * 2001), 2001)\n+\n     def test_resource_exhaustion(self):\n         self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())"
      }
    ]
  },
  {
    "sha": "75447f0893f9ad9bf83d182b301d139430d8de1c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NTQ0N2YwODkzZjlhZDliZjgzZDE4MmIzMDFkMTM5NDMwZDhkZTFj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-14T11:08:27Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-19T12:14:32Z"
      },
      "message": "test: improve msg sends and p2p disconnections in p2p_invalid_messages\n\n- call disconnect_p2ps() outside of the assert_debug_log scopes\n- send messages directly from the p2p conn rather than via nodes[0].p2p\n- add an assertion",
      "tree": {
        "sha": "33f1bc746720a21b7a55e56cf1f600f2ace23963",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33f1bc746720a21b7a55e56cf1f600f2ace23963"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/75447f0893f9ad9bf83d182b301d139430d8de1c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7srCgACgkQT1chs9Dj\nkh3Hew//fcJuQ9eVMQpCp6gcOhaBLd2k/c24KbPBWrZ6MVETAJ7+nTBLDwBDjbQz\nCou1bx8ZmamiIZX3twW6rCvTXZqkeK4a1r8moKhAUcA0bNINDNOGew0pgXrpG1qw\nRPNY2meoaO/5l7pxrXHxl71nuOA+s7fob+WeYF3DMWhoIaGhPIF7jKV6ZTfDrR9P\nqSoMC/hBPJvFDF3x9cTiYkA+0VWiu/V73pWfDthblNEjUpHaUG5TA7esIA0saDnn\nYUggbUk3U+rLeq0vfiRFl7b7TtXDiw8idSyZoDA65WsAuoSN10qHS9xucC5NJEw8\nnyzNY3vlI6jyuWgQzHKKFw5uncrTyzwjhonYL0DJsDMbHDhZtN0cz6g3I2FXRmTD\nvGkytr8OiPEVWZ6DN1Pwl6Zch0y+vHGtXXR9ftGXXGB7tym/uTa6aXSB9FOOqU6W\nqseShbAHArIZ49p3b2rdaXjw40zlTqZCYGOVjIHFkTarU4haLxkNultDS+hix1P+\nUJ3C4FmCC88hogPFZ+tsohNUAeGXXAsPB7Pk0QPjIP+lC3tzvY5x16x8NANyRgA/\nUJdeh00p2HmdQBMzK8hoQhfC1DDNmpEaei609PHI2A2UcrKnRatprXQm8jmEEthv\n1kxbJ0amS+S+79QE4VExOoDW0knbd/qim377+UGEjPs0c+gNsnc=\n=0p/G\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOhhDBX34uI5TWrpjPoZRkmOKbmOG9HmFigJSeFDFj+gCP/wEGFxP9oUa9IO\np7rqNZ39FdMI8QRe7Kwr8AidmaxO0AnDIACD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEH4hxydFxqUH8yfiN/EoX1sI\n8QRe7Kwq8AhbpYIrXNkEyQCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQnM20Yt41d3PD9W3Pbnp7/AjxBF7s\nrCvwCNnwqm8n6kEnAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BDzFNpxlCW2wQqIWJZLDmd2CPEEXuysKvAITGrQEsTAaWkAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 33f1bc746720a21b7a55e56cf1f600f2ace23963\nparent 57960192a5362ff1a7b996995332535f4c2a25c3\nauthor Jon Atack <jon@atack.com> 1592132907 +0200\ncommitter Jon Atack <jon@atack.com> 1592568872 +0200\n\ntest: improve msg sends and p2p disconnections in p2p_invalid_messages\n\n- call disconnect_p2ps() outside of the assert_debug_log scopes\n- send messages directly from the p2p conn rather than via nodes[0].p2p\n- add an assertion\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75447f0893f9ad9bf83d182b301d139430d8de1c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/75447f0893f9ad9bf83d182b301d139430d8de1c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75447f0893f9ad9bf83d182b301d139430d8de1c/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "57960192a5362ff1a7b996995332535f4c2a25c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/57960192a5362ff1a7b996995332535f4c2a25c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/57960192a5362ff1a7b996995332535f4c2a25c3"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "98a5563f553bde5ef097f6a4357e8079060c80b0",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/75447f0893f9ad9bf83d182b301d139430d8de1c/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/75447f0893f9ad9bf83d182b301d139430d8de1c/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=75447f0893f9ad9bf83d182b301d139430d8de1c",
        "patch": "@@ -86,7 +86,7 @@ def test_magic_bytes(self):\n             msg = b'\\xff' * 4 + msg[4:]\n             conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_checksum(self):\n         self.log.info(\"Test message with invalid checksum logs an error\")\n@@ -97,19 +97,19 @@ def test_checksum(self):\n             cut_len = 4 + 12 + 4\n             # modify checksum\n             msg = msg[:cut_len] + b'\\xff' * 4 + msg[cut_len + 4:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_size(self):\n         self.log.info(\"Test message with oversized payload disconnects peer\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         with self.nodes[0].assert_debug_log(['']):\n             msg = msg_unrecognized(str_data=\"d\" * (VALID_DATA_LIMIT + 1))\n             msg = conn.build_message(msg)\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.wait_for_disconnect(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_msgtype(self):\n         self.log.info(\"Test message with invalid message type logs an error\")\n@@ -120,9 +120,9 @@ def test_msgtype(self):\n             msg = conn.build_message(msg)\n             # Modify msgtype\n             msg = msg[:7] + b'\\x00' + msg[7 + 1:]\n-            self.nodes[0].p2p.send_raw_message(msg)\n+            conn.send_raw_message(msg)\n             conn.sync_with_ping(timeout=1)\n-            self.nodes[0].disconnect_p2ps()\n+        self.nodes[0].disconnect_p2ps()\n \n     def test_oversized_msg(self, msg, size):\n         msg_type = msg.msgtype.decode('ascii')\n@@ -160,8 +160,9 @@ def test_resource_exhaustion(self):\n         self.log.info(\"(c) Wait for node to drop junk messages, while remaining connected\")\n         conn.sync_with_ping(timeout=400)\n \n-        # Peer 1, despite being served up a bunch of nonsense, should still be connected.\n+        # Despite being served up a bunch of nonsense, the peers should still be connected.\n         assert conn.is_connected\n+        assert conn2.is_connected\n         self.nodes[0].disconnect_p2ps()\n \n "
      }
    ]
  },
  {
    "sha": "56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjAxMGY5MjU2NGE5NGIwY2E2YzAwOGMwZTZmNzRhMTlmYWQ0YTJh",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-14T10:54:37Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-06-19T12:14:35Z"
      },
      "message": "test: hoist p2p values to test framework constants",
      "tree": {
        "sha": "3f4ea1c0198ab6a5e688c98cc39148fd5d2df870",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f4ea1c0198ab6a5e688c98cc39148fd5d2df870"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl7srCsACgkQT1chs9Dj\nkh0iqRAAx+pj0yTa5WQzeCeggqqaLYqFYfyHxUzvNmFs7nLBXqWTiQhD/7tDtZrj\n+XdZWhQIaQ+LhtJQzzLBY/6RlVECQS6hZWss8oq2KqDTbINViVsnKzhN+z+57jL0\nADshPO0L/GM0oRKJGOhiSOx4gcQGtvphNJnL/JTy1P80gNiwVE8tLBhe+ayE5uod\nD305MZ+0vqq54N8ZcIV4etTIZYCFwPMudyjcoBYfXId2V2LrsW40nn8qTHVuqjWD\nGLkbU2urCVykcxnC0alOlvxaetV+cHFjL+i6IzZTIErKrHirz3a/ZyyRUxdz6TeM\ni4A7y7BhI7kQ8ia9+pIVUjpv4U/FyvemgP1MXDCkfT+A2/SJJbuEPGSnUxxRGlvp\nCFowA0pfsS7Zaxnno6sYBuczS4CQexgxWp1Q5VW/1B3wCQT064Yq4iv2wZPLcXPf\nVs34qwcDjX5b9W2V68weEK2N/lgjmKBr/LOHMIjoSqauPVXdUOhoiKCtgAjRprdh\nhCs0j8gR5H73DPnrUmeP1YaiYaMlrN0YLwSvji8kjXy9cpgjkGsETEdNvoRACvBf\naBB/V0rac7E9aw6D+f7KBpzkN5wEnkz9AwIyhhBf6ebLKicEDZ3nY7oP23qIZ8ed\nA1IFtP3avwDBkFQ0ZWb2r50d+gPXsHg3HEMK8/rTvqUCZvoZw+k=\n=0GK8\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAXDJWEdfpFGaHWXMDBidtpZzCLLePG4YXw1h8C0J+6NCP/wED77rPQE4cnm\n3Cf0Qa7xxQoI8QRe7Kwu8AjU2KEPhTjJDgCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEE1A+OXoQd+Xdq/6xWNQnF4I\n8QRe7Kwu8Ahzf7/25i86vQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbf/wEJpbKdedFHrH1pxo5b6l5e4I8QRe7Kwt8AiV2/QLYflC\nlACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BD5+74C+y6lTuwLhIRbkzSSCPEEXuysLfAI+dq6ipdezx4Ag9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3f4ea1c0198ab6a5e688c98cc39148fd5d2df870\nparent 75447f0893f9ad9bf83d182b301d139430d8de1c\nauthor Jon Atack <jon@atack.com> 1592132077 +0200\ncommitter Jon Atack <jon@atack.com> 1592568875 +0200\n\ntest: hoist p2p values to test framework constants\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "75447f0893f9ad9bf83d182b301d139430d8de1c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/75447f0893f9ad9bf83d182b301d139430d8de1c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/75447f0893f9ad9bf83d182b301d139430d8de1c"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "d9a9ae5188ef67f5941881cb80b73579f661b08c",
        "filename": "test/functional/p2p_invalid_messages.py",
        "status": "modified",
        "additions": 11,
        "deletions": 6,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/p2p_invalid_messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/p2p_invalid_messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_invalid_messages.py?ref=56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
        "patch": "@@ -7,6 +7,9 @@\n from test_framework.messages import (\n     CBlockHeader,\n     CInv,\n+    MAX_HEADERS_RESULTS,\n+    MAX_INV_SIZE,\n+    MAX_PROTOCOL_MESSAGE_LENGTH,\n     msg_getdata,\n     msg_headers,\n     msg_inv,\n@@ -24,8 +27,7 @@\n     wait_until,\n )\n \n-MSG_LIMIT = 4 * 1000 * 1000  # 4MB, per MAX_PROTOCOL_MESSAGE_LENGTH\n-VALID_DATA_LIMIT = MSG_LIMIT - 5  # Account for the 5-byte length prefix\n+VALID_DATA_LIMIT = MAX_PROTOCOL_MESSAGE_LENGTH - 5  # Account for the 5-byte length prefix\n \n class msg_unrecognized:\n     \"\"\"Nonsensical message. Modeled after similar types in test_framework.messages.\"\"\"\n@@ -132,20 +134,23 @@ def test_oversized_msg(self, msg, size):\n         self.nodes[0].disconnect_p2ps()\n \n     def test_oversized_inv_msg(self):\n-        self.test_oversized_msg(msg_inv([CInv(MSG_TX, 1)] * 50001), 50001)\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_inv([CInv(MSG_TX, 1)] * size), size)\n \n     def test_oversized_getdata_msg(self):\n-        self.test_oversized_msg(msg_getdata([CInv(MSG_TX, 1)] * 50001), 50001)\n+        size = MAX_INV_SIZE + 1\n+        self.test_oversized_msg(msg_getdata([CInv(MSG_TX, 1)] * size), size)\n \n     def test_oversized_headers_msg(self):\n-        self.test_oversized_msg(msg_headers([CBlockHeader()] * 2001), 2001)\n+        size = MAX_HEADERS_RESULTS + 1\n+        self.test_oversized_msg(msg_headers([CBlockHeader()] * size), size)\n \n     def test_resource_exhaustion(self):\n         self.log.info(\"Test node stays up despite many large junk messages\")\n         conn = self.nodes[0].add_p2p_connection(P2PDataStore())\n         conn2 = self.nodes[0].add_p2p_connection(P2PDataStore())\n         msg_at_size = msg_unrecognized(str_data=\"b\" * VALID_DATA_LIMIT)\n-        assert len(msg_at_size.serialize()) == MSG_LIMIT\n+        assert len(msg_at_size.serialize()) == MAX_PROTOCOL_MESSAGE_LENGTH\n \n         self.log.info(\"(a) Send 80 messages, each of maximum valid data size (4MB)\")\n         for _ in range(80):"
      },
      {
        "sha": "eb1244035f736f115dcb4b8acbede043b11daa80",
        "filename": "test/functional/test_framework/messages.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/test_framework/messages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/test_framework/messages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/messages.py?ref=56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
        "patch": "@@ -45,6 +45,10 @@\n \n BIP125_SEQUENCE_NUMBER = 0xfffffffd  # Sequence number that is BIP 125 opt-in and BIP 68-opt-out\n \n+MAX_PROTOCOL_MESSAGE_LENGTH = 4000000  # Maximum length of incoming protocol messages\n+MAX_HEADERS_RESULTS = 2000  # Number of headers sent in one getheaders result\n+MAX_INV_SIZE = 50000  # Maximum number of entries in an 'inv' protocol message\n+\n NODE_NETWORK = (1 << 0)\n NODE_GETUTXO = (1 << 1)\n NODE_BLOOM = (1 << 2)"
      },
      {
        "sha": "e6da33763d7c51c556653fe69d90b7282c7a189a",
        "filename": "test/functional/test_framework/mininode.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/test_framework/mininode.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/56010f92564a94b0ca6c008c0e6f74a19fad4a2a/test/functional/test_framework/mininode.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/mininode.py?ref=56010f92564a94b0ca6c008c0e6f74a19fad4a2a",
        "patch": "@@ -26,6 +26,7 @@\n \n from test_framework.messages import (\n     CBlockHeader,\n+    MAX_HEADERS_RESULTS,\n     MIN_VERSION_SUPPORTED,\n     msg_addr,\n     msg_block,\n@@ -553,7 +554,6 @@ def on_getheaders(self, message):\n             return\n \n         headers_list = [self.block_store[self.last_block_hash]]\n-        maxheaders = 2000\n         while headers_list[-1].sha256 not in locator.vHave:\n             # Walk back through the block store, adding headers to headers_list\n             # as we go.\n@@ -569,7 +569,7 @@ def on_getheaders(self, message):\n                 break\n \n         # Truncate the list if there are too many headers\n-        headers_list = headers_list[:-maxheaders - 1:-1]\n+        headers_list = headers_list[:-MAX_HEADERS_RESULTS - 1:-1]\n         response = msg_headers(headers_list)\n \n         if response is not None:"
      }
    ]
  }
]