[
  {
    "sha": "d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjQ0OGQ0MGZjZDNkZGY2NDI5YTZhZDg1YjlmNGFiOWJmY2MwYTE1",
    "commit": {
      "author": {
        "name": "Doron Somech",
        "email": "somdoron@gmail.com",
        "date": "2017-06-08T10:14:31Z"
      },
      "committer": {
        "name": "Doron Somech",
        "email": "somdoron@gmail.com",
        "date": "2017-10-19T13:43:04Z"
      },
      "message": "ZMQ: add publishers of wallet tx\n\nThere is no way to get real time notification of transactions that only affect the wallet.\nYou have to do that manually by enabling zmqrawtx and filter out transactions.\n\nI'm suggesting adding two new publisers, both for hash and raw wallet transactions.\n\nAlso topic will indicate if transaction came from mempool or block so developers can handle the transaction accordingly without a RPC round trip to bitcoind.",
      "tree": {
        "sha": "112885943312e4bf9d666e95fb7277f0be641568",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/112885943312e4bf9d666e95fb7277f0be641568"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/comments",
    "author": {
      "login": "somdoron",
      "id": 2715638,
      "node_id": "MDQ6VXNlcjI3MTU2Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2715638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/somdoron",
      "html_url": "https://github.com/somdoron",
      "followers_url": "https://api.github.com/users/somdoron/followers",
      "following_url": "https://api.github.com/users/somdoron/following{/other_user}",
      "gists_url": "https://api.github.com/users/somdoron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/somdoron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/somdoron/subscriptions",
      "organizations_url": "https://api.github.com/users/somdoron/orgs",
      "repos_url": "https://api.github.com/users/somdoron/repos",
      "events_url": "https://api.github.com/users/somdoron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/somdoron/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "somdoron",
      "id": 2715638,
      "node_id": "MDQ6VXNlcjI3MTU2Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2715638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/somdoron",
      "html_url": "https://github.com/somdoron",
      "followers_url": "https://api.github.com/users/somdoron/followers",
      "following_url": "https://api.github.com/users/somdoron/following{/other_user}",
      "gists_url": "https://api.github.com/users/somdoron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/somdoron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/somdoron/subscriptions",
      "organizations_url": "https://api.github.com/users/somdoron/orgs",
      "repos_url": "https://api.github.com/users/somdoron/repos",
      "events_url": "https://api.github.com/users/somdoron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/somdoron/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "02ac8c892b1fa98d9c4422f1bda89ea421ed17bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/02ac8c892b1fa98d9c4422f1bda89ea421ed17bd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/02ac8c892b1fa98d9c4422f1bda89ea421ed17bd"
      }
    ],
    "stats": {
      "total": 159,
      "additions": 151,
      "deletions": 8
    },
    "files": [
      {
        "sha": "c8de60438595ed656b86072fb948a9e5406bd9a1",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -58,8 +58,10 @@ Currently, the following notifications are supported:\n \n     -zmqpubhashtx=address\n     -zmqpubhashblock=address\n+    -zmqpubhashwallettx=address\n     -zmqpubrawblock=address\n     -zmqpubrawtx=address\n+    -zmqpubrawwallettx=address\n \n The socket type is PUB and the address must be a valid ZeroMQ socket\n address. The same address can be used in more than one notification.\n@@ -75,6 +77,15 @@ notification `-zmqpubhashtx` the topic is `hashtx` (no null\n terminator) and the body is the transaction hash (32\n bytes).\n \n+For wallet transaction notifications (both hash and tx), the\n+topic also indicate if the transaction came from a block\n+or mempool. If originated from mempool `-mempool` postfix\n+will be added to the topic, for block `-block` postfix will\n+be added. Because zeromq is using prefix matching for topics\n+you can subscribe to `rawwallettx` (or `hashwallettx`) to get\n+both notifications. If you only want one type of notification\n+subscribe to either `rawwallettx-mempool` or `rawwallettx-block`.\n+\n These options can also be provided in bitcoin.conf.\n \n ZeroMQ endpoint specifiers for TCP (and others) are documented in the"
      },
      {
        "sha": "fa936419a78759ea320161658737e3c86d3d864b",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -416,8 +416,10 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageGroup(_(\"ZeroMQ notification options:\"));\n     strUsage += HelpMessageOpt(\"-zmqpubhashblock=<address>\", _(\"Enable publish hash block in <address>\"));\n     strUsage += HelpMessageOpt(\"-zmqpubhashtx=<address>\", _(\"Enable publish hash transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubhashwallettx=<address>\", _(\"Enable publish hash wallet transaction in <address>\"));\n     strUsage += HelpMessageOpt(\"-zmqpubrawblock=<address>\", _(\"Enable publish raw block in <address>\"));\n     strUsage += HelpMessageOpt(\"-zmqpubrawtx=<address>\", _(\"Enable publish raw transaction in <address>\"));\n+    strUsage += HelpMessageOpt(\"-zmqpubrawwallettx=<address>\", _(\"Enable publish raw wallet transaction in <address>\"));\n #endif\n \n     strUsage += HelpMessageGroup(_(\"Debugging/Testing options:\"));\n@@ -1579,6 +1581,12 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n #ifdef ENABLE_WALLET\n     if (!OpenWallets())\n         return false;\n+\n+#if ENABLE_ZMQ\n+    if (pzmqNotificationInterface)\n+        pzmqNotificationInterface->ConnectToWalletSignals();\n+#endif\n+\n #else\n     LogPrintf(\"No wallet support compiled in!\\n\");\n #endif"
      },
      {
        "sha": "8816233242d874aea8e3f521b887a3b03890e44f",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -959,6 +959,9 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     // Notify UI of new or updated transaction\n     NotifyTransactionChanged(this, hash, fInsertedNew ? CT_NEW : CT_UPDATED);\n \n+    // Notify listeners on new wallet transaction\n+    TransactionAddedToWallet(wtx.tx, wtx.hashBlock);\n+\n     // notify an external script when a wallet transaction comes in or is updated\n     std::string strCmd = gArgs.GetArg(\"-walletnotify\", \"\");\n "
      },
      {
        "sha": "858128e06430b1ccbf2e63f125ac3d1186c18dbd",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -1060,6 +1060,9 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     boost::signals2::signal<void (CWallet *wallet, const uint256 &hashTx,\n             ChangeType status)> NotifyTransactionChanged;\n \n+    boost::signals2::signal<void (const CTransactionRef &ptxn,\n+                                  const uint256 &blockHash)> TransactionAddedToWallet;\n+\n     /** Show progress e.g. for rescan */\n     boost::signals2::signal<void (const std::string &title, int nProgress)> ShowProgress;\n "
      },
      {
        "sha": "0b96d2def2d96490a7bc06ea3d90990311d1d276",
        "filename": "src/zmq/zmqabstractnotifier.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqabstractnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqabstractnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.cpp?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -20,3 +20,7 @@ bool CZMQAbstractNotifier::NotifyTransaction(const CTransaction &/*transaction*/\n {\n     return true;\n }\n+\n+bool CZMQAbstractNotifier::NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock){\n+    return true;\n+}"
      },
      {
        "sha": "07bb32e6ae03c8107f66e0b95aa42c84bf23d25a",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -34,6 +34,7 @@ class CZMQAbstractNotifier\n \n     virtual bool NotifyBlock(const CBlockIndex *pindex);\n     virtual bool NotifyTransaction(const CTransaction &transaction);\n+    virtual bool NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock);\n \n protected:\n     void *psocket;"
      },
      {
        "sha": "6d3ad2a43f0baa8213c0121b277722848f13e1fa",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 40,
        "deletions": 0,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -10,6 +10,10 @@\n #include \"streams.h\"\n #include \"util.h\"\n \n+#ifdef ENABLE_WALLET\n+#include \"../wallet/wallet.h\"\n+#endif\n+\n void zmqError(const char *str)\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n@@ -37,8 +41,10 @@ CZMQNotificationInterface* CZMQNotificationInterface::Create()\n \n     factories[\"pubhashblock\"] = CZMQAbstractNotifier::Create<CZMQPublishHashBlockNotifier>;\n     factories[\"pubhashtx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashTransactionNotifier>;\n+    factories[\"pubhashwallettx\"] = CZMQAbstractNotifier::Create<CZMQPublishHashWalletTransactionNotifier>;\n     factories[\"pubrawblock\"] = CZMQAbstractNotifier::Create<CZMQPublishRawBlockNotifier>;\n     factories[\"pubrawtx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawTransactionNotifier>;\n+    factories[\"pubrawwallettx\"] = CZMQAbstractNotifier::Create<CZMQPublishRawWalletTransactionNotifier>;\n \n     for (std::map<std::string, CZMQNotifierFactory>::const_iterator i=factories.begin(); i!=factories.end(); ++i)\n     {\n@@ -110,6 +116,13 @@ bool CZMQNotificationInterface::Initialize()\n void CZMQNotificationInterface::Shutdown()\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Shutdown notification interface\\n\");\n+\n+#ifdef ENABLE_WALLET\n+    for (CWalletRef pwallet : vpwallets) {\n+        pwallet->TransactionAddedToWallet.disconnect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n+    }\n+#endif\n+\n     if (pcontext)\n     {\n         for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n@@ -124,6 +137,14 @@ void CZMQNotificationInterface::Shutdown()\n     }\n }\n \n+#ifdef ENABLE_WALLET\n+void CZMQNotificationInterface::ConnectToWalletSignals() {\n+     for (CWalletRef pwallet : vpwallets) {\n+        pwallet->TransactionAddedToWallet.connect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n+    }\n+}\n+#endif\n+\n void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     if (fInitialDownload || pindexNew == pindexFork) // In IBD or blocks were disconnected without any new ones\n@@ -180,3 +201,22 @@ void CZMQNotificationInterface::BlockDisconnected(const std::shared_ptr<const CB\n         TransactionAddedToMempool(ptx);\n     }\n }\n+\n+void CZMQNotificationInterface::TransactionAddedToWallet(const CTransactionRef& ptx, const uint256 &hashBlock) {\n+    const CTransaction& tx = *ptx;\n+\n+    for (std::list<CZMQAbstractNotifier*>::iterator i = notifiers.begin(); i!=notifiers.end(); )\n+    {\n+        CZMQAbstractNotifier *notifier = *i;\n+        if (notifier->NotifyWalletTransaction(tx, hashBlock))\n+        {\n+            i++;\n+        }\n+        else\n+        {\n+            notifier->Shutdown();\n+            i = notifiers.erase(i);\n+        }\n+    }\n+}\n+"
      },
      {
        "sha": "ce1d0bffd86325ad5aac77253b105c08d1287d7b",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -20,10 +20,17 @@ class CZMQNotificationInterface final : public CValidationInterface\n \n     static CZMQNotificationInterface* Create();\n \n+#ifdef ENABLE_WALLET\n+    void ConnectToWalletSignals();\n+#endif\n+\n+\n protected:\n     bool Initialize();\n     void Shutdown();\n \n+    void TransactionAddedToWallet(const CTransactionRef& tx, const uint256 &hashBlock);\n+\n     // CValidationInterface\n     void TransactionAddedToMempool(const CTransactionRef& tx) override;\n     void BlockConnected(const std::shared_ptr<const CBlock>& pblock, const CBlockIndex* pindexConnected, const std::vector<CTransactionRef>& vtxConflicted) override;"
      },
      {
        "sha": "74004f1e0f190726a6838c47cc6f1225a5e73f93",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 4,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -12,10 +12,14 @@\n \n static std::multimap<std::string, CZMQAbstractPublishNotifier*> mapPublishNotifiers;\n \n-static const char *MSG_HASHBLOCK = \"hashblock\";\n-static const char *MSG_HASHTX    = \"hashtx\";\n-static const char *MSG_RAWBLOCK  = \"rawblock\";\n-static const char *MSG_RAWTX     = \"rawtx\";\n+static const char *MSG_HASHBLOCK            = \"hashblock\";\n+static const char *MSG_HASHTX               = \"hashtx\";\n+static const char *MSG_HASHWALLETTXMEMPOOL  = \"hashwallettx-mempool\";\n+static const char *MSG_HASHWALLETTXBLOCK    = \"hashwallettx-block\";\n+static const char *MSG_RAWBLOCK             = \"rawblock\";\n+static const char *MSG_RAWTX                = \"rawtx\";\n+static const char *MSG_RAWWALLETTXMEMPOOL   = \"rawwallettx-mempool\";\n+static const char *MSG_RAWWALLETTXBLOCK     = \"rawwallettx-block\";\n \n // Internal function to send multipart message\n static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n@@ -166,6 +170,23 @@ bool CZMQPublishHashTransactionNotifier::NotifyTransaction(const CTransaction &t\n     return SendMessage(MSG_HASHTX, data, 32);\n }\n \n+bool CZMQPublishHashWalletTransactionNotifier::NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock){\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(BCLog::ZMQ, \"zmq: Publish hashwallettx %s\\n\", hash.GetHex());\n+    char data[32];\n+    for (unsigned int i = 0; i < 32; i++)\n+        data[31 - i] = hash.begin()[i];\n+\n+    const char *command;\n+\n+    if (!hashBlock.IsNull())\n+        command = MSG_HASHWALLETTXBLOCK;\n+    else\n+        command = MSG_HASHWALLETTXMEMPOOL;\n+\n+    return SendMessage(command, data, 32);\n+}\n+\n bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Publish rawblock %s\\n\", pindex->GetBlockHash().GetHex());\n@@ -195,3 +216,19 @@ bool CZMQPublishRawTransactionNotifier::NotifyTransaction(const CTransaction &tr\n     ss << transaction;\n     return SendMessage(MSG_RAWTX, &(*ss.begin()), ss.size());\n }\n+\n+bool CZMQPublishRawWalletTransactionNotifier::NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock){\n+    uint256 hash = transaction.GetHash();\n+    LogPrint(BCLog::ZMQ, \"zmq: Publish rawwallettx %s\\n\", hash.GetHex());\n+    CDataStream ss(SER_NETWORK, PROTOCOL_VERSION | RPCSerializationFlags());\n+    ss << transaction;\n+\n+    const char *command;\n+\n+    if (!hashBlock.IsNull())\n+        command = MSG_RAWWALLETTXBLOCK;\n+    else\n+        command = MSG_RAWWALLETTXMEMPOOL;\n+\n+    return SendMessage(command, &(*ss.begin()), ss.size());\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "d21022c0ea111e0e8def2237e6e13b62bc091594",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -40,6 +40,12 @@ class CZMQPublishHashTransactionNotifier : public CZMQAbstractPublishNotifier\n     bool NotifyTransaction(const CTransaction &transaction) override;\n };\n \n+class CZMQPublishHashWalletTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock);\n+};\n+\n class CZMQPublishRawBlockNotifier : public CZMQAbstractPublishNotifier\n {\n public:\n@@ -52,4 +58,10 @@ class CZMQPublishRawTransactionNotifier : public CZMQAbstractPublishNotifier\n     bool NotifyTransaction(const CTransaction &transaction) override;\n };\n \n+class CZMQPublishRawWalletTransactionNotifier : public CZMQAbstractPublishNotifier\n+{\n+public:\n+    bool NotifyWalletTransaction(const CTransaction &transaction, const uint256 &hashBlock);\n+};\n+\n #endif // BITCOIN_ZMQ_ZMQPUBLISHNOTIFIER_H"
      },
      {
        "sha": "c8560405150b9d7975267960799d989130397fda",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -37,6 +37,10 @@ def assert_equal(thing1, thing2, *args):\n     if thing1 != thing2 or any(thing1 != arg for arg in args):\n         raise AssertionError(\"not(%s)\" % \" == \".join(str(arg) for arg in (thing1, thing2) + args))\n \n+def assert_not_equal(thing1, thing2):\n+    if thing1 == thing2:\n+        raise AssertionError(\"%s == %s\"%(str(thing1),str(thing2)))\n+\n def assert_greater_than(thing1, thing2):\n     if thing1 <= thing2:\n         raise AssertionError(\"%s <= %s\" % (str(thing1), str(thing2)))"
      },
      {
        "sha": "2a50d795e150ca3122c6cb636ea07cc421da70bf",
        "filename": "test/functional/zmq_test.py",
        "status": "modified",
        "additions": 17,
        "deletions": 4,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/test/functional/zmq_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15/test/functional/zmq_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/zmq_test.py?ref=d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "patch": "@@ -9,6 +9,7 @@\n \n from test_framework.test_framework import BitcoinTestFramework, SkipTest\n from test_framework.util import (assert_equal,\n+                                 assert_not_equal,\n                                  bytes_to_hex_str,\n                                  hash256,\n                                 )\n@@ -22,16 +23,17 @@ def __init__(self, socket, topic):\n         import zmq\n         self.socket.setsockopt(zmq.SUBSCRIBE, self.topic)\n \n-    def receive(self):\n+    def receive(self, specific_topic = None):\n+        expected_topic = specific_topic if specific_topic else self.topic\n+\n         topic, body, seq = self.socket.recv_multipart()\n         # Topic should match the subscriber topic.\n-        assert_equal(topic, self.topic)\n+        assert_equal(topic, expected_topic)\n         # Sequence should be incremental.\n         assert_equal(struct.unpack('<I', seq)[-1], self.sequence)\n         self.sequence += 1\n         return body\n \n-\n class ZMQTest (BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n@@ -68,8 +70,10 @@ def setup_nodes(self):\n         self.hashtx = ZMQSubscriber(socket, b\"hashtx\")\n         self.rawblock = ZMQSubscriber(socket, b\"rawblock\")\n         self.rawtx = ZMQSubscriber(socket, b\"rawtx\")\n+        self.hashwallettx = ZMQSubscriber(socket, b\"hashwallettx\")\n+        self.rawwallettx = ZMQSubscriber(socket, b\"rawwallettx\")\n \n-        self.extra_args = [[\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [self.hashblock, self.hashtx, self.rawblock, self.rawtx]], []]\n+        self.extra_args = [[\"-zmqpub%s=%s\" % (sub.topic.decode(), address) for sub in [self.hashblock, self.hashtx, self.rawblock, self.rawtx, self.hashwallettx, self.rawwallettx]], []]\n         self.add_nodes(self.num_nodes, self.extra_args)\n         self.start_nodes()\n \n@@ -95,6 +99,11 @@ def _zmq_test(self):\n             hex = self.rawtx.receive()\n             assert_equal(hash256(hex), txid)\n \n+            # Should receive wallet tx\n+            wallettxid = self.hashwallettx.receive(b\"hashwallettx-block\")\n+            wallethex = self.rawwallettx.receive(b\"rawwallettx-block\")\n+            assert_equal(hash256(wallethex), wallettxid)\n+\n             # Should receive the generated block hash.\n             hash = bytes_to_hex_str(self.hashblock.receive())\n             assert_equal(genhashes[x], hash)\n@@ -117,5 +126,9 @@ def _zmq_test(self):\n         hex = self.rawtx.receive()\n         assert_equal(payment_txid, bytes_to_hex_str(hash256(hex)))\n \n+        wallettxid = self.hashwallettx.receive(b\"hashwallettx-mempool\")\n+        wallethex = self.rawwallettx.receive(b\"rawwallettx-mempool\")\n+        assert_equal(hash256(wallethex), wallettxid)\n+\n if __name__ == '__main__':\n     ZMQTest().main()"
      }
    ]
  },
  {
    "sha": "ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZDRmZDI2NmY3OGY5ZmVhOGRkMGU0Y2I5NDU1M2U1NTE3MWZiN2Qy",
    "commit": {
      "author": {
        "name": "Doron Somech",
        "email": "somdoron@gmail.com",
        "date": "2017-06-22T14:37:19Z"
      },
      "committer": {
        "name": "Doron Somech",
        "email": "somdoron@gmail.com",
        "date": "2017-10-19T13:43:04Z"
      },
      "message": "ZMQ: Making CWallet::TransactionAddedToWallet static\n\nIn order to avoid the registration for wallet signals.\nAlso enable dynamic addition of wallets without register them with ZMQ",
      "tree": {
        "sha": "14aada643454e48e77ecdc981c7e3892e606886f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14aada643454e48e77ecdc981c7e3892e606886f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/comments",
    "author": {
      "login": "somdoron",
      "id": 2715638,
      "node_id": "MDQ6VXNlcjI3MTU2Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2715638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/somdoron",
      "html_url": "https://github.com/somdoron",
      "followers_url": "https://api.github.com/users/somdoron/followers",
      "following_url": "https://api.github.com/users/somdoron/following{/other_user}",
      "gists_url": "https://api.github.com/users/somdoron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/somdoron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/somdoron/subscriptions",
      "organizations_url": "https://api.github.com/users/somdoron/orgs",
      "repos_url": "https://api.github.com/users/somdoron/repos",
      "events_url": "https://api.github.com/users/somdoron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/somdoron/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "somdoron",
      "id": 2715638,
      "node_id": "MDQ6VXNlcjI3MTU2Mzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2715638?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/somdoron",
      "html_url": "https://github.com/somdoron",
      "followers_url": "https://api.github.com/users/somdoron/followers",
      "following_url": "https://api.github.com/users/somdoron/following{/other_user}",
      "gists_url": "https://api.github.com/users/somdoron/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/somdoron/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/somdoron/subscriptions",
      "organizations_url": "https://api.github.com/users/somdoron/orgs",
      "repos_url": "https://api.github.com/users/somdoron/repos",
      "events_url": "https://api.github.com/users/somdoron/events{/privacy}",
      "received_events_url": "https://api.github.com/users/somdoron/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d6448d40fcd3ddf6429a6ad85b9f4ab9bfcc0a15"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 11,
      "deletions": 24
    },
    "files": [
      {
        "sha": "d00c5825f111c859daddb2861f76809326927853",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
        "patch": "@@ -1581,12 +1581,6 @@ bool AppInitMain(boost::thread_group& threadGroup, CScheduler& scheduler)\n #ifdef ENABLE_WALLET\n     if (!OpenWallets())\n         return false;\n-\n-#if ENABLE_ZMQ\n-    if (pzmqNotificationInterface)\n-        pzmqNotificationInterface->ConnectToWalletSignals();\n-#endif\n-\n #else\n     LogPrintf(\"No wallet support compiled in!\\n\");\n #endif"
      },
      {
        "sha": "51ca4cb34e884178115f2011aaf38dea3fe47101",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
        "patch": "@@ -58,6 +58,10 @@ CFeeRate CWallet::minTxFee = CFeeRate(DEFAULT_TRANSACTION_MINFEE);\n  * Override with -fallbackfee\n  */\n CFeeRate CWallet::fallbackFee = CFeeRate(DEFAULT_FALLBACK_FEE);\n+/*\n+ * Signal when transactions are added to wallet\n+ */\n+boost::signals2::signal<void (const CTransactionRef &ptxn, const uint256 &blockHash)> CWallet::TransactionAddedToWallet;\n \n CFeeRate CWallet::m_discard_rate = CFeeRate(DEFAULT_DISCARD_FEE);\n \n@@ -960,7 +964,7 @@ bool CWallet::AddToWallet(const CWalletTx& wtxIn, bool fFlushOnClose)\n     NotifyTransactionChanged(this, hash, fInsertedNew ? CT_NEW : CT_UPDATED);\n \n     // Notify listeners on new wallet transaction\n-    TransactionAddedToWallet(wtx.tx, wtx.hashBlock);\n+    CWallet::TransactionAddedToWallet(wtx.tx, wtx.hashBlock);\n \n     // notify an external script when a wallet transaction comes in or is updated\n     std::string strCmd = gArgs.GetArg(\"-walletnotify\", \"\");"
      },
      {
        "sha": "08242f995d956a713811a897c95654a2c8bc3aad",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
        "patch": "@@ -1060,7 +1060,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     boost::signals2::signal<void (CWallet *wallet, const uint256 &hashTx,\n             ChangeType status)> NotifyTransactionChanged;\n \n-    boost::signals2::signal<void (const CTransactionRef &ptxn,\n+    static boost::signals2::signal<void (const CTransactionRef &ptxn,\n                                   const uint256 &blockHash)> TransactionAddedToWallet;\n \n     /** Show progress e.g. for rescan */"
      },
      {
        "sha": "b3dc3da75204f604299d25bd34babe395e0fa160",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
        "patch": "@@ -81,6 +81,10 @@ bool CZMQNotificationInterface::Initialize()\n     LogPrint(BCLog::ZMQ, \"zmq: Initialize notification interface\\n\");\n     assert(!pcontext);\n \n+#ifdef ENABLE_WALLET\n+    CWallet::TransactionAddedToWallet.connect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n+#endif\n+\n     pcontext = zmq_init(1);\n \n     if (!pcontext)\n@@ -118,9 +122,7 @@ void CZMQNotificationInterface::Shutdown()\n     LogPrint(BCLog::ZMQ, \"zmq: Shutdown notification interface\\n\");\n \n #ifdef ENABLE_WALLET\n-    for (CWalletRef pwallet : vpwallets) {\n-        pwallet->TransactionAddedToWallet.disconnect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n-    }\n+    CWallet::TransactionAddedToWallet.disconnect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n #endif\n \n     if (pcontext)\n@@ -137,14 +139,6 @@ void CZMQNotificationInterface::Shutdown()\n     }\n }\n \n-#ifdef ENABLE_WALLET\n-void CZMQNotificationInterface::ConnectToWalletSignals() {\n-     for (CWalletRef pwallet : vpwallets) {\n-        pwallet->TransactionAddedToWallet.connect(boost::bind(&CZMQNotificationInterface::TransactionAddedToWallet, this, _1, _2));\n-    }\n-}\n-#endif\n-\n void CZMQNotificationInterface::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload)\n {\n     if (fInitialDownload || pindexNew == pindexFork) // In IBD or blocks were disconnected without any new ones"
      },
      {
        "sha": "2906ede54040cc3adfcf4e56f7ad9055b8ced13b",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=ed4fd266f78f9fea8dd0e4cb94553e55171fb7d2",
        "patch": "@@ -20,11 +20,6 @@ class CZMQNotificationInterface final : public CValidationInterface\n \n     static CZMQNotificationInterface* Create();\n \n-#ifdef ENABLE_WALLET\n-    void ConnectToWalletSignals();\n-#endif\n-\n-\n protected:\n     bool Initialize();\n     void Shutdown();"
      }
    ]
  }
]