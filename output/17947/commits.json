[
  {
    "sha": "4537ba5f21ad8afb705325cd8e15dd43877eb28f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTM3YmE1ZjIxYWQ4YWZiNzA1MzI1Y2Q4ZTE1ZGQ0Mzg3N2ViMjhm",
    "commit": {
      "author": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-01-16T14:00:13Z"
      },
      "committer": {
        "name": "Sebastian Falbesoner",
        "email": "sebastian.falbesoner@gmail.com",
        "date": "2020-01-16T14:10:28Z"
      },
      "message": "test: add unit test for non-standard txs with too large tx size\n\nThe function IsStandardTx() returns rejection reason \"tx-size\" if the\ntransaction weight is larger than MAX_STANDARD_TX_WEIGHT (=400000 vbytes).",
      "tree": {
        "sha": "fb6cf864fca9d76d717203897b663a0735f44d99",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fb6cf864fca9d76d717203897b663a0735f44d99"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4537ba5f21ad8afb705325cd8e15dd43877eb28f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4537ba5f21ad8afb705325cd8e15dd43877eb28f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4537ba5f21ad8afb705325cd8e15dd43877eb28f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4537ba5f21ad8afb705325cd8e15dd43877eb28f/comments",
    "author": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theStack",
      "id": 91535,
      "node_id": "MDQ6VXNlcjkxNTM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/91535?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theStack",
      "html_url": "https://github.com/theStack",
      "followers_url": "https://api.github.com/users/theStack/followers",
      "following_url": "https://api.github.com/users/theStack/following{/other_user}",
      "gists_url": "https://api.github.com/users/theStack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theStack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theStack/subscriptions",
      "organizations_url": "https://api.github.com/users/theStack/orgs",
      "repos_url": "https://api.github.com/users/theStack/repos",
      "events_url": "https://api.github.com/users/theStack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theStack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4e8b564df0d4ff2bc2463aa072b15471361d9e7d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4e8b564df0d4ff2bc2463aa072b15471361d9e7d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4e8b564df0d4ff2bc2463aa072b15471361d9e7d"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 20,
      "deletions": 0
    },
    "files": [
      {
        "sha": "031f237e870a11efe31518fbef6ca4a94f17f620",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4537ba5f21ad8afb705325cd8e15dd43877eb28f/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4537ba5f21ad8afb705325cd8e15dd43877eb28f/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=4537ba5f21ad8afb705325cd8e15dd43877eb28f",
        "patch": "@@ -821,9 +821,29 @@ BOOST_AUTO_TEST_CASE(test_IsStandard)\n     BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n     BOOST_CHECK_EQUAL(reason, \"scriptsig-size\");\n \n+    // Check tx-size (non-standard if transaction weight is > MAX_STANDARD_TX_WEIGHT)\n+    t.vin.clear();\n+    t.vin.resize(2438); // size per input (empty scriptSig): 41 bytes\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << std::vector<unsigned char>(19, 0); // output size: 30 bytes\n+    // tx header:                12 bytes =>     48 vbytes\n+    // 2438 inputs: 2438*41 = 99958 bytes => 399832 vbytes\n+    //    1 output:              30 bytes =>    120 vbytes\n+    //                      ===============================\n+    //                                total: 400000 vbytes\n+    BOOST_CHECK_EQUAL(GetTransactionWeight(CTransaction(t)), 400000);\n+    BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n+\n+    // increase output size by one byte, so we end up with 400004 vbytes\n+    t.vout[0].scriptPubKey = CScript() << OP_RETURN << std::vector<unsigned char>(20, 0); // output size: 31 bytes\n+    BOOST_CHECK_EQUAL(GetTransactionWeight(CTransaction(t)), 400004);\n+    reason.clear();\n+    BOOST_CHECK(!IsStandardTx(CTransaction(t), reason));\n+    BOOST_CHECK_EQUAL(reason, \"tx-size\");\n+\n     // Check bare multisig (standard if policy flag fIsBareMultisigStd is set)\n     fIsBareMultisigStd = true;\n     t.vout[0].scriptPubKey = GetScriptForMultisig(1, {key.GetPubKey()}); // simple 1-of-1\n+    t.vin.resize(1);\n     t.vin[0].scriptSig = CScript() << std::vector<unsigned char>(65, 0);\n     BOOST_CHECK(IsStandardTx(CTransaction(t), reason));\n "
      }
    ]
  }
]