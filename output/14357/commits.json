[
  {
    "sha": "958e1a307e92f6678459ebdcd64e05b61f5f3a77",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NThlMWEzMDdlOTJmNjY3ODQ1OWViZGNkNjRlMDViNjFmNWYzYTc3",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-10-03T12:52:08Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-11-23T15:58:44Z"
      },
      "message": "streams: Remove unused seek(size_t)",
      "tree": {
        "sha": "f7d339797455d9d0a94de6d41bca40bd2a5f291d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7d339797455d9d0a94de6d41bca40bd2a5f291d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/958e1a307e92f6678459ebdcd64e05b61f5f3a77",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/958e1a307e92f6678459ebdcd64e05b61f5f3a77",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/958e1a307e92f6678459ebdcd64e05b61f5f3a77",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/958e1a307e92f6678459ebdcd64e05b61f5f3a77/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2607c38fc5170409dd13f3061ba5e5fa2de6438d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2607c38fc5170409dd13f3061ba5e5fa2de6438d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2607c38fc5170409dd13f3061ba5e5fa2de6438d"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 9,
      "deletions": 21
    },
    "files": [
      {
        "sha": "49a7303d470609e3e5bfd28a76f9d3c812e15f21",
        "filename": "src/streams.h",
        "status": "modified",
        "additions": 4,
        "deletions": 16,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/958e1a307e92f6678459ebdcd64e05b61f5f3a77/src/streams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/958e1a307e92f6678459ebdcd64e05b61f5f3a77/src/streams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/streams.h?ref=958e1a307e92f6678459ebdcd64e05b61f5f3a77",
        "patch": "@@ -126,12 +126,6 @@ class CVectorWriter\n     {\n         return nType;\n     }\n-    void seek(size_t nSize)\n-    {\n-        nPos += nSize;\n-        if(nPos > vchData.size())\n-            vchData.resize(nPos);\n-    }\n private:\n     const int nType;\n     const int nVersion;\n@@ -158,9 +152,11 @@ class VectorReader\n      * @param[in]  pos Starting position. Vector index where reads should start.\n      */\n     VectorReader(int type, int version, const std::vector<unsigned char>& data, size_t pos)\n-        : m_type(type), m_version(version), m_data(data)\n+        : m_type(type), m_version(version), m_data(data), m_pos(pos)\n     {\n-        seek(pos);\n+        if (m_pos > m_data.size()) {\n+            throw std::ios_base::failure(\"VectorReader(...): end of data (m_pos > m_data.size())\");\n+        }\n     }\n \n     /*\n@@ -203,14 +199,6 @@ class VectorReader\n         memcpy(dst, m_data.data() + m_pos, n);\n         m_pos = pos_next;\n     }\n-\n-    void seek(size_t n)\n-    {\n-        m_pos += n;\n-        if (m_pos > m_data.size()) {\n-            throw std::ios_base::failure(\"VectorReader::seek(): end of data\");\n-        }\n-    }\n };\n \n /** Double ended buffer combining vector and stream-like interfaces."
      },
      {
        "sha": "a1940eb80e60b995bf47b782bf5d613137fb9692",
        "filename": "src/test/streams_tests.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/958e1a307e92f6678459ebdcd64e05b61f5f3a77/src/test/streams_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/958e1a307e92f6678459ebdcd64e05b61f5f3a77/src/test/streams_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/streams_tests.cpp?ref=958e1a307e92f6678459ebdcd64e05b61f5f3a77",
        "patch": "@@ -102,15 +102,15 @@ BOOST_AUTO_TEST_CASE(streams_vector_reader)\n     BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n \n     // Read a 4 bytes as a signed int from the beginning of the buffer.\n-    reader.seek(-6);\n-    reader >> d;\n+    VectorReader new_reader(SER_NETWORK, INIT_PROTO_VERSION, vch, 0);\n+    new_reader >> d;\n     BOOST_CHECK_EQUAL(d, 67370753); // 1,255,3,4 in little-endian base-256\n-    BOOST_CHECK_EQUAL(reader.size(), 2);\n-    BOOST_CHECK(!reader.empty());\n+    BOOST_CHECK_EQUAL(new_reader.size(), 2);\n+    BOOST_CHECK(!new_reader.empty());\n \n     // Reading after end of byte vector throws an error even if the reader is\n     // not totally empty.\n-    BOOST_CHECK_THROW(reader >> d, std::ios_base::failure);\n+    BOOST_CHECK_THROW(new_reader >> d, std::ios_base::failure);\n }\n \n BOOST_AUTO_TEST_CASE(bitstream_reader_writer)"
      }
    ]
  },
  {
    "sha": "4f4993fe2ac25cb2676d35a98e2b22da1add1bb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0ZjQ5OTNmZTJhYzI1Y2IyNjc2ZDM1YTk4ZTJiMjJkYTFhZGQxYmIx",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-11-06T23:27:31Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-11-23T15:58:44Z"
      },
      "message": "Remove UBSan suppression",
      "tree": {
        "sha": "3b85926eade83c58e58f0b8c2253ac02b4d706eb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b85926eade83c58e58f0b8c2253ac02b4d706eb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "958e1a307e92f6678459ebdcd64e05b61f5f3a77",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/958e1a307e92f6678459ebdcd64e05b61f5f3a77",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/958e1a307e92f6678459ebdcd64e05b61f5f3a77"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f0107f1361641914c48fca5c033b8df1d94d508f",
        "filename": "test/sanitizer_suppressions/ubsan",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1/test/sanitizer_suppressions/ubsan",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4f4993fe2ac25cb2676d35a98e2b22da1add1bb1/test/sanitizer_suppressions/ubsan",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/sanitizer_suppressions/ubsan?ref=4f4993fe2ac25cb2676d35a98e2b22da1add1bb1",
        "patch": "@@ -29,7 +29,6 @@ unsigned-integer-overflow:policy/fees.cpp\n unsigned-integer-overflow:prevector.h\n unsigned-integer-overflow:script/interpreter.cpp\n unsigned-integer-overflow:stl_bvector.h\n-unsigned-integer-overflow:streams.h\n unsigned-integer-overflow:txmempool.cpp\n unsigned-integer-overflow:util/strencodings.cpp\n unsigned-integer-overflow:validation.cpp"
      }
    ]
  }
]