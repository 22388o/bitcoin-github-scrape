DrahtBot,2021-01-16 02:53:56,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20915 (fuzz: Fail if message type is not fuzzed by MarcoFalke)\n* #20749 ([Bundle 1/n] Prune g_chainman usage related to ",https://github.com/bitcoin/bitcoin/pull/20946#issuecomment-761299864,761299864,
practicalswift,2021-01-16 09:59:24,"Concept ACK\n\nThanks for improving the fuzzing code! Very happy to the number of active contributors to `src/test/fuzz/` grow :)\n\n> Question for fuzzing people: was it intentional that `src/test/fuzz/net.cpp` would directly instantiate the `BasicTestingSetup` and thus omit the `""-nodebuglogfile""` flag?\n\nI don't think that was intentional on my part. We want `-nodebuglogfile` :)",https://github.com/bitcoin/bitcoin/pull/20946#issuecomment-761537108,761537108,
dongcarl,2021-01-18 00:03:55,"Can someone help me out with this fuzzer message? Is this a real error that we caught or something benign?\n\nhttps://cirrus-ci.com/task/5473797673320448?command=ci#L3550",https://github.com/bitcoin/bitcoin/pull/20946#issuecomment-761904673,761904673,
MarcoFalke,2021-01-18 06:31:24,Looks like an issue with your code. Could it mean that you destroyed some object twice?,https://github.com/bitcoin/bitcoin/pull/20946#issuecomment-762016502,762016502,
MarcoFalke,2021-01-21 15:00:07,ACK abb6fa728598c4cc8874eae1c3c5e587e36424cd,https://github.com/bitcoin/bitcoin/pull/20946#issuecomment-764702642,764702642,
MarcoFalke,2021-01-18 06:43:08,why is it needed to spin up more than just ecc and params?,https://github.com/bitcoin/bitcoin/pull/20946#discussion_r559344789,559344789,src/test/fuzz/coins_view.cpp
dongcarl,2021-01-20 23:15:01,"Happy to delay this change, but `GetUTXOStats` calls `LookupBlockIndex` which asks `ChainstateManager` for its `BlockManager`. After `g_chainman` is de-globalized, we will no longer have an ""implicitly-constructed-by-virtue-of-being-member-of-a-global"" m_blockman, so we will need to run our initialization codepath at least until we have populated `NodeContext::chainman`.\n\nHowever, it is not ab",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561369925,561369925,src/test/fuzz/coins_view.cpp
MarcoFalke,2021-01-21 08:30:26,"style nit: templates are already inline, no need to specify twice",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561685302,561685302,src/test/fuzz/util.h
MarcoFalke,2021-01-21 08:53:27,"Also, it looks like returning `T` is just fine here and should be sufficient to show that the caller owns the object that is returned:\n\n```diff\ndiff --git a/src/test/fuzz/process_message.cpp b/src/test/fuzz/process_message.cpp\nindex e9c5cb5954..19523d6951 100644\n--- a/src/test/fuzz/process_message.cpp\n+++ b/src/test/fuzz/process_message.cpp\n@@ -39,7 +39,7 @@ const TestingSetup* g_set",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561699714,561699714,src/test/fuzz/util.h
MarcoFalke,2021-01-21 08:57:40,"Thanks, makes sense.",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561702512,561702512,src/test/fuzz/coins_view.cpp
dongcarl,2021-01-21 14:30:58,"w/re returning `T`, I think I'm going to keep the `unique_ptr` just because in the future we might do something in `MakeFuzzingContext` that doesn't trigger RVO and I'm not sure about the copy semantics of our `*TestingSetup` classes...",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561924388,561924388,src/test/fuzz/util.h
MarcoFalke,2021-01-21 15:00:46,"As you are using `auto`, changing from/to unique_ptr is a small diff, so can be done later easily, if needed",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561948826,561948826,src/test/fuzz/util.h
MarcoFalke,2021-01-21 15:01:51,"nit: new code can use\n\n```suggestion\n    return std::make_unique<T>(chain_name, arguments);\n```",https://github.com/bitcoin/bitcoin/pull/20946#discussion_r561949731,561949731,src/test/fuzz/util.h
MarcoFalke,2021-01-25 10:44:35,Fixed in #21003 ,https://github.com/bitcoin/bitcoin/pull/20946#discussion_r563625010,563625010,src/test/fuzz/util.h
