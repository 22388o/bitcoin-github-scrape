jonasschnelli,2014-11-28T19:35:59Z,Currently the rpc `getblock` call is untouched. Maybe it would also make sense to unfold the tx details there (could also be behind a optional boolean parameter).\n\nExample:\nhttp://paste.ubuntu.com/9287277/\n(testnet block 00000000009e9cc0e7df2ad4a0fcae52794b50764087e1e01e57c102e3ee01ec)\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-64923612,64923612,
jonasschnelli,2014-11-28T19:39:17Z,"Currently some informations in the `tx` part is doubled (`blockhash`, `blocktime`, `confirmations`, `time`, etc.). Could also be removed, but currently the output is equal to the `/rest/tx`output.\n",https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-64923797,64923797,
jonasschnelli,2014-11-28T20:23:46Z,Damit! Clerical mistakes. Thanks for the review!\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-64926210,64926210,
jonasschnelli,2014-12-03T11:04:34Z,Any tests on this?\nThis would make sense to have in 0.10 because it legitimates the json output format.\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65391310,65391310,
laanwj,2014-12-05T09:51:56Z,No argument from me to not include this in 0.10.\nBut can you update the RPC test to test this?\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65768007,65768007,
jonasschnelli,2014-12-05T10:29:12Z,Good point. I will write some tests.\n\nI think it's okay if this is not in 0.10.\nIf people start using REST this PR would make loading all transitions of a block much easier and it uses less resources.\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65771966,65771966,
jonasschnelli,2014-12-06T09:31:46Z,"Updated:\n1. Added some rpc tests for the block request with tx-details\n2. Added a url schema for block with and without transaction details (`/rest/block/notxdetails/<HASH>`)\n\nI found out that sometimes it's useful to get a block (JSON) without transactions details, thats why i kept the original implementation of returning a block with no transaction subdata. Otherwise large blocks can result ",https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65891102,65891102,
laanwj,2014-12-06T09:43:31Z,"Thanks!\n\n> Otherwise large blocks can result in a huge JSON response.\n\nBut isn't that the point of getblock, to get all block data? JSON is just a terribly inefficient way of representing it. Although I suppose it would be very possible to come up with a more efficient JSON format, the RPC format may have grown redundancies over time.\n\nAnyhow, no opposition against adding a notxdetails mode.",https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65891384,65891384,
jonasschnelli,2014-12-06T10:00:30Z,Just added some documentation for the new behavior.\n\nI wouldn't say JSON is a bad format for a block representation.\nSome people nowadays tend to use flexible transport formats like JSON to make a more flexible implementation in cost of cpu/mem resources. I think thats feasible.\nA REST API with `bin` only format would be not user-friendly IMO.\nI think supporting `bin` and `JSON` is a sustaina,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65891759,65891759,
laanwj,2014-12-06T10:45:24Z,"Speaking about overhead: I think TxToJSON needs a flag to exclude some fields when used in the 'whole-block' representation, as it is repeated info:\n- blockhash\n- confirmations\n- time/blocktime (are the same)\n\nJust a matter of skipping this code block: https://github.com/bitcoin/bitcoin/blob/master/src/rpcrawtransaction.cpp#L92\n",https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65892718,65892718,
jonasschnelli,2014-12-06T18:09:42Z,Right. Thanks.\nJust pushed a change that will fix this overhead.\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-65907771,65907771,
laanwj,2014-12-09T14:59:15Z,Tested ACK apart from above nit.\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-66294821,66294821,
jonasschnelli,2014-12-09T15:06:46Z,Fixed the nit. Rebased.\n,https://github.com/bitcoin/bitcoin/pull/5391#issuecomment-66296090,66296090,
sipa,2014-11-28T20:16:35Z,Two nested iterations over all block transactions?\n,https://github.com/bitcoin/bitcoin/pull/5391#discussion_r21043491,21043491,src/rpcblockchain.cpp
