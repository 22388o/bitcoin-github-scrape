MarcoFalke,2021-09-13 13:17:59,"I don't think there will be any/many similar changes. Though, I don't see how #10102 is an argument against this change. There is also no serialize method for many other classes, like `CAmount` or `WitnessUnknown`. #10102 doesn't solve this by adding the serialize methods, but by defining a capnp struct to use internally. Defining the capnp struct (internally to multiprocess) seems preferable to m",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-918181425,918181425,
ryanofsky,2021-09-13 13:50:17,"> Though, I don't see how #10102 is an argument against this change.\n\nI reviewed and acked this PR. I'm definitely not saying #10102 is an argument against this change. All I'm saying is if there will be more PRs like this, it would be good to know what exactly the goal is and make sure #10102 will not get in the way of that goal.\n\n> There is also no serialize method for many other classes",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-918211341,918211341,
DrahtBot,2021-09-13 20:29:38,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22951](https://github.com/bitcoin/bitcoin/pull/22951) (consensus: move amount.h into consensus by fanquake)\n\nIf you co",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-918551465,918551465,
laanwj,2021-09-16 13:52:55,"> The serialization is used in #10102\n\nI don't see the point of doing this if it's going to be added back later.",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-920922786,920922786,
ryanofsky,2021-09-16 14:03:05,"> > The serialization is used in #10102\n> \n> I don't see the point of doing this if it's going to be added back later.\n\nTo be fair, adding this back later in #10102 is just the easiest option, not the only option. #10102 requires some kind of serialize/unserialize functions for this class to be written. It could be stream serialization, it could be json serialization, it could be field-by-",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-920931571,920931571,
MarcoFalke,2021-09-16 14:39:43,"> I'm literally just adding back the same serialization code in #10102 with less fuzz coverage, so I think I am missing something here.\n\nI'd say that the CFeeRate fuzz target is improving the fuzz coverage of 10102 at most by epsilon. It would be better to write a proper fuzz target for multiprocess (that ideally also covers serialization).\n\nClosing for now. Can be reopened after 10102 ",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-920962975,920962975,
ryanofsky,2021-09-17 12:06:39,"> I'd say that the CFeeRate fuzz target is improving the fuzz coverage of 10102 at most by epsilon. \n\nAgree with this. That is why I was suggesting marking serialization internal-only, so you could drop the fuzz target while I could still keep one-line serialization:\n\n```c++\nUNSAFE_INTERNAL_SERIALIZE(CFeeRate, obj) { READWRITE(obj.nSatoshisPerK); }\n```\n\n> It would be better to writ",https://github.com/bitcoin/bitcoin/pull/22962#issuecomment-921744922,921744922,
