[
  {
    "sha": "7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmJjN2MzMTRmNGViYjFlN2ZlODgyYTBhMmFhZTVhNTY1NWYyOTcy",
    "commit": {
      "author": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-23T17:07:36Z"
      },
      "committer": {
        "name": "Suhas Daftuar",
        "email": "sdaftuar@gmail.com",
        "date": "2015-10-26T19:05:37Z"
      },
      "message": "Add option for microsecond precision in debug.log",
      "tree": {
        "sha": "962a5af7cb1251b5166915474c80d4b54277fc52",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/962a5af7cb1251b5166915474c80d4b54277fc52"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/comments",
    "author": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sdaftuar",
      "id": 7463573,
      "node_id": "MDQ6VXNlcjc0NjM1NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7463573?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sdaftuar",
      "html_url": "https://github.com/sdaftuar",
      "followers_url": "https://api.github.com/users/sdaftuar/followers",
      "following_url": "https://api.github.com/users/sdaftuar/following{/other_user}",
      "gists_url": "https://api.github.com/users/sdaftuar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sdaftuar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sdaftuar/subscriptions",
      "organizations_url": "https://api.github.com/users/sdaftuar/orgs",
      "repos_url": "https://api.github.com/users/sdaftuar/repos",
      "events_url": "https://api.github.com/users/sdaftuar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sdaftuar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d78a880900c15c7a28ae81e6632090f25fea7fce",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d78a880900c15c7a28ae81e6632090f25fea7fce",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d78a880900c15c7a28ae81e6632090f25fea7fce"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 22,
      "deletions": 3
    },
    "files": [
      {
        "sha": "bfa9c95e3bc63761d9d9aa2063a729ad53eeb53f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -428,6 +428,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-logtimestamps\", strprintf(_(\"Prepend debug output with timestamp (default: %u)\"), 1));\n     if (showDebug)\n     {\n+        strUsage += HelpMessageOpt(\"-logtimemicros\", strprintf(\"Add microsecond precision to debug timestamps (default: %u)\", DEFAULT_LOGTIMEMICROS));\n         strUsage += HelpMessageOpt(\"-limitfreerelay=<n>\", strprintf(\"Continuously rate-limit free transactions to <n>*1000 bytes per minute (default: %u)\", 15));\n         strUsage += HelpMessageOpt(\"-relaypriority\", strprintf(\"Require high priority for relaying free or low-fee transactions (default: %u)\", 1));\n         strUsage += HelpMessageOpt(\"-maxsigcachesize=<n>\", strprintf(\"Limit size of signature cache to <n> entries (default: %u)\", 50000));\n@@ -726,6 +727,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     // Set this early so that parameter interactions go to console\n     fPrintToConsole = GetBoolArg(\"-printtoconsole\", false);\n     fLogTimestamps = GetBoolArg(\"-logtimestamps\", true);\n+    fLogTimeMicros = GetBoolArg(\"-logtimemicros\", DEFAULT_LOGTIMEMICROS);\n     fLogIPs = GetBoolArg(\"-logips\", false);\n \n     LogPrintf(\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\");"
      },
      {
        "sha": "e8514a2ef0ea6902cfbee58b579dc40dbc1d9e0b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 3,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -108,6 +108,7 @@ bool fDaemon = false;\n bool fServer = false;\n string strMiscWarning;\n bool fLogTimestamps = false;\n+bool fLogTimeMicros = DEFAULT_LOGTIMEMICROS;\n bool fLogIPs = false;\n volatile bool fReopenDebugLog = false;\n CTranslationInterface translationInterface;\n@@ -263,9 +264,13 @@ static std::string LogTimestampStr(const std::string &str, bool *fStartedNewLine\n     if (!fLogTimestamps)\n         return str;\n \n-    if (*fStartedNewLine)\n-        strStamped =  DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", GetTime()) + ' ' + str;\n-    else\n+    if (*fStartedNewLine) {\n+        int64_t nTimeMicros = GetLogTimeMicros();\n+        strStamped = DateTimeStrFormat(\"%Y-%m-%d %H:%M:%S\", nTimeMicros/1000000);\n+        if (fLogTimeMicros)\n+            strStamped += strprintf(\".%06d\", nTimeMicros%1000000);\n+        strStamped += ' ' + str;\n+    } else\n         strStamped = str;\n \n     if (!str.empty() && str[str.size()-1] == '\\n')"
      },
      {
        "sha": "b2779fe782d0dedddc34380972ad230a6b11a73c",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -28,6 +28,8 @@\n #include <boost/signals2/signal.hpp>\n #include <boost/thread/exceptions.hpp>\n \n+static const bool DEFAULT_LOGTIMEMICROS = false;\n+\n /** Signals for translation. */\n class CTranslationInterface\n {\n@@ -44,6 +46,7 @@ extern bool fPrintToDebugLog;\n extern bool fServer;\n extern std::string strMiscWarning;\n extern bool fLogTimestamps;\n+extern bool fLogTimeMicros;\n extern bool fLogIPs;\n extern volatile bool fReopenDebugLog;\n extern CTranslationInterface translationInterface;"
      },
      {
        "sha": "3202c47f1dc92ce9bc596957fe0d020af0c5b4da",
        "filename": "src/utiltime.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.cpp?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -40,6 +40,14 @@ int64_t GetTimeMicros()\n             boost::posix_time::ptime(boost::gregorian::date(1970,1,1))).total_microseconds();\n }\n \n+/** Return a time useful for the debug log */\n+int64_t GetLogTimeMicros()\n+{\n+    if (nMockTime) return nMockTime*1000000;\n+\n+    return GetTimeMicros();\n+}\n+\n void MilliSleep(int64_t n)\n {\n "
      },
      {
        "sha": "241b5211e90526c466127f7afc79a19af864c9b1",
        "filename": "src/utiltime.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972/src/utiltime.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/utiltime.h?ref=7bbc7c314f4ebb1e7fe882a0a2aae5a5655f2972",
        "patch": "@@ -12,6 +12,7 @@\n int64_t GetTime();\n int64_t GetTimeMillis();\n int64_t GetTimeMicros();\n+int64_t GetLogTimeMicros();\n void SetMockTime(int64_t nMockTimeIn);\n void MilliSleep(int64_t n);\n "
      }
    ]
  }
]