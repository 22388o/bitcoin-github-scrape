[
  {
    "sha": "fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmY2I3NmVkZDllMmJiZjc4ODIxOGVjNWQ4ODQ5OWUxNDY0ZWJlOWRj",
    "commit": {
      "author": {
        "name": "Aaron Hook",
        "email": "ahook@protonmail.com",
        "date": "2019-12-27T17:56:21Z"
      },
      "committer": {
        "name": "Aaron Hook",
        "email": "ahook@protonmail.com",
        "date": "2019-12-27T17:56:21Z"
      },
      "message": "util: Replace itostr/i64tostr with c++11 to_string",
      "tree": {
        "sha": "0d88826342892ffa95d1b1c712914c020cac64e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0d88826342892ffa95d1b1c712914c020cac64e0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "1dbf3350c683f93d7fc9b861400724f6fd2b2f1d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1dbf3350c683f93d7fc9b861400724f6fd2b2f1d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1dbf3350c683f93d7fc9b861400724f6fd2b2f1d"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 5,
      "deletions": 19
    },
    "files": [
      {
        "sha": "97847d0bf7bc485d81bcf2765f3a7f8497a412fe",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -35,6 +35,7 @@\n #include <warnings.h>\n \n #include <memory>\n+#include <string>\n #include <stdint.h>\n \n /**\n@@ -677,7 +678,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     result.pushKV(\"transactions\", transactions);\n     result.pushKV(\"coinbaseaux\", aux);\n     result.pushKV(\"coinbasevalue\", (int64_t)pblock->vtx[0]->vout[0].nValue);\n-    result.pushKV(\"longpollid\", ::ChainActive().Tip()->GetBlockHash().GetHex() + i64tostr(nTransactionsUpdatedLast));\n+    result.pushKV(\"longpollid\", ::ChainActive().Tip()->GetBlockHash().GetHex() + std::to_string(nTransactionsUpdatedLast));\n     result.pushKV(\"target\", hashTarget.GetHex());\n     result.pushKV(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1);\n     result.pushKV(\"mutable\", aMutable);"
      },
      {
        "sha": "74b311e830bea65197c768ff27aef8e3e9bc0556",
        "filename": "src/sync.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/sync.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/sync.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.cpp?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -10,7 +10,6 @@\n #include <tinyformat.h>\n \n #include <logging.h>\n-#include <util/strencodings.h>\n #include <util/threadnames.h>\n \n \n@@ -56,8 +55,8 @@ struct CLockLocation {\n     std::string ToString() const\n     {\n         return strprintf(\n-            \"%s %s:%s%s (in thread %s)\",\n-            mutexName, sourceFile, itostr(sourceLine), (fTry ? \" (TRY)\" : \"\"), m_thread_name);\n+            \"%s %s:%d%s (in thread %s)\",\n+            mutexName, sourceFile, sourceLine, (fTry ? \" (TRY)\" : \"\"), m_thread_name);\n     }\n \n private:"
      },
      {
        "sha": "ec582ca315afe2945aca2cf928ba77f5943016c6",
        "filename": "src/test/fuzz/integer.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/test/fuzz/integer.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/test/fuzz/integer.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/integer.cpp?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -70,11 +70,9 @@ void test_one_input(const std::vector<uint8_t>& buffer)\n     // (void)GetVirtualTransactionSize(i64, i64); // function defined only for a subset of int64_t inputs\n     // (void)GetVirtualTransactionSize(i64, i64, u32); // function defined only for a subset of int64_t/uint32_t inputs\n     (void)HexDigit(ch);\n-    (void)i64tostr(i64);\n     (void)IsDigit(ch);\n     (void)IsSpace(ch);\n     (void)IsSwitchChar(ch);\n-    (void)itostr(i32);\n     (void)memusage::DynamicUsage(ch);\n     (void)memusage::DynamicUsage(i16);\n     (void)memusage::DynamicUsage(i32);"
      },
      {
        "sha": "1d079c0b621010e4970aa346ddf14e9729cd6e5d",
        "filename": "src/util/strencodings.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/util/strencodings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/util/strencodings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.cpp?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -407,16 +407,6 @@ std::string FormatParagraph(const std::string& in, size_t width, size_t indent)\n     return out.str();\n }\n \n-std::string i64tostr(int64_t n)\n-{\n-    return strprintf(\"%d\", n);\n-}\n-\n-std::string itostr(int n)\n-{\n-    return strprintf(\"%d\", n);\n-}\n-\n int64_t atoi64(const char* psz)\n {\n #ifdef _MSC_VER"
      },
      {
        "sha": "c51277281701da0c44bd9d3fecfc563337a3b685",
        "filename": "src/util/strencodings.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/util/strencodings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/util/strencodings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/strencodings.h?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -55,8 +55,6 @@ std::string EncodeBase32(const unsigned char* pch, size_t len);\n std::string EncodeBase32(const std::string& str);\n \n void SplitHostPort(std::string in, int &portOut, std::string &hostOut);\n-std::string i64tostr(int64_t n);\n-std::string itostr(int n);\n int64_t atoi64(const char* psz);\n int64_t atoi64(const std::string& str);\n int atoi(const std::string& str);"
      },
      {
        "sha": "90b41104a4588ca9899a5f2e5b7e864bab852998",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fcb76edd9e2bbf788218ec5d88499e1464ebe9dc/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=fcb76edd9e2bbf788218ec5d88499e1464ebe9dc",
        "patch": "@@ -210,7 +210,7 @@ static inline void WriteOrderPos(const int64_t& nOrderPos, mapValue_t& mapValue)\n {\n     if (nOrderPos == -1)\n         return;\n-    mapValue[\"n\"] = i64tostr(nOrderPos);\n+    mapValue[\"n\"] = std::to_string(nOrderPos);\n }\n \n struct COutputEntry"
      }
    ]
  }
]