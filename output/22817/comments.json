[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926841446",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22817#issuecomment-926841446",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22817",
    "id": 926841446,
    "node_id": "IC_kwDOABII5843Pnpm",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?u=b48a1208deda9bd1756f21a35341ce98265355c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-09-24T18:34:29Z",
    "updated_at": "2021-09-24T18:34:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "utACK fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b\r\n\r\nThe change looks good me. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/926841446/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697483286",
    "pull_request_review_id": 740580178,
    "id": 697483286,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzQ4MzI4Ng==",
    "diff_hunk": "@@ -560,18 +560,19 @@ def wait_for_node_exit(self, i, timeout):\n         self.nodes[i].process.wait(timeout)\n \n     def connect_nodes(self, a, b):\n-        def connect_nodes_helper(from_connection, node_num):\n-            ip_port = \"127.0.0.1:\" + str(p2p_port(node_num))\n-            from_connection.addnode(ip_port, \"onetry\")\n-            # poll until version handshake complete to avoid race conditions\n-            # with transaction relaying\n-            # See comments in net_processing:\n-            # * Must have a version message before anything else\n-            # * Must have a verack message before anything else\n-            wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n-            wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n-\n-        connect_nodes_helper(self.nodes[a], b)\n+        from_connection = self.nodes[a]\n+        to_connection = self.nodes[b]\n+        ip_port = \"127.0.0.1:\" + str(p2p_port(b))\n+        from_connection.addnode(ip_port, \"onetry\")\n+        # poll until version handshake complete to avoid race conditions\n+        # with transaction relaying\n+        # See comments in net_processing:\n+        # * Must have a version message before anything else\n+        # * Must have a verack message before anything else\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in to_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))",
    "path": "test/functional/test_framework/test_framework.py",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "original_commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Any reason to use `pop` here instead of `get`? (I don't think so, there's no reason to mutate the structure)\r\nAlso: `>= 24` might be more robust; it's clearly wrong if more than one verack gets sent, but it shouldn't hang forever in that case.",
    "created_at": "2021-08-27T14:23:37Z",
    "updated_at": "2021-08-27T14:24:13Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697483286",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697483286"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697483286"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697483286/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 574,
    "original_line": 574,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697828599",
    "pull_request_review_id": 740997412,
    "id": 697828599,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY5NzgyODU5OQ==",
    "diff_hunk": "@@ -560,18 +560,19 @@ def wait_for_node_exit(self, i, timeout):\n         self.nodes[i].process.wait(timeout)\n \n     def connect_nodes(self, a, b):\n-        def connect_nodes_helper(from_connection, node_num):\n-            ip_port = \"127.0.0.1:\" + str(p2p_port(node_num))\n-            from_connection.addnode(ip_port, \"onetry\")\n-            # poll until version handshake complete to avoid race conditions\n-            # with transaction relaying\n-            # See comments in net_processing:\n-            # * Must have a version message before anything else\n-            # * Must have a verack message before anything else\n-            wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n-            wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n-\n-        connect_nodes_helper(self.nodes[a], b)\n+        from_connection = self.nodes[a]\n+        to_connection = self.nodes[b]\n+        ip_port = \"127.0.0.1:\" + str(p2p_port(b))\n+        from_connection.addnode(ip_port, \"onetry\")\n+        # poll until version handshake complete to avoid race conditions\n+        # with transaction relaying\n+        # See comments in net_processing:\n+        # * Must have a version message before anything else\n+        # * Must have a verack message before anything else\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in to_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))",
    "path": "test/functional/test_framework/test_framework.py",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "original_commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This is the existing code, so I didn't touch it. I forgot to mention to review with `--ignore-all-space`.\r\n\r\nI think it is fine for tests to fail when two veracks are sent.",
    "created_at": "2021-08-28T07:22:36Z",
    "updated_at": "2021-08-28T07:22:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697828599",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697828599"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r697828599"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/697828599/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 574,
    "original_line": 574,
    "side": "RIGHT",
    "in_reply_to_id": 697483286
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715821157",
    "pull_request_review_id": 763363592,
    "id": 715821157,
    "node_id": "PRRC_kwDOABII584qqpBl",
    "diff_hunk": "@@ -560,18 +560,19 @@ def wait_for_node_exit(self, i, timeout):\n         self.nodes[i].process.wait(timeout)\n \n     def connect_nodes(self, a, b):\n-        def connect_nodes_helper(from_connection, node_num):\n-            ip_port = \"127.0.0.1:\" + str(p2p_port(node_num))\n-            from_connection.addnode(ip_port, \"onetry\")\n-            # poll until version handshake complete to avoid race conditions\n-            # with transaction relaying\n-            # See comments in net_processing:\n-            # * Must have a version message before anything else\n-            # * Must have a verack message before anything else\n-            wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n-            wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))\n-\n-        connect_nodes_helper(self.nodes[a], b)\n+        from_connection = self.nodes[a]\n+        to_connection = self.nodes[b]\n+        ip_port = \"127.0.0.1:\" + str(p2p_port(b))\n+        from_connection.addnode(ip_port, \"onetry\")\n+        # poll until version handshake complete to avoid race conditions\n+        # with transaction relaying\n+        # See comments in net_processing:\n+        # * Must have a version message before anything else\n+        # * Must have a verack message before anything else\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in from_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['version'] != 0 for peer in to_connection.getpeerinfo()))\n+        wait_until_helper(lambda: all(peer['bytesrecv_per_msg'].pop('verack', 0) == 24 for peer in from_connection.getpeerinfo()))",
    "path": "test/functional/test_framework/test_framework.py",
    "position": 27,
    "original_position": 27,
    "commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "original_commit_id": "fa04f26aa77d2cf746db4a8a43068b7c5c9cd02b",
    "user": {
      "login": "kiminuo",
      "id": 58662979,
      "node_id": "MDQ6VXNlcjU4NjYyOTc5",
      "avatar_url": "https://avatars.githubusercontent.com/u/58662979?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kiminuo",
      "html_url": "https://github.com/kiminuo",
      "followers_url": "https://api.github.com/users/kiminuo/followers",
      "following_url": "https://api.github.com/users/kiminuo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kiminuo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kiminuo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kiminuo/subscriptions",
      "organizations_url": "https://api.github.com/users/kiminuo/orgs",
      "repos_url": "https://api.github.com/users/kiminuo/repos",
      "events_url": "https://api.github.com/users/kiminuo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kiminuo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> This is the existing code, so I didn't touch it.\r\n\r\nI was thinking that `.get(key, default)` did not exist in older Python versions but even Python 2.7 [supports](https://docs.python.org/2.7/library/stdtypes.html#dict) it. However, the change comes from this PR https://github.com/bitcoin/bitcoin/pull/18866 :-)\r\n\r\nStill I think `.pop('verack', 0)` ->`.get('verack', 0)` should work just fine as proposed by @laanwj and it seems more natural.",
    "created_at": "2021-09-24T18:23:03Z",
    "updated_at": "2021-09-24T18:23:03Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r715821157",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715821157"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22817#discussion_r715821157"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22817"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/715821157/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 574,
    "original_line": 574,
    "side": "RIGHT",
    "in_reply_to_id": 697483286
  }
]