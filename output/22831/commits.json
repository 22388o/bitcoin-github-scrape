[
  {
    "sha": "ef242f52137f2a79a739447251d7759bd4705be0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplZjI0MmY1MjEzN2YyYTc5YTczOTQ0NzI1MWQ3NzU5YmQ0NzA1YmUw",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-14T10:14:43Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-15T13:28:36Z"
      },
      "message": "Allow passing \"tried\" to rpc addpeeraddress to call CAddrMan::Good()\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>",
      "tree": {
        "sha": "82b45a11872c1d68431e1a2cb04631cc940c2ec2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/82b45a11872c1d68431e1a2cb04631cc940c2ec2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ef242f52137f2a79a739447251d7759bd4705be0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFB9Q8ACgkQT1chs9Dj\nkh2ryQ/9EjaFg+M+0emHOdZ/w6uCChWXIwOHbxcDp3mB4Vf0V2t2MLWneJTLQSqr\nwY3Lyj7qHn3JszootC0OXAluqJ5hgBD33Vm3YkrWmMIRj+8cJgQzRY3DnBG9ZUxB\nd/zH/n2PK/2eTuYqXy+rXub9F+sXXDahUmGRVJnT/xD7duTAjwg/UyBTeFLkQVp+\nvJS6Uq4RU7jOFfQQ5MclyVLadsApNNgtsdEQoNOeRfrOVas6EFA1lidj44/O/Bsi\nw0bbaOHBufnfqqlZrR1K3SX9Q4odT+gsRWNiNHSzkh++buf7VlbByfl8jCteX7tz\ne3y6C84UwadCA8qi8sJ+3LVkgaVUbrYAcC9HBMn5lvX4PFVE58UFyvgNkixsMCy3\nkWvQBzweZeb0fdz+dmtkR8uGnOMUe0DbHtLdQQgK8O5qmeGrObRcFe8KG7Sy1iBv\nJLjFXzmHmf62r3KvenkEHoMFaCPlbFZyfYYz8n7rNJiWyr546Le6foMcxEZAXv5E\njd5ogBwf2ZFol0hZAHlluCMnnJ9dvPAptEZz8m7PETk+m0rwVfkWX6+oG0egzT1z\n9GXWGYSBuHDH1AwA66V+svfqn+heKqE+aByf3lOR+rrzQxeCFfKPltOQ+RlCgIGv\nn/mRYt19H4DZ+v0r+BFuDAezbYHxjMEoc9e7tZpir1u4ZQIHdDo=\n=RGDD\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGbGYLLyI05YZ5yv9mw5aO5pO5A2ofsoWTIEYhcQ8CC3CP/wEC/IkSOOzZsh\nSORWMzVaqcMI8SDbGjex4ip2G5Nl3QyvHMbyRybxZZn8TVkBGqg3+57WWAjxBGFB\n9RDwCMKQeyAN38FVAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQYadxHd+AyYnyMbFZJIytuAjxBGFB9RHwCNNg\no8DXdOZ3AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5jYWxlbmRhci5ldGVybml0\neXdhbGwuY29t//AQga1pIdcyBYLJIFRip9hecwjxIPAcSVQcJMT4Kvyv1bT4qgjS\nPykF7XVnr8QEY+Vc103DCPEEYUH1EfAIjeE+tSJE/AAAg9/jDS75DI4jImh0dHBz\nOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23wEJT747+9Rdf7ysTaJ50D9+8I\n8CAQixfrN3lzZKXE8zDC6eOsBCjMVB2DXn5CI+ZHg8Jp2QjxIIk5mzoDEUPWG3lm\nufhCmAtQ37KI7HMqrlDl0VMvOKhyCPEEYUH1EPAIskFhoUhhlZMAg9/jDS75DI4u\nLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZw==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 82b45a11872c1d68431e1a2cb04631cc940c2ec2\nparent 5e3380b9f59481fc18e05b9d651c3c733abe4053\nauthor Jon Atack <jon@atack.com> 1631614483 +0200\ncommitter Jon Atack <jon@atack.com> 1631712516 +0200\n\nAllow passing \"tried\" to rpc addpeeraddress to call CAddrMan::Good()\n\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Vasil Dimov <vd@FreeBSD.org>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef242f52137f2a79a739447251d7759bd4705be0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ef242f52137f2a79a739447251d7759bd4705be0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef242f52137f2a79a739447251d7759bd4705be0/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e3380b9f59481fc18e05b9d651c3c733abe4053",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e3380b9f59481fc18e05b9d651c3c733abe4053",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e3380b9f59481fc18e05b9d651c3c733abe4053"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 12,
      "deletions": 3
    },
    "files": [
      {
        "sha": "d6943e066a176cc994e0624da1337263cb3efc9c",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef242f52137f2a79a739447251d7759bd4705be0/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef242f52137f2a79a739447251d7759bd4705be0/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=ef242f52137f2a79a739447251d7759bd4705be0",
        "patch": "@@ -192,6 +192,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"unloadwallet\", 1, \"load_on_startup\"},\n     { \"getnodeaddresses\", 0, \"count\"},\n     { \"addpeeraddress\", 1, \"port\"},\n+    { \"addpeeraddress\", 2, \"tried\"},\n     { \"stop\", 0, \"wait\" },\n };\n // clang-format on"
      },
      {
        "sha": "227eec722fa783bd3d684874314b91cc5f4c8cef",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ef242f52137f2a79a739447251d7759bd4705be0/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ef242f52137f2a79a739447251d7759bd4705be0/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=ef242f52137f2a79a739447251d7759bd4705be0",
        "patch": "@@ -921,6 +921,7 @@ static RPCHelpMan addpeeraddress()\n         {\n             {\"address\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The IP address of the peer\"},\n             {\"port\", RPCArg::Type::NUM, RPCArg::Optional::NO, \"The port of the peer\"},\n+            {\"tried\", RPCArg::Type::BOOL, RPCArg::Default{false}, \"If true, attempt to add the peer to the tried addresses table\"},\n         },\n         RPCResult{\n             RPCResult::Type::OBJ, \"\", \"\",\n@@ -929,8 +930,8 @@ static RPCHelpMan addpeeraddress()\n             },\n         },\n         RPCExamples{\n-            HelpExampleCli(\"addpeeraddress\", \"\\\"1.2.3.4\\\" 8333\")\n-    + HelpExampleRpc(\"addpeeraddress\", \"\\\"1.2.3.4\\\", 8333\")\n+            HelpExampleCli(\"addpeeraddress\", \"\\\"1.2.3.4\\\" 8333 true\")\n+    + HelpExampleRpc(\"addpeeraddress\", \"\\\"1.2.3.4\\\", 8333, true\")\n         },\n         [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n {\n@@ -941,6 +942,7 @@ static RPCHelpMan addpeeraddress()\n \n     const std::string& addr_string{request.params[0].get_str()};\n     const uint16_t port{static_cast<uint16_t>(request.params[1].get_int())};\n+    const bool tried{request.params[2].isTrue()};\n \n     UniValue obj(UniValue::VOBJ);\n     CNetAddr net_addr;\n@@ -951,7 +953,13 @@ static RPCHelpMan addpeeraddress()\n         address.nTime = GetAdjustedTime();\n         // The source address is set equal to the address. This is equivalent to the peer\n         // announcing itself.\n-        if (node.addrman->Add({address}, address)) success = true;\n+        if (node.addrman->Add({address}, address)) {\n+            success = true;\n+            if (tried) {\n+                // Attempt to move the address to the tried addresses table.\n+                node.addrman->Good(address);\n+            }\n+        }\n     }\n \n     obj.pushKV(\"success\", success);"
      }
    ]
  },
  {
    "sha": "869f136816c6900ce84bc4b5a9c93c0deab85193",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NjlmMTM2ODE2YzY5MDBjZTg0YmM0YjVhOWM5M2MwZGVhYjg1MTkz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-14T11:06:38Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-15T14:25:49Z"
      },
      "message": "Add test for rpc addpeeraddress with \"tried\" argument\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>",
      "tree": {
        "sha": "249519ff53e0ee3e0891b310645302c982733364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/249519ff53e0ee3e0891b310645302c982733364"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/869f136816c6900ce84bc4b5a9c93c0deab85193",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFCAngACgkQT1chs9Dj\nkh2LMxAAvCVzkc1IK2c47QEDfLTAWYL0WEb/yGxdNQCzsi0ZTbw1mdBZhSVwFRvU\nVur7YJarXFGdgETwlK6EY7sxhpaBpk115HUijUVIymRgHX4gmt3x3C1DXjGkXdaM\nOoMge0MGfx39hqvG/dxi67hOyBg2CxPGi8ecZLD28hZjmE5U42nbE2/cQw41lJMp\nZr8XpIMDy6HyuYpGAsNk6skmH899fu8CP1xO9cim4PJP03iia+yodTtwcNQafGim\nlhK+wmFYjzPXlySmaPfj0kXebX3g9O0hOYGAtR3XsW+qZdvwzH3mhNNRYw4ojld+\nrmJc21+vh+yfHbvDYk/ajxWV+tq23fvehxbmenwHnkdbNhisePaiaWXr8WjG1+s1\nMQvMCzhlud7q35xinaYWNiJFhl9+VQw9eEuznlYW+FWQZlfhWEwMqHTsguF1Ug2I\nx7dVtcpdpGpDg9nMW6dpEupwWHuT0PvjmNpXrDJZuLStl1ZqBUUK9i+fs/zIwR/a\nqkF7bBE0PPFN63wiwXK0K5bCYZe2ABiP5PxmCHHYVsX/kqGyErvz4o/mUOxlKY3h\n7PMtXP4gR0R2bB2J8q0CAZ526OcmaS7eYhm9JgWW8TB1kDBoklYjw/VK9o8ebSZ4\n5acHTUVpR/+EvUcDFykpz/UhRU7sShcm7Nl3JE7QTMOf5wIsLPE=\n=SW/1\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIMvZhkKasmn9ERUjbWyDIlfesTNQOHOphMBPrvkpLoCkCP/wEEX/JCrb7CTl\notFMVAx1c6gI8SDinlc0xBtI7A3td0dufKGm9WRWeg41x+RGX+lItqRz9QjxILwZ\nabnJYP69mZUZgE2Apr6S0GOmdMxhXGJsC0oqAz+ICPEEYUICefAIFR6RC4+5xR4A\ng9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5jb23/8BBI\n/CqxbQt+0Xlxi2WLTsRBCPEEYUICefAI7KKcUYq2DagAg9/jDS75DI4sK2h0dHBz\nOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmf/8BCx/ESWk52O\nS0DS28CdH+2yCPAgjQG/Dxdz/4alqr2Q7QYS+4iUTdPdhm+xQcdAQpvK0owI8CCX\nEwhO9mrRy1WBoxrQwHRrNDv7xEYtb571hfsn16vlsgjxIORk2uK5U15qxs5WUXcH\nR7Ig6bGyo31NRhl5S7Zln+pYCPAgT2FcPT/KSUEwDvGev9ZPyj4bJ/4YevZYzzg3\n8xeKU8gI8QRhQgJ58Ah9CwUzWIhcaACD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5i\ndGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDLsD0VtcVJ7TDfryBAiGA7\nCPEEYUICevAIwS7gtNmENvoAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVu\nZGFyLmV0ZXJuaXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 249519ff53e0ee3e0891b310645302c982733364\nparent ef242f52137f2a79a739447251d7759bd4705be0\nauthor Jon Atack <jon@atack.com> 1631617598 +0200\ncommitter Jon Atack <jon@atack.com> 1631715949 +0200\n\nAdd test for rpc addpeeraddress with \"tried\" argument\n\nCo-authored-by: Amiti Uttarwar <amiti@uttarwar.org>\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/869f136816c6900ce84bc4b5a9c93c0deab85193",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/869f136816c6900ce84bc4b5a9c93c0deab85193",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/869f136816c6900ce84bc4b5a9c93c0deab85193/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ef242f52137f2a79a739447251d7759bd4705be0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ef242f52137f2a79a739447251d7759bd4705be0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ef242f52137f2a79a739447251d7759bd4705be0"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 26,
      "deletions": 9
    },
    "files": [
      {
        "sha": "4f5d8ce2411a38bca79588aedca2896075a0a564",
        "filename": "test/functional/rpc_net.py",
        "status": "modified",
        "additions": 26,
        "deletions": 9,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/869f136816c6900ce84bc4b5a9c93c0deab85193/test/functional/rpc_net.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/869f136816c6900ce84bc4b5a9c93c0deab85193/test/functional/rpc_net.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_net.py?ref=869f136816c6900ce84bc4b5a9c93c0deab85193",
        "patch": "@@ -239,7 +239,16 @@ def test_getnodeaddresses(self):\n         assert_raises_rpc_error(-8, \"Network not recognized: Foo\", self.nodes[0].getnodeaddresses, 1, \"Foo\")\n \n     def test_addpeeraddress(self):\n+        \"\"\"RPC addpeeraddress sets the source address equal to the destination address.\n+        If an address with the same /16 as an existing new entry is passed, it will be\n+        placed in the same new bucket and have a 1/64 chance of the bucket positions\n+        colliding (depending on the value of nKey in the addrman), in which case the\n+        new address won't be added.  The probability of collision can be reduced to\n+        1/2^16 = 1/65536 by using an address from a different /16.  We avoid this here\n+        by first testing adding a tried table entry before testing adding a new table one.\n+        \"\"\"\n         self.log.info(\"Test addpeeraddress\")\n+        self.restart_node(1, [\"-checkaddrman=1\"])\n         node = self.nodes[1]\n \n         self.log.debug(\"Test that addpeerinfo is a hidden RPC\")\n@@ -251,17 +260,25 @@ def test_addpeeraddress(self):\n         assert_equal(node.addpeeraddress(address=\"\", port=8333), {\"success\": False})\n         assert_equal(node.getnodeaddresses(count=0), [])\n \n-        self.log.debug(\"Test that adding a valid address succeeds\")\n-        assert_equal(node.addpeeraddress(address=\"1.2.3.4\", port=8333), {\"success\": True})\n-        addrs = node.getnodeaddresses(count=0)\n-        assert_equal(len(addrs), 1)\n-        assert_equal(addrs[0][\"address\"], \"1.2.3.4\")\n-        assert_equal(addrs[0][\"port\"], 8333)\n-\n-        self.log.debug(\"Test that adding the same address again when already present fails\")\n-        assert_equal(node.addpeeraddress(address=\"1.2.3.4\", port=8333), {\"success\": False})\n+        self.log.debug(\"Test that adding a valid address to the tried table succeeds\")\n+        assert_equal(node.addpeeraddress(address=\"1.2.3.4\", tried=True, port=8333), {\"success\": True})\n+        with node.assert_debug_log(expected_msgs=[\"Addrman checks started: new 0, tried 1, total 1\"]):\n+            addrs = node.getnodeaddresses(count=0)  # getnodeaddresses re-runs the addrman checks\n+            assert_equal(len(addrs), 1)\n+            assert_equal(addrs[0][\"address\"], \"1.2.3.4\")\n+            assert_equal(addrs[0][\"port\"], 8333)\n+\n+        self.log.debug(\"Test that adding an already-present tried address to the new and tried tables fails\")\n+        for value in [True, False]:\n+            assert_equal(node.addpeeraddress(address=\"1.2.3.4\", tried=value, port=8333), {\"success\": False})\n         assert_equal(len(node.getnodeaddresses(count=0)), 1)\n \n+        self.log.debug(\"Test that adding a second address, this time to the new table, succeeds\")\n+        assert_equal(node.addpeeraddress(address=\"2.0.0.0\", port=8333), {\"success\": True})\n+        with node.assert_debug_log(expected_msgs=[\"Addrman checks started: new 1, tried 1, total 2\"]):\n+            addrs = node.getnodeaddresses(count=0)  # getnodeaddresses re-runs the addrman checks\n+            assert_equal(len(addrs), 2)\n+\n \n if __name__ == '__main__':\n     NetTest().main()"
      }
    ]
  },
  {
    "sha": "cdaab90662a54e331de0e49a89596bbb94a8ac45",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZGFhYjkwNjYyYTU0ZTMzMWRlMGU0OWE4OTU5NmJiYjk0YThhYzQ1",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-08-30T10:11:47Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-15T14:38:03Z"
      },
      "message": "Add test for addrman consistency check on restart with asmap\n\nPR #22697 introduced a reproducible issue in commit 181a1207 that causes the\naddrman tried table to fail consistency checks and significantly lose peer\nentries when the `-asmap` configuration option is used.\n\nThe issue occurs on bitcoind restart due to an initialization order change\nin `src/init.cpp` in that commit whereby CAddrman asmap is set after\ndeserializing `peers.dat`, rather than before.\n\nIssue reported on the `#bitcoin-core-dev` IRC channel starting at\nhttps://www.erisian.com.au/bitcoin-core-dev/log-2021-08-23.html#l-263.\n\n```\naddrman lost 22813 new and 2 tried addresses due to collisions or invalid addresses\nADDRMAN CONSISTENCY CHECK FAILED!!! err=-17\nbitcoind: ./addrman.h:707: void CAddrMan::Check() const: Assertion `false' failed. Aborted\n```\n\nHow to reproduce:\n- `git checkout 181a1207` and recompile\n- launch bitcoind with `-asmap` and `-checkaddrman=1` config options\n- restart bitcoind\n- bitcoind aborts on second call to `CAddrMan::Check()`\n\nThis commit adds a regression test to reproduce the case; it passes or fails\nwith the same error.\n\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>",
      "tree": {
        "sha": "f22e4783df286743470e34ab6b22a256ef1d033f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f22e4783df286743470e34ab6b22a256ef1d033f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cdaab90662a54e331de0e49a89596bbb94a8ac45",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFCBVUACgkQT1chs9Dj\nkh2QWQ//eIh5nv73xPe6nT0tCBkynkruTqv+k8lSPMMznfVFAHMxadx6bjklaWso\nGSIHjhQU4uGXAi+UI9zbMaO/nMAM099ikC06GuuNog6Wn2Brh9w9ushtlKSJMNgP\ntxN3k4hg4m90eUcKHzwk4v1N5J06aGAwjDFAK/BYi72w3JgF5FYQrS79TzRkwDaL\nYwUVHOxo9UFfB+D3v1En5aGOw+rQ841N+bMirhAUHDWTxhmY6TUVEDIrOb1ALG4X\n0QEV4diArUuLqDlwZ5XQmPsqiM/kNHmUsy2iatDhWsqVeLcq8VbQ3mYA2oGSYX44\nmQ8u51uS6wI/SivCY5ynE4VKgbjnbvR7GhPlVE8kuKjUa/vMFefkvz7zP4IVo1gU\n6ZFm6dzSfM0RvvhD8YEIYk5d1sQpPMD9sE2Id0CHAHkUEswoqrbtdnE/f2t3ATCB\nfTKkOU+FDarMJzDxZS+qcCSXc6QTAth90fLX0p1gCytT6xO6YhLuSKUMo9lBajLX\nPWOBvXG7z7j64dshRO7+lGvdRKEA1IGuQZZiQWdZVDdabYURYXgtbCbMtfm4lYUi\nYQCG1xsIaVfF26obxAbTaEA0L84x+mVkC6ZDSuojxaeqbY/Xcly+/nWaBxgeWvM2\nS3l3natn7UFPIHUSif/TpJSN/guyLLB1xzZRC18wUaNzLdZUuo8=\n=X3bY\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAgIBjiTJmwhuzJYmGG6W52BhJt0iwxbirZ96yT2AScUCP/wEBumNrNu8kLH\nDgmvhq1ytzEI8QRhQgVW8AjpVCBxMzuq6wCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEJlxvaEyoheddqnBG/OE\nWuII8QRhQgVX8AhyVheD+kmDZwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEKY4Grta2oXLPOoyu2EiI44I8QRhQgVX8AgfTbIs\nKxSGfACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQ+kGVCA6M3Vo8HGlVY3x8kwjxBGFCBVbwCClFh/M0UyL+AIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree f22e4783df286743470e34ab6b22a256ef1d033f\nparent 869f136816c6900ce84bc4b5a9c93c0deab85193\nauthor Jon Atack <jon@atack.com> 1630318307 +0200\ncommitter Jon Atack <jon@atack.com> 1631716683 +0200\n\nAdd test for addrman consistency check on restart with asmap\n\nPR #22697 introduced a reproducible issue in commit 181a1207 that causes the\naddrman tried table to fail consistency checks and significantly lose peer\nentries when the `-asmap` configuration option is used.\n\nThe issue occurs on bitcoind restart due to an initialization order change\nin `src/init.cpp` in that commit whereby CAddrman asmap is set after\ndeserializing `peers.dat`, rather than before.\n\nIssue reported on the `#bitcoin-core-dev` IRC channel starting at\nhttps://www.erisian.com.au/bitcoin-core-dev/log-2021-08-23.html#l-263.\n\n```\naddrman lost 22813 new and 2 tried addresses due to collisions or invalid addresses\nADDRMAN CONSISTENCY CHECK FAILED!!! err=-17\nbitcoind: ./addrman.h:707: void CAddrMan::Check() const: Assertion `false' failed. Aborted\n```\n\nHow to reproduce:\n- `git checkout 181a1207` and recompile\n- launch bitcoind with `-asmap` and `-checkaddrman=1` config options\n- restart bitcoind\n- bitcoind aborts on second call to `CAddrMan::Check()`\n\nThis commit adds a regression test to reproduce the case; it passes or fails\nwith the same error.\n\nCo-authored-by: John Newbery <john@johnnewbery.com>\nCo-authored-by: Martin Zumsande <mzumsande@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdaab90662a54e331de0e49a89596bbb94a8ac45",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cdaab90662a54e331de0e49a89596bbb94a8ac45",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdaab90662a54e331de0e49a89596bbb94a8ac45/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "869f136816c6900ce84bc4b5a9c93c0deab85193",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/869f136816c6900ce84bc4b5a9c93c0deab85193",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/869f136816c6900ce84bc4b5a9c93c0deab85193"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 27,
      "deletions": 2
    },
    "files": [
      {
        "sha": "2dc1e3a7cbb7fb3d966d25af1e4e08043316f43f",
        "filename": "test/functional/feature_asmap.py",
        "status": "modified",
        "additions": 27,
        "deletions": 2,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cdaab90662a54e331de0e49a89596bbb94a8ac45/test/functional/feature_asmap.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cdaab90662a54e331de0e49a89596bbb94a8ac45/test/functional/feature_asmap.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_asmap.py?ref=cdaab90662a54e331de0e49a89596bbb94a8ac45",
        "patch": "@@ -14,9 +14,11 @@\n \n 4. `bitcoind -asmap/-asmap=` with no file specified, using the default asmap\n \n-5. `bitcoind -asmap` with no file specified and a missing default asmap file\n+5. `bitcoind -asmap` restart with an addrman containing new and tried entries\n \n-6. `bitcoind -asmap` with an empty (unparsable) default asmap file\n+6. `bitcoind -asmap` with no file specified and a missing default asmap file\n+\n+7. `bitcoind -asmap` with an empty (unparsable) default asmap file\n \n The tests are order-independent.\n \n@@ -37,6 +39,12 @@ def expected_messages(filename):\n class AsmapTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n+        self.extra_args = [[\"-checkaddrman=1\"]]  # Do addrman checks on all operations.\n+\n+    def fill_addrman(self, node_id):\n+        \"\"\"Add 2 tried addresses to the addrman, followed by 2 new addresses.\"\"\"\n+        for addr, tried in [[0, True], [1, True], [2, False], [3, False]]:\n+            self.nodes[node_id].addpeeraddress(address=f\"101.{addr}.0.0\", tried=tried, port=8333)\n \n     def test_without_asmap_arg(self):\n         self.log.info('Test bitcoind with no -asmap arg passed')\n@@ -72,6 +80,22 @@ def test_default_asmap(self):\n                 self.start_node(0, [arg])\n         os.remove(self.default_asmap)\n \n+    def test_asmap_interaction_with_addrman_containing_entries(self):\n+        self.log.info(\"Test bitcoind -asmap restart with addrman containing new and tried entries\")\n+        self.stop_node(0)\n+        shutil.copyfile(self.asmap_raw, self.default_asmap)\n+        self.start_node(0, [\"-asmap\", \"-checkaddrman=1\"])\n+        self.fill_addrman(node_id=0)\n+        self.restart_node(0, [\"-asmap\", \"-checkaddrman=1\"])\n+        with self.node.assert_debug_log(\n+            expected_msgs=[\n+                \"Addrman checks started: new 2, tried 2, total 4\",\n+                \"Addrman checks completed successfully\",\n+            ]\n+        ):\n+            self.node.getnodeaddresses()  # getnodeaddresses re-runs the addrman checks\n+        os.remove(self.default_asmap)\n+\n     def test_default_asmap_with_missing_file(self):\n         self.log.info('Test bitcoind -asmap with missing default map file')\n         self.stop_node(0)\n@@ -97,6 +121,7 @@ def run_test(self):\n         self.test_asmap_with_absolute_path()\n         self.test_asmap_with_relative_path()\n         self.test_default_asmap()\n+        self.test_asmap_interaction_with_addrman_containing_entries()\n         self.test_default_asmap_with_missing_file()\n         self.test_empty_asmap()\n "
      }
    ]
  }
]