[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297943044",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-297943044",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 297943044,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzk0MzA0NA==",
    "user": {
      "login": "mm-s",
      "id": 6876580,
      "node_id": "MDQ6VXNlcjY4NzY1ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6876580?u=6d3d2dcc6f086997a56e8a540a28c7998fcc3b99&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mm-s",
      "html_url": "https://github.com/mm-s",
      "followers_url": "https://api.github.com/users/mm-s/followers",
      "following_url": "https://api.github.com/users/mm-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/mm-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mm-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mm-s/subscriptions",
      "organizations_url": "https://api.github.com/users/mm-s/orgs",
      "repos_url": "https://api.github.com/users/mm-s/repos",
      "events_url": "https://api.github.com/users/mm-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mm-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T08:44:09Z",
    "updated_at": "2017-04-28T09:04:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fixed both suggestions. @dcousens & @kallewoof,\r\nalthough I'd like to state my opinion on these reviews:\r\n1.- \"In\" suffix does not add any value and makes the sentence more verbose and, in my opinion, less readable. \r\n2.- Consistency rules often carry problems related to lack of diversity.\r\n\r\nThanks\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/297943044/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298022486",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298022486",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298022486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODAyMjQ4Ng==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T15:02:45Z",
    "updated_at": "2017-04-28T15:02:45Z",
    "author_association": "MEMBER",
    "body": "I would argue that foo(foo) is less ambiguous despite semantic equivalence. It's also the standard that's been adhered to in the code thus far so it'd require some amount of merit to break.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298022486/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298029767",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298029767",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298029767,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODAyOTc2Nw==",
    "user": {
      "login": "mm-s",
      "id": 6876580,
      "node_id": "MDQ6VXNlcjY4NzY1ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6876580?u=6d3d2dcc6f086997a56e8a540a28c7998fcc3b99&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mm-s",
      "html_url": "https://github.com/mm-s",
      "followers_url": "https://api.github.com/users/mm-s/followers",
      "following_url": "https://api.github.com/users/mm-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/mm-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mm-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mm-s/subscriptions",
      "organizations_url": "https://api.github.com/users/mm-s/orgs",
      "repos_url": "https://api.github.com/users/mm-s/repos",
      "events_url": "https://api.github.com/users/mm-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mm-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T15:29:55Z",
    "updated_at": "2017-04-28T15:29:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "it is just that c(p):p(p) is a better abstraction than c(pIn):p(pIn) since In does not add any meaning to the code, apart from remarking that it is an input parameter which is obvious.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298029767/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298032813",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298032813",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298032813,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODAzMjgxMw==",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?u=8aa4d0fd79dff5cf64a98205c78bc1c96b0bf4b6&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T15:41:55Z",
    "updated_at": "2017-04-28T15:41:55Z",
    "author_association": "MEMBER",
    "body": "That's all fine and dandy until you start doing things like\r\n```C++\r\nclass foo {\r\n    int x;\r\n    foo(int x) { x = x * 48; } \r\n};\r\n```\r\nwhich, crazy as it may seem, is not very far away from your suggestion.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298032813/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298101852",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298101852",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298101852,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwMTg1Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T20:43:02Z",
    "updated_at": "2017-04-28T20:43:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Weak Concept Ack.\r\n\r\nMost likely this gets inlined and optimized out so this shouldn't impact the generated code?\r\n\r\nIf that isn't the case, I have a slight preference to make this happen by exposing an uninitialized constructor for uin256_t and then calling SetNull. ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298101852/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298249116",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298249116",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298249116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODI0OTExNg==",
    "user": {
      "login": "mm-s",
      "id": 6876580,
      "node_id": "MDQ6VXNlcjY4NzY1ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6876580?u=6d3d2dcc6f086997a56e8a540a28c7998fcc3b99&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mm-s",
      "html_url": "https://github.com/mm-s",
      "followers_url": "https://api.github.com/users/mm-s/followers",
      "following_url": "https://api.github.com/users/mm-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/mm-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mm-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mm-s/subscriptions",
      "organizations_url": "https://api.github.com/users/mm-s/orgs",
      "repos_url": "https://api.github.com/users/mm-s/repos",
      "events_url": "https://api.github.com/users/mm-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mm-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-30T18:40:11Z",
    "updated_at": "2017-04-30T18:40:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JeremyRubin Not easy decision: The default constructor is reseting to 0, adding a constructor that leaves the object uninitalized looks like having an ugly prototype; on the other hand changing the behavior by leaving the object uninitalized in the default constructor and adding another constructor accepting a uint8[]  looks like it is the right design, but at this point it may confuse to whom is already assuming that the default constructor is reseting the memory, apart from checking every single call done in the codebase.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298249116/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298289499",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298289499",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298289499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODI4OTQ5OQ==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T05:40:44Z",
    "updated_at": "2017-05-01T05:40:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not suggesting that it has to/should be the default constructor.\r\n\r\nAlso the main part is that this likely does not impact the actual code generated; you should try outputting optimized assembly for \r\n```c++\r\n#include <memory>\r\nint main() {\r\n    char x[32];\r\n    memset((void*)*x, 0, 32);\r\n}\r\n```\r\n\r\nand \r\n```c++\r\n#include <memory>\r\nint main() {\r\n    char x[32];\r\n    memset((void*)*x, 0, 32);\r\n    memset((void*)*x, 0, 32);\r\n}\r\n```\r\nI didn't see a difference even at O1.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298289499/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298289946",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298289946",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298289946,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODI4OTk0Ng==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T05:46:35Z",
    "updated_at": "2017-05-01T05:46:35Z",
    "author_association": "MEMBER",
    "body": "@JeremyRubin Also when the code is split over different modules?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298289946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298324696",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298324696",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298324696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODMyNDY5Ng==",
    "user": {
      "login": "mm-s",
      "id": 6876580,
      "node_id": "MDQ6VXNlcjY4NzY1ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6876580?u=6d3d2dcc6f086997a56e8a540a28c7998fcc3b99&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mm-s",
      "html_url": "https://github.com/mm-s",
      "followers_url": "https://api.github.com/users/mm-s/followers",
      "following_url": "https://api.github.com/users/mm-s/following{/other_user}",
      "gists_url": "https://api.github.com/users/mm-s/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mm-s/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mm-s/subscriptions",
      "organizations_url": "https://api.github.com/users/mm-s/orgs",
      "repos_url": "https://api.github.com/users/mm-s/repos",
      "events_url": "https://api.github.com/users/mm-s/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mm-s/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T12:09:08Z",
    "updated_at": "2017-05-01T14:44:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JeremyRubin The compiler can resolve programmer's errors automatically, but it is preferably to have the high level code well designed before the optimizer checks ; with so many compiler vendors , so many flags and so many archs out there you can never say for sure the compiler will end up optimizing.\r\nAlso i commented on the possibility of not using the default constructor, and seemed to me ugly, which prototype would you use for a constructor that does not initialize?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298324696/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298371882",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298371882",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298371882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODM3MTg4Mg==",
    "user": {
      "login": "JeremyRubin",
      "id": 886523,
      "node_id": "MDQ6VXNlcjg4NjUyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/886523?u=8cdd8653982252593843d7369ecfebe432b89768&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JeremyRubin",
      "html_url": "https://github.com/JeremyRubin",
      "followers_url": "https://api.github.com/users/JeremyRubin/followers",
      "following_url": "https://api.github.com/users/JeremyRubin/following{/other_user}",
      "gists_url": "https://api.github.com/users/JeremyRubin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JeremyRubin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JeremyRubin/subscriptions",
      "organizations_url": "https://api.github.com/users/JeremyRubin/orgs",
      "repos_url": "https://api.github.com/users/JeremyRubin/repos",
      "events_url": "https://api.github.com/users/JeremyRubin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JeremyRubin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T16:49:31Z",
    "updated_at": "2017-05-01T16:50:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sipa I think the memset occurs in the header so it's my understanding it would be inlined.\r\n\r\nedit: notice that memset is defined in a different header in my example.\r\n\r\n@mm-s while this is true, your PR is not fixing an error it is an optimization, which introduces a dependency on the 0 initialization of uint256 that might introduce bugs later. Perhaps one easy way is:\r\n```c++\r\nclass X {\r\n    public:\r\n        X(bool initialized=true) {\r\n        }\r\n};\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298371882/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298459838",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#issuecomment-298459838",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/10292",
    "id": 298459838,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODQ1OTgzOA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-01T23:31:23Z",
    "updated_at": "2017-05-01T23:31:23Z",
    "author_association": "MEMBER",
    "body": "utACK 4fbae77929e6344bc49ab60af10a9c5ff21d2cdf\r\n\r\nI think this change is perfectly reasonable. There is a slight duplication between the SetNull function and the constructor, but it comes at almost no extra complexity. Please let's not introduce explicit non-initializing constructors.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/298459838/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113875385",
    "pull_request_review_id": 35300006,
    "id": 113875385,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzg3NTM4NQ==",
    "diff_hunk": "@@ -22,8 +22,8 @@ class COutPoint\n     uint256 hash;\n     uint32_t n;\n \n-    COutPoint() { SetNull(); }\n-    COutPoint(uint256 hashIn, uint32_t nIn) { hash = hashIn; n = nIn; }\n+    COutPoint(): n( (uint32_t) -1 ) { }\n+    COutPoint(const uint256& hash, uint32_t n): hash(hash), n(n) { }",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 7,
    "commit_id": "4fbae77929e6344bc49ab60af10a9c5ff21d2cdf",
    "original_commit_id": "90703eece71e60c74bac8b76bc7e1ab93ea4f97f",
    "user": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Can you leave the names as `hashIn` and `nIn` so we don't get `hash(hash), n(n)`?",
    "created_at": "2017-04-28T08:10:37Z",
    "updated_at": "2017-04-28T08:34:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#discussion_r113875385",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10292",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113875385"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10292#discussion_r113875385"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10292"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113875385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 26,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113877601",
    "pull_request_review_id": 35302420,
    "id": 113877601,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDExMzg3NzYwMQ==",
    "diff_hunk": "@@ -22,8 +22,8 @@ class COutPoint\n     uint256 hash;\n     uint32_t n;\n \n-    COutPoint() { SetNull(); }\n-    COutPoint(uint256 hashIn, uint32_t nIn) { hash = hashIn; n = nIn; }\n+    COutPoint(): n( (uint32_t) -1 ) { }",
    "path": "src/primitives/transaction.h",
    "position": null,
    "original_position": 6,
    "commit_id": "4fbae77929e6344bc49ab60af10a9c5ff21d2cdf",
    "original_commit_id": "90703eece71e60c74bac8b76bc7e1ab93ea4f97f",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Inconsistent spacing, `n((uint32_t) -1)` is fine",
    "created_at": "2017-04-28T08:24:17Z",
    "updated_at": "2017-04-28T08:34:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/10292#discussion_r113877601",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10292",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113877601"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/10292#discussion_r113877601"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/10292"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/113877601/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 25,
    "side": "RIGHT"
  }
]