[
  {
    "sha": "fab9095d4071159f88eeefa5c1a750960fd2fbb9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI5MDk1ZDQwNzExNTlmODhlZWVmYTVjMWE3NTA5NjBmZDJmYmI5",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-08T16:46:12Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-04-08T16:44:43Z"
      },
      "message": "qa: Windows fixups for functional tests",
      "tree": {
        "sha": "b8f6a3f8be32bfa0ea6c8ab9fa9098771a754368",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8f6a3f8be32bfa0ea6c8ab9fa9098771a754368"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab9095d4071159f88eeefa5c1a750960fd2fbb9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABCgAGBQJaykb7AAoJEM4rdWl+aaVI87oMAJhMba38AuVjOzYbie6GI4SH\niys6TsGHhNL1OE3j1eDm5idhviH2/pPuZHiiGsw1pFXNF5c979X1h7BUs2uEVSFT\novMMXVWiYlALv3NCwYXtGg7xSKZNmjcU50m3PHmxE0zmK4sCvFc7hWGkF0aopU4K\nesTrhMfsgMtwjbOgACLP9LwZhp08Elf4ebEz6rpA+13Ys044K7u7IbMj8pFqAmu+\nhfqCPrpooFHeGwKdFpLlCPq1RQmSfhhPn00Hp8yV3ou3o5ERnp4d65mHSs1wxVGl\n3nWoLz4FDkBPJOEO0nIiiZpFAs5pFVrX1a4YXO+KvfxD0yGRMB6Wf9zpcKhz4IsW\nGJ1tKV9+5j4zha41NHe083TvdCpxYVi59huuEVEnA9aNlyrsfIubjXa17MwQOZKA\npF3dr8Wc2HnTlErpxxeTeScjjtoiyW84F+55aczoA/d8xQXHYVv2LuMqRcB3M8e3\nFNRsM0A40d/QxoqbQrPsDCgg4YQbesKgiYfOry7JXg==\n=YODf\n-----END PGP SIGNATURE-----",
        "payload": "tree b8f6a3f8be32bfa0ea6c8ab9fa9098771a754368\nparent 15c3bb4268f3366c26a1ba28d32216f2ff86fe7f\nauthor MarcoFalke <falke.marco@gmail.com> 1523205972 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1523205883 -0400\n\nqa: Windows fixups for functional tests\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab9095d4071159f88eeefa5c1a750960fd2fbb9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab9095d4071159f88eeefa5c1a750960fd2fbb9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab9095d4071159f88eeefa5c1a750960fd2fbb9/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "15c3bb4268f3366c26a1ba28d32216f2ff86fe7f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/15c3bb4268f3366c26a1ba28d32216f2ff86fe7f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/15c3bb4268f3366c26a1ba28d32216f2ff86fe7f"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "8964c8d64becd14241da73e553cbcc0bae3cd17f",
        "filename": "test/functional/feature_notifications.py",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab9095d4071159f88eeefa5c1a750960fd2fbb9/test/functional/feature_notifications.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab9095d4071159f88eeefa5c1a750960fd2fbb9/test/functional/feature_notifications.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_notifications.py?ref=fab9095d4071159f88eeefa5c1a750960fd2fbb9",
        "patch": "@@ -37,7 +37,7 @@ def run_test(self):\n \n         # file content should equal the generated blocks hashes\n         with open(self.block_filename, 'r') as f:\n-            assert_equal(sorted(blocks), sorted(f.read().splitlines()))\n+            assert_equal(sorted(blocks), sorted(l.strip() for l in f.read().splitlines()))\n \n         self.log.info(\"test -walletnotify\")\n         # wait at most 10 seconds for expected file size before reading the content\n@@ -46,7 +46,7 @@ def run_test(self):\n         # file content should equal the generated transaction hashes\n         txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n         with open(self.tx_filename, 'r') as f:\n-            assert_equal(sorted(txids_rpc), sorted(f.read().splitlines()))\n+            assert_equal(sorted(txids_rpc), sorted(l.strip() for l in f.read().splitlines()))\n         os.remove(self.tx_filename)\n \n         self.log.info(\"test -walletnotify after rescan\")\n@@ -59,7 +59,7 @@ def run_test(self):\n         # file content should equal the generated transaction hashes\n         txids_rpc = list(map(lambda t: t['txid'], self.nodes[1].listtransactions(\"*\", block_count)))\n         with open(self.tx_filename, 'r') as f:\n-            assert_equal(sorted(txids_rpc), sorted(f.read().splitlines()))\n+            assert_equal(sorted(txids_rpc), sorted(l.strip() for l in f.read().splitlines()))\n \n         # Mine another 41 up-version blocks. -alertnotify should trigger on the 51st.\n         self.log.info(\"test -alertnotify\")"
      },
      {
        "sha": "83dffb0521ab2aa799c70df9b1383527b6f4e5e0",
        "filename": "test/functional/mempool_persist.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab9095d4071159f88eeefa5c1a750960fd2fbb9/test/functional/mempool_persist.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab9095d4071159f88eeefa5c1a750960fd2fbb9/test/functional/mempool_persist.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_persist.py?ref=fab9095d4071159f88eeefa5c1a750960fd2fbb9",
        "patch": "@@ -107,13 +107,13 @@ def run_test(self):\n         wait_until(lambda: len(self.nodes[1].getrawmempool()) == 5)\n \n         self.log.debug(\"Prevent bitcoind from writing mempool.dat to disk. Verify that `savemempool` fails\")\n-        # to test the exception we are setting bad permissions on a tmp file called mempool.dat.new\n+        # to test the exception we are creating a tmp folder called mempool.dat.new\n         # which is an implementation detail that could change and break this test\n         mempooldotnew1 = mempooldat1 + '.new'\n-        with os.fdopen(os.open(mempooldotnew1, os.O_CREAT, 0o000), 'w'):\n-            pass\n+        os.mkdir(mempooldotnew1)\n         assert_raises_rpc_error(-1, \"Unable to dump mempool to disk\", self.nodes[1].savemempool)\n-        os.remove(mempooldotnew1)\n+        os.rmdir(mempooldotnew1)\n+\n \n if __name__ == '__main__':\n     MempoolPersistTest().main()"
      }
    ]
  }
]