[
  {
    "sha": "8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZjFiY2Y4YjdiNmU0N2MwNWYyZTQzZGQ5OGVjMzUwNWI4ODhkOGIz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-15T18:37:29Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-01T16:32:03Z"
      },
      "message": "walletdb: Combine VerifyDatabaseFile and VerifyEnvironment\n\nCombine these two functions into a single Verify function that is a\nmember of WalletDatabase. Additionally, these are no longer static.",
      "tree": {
        "sha": "b0b8829b2b045b33537de2cc3c5a6c1661ab47fd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b0b8829b2b045b33537de2cc3c5a6c1661ab47fd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dbd7a91fdf3ff801fe5e4107e8346d0d6d11a899",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dbd7a91fdf3ff801fe5e4107e8346d0d6d11a899",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dbd7a91fdf3ff801fe5e4107e8346d0d6d11a899"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 16,
      "deletions": 42
    },
    "files": [
      {
        "sha": "b09337b5a69b134cfc912f6f9366fe57d5cda19d",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 15,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -292,11 +292,10 @@ BerkeleyBatch::SafeDbt::operator Dbt*()\n     return &m_dbt;\n }\n \n-bool BerkeleyBatch::VerifyEnvironment(const fs::path& file_path, bilingual_str& errorStr)\n+bool BerkeleyDatabase::Verify(bilingual_str& errorStr)\n {\n-    std::string walletFile;\n-    std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(file_path, walletFile);\n     fs::path walletDir = env->Directory();\n+    fs::path file_path = walletDir / strFile;\n \n     LogPrintf(\"Using BerkeleyDB version %s\\n\", BerkeleyDatabaseVersion());\n     LogPrintf(\"Using wallet %s\\n\", file_path.string());\n@@ -306,19 +305,10 @@ bool BerkeleyBatch::VerifyEnvironment(const fs::path& file_path, bilingual_str&\n         return false;\n     }\n \n-    return true;\n-}\n-\n-bool BerkeleyBatch::VerifyDatabaseFile(const fs::path& file_path, bilingual_str& errorStr)\n-{\n-    std::string walletFile;\n-    std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(file_path, walletFile);\n-    fs::path walletDir = env->Directory();\n-\n-    if (fs::exists(walletDir / walletFile))\n+    if (fs::exists(file_path))\n     {\n-        if (!env->Verify(walletFile)) {\n-            errorStr = strprintf(_(\"%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.\"), walletFile);\n+        if (!env->Verify(strFile)) {\n+            errorStr = strprintf(_(\"%s corrupt. Try using the wallet tool bitcoin-wallet to salvage or restoring a backup.\"), file_path);\n             return false;\n         }\n     }"
      },
      {
        "sha": "f8ecdd75d4092ee352b9f3ffce8a4b6e645ee0bd",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -141,6 +141,9 @@ class BerkeleyDatabase\n     unsigned int nLastFlushed;\n     int64_t nLastWalletUpdate;\n \n+    /** Verifies the environment and database file */\n+    bool Verify(bilingual_str& error);\n+\n     /**\n      * Pointer to shared database environment.\n      *\n@@ -215,10 +218,6 @@ class BerkeleyBatch\n     /* flush the wallet passively (TRY_LOCK)\n        ideal to be called periodically */\n     static bool PeriodicFlush(BerkeleyDatabase& database);\n-    /* verifies the database environment */\n-    static bool VerifyEnvironment(const fs::path& file_path, bilingual_str& errorStr);\n-    /* verifies the database file */\n-    static bool VerifyDatabaseFile(const fs::path& file_path, bilingual_str& errorStr);\n \n     template <typename K, typename T>\n     bool Read(const K& key, T& value)"
      },
      {
        "sha": "e6e62332c0082da53aaed16467cdd89d2c214fea",
        "filename": "src/wallet/salvage.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/salvage.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/salvage.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/salvage.cpp?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -20,6 +20,11 @@ bool RecoverDatabaseFile(const fs::path& file_path)\n     std::string filename;\n     std::shared_ptr<BerkeleyEnvironment> env = GetWalletEnv(file_path, filename);\n \n+    if (!env->Open(true /* retry */)) {\n+        tfm::format(std::cerr, \"Error initializing wallet database environment %s!\", env->Directory());\n+        return false;\n+    }\n+\n     // Recovery procedure:\n     // move wallet file to walletfilename.timestamp.bak\n     // Call Salvage with fAggressive=true to"
      },
      {
        "sha": "bbe9277e7415bf0d33e15b3228b630fada4ffd69",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 5,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -3708,15 +3708,11 @@ bool CWallet::Verify(interfaces::Chain& chain, const WalletLocation& location, b\n     std::unique_ptr<WalletDatabase> database = CreateWalletDatabase(wallet_path);\n \n     try {\n-        if (!WalletBatch::VerifyEnvironment(wallet_path, error_string)) {\n-            return false;\n-        }\n+        return database->Verify(error_string);\n     } catch (const fs::filesystem_error& e) {\n         error_string = Untranslated(strprintf(\"Error loading wallet %s. %s\", location.GetName(), fsbridge::get_filesystem_error_message(e)));\n         return false;\n     }\n-\n-    return WalletBatch::VerifyDatabaseFile(wallet_path, error_string);\n }\n \n std::shared_ptr<CWallet> CWallet::CreateWalletFromFile(interfaces::Chain& chain, const WalletLocation& location, bilingual_str& error, std::vector<bilingual_str>& warnings, uint64_t wallet_creation_flags)"
      },
      {
        "sha": "1c7649de670ff92ca2506790c09c8535c146560c",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 10,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -973,16 +973,6 @@ void MaybeCompactWalletDB()\n     fOneThread = false;\n }\n \n-bool WalletBatch::VerifyEnvironment(const fs::path& wallet_path, bilingual_str& errorStr)\n-{\n-    return BerkeleyBatch::VerifyEnvironment(wallet_path, errorStr);\n-}\n-\n-bool WalletBatch::VerifyDatabaseFile(const fs::path& wallet_path, bilingual_str& errorStr)\n-{\n-    return BerkeleyBatch::VerifyDatabaseFile(wallet_path, errorStr);\n-}\n-\n bool WalletBatch::WriteDestData(const std::string &address, const std::string &key, const std::string &value)\n {\n     return WriteIC(std::make_pair(DBKeys::DESTDATA, std::make_pair(address, key)), value);"
      },
      {
        "sha": "8a45d81456f45fb8d718d2781a3e25779078b8a9",
        "filename": "src/wallet/wallettool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 6,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/wallettool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/src/wallet/wallettool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallettool.cpp?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -112,7 +112,7 @@ static bool SalvageWallet(const fs::path& path)\n     // Initialize the environment before recovery\n     bilingual_str error_string;\n     try {\n-        WalletBatch::VerifyEnvironment(path, error_string);\n+        database->Verify(error_string);\n     } catch (const fs::filesystem_error& e) {\n         error_string = Untranslated(strprintf(\"Error loading wallet. %s\", fsbridge::get_filesystem_error_message(e)));\n     }\n@@ -140,11 +140,6 @@ bool ExecuteWalletToolFunc(const std::string& command, const std::string& name)\n             tfm::format(std::cerr, \"Error: no wallet file at %s\\n\", name);\n             return false;\n         }\n-        bilingual_str error;\n-        if (!WalletBatch::VerifyEnvironment(path, error)) {\n-            tfm::format(std::cerr, \"%s\\nError loading %s. Is wallet being used by other process?\\n\", error.original, name);\n-            return false;\n-        }\n \n         if (command == \"info\") {\n             std::shared_ptr<CWallet> wallet_instance = LoadWallet(name, path);"
      },
      {
        "sha": "18f0beb5981ca7c59ce81e468c70ff7b4fa55134",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "patch": "@@ -71,8 +71,7 @@ def test_invalid_tool_commands_and_args(self):\n         self.assert_raises_tool_error('Error: two methods provided (info and create). Only one method should be provided.', 'info', 'create')\n         self.assert_raises_tool_error('Error parsing command line arguments: Invalid parameter -foo', '-foo')\n         self.assert_raises_tool_error(\n-            'Error initializing wallet database environment \"{}\"!\\nError loading wallet.dat. Is wallet being used by other process?'\n-            .format(os.path.join(self.nodes[0].datadir, self.chain, 'wallets')),\n+            'Error loading wallet.dat. Is wallet being used by another process?',\n             '-wallet=wallet.dat',\n             'info',\n         )"
      }
    ]
  },
  {
    "sha": "91d109156d63ff81cda534bd7bec8369af0027dd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5MWQxMDkxNTZkNjNmZjgxY2RhNTM0YmQ3YmVjODM2OWFmMDAyN2Rk",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-15T18:39:26Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-01T16:32:06Z"
      },
      "message": "walletdb: Move PeriodicFlush into WalletDatabase\n\nMake PeriodicFlush a non-static member of WalletDatabase instead of\nWalletBatch.",
      "tree": {
        "sha": "288a93c357ad1dc8267c7597d3166e9d7cb33149",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/288a93c357ad1dc8267c7597d3166e9d7cb33149"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/91d109156d63ff81cda534bd7bec8369af0027dd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91d109156d63ff81cda534bd7bec8369af0027dd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/91d109156d63ff81cda534bd7bec8369af0027dd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91d109156d63ff81cda534bd7bec8369af0027dd/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8f1bcf8b7b6e47c05f2e43dd98ec3505b888d8b3"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 6,
      "deletions": 9
    },
    "files": [
      {
        "sha": "4856f4bff82695ab430589620b6dcd1d4158a260",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=91d109156d63ff81cda534bd7bec8369af0027dd",
        "patch": "@@ -614,14 +614,12 @@ void BerkeleyEnvironment::Flush(bool fShutdown)\n     }\n }\n \n-bool BerkeleyBatch::PeriodicFlush(BerkeleyDatabase& database)\n+bool BerkeleyDatabase::PeriodicFlush()\n {\n-    if (database.IsDummy()) {\n+    if (IsDummy()) {\n         return true;\n     }\n     bool ret = false;\n-    BerkeleyEnvironment *env = database.env.get();\n-    const std::string& strFile = database.strFile;\n     TRY_LOCK(cs_db, lockDb);\n     if (lockDb)\n     {"
      },
      {
        "sha": "d15efc810fab69ace1f855b1a70c3cd440b61af1",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 3,
        "deletions": 4,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=91d109156d63ff81cda534bd7bec8369af0027dd",
        "patch": "@@ -131,6 +131,9 @@ class BerkeleyDatabase\n     /** Make sure all changes are flushed to disk.\n      */\n     void Flush(bool shutdown);\n+    /* flush the wallet passively (TRY_LOCK)\n+       ideal to be called periodically */\n+    bool PeriodicFlush();\n \n     void IncrementUpdateCounter();\n \n@@ -215,10 +218,6 @@ class BerkeleyBatch\n     void Flush();\n     void Close();\n \n-    /* flush the wallet passively (TRY_LOCK)\n-       ideal to be called periodically */\n-    static bool PeriodicFlush(BerkeleyDatabase& database);\n-\n     template <typename K, typename T>\n     bool Read(const K& key, T& value)\n     {"
      },
      {
        "sha": "0879f2d66ebe241720e7b5d4bbb69f21c54a5e98",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/91d109156d63ff81cda534bd7bec8369af0027dd/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=91d109156d63ff81cda534bd7bec8369af0027dd",
        "patch": "@@ -964,7 +964,7 @@ void MaybeCompactWalletDB()\n         }\n \n         if (dbh.nLastFlushed != nUpdateCounter && GetTime() - dbh.nLastWalletUpdate >= 2) {\n-            if (BerkeleyBatch::PeriodicFlush(dbh)) {\n+            if (dbh.PeriodicFlush()) {\n                 dbh.nLastFlushed = nUpdateCounter;\n             }\n         }"
      }
    ]
  },
  {
    "sha": "d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkOGU5Y2E2NmQxMTlkODBhY2ZiMmJiM2M4OTQwYzM4NmNlMGZjMjI2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-06-15T19:31:02Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-07-01T16:32:11Z"
      },
      "message": "walletdb: Move Rewrite into BerkeleyDatabase\n\nMake Rewrite actually a member of BerkeleyDatabase instead of a static\nfunction in BerkeleyBatch",
      "tree": {
        "sha": "fa63b185eb471fc7725da66db2ab3c4fd2afe7da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa63b185eb471fc7725da66db2ab3c4fd2afe7da"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91d109156d63ff81cda534bd7bec8369af0027dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91d109156d63ff81cda534bd7bec8369af0027dd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91d109156d63ff81cda534bd7bec8369af0027dd"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 3,
      "deletions": 12
    },
    "files": [
      {
        "sha": "bfd2b9b45ea137a5beaa56c0d9acb9fef348170e",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 10,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
        "patch": "@@ -484,13 +484,11 @@ void BerkeleyEnvironment::ReloadDbEnv()\n     Open(true);\n }\n \n-bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n+bool BerkeleyDatabase::Rewrite(const char* pszSkip)\n {\n-    if (database.IsDummy()) {\n+    if (IsDummy()) {\n         return true;\n     }\n-    BerkeleyEnvironment *env = database.env.get();\n-    const std::string& strFile = database.strFile;\n     while (true) {\n         {\n             LOCK(cs_db);\n@@ -504,7 +502,7 @@ bool BerkeleyBatch::Rewrite(BerkeleyDatabase& database, const char* pszSkip)\n                 LogPrintf(\"BerkeleyBatch::Rewrite: Rewriting %s...\\n\", strFile);\n                 std::string strFileRes = strFile + \".rewrite\";\n                 { // surround usage of db with extra {}\n-                    BerkeleyBatch db(database, \"r\");\n+                    BerkeleyBatch db(*this, \"r\");\n                     std::unique_ptr<Db> pdbCopy = MakeUnique<Db>(env->dbenv.get(), 0);\n \n                     int ret = pdbCopy->open(nullptr,               // Txn pointer\n@@ -654,11 +652,6 @@ bool BerkeleyDatabase::PeriodicFlush()\n     return ret;\n }\n \n-bool BerkeleyDatabase::Rewrite(const char* pszSkip)\n-{\n-    return BerkeleyBatch::Rewrite(*this, pszSkip);\n-}\n-\n bool BerkeleyDatabase::Backup(const std::string& strDest) const\n {\n     if (IsDummy()) {"
      },
      {
        "sha": "73169abde4dc37d627b18c5e21190f5572f717c1",
        "filename": "src/wallet/bdb.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226/src/wallet/bdb.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d8e9ca66d119d80acfb2bb3c8940c386ce0fc226/src/wallet/bdb.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.h?ref=d8e9ca66d119d80acfb2bb3c8940c386ce0fc226",
        "patch": "@@ -287,8 +287,6 @@ class BerkeleyBatch\n     bool TxnBegin();\n     bool TxnCommit();\n     bool TxnAbort();\n-\n-    bool static Rewrite(BerkeleyDatabase& database, const char* pszSkip = nullptr);\n };\n \n std::string BerkeleyDatabaseVersion();"
      }
    ]
  }
]