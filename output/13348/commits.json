[
  {
    "sha": "34d51f844b92efbd4a6d3f173e4b70732e7aa027",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGQ1MWY4NDRiOTJlZmJkNGE2ZDNmMTczZTRiNzA3MzJlN2FhMDI3",
    "commit": {
      "author": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-05-31T06:18:06Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-05-31T06:18:26Z"
      },
      "message": "Standard template for CHECKMULTISIG with 17~20 keys",
      "tree": {
        "sha": "de442a4de8e663edefcafe6339d4e6a6c35f826a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de442a4de8e663edefcafe6339d4e6a6c35f826a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34d51f844b92efbd4a6d3f173e4b70732e7aa027",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34d51f844b92efbd4a6d3f173e4b70732e7aa027",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34d51f844b92efbd4a6d3f173e4b70732e7aa027",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34d51f844b92efbd4a6d3f173e4b70732e7aa027/comments",
    "author": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "472fe8a2ce9f08f0311e4a04eef996eba19ff985",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/472fe8a2ce9f08f0311e4a04eef996eba19ff985",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/472fe8a2ce9f08f0311e4a04eef996eba19ff985"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 16,
      "deletions": 9
    },
    "files": [
      {
        "sha": "4e284f10b85d8c346d2c4cf44d6311678fb1fdee",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 9,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34d51f844b92efbd4a6d3f173e4b70732e7aa027/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34d51f844b92efbd4a6d3f173e4b70732e7aa027/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=34d51f844b92efbd4a6d3f173e4b70732e7aa027",
        "patch": "@@ -57,10 +57,18 @@ static bool MatchPayToPubkeyHash(const CScript& script, valtype& pubkeyhash)\n     return false;\n }\n \n-/** Test for \"small positive integer\" script opcodes - OP_1 through OP_16. */\n-static constexpr bool IsSmallInteger(opcodetype opcode)\n+/** Test for \"small positive integer\" script opcodes - OP_1 through OP_16, or a single byte push for 17 to 20. */\n+static bool IsSmallInteger(const opcodetype& opcode, const valtype& data, unsigned int& value)\n {\n-    return opcode >= OP_1 && opcode <= OP_16;\n+    if (opcode >= OP_1 && opcode <= OP_16) {\n+        value = CScript::DecodeOP_N(opcode);\n+        return true;\n+    }\n+    if (opcode == 1 && data[0] >= 17 && data[0] <= MAX_PUBKEYS_PER_MULTISIG) {\n+        value = data[0];\n+        return true;\n+    }\n+    return false;\n }\n \n static bool MatchMultisig(const CScript& script, unsigned int& required, std::vector<valtype>& pubkeys)\n@@ -70,13 +78,12 @@ static bool MatchMultisig(const CScript& script, unsigned int& required, std::ve\n     CScript::const_iterator it = script.begin();\n     if (script.size() < 1 || script.back() != OP_CHECKMULTISIG) return false;\n \n-    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode)) return false;\n-    required = CScript::DecodeOP_N(opcode);\n+    if (!script.GetOp(it, opcode, data) || !IsSmallInteger(opcode, data, required)) return false;\n     while (script.GetOp(it, opcode, data) && CPubKey::ValidSize(data)) {\n         pubkeys.emplace_back(std::move(data));\n     }\n-    if (!IsSmallInteger(opcode)) return false;\n-    unsigned int keys = CScript::DecodeOP_N(opcode);\n+    unsigned int keys;\n+    if (!IsSmallInteger(opcode, data, keys)) return false;\n     if (pubkeys.size() != keys || keys < required) return false;\n     return (it + 1 == script.end());\n }\n@@ -144,9 +151,9 @@ bool Solver(const CScript& scriptPubKey, txnouttype& typeRet, std::vector<std::v\n     std::vector<std::vector<unsigned char>> keys;\n     if (MatchMultisig(scriptPubKey, required, keys)) {\n         typeRet = TX_MULTISIG;\n-        vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..16\n+        vSolutionsRet.push_back({static_cast<unsigned char>(required)}); // safe as required is in range 1..20\n         vSolutionsRet.insert(vSolutionsRet.end(), keys.begin(), keys.end());\n-        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..16\n+        vSolutionsRet.push_back({static_cast<unsigned char>(keys.size())}); // safe as size is in range 1..20\n         return true;\n     }\n "
      }
    ]
  },
  {
    "sha": "159e5aac9123e73a2823b408ae6a486de0aa97e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNTllNWFhYzkxMjNlNzNhMjgyM2I0MDhhZTZhNDg2ZGUwYWE5N2Uy",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2018-05-30T15:59:29Z"
      },
      "committer": {
        "name": "Johnson Lau",
        "email": "jl2012@xbt.hk",
        "date": "2018-05-31T06:18:26Z"
      },
      "message": "Test: Standard template for CHECKMULTISIG with 17~20 keys",
      "tree": {
        "sha": "318b628f271b3046432f6d437391d59023568803",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/318b628f271b3046432f6d437391d59023568803"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/159e5aac9123e73a2823b408ae6a486de0aa97e2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/159e5aac9123e73a2823b408ae6a486de0aa97e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/159e5aac9123e73a2823b408ae6a486de0aa97e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/159e5aac9123e73a2823b408ae6a486de0aa97e2/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jl2012",
      "id": 8403418,
      "node_id": "MDQ6VXNlcjg0MDM0MTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8403418?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jl2012",
      "html_url": "https://github.com/jl2012",
      "followers_url": "https://api.github.com/users/jl2012/followers",
      "following_url": "https://api.github.com/users/jl2012/following{/other_user}",
      "gists_url": "https://api.github.com/users/jl2012/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jl2012/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jl2012/subscriptions",
      "organizations_url": "https://api.github.com/users/jl2012/orgs",
      "repos_url": "https://api.github.com/users/jl2012/repos",
      "events_url": "https://api.github.com/users/jl2012/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jl2012/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "34d51f844b92efbd4a6d3f173e4b70732e7aa027",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34d51f844b92efbd4a6d3f173e4b70732e7aa027",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/34d51f844b92efbd4a6d3f173e4b70732e7aa027"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 46,
      "deletions": 3
    },
    "files": [
      {
        "sha": "2b90eb5c0fbc6ccc33a07485f65541945c1a17b2",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 46,
        "deletions": 3,
        "changes": 49,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/159e5aac9123e73a2823b408ae6a486de0aa97e2/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/159e5aac9123e73a2823b408ae6a486de0aa97e2/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=159e5aac9123e73a2823b408ae6a486de0aa97e2",
        "patch": "@@ -17,9 +17,10 @@ BOOST_FIXTURE_TEST_SUITE(script_standard_tests, BasicTestingSetup)\n \n BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n {\n-    CKey keys[3];\n-    CPubKey pubkeys[3];\n-    for (int i = 0; i < 3; i++) {\n+    const static unsigned int NUM_KEYS = MAX_PUBKEYS_PER_MULTISIG + 1;\n+    CKey keys[NUM_KEYS];\n+    CPubKey pubkeys[NUM_KEYS];\n+    for (unsigned int i = 0; i < NUM_KEYS; i++) {\n         keys[i].MakeNewKey(true);\n         pubkeys[i] = keys[i].GetPubKey();\n     }\n@@ -82,6 +83,48 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n     BOOST_CHECK(solutions[3] == ToByteVector(pubkeys[2]));\n     BOOST_CHECK(solutions[4] == std::vector<unsigned char>({3}));\n \n+    // 17-of-20 TX_MULTISIG, with 1-byte varint pushes for each number\n+    s.clear();\n+    s << CScriptNum(17);\n+    for (unsigned int i = 0; i < MAX_PUBKEYS_PER_MULTISIG; i++) {\n+        s << ToByteVector(pubkeys[i]);\n+    }\n+    s << CScriptNum(MAX_PUBKEYS_PER_MULTISIG) << OP_CHECKMULTISIG;\n+\n+    BOOST_CHECK(Solver(s, whichType, solutions));\n+    BOOST_CHECK_EQUAL(whichType, TX_MULTISIG);\n+    BOOST_CHECK_EQUAL(solutions.size(), 22);\n+    BOOST_CHECK(solutions[0] == std::vector<unsigned char>({17}));\n+    for (unsigned int i = 1; i < MAX_PUBKEYS_PER_MULTISIG-1; i++) {\n+         BOOST_CHECK(solutions[i] == ToByteVector(pubkeys[i-1]));\n+    }\n+    BOOST_CHECK(solutions[21] == std::vector<unsigned char>({20}));\n+\n+    // 16-of-20 TX_MULTISIG, with non-minimal encoding of the first number\n+    // which should fail\n+    s.clear();\n+    s << CScriptNum(16);\n+    for (unsigned int i = 0; i < MAX_PUBKEYS_PER_MULTISIG; i++) {\n+        s << ToByteVector(pubkeys[i]);\n+    }\n+    s << CScriptNum(MAX_PUBKEYS_PER_MULTISIG) << OP_CHECKMULTISIG;\n+\n+    BOOST_CHECK(!Solver(s, whichType, solutions));\n+    BOOST_CHECK_EQUAL(whichType, TX_NONSTANDARD);\n+    BOOST_CHECK_EQUAL(solutions.size(), 0);\n+\n+    // 17-of-21 TX_MULTISIG which should fail\n+    s.clear();\n+    s << CScriptNum(17);\n+    for (unsigned int i = 0; i < NUM_KEYS; i++) {\n+        s << ToByteVector(pubkeys[i]);\n+    }\n+    s << CScriptNum(NUM_KEYS) << OP_CHECKMULTISIG;\n+\n+    BOOST_CHECK(!Solver(s, whichType, solutions));\n+    BOOST_CHECK_EQUAL(whichType, TX_NONSTANDARD);\n+    BOOST_CHECK_EQUAL(solutions.size(), 0);\n+\n     // TX_NULL_DATA\n     s.clear();\n     s << OP_RETURN <<"
      }
    ]
  }
]