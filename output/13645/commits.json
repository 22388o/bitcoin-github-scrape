[
  {
    "sha": "a0b604c1661811c31c78bfa8ab029c1fc88472a9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMGI2MDRjMTY2MTgxMWMzMWM3OGJmYThhYjAyOWMxZmM4ODQ3MmE5",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T15:52:02Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-07-12T17:08:35Z"
      },
      "message": "[tests] skip rpc_zmq functional test when python3 zmq lib is not present\n\nAlso refactors zmq-related test skipping logic into distinct functions.",
      "tree": {
        "sha": "25a226224b1aadb30b0674fa7bc72d8f232ca5b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/25a226224b1aadb30b0674fa7bc72d8f232ca5b7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a0b604c1661811c31c78bfa8ab029c1fc88472a9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0b604c1661811c31c78bfa8ab029c1fc88472a9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a0b604c1661811c31c78bfa8ab029c1fc88472a9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a0b604c1661811c31c78bfa8ab029c1fc88472a9/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dcb154e5aad80e49ff41a7851604ac46f38cb167",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcb154e5aad80e49ff41a7851604ac46f38cb167",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dcb154e5aad80e49ff41a7851604ac46f38cb167"
      }
    ],
    "stats": {
      "total": 41,
      "additions": 26,
      "deletions": 15
    },
    "files": [
      {
        "sha": "def71c5f0f6de23c522dfae6c875bdf9e47a3d8a",
        "filename": "test/functional/interface_zmq.py",
        "status": "modified",
        "additions": 5,
        "deletions": 14,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/interface_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/interface_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/interface_zmq.py?ref=a0b604c1661811c31c78bfa8ab029c1fc88472a9",
        "patch": "@@ -3,10 +3,10 @@\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test the ZMQ notification interface.\"\"\"\n-import configparser\n import struct\n \n-from test_framework.test_framework import BitcoinTestFramework, SkipTest\n+from test_framework.test_framework import (\n+    BitcoinTestFramework, skip_if_no_bitcoind_zmq, skip_if_no_py3_zmq)\n from test_framework.mininode import CTransaction\n from test_framework.util import (assert_equal,\n                                  bytes_to_hex_str,\n@@ -38,18 +38,9 @@ def set_test_params(self):\n         self.num_nodes = 2\n \n     def setup_nodes(self):\n-        # Try to import python3-zmq. Skip this test if the import fails.\n-        try:\n-            import zmq\n-        except ImportError:\n-            raise SkipTest(\"python3-zmq module not available.\")\n-\n-        # Check that bitcoin has been built with ZMQ enabled.\n-        config = configparser.ConfigParser()\n-        config.read_file(open(self.options.configfile))\n-\n-        if not config[\"components\"].getboolean(\"ENABLE_ZMQ\"):\n-            raise SkipTest(\"bitcoind has not been built with zmq enabled.\")\n+        skip_if_no_py3_zmq()\n+        skip_if_no_bitcoind_zmq(self)\n+        import zmq\n \n         # Initialize ZMQ context and socket.\n         # All messages are received in the same socket which means"
      },
      {
        "sha": "6dbc726d5ee6df8e557630c5b7407168c6666e7d",
        "filename": "test/functional/rpc_zmq.py",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/rpc_zmq.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/rpc_zmq.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_zmq.py?ref=a0b604c1661811c31c78bfa8ab029c1fc88472a9",
        "patch": "@@ -4,7 +4,8 @@\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \"\"\"Test for the ZMQ RPC methods.\"\"\"\n \n-from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.test_framework import (\n+    BitcoinTestFramework, skip_if_no_py3_zmq, skip_if_no_bitcoind_zmq)\n from test_framework.util import assert_equal\n \n \n@@ -17,6 +18,8 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n \n     def run_test(self):\n+        skip_if_no_py3_zmq()\n+        skip_if_no_bitcoind_zmq(self)\n         self._test_getzmqnotifications()\n \n     def _test_getzmqnotifications(self):"
      },
      {
        "sha": "c2fb2077ac5e8adb92e545f441a7e7457b4f7fdf",
        "filename": "test/functional/test_framework/test_framework.py",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/test_framework/test_framework.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a0b604c1661811c31c78bfa8ab029c1fc88472a9/test/functional/test_framework/test_framework.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/test_framework.py?ref=a0b604c1661811c31c78bfa8ab029c1fc88472a9",
        "patch": "@@ -475,3 +475,20 @@ class SkipTest(Exception):\n     \"\"\"This exception is raised to skip a test\"\"\"\n     def __init__(self, message):\n         self.message = message\n+\n+\n+def skip_if_no_py3_zmq():\n+    \"\"\"Attempt to import the zmq package and skip the test if the import fails.\"\"\"\n+    try:\n+        import zmq  # noqa\n+    except ImportError:\n+        raise SkipTest(\"python3-zmq module not available.\")\n+\n+\n+def skip_if_no_bitcoind_zmq(test_instance):\n+    \"\"\"Skip the running test if bitcoind has not been compiled with zmq support.\"\"\"\n+    config = configparser.ConfigParser()\n+    config.read_file(open(test_instance.options.configfile))\n+\n+    if not config[\"components\"].getboolean(\"ENABLE_ZMQ\"):\n+        raise SkipTest(\"bitcoind has not been built with zmq enabled.\")"
      }
    ]
  }
]