[
  {
    "sha": "a73aab7cd8343d795b1a7408bd71f522262ac76e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzNhYWI3Y2Q4MzQzZDc5NWIxYTc0MDhiZDcxZjUyMjI2MmFjNzZl",
    "commit": {
      "author": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T20:40:51Z"
      },
      "committer": {
        "name": "Alin Rus",
        "email": "alin@fsck.ro",
        "date": "2018-01-11T20:40:51Z"
      },
      "message": "Use the character based overload for std::string::find.\n\nstd::string::find has a character based overload as can be seen here\n(4th oveload): http://www.cplusplus.com/reference/string/string/find/\n\nUse that instead of constantly allocating temporary strings.",
      "tree": {
        "sha": "3e269a8f345cdd4ae3de43b277a11255295aa2ca",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3e269a8f345cdd4ae3de43b277a11255295aa2ca"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a73aab7cd8343d795b1a7408bd71f522262ac76e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a73aab7cd8343d795b1a7408bd71f522262ac76e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a73aab7cd8343d795b1a7408bd71f522262ac76e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a73aab7cd8343d795b1a7408bd71f522262ac76e/comments",
    "author": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "flipbitsnotburgers",
      "id": 48412190,
      "node_id": "MDQ6VXNlcjQ4NDEyMTkw",
      "avatar_url": "https://avatars.githubusercontent.com/u/48412190?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flipbitsnotburgers",
      "html_url": "https://github.com/flipbitsnotburgers",
      "followers_url": "https://api.github.com/users/flipbitsnotburgers/followers",
      "following_url": "https://api.github.com/users/flipbitsnotburgers/following{/other_user}",
      "gists_url": "https://api.github.com/users/flipbitsnotburgers/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flipbitsnotburgers/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flipbitsnotburgers/subscriptions",
      "organizations_url": "https://api.github.com/users/flipbitsnotburgers/orgs",
      "repos_url": "https://api.github.com/users/flipbitsnotburgers/repos",
      "events_url": "https://api.github.com/users/flipbitsnotburgers/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flipbitsnotburgers/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1d2eaba300bc13c556e3cb05420dcc91ae12e1d0"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 15,
      "deletions": 15
    },
    "files": [
      {
        "sha": "f1cf7c9d2d872a70ff83f95bbd54fb263b0bfa30",
        "filename": "src/bitcoin-tx.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/bitcoin-tx.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/bitcoin-tx.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoin-tx.cpp?ref=a73aab7cd8343d795b1a7408bd71f522262ac76e",
        "patch": "@@ -305,8 +305,8 @@ static void MutateTxAddOutPubKey(CMutableTransaction& tx, const std::string& str\n     bool bScriptHash = false;\n     if (vStrInputParts.size() == 3) {\n         std::string flags = vStrInputParts[2];\n-        bSegWit = (flags.find(\"W\") != std::string::npos);\n-        bScriptHash = (flags.find(\"S\") != std::string::npos);\n+        bSegWit = (flags.find('W') != std::string::npos);\n+        bScriptHash = (flags.find('S') != std::string::npos);\n     }\n \n     if (bSegWit) {\n@@ -367,8 +367,8 @@ static void MutateTxAddOutMultiSig(CMutableTransaction& tx, const std::string& s\n     bool bScriptHash = false;\n     if (vStrInputParts.size() == numkeys + 4) {\n         std::string flags = vStrInputParts.back();\n-        bSegWit = (flags.find(\"W\") != std::string::npos);\n-        bScriptHash = (flags.find(\"S\") != std::string::npos);\n+        bSegWit = (flags.find('W') != std::string::npos);\n+        bScriptHash = (flags.find('S') != std::string::npos);\n     }\n     else if (vStrInputParts.size() > numkeys + 4) {\n         // Validate that there were no more parameters passed\n@@ -447,8 +447,8 @@ static void MutateTxAddOutScript(CMutableTransaction& tx, const std::string& str\n     bool bScriptHash = false;\n     if (vStrInputParts.size() == 3) {\n         std::string flags = vStrInputParts.back();\n-        bSegWit = (flags.find(\"W\") != std::string::npos);\n-        bScriptHash = (flags.find(\"S\") != std::string::npos);\n+        bSegWit = (flags.find('W') != std::string::npos);\n+        bScriptHash = (flags.find('S') != std::string::npos);\n     }\n \n     if (scriptPubKey.size() > MAX_SCRIPT_SIZE) {"
      },
      {
        "sha": "5e9e419744105494cc536bbafae0a03b0e61a542",
        "filename": "src/httprpc.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/httprpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/httprpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httprpc.cpp?ref=a73aab7cd8343d795b1a7408bd71f522262ac76e",
        "patch": "@@ -85,11 +85,11 @@ static void JSONErrorReply(HTTPRequest* req, const UniValue& objError, const Uni\n //entries from config file.\n static bool multiUserAuthorized(std::string strUserPass)\n {    \n-    if (strUserPass.find(\":\") == std::string::npos) {\n+    if (strUserPass.find(':') == std::string::npos) {\n         return false;\n     }\n-    std::string strUser = strUserPass.substr(0, strUserPass.find(\":\"));\n-    std::string strPass = strUserPass.substr(strUserPass.find(\":\") + 1);\n+    std::string strUser = strUserPass.substr(0, strUserPass.find(':'));\n+    std::string strPass = strUserPass.substr(strUserPass.find(':') + 1);\n \n     for (const std::string& strRPCAuth : gArgs.GetArgs(\"-rpcauth\")) {\n         //Search for multi-user login/pass \"rpcauth\" from config\n@@ -132,8 +132,8 @@ static bool RPCAuthorized(const std::string& strAuth, std::string& strAuthUserna\n     boost::trim(strUserPass64);\n     std::string strUserPass = DecodeBase64(strUserPass64);\n \n-    if (strUserPass.find(\":\") != std::string::npos)\n-        strAuthUsernameOut = strUserPass.substr(0, strUserPass.find(\":\"));\n+    if (strUserPass.find(':') != std::string::npos)\n+        strAuthUsernameOut = strUserPass.substr(0, strUserPass.find(':'));\n \n     //Check if authorized under single-user field\n     if (TimingResistantEqual(strUserPass, strRPCUserColonPass)) {"
      },
      {
        "sha": "30e481171fb79a620c8af907a862674a7da46485",
        "filename": "src/rest.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rest.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rest.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rest.cpp?ref=a73aab7cd8343d795b1a7408bd71f522262ac76e",
        "patch": "@@ -423,8 +423,8 @@ static bool rest_getutxos(HTTPRequest* req, const std::string& strURIPart)\n         {\n             uint256 txid;\n             int32_t nOutput;\n-            std::string strTxid = uriParts[i].substr(0, uriParts[i].find(\"-\"));\n-            std::string strOutput = uriParts[i].substr(uriParts[i].find(\"-\")+1);\n+            std::string strTxid = uriParts[i].substr(0, uriParts[i].find('-'));\n+            std::string strOutput = uriParts[i].substr(uriParts[i].find('-')+1);\n \n             if (!ParseInt32(strOutput, &nOutput) || !IsHex(strTxid))\n                 return RESTERR(req, HTTP_BAD_REQUEST, \"Parse error\");"
      },
      {
        "sha": "b88c1bccd58cdaded1320f9213aeb562c659d57d",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=a73aab7cd8343d795b1a7408bd71f522262ac76e",
        "patch": "@@ -213,7 +213,7 @@ UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<s\n     UniValue params(UniValue::VOBJ);\n \n     for (const std::string &s: strParams) {\n-        size_t pos = s.find(\"=\");\n+        size_t pos = s.find('=');\n         if (pos == std::string::npos) {\n             throw(std::runtime_error(\"No '=' in named argument '\"+s+\"', this needs to be present for every argument (even if it is empty)\"));\n         }"
      },
      {
        "sha": "59b376c59a6fc135c9971f5bf09c88ea5add96d0",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a73aab7cd8343d795b1a7408bd71f522262ac76e/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=a73aab7cd8343d795b1a7408bd71f522262ac76e",
        "patch": "@@ -516,7 +516,7 @@ UniValue setban(const JSONRPCRequest& request)\n     CNetAddr netAddr;\n     bool isSubnet = false;\n \n-    if (request.params[0].get_str().find(\"/\") != std::string::npos)\n+    if (request.params[0].get_str().find('/') != std::string::npos)\n         isSubnet = true;\n \n     if (!isSubnet) {"
      }
    ]
  }
]