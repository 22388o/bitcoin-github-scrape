petertodd,2015-06-22T03:40:25Z,Rebased now that Travis is fixed.\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-113994564,113994564,
jtimon,2015-07-09T10:07:55Z,Trivial-code-change ACK.\nI believe @maaku will like this too.\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-119897243,119897243,
btcdrak,2015-07-09T10:18:46Z,It is time. ACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-119899792,119899792,
jgarzik,2015-07-09T11:35:06Z,concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-119922205,119922205,
sipa,2015-07-09T13:41:06Z,Untested ACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-119969828,119969828,
petertodd,2015-07-11T13:21:01Z,@jtimon FWIW this isn't actually a trivial change - the possible relay issue with txs right when a new block is broadcast is real.\n\nIf I could get one more person confirming my logic/testing showing that it _isn't_ a problem that'd be great.\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-120616401,120616401,
jtimon,2015-07-11T21:58:05Z,"@petertodd But the change in the code is trivial (1 line apart from the documentation) and by that I mean that I trust my review enough that I don't think I need to test this. If I felt I need to test it I would have said ut ACK (or test it and say tested ACK). If you prefer, ut ACK.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-120665050,120665050,
petertodd,2015-07-17T05:46:07Z,"@jtimon Well, to be clear, imagine if this ""trivial"" change had a +1 in it, or if I hadn't gone to the trouble of fixing the (multiple!) off-by-one errors we've seen re: nLockTime in #6183 and #2342 - in Bitcoin it's common for seemingly trivial changes to actually have remarkably far-reaching effects. After all, if this really was a trivial change, I wouldn't have written a fifteen line git commi",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-122182492,122182492,
jtimon,2015-07-17T07:45:58Z,"I'm not saying it is trivial to understand or make. I'm not disregarding\nyour contribution here. All I'm saying is that even though I haven't tested\nit, the change was trivial for me to review. But for the shake of not\nwasting each other's time, I take it back: there's nothing trivial about\nthis PR but it still gets my ut ACK. Happy now?\nOn Jul 17, 2015 7:46 AM, ""Peter Todd"" notifications@git",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-122206640,122206640,
petertodd,2015-07-17T07:56:59Z,"@jtimon Ah! Sorry, trivial to review is quite different than what I thought you meant. :) Thanks for clearing that up.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-122209322,122209322,
dcousens,2015-08-09T06:11:13Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-129127815,129127815,
MarcoFalke,2015-08-09T16:53:44Z,"ACK. I can confirm that older versions (like v0.9.5) have issues with such transactions, just as expected: My bitcoin-qt-v0.9.5 shows them in the transaction tab but they don't appear in `listunspent 0`. Let's consider this a good thing, motivating people to update their nodes.\n\nAfter applying this commit, `listunspent 0` shows the transaction. I did not test the propagation issue, though.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-129216631,129216631,
petertodd,2015-08-18T22:16:05Z,@MarcoFalke Thanks!\n\n@laanwj Be good to get this merged and done with...\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-132372208,132372208,
TheBlueMatt,2015-08-24T01:52:13Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-133986968,133986968,
sdaftuar,2015-09-08T14:43:28Z,Please see https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138587004; perhaps we should consider improving the way we handle transactions that are invalid in the mempool during reorgs prior to merging this?\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-138588251,138588251,
dcousens,2015-09-08T15:01:53Z,"> Please see #6595 (comment); perhaps we should consider improving the way we handle transactions that are invalid in the mempool during reorgs prior to merging this?\n\n@sdaftuar I don't think that particular issue should block this from being merged.\nMaybe that particular issue _should_ be resolved before a release,  but,  I don't see it as a blocker to this PR IMHO.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-138593508,138593508,
TheBlueMatt,2015-09-09T00:54:28Z,"Yea, I agree with @sdaftuar...#6595 kinda breaks this...it should be easy to fix though (https://github.com/bitcoin/bitcoin/pull/6595#issuecomment-138742155)\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-138742298,138742298,
petertodd,2015-09-09T20:32:09Z,Looks like a reasonable concern; let's leave this unmerged until #6595 is resolved.\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-139037480,139037480,
TheBlueMatt,2015-09-09T23:37:42Z,"Should be addressed by #6656\n\nOn 09/09/15 20:32, Peter Todd wrote:\n\n> Looks like a reasonable concern; let's leave this unmerged until #6595\n> https://github.com/bitcoin/bitcoin/pull/6595 is resolved.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-139037480.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-139073069,139073069,
gmaxwell,2015-11-22T22:54:13Z,@petertodd Where are we on this?\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-158816350,158816350,
btcdrak,2015-11-22T22:56:28Z,looks like it's pending #6915\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-158816502,158816502,
jtimon,2015-12-01T19:29:11Z,ping\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161070629,161070629,
gmaxwell,2015-12-01T20:12:49Z,Can someone remind me why we're not also doing this for createrawtransaction?\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161082258,161082258,
petertodd,2015-12-02T09:01:19Z,@gmaxwell Basically to avoid breaking things. Rather start with just wallet txs until this stuff is more well-known.\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161226757,161226757,
petertodd,2015-12-02T10:36:52Z,"Now that #6915 has been merged, which fixes the invalid txs in mempool issue, I feel comfortable merging this as well. Specifically, #6915 removes txs from the mempool after the reorg is finished, which means txs with nLockTime-by-height right at the edge of acceptance will no longer be removed during the reorg so long as the blockheight after the reorg doesn't go down. (an incredibly rare event!)",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161253311,161253311,
gmaxwell,2015-12-02T12:10:05Z,ACK with nit;  (sorry found the typo when I was about to merge.)\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161273392,161273392,
laanwj,2015-12-02T12:39:32Z,"> Can someone remind me why we're not also doing this for createrawtransaction?\n\nRight now, `createrawtransaction` is a pure utility function without any dependencies on the state of the node nor wallet. I think it's nice to keep it that way.\nSince #5936 there is a locktime argument that can be passed manually, fully in the spirit with raw transaction creation.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161279747,161279747,
laanwj,2015-12-02T12:56:36Z,"Going to merge this, typo be damned, can be fixed later.\n",https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161283886,161283886,
btcdrak,2015-12-02T12:57:59Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/6216#issuecomment-161284103,161284103,
