[
  {
    "sha": "db6047d61b742be07442f891e70570b791c585e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYjYwNDdkNjFiNzQyYmUwNzQ0MmY4OTFlNzA1NzBiNzkxYzU4NWUz",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-06-01T19:03:51Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2015-06-22T03:39:49Z"
      },
      "message": "Take the training wheels off anti-fee-sniping\n\nNow that the off-by-one error w/nLockTime txs issue has been fixed by\n87550eef (75a4d512 in the 0.11 branch) we can make the anti-fee-sniping\nprotection create transactions with nLockTime set such that they're only\nvalid in the next block, rather than an earlier block.\n\nThere was also a concern about poor propagation, however testing with\ntransactions with nLockTime = GetAdjustedTime()+1 as a proxy for\nnLockTime propagation, as well as a few transactions sent the moment\nblocks were received, has turned up no detectable issues with\npropagation. If you have a block at a given height you certainly have at\nleast one peer with that block who will accept the transaction. That\npeer will certainly have other peers who will accept it, and soon\nessentially the whole network has the transaction. In particular, if a\nnode recives a transaction that it rejects due to the tx being\nnon-final, it will be accepted again later as it winds its way around\nthe network.",
      "tree": {
        "sha": "b9d75982c3d0137dc0a7a13d171a4fcb35724534",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b9d75982c3d0137dc0a7a13d171a4fcb35724534"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/db6047d61b742be07442f891e70570b791c585e3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGrBAABCACVBQJVh4OHXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDAwNTQyZjllMzVmZWJhZmM2M2FiYTNjZGExMTBlNjdjYzcx\nZGViMWE5ZTdhYjU0OTIvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfuwGQf/YAmNOHzjdm8Cd8Ev1XVnakPw\ncBHIKdYOPpxstEZU8LZrZ7JSU2ZEibFcSc3CudjOzzjP40D4Nf01txILZfnxLfpk\nMIpTmsUuyllNDrmHiBJG/pCXDx8JS2F25iSRrjb2Ymo+vzbw+7UiyBJCKT37B5SS\nyFAFkageunEqyEHsJO4uFv2Ugp1F9HKU0crnOTIJLziPJOlGduVUwKm0CKIBl7Qv\neOQ+3zIZyjpzhno1gZqCPPL85IjvSXXQLDOr93fm66kPFIRrRkhQLd1H1lZ9cToS\n7aoii1lY7HDPdsknV3Hds2IIs0UskvYedmg4/f4i7GcsVo2/mAW7hqUJR0GcNg==\n=C+6q\n-----END PGP SIGNATURE-----",
        "payload": "tree b9d75982c3d0137dc0a7a13d171a4fcb35724534\nparent 247b91449ad7d041c6af5d2abf5660ab00be0fb4\nauthor Peter Todd <pete@petertodd.org> 1433185431 +0200\ncommitter Peter Todd <pete@petertodd.org> 1434944389 -0400\n\nTake the training wheels off anti-fee-sniping\n\nNow that the off-by-one error w/nLockTime txs issue has been fixed by\n87550eef (75a4d512 in the 0.11 branch) we can make the anti-fee-sniping\nprotection create transactions with nLockTime set such that they're only\nvalid in the next block, rather than an earlier block.\n\nThere was also a concern about poor propagation, however testing with\ntransactions with nLockTime = GetAdjustedTime()+1 as a proxy for\nnLockTime propagation, as well as a few transactions sent the moment\nblocks were received, has turned up no detectable issues with\npropagation. If you have a block at a given height you certainly have at\nleast one peer with that block who will accept the transaction. That\npeer will certainly have other peers who will accept it, and soon\nessentially the whole network has the transaction. In particular, if a\nnode recives a transaction that it rejects due to the tx being\nnon-final, it will be accepted again later as it winds its way around\nthe network.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db6047d61b742be07442f891e70570b791c585e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/db6047d61b742be07442f891e70570b791c585e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/db6047d61b742be07442f891e70570b791c585e3/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "247b91449ad7d041c6af5d2abf5660ab00be0fb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/247b91449ad7d041c6af5d2abf5660ab00be0fb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/247b91449ad7d041c6af5d2abf5660ab00be0fb4"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 19,
      "deletions": 9
    },
    "files": [
      {
        "sha": "50d20485de313fc5c070616c2d983ccc16b903bd",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 9,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/db6047d61b742be07442f891e70570b791c585e3/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/db6047d61b742be07442f891e70570b791c585e3/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=db6047d61b742be07442f891e70570b791c585e3",
        "patch": "@@ -1715,15 +1715,25 @@ bool CWallet::CreateTransaction(const vector<CRecipient>& vecSend,\n \n     // Discourage fee sniping.\n     //\n-    // However because of a off-by-one-error in previous versions we need to\n-    // neuter it by setting nLockTime to at least one less than nBestHeight.\n-    // Secondly currently propagation of transactions created for block heights\n-    // corresponding to blocks that were just mined may be iffy - transactions\n-    // aren't re-accepted into the mempool - we additionally neuter the code by\n-    // going ten blocks back. Doesn't yet do anything for sniping, but does act\n-    // to shake out wallet bugs like not showing nLockTime'd transactions at\n-    // all.\n-    txNew.nLockTime = std::max(0, chainActive.Height() - 10);\n+    // For a large miner the value of the transactions in the best block and\n+    // the mempool can exceed the cost of delibrately attempting to mine two\n+    // blocks to orphan the current best block. By setting nLockTime such that\n+    // only the next block can include the transaction, we discourage this\n+    // practice as the height restricted and limited blocksize gives miners\n+    // considering fee sniping fewer options for pulling off this attack.\n+    //\n+    // A simple way to think about this is from the wallet's point of view we\n+    // always want the blockchain to move forward. By setting nLockTime this\n+    // way we're basically making the statement that we only want this\n+    // transaction to appear in the next block; we don't want to potentially\n+    // encourage reorgs by allowing transactions to appear at lower heights\n+    // than the next block in forks of the best chain.\n+    //\n+    // Of course, the subsidy is high enough, and transaction volume low\n+    // enough, that fee sniping isn't a problem yet, but by implementing a fix\n+    // now we ensure code won't be written that makes assumptions about\n+    // nLockTime that preclude a fix later.\n+    txNew.nLockTime = chainActive.Height();\n \n     // Secondly occasionally randomly pick a nLockTime even further back, so\n     // that transactions that are delayed after signing for whatever reason,"
      }
    ]
  }
]