[
  {
    "sha": "3b570559f8d39a5d4cffd01b8091c3133f7750dc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjU3MDU1OWY4ZDM5YTVkNGNmZmQwMWI4MDkxYzMxMzNmNzc1MGRj",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-08T10:09:40Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-10-30T15:02:09Z"
      },
      "message": "re-work -debug switch handling\n\n- re-work -debug help message text\n- make -debug log every debugging information again (even all categories)\n- remove unneeded fDebug checks in front of LogPrint()/qDebug(), as that\n  check is done in LogPrintf() when category is != NULL (true for all\n  LogPrint() calls\n- remove fDebug ONLY in code which is NOT performance-critical\n- harmonize addrman category name\n- deprecate -debugnet usage, should be used via -debug=net and remove the\n  corresponding global",
      "tree": {
        "sha": "1aed798318d5b7f3677492570e8398d14e449a41",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1aed798318d5b7f3677492570e8398d14e449a41"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b570559f8d39a5d4cffd01b8091c3133f7750dc",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b570559f8d39a5d4cffd01b8091c3133f7750dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b570559f8d39a5d4cffd01b8091c3133f7750dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b570559f8d39a5d4cffd01b8091c3133f7750dc/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "42a12f22d6b644fcd879da23f6e56c310eb9985f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42a12f22d6b644fcd879da23f6e56c310eb9985f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42a12f22d6b644fcd879da23f6e56c310eb9985f"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 46,
      "deletions": 32
    },
    "files": [
      {
        "sha": "d703e1091e01b4fda0c7a09478608b5cddcc5988",
        "filename": "src/addrman.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/addrman.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/addrman.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/addrman.h?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -419,7 +419,7 @@ class CAddrMan\n             Check();\n         }\n         if (fRet)\n-            LogPrint(\"addr\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %s from %s: %i tried, %i new\\n\", addr.ToStringIPPort().c_str(), source.ToString().c_str(), nTried, nNew);\n         return fRet;\n     }\n \n@@ -435,7 +435,7 @@ class CAddrMan\n             Check();\n         }\n         if (nAdd)\n-            LogPrint(\"addr\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n+            LogPrint(\"addrman\", \"Added %i addresses from %s: %i tried, %i new\\n\", nAdd, source.ToString().c_str(), nTried, nNew);\n         return nAdd > 0;\n     }\n "
      },
      {
        "sha": "647b8d52ea776218b63a44c63bae1e6d8264febc",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 9,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -215,8 +215,18 @@ std::string HelpMessage(HelpMessageMode hmm)\n #endif\n #endif\n         strUsage += \"  -paytxfee=<amt>        \" + _(\"Fee per KB to add to transactions you send\") + \"\\n\";\n-        strUsage += \"  -debug                 \" + _(\"Output extra debugging information. Implies all other -debug* options\") + \"\\n\";\n-        strUsage += \"  -debugnet              \" + _(\"Output extra network debugging information\") + \"\\n\";\n+        strUsage += \"  -debug=<category>      \" + _(\"Output debugging information (default: 0, supplying <category> is optional)\") + \"\\n\";\n+        strUsage +=                               _(\"If <category> is not supplied, output all debugging information.\") + \"\\n\";\n+        strUsage +=                               _(\"<category> can be:\");\n+        strUsage +=                                 \" addrman, alert, coindb, db, lock, rand, rpc, selectcoins, mempool, net\"; // Don't translate these and qt below\n+    if (hmm == HMM_BITCOIN_QT)\n+    {\n+        strUsage += \", qt.\\n\";\n+    }\n+    else\n+    {\n+        strUsage += \".\\n\";\n+    }\n         strUsage += \"  -logtimestamps         \" + _(\"Prepend debug output with timestamp\") + \"\\n\";\n         strUsage += \"  -shrinkdebugfile       \" + _(\"Shrink debug.log file on client startup (default: 1 when no -debug)\") + \"\\n\";\n         strUsage += \"  -printtoconsole        \" + _(\"Send trace/debug info to console instead of debug.log file\") + \"\\n\";\n@@ -457,7 +467,16 @@ bool AppInit2(boost::thread_group& threadGroup)\n \n     // ********************************************************* Step 3: parameter-to-internal-flags\n \n-    if (mapMultiArgs.count(\"-debug\")) fDebug = true;\n+    fDebug = !mapMultiArgs[\"-debug\"].empty();\n+    // Special-case: if -debug=0/-nodebug is set, turn off debugging messages\n+    const vector<string>& categories = mapMultiArgs[\"-debug\"];\n+    if (GetBoolArg(\"-nodebug\", false) || find(categories.begin(), categories.end(), string(\"0\")) != categories.end())\n+        fDebug = false;\n+\n+    // Check for -debugnet (deprecated)\n+    if (GetBoolArg(\"-debugnet\", false))\n+        InitWarning(_(\"Warning: Deprecated argument -debugnet ignored, use -debug=net\"));\n+\n     fBenchmark = GetBoolArg(\"-benchmark\", false);\n     mempool.fChecks = GetBoolArg(\"-checkmempool\", RegTest());\n     Checkpoints::fEnabled = GetBoolArg(\"-checkpoints\", true);\n@@ -471,12 +490,6 @@ bool AppInit2(boost::thread_group& threadGroup)\n     else if (nScriptCheckThreads > MAX_SCRIPTCHECK_THREADS)\n         nScriptCheckThreads = MAX_SCRIPTCHECK_THREADS;\n \n-    // -debug implies fDebug*\n-    if (fDebug)\n-        fDebugNet = true;\n-    else\n-        fDebugNet = GetBoolArg(\"-debugnet\", false);\n-\n     if (fDaemon)\n         fServer = true;\n     else"
      },
      {
        "sha": "640fbac8bb7efbc0373167d3ef87f133941d2247",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -3544,10 +3544,10 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             return error(\"message getdata size() = %\"PRIszu\"\", vInv.size());\n         }\n \n-        if (fDebugNet || (vInv.size() != 1))\n+        if (fDebug || (vInv.size() != 1))\n             LogPrint(\"net\", \"received getdata (%\"PRIszu\" invsz)\\n\", vInv.size());\n \n-        if ((fDebugNet && vInv.size() > 0) || (vInv.size() == 1))\n+        if ((fDebug && vInv.size() > 0) || (vInv.size() == 1))\n             LogPrint(\"net\", \"received getdata for: %s\\n\", vInv[0].ToString().c_str());\n \n         pfrom->vRecvGetData.insert(pfrom->vRecvGetData.end(), vInv.begin(), vInv.end());\n@@ -4213,7 +4213,7 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n             const CInv& inv = (*pto->mapAskFor.begin()).second;\n             if (!AlreadyHave(inv))\n             {\n-                if (fDebugNet)\n+                if (fDebug)\n                     LogPrint(\"net\", \"sending getdata: %s\\n\", inv.ToString().c_str());\n                 vGetData.push_back(inv);\n                 if (vGetData.size() >= 1000)"
      },
      {
        "sha": "c8afd837d231afabc3ac94fb71d8a4074fb92c62",
        "filename": "src/qt/paymentrequestplus.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/qt/paymentrequestplus.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/qt/paymentrequestplus.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentrequestplus.cpp?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -75,8 +75,7 @@ bool PaymentRequestPlus::getMerchant(X509_STORE* certStore, QString& merchant) c\n         digestAlgorithm = EVP_sha1();\n     }\n     else if (paymentRequest.pki_type() == \"none\") {\n-        if (fDebug)\n-            qDebug() << \"PaymentRequestPlus::getMerchant : Payment request: pki_type == none\";\n+        qDebug() << \"PaymentRequestPlus::getMerchant : Payment request: pki_type == none\";\n         return false;\n     }\n     else {"
      },
      {
        "sha": "0f386680ac476d9a29c41a4890639fded93ca70d",
        "filename": "src/qt/paymentserver.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 11,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/qt/paymentserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/qt/paymentserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/paymentserver.cpp?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -87,9 +87,7 @@ static QList<QString> savedPaymentRequests;\n \n static void ReportInvalidCertificate(const QSslCertificate& cert)\n {\n-    if (fDebug) {\n-        qDebug() << \"ReportInvalidCertificate : Payment server found an invalid certificate: \" << cert.subjectInfo(QSslCertificate::CommonName);\n-    }\n+    qDebug() << \"ReportInvalidCertificate : Payment server found an invalid certificate: \" << cert.subjectInfo(QSslCertificate::CommonName);\n }\n \n //\n@@ -160,8 +158,7 @@ void PaymentServer::LoadRootCAs(X509_STORE* _store)\n             continue;\n         }\n     }\n-    if (fDebug)\n-        qDebug() << \"PaymentServer::LoadRootCAs : Loaded \" << nRootCerts << \" root certificates\";\n+    qDebug() << \"PaymentServer::LoadRootCAs : Loaded \" << nRootCerts << \" root certificates\";\n \n     // Project for another day:\n     // Fetch certificate revocation lists, and add them to certStore.\n@@ -375,8 +372,7 @@ void PaymentServer::handleURIOrFile(const QString& s)\n             QString decoded = QUrl::fromPercentEncoding(temp);\n             QUrl fetchUrl(decoded, QUrl::StrictMode);\n \n-            if (fDebug)\n-                qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n+            qDebug() << \"PaymentServer::handleURIOrFile : fetchRequest(\" << fetchUrl << \")\";\n \n             if (fetchUrl.isValid())\n                 fetchRequest(fetchUrl);\n@@ -475,8 +471,7 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, QList<Sen\n     if (request.getMerchant(PaymentServer::certStore, recipients[0].authenticatedMerchant)) {\n         recipients[0].paymentRequest = request;\n         recipients[0].amount = totalAmount;\n-        if (fDebug)\n-            qDebug() << \"PaymentServer::processPaymentRequest : Payment request from \" << recipients[0].authenticatedMerchant;\n+        qDebug() << \"PaymentServer::processPaymentRequest : Payment request from \" << recipients[0].authenticatedMerchant;\n     }\n     else {\n         recipients.clear();\n@@ -493,8 +488,7 @@ bool PaymentServer::processPaymentRequest(PaymentRequestPlus& request, QList<Sen\n                 if (i == 0) // Tie request to first pay-to, we don't want multiple ACKs\n                     recipients[i].paymentRequest = request;\n                 recipients[i].address = QString::fromStdString(CBitcoinAddress(dest).ToString());\n-                if (fDebug)\n-                    qDebug() << \"PaymentServer::processPaymentRequest : Payment request, insecure \" << recipients[i].address;\n+                qDebug() << \"PaymentServer::processPaymentRequest : Payment request, insecure \" << recipients[i].address;\n             }\n             else {\n                 // Insecure payments to custom bitcoin addresses are not supported"
      },
      {
        "sha": "9ee1ad5f52d25aacc26bba19ceb391e61970c56d",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 13,
        "deletions": 4,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -73,7 +73,6 @@ using namespace std;\n map<string, string> mapArgs;\n map<string, vector<string> > mapMultiArgs;\n bool fDebug = false;\n-bool fDebugNet = false;\n bool fPrintToConsole = false;\n bool fPrintToDebugger = false;\n bool fDaemon = false;\n@@ -226,10 +225,20 @@ int LogPrint(const char* category, const char* pszFormat, ...)\n {\n     if (category != NULL)\n     {\n-        if (!fDebug) return 0;\n-        const vector<string>& categories = mapMultiArgs[\"-debug\"];\n-        if (find(categories.begin(), categories.end(), string(category)) == categories.end())\n+        if (!fDebug)\n             return 0;\n+\n+        const vector<string>& categories = mapMultiArgs[\"-debug\"];\n+        bool allCategories = count(categories.begin(), categories.end(), string(\"\"));\n+\n+        // Only look for categories, if not -debug/-debug=1 was passed,\n+        // as that implies every category should be logged.\n+        if (!allCategories)\n+        {\n+            // Category was not found (not supplied via -debug=<category>)\n+            if (find(categories.begin(), categories.end(), string(category)) == categories.end())\n+                return 0;\n+        }\n     }\n \n     int ret = 0; // Returns total number of characters written"
      },
      {
        "sha": "2573694046fe8f5c1c68abd36adbe79fd7371766",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b570559f8d39a5d4cffd01b8091c3133f7750dc/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=3b570559f8d39a5d4cffd01b8091c3133f7750dc",
        "patch": "@@ -140,7 +140,6 @@ inline void MilliSleep(int64 n)\n extern std::map<std::string, std::string> mapArgs;\n extern std::map<std::string, std::vector<std::string> > mapMultiArgs;\n extern bool fDebug;\n-extern bool fDebugNet;\n extern bool fPrintToConsole;\n extern bool fPrintToDebugger;\n extern bool fDaemon;"
      }
    ]
  }
]