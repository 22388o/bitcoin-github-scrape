[
  {
    "sha": "d5f528f14647b6270096921b917ee5379bdd19e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNWY1MjhmMTQ2NDdiNjI3MDA5NjkyMWI5MTdlZTUzNzliZGQxOWU1",
    "commit": {
      "author": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-01-05T13:06:27Z"
      },
      "committer": {
        "name": "Philip Kaufmann",
        "email": "phil.kaufmann@t-online.de",
        "date": "2013-01-05T13:06:27Z"
      },
      "message": "add extract_strings_qt_win.py and edit translation_process.md\n\n- extends the translation process a little in terms of usability on Windows\n- I'm now able to create bitcoinstrings.cpp straight from master without\n  the need to edit or copy that Python script ;)",
      "tree": {
        "sha": "f682843df220751a3138d2eb701248cb0f1143fe",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f682843df220751a3138d2eb701248cb0f1143fe"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d5f528f14647b6270096921b917ee5379bdd19e5",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5f528f14647b6270096921b917ee5379bdd19e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d5f528f14647b6270096921b917ee5379bdd19e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d5f528f14647b6270096921b917ee5379bdd19e5/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "ea9788517bfa3e53e192c5af9e64e73625f9db74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ea9788517bfa3e53e192c5af9e64e73625f9db74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ea9788517bfa3e53e192c5af9e64e73625f9db74"
      }
    ],
    "stats": {
      "total": 79,
      "additions": 77,
      "deletions": 2
    },
    "files": [
      {
        "sha": "8ecb6b07bb191369f695b9e3ec4642d9248b4a5c",
        "filename": "doc/translation_process.md",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f528f14647b6270096921b917ee5379bdd19e5/doc/translation_process.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f528f14647b6270096921b917ee5379bdd19e5/doc/translation_process.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/translation_process.md?ref=d5f528f14647b6270096921b917ee5379bdd19e5",
        "patch": "@@ -39,8 +39,11 @@ so make sure that utility is installed (ie, `apt-get install gettext` on\n Ubuntu/Debian):\n \n     python share/qt/extract_strings_qt.py\n+    or (for Windows in a MinGW Shell)\n+    share/qt/extract_strings_qt_winpy\n+\n     lupdate bitcoin-qt.pro -no-obsolete -locations relative -ts src/qt/locale/bitcoin_en.ts\n-    \n+\n ##### Handling of plurals in the source file\n \n When new plurals are added to the source file, it's important to do the following steps:"
      },
      {
        "sha": "0d7e27ab3e9c711b34db4703b2f63c558d9fb364",
        "filename": "share/qt/extract_strings_qt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f528f14647b6270096921b917ee5379bdd19e5/share/qt/extract_strings_qt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f528f14647b6270096921b917ee5379bdd19e5/share/qt/extract_strings_qt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt.py?ref=d5f528f14647b6270096921b917ee5379bdd19e5",
        "patch": "@@ -1,7 +1,7 @@\n #!/usr/bin/python\n '''\n Extract _(\"...\") strings for translation and convert to Qt4 stringdefs so that\n-they can be picked up by Qt linguist.\n+they can be picked up by Qt linguist. Assumes Python is installed in /usr/bin/.\n '''\n from subprocess import Popen, PIPE\n import glob"
      },
      {
        "sha": "6f1d39fb47164205d4aab0fd32c2059dbfe00d1d",
        "filename": "share/qt/extract_strings_qt_win.py",
        "status": "added",
        "additions": 72,
        "deletions": 0,
        "changes": 72,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d5f528f14647b6270096921b917ee5379bdd19e5/share/qt/extract_strings_qt_win.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d5f528f14647b6270096921b917ee5379bdd19e5/share/qt/extract_strings_qt_win.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/share/qt/extract_strings_qt_win.py?ref=d5f528f14647b6270096921b917ee5379bdd19e5",
        "patch": "@@ -0,0 +1,72 @@\n+#!/d/Python27/python\n+'''\n+Extract _(\"...\") strings for translation and convert to Qt4 stringdefs so that\n+they can be picked up by Qt linguist. Assumes Python is installed in D:\\Python27\\.\n+'''\n+from subprocess import Popen, PIPE\n+import glob\n+import operator\n+\n+OUT_CPP=\"src/qt/bitcoinstrings.cpp\"\n+EMPTY=['\"\"']\n+\n+def parse_po(text):\n+    \"\"\"\n+    Parse 'po' format produced by xgettext.\n+    Return a list of (msgid,msgstr) tuples.\n+    \"\"\"\n+    messages = []\n+    msgid = []\n+    msgstr = []\n+    in_msgid = False\n+    in_msgstr = False\n+\n+    for line in text.split('\\n'):\n+        line = line.rstrip('\\r')\n+        if line.startswith('msgid '):\n+            if in_msgstr:\n+                messages.append((msgid, msgstr))\n+                in_msgstr = False\n+            # message start\n+            in_msgid = True\n+            \n+            msgid = [line[6:]]\n+        elif line.startswith('msgstr '):\n+            in_msgid = False\n+            in_msgstr = True\n+            msgstr = [line[7:]]\n+        elif line.startswith('\"'):\n+            if in_msgid:\n+                msgid.append(line)\n+            if in_msgstr:\n+                msgstr.append(line)\n+\n+    if in_msgstr:\n+        messages.append((msgid, msgstr))\n+\n+    return messages\n+\n+files = glob.glob('src/*.cpp') + glob.glob('src/*.h') \n+\n+# xgettext -n --keyword=_ $FILES\n+child = Popen(['xgettext','--output=-','-n','--keyword=_'] + files, stdout=PIPE)\n+(out, err) = child.communicate()\n+\n+messages = parse_po(out) \n+\n+f = open(OUT_CPP, 'w')\n+f.write(\"\"\"#include <QtGlobal>\n+// Automatically generated by extract_strings.py\n+#ifdef __GNUC__\n+#define UNUSED __attribute__((unused))\n+#else\n+#define UNUSED\n+#endif\n+\"\"\")\n+f.write('static const char UNUSED *bitcoin_strings[] = {\\n')\n+messages.sort(key=operator.itemgetter(0))\n+for (msgid, msgstr) in messages:\n+    if msgid != EMPTY:\n+        f.write('QT_TRANSLATE_NOOP(\"bitcoin-core\", %s),\\n' % ('\\n'.join(msgid)))\n+f.write('};')\n+f.close()"
      }
    ]
  }
]