[
  {
    "sha": "d681a28219d3876a2b6e3cd2fb0d92963674903e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNjgxYTI4MjE5ZDM4NzZhMmI2ZTNjZDJmYjBkOTI5NjM2NzQ5MDNl",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-08-20T18:42:54Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-10-14T14:16:42Z"
      },
      "message": "RPC: getpeerinfo: Deprecate \"whitelisted\" field (replaced by \"permissions\")",
      "tree": {
        "sha": "ac1da24af138b3f755ea3ebe109ac9bd07a6fcf1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ac1da24af138b3f755ea3ebe109ac9bd07a6fcf1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d681a28219d3876a2b6e3cd2fb0d92963674903e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d681a28219d3876a2b6e3cd2fb0d92963674903e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d681a28219d3876a2b6e3cd2fb0d92963674903e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d681a28219d3876a2b6e3cd2fb0d92963674903e/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "99a1d572eabca89790216b3919a237e07063a376",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/99a1d572eabca89790216b3919a237e07063a376",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/99a1d572eabca89790216b3919a237e07063a376"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 26,
      "deletions": 4
    },
    "files": [
      {
        "sha": "9eeedf889e19b71a7bb4eafc5a1df60fa1f1cfcd",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d681a28219d3876a2b6e3cd2fb0d92963674903e/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d681a28219d3876a2b6e3cd2fb0d92963674903e/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=d681a28219d3876a2b6e3cd2fb0d92963674903e",
        "patch": "@@ -127,7 +127,8 @@ static RPCHelpMan getpeerinfo()\n                             {\n                                 {RPCResult::Type::NUM, \"n\", \"The heights of blocks we're currently asking from this peer\"},\n                             }},\n-                            {RPCResult::Type::BOOL, \"whitelisted\", \"Whether the peer is whitelisted\"},\n+                            {RPCResult::Type::BOOL, \"whitelisted\", /* optional */ true, \"Whether the peer is whitelisted with default permissions\\n\"\n+                                                                                        \"(DEPRECATED, returned only if config option -deprecatedrpc=whitelisted is passed)\"},\n                             {RPCResult::Type::NUM, \"minfeefilter\", \"The minimum fee rate for transactions this peer accepts\"},\n                             {RPCResult::Type::OBJ_DYN, \"bytessent_per_msg\", \"\",\n                             {\n@@ -216,7 +217,10 @@ static RPCHelpMan getpeerinfo()\n             }\n             obj.pushKV(\"inflight\", heights);\n         }\n-        obj.pushKV(\"whitelisted\", stats.m_legacyWhitelisted);\n+        if (IsDeprecatedRPCEnabled(\"whitelisted\")) {\n+            // whitelisted is deprecated in v0.21 for removal in v0.22\n+            obj.pushKV(\"whitelisted\", stats.m_legacyWhitelisted);\n+        }\n         UniValue permissions(UniValue::VARR);\n         for (const auto& permission : NetPermissions::ToStrings(stats.m_permissionFlags)) {\n             permissions.push_back(permission);"
      },
      {
        "sha": "e80422d1cfe813648f8b234a8642dc49b3ed3ec5",
        "filename": "test/functional/p2p_blocksonly.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d681a28219d3876a2b6e3cd2fb0d92963674903e/test/functional/p2p_blocksonly.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d681a28219d3876a2b6e3cd2fb0d92963674903e/test/functional/p2p_blocksonly.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_blocksonly.py?ref=d681a28219d3876a2b6e3cd2fb0d92963674903e",
        "patch": "@@ -59,7 +59,7 @@ def run_test(self):\n \n         self.log.info('Check that txs from peers with relay-permission are not rejected and relayed to others')\n         self.log.info(\"Restarting node 0 with relay permission and blocksonly\")\n-        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=relay@127.0.0.1\", \"-blocksonly\"])\n+        self.restart_node(0, [\"-persistmempool=0\", \"-whitelist=relay@127.0.0.1\", \"-blocksonly\", '-deprecatedrpc=whitelisted'])\n         assert_equal(self.nodes[0].getrawmempool(), [])\n         first_peer = self.nodes[0].add_p2p_connection(P2PInterface())\n         second_peer = self.nodes[0].add_p2p_connection(P2PInterface())"
      },
      {
        "sha": "d7b10cb075dc247ac6be554cdc8d7eb4f26d3686",
        "filename": "test/functional/p2p_permissions.py",
        "status": "modified",
        "additions": 19,
        "deletions": 1,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d681a28219d3876a2b6e3cd2fb0d92963674903e/test/functional/p2p_permissions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d681a28219d3876a2b6e3cd2fb0d92963674903e/test/functional/p2p_permissions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/p2p_permissions.py?ref=d681a28219d3876a2b6e3cd2fb0d92963674903e",
        "patch": "@@ -42,6 +42,13 @@ def run_test(self):\n             [\"relay\", \"noban\", \"mempool\", \"download\"],\n             True)\n \n+        self.checkpermission(\n+            # check without deprecatedrpc=whitelisted\n+            [\"-whitelist=127.0.0.1\"],\n+            # Make sure the default values in the command line documentation match the ones here\n+            [\"relay\", \"noban\", \"mempool\", \"download\"],\n+            None)\n+\n         self.checkpermission(\n             # no permission (even with forcerelay)\n             [\"-whitelist=@127.0.0.1\", \"-whitelistforcerelay=1\"],\n@@ -80,6 +87,12 @@ def run_test(self):\n             [\"noban\", \"mempool\", \"download\"],\n             False)\n \n+        self.checkpermission(\n+            # check without deprecatedrpc=whitelisted\n+            [\"-whitelist=noban,mempool@127.0.0.1\", \"-whitelistrelay\"],\n+            [\"noban\", \"mempool\", \"download\"],\n+            None)\n+\n         self.checkpermission(\n             # legacy whitelistforcerelay should be ignored\n             [\"-whitelist=noban,mempool@127.0.0.1\", \"-whitelistforcerelay\"],\n@@ -149,10 +162,15 @@ def check_tx_relay(self):\n         )\n \n     def checkpermission(self, args, expectedPermissions, whitelisted):\n+        if whitelisted is not None:\n+            args = [*args, '-deprecatedrpc=whitelisted']\n         self.restart_node(1, args)\n         connect_nodes(self.nodes[0], 1)\n         peerinfo = self.nodes[1].getpeerinfo()[0]\n-        assert_equal(peerinfo['whitelisted'], whitelisted)\n+        if whitelisted is None:\n+            assert 'whitelisted' not in peerinfo\n+        else:\n+            assert_equal(peerinfo['whitelisted'], whitelisted)\n         assert_equal(len(expectedPermissions), len(peerinfo['permissions']))\n         for p in expectedPermissions:\n             if not p in peerinfo['permissions']:"
      }
    ]
  },
  {
    "sha": "5b57dc5458800e56b4dddfeb32a1813804a62b0f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjU3ZGM1NDU4ODAwZTU2YjRkZGRmZWIzMmExODEzODA0YTYyYjBm",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-09-12T17:41:04Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2020-10-14T14:16:43Z"
      },
      "message": "RPC: getpeerinfo: Wrap long help line for bytesrecv_per_msg",
      "tree": {
        "sha": "c956ea9b7a90495db9b841c30922aa225ee07c5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c956ea9b7a90495db9b841c30922aa225ee07c5a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b57dc5458800e56b4dddfeb32a1813804a62b0f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b57dc5458800e56b4dddfeb32a1813804a62b0f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b57dc5458800e56b4dddfeb32a1813804a62b0f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b57dc5458800e56b4dddfeb32a1813804a62b0f/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d681a28219d3876a2b6e3cd2fb0d92963674903e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d681a28219d3876a2b6e3cd2fb0d92963674903e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d681a28219d3876a2b6e3cd2fb0d92963674903e"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "34ebe522a26a1017514041d604fcf3c7e0d12dc9",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b57dc5458800e56b4dddfeb32a1813804a62b0f/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b57dc5458800e56b4dddfeb32a1813804a62b0f/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=5b57dc5458800e56b4dddfeb32a1813804a62b0f",
        "patch": "@@ -140,7 +140,8 @@ static RPCHelpMan getpeerinfo()\n                             {\n                                 {RPCResult::Type::NUM, \"msg\", \"The total bytes received aggregated by message type\\n\"\n                                                               \"When a message type is not listed in this json object, the bytes received are 0.\\n\"\n-                                                              \"Only known message types can appear as keys in the object and all bytes received of unknown message types are listed under '\"+NET_MESSAGE_COMMAND_OTHER+\"'.\"}\n+                                                              \"Only known message types can appear as keys in the object and all bytes received\\n\"\n+                                                              \"of unknown message types are listed under '\"+NET_MESSAGE_COMMAND_OTHER+\"'.\"}\n                             }},\n                         }},\n                     }},"
      }
    ]
  }
]