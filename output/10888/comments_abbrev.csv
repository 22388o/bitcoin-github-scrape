practicalswift,2017-07-20T11:38:33Z,Concept ACK (strong ACK! :-)),https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-316677603,316677603,
bytting,2017-07-21T04:37:14Z,"How about ""improving"" those FindNode functions to something like this,\n\n```c++\nauto iter = std::find_if(vNodes.begin(), vNodes.end(), [&](CNode *node) {\n    return node->GetAddrName() == addrName;\n});\n\nreturn iter == vNodes.end() ? NULL : *iter;\n```\n\n I believe C++11 allows that",https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-316900513,316900513,
practicalswift,2017-07-21T09:17:53Z,"@corebob I guess it is a matter of taste, but personally I find the current range-based for loop form more straightforward and easier to read:\n\n```c++\n     for (CNode* pnode : vNodes) {\n          if (pnode->GetAddrName() == addrName) {\n              return pnode;\n          }\n      }\n      return NULL;\n```",https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-316950724,316950724,
bytting,2017-07-21T09:44:56Z,"@practicalswift \nI pretty much agree. I think pro arguments could be made for getting rid of a raw loop, and getting rid of an extra exit point. Though probably not worth it in this case.",https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-316956904,316956904,
benma,2017-07-22T07:39:23Z,"I am usually in favor of using `algorithm`, as explicit names (`find_if`) and lambdas are more descriptive than loops etc., but in this case, I don't like the return value conversion, so it indeed looks more complicated than before. Too bad.",https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-317163961,317163961,
benma,2017-09-11T13:46:01Z,Rebased.,https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-328533737,328533737,
benma,2017-09-11T17:27:28Z,Can someone please retrigger CI?,https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-328599942,328599942,
sipa,2017-09-11T23:50:08Z,"utACK a9144d535122a4d08348e477315b5a94368e6dfc\n\nTravis passed after restart.",https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-328690354,328690354,
benma,2017-09-12T07:12:36Z,@MarcoFalke I also applied clang-format. Nice tool. Maybe it should go into the CI for all future changes ;),https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-328761172,328761172,
MarcoFalke,2017-09-12T07:17:16Z,re-utACK 05cae8a,https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-328762188,328762188,
benma,2017-09-20T23:12:19Z,Can this be merged?,https://github.com/bitcoin/bitcoin/pull/10888#issuecomment-331006372,331006372,
jonasschnelli,2017-07-20T11:27:10Z,Please switch to brackets here.,https://github.com/bitcoin/bitcoin/pull/10888#discussion_r128489518,128489518,src/net.cpp
benma,2017-07-20T16:56:01Z,Done.,https://github.com/bitcoin/bitcoin/pull/10888#discussion_r128571953,128571953,src/net.cpp
MarcoFalke,2017-09-12T03:02:25Z,"`const SeedSpec6& seed_in` makes more sense to me as it prevents a copy, no?",https://github.com/bitcoin/bitcoin/pull/10888#discussion_r138242474,138242474,src/net.cpp
benma,2017-09-12T07:11:56Z,Correct. Done!,https://github.com/bitcoin/bitcoin/pull/10888#discussion_r138267802,138267802,src/net.cpp
