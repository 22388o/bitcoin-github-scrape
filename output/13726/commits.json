[
  {
    "sha": "5f019d5354cb12e343ea4bb88da04fbe0e98f102",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZjAxOWQ1MzU0Y2IxMmUzNDNlYTRiYjg4ZGEwNGZiZTBlOThmMTAy",
    "commit": {
      "author": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-20T21:48:26Z"
      },
      "committer": {
        "name": "251",
        "email": "13120787+251Labs@users.noreply.github.com",
        "date": "2018-07-20T23:14:25Z"
      },
      "message": "Removes the boost/algorithm/string/join dependency\n\nThis commit removes the `boost/algorithm/string/join` dependency\nfrom the project by replacing `boost::algorithm::join` with\na simple helper function.",
      "tree": {
        "sha": "57f901e796b23e97e115a333a1d9712f8f9be4fb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/57f901e796b23e97e115a333a1d9712f8f9be4fb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5f019d5354cb12e343ea4bb88da04fbe0e98f102",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f019d5354cb12e343ea4bb88da04fbe0e98f102",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5f019d5354cb12e343ea4bb88da04fbe0e98f102",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5f019d5354cb12e343ea4bb88da04fbe0e98f102/comments",
    "author": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "l2a5b1",
      "id": 13120787,
      "node_id": "MDQ6VXNlcjEzMTIwNzg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/13120787?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/l2a5b1",
      "html_url": "https://github.com/l2a5b1",
      "followers_url": "https://api.github.com/users/l2a5b1/followers",
      "following_url": "https://api.github.com/users/l2a5b1/following{/other_user}",
      "gists_url": "https://api.github.com/users/l2a5b1/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/l2a5b1/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/l2a5b1/subscriptions",
      "organizations_url": "https://api.github.com/users/l2a5b1/orgs",
      "repos_url": "https://api.github.com/users/l2a5b1/repos",
      "events_url": "https://api.github.com/users/l2a5b1/events{/privacy}",
      "received_events_url": "https://api.github.com/users/l2a5b1/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2dc5ab637803283dd28717f49c43498350cd6308",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2dc5ab637803283dd28717f49c43498350cd6308",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2dc5ab637803283dd28717f49c43498350cd6308"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 11,
      "deletions": 6
    },
    "files": [
      {
        "sha": "f1b63b5b44ce7d13bb91891720f2ab4a6c8c3ae7",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f019d5354cb12e343ea4bb88da04fbe0e98f102/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f019d5354cb12e343ea4bb88da04fbe0e98f102/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5f019d5354cb12e343ea4bb88da04fbe0e98f102",
        "patch": "@@ -45,7 +45,6 @@\n #include <sstream>\n \n #include <boost/algorithm/string/replace.hpp>\n-#include <boost/algorithm/string/join.hpp>\n #include <boost/thread.hpp>\n \n #if defined(NDEBUG)\n@@ -2242,6 +2241,13 @@ static void DoWarning(const std::string& strWarning)\n     }\n }\n \n+/** Private helper function that concatenates warning messages. */\n+static void AppendWarning(std::string& res, const std::string& warn)\n+{\n+    if (!res.empty()) res += \", \";\n+    res += warn;\n+}\n+\n /** Check warning conditions and do some notifications on new chain tip set. */\n void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainParams) {\n     // New best block\n@@ -2253,7 +2259,7 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n         g_best_block_cv.notify_all();\n     }\n \n-    std::vector<std::string> warningMessages;\n+    std::string warningMessages;\n     if (!IsInitialBlockDownload())\n     {\n         int nUpgraded = 0;\n@@ -2266,7 +2272,7 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n                 if (state == ThresholdState::ACTIVE) {\n                     DoWarning(strWarning);\n                 } else {\n-                    warningMessages.push_back(strWarning);\n+                    AppendWarning(warningMessages, strWarning);\n                 }\n             }\n         }\n@@ -2279,7 +2285,7 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            warningMessages.push_back(strprintf(_(\"%d of last 100 blocks have unexpected version\"), nUpgraded));\n+            AppendWarning(warningMessages, strprintf(_(\"%d of last 100 blocks have unexpected version\"), nUpgraded));\n         if (nUpgraded > 100/2)\n         {\n             std::string strWarning = _(\"Warning: Unknown block versions being mined! It's possible unknown rules are in effect\");\n@@ -2293,7 +2299,7 @@ void static UpdateTip(const CBlockIndex *pindexNew, const CChainParams& chainPar\n       FormatISO8601DateTime(pindexNew->GetBlockTime()),\n       GuessVerificationProgress(chainParams.TxData(), pindexNew), pcoinsTip->DynamicMemoryUsage() * (1.0 / (1<<20)), pcoinsTip->GetCacheSize());\n     if (!warningMessages.empty())\n-        LogPrintf(\" warning='%s'\", boost::algorithm::join(warningMessages, \", \")); /* Continued */\n+        LogPrintf(\" warning='%s'\", warningMessages); /* Continued */\n     LogPrintf(\"\\n\");\n \n }"
      },
      {
        "sha": "2faaef8954bdba1be2606c2b20e5ecf49fef54ac",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5f019d5354cb12e343ea4bb88da04fbe0e98f102/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5f019d5354cb12e343ea4bb88da04fbe0e98f102/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=5f019d5354cb12e343ea4bb88da04fbe0e98f102",
        "patch": "@@ -49,7 +49,6 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/algorithm/string.hpp\n     boost/algorithm/string/case_conv.hpp\n     boost/algorithm/string/classification.hpp\n-    boost/algorithm/string/join.hpp\n     boost/algorithm/string/predicate.hpp\n     boost/algorithm/string/replace.hpp\n     boost/algorithm/string/split.hpp"
      }
    ]
  }
]