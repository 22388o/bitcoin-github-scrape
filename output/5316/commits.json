[
  {
    "sha": "9b0a8d3152b43b63c99878d0223a1681993ad608",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YjBhOGQzMTUyYjQzYjYzYzk5ODc4ZDAyMjNhMTY4MTk5M2FkNjA4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-19T08:39:42Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-26T15:36:25Z"
      },
      "message": "Add 'invalidateblock' and 'reconsiderblock' RPC commands.\n\nThese can be used for testing reorganizations or for manual intervention in case of\nchain forks.",
      "tree": {
        "sha": "33eaad082c1eaf52a331a57e027d7ded4288cc1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/33eaad082c1eaf52a331a57e027d7ded4288cc1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9b0a8d3152b43b63c99878d0223a1681993ad608",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b0a8d3152b43b63c99878d0223a1681993ad608",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9b0a8d3152b43b63c99878d0223a1681993ad608",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b0a8d3152b43b63c99878d0223a1681993ad608/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ff0bc9beb90cf96fb0a9698de22e2bc60fed2f2"
      }
    ],
    "stats": {
      "total": 159,
      "additions": 159,
      "deletions": 0
    },
    "files": [
      {
        "sha": "eeef513528b1b134f1abbc6bdec1285b12fc2532",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 73,
        "deletions": 0,
        "changes": 73,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b0a8d3152b43b63c99878d0223a1681993ad608/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b0a8d3152b43b63c99878d0223a1681993ad608/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=9b0a8d3152b43b63c99878d0223a1681993ad608",
        "patch": "@@ -2135,6 +2135,79 @@ bool ActivateBestChain(CValidationState &state, CBlock *pblock) {\n     return true;\n }\n \n+bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n+    AssertLockHeld(cs_main);\n+\n+    // Mark the block itself as invalid.\n+    pindex->nStatus |= BLOCK_FAILED_VALID;\n+    if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n+        return state.Abort(\"Failed to update block index\");\n+    }\n+    setBlockIndexCandidates.erase(pindex);\n+\n+    while (chainActive.Contains(pindex)) {\n+        CBlockIndex *pindexWalk = chainActive.Tip();\n+        pindexWalk->nStatus |= BLOCK_FAILED_CHILD;\n+        if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindexWalk))) {\n+            return state.Abort(\"Failed to update block index\");\n+        }\n+        setBlockIndexCandidates.erase(pindexWalk);\n+        // ActivateBestChain considers blocks already in chainActive\n+        // unconditionally valid already, so force disconnect away from it.\n+        if (!DisconnectTip(state)) {\n+            return false;\n+        }\n+    }\n+\n+    // The resulting new best tip may not be in setBlockIndexCandidates anymore, so\n+    // add them again.\n+    BlockMap::iterator it = mapBlockIndex.begin();\n+    while (it != mapBlockIndex.end()) {\n+        if (it->second->IsValid(BLOCK_VALID_TRANSACTIONS) && it->second->nChainTx && setBlockIndexCandidates.value_comp()(chainActive.Tip(), it->second)) {\n+            setBlockIndexCandidates.insert(pindex);\n+        }\n+        it++;\n+    }\n+\n+    InvalidChainFound(pindex);\n+    return true;\n+}\n+\n+bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex) {\n+    AssertLockHeld(cs_main);\n+\n+    int nHeight = pindex->nHeight;\n+\n+    // Remove the invalidity flag from this block and all its descendants.\n+    BlockMap::iterator it = mapBlockIndex.begin();\n+    while (it != mapBlockIndex.end()) {\n+        if (!it->second->IsValid() && it->second->GetAncestor(nHeight) == pindex) {\n+            it->second->nStatus &= ~BLOCK_FAILED_MASK;\n+            if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n+                return state.Abort(\"Failed to update block index\");\n+            }\n+            if (it->second->IsValid(BLOCK_VALID_TRANSACTIONS) && it->second->nChainTx && setBlockIndexCandidates.value_comp()(chainActive.Tip(), it->second)) {\n+                setBlockIndexCandidates.insert(it->second);\n+            }\n+            if (it->second == pindexBestInvalid) {\n+                // Reset invalid block marker if it was pointing to one of those.\n+                pindexBestInvalid = NULL;\n+            }\n+        }\n+        it++;\n+    }\n+\n+    // Remove the invalidity flag from all ancestors too.\n+    while (pindex != NULL) {\n+        pindex->nStatus &= ~BLOCK_FAILED_MASK;\n+        if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n+            return state.Abort(\"Failed to update block index\");\n+        }\n+        pindex = pindex->pprev;\n+    }\n+    return true;\n+}\n+\n CBlockIndex* AddToBlockIndex(const CBlockHeader& block)\n {\n     // Check for duplicate"
      },
      {
        "sha": "aee8d9234a9b44e7b9c3cd885e6a6f8314b29dcb",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b0a8d3152b43b63c99878d0223a1681993ad608/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b0a8d3152b43b63c99878d0223a1681993ad608/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=9b0a8d3152b43b63c99878d0223a1681993ad608",
        "patch": "@@ -609,6 +609,12 @@ class CVerifyDB {\n /** Find the last common block between the parameter chain and a locator. */\n CBlockIndex* FindForkInGlobalIndex(const CChain& chain, const CBlockLocator& locator);\n \n+/** Mark a block as invalid. */\n+bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex);\n+\n+/** Remove invalidity status from a block and its descendants. */\n+bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex);\n+\n /** The currently-connected chain of blocks. */\n extern CChain chainActive;\n "
      },
      {
        "sha": "0ce18e4147fd58aebc4cabdfcafb6c592788c0e3",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 76,
        "deletions": 0,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=9b0a8d3152b43b63c99878d0223a1681993ad608",
        "patch": "@@ -561,3 +561,79 @@ Value getmempoolinfo(const Array& params, bool fHelp)\n     return ret;\n }\n \n+Value invalidateblock(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"invalidateblock \\\"hash\\\"\\n\"\n+            \"\\nPermanently marks a block as invalid, as if it violated a consensus rule.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. hash   (string, required) the hash of the block to mark as invalid\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"invalidateblock\", \"\\\"blockhash\\\"\")\n+            + HelpExampleRpc(\"invalidateblock\", \"\\\"blockhash\\\"\")\n+        );\n+\n+    std::string strHash = params[0].get_str();\n+    uint256 hash(strHash);\n+    CValidationState state;\n+\n+    {\n+        LOCK(cs_main);\n+        if (mapBlockIndex.count(hash) == 0)\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+\n+        CBlockIndex* pblockindex = mapBlockIndex[hash];\n+        InvalidateBlock(state, pblockindex);\n+    }\n+\n+    if (state.IsValid()) {\n+        ActivateBestChain(state);\n+    }\n+\n+    if (!state.IsValid()) {\n+        throw JSONRPCError(RPC_DATABASE_ERROR, state.GetRejectReason());\n+    }\n+\n+    return Value::null;\n+}\n+\n+Value reconsiderblock(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 1)\n+        throw runtime_error(\n+            \"reconsiderblock \\\"hash\\\"\\n\"\n+            \"\\nRemoves invalidity status of a block and its descendants, reconsider them for activation.\\n\"\n+            \"This can be used to undo the effects of invalidateblock.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. hash   (string, required) the hash of the block to reconsider\\n\"\n+            \"\\nResult:\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"reconsiderblock\", \"\\\"blockhash\\\"\")\n+            + HelpExampleRpc(\"reconsiderblock\", \"\\\"blockhash\\\"\")\n+        );\n+\n+    std::string strHash = params[0].get_str();\n+    uint256 hash(strHash);\n+    CValidationState state;\n+\n+    {\n+        LOCK(cs_main);\n+        if (mapBlockIndex.count(hash) == 0)\n+            throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n+\n+        CBlockIndex* pblockindex = mapBlockIndex[hash];\n+        ReconsiderBlock(state, pblockindex);\n+    }\n+\n+    if (state.IsValid()) {\n+        ActivateBestChain(state);\n+    }\n+\n+    if (!state.IsValid()) {\n+        throw JSONRPCError(RPC_DATABASE_ERROR, state.GetRejectReason());\n+    }\n+\n+    return Value::null;\n+}"
      },
      {
        "sha": "c53dbe22ddb123d7b3686ec089ec5890c44ccc13",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=9b0a8d3152b43b63c99878d0223a1681993ad608",
        "patch": "@@ -270,6 +270,8 @@ static const CRPCCommand vRPCCommands[] =\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            true,      false,      false },\n+    { \"blockchain\",         \"invalidateblock\",        &invalidateblock,        true,      true,       false },\n+    { \"blockchain\",         \"reconsiderblock\",        &reconsiderblock,        true,      true,       false },\n \n     /* Mining */\n     { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },"
      },
      {
        "sha": "2b2428445d7ccf90f792fdbdaf828ef3aa975729",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9b0a8d3152b43b63c99878d0223a1681993ad608/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=9b0a8d3152b43b63c99878d0223a1681993ad608",
        "patch": "@@ -222,6 +222,8 @@ extern json_spirit::Value gettxoutsetinfo(const json_spirit::Array& params, bool\n extern json_spirit::Value gettxout(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value verifychain(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getchaintips(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value invalidateblock(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value reconsiderblock(const json_spirit::Array& params, bool fHelp);\n \n // in rest.cpp\n extern bool HTTPReq_REST(AcceptedConnection *conn,"
      }
    ]
  },
  {
    "sha": "0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowZGQwNmIyNTE1Y2Q0ZDFmMGJlNGRjZjkwNjBlMzRmM2I5YWJkZTc2",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-25T11:33:43Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-26T15:36:26Z"
      },
      "message": "Delay writing block indexes in invalidate/reconsider",
      "tree": {
        "sha": "4dca1c250a278738af9a94e741b438178abc24a1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4dca1c250a278738af9a94e741b438178abc24a1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9b0a8d3152b43b63c99878d0223a1681993ad608",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9b0a8d3152b43b63c99878d0223a1681993ad608",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9b0a8d3152b43b63c99878d0223a1681993ad608"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 6,
      "deletions": 12
    },
    "files": [
      {
        "sha": "5695c8ba51ea646d924afe46b4f141ac8267cb36",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 12,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
        "patch": "@@ -2140,17 +2140,13 @@ bool InvalidateBlock(CValidationState& state, CBlockIndex *pindex) {\n \n     // Mark the block itself as invalid.\n     pindex->nStatus |= BLOCK_FAILED_VALID;\n-    if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n-        return state.Abort(\"Failed to update block index\");\n-    }\n+    setDirtyBlockIndex.insert(pindex);\n     setBlockIndexCandidates.erase(pindex);\n \n     while (chainActive.Contains(pindex)) {\n         CBlockIndex *pindexWalk = chainActive.Tip();\n         pindexWalk->nStatus |= BLOCK_FAILED_CHILD;\n-        if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindexWalk))) {\n-            return state.Abort(\"Failed to update block index\");\n-        }\n+        setDirtyBlockIndex.insert(pindexWalk);\n         setBlockIndexCandidates.erase(pindexWalk);\n         // ActivateBestChain considers blocks already in chainActive\n         // unconditionally valid already, so force disconnect away from it.\n@@ -2183,9 +2179,7 @@ bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex) {\n     while (it != mapBlockIndex.end()) {\n         if (!it->second->IsValid() && it->second->GetAncestor(nHeight) == pindex) {\n             it->second->nStatus &= ~BLOCK_FAILED_MASK;\n-            if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n-                return state.Abort(\"Failed to update block index\");\n-            }\n+            setDirtyBlockIndex.insert(it->second);\n             if (it->second->IsValid(BLOCK_VALID_TRANSACTIONS) && it->second->nChainTx && setBlockIndexCandidates.value_comp()(chainActive.Tip(), it->second)) {\n                 setBlockIndexCandidates.insert(it->second);\n             }\n@@ -2199,9 +2193,9 @@ bool ReconsiderBlock(CValidationState& state, CBlockIndex *pindex) {\n \n     // Remove the invalidity flag from all ancestors too.\n     while (pindex != NULL) {\n-        pindex->nStatus &= ~BLOCK_FAILED_MASK;\n-        if (!pblocktree->WriteBlockIndex(CDiskBlockIndex(pindex))) {\n-            return state.Abort(\"Failed to update block index\");\n+        if (pindex->nStatus & BLOCK_FAILED_MASK) {\n+            pindex->nStatus &= ~BLOCK_FAILED_MASK;\n+            setDirtyBlockIndex.insert(pindex);\n         }\n         pindex = pindex->pprev;\n     }"
      }
    ]
  },
  {
    "sha": "bd9aebf19d6714552fe9f23bce97159d90d63e5b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDlhZWJmMTlkNjcxNDU1MmZlOWYyM2JjZTk3MTU5ZDkwZDYzZTVi",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-26T15:33:18Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-11-26T15:36:26Z"
      },
      "message": "Introduce a hidden category",
      "tree": {
        "sha": "b6e4a6f2554bf33bfd2d14f738d4377abb188324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b6e4a6f2554bf33bfd2d14f738d4377abb188324"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd9aebf19d6714552fe9f23bce97159d90d63e5b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd9aebf19d6714552fe9f23bce97159d90d63e5b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd9aebf19d6714552fe9f23bce97159d90d63e5b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd9aebf19d6714552fe9f23bce97159d90d63e5b/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0dd06b2515cd4d1f0be4dcf9060e34f3b9abde76"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 5,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ac0df5fa3bfe3b7208c426f5fd1716d5b07c770f",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd9aebf19d6714552fe9f23bce97159d90d63e5b/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd9aebf19d6714552fe9f23bce97159d90d63e5b/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=bd9aebf19d6714552fe9f23bce97159d90d63e5b",
        "patch": "@@ -160,7 +160,7 @@ string CRPCTable::help(string strCommand) const\n         // We already filter duplicates, but these deprecated screw up the sort order\n         if (strMethod.find(\"label\") != string::npos)\n             continue;\n-        if (strCommand != \"\" && strMethod != strCommand)\n+        if ((strCommand != \"\" || pcmd->category == \"hidden\") && strMethod != strCommand)\n             continue;\n #ifdef ENABLE_WALLET\n         if (pcmd->reqWallet && !pwalletMain)\n@@ -270,8 +270,6 @@ static const CRPCCommand vRPCCommands[] =\n     { \"blockchain\",         \"gettxout\",               &gettxout,               true,      false,      false },\n     { \"blockchain\",         \"gettxoutsetinfo\",        &gettxoutsetinfo,        true,      false,      false },\n     { \"blockchain\",         \"verifychain\",            &verifychain,            true,      false,      false },\n-    { \"blockchain\",         \"invalidateblock\",        &invalidateblock,        true,      true,       false },\n-    { \"blockchain\",         \"reconsiderblock\",        &reconsiderblock,        true,      true,       false },\n \n     /* Mining */\n     { \"mining\",             \"getblocktemplate\",       &getblocktemplate,       true,      false,      false },\n@@ -302,6 +300,10 @@ static const CRPCCommand vRPCCommands[] =\n     { \"util\",               \"estimatefee\",            &estimatefee,            true,      true,       false },\n     { \"util\",               \"estimatepriority\",       &estimatepriority,       true,      true,       false },\n \n+    /* Not shown in help */\n+    { \"hidden\",             \"invalidateblock\",        &invalidateblock,        true,      true,       false },\n+    { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        true,      true,       false },\n+\n #ifdef ENABLE_WALLET\n     /* Wallet */\n     { \"wallet\",             \"addmultisigaddress\",     &addmultisigaddress,     true,      false,      true },"
      }
    ]
  }
]