jnewbery,2017-03-07T21:49:06Z,"Squashed @ryanofsky's nits and rebased.\nOld tip: https://github.com/bitcoin/bitcoin/pull/9853/commits/5158a1e2a2587f9eba04d0f2a81744a9ecbe766d / https://github.com/jnewbery/bitcoin/tree/pr9853.1\nNew tip: https://github.com/bitcoin/bitcoin/pull/9853/commits/3ff485e32f7a1d068e799d323d3531ede22873f1 / https://github.com/jnewbery/bitcoin/tree/pr9853.2",https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-284870606,284870606,
laanwj,2017-03-08T14:51:07Z,utACK 3ff485e,https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-285061210,285061210,
MarcoFalke,2017-03-08T15:07:50Z,"Concept ACK.\n\nStyle Nit: In blockchain.cpp you are missing braces around the\nmultiline if block\n\nAlso, I was wondering if this requires a mention in the release notes...\n",https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-285066105,285066105,
laanwj,2017-03-08T15:15:28Z,"> Also, I was wondering if this requires a mention in the release notes...\n\nIt does.",https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-285068322,285068322,
ryanofsky,2017-03-08T18:34:43Z,"utACK 3ff485e32f7a1d068e799d323d3531ede22873f1\n\nConfirmed only minor changes since previous ACK.",https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-285127279,285127279,
jnewbery,2017-03-08T19:24:41Z,Release notes updated. Otherwise no change.,https://github.com/bitcoin/bitcoin/pull/9853#issuecomment-285141509,285141509,
ryanofsky,2017-02-24T16:35:28Z,Is there a plan to switch from integer literals to constants in a later PR? Seems like it would be nice to say `RPC_WALLET_ERROR` instead of `-4`.,https://github.com/bitcoin/bitcoin/pull/9853#discussion_r102978678,102978678,qa/rpc-tests/bumpfee.py
laanwj,2017-02-25T09:31:48Z,"Yes that would be nice, but is orthogonal to this change, so if you want to do that it'd indeed be a different PR.",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103075392,103075392,qa/rpc-tests/bumpfee.py
ryanofsky,2017-02-28T19:21:05Z,"In cases where bumpfee is called erroneously with a transaction that shouldn't be bumped, invalid parameter seems more apt than wallet error.\n\nProbably the most important thing you want to know when you get an error message from an API is whether the error is caused by something that you control and need to fix, or whether it's caused by something out of your control (like an implementation bu",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103531619,103531619,src/wallet/rpcwallet.cpp
ryanofsky,2017-02-28T19:29:39Z,Maybe invalid parameter here as well.,https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103533437,103533437,src/wallet/rpcdump.cpp
ryanofsky,2017-02-28T19:47:36Z,ZapSelect returns a DBErrors enum value which seems like it could be mapped to an RPC error (would also be nice to include in the error string).,https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103537074,103537074,src/wallet/rpcdump.cpp
ryanofsky,2017-02-28T19:50:56Z,Some of these MISC_ERROR cases make it seem like we could benefit from an new RPC_INVALID_STATE value. (Blockchain too short is another case below.),https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103537732,103537732,src/rpc/blockchain.cpp
jnewbery,2017-02-28T22:30:02Z,"yep, I'll put that in the todo list. I'm working on a primitives.py for bitcoin messages, datastructures and constants. Seems like a good place for the RPC error constants to live.",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103567578,103567578,qa/rpc-tests/bumpfee.py
jnewbery,2017-02-28T22:31:49Z,"> Probably the most important thing you want to know when you get an error message from an API is whether the error is caused by something that you control and need to fix, or whether it's caused by something out of your control\n\nNicely put. I'll update this to RPC_INVALID_PARAMETER",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103567923,103567923,src/wallet/rpcwallet.cpp
jnewbery,2017-02-28T22:32:58Z,"I agree we could do better, but let's leave that for a future PR.\n\nI think this is strictly an improvement because currently the API is returning RPC_INTERNAL_ERROR even in cases where there's no internal error.",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103568159,103568159,src/wallet/rpcdump.cpp
jnewbery,2017-02-28T22:33:11Z,ACK,https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103568202,103568202,src/wallet/rpcdump.cpp
jnewbery,2017-02-28T22:33:32Z,"Sounds sensible, but again let's leave that for a future PR.",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103568262,103568262,src/rpc/blockchain.cpp
laanwj,2017-03-02T10:45:08Z,"Yes, there is no reason why we couldn't add new status values. There's no need to make everything fit in the arbitrary bag of codes that exists now, which has been there unchanged for a long while.",https://github.com/bitcoin/bitcoin/pull/9853#discussion_r103895897,103895897,src/rpc/blockchain.cpp
