laanwj,2021-10-08 16:32:04,"Conceptually I agree with this. It would be nice to go to Decimal/Integer only. Floating point numbers shouldn't be used for monetary amounts, not even in tests.",https://github.com/bitcoin/bitcoin/pull/23225#issuecomment-938801112,938801112,
katesalazar,2021-10-10 19:51:29,"> I wonder if `satoshi_round` can be removed if the call sites denote everything in integral satoshi values.\n\nIf Bitcoin Core won't hard fork increased currency divisibility,\nremoving it is cleaner.\n\nIf Bitcoin Core or other group is going to hard fork increased\ncurrency divisibility, you might prefer to keep this and maybe\nuse it more than it is used currently.\n",https://github.com/bitcoin/bitcoin/pull/23225#issuecomment-939542094,939542094,
meshcollider,2021-10-18 04:25:26,"> If Bitcoin Core won't hard fork increased currency divisibility,\nremoving it is cleaner.\n\nIt is very safe to modify the test code assuming Bitcoin Core will *not* hard fork.",https://github.com/bitcoin/bitcoin/pull/23225#issuecomment-945353246,945353246,
katesalazar,2021-10-18 22:15:28,"> > > I wonder if `satoshi_round` can be removed if the call sites denote everything in integral satoshi values.\n> > \n> > If Bitcoin Core won't hard fork increased currency divisibility,\n> > removing it is cleaner.\n> \n> It is very safe to modify the test code assuming Bitcoin Core will _not_ hard fork.\n\nIf I had to do this, I'd take all the necessary time to make sure\nevery rationa",https://github.com/bitcoin/bitcoin/pull/23225#issuecomment-946211131,946211131,
MarcoFalke,2021-10-08 07:50:15,Not sure if rejecting a `float` is the right thing to do when the caller just wraps the `float` into a `Decimal`.,https://github.com/bitcoin/bitcoin/pull/23225#discussion_r724780852,724780852,test/functional/feature_fee_estimation.py
katesalazar,2021-10-08 20:41:19,"* This is an exception: random fee generation. Rounding is not an\n  important issue.\n\n* The corresponding rule: argument will be a well determined monetary\nquantity, for repeatability purposes. Any other case, that is correctly\nalready not using `float`.\n",https://github.com/bitcoin/bitcoin/pull/23225#discussion_r725289548,725289548,test/functional/feature_fee_estimation.py
