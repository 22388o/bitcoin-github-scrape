[
  {
    "sha": "ac831339cbfa65b1f7576c53b5d9a94841db9868",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYzgzMTMzOWNiZmE2NWIxZjc1NzZjNTNiNWQ5YTk0ODQxZGI5ODY4",
    "commit": {
      "author": {
        "name": "randymcmillan",
        "email": "randy.lee.mcmillan@gmail.com",
        "date": "2019-11-04T09:22:53Z"
      },
      "committer": {
        "name": "randymcmillan",
        "email": "randy.lee.mcmillan@gmail.com",
        "date": "2019-11-04T09:22:53Z"
      },
      "message": "doc: Fix some misspellings",
      "tree": {
        "sha": "4a8262bfa2dd49b03261f8bc6e0e85dc189cd8bb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4a8262bfa2dd49b03261f8bc6e0e85dc189cd8bb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ac831339cbfa65b1f7576c53b5d9a94841db9868",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE5hb6ciGhYT5bmSBil5ZsBrsGdXsFAl2/7gIACgkQl5ZsBrsG\ndXtqrQ//Xp2lS/Lbvn+VPOb++6qon9lDVyAAPmJiDooCa7q0urNFIy2zZcXobJxa\nrqovk0s7pqEyM8jW7+0q7z1N6nLo8VhY8NV32BQfqWsO8UIuzTevYVk90u0njmca\nBiAKnJKKEeLT8kvOj4G9i5vJ2YXV6aEbEnUBNc1gmQlI/e9c0lWRrDFRumhyg5nZ\nHHuCSCFx2teilwLZxnQuzM20FmWLv7uzumId6I44g0HD6BL7wA8j9XZjvTtzBXyP\nR4rbI2drOyOibGU1WuE6x0Yv4PM41DaBlqYOKyosSUw1XKjtDOfnUnR5K+5o2gej\nAmPZUDdQAFPAeUmMzjKFNmfYNf+OMNvMiWGCeP3pKjtkYcK00QZCU5p+TbVyphwR\nYTM1p/iCFNGq/Le+RCvfvYIoP8skwxQ+keKkZFzdUKcBJjZy/c080FRYKBSCD37q\nI08gVImmzRZ6ExZ0vpxKaDvBR0btnYjQlDi3+0aeag+67OOLkId/hERMpcGtyI80\nzoYce5SKrBGDZJS9sWjO/Dcbs1okInOqq+4Y89eppV0fWohhUP6dKj+Mrk7TVLL1\ns+uoY53MeO8LVsk6d6JG05pLd1cDlTTY4zWktwQofD2SPiw+alVHInGT4ja58vPf\nD8/n3ys+eq5ZCYnBfBCWhZRlr+WwjCGCyYxzvKawc676PHOREI0=\n=c4uk\n-----END PGP SIGNATURE-----",
        "payload": "tree 4a8262bfa2dd49b03261f8bc6e0e85dc189cd8bb\nparent 463eab5e1418a592036e7bf9bf46f66fe6462435\nauthor randymcmillan <randy.lee.mcmillan@gmail.com> 1572859373 -0500\ncommitter randymcmillan <randy.lee.mcmillan@gmail.com> 1572859373 -0500\n\ndoc: Fix some misspellings\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac831339cbfa65b1f7576c53b5d9a94841db9868",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ac831339cbfa65b1f7576c53b5d9a94841db9868",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac831339cbfa65b1f7576c53b5d9a94841db9868/comments",
    "author": {
      "login": "RandyMcMillan",
      "id": 152159,
      "node_id": "MDQ6VXNlcjE1MjE1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RandyMcMillan",
      "html_url": "https://github.com/RandyMcMillan",
      "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
      "following_url": "https://api.github.com/users/RandyMcMillan/following{/other_user}",
      "gists_url": "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
      "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
      "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
      "events_url": "https://api.github.com/users/RandyMcMillan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "RandyMcMillan",
      "id": 152159,
      "node_id": "MDQ6VXNlcjE1MjE1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/152159?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RandyMcMillan",
      "html_url": "https://github.com/RandyMcMillan",
      "followers_url": "https://api.github.com/users/RandyMcMillan/followers",
      "following_url": "https://api.github.com/users/RandyMcMillan/following{/other_user}",
      "gists_url": "https://api.github.com/users/RandyMcMillan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RandyMcMillan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RandyMcMillan/subscriptions",
      "organizations_url": "https://api.github.com/users/RandyMcMillan/orgs",
      "repos_url": "https://api.github.com/users/RandyMcMillan/repos",
      "events_url": "https://api.github.com/users/RandyMcMillan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RandyMcMillan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "463eab5e1418a592036e7bf9bf46f66fe6462435",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/463eab5e1418a592036e7bf9bf46f66fe6462435",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/463eab5e1418a592036e7bf9bf46f66fe6462435"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 13,
      "deletions": 14
    },
    "files": [
      {
        "sha": "400320dde016f37d0d3fb09a39d99a45338bc2c7",
        "filename": "README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/README.md?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -12,7 +12,7 @@ with no central authority: managing transactions and issuing money are carried\n out collectively by the network. Bitcoin Core is the name of open source\n software which enables the use of this currency.\n \n-For more information, as well as an immediately useable, binary version of\n+For more information, as well as an immediately usable, binary version of\n the Bitcoin Core software, see https://bitcoincore.org/en/download/, or read the\n [original whitepaper](https://bitcoincore.org/bitcoin.pdf).\n "
      },
      {
        "sha": "23b656cad7e6d2e273464ae74cb3ce014c7b984b",
        "filename": "contrib/guix/manifest.scm",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/contrib/guix/manifest.scm",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/contrib/guix/manifest.scm",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/guix/manifest.scm?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -106,7 +106,7 @@ chain for \" target \" development.\"))\n                                   (base-libc glibc-2.27)\n                                   (base-gcc (make-gcc-rpath-link\n                                              (make-ssp-fixed-gcc gcc-9))))\n-  \"Convienience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n+  \"Convenience wrapper around MAKE-CROSS-TOOLCHAIN with default values\n desirable for building Bitcoin Core release binaries.\"\n   (make-cross-toolchain target\n                    base-gcc-for-libc"
      },
      {
        "sha": "17566481572cfa828b9735bb8e27ee7e3a2e47d6",
        "filename": "doc/developer-notes.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/doc/developer-notes.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/doc/developer-notes.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/developer-notes.md?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -654,7 +654,7 @@ Strings and formatting\n \n   - Do not use it to convert to `QString`. Use `QString::fromStdString()`.\n \n-    - *Rationale*: Qt has build-in functionality for converting their string\n+    - *Rationale*: Qt has built-in functionality for converting their string\n       type from/to C++. No need to roll your own.\n \n   - In cases where do you call `.c_str()`, you might want to additionally check that the string does not contain embedded '\\0' characters, because"
      },
      {
        "sha": "d1cde8c40ff09aca4c59fafb12fc003f00a30f8b",
        "filename": "src/netbase.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/netbase.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/netbase.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/netbase.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -605,7 +605,7 @@ static void LogConnectFailure(bool manual_connection, const char* fmt, const Arg\n  * @param nTimeout Wait this many milliseconds for the connection to be\n  *                 established.\n  * @param manual_connection Whether or not the connection was manually requested\n- *                          (e.g. thru the addnode RPC)\n+ *                          (e.g. through the addnode RPC)\n  *\n  * @returns Whether or not a connection was successfully made.\n  */\n@@ -709,7 +709,7 @@ bool GetProxy(enum Network net, proxyType &proxyInfoOut) {\n \n /**\n  * Set the name proxy to use for all connections to nodes specified by a\n- * hostname. After setting this proxy, connecting to a node sepcified by a\n+ * hostname. After setting this proxy, connecting to a node specified by a\n  * hostname won't result in a local lookup of said hostname, rather, connect to\n  * the node by asking the name proxy for a proxy connection to the hostname,\n  * effectively delegating the hostname lookup to the specified proxy."
      },
      {
        "sha": "3c0df2b26edbf80a1119885d6025c01289edf44d",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -31,7 +31,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n     CCoinsViewCache &view = ::ChainstateActive().CoinsTip();\n     for (size_t o = 0; o < tx->vout.size(); o++) {\n         const Coin& existingCoin = view.AccessCoin(COutPoint(hashTx, o));\n-        // IsSpent doesnt mean the coin is spent, it means the output doesnt' exist.\n+        // IsSpent doesn't mean the coin is spent, it means the output doesn't exist.\n         // So if the output does exist, then this transaction exists in the chain.\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }"
      },
      {
        "sha": "234d3865ab33f721ae42c3ecaec84089b7c7a020",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -309,7 +309,7 @@ void BitcoinApplication::requestShutdown()\n     // rescanning a wallet.\n     m_node.startShutdown();\n     // Unsetting the client model can cause the current thread to wait for node\n-    // to complete an operation, like wait for a RPC execution to complate.\n+    // to complete an operation, like wait for a RPC execution to complete.\n     window->setClientModel(nullptr);\n     pollShutdownTimer->stop();\n "
      },
      {
        "sha": "983f251d6b18d759adb6f9b6f41f5668e64df22c",
        "filename": "src/rpc/rawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/rpc/rawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/rpc/rawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -1620,7 +1620,7 @@ UniValue joinpsbts(const JSONRPCRequest& request)\n     std::vector<int> output_indices(merged_psbt.outputs.size());\n     std::iota(output_indices.begin(), output_indices.end(), 0);\n \n-    // Shuffle input and output indicies lists\n+    // Shuffle input and output indices lists\n     Shuffle(input_indices.begin(), input_indices.end(), FastRandomContext());\n     Shuffle(output_indices.begin(), output_indices.end(), FastRandomContext());\n "
      },
      {
        "sha": "1936998ff3515831d3fbb3ced4bed6ea337cb33c",
        "filename": "src/rpc/rawtransaction_util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/rpc/rawtransaction_util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/rpc/rawtransaction_util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/rawtransaction_util.h?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -29,7 +29,7 @@ UniValue SignTransaction(CMutableTransaction& mtx, const SigningProvider* keysto\n   * Parse a prevtxs UniValue array and get the map of coins from it\n   *\n   * @param  prevTxs       Array of previous txns outputs that tx depends on but may not yet be in the block chain\n-  * @param  keystore      A pointer to the temprorary keystore if there is one\n+  * @param  keystore      A pointer to the temporary keystore if there is one\n   * @param  coins         Map of unspent outputs - coins in mempool and current chain UTXO set, may be extended by previous txns outputs after call\n   */\n void ParsePrevouts(const UniValue& prevTxsUnival, FillableSigningProvider* keystore, std::map<COutPoint, Coin>& coins);"
      },
      {
        "sha": "13cdd6c61a0c9682f08c93a52b188dcda7939530",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -36,7 +36,7 @@ namespace {\n //       xpubs use other characters too, but already have their own checksum\n //       mechanism.\n //     * Function names like \"multi()\" use other characters, but mistakes in\n-//       these would generally result in an unparseable descriptor.\n+//       these would generally result in an unparsable descriptor.\n //   * A case error always counts as 1 symbol error.\n //   * Any other 1 character substitution error counts as 1 or 2 symbol errors.\n // * Any 1 symbol error is always detected."
      },
      {
        "sha": "11072b6038d1c051fb6f22f2d4a3fc78aff7e04b",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -733,7 +733,7 @@ bool MemPoolAccept::PreChecks(ATMPArgs& args, Workspace& ws)\n         // To check these we first check if we meet the RBF criteria, above, and increment the descendant\n         // limits by the direct conflict and its descendants (as these are recalculated in\n         // CalculateMempoolAncestors by assuming the new transaction being added is a new descendant, with no\n-        // removals, of each parent's existing dependant set). The ancestor count limits are unmodified (as\n+        // removals, of each parent's existing dependent set). The ancestor count limits are unmodified (as\n         // the ancestor limits should be the same for both our new transaction and any conflicts).\n         // We don't bother incrementing m_limit_descendants by the full removal count as that limit never comes\n         // into force here (as we're only adding a single transaction)."
      },
      {
        "sha": "576ae94098c3ade89329e097c6b3e115cbd45218",
        "filename": "test/lint/lint-spelling.ignore-words.txt",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/test/lint/lint-spelling.ignore-words.txt",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/test/lint/lint-spelling.ignore-words.txt",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.ignore-words.txt?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -1,9 +1,7 @@\n-cas\n hights\n mor\n mut\n objext\n-unselect\n useable\n wit\n unparseable\n@@ -13,3 +11,4 @@ errorstring\n keyserver\n homogenous\n setban\n+hist"
      },
      {
        "sha": "251a94f7ff5693a91d63ca247ce0b25744596516",
        "filename": "test/lint/lint-spelling.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ac831339cbfa65b1f7576c53b5d9a94841db9868/test/lint/lint-spelling.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ac831339cbfa65b1f7576c53b5d9a94841db9868/test/lint/lint-spelling.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-spelling.sh?ref=ac831339cbfa65b1f7576c53b5d9a94841db9868",
        "patch": "@@ -15,6 +15,6 @@ if ! command -v codespell > /dev/null; then\n fi\n \n IGNORE_WORDS_FILE=test/lint/lint-spelling.ignore-words.txt\n-if ! codespell --check-filenames --disable-colors --quiet-level=7 --ignore-words=${IGNORE_WORDS_FILE} $(git ls-files -- \":(exclude)build-aux/m4/\" \":(exclude)contrib/seeds/*.txt\" \":(exclude)depends/\" \":(exclude)doc/release-notes/\" \":(exclude)src/leveldb/\" \":(exclude)src/qt/locale/\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\"); then\n+if ! codespell --check-filenames --disable-colors --quiet-level=7 --ignore-words=${IGNORE_WORDS_FILE} $(git ls-files -- \":(exclude)build-aux/m4/\" \":(exclude)contrib/seeds/*.txt\" \":(exclude)depends/\" \":(exclude)doc/release-notes/\" \":(exclude)src/leveldb/\" \":(exclude)src/qt/locale/\" \":(exclude)src/qt/*.qrc\" \":(exclude)src/secp256k1/\" \":(exclude)src/univalue/\"); then\n     echo \"^ Warning: codespell identified likely spelling errors. Any false positives? Add them to the list of ignored words in ${IGNORE_WORDS_FILE}\"\n fi"
      }
    ]
  }
]