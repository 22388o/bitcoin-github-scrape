[
  {
    "sha": "80ba4241a6773590f6b2c18dae758097b5adc02e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MGJhNDI0MWE2NzczNTkwZjZiMmMxOGRhZTc1ODA5N2I1YWRjMDJl",
    "commit": {
      "author": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2019-05-10T01:34:38Z"
      },
      "committer": {
        "name": "Amiti Uttarwar",
        "email": "amiti@uttarwar.org",
        "date": "2019-07-22T19:23:21Z"
      },
      "message": "extract min & max depth onto coin control",
      "tree": {
        "sha": "221e85eabc7339ae597b2e8323bc5134813d7a90",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/221e85eabc7339ae597b2e8323bc5134813d7a90"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/80ba4241a6773590f6b2c18dae758097b5adc02e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEDyTMs1qheCfV4vgL2oHgevGPIpIFAl02DSsACgkQ2oHgevGP\nIpKopg/9HqfPdSFi0quCvd4VF4PQLzdThZKkoegD+sLfSkHyvyLBzfxwJTNAHnxf\n8+n6Clewknpc4SFSxOjGyIwCmCcABPXVCSkFR9xAxmAvlKBDixQbgxqMwEcpiJxs\n2IHWQ0lV+oqxlNJoskzJhqGrz9PmqH+Q414nt/2W9c7pus9wPuPefWNoIJVYIYXy\n+5VoaRVK1wC+SDkjVLxn0AvF+JDz3wd504hhwLpIjRn/2YsKnUR4wuZAuBZvzJX3\nrrqWdBvcgl+ScFV4uTIuCIRCumK1W6VPs3LhnAylqLXbKcgzcnnP07or712onWMY\nf6Ua+2eA6HX+0tzmz7si3EGMdguFAbnGWhicP4fVEDdtuSQplhr1/LcevPmykwfp\naH5r3mtzeUKHdY9iAyw4OKSHPiOPymAxCQHzY/ekqvf70VL/Ud/OM6tU6S8BRo5v\nJfKwwvHoBjhLed4kUFEKsttsGBZ6u6L6tG0K2Dub3jdlPbkLxsJhJYgBOcVBM+Cf\nWle9je4BKbDmDurJl27Q0ynhIMjQ/qDxuURZp8SpDwoHrRUKrG0+qadOHeAjIPcy\nwSk1Gy8NJOQ8NtMfL+HYRyiWmaKmVCjPOCGocGxalzbVMbiSmZ2zvSRGdgSjseiZ\nMsQ7qCrd+Coi93Bb5XsuvmAHZx7PTclJfFCkLTMgK+WPQdH9qzg=\n=vxGW\n-----END PGP SIGNATURE-----",
        "payload": "tree 221e85eabc7339ae597b2e8323bc5134813d7a90\nparent 51a6e2c4192913c9c18507d8dfb3302500b26cc3\nauthor Amiti Uttarwar <amiti@uttarwar.org> 1557452078 -0700\ncommitter Amiti Uttarwar <amiti@uttarwar.org> 1563823401 -0400\n\nextract min & max depth onto coin control\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ba4241a6773590f6b2c18dae758097b5adc02e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/80ba4241a6773590f6b2c18dae758097b5adc02e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/80ba4241a6773590f6b2c18dae758097b5adc02e/comments",
    "author": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "amitiuttarwar",
      "id": 1500952,
      "node_id": "MDQ6VXNlcjE1MDA5NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1500952?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amitiuttarwar",
      "html_url": "https://github.com/amitiuttarwar",
      "followers_url": "https://api.github.com/users/amitiuttarwar/followers",
      "following_url": "https://api.github.com/users/amitiuttarwar/following{/other_user}",
      "gists_url": "https://api.github.com/users/amitiuttarwar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amitiuttarwar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amitiuttarwar/subscriptions",
      "organizations_url": "https://api.github.com/users/amitiuttarwar/orgs",
      "repos_url": "https://api.github.com/users/amitiuttarwar/repos",
      "events_url": "https://api.github.com/users/amitiuttarwar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amitiuttarwar/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51a6e2c4192913c9c18507d8dfb3302500b26cc3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51a6e2c4192913c9c18507d8dfb3302500b26cc3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51a6e2c4192913c9c18507d8dfb3302500b26cc3"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 18,
      "deletions": 6
    },
    "files": [
      {
        "sha": "14513bc9e912e12c51830121ad8cb563e9ecb183",
        "filename": "src/wallet/coincontrol.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/coincontrol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/coincontrol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.cpp?ref=80ba4241a6773590f6b2c18dae758097b5adc02e",
        "patch": "@@ -20,5 +20,7 @@ void CCoinControl::SetNull()\n     m_confirm_target.reset();\n     m_signal_bip125_rbf.reset();\n     m_fee_mode = FeeEstimateMode::UNSET;\n+    m_min_depth = DEFAULT_MIN_DEPTH;\n+    m_max_depth = DEFAULT_MAX_DEPTH;\n }\n "
      },
      {
        "sha": "92a290530cc36abf0fb4e56d844258d9693c7a8f",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 6,
        "deletions": 1,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=80ba4241a6773590f6b2c18dae758097b5adc02e",
        "patch": "@@ -12,6 +12,9 @@\n \n #include <boost/optional.hpp>\n \n+const int DEFAULT_MIN_DEPTH = 0;\n+const int DEFAULT_MAX_DEPTH = 9999999;\n+\n /** Coin Control Features. */\n class CCoinControl\n {\n@@ -39,7 +42,9 @@ class CCoinControl\n     //! Fee estimation mode to control arguments to estimateSmartFee\n     FeeEstimateMode m_fee_mode;\n     //! Minimum chain depth value for coin availability\n-    int m_min_depth{0};\n+    int m_min_depth = DEFAULT_MIN_DEPTH;\n+    //! Maximum chain depth value for coin availability\n+    int m_max_depth = DEFAULT_MAX_DEPTH;\n \n     CCoinControl()\n     {"
      },
      {
        "sha": "5eb5a1f4354949040319275e5ca60369b9f02de2",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=80ba4241a6773590f6b2c18dae758097b5adc02e",
        "patch": "@@ -2877,9 +2877,11 @@ static UniValue listunspent(const JSONRPCRequest& request)\n     {\n         CCoinControl cctl;\n         cctl.m_avoid_address_reuse = false;\n+        cctl.m_min_depth = nMinDepth;\n+        cctl.m_max_depth = nMaxDepth;\n         auto locked_chain = pwallet->chain().lock();\n         LOCK(pwallet->cs_wallet);\n-        pwallet->AvailableCoins(*locked_chain, vecOutputs, !include_unsafe, &cctl, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount, nMinDepth, nMaxDepth);\n+        pwallet->AvailableCoins(*locked_chain, vecOutputs, !include_unsafe, &cctl, nMinimumAmount, nMaximumAmount, nMinimumSumAmount, nMaximumCount);\n     }\n \n     LOCK(pwallet->cs_wallet);"
      },
      {
        "sha": "0abb89d1cde03dc560fbb8c46c4fef7377ee268c",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 3,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=80ba4241a6773590f6b2c18dae758097b5adc02e",
        "patch": "@@ -2423,7 +2423,7 @@ CAmount CWallet::GetAvailableBalance(const CCoinControl* coinControl) const\n     return balance;\n }\n \n-void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput> &vCoins, bool fOnlySafe, const CCoinControl *coinControl, const CAmount &nMinimumAmount, const CAmount &nMaximumAmount, const CAmount &nMinimumSumAmount, const uint64_t nMaximumCount, const int nMinDepth, const int nMaxDepth) const\n+void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe, const CCoinControl* coinControl, const CAmount& nMinimumAmount, const CAmount& nMaximumAmount, const CAmount& nMinimumSumAmount, const uint64_t nMaximumCount) const\n {\n     AssertLockHeld(cs_wallet);\n \n@@ -2432,6 +2432,8 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n     // Either the WALLET_FLAG_AVOID_REUSE flag is not set (in which case we always allow), or we default to avoiding, and only in the case where\n     // a coin control object is provided, and has the avoid address reuse flag set to false, do we allow already used addresses\n     bool allow_used_addresses = !IsWalletFlagSet(WALLET_FLAG_AVOID_REUSE) || (coinControl && !coinControl->m_avoid_address_reuse);\n+    const int min_depth = {coinControl ? coinControl->m_min_depth : DEFAULT_MIN_DEPTH};\n+    const int max_depth = {coinControl ? coinControl->m_max_depth : DEFAULT_MAX_DEPTH};\n \n     for (const auto& entry : mapWallet)\n     {\n@@ -2491,8 +2493,9 @@ void CWallet::AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<\n             continue;\n         }\n \n-        if (nDepth < nMinDepth || nDepth > nMaxDepth)\n+        if (nDepth < min_depth || nDepth > max_depth) {\n             continue;\n+        }\n \n         for (unsigned int i = 0; i < wtx.tx->vout.size(); i++) {\n             if (wtx.tx->vout[i].nValue < nMinimumAmount || wtx.tx->vout[i].nValue > nMaximumAmount)\n@@ -2934,7 +2937,7 @@ bool CWallet::CreateTransaction(interfaces::Chain::Lock& locked_chain, const std\n         LOCK(cs_wallet);\n         {\n             std::vector<COutput> vAvailableCoins;\n-            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0, coin_control.m_min_depth);\n+            AvailableCoins(*locked_chain, vAvailableCoins, true, &coin_control, 1, MAX_MONEY, MAX_MONEY, 0);\n             CoinSelectionParams coin_selection_params; // Parameters for coin selection, init with dummy\n \n             // Create change script that will be used if we need change"
      },
      {
        "sha": "fc192b2bdf9dedd41887fbdc252ef76703218fbe",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/80ba4241a6773590f6b2c18dae758097b5adc02e/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=80ba4241a6773590f6b2c18dae758097b5adc02e",
        "patch": "@@ -970,7 +970,7 @@ class CWallet final : public FillableSigningProvider, private interfaces::Chain:\n     /**\n      * populate vCoins with vector of available COutputs.\n      */\n-    void AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe=true, const CCoinControl *coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0, const int nMinDepth = 0, const int nMaxDepth = 9999999) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    void AvailableCoins(interfaces::Chain::Lock& locked_chain, std::vector<COutput>& vCoins, bool fOnlySafe = true, const CCoinControl* coinControl = nullptr, const CAmount& nMinimumAmount = 1, const CAmount& nMaximumAmount = MAX_MONEY, const CAmount& nMinimumSumAmount = MAX_MONEY, const uint64_t nMaximumCount = 0) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     /**\n      * Return list of available coins and locked coins grouped by non-change output address."
      }
    ]
  }
]