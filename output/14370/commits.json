[
  {
    "sha": "7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YmM2ZGU2YWY1N2QwOWE3ZTFmNmRmZjFmZTIyOTBiYzEwMWIzYWIx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-10-02T16:24:38Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2018-10-08T07:16:04Z"
      },
      "message": "Allow values quoting in config files\n\nThe config file values can be surrounded by quotation marks. This allows\nfor explicit using of whitespaces (e.g. in paths).",
      "tree": {
        "sha": "79b317cdc04245e9fb6091750ebd12df6474070d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/79b317cdc04245e9fb6091750ebd12df6474070d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAlu7BlEACgkQQQEIES5+\nqB8V/RAAtHBOccTtyEW8rtr2KAAy3iu74x7Dy5QhoTeIxD0xgIzDwU9IAQ5ZejpZ\nuvV/dx4+AZvQpobCPUh0ireXMtaoLs2Mfoh3T41oJXMANf9Zz0WglRYlbEnFTd2U\n0uOB8vXqM+KI9wTwH8rJINFjyN1AnliE+IenvjjynBvh0yd6o7ti2M6BcTzID/Ps\nclyjRX0zTBq9PyT9w0YXfgwyB21J50l3AEkX1QVqT9QAhkoD0/3H6Nrw84DHVPCd\nk15UNANP6IY4WSsDDOp0Mvzx2g/j7bNNRSwEEQkZKEuXTEgRcB7X16zy8cunqIca\nq3PGJSo4RpRXdbEnpqcM+u/Oi7QyprjaFRjw7b129YLjljkwUDY/46MuQeDPMhpG\n3uyw8vbzYHyP5+Mzs3Yp4ZkhI2YZYhsPibBqW7xxDhEk/Mu+2HnpzEODRBdVG0DU\nABf/5dmdb95B61GCNckbm6jBEExZjapfg3mcC9uD1IBUsIjnzgSP1Gha07+auiLo\nDfd98y2/z7uDcO8ECZecuHkLzAjpCJEsp+4/7FD11Ft7xLDBZ/9D5xvqSW1AcPkz\nbV4ri72xq5GCHktNcbgQrU8X55GuOwcG62ie8iZHf7xoKTYH3TEqu+pQO6FZujFR\nEA2TDWCQ4+ExOrsd88f6FBomKVgV5eue+/524FTzowthfKBQZos=\n=rmuR\n-----END PGP SIGNATURE-----",
        "payload": "tree 79b317cdc04245e9fb6091750ebd12df6474070d\nparent 1e8f88e071019907785b260477bd359bef6f9a8f\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1538497478 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1538982964 +0300\n\nAllow values quoting in config files\n\nThe config file values can be surrounded by quotation marks. This allows\nfor explicit using of whitespaces (e.g. in paths).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1e8f88e071019907785b260477bd359bef6f9a8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1e8f88e071019907785b260477bd359bef6f9a8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1e8f88e071019907785b260477bd359bef6f9a8f"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "d6fa44ca39d81e159f4cd38019297d7e4a52c59b",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=7bc6de6af57d09a7e1f6dff1fe2290bc101b3ab1",
        "patch": "@@ -839,6 +839,9 @@ static bool GetConfigOptions(std::istream& stream, std::string& error, std::vect\n             } else if ((pos = str.find('=')) != std::string::npos) {\n                 std::string name = prefix + TrimString(str.substr(0, pos), pattern);\n                 std::string value = TrimString(str.substr(pos + 1), pattern);\n+                if (*value.begin() == '\"' && *value.rbegin() == '\"') {\n+                    value = value.substr(1, value.size() - 2);\n+                }\n                 options.emplace_back(name, value);\n             } else {\n                 error = strprintf(\"parse error on line %i: %s\", linenr, str);"
      }
    ]
  }
]