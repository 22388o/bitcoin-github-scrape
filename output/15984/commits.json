[
  {
    "sha": "fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWQ1NmVmNWRiZjlmZDIzYWFkNGM3MjdmNDU4MzFiZTlmN2JmMmQ3",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-08T19:45:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-05-08T20:29:47Z"
      },
      "message": "net: Remove -whitelistrelay",
      "tree": {
        "sha": "7ce25957c991e0faa7d67646ff388d276247c349",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ce25957c991e0faa7d67646ff388d276247c349"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiS9gv/YJQ+J1pCjT9PR5YE+C5YZaG5VGVPeqtW/bfV5Fxs0DEg23F1JcvxTzlR\nmABanv2fuD/H2cLhzJTTyqUG0SvTeOUxir5lvRpoUPy03yC06ModAIgFp+OnhOZv\nA5ZApx32txrUIros5Yu+ilHWF83Ngq62WM/iE1kDR4JsNGGs3SBe6CUdhxibeRY6\nSlzS1UoKMIESi5+kOu7qE0Th7uWgODuPaM4ZtgEglZZ2RZYBLrUUgjxKL0gT+EwB\nNrRaYy0O1roS3jMOl0sdxeyPor3ZkahRjEXqxdVYUAxznA6y86tNWE9awnT76Ylz\nTZgHpNpnePWVHG0wLlHM8Fuu5gKpAgF3+J/CneYP5lC1G0BCVMvdsLTFD7EVrk9M\nRz2gDZZ7mOI43jrvK+HDWTcvIsitGhLBFrMeNkvy0Wxn9jeMERjR6MK2hOzdMR6l\n0rJnTE8MXVp9WQtw6d2WHGF0gOfNBblZMlVqj9yR589BvBZHasQ9Md/YH3gnu3hj\nvGpHsL1N\n=Uoo7\n-----END PGP SIGNATURE-----",
        "payload": "tree 7ce25957c991e0faa7d67646ff388d276247c349\nparent 08788ce1701aed00fd2946f9a3b3e1f83526d4d2\nauthor MarcoFalke <falke.marco@gmail.com> 1557344714 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1557347387 -0400\n\nnet: Remove -whitelistrelay\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "08788ce1701aed00fd2946f9a3b3e1f83526d4d2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/08788ce1701aed00fd2946f9a3b3e1f83526d4d2",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/08788ce1701aed00fd2946f9a3b3e1f83526d4d2"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 6,
      "deletions": 27
    },
    "files": [
      {
        "sha": "632c40a4a8044a21234332c95a66a95d64242eb5",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 15,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
        "patch": "@@ -383,7 +383,7 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-blocksdir=<dir>\", \"Specify blocks directory (default: <datadir>/blocks)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blocknotify=<cmd>\", \"Execute command when the best block changes (%s in cmd is replaced by block hash)\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-blockreconstructionextratxn=<n>\", strprintf(\"Extra transactions to keep in memory for compact block reconstructions (default: %u)\", DEFAULT_BLOCK_RECONSTRUCTION_EXTRA_TXN), false, OptionsCategory::OPTIONS);\n-    gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to operate in a blocks only mode (default: %u)\", DEFAULT_BLOCKSONLY), true, OptionsCategory::OPTIONS);\n+    gArgs.AddArg(\"-blocksonly\", strprintf(\"Whether to operate in a blocks only mode. Ignored for whitelisted peers. (default: %u)\", DEFAULT_BLOCKSONLY), true, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-conf=<file>\", strprintf(\"Specify configuration file. Relative paths will be prefixed by datadir location. (default: %s)\", BITCOIN_CONF_FILENAME), false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-datadir=<dir>\", \"Specify data directory\", false, OptionsCategory::OPTIONS);\n     gArgs.AddArg(\"-dbbatchsize\", strprintf(\"Maximum database write batch size in bytes (default: %u)\", nDefaultDbBatchSize), true, OptionsCategory::OPTIONS);\n@@ -529,8 +529,6 @@ void SetupServerArgs()\n     gArgs.AddArg(\"-minrelaytxfee=<amt>\", strprintf(\"Fees (in %s/kB) smaller than this are considered zero fee for relaying, mining and transaction creation (default: %s)\",\n         CURRENCY_UNIT, FormatMoney(DEFAULT_MIN_RELAY_TX_FEE)), false, OptionsCategory::NODE_RELAY);\n     gArgs.AddArg(\"-whitelistforcerelay\", strprintf(\"Force relay of transactions from whitelisted peers even if the transactions were already in the mempool or violate local relay policy (default: %d)\", DEFAULT_WHITELISTFORCERELAY), false, OptionsCategory::NODE_RELAY);\n-    gArgs.AddArg(\"-whitelistrelay\", strprintf(\"Accept relayed transactions received from whitelisted peers even when not relaying transactions (default: %d)\", DEFAULT_WHITELISTRELAY), false, OptionsCategory::NODE_RELAY);\n-\n \n     gArgs.AddArg(\"-blockmaxweight=<n>\", strprintf(\"Set maximum BIP141 block weight (default: %d)\", DEFAULT_BLOCK_MAX_WEIGHT), false, OptionsCategory::BLOCK_CREATION);\n     gArgs.AddArg(\"-blockmintxfee=<amt>\", strprintf(\"Set lowest fee rate (in %s/kB) for transactions to be included in block creation. (default: %s)\", CURRENCY_UNIT, FormatMoney(DEFAULT_BLOCK_MIN_TX_FEE)), false, OptionsCategory::BLOCK_CREATION);\n@@ -826,18 +824,6 @@ void InitParameterInteraction()\n         if (gArgs.SoftSetBoolArg(\"-discover\", false))\n             LogPrintf(\"%s: parameter interaction: -externalip set -> setting -discover=0\\n\", __func__);\n     }\n-\n-    // disable whitelistrelay in blocksonly mode\n-    if (gArgs.GetBoolArg(\"-blocksonly\", DEFAULT_BLOCKSONLY)) {\n-        if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", false))\n-            LogPrintf(\"%s: parameter interaction: -blocksonly=1 -> setting -whitelistrelay=0\\n\", __func__);\n-    }\n-\n-    // Forcing relay from whitelisted hosts implies we will accept relays from them in the first place.\n-    if (gArgs.GetBoolArg(\"-whitelistforcerelay\", DEFAULT_WHITELISTFORCERELAY)) {\n-        if (gArgs.SoftSetBoolArg(\"-whitelistrelay\", true))\n-            LogPrintf(\"%s: parameter interaction: -whitelistforcerelay=1 -> setting -whitelistrelay=1\\n\", __func__);\n-    }\n }\n \n static std::string ResolveErrMsg(const char * const optname, const std::string& strBind)"
      },
      {
        "sha": "e2380d5460e45ff7ae05751df9a6d7ba4f320bde",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 10,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
        "patch": "@@ -2189,12 +2189,6 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             return false;\n         }\n \n-        bool fBlocksOnly = !fRelayTxes;\n-\n-        // Allow whitelisted peers to send data other than blocks in blocks only mode if whitelistrelay is true\n-        if (pfrom->fWhitelisted && gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY))\n-            fBlocksOnly = false;\n-\n         LOCK(cs_main);\n \n         uint32_t nFetchFlags = GetFetchFlags(pfrom);\n@@ -2227,7 +2221,9 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n             else\n             {\n                 pfrom->AddInventoryKnown(inv);\n-                if (fBlocksOnly) {\n+                // Stop processing the inv if\n+                // we are in blocks only mode and the peer is not whitelisted.\n+                if (!fRelayTxes && !pfrom->fWhitelisted) {\n                     LogPrint(BCLog::NET, \"transaction (%s) inv sent in violation of protocol peer=%d\\n\", inv.hash.ToString(), pfrom->GetId());\n                 } else if (!fAlreadyHave && !fImporting && !fReindex && !IsInitialBlockDownload()) {\n                     RequestTx(State(pfrom->GetId()), inv.hash, nNow);\n@@ -2444,9 +2440,8 @@ bool static ProcessMessage(CNode* pfrom, const std::string& strCommand, CDataStr\n \n     if (strCommand == NetMsgType::TX) {\n         // Stop processing the transaction early if\n-        // We are in blocks only mode and peer is either not whitelisted or whitelistrelay is off\n-        if (!fRelayTxes && (!pfrom->fWhitelisted || !gArgs.GetBoolArg(\"-whitelistrelay\", DEFAULT_WHITELISTRELAY)))\n-        {\n+        // we are in blocks only mode and the peer is not whitelisted.\n+        if (!fRelayTxes && !pfrom->fWhitelisted) {\n             LogPrint(BCLog::NET, \"transaction sent in violation of protocol peer=%d\\n\", pfrom->GetId());\n             return true;\n         }"
      },
      {
        "sha": "af6af2411be7aa4a4432daf1730371b20a8808c2",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=fad56ef5dbf9fd23aad4c727f45831be9f7bf2d7",
        "patch": "@@ -47,8 +47,6 @@ struct ChainTxData;\n struct PrecomputedTransactionData;\n struct LockPoints;\n \n-/** Default for -whitelistrelay. */\n-static const bool DEFAULT_WHITELISTRELAY = true;\n /** Default for -whitelistforcerelay. */\n static const bool DEFAULT_WHITELISTFORCERELAY = false;\n /** Default for -minrelaytxfee, minimum relay fee for transactions */"
      }
    ]
  }
]