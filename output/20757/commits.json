[
  {
    "sha": "784a278e872ea498dbc313a5a41a8d9f912adb7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ODRhMjc4ZTg3MmVhNDk4ZGJjMzEzYTVhNDFhOGQ5ZjkxMmFkYjdj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-12-23T20:13:44Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-25T20:31:05Z"
      },
      "message": "doc: update -onlynet help in src/init.cpp",
      "tree": {
        "sha": "ee5408f817f5d0f07173a8ef157374e1e2cc7742",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ee5408f817f5d0f07173a8ef157374e1e2cc7742"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/784a278e872ea498dbc313a5a41a8d9f912adb7c",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAPKokACgkQT1chs9Dj\nkh2u4g//R279mEvjEY9wNnyNqul1Pw/tX4o2wGCWozNC5+PtQjojKJ9PF8ku286B\noKer4ZrI9MLwKS915e1sV30aZfhlGILGaevIqwHCbuhHkH0qJKjXA1FvTtODeaYu\nFpCmZkFq4oo8QuDpNH822avAdO1hUSXpj4JxVmHyYv8/xNs586Ei0CkWxXeHiaWC\nn4rM+uxDewbxWv8DLvq8nYS6Zo60eV9xCC38AtVmEH6u2sGgZJAyn6bTHOFWNsEN\nmDaXgHBGYODi3ZR5LjpPUtuShsmb72tc+ulqx4zBc/VSf4l9GJTQ4Gl5DJ3yoAQZ\n14Ub64tpZ/YVES3GQ1p1drk8UAxkfFI+GzaOlsA1oDgnJbteR5QvESf5RSGETfmr\nP2N5fxoL7kEWcqKtZ/VgO5Fj4yJvAS/aenzp+3JKMHt+AyWy/WHV9MCXBm5YsQyO\nYOhvJnJDbNt7vCAwcyn07ivLYXwJqNS9C4tgQG/jMnKk3hwW/8Ixrj5aToPO/VYq\nQO4tNWPC9sevHm6zCyx9gVglaZtZzRo9KPtOpUpCUpWF0ceSaFgbxVMBeBr77J/c\nmJGuCP3c4WwnqWIcdvZelyUwCpFS9osKVbq/B90Am7SSEWLpZxT7pbAFNL9fIPaa\nk3XaUlaD5ggpU4TLtu54NwVqVuYY7xkiLZrjpTycFcCrtAFHgX0=\n=5of6\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIPpIybxQAd4LA2++HlnvNThAtd5J0yah/HvSqVb5Xzo5CP/wED6EPwZ4Raey\nJ7vxjpkqACUI8SCXWy6j/jWlPIcy3gEgmGspgc3JmRCDxxCo55eiOofYlAjwIJHP\nQlmOHGvUyqptGOEyB8vK68Ce7fbnQpDtX0Yhe4yYCPEEYA8qi/AIOc3f+JXEPOYA\ng9/jDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BBfP594pQaHmHibY2yQUlBrCPEghJs8ary/X0NE5pkXSKFjWPzC3W6m\n0S+6JJL17daisaAI8CCW2nr4znUkUK7VzvHQ1OhLw60wJLzHKJM+GWVn4UXgfAjw\nIOt/9l/FisO+xjuQb8XDp3hzc9JgLjTvlr63meqEKf/xCPEEYA8qi/AIjP6I4pT5\neX4Ag9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2Fs\nbC5jb23/8BCbI7DP9ZI8JW2vCDXoT3jxCPAgX73n4lTyH26U9CWgfwEP1pDUDFSs\naEpJ+fEEcuUIxJUI8CCBsHPYXByf5IveY9r8m2Mb41iPoosiCWBH8zTnWsfBugjx\nBGAPKovwCICQ+PkdVUsLAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BD3w62anknrfUP8FyR4tXzfCPAg2tRxTXCLGwrMgXI3D5oL\n759dq7PsU1rQ2bBeNNWBGt0I8SDMCp7cXHcoLXjhdxX1TZZzpVaoivoIb3ry5wOg\nMOgnYgjxBGAPKorwCKVTfGMkWDf2AIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0\nYy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ee5408f817f5d0f07173a8ef157374e1e2cc7742\nparent 52d84a45e2fa3def71853cd31d5582ae31ea85d3\nauthor Jon Atack <jon@atack.com> 1608754424 +0100\ncommitter Jon Atack <jon@atack.com> 1611606665 +0100\n\ndoc: update -onlynet help in src/init.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/784a278e872ea498dbc313a5a41a8d9f912adb7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/784a278e872ea498dbc313a5a41a8d9f912adb7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/784a278e872ea498dbc313a5a41a8d9f912adb7c/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52d84a45e2fa3def71853cd31d5582ae31ea85d3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52d84a45e2fa3def71853cd31d5582ae31ea85d3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52d84a45e2fa3def71853cd31d5582ae31ea85d3"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "64bbf8988dae26419941554d88f9db269abcaf34",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/784a278e872ea498dbc313a5a41a8d9f912adb7c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/784a278e872ea498dbc313a5a41a8d9f912adb7c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=784a278e872ea498dbc313a5a41a8d9f912adb7c",
        "patch": "@@ -448,7 +448,7 @@ void SetupServerArgs(NodeContext& node)\n     argsman.AddArg(\"-maxtimeadjustment\", strprintf(\"Maximum allowed median peer time offset adjustment. Local perspective of time may be influenced by peers forward or backward by this amount. (default: %u seconds)\", DEFAULT_MAX_TIME_ADJUSTMENT), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-maxuploadtarget=<n>\", strprintf(\"Tries to keep outbound traffic under the given target (in MiB per 24h). Limit does not apply to peers with 'download' permission. 0 = no limit (default: %d)\", DEFAULT_MAX_UPLOAD_TARGET), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-onion=<ip:port>\", \"Use separate SOCKS5 proxy to reach peers via Tor onion services, set -noonion to disable (default: -proxy)\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n-    argsman.AddArg(\"-onlynet=<net>\", \"Make outgoing connections only through network <net> (ipv4, ipv6 or onion). Incoming connections are not affected by this option. This option can be specified multiple times to allow multiple networks.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n+    argsman.AddArg(\"-onlynet=<net>\", \"Make outgoing connections only through network <net> (ipv4, ipv6 or onion). Incoming connections are not affected by this option. This option can be specified multiple times to allow multiple networks. Warning: if it is used with ipv4 or ipv6 but not onion and the -onion or -proxy option is set, then outbound onion connections will still be made; use -noonion or -onion=0 to disable outbound onion connections in this case.\", ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerbloomfilters\", strprintf(\"Support filtering of blocks and transaction with bloom filters (default: %u)\", DEFAULT_PEERBLOOMFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-peerblockfilters\", strprintf(\"Serve compact block filters to peers per BIP 157 (default: %u)\", DEFAULT_PEERBLOCKFILTERS), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);\n     argsman.AddArg(\"-permitbaremultisig\", strprintf(\"Relay non-P2SH multisig (default: %u)\", DEFAULT_PERMIT_BAREMULTISIG), ArgsManager::ALLOW_ANY, OptionsCategory::CONNECTION);"
      }
    ]
  },
  {
    "sha": "dfc4ce12735c405519de9e35b150052af23924a5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkZmM0Y2UxMjczNWM0MDU1MTlkZTllMzViMTUwMDUyYWYyMzkyNGE1",
    "commit": {
      "author": {
        "name": "saibato",
        "email": "saibato.naga@pm.me",
        "date": "2020-06-26T17:54:09Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-25T20:31:08Z"
      },
      "message": "doc: update -proxy, -onion and -onlynet info in tor.md\n\nImprove the description of what these options do with regards to\ntor or network traffic.\n\nSome of the wording is from a laanwj review in PR 19358.",
      "tree": {
        "sha": "5d7a7cf74345c6a126007d1d3990891e7ad25bd3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5d7a7cf74345c6a126007d1d3990891e7ad25bd3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dfc4ce12735c405519de9e35b150052af23924a5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAPKowACgkQT1chs9Dj\nkh1ABBAAw750YAjWqv05rEe4BCzNxuDpScmnulB8Ky80dgDBSoZaRa8gvHArVb9I\nns40fxiyfuc+XGWD6SYnM6WA0cObAOYKrUbIaAi5oHnTUB+Vp4Ba/2BI0bD4u3Tw\n+ulYw8xxQjY6yiafV57lrTGosiKoBulu8uFXhCK2rHLuNcDa+BLQV5W3BCrSrxn/\nJO3FRm/wIF+DHM73q48SCWaYcZ6j3OG7RdAizAuPqsF4vt7TYehfNybXdVajOxfV\nVfUc+Pf0U0rYRam4V67FWR/ivMQzX5XMeESB6OviBf/dAtXtP54px113uVM4o4vL\nPqO0t7980EZ3o7D71KGxdFHeKOLBaJ9EiPtPgdAfUtL/eYBWNg2wBSd+p3fslE95\n/No+lWaDzstyg2QnFnGhy5gp5htbr47bwBzqYS/r/79EXQhx3MwcAeEJ5dY5qK71\nsw+2cN9vn58LCxS6musLWQMpAILOhBakFiSQSC8kZUDb1j8k5kSAJPaMR+odtABL\nSPjicgqoqhmv/rmS/rlkBD9EIwkZL4AHd1w27enR4MMIqzW4qVdYMxerEOMUzVjv\nsNPXPQou31iiQHfoG/yawx9bIF4GIBAkpo2IMhufGV3DtmY/jsFdZnF3h4dYjpFI\niCq1lf3iKSZUiub+o96fzBRpWuFM1Fjzds37rGPUWN16q+DMWr0=\n=bSh5\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIGm4gsPpympdf2tkuw+hMx9usohT+Akm0P+6+7Z05D78CP/wEDagiQeH0uEO\nPXcq9fVHqa0I8QRgDyqN8AiQ2OL5O7DznQCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEGJnVLsu5x7XSzBu4sAcGKkI\n8QRgDyqN8AjU7I3iZIgZsACD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVu\nZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEM6p7x2L0rHHKd1QDY7H6R0I8CAGs1QU\n0vSsHs9JAOi/7MhUFZBdbVzdQv1iQ/wtFypTLQjwIMJ37Wrj/Yl08JS8eihh1D0+\nhi+nlt0oVMkPjupwD/PjCPEEYA8qjfAItRE88IwGRe0Ag9/jDS75DI4uLWh0dHBz\nOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ6ewmMN3t\nsw68K1HW1O0F4gjwILwq69j45iwV2CzjFxTbru/K30UcZtcUnfcJ22Ev7S0hCPAg\nqckWf++rmaUZZ9npd1kGUnPJOajrw5IDNrABerWtbzoI8QRgDyqO8AisLY/ZPPDw\nYwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5d7a7cf74345c6a126007d1d3990891e7ad25bd3\nparent 784a278e872ea498dbc313a5a41a8d9f912adb7c\nauthor saibato <saibato.naga@pm.me> 1593194049 +0000\ncommitter Jon Atack <jon@atack.com> 1611606668 +0100\n\ndoc: update -proxy, -onion and -onlynet info in tor.md\n\nImprove the description of what these options do with regards to\ntor or network traffic.\n\nSome of the wording is from a laanwj review in PR 19358.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfc4ce12735c405519de9e35b150052af23924a5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dfc4ce12735c405519de9e35b150052af23924a5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfc4ce12735c405519de9e35b150052af23924a5/comments",
    "author": {
      "login": "Saibato",
      "id": 34917548,
      "node_id": "MDQ6VXNlcjM0OTE3NTQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/34917548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Saibato",
      "html_url": "https://github.com/Saibato",
      "followers_url": "https://api.github.com/users/Saibato/followers",
      "following_url": "https://api.github.com/users/Saibato/following{/other_user}",
      "gists_url": "https://api.github.com/users/Saibato/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Saibato/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Saibato/subscriptions",
      "organizations_url": "https://api.github.com/users/Saibato/orgs",
      "repos_url": "https://api.github.com/users/Saibato/repos",
      "events_url": "https://api.github.com/users/Saibato/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Saibato/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "784a278e872ea498dbc313a5a41a8d9f912adb7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/784a278e872ea498dbc313a5a41a8d9f912adb7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/784a278e872ea498dbc313a5a41a8d9f912adb7c"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 11,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e70c2ebd645b4ca06fda704edfb600bb8e16e960",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 11,
        "deletions": 2,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dfc4ce12735c405519de9e35b150052af23924a5/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dfc4ce12735c405519de9e35b150052af23924a5/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=dfc4ce12735c405519de9e35b150052af23924a5",
        "patch": "@@ -23,10 +23,15 @@ outgoing connections, but more is possible.\n \n \t-proxy=ip:port  Set the proxy server. If SOCKS5 is selected (default), this proxy\n \t                server will be used to try to reach .onion addresses as well.\n+\t                You need to use -noonion or -onion=0 to explicitly disable\n+\t                outbound access to onion services.\n \n \t-onion=ip:port  Set the proxy server to use for Tor onion services. You do not\n-\t                need to set this if it's the same as -proxy. You can use -noonion\n+\t                need to set this if it's the same as -proxy. You can use -onion=0\n \t                to explicitly disable access to onion services.\n+\t                Note: Only the -proxy option sets the proxy for DNS requests;\n+\t                with -onion they will not route over Tor, so use -proxy if you\n+\t                have privacy concerns.\n \n \t-listen         When using -proxy, listening is disabled by default. If you want\n \t                to run an onion service (see next section), you'll need to enable\n@@ -40,7 +45,11 @@ outgoing connections, but more is possible.\n \t-onlynet=onion  Make outgoing connections only to .onion addresses. Incoming\n \t                connections are not affected by this option. This option can be\n \t                specified multiple times to allow multiple network types, e.g.\n-\t                ipv4, ipv6, or onion.\n+\t                ipv4, ipv6 or onion. If you use this option with values other\n+\t                than onion you *cannot* disable onion connections; outgoing onion\n+\t                connections will be enabled when you use -proxy or -onion. Use\n+\t                -noonion or -onion=0 if you want to be sure there are no outbound\n+\t                onion connections over the default proxy or your defined -proxy.\n \n In a typical situation, this suffices to run behind a Tor proxy:\n "
      }
    ]
  },
  {
    "sha": "9af99b6f393e1d2463fc66f68a23acc691de394d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5YWY5OWI2ZjM5M2UxZDI0NjNmYzY2ZjY4YTIzYWNjNjkxZGUzOTRk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-10-15T10:24:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-25T20:31:10Z"
      },
      "message": "doc: update/improve automatic tor section of tor.md",
      "tree": {
        "sha": "91e8bccee29eefa0ef64282b1874700e8baf7e68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91e8bccee29eefa0ef64282b1874700e8baf7e68"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9af99b6f393e1d2463fc66f68a23acc691de394d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAPKo4ACgkQT1chs9Dj\nkh01OQ/9EbJjwJuc/x+5aR+5UG4bm6J4cyx5WJsDTtwGOraeoK6Ed1SkR9QeIvfr\nrA52j5dK3GNxt3Jm4TS+/J9p5N0dp3LN9n6/N2fyT+Hw+wrtMnErvk+Fp0llOAY/\n+BppoJnrnbuqgZTCp9p6lo9QfKkL9EIP5pJoVixkffRyz0Yqlm3rLa8fSCVEypob\nIMglYmz+bjLTcLnrgDNXKCeYNIhFV5H42ZKu251XplyAPHaRNjY2widUCdIoRXMz\nkDFUAgCroMyowhCnU7M3TKgmi01/zp3tudxtKsDAyfY7rgtaEiJb8+O0ApH35KGB\nTZah/5w8C5YBySyIHfSOL3Buf1lWaIie3A/AgkxHVtJ+U9+mnYxQjYYbjeZyMqRb\n/P8+Ux95PfFCB8DaVSf/Rea/FHwIc5Lg2zLoEucij4cXB4FPH+Ew67JPD/pJx0OF\nMM2eGMquAVqht9/782v1muWl5NXBsy3GY8o+iA0780EcPAsUBeAwDrTzMnqFvnjR\nc9fHCxNnJjRmVwwqY6r6nUy5zTVjjrSc2bTiUoTi4Eauhy6DtPRC084u14vjq5kE\nhXXHBR6YCHOYCTiGZjKg4eSJoHBu3KnL0kPyWwecI4ndcua2bZTREAHQ35pCOb4o\n+uS6jghshvZ1eIUFJ/WKwvbTh2d/T6OjFSFC7IdB6oKKjF8iaDc=\n=EJN4\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIHOnNRu+9BuFRdrMkeomJDBTWE3duSnnuP+WuMSy+5W3CP/wEE94ivdPtFS9\nOnGYPkyw6OII8SBRY9UUvs1K1hEeHIrCYtJ2JuNZCoxVjcpSSCtwDRId5QjxIFuw\nqIwM4lh9P6rP4eyd85N2CHfevbooSaf/7gRePeHKCPEEYA8qj/AILrNexFE/bcEA\ng9/jDS75DI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3Rh\nbXBzLm9yZ//wEF55tMMrmFRxBJWktCuReZcI8QRgDyqQ8Ah2wNFxDaaLmwCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/w\nEGukcqia3DgJTvJfUfO39RcI8CDHGa+hZAziibXNB+tcv3AmSD+2yA6Q68hN26zN\nGMizuAjwIBY79QAE3knPzYRop7kbFTdOsHGQVNkS7G+606taZeAZCPAgJADXtN4g\nW+/FrwRQ8eYL9sHGVIt79XG5vWPo0Iz+W7sI8CCwYQDEyQx31RzZe21eWu7bNKBu\nxaxx0KdQ+mH6iUa27QjxBGAPKpHwCGp7ckr0t7ByAIPf4w0u+QyOLCtodHRwczov\nL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BBw729Gztl63HKY\nal3aRYAxCPEg7/kFsqjEypwqzcAYe0PtBbc7CaFCgVdNmvhAO2E7PxwI8SAreTXi\nkL/4XeXeKXPFqkqPveaCT3eYocUkfwZ5BXADPAjxBGAPKpDwCO7x9FxgZk55AIPf\n4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 91e8bccee29eefa0ef64282b1874700e8baf7e68\nparent dfc4ce12735c405519de9e35b150052af23924a5\nauthor Jon Atack <jon@atack.com> 1602757447 +0200\ncommitter Jon Atack <jon@atack.com> 1611606670 +0100\n\ndoc: update/improve automatic tor section of tor.md\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af99b6f393e1d2463fc66f68a23acc691de394d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9af99b6f393e1d2463fc66f68a23acc691de394d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af99b6f393e1d2463fc66f68a23acc691de394d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "dfc4ce12735c405519de9e35b150052af23924a5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dfc4ce12735c405519de9e35b150052af23924a5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/dfc4ce12735c405519de9e35b150052af23924a5"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 88,
      "deletions": 31
    },
    "files": [
      {
        "sha": "c72f16de5e7b2a67595e9fc1cb0f61809de88529",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 88,
        "deletions": 31,
        "changes": 119,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9af99b6f393e1d2463fc66f68a23acc691de394d/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9af99b6f393e1d2463fc66f68a23acc691de394d/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=9af99b6f393e1d2463fc66f68a23acc691de394d",
        "patch": "@@ -117,37 +117,94 @@ for normal IPv4/IPv6 communication, use:\n \n ## 3. Automatically create a Bitcoin Core onion service\n \n-Starting with Tor version 0.2.7.1 it is possible, through Tor's control socket\n-API, to create and destroy 'ephemeral' onion services programmatically.\n-Bitcoin Core has been updated to make use of this.\n-\n-This means that if Tor is running (and proper authentication has been configured),\n-Bitcoin Core automatically creates an onion service to listen on. This will positively\n-affect the number of available .onion nodes.\n-\n-This new feature is enabled by default if Bitcoin Core is listening (`-listen`), and\n-requires a Tor connection to work. It can be explicitly disabled with `-listenonion=0`\n-and, if not disabled, configured using the `-torcontrol` and `-torpassword` settings.\n-To show verbose debugging information, pass `-debug=tor`.\n-\n-Connecting to Tor's control socket API requires one of two authentication methods to be\n-configured. It also requires the control socket to be enabled, e.g. put `ControlPort 9051`\n-in `torrc` config file. For cookie authentication the user running bitcoind must have read\n-access to the `CookieAuthFile` specified in Tor configuration. In some cases this is\n-preconfigured and the creation of an onion service is automatic. If permission problems\n-are seen with `-debug=tor` they can be resolved by adding both the user running Tor and\n-the user running bitcoind to the same group and setting permissions appropriately. On\n-Debian-based systems the user running bitcoind can be added to the debian-tor group,\n-which has the appropriate permissions. Before starting bitcoind you will need to re-login\n-to allow debian-tor group to be applied. Otherwise you will see the following notice: \"tor:\n-Authentication cookie /run/tor/control.authcookie could not be opened (check permissions)\"\n-on debug.log.\n-\n-An alternative authentication method is the use\n-of the `-torpassword=password` option. The `password` is the clear text form that\n-was used when generating the hashed password for the `HashedControlPassword` option\n-in the tor configuration file. The hashed password can be obtained with the command\n-`tor --hash-password password` (read the tor manual for more details).\n+Bitcoin Core makes use of Tor's control socket API to create and destroy\n+ephemeral onion services programmatically. This means that if Tor is running and\n+proper authentication has been configured, Bitcoin Core automatically creates an\n+onion service to listen on. The goal is to increase the number of available\n+onion nodes.\n+\n+This feature is enabled by default if Bitcoin Core is listening (`-listen`) and\n+it requires a Tor connection to work. It can be explicitly disabled with\n+`-listenonion=0`. If it is not disabled, it can be configured using the\n+`-torcontrol` and `-torpassword` settings.\n+\n+To see verbose Tor information in the bitcoind debug log, pass `-debug=tor`.\n+\n+### Control Port\n+\n+You may need to set up the Tor Control Port. On Linux distributions there may be\n+some or all of the following settings in `/etc/tor/torrc`, generally commented\n+out by default (if not, add them):\n+\n+```\n+ControlPort 9051\n+CookieAuthentication 1\n+CookieAuthFileGroupReadable 1\n+```\n+\n+Add or uncomment those, save, and restart Tor (usually `systemctl restart tor`\n+or `sudo systemctl restart tor` on most systemd-based systems, including recent\n+Debian and Ubuntu, or just restart the computer).\n+\n+On some systems (such as Arch Linux), you may also need to add the following\n+line:\n+\n+```\n+DataDirectoryGroupReadable 1\n+```\n+\n+### Authentication\n+\n+Connecting to Tor's control socket API requires one of two authentication\n+methods to be configured: cookie authentication or bitcoind's `-torpassword`\n+configuration option.\n+\n+#### Cookie authentication\n+\n+For cookie authentication, the user running bitcoind must have read access to\n+the `CookieAuthFile` specified in the Tor configuration. In some cases this is\n+preconfigured and the creation of an onion service is automatic. Don't forget to\n+use the `-debug=tor` bitcoind configuration option to enable Tor debug logging.\n+\n+If a permissions problem is seen in the debug log, e.g. `tor: Authentication\n+cookie /run/tor/control.authcookie could not be opened (check permissions)`, it\n+can be resolved by adding both the user running Tor and the user running\n+bitcoind to the same Tor group and setting permissions appropriately.\n+\n+On Debian-derived systems, the Tor group will likely be `debian-tor` and one way\n+to verify could be to list the groups and grep for a \"tor\" group name:\n+\n+```\n+getent group | cut -d: -f1 | grep -i tor\n+```\n+\n+You can also check the group of the cookie file. On most Linux systems, the Tor\n+auth cookie will usually be `/run/tor/control.authcookie`:\n+\n+```\n+stat -c '%G' /run/tor/control.authcookie\n+```\n+\n+Once you have determined the `${TORGROUP}` and selected the `${USER}` that will\n+run bitcoind, run this as root:\n+\n+```\n+usermod -a -G ${TORGROUP} ${USER}\n+```\n+\n+Then restart the computer (or log out) and log in as the `${USER}` that will run\n+bitcoind.\n+\n+#### `torpassword` authentication\n+\n+For the `-torpassword=password` option, the password is the clear text form that\n+was used when generating the hashed password for the `HashedControlPassword`\n+option in the Tor configuration file.\n+\n+The hashed password can be obtained with the command `tor --hash-password\n+password` (refer to the [Tor Dev\n+Manual](https://2019.www.torproject.org/docs/tor-manual.html.en) for more\n+details).\n \n ## 4. Privacy recommendations\n "
      }
    ]
  },
  {
    "sha": "193f9a9c975b612454a1f8121c09ef1e68d56dc1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxOTNmOWE5Yzk3NWI2MTI0NTRhMWY4MTIxYzA5ZWYxZTY4ZDU2ZGMx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-26T14:11:13Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-01-26T14:13:29Z"
      },
      "message": "doc: update tor.md manual config, move after automatic config",
      "tree": {
        "sha": "ab2d05516ba29c37e1139b168aeee3c7487d2c82",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ab2d05516ba29c37e1139b168aeee3c7487d2c82"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/193f9a9c975b612454a1f8121c09ef1e68d56dc1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmAQI6EACgkQT1chs9Dj\nkh0NhQ/9EiEbIRQrpc3f8lhFbhs0iKUltK+aXc2fTAdd1vmv2j2ldrUCNFKoi21C\nx9SPgfwTSK4RjHFM6sFaG8IEb6UhqjUSdXO4fIn1YWM5pY0GZecL5lTxildo+Ut9\nE67a9M90Vpj+L6anw6Yq3LG4Vjx75UMCxd/q7miy/hOp+TEAGYQyQYrBp7/3GKRx\nIG+khOxxKRDOUoljIusMFN5hLahVCcBdO75lTPjFR2iPG0cDddZPIGEEFPdn8xjL\nojn1qoU7AzmrOAazoBRw6URcFU4J7XO/4WfoW+Nq1wGnRv3aZu94pdwZH/2y47bU\niraMslLvQfJCOk2qxMYI8JsLCD/iCeTHhqS8bQiaEAKRIo0h0pSFlq0zB4L/njq0\nKhI+cmz6iOCBsM30edHn2Q6hwHd0+HtPLRFEvTOKrzmKsvWwPksUXxcg93POAq0v\nAngj3dR8x0awzd6E5C1PRz2rRtKDZ47DLVwkFUofEvkS43SmAu36d6JiTIazqh1P\njugYGiAYqFHZKKyXV54ckCpmW6f5TQCNEu0vFZJSDyyzTTZbCZ1YMOXhGB3GT4A2\netX4T89sZzNABHJe9hT79tOXDAYVwmjxQpGTrl1rSEUZhDIEBPTchCFfPO4en+KY\nY2iwcCLty+jvlUyMCvAHtG9JoWnjlMaMd0extx6+XnJdzwnHntc=\n=hjpv\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJSeJ7egPaFxnc3bbRL+kWluxWObdcXYTvD23Mvs6hEtCP/wEBy3nJqocz/v\ncwadJgorYdQI8SDNlQW/rNP+3TBjEynMh0qMoFYu6J6NbmtgMqkM/LiuVQjxBGAQ\nI6LwCJrr9NZvphHUAIPf4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRh\nci5vcGVudGltZXN0YW1wcy5vcmf/8BCABpmyNrXzoyfqpJxUlqxUCPEgYiNrVkIi\nops4YnRS3cQ5urD7jmxNe8es7YqLW5UVMOQI8QRgECOi8AjJ4aU3P/Kd+gCD3+MN\nLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/w\nEKgSM/kFk1xKzI2Up1+BhAYI8SACzDm0fQRTare0Fcjn6WW5RbRc6LVWntiblU0M\n3xHukwjxBGAQI6LwCCjn7bEJxHaFAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn8BDtFGt354jhu/nABNkGYaclCPEg\n50Ie+3Xp6abLPiXUHJrtdtuvK2002TyJKGx6S8u4x0AI8QRgECOj8Ah0Zh29MUig\nnwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIuY2F0YWxsYXh5LmNvbQ==\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree ab2d05516ba29c37e1139b168aeee3c7487d2c82\nparent 9af99b6f393e1d2463fc66f68a23acc691de394d\nauthor Jon Atack <jon@atack.com> 1611670273 +0100\ncommitter Jon Atack <jon@atack.com> 1611670409 +0100\n\ndoc: update tor.md manual config, move after automatic config\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f9a9c975b612454a1f8121c09ef1e68d56dc1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/193f9a9c975b612454a1f8121c09ef1e68d56dc1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/193f9a9c975b612454a1f8121c09ef1e68d56dc1/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9af99b6f393e1d2463fc66f68a23acc691de394d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9af99b6f393e1d2463fc66f68a23acc691de394d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9af99b6f393e1d2463fc66f68a23acc691de394d"
      }
    ],
    "stats": {
      "total": 128,
      "additions": 63,
      "deletions": 65
    },
    "files": [
      {
        "sha": "8a2aef2d0798f3836692ee07802e45294391e904",
        "filename": "doc/tor.md",
        "status": "modified",
        "additions": 63,
        "deletions": 65,
        "changes": 128,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/193f9a9c975b612454a1f8121c09ef1e68d56dc1/doc/tor.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/193f9a9c975b612454a1f8121c09ef1e68d56dc1/doc/tor.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/tor.md?ref=193f9a9c975b612454a1f8121c09ef1e68d56dc1",
        "patch": "@@ -34,8 +34,8 @@ outgoing connections, but more is possible.\n \t                have privacy concerns.\n \n \t-listen         When using -proxy, listening is disabled by default. If you want\n-\t                to run an onion service (see next section), you'll need to enable\n-\t                it explicitly.\n+\t                to manually configure an onion service (see section 3), you'll\n+\t                need to enable it explicitly.\n \n \t-connect=X      When behind a Tor proxy, you can specify .onion addresses instead\n \t-addnode=X      of IP addresses or hostnames in these parameters. It requires\n@@ -55,67 +55,7 @@ In a typical situation, this suffices to run behind a Tor proxy:\n \n \t./bitcoind -proxy=127.0.0.1:9050\n \n-\n-## 2. Manually create a Bitcoin Core onion service\n-\n-If you configure your Tor system accordingly, it is possible to make your node also\n-reachable from the Tor network. Add these lines to your /etc/tor/torrc (or equivalent\n-config file): *Needed for Tor version 0.2.7.0 and older versions of Tor only. For newer\n-versions of Tor see [Section 3](#3-automatically-listen-on-tor).*\n-\n-\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n-\tHiddenServicePort 8333 127.0.0.1:8334\n-\n-The directory can be different of course, but virtual port numbers should be equal to\n-your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n-should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n-\n-\t-externalip=X   You can tell bitcoin about its publicly reachable addresses using\n-\t                this option, and this can be an onion address. Given the above\n-\t                configuration, you can find your onion address in\n-\t                /var/lib/tor/bitcoin-service/hostname. For connections\n-\t                coming from unroutable addresses (such as 127.0.0.1, where the\n-\t                Tor proxy typically runs), onion addresses are given\n-\t                preference for your node to advertise itself with.\n-\n-\t                You can set multiple local addresses with -externalip. The\n-\t                one that will be rumoured to a particular peer is the most\n-\t                compatible one and also using heuristics, e.g. the address\n-\t                with the most incoming connections, etc.\n-\n-\t-listen         You'll need to enable listening for incoming connections, as this\n-\t                is off by default behind a proxy.\n-\n-\t-discover       When -externalip is specified, no attempt is made to discover local\n-\t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n-\t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n-\t                other addresses using -externalip, or explicitly enable -discover.\n-\t                Note that both addresses of a dual-stack system may be easily\n-\t                linkable using traffic analysis.\n-\n-In a typical situation, where you're only reachable via Tor, this should suffice:\n-\n-\t./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n-\n-(obviously, replace the .onion address with your own). It should be noted that you still\n-listen on all devices and another node could establish a clearnet connection, when knowing\n-your address. To mitigate this, additionally bind the address of your Tor proxy:\n-\n-\t./bitcoind ... -bind=127.0.0.1\n-\n-If you don't care too much about hiding your node, and want to be reachable on IPv4\n-as well, use `discover` instead:\n-\n-\t./bitcoind ... -discover\n-\n-and open port 8333 on your firewall (or use port mapping, i.e., `-upnp` or `-natpmp`).\n-\n-If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n-for normal IPv4/IPv6 communication, use:\n-\n-\t./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n-\n-## 3. Automatically create a Bitcoin Core onion service\n+## 2. Automatically create a Bitcoin Core onion service\n \n Bitcoin Core makes use of Tor's control socket API to create and destroy\n ephemeral onion services programmatically. This means that if Tor is running and\n@@ -206,10 +146,68 @@ password` (refer to the [Tor Dev\n Manual](https://2019.www.torproject.org/docs/tor-manual.html.en) for more\n details).\n \n+\n+## 3. Manually create a Bitcoin Core onion service\n+\n+You can also manually configure your node to be reachable from the Tor network.\n+Add these lines to your `/etc/tor/torrc` (or equivalent config file):\n+\n+\tHiddenServiceDir /var/lib/tor/bitcoin-service/\n+\tHiddenServicePort 8333 127.0.0.1:8334\n+\n+The directory can be different of course, but virtual port numbers should be equal to\n+your bitcoind's P2P listen port (8333 by default), and target addresses and ports\n+should be equal to binding address and port for inbound Tor connections (127.0.0.1:8334 by default).\n+\n+\t-externalip=X   You can tell bitcoin about its publicly reachable addresses using\n+\t                this option, and this can be an onion address. Given the above\n+\t                configuration, you can find your onion address in\n+\t                /var/lib/tor/bitcoin-service/hostname. For connections\n+\t                coming from unroutable addresses (such as 127.0.0.1, where the\n+\t                Tor proxy typically runs), onion addresses are given\n+\t                preference for your node to advertise itself with.\n+\n+\t                You can set multiple local addresses with -externalip. The\n+\t                one that will be rumoured to a particular peer is the most\n+\t                compatible one and also using heuristics, e.g. the address\n+\t                with the most incoming connections, etc.\n+\n+\t-listen         You'll need to enable listening for incoming connections, as this\n+\t                is off by default behind a proxy.\n+\n+\t-discover       When -externalip is specified, no attempt is made to discover local\n+\t                IPv4 or IPv6 addresses. If you want to run a dual stack, reachable\n+\t                from both Tor and IPv4 (or IPv6), you'll need to either pass your\n+\t                other addresses using -externalip, or explicitly enable -discover.\n+\t                Note that both addresses of a dual-stack system may be easily\n+\t                linkable using traffic analysis.\n+\n+In a typical situation, where you're only reachable via Tor, this should suffice:\n+\n+\t./bitcoind -proxy=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -listen\n+\n+(obviously, replace the .onion address with your own). It should be noted that you still\n+listen on all devices and another node could establish a clearnet connection, when knowing\n+your address. To mitigate this, additionally bind the address of your Tor proxy:\n+\n+\t./bitcoind ... -bind=127.0.0.1\n+\n+If you don't care too much about hiding your node, and want to be reachable on IPv4\n+as well, use `discover` instead:\n+\n+\t./bitcoind ... -discover\n+\n+and open port 8333 on your firewall (or use port mapping, i.e., `-upnp` or `-natpmp`).\n+\n+If you only want to use Tor to reach .onion addresses, but not use it as a proxy\n+for normal IPv4/IPv6 communication, use:\n+\n+\t./bitcoind -onion=127.0.0.1:9050 -externalip=7zvj7a2imdgkdbg4f2dryd5rgtrn7upivr5eeij4cicjh65pooxeshid.onion -discover\n+\n ## 4. Privacy recommendations\n \n-- Do not add anything but Bitcoin Core ports to the onion service created in section 2.\n+- Do not add anything but Bitcoin Core ports to the onion service created in section 3.\n   If you run a web service too, create a new onion service for that.\n   Otherwise it is trivial to link them, which may reduce privacy. Onion\n-  services created automatically (as in section 3) always have only one port\n+  services created automatically (as in section 2) always have only one port\n   open."
      }
    ]
  }
]