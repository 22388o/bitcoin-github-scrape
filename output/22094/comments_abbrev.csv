MarcoFalke,2021-06-01 09:12:30,"What is the goal of this change? Is it to remove a suppression? If yes, why is the suppression not removed in this pull?\n\nAlso, it seems a bit early to fuzz years larger than 2106 (80 years in the future). The network code will need to be changed anyway by then and this change doesn't seem to make it any easier (or harder).",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-851966621,851966621,
MarcoFalke,2021-06-01 09:14:44,See also https://github.com/bitcoin/bips/pull/967#issue-467275837,https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-851968154,851968154,
jonatack,2021-06-01 09:48:32,"Using a named cast makes the truncation conversion explicit, which ISTM is preferable than implicit. Happy to close if explicit isn't seen as better or sufficient justification.",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-851990149,851990149,
jonatack,2021-06-01 10:12:15,Updated the PR title.,https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-852004997,852004997,
MarcoFalke,2021-06-01 10:13:24,"I agree that absent any other points the explicit conversion is better than the implicit one. Though, this silences a warning, which might also be worthy to fix. Either by saying it is ""invalid"" (can be fixed in several decades) and ignoring it or by updating the fuzz test to not fuzz years past 2106.",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-852005702,852005702,
MarcoFalke,2021-06-01 10:14:55,"Either way, the suppressions file should be updated as part of the change, if applicable.",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-852006551,852006551,
vasild,2021-07-28 11:28:23,"Given that the second argument of `Connected()` is never used, maybe it is better to drop it:\n<details>\n<summary>[patch] remove nTime argument</summary>\n\n```diff\ndiff --git i/src/addrman.cpp w/src/addrman.cpp\nindex 8192b4eba6..149d929e73 100644\n--- i/src/addrman.cpp\n+++ w/src/addrman.cpp\n@@ -570,13 +570,13 @@ void CAddrMan::GetAddr_(std::vector<CAddress>& vAddr, size_t max_addres",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-888234734,888234734,
jonatack,2021-07-30 09:43:52,"> Given that the second argument of `Connected()` is never used, maybe it is better to drop it:\n> [patch] remove nTime argument\n> \n> Either way, the suppression `unsigned-integer-overflow:addrman.cpp` cannot be removed because according to #21000 there is another place in `addrman.cpp` that has a similar problem.\n\nThanks!  Removing the argument seems out of scope of this change, but you'",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-889774297,889774297,
vasild,2021-07-30 12:49:11,"> Removing the argument seems out of scope of this change\n\nWhy? If the purpose is to silence the warning, removing the argument will achieve that (+ remove some dead code).\n\nWith current `master` we have wrong behavior (e.g. treat year 2110 as year 1974) and a warning due to that. With this PR in its current form (523c26d) we have wrong behavior (same as in `master`), no warning now from f",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-889870386,889870386,
jonatack,2021-07-30 13:05:21,"> Why? If the purpose is to silence the warning, removing the argument will achieve that (+ remove some dead code).\n\nWould it not just replace one int64 value for another int64 being passed into a uint32?",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-889879516,889879516,
jonatack,2021-07-30 15:46:06,Updated per @MarcoFalke's https://github.com/bitcoin/bitcoin/pull/22094#discussion_r679802857 to raise if the file compat is corrupt.,https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-889980497,889980497,
vasild,2021-08-02 09:24:35,"> Would it not just replace one int64 value for another int64 being passed into a uint32?\n\nCorrect. But that new `int64` (returned by `GetAdjustedTime()`) will not overflow the `uint32_t` range before year 2106 and after that we would get a warning _as deserved_.\n\nThe underlying problem is that the code is not ready for year>2106 and the fuzzer tests with such years. Given that it is diffi",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-890872916,890872916,
jonatack,2021-08-10 14:12:36,"@vasild I added your proposed change at the top as a commit authored by you (though it doesn't fix the UBSan error for me) and added TODO comments regarding updates needed by the Year 2106.\n\nHopefully this makes the issue more explicit in the code and documentation.\n\nAlso fixed the remaining addrman issues listed in https://github.com/bitcoin/bitcoin/pull/21000 that were suppressed.\n\nA",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-896065016,896065016,
DrahtBot,2021-08-13 17:14:35,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22740](https://github.com/bitcoin/bitcoin/pull/22740) ([addrman] Move serialization code to cpp by amitiuttarwar)\n\nIf ",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-898606006,898606006,
DrahtBot,2021-09-01 03:11:56,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-909837048,909837048,
MarcoFalke,2021-10-22 12:04:40,Needs rebase if still relevant,https://github.com/bitcoin/bitcoin/pull/22094#issuecomment-949567300,949567300,
MarcoFalke,2021-07-30 09:55:06,Can you explain why treating corrupt files as file format version 0 is the right fix?,https://github.com/bitcoin/bitcoin/pull/22094#discussion_r679802857,679802857,src/addrman.h
jonatack,2021-07-30 13:20:07,"Good point, it should raise.\n```diff\n-        if (lowest_compatible > FILE_FORMAT) {\n+        if (lowest_compatible > FILE_FORMAT || compat < INCOMPATIBILITY_BASE) {\n```\n",https://github.com/bitcoin/bitcoin/pull/22094#discussion_r679919237,679919237,src/addrman.h
vasild,2021-08-23 08:23:46,"This warrants an assert that `now`, when cast to `uint32_t` will not overflow, i.e. year 2106 be silently converted to year 1970:\n\n```cpp\n        assert(now <= std::numeric_limits<uint32>::max());\n        info.nTime = static_cast<uint32_t>(now);\n```",https://github.com/bitcoin/bitcoin/pull/22094#discussion_r693763530,693763530,src/addrman.cpp
vasild,2021-08-23 08:30:39,"This will implicitly convert the second argument of `std::max` from `int64_t` to `uint32_t`:\n\n```cpp\n    int64_t x = 10;\n    int64_t y = 14;\n    std::cout << std::max<uint32_t>(0, x - y) << std::endl;\n```\nproduces this warning (with both gcc and clang; that particular warning switch is not turned on in Bitcoin Core):\n```\nwarning: implicit conversion loses integer precision: 'long",https://github.com/bitcoin/bitcoin/pull/22094#discussion_r693768497,693768497,src/addrman.cpp
