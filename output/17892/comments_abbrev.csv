DrahtBot,2020-01-07 18:33:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#17994](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/17994.html) (validation: flush undo files after last blo",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-571713613,571713613,
practicalswift,2020-01-07 21:29:00,Thread-safety annotations (`GUARDED_BY` etc.) seems to be missing? :),https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-571781435,571781435,
kallewoof,2020-01-08 03:41:38,"@practicalswift Thanks for the nudge. My apologies, though... I ended up scratching this solution for a much simpler one (see updated code).",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-571878001,571878001,
kallewoof,2020-01-08 03:54:09,"Some stats: after syncing my mac up to ~ block 186k, the blocks dir looks like this:\n```bash\n$ du -ch *.dat\n128M	blk00000.dat\n128M	blk00001.dat\n128M	blk00002.dat\n128M	blk00003.dat\n128M	blk00004.dat\n128M	blk00005.dat\n128M	blk00006.dat\n128M	blk00007.dat\n128M	blk00008.dat\n128M	blk00009.dat\n128M	blk00010.dat\n128M	blk00011.dat\n128M	blk00012.dat\n128M	blk00013.dat\n144M	b",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-571880370,571880370,
maaku,2020-01-08 08:14:24,"I can confirm the bug. I've run into it multiple times. Kalle is convinced that we are at fault, although I'm not so sure, and I think this might even be an Apple bug. It only shows up on APFS, and the implementation of rsync which ships with macOS also suffers from the same issue.\n\nBut in any case, if we can fix it on our end we should, and this should be pretty high priority. It can end up w",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-571938255,571938255,
eriknylund,2020-01-20 20:15:07,"ACK 0508072e1a45c339a181d24c2edfc88e3cd5201f built locally. All tests pass. I see the blow-up happening and the files being truncated as the following blk file is opened and the previous is finalized.\n\nHere rev00004.dat is still not truncated since we are on blk00005.dat\n```\n128M	blk00000.dat\n128M	blk00001.dat\n128M	blk00002.dat\n128M	blk00003.dat\n128M	blk00004.dat\n576M	blk00005.da",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-576416961,576416961,
fjahr,2020-01-21 21:44:43,Similar to here https://github.com/bitcoin/bitcoin/pull/17887#issuecomment-576780731 I am not able to reproduce this issue on current master (no matter if `--enable-debug` or not). Happy to take hints and retest as I am curious why my results are different from everyone else.,https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-576896930,576896930,
kallewoof,2020-01-22 01:16:31,@fjahr  https://github.com/bitcoin/bitcoin/pull/17887#issuecomment-576780731 seems to indicate you were finally able to reproduce the issue. Or is that comment older?,https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-576962903,576962903,
fjahr,2020-01-22 15:03:51,"> @fjahr [#17887 (comment)](https://github.com/bitcoin/bitcoin/pull/17887#issuecomment-576780731) seems to indicate you were finally able to reproduce the issue. Or is that comment older?\n\nYes, sorry, this is not worded clearly: I could reproduce #17887 with rev files up 64M large if compiled without `--enable-debug` but I could not reproduce it with `--enable-debug`. This one I can not reprod",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577227435,577227435,
kallewoof,2020-01-22 15:33:52,"@fjahr You can not detect the following pattern anywhere in your log file even after syncing for awhile?\n\n```\n(date) Leaving block file X: CBlockFileInfo(...)\n(date) Pre-allocating up to position 0x1000000 in blk(X+1).dat\n(date) Pre-allocating up to position 0x100000 in rev(X+1).dat\n[...]\n(date) Pre-allocating up to position (...) in rev(X).dat\n```\n",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577243156,577243156,
fjahr,2020-01-22 15:50:12,"@kallewoof I do see it, but not regularly. From my last sync up to 190k it seems to appear 3 times: For X=7, X=10 and X=14. I was trying hard to catch a larger than normal file size with `du -ch *.dat`, so I missed the right block/rev file transition?",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577250921,577250921,
kallewoof,2020-01-22 16:06:43,"There's some amount of randomness involved, as the order in which blocks are received and the order in which they are connected is different.\n\nWith #17887 merged, it will be very hard to physically spot these now, but it should occasionally show larger-than-necessary rev files (in the range of 1 b up to 1 MB). ",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577258840,577258840,
Sjors,2020-01-22 16:56:12,"Given that #17887 is merged, is it still worth the risk of back-porting? (can always do that later, after 0.20 is released)",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577282175,577282175,
kallewoof,2020-01-23 01:07:59,"@Sjors\n\n> Given that #17887 is merged, is it still worth the risk of back-porting? (can always do that later, after 0.20 is released)\n\nThere are nearly two thousand rev files right now. Someone doing an IBD sync using 0.19 today would end up wasting up to 2 GB of space due to this bug. I do believe we want to plug that hole, even though it has become much smaller of an issue as you mention",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577459432,577459432,
maaku,2020-01-23 02:08:33,"Last time I did an IBD (a few months ago) it was >100GB wasted. That’s actually how I discovered this problem initially, it was enough wasted space to impact me (full disk).",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577472426,577472426,
kallewoof,2020-01-23 03:06:11,"@maaku \n\n> Last time I did an IBD (a few months ago) it was >100GB wasted. That’s actually how I discovered this problem initially, it was enough wasted space to impact me (full disk).\n\nYeah, that was partially fixed in #17887, so you shouldn't see quite that drastic of an effect anymore, but still..",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577484298,577484298,
maaku,2020-01-23 03:20:15,"And this discussion is about backporting those changes, no?",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577486986,577486986,
kallewoof,2020-01-23 03:34:48,"No, #17887 is already in the backported list and is not under discussion. @Sjors is wondering whether this patch, which delays finalize-flushing the rev files until we're (pretty) sure they are no longer appended to, should be backported or not.\n\nWithout this patch, we will experience 0-1 MB of wasted space for each rev file.\n\nWithout #17887 we would experience what you saw.",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577489646,577489646,
fjahr,2020-01-23 11:00:59,"I have now done another run with this fix and could not detect the pattern described in https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577243156 in my debug.log\n\nACK b49b34139ac3c187eaac21b25f88cd493ce668b2",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577632476,577632476,
MarcoFalke,2020-01-23 13:08:32,"> Without this patch, we will experience 0-1 MB of wasted space for each rev file.\n\nIt seems like this does not warrant a backport to 0.19.1",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577674241,577674241,
kallewoof,2020-01-23 13:26:17,"@MarcoFalke \n\nDepends if you think ""a few GBs wasted"" is negligible or not. (This is for non-pruned nodes only, so a few GBs in a 250 GB datadir.)",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577680437,577680437,
MarcoFalke,2020-01-23 14:15:53,"Yes, based on your comments this should be less than 1% off (not noticeable for a user)",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577699541,577699541,
anton48,2020-01-23 14:21:34,"> @MarcoFalke\n> \n> Depends if you think ""a few GBs wasted"" is negligible or not. (This is for non-pruned nodes only, so a few GBs in a 250 GB datadir.)\n\nI did a quick test with downloading from scratch up to year 2014 (approx. 270k blocks):\n\n**master (278292 blocks, 1931064 bytes, 10 files with size 19M)**\n\n```\n2020-01-23T11:01:43Z Leaving block file 104: CBlockFileInfo(blocks=87",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577701885,577701885,
kallewoof,2020-01-23 14:25:31,"@anton48 Thanks for the initiative. I'll do the same thing on my side so we can get some clarity on the matter.\n\n@MarcoFalke I agree with you, but with the caveat that it's temporary. It's ludicrous to waste several GB of space on people's machines for no good reason. My proposal is that we (1) make a PR that does a one time sweep (esp important for people with lots of disk space who are stuck",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577703536,577703536,
Sjors,2020-01-23 18:13:55,"> I agree with you, but with the caveat that it's temporary. It's ludicrous to waste several GB of space on people's machines for no good reason. \n\nThe waste would be temporary; until the user installs 0.20 or 0.19.2. Worst case scenario is block data corruption. Because I'm personally not familiar with this area of the code, I prefer to let it stew on master for a while before shipping. But i",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577803248,577803248,
eriknylund,2020-01-23 18:20:45,"> @anton48 Thanks for the initiative. I'll do the same thing on my side so we can get some clarity on the matter.\n> \n> @MarcoFalke I agree with you, but with the caveat that it's temporary. It's ludicrous to waste several GB of space on people's machines for no good reason. My proposal is that we (1) make a PR that does a one time sweep (esp important for people with lots of disk space who are",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577805976,577805976,
eriknylund,2020-01-23 18:25:08,"@kallewoof @anton48 I can also repeat the full IBD test running Bitcoin-Qt on the Mac Mini like I did for #17887, it will take about 3 days to complete.",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577808580,577808580,
kallewoof,2020-01-24 01:36:24,"@eriknylund Unfortunately that bash script only addresses #17887, not #17892.\n\n@Sjors It's not technically temporary until someone writes code that does a one-time sweep of people's rev files and backport this & that, but since we only see ~1 rev file a day, people's drives shouldn't suffer more than a few hundred MBs before a patch is in place, hopefully.\n",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577956148,577956148,
kallewoof,2020-01-24 05:51:37,"I am working on an improved version of this, based on https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-577703536",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-578001022,578001022,
eriknylund,2020-01-24 06:47:28,"> @eriknylund Unfortunately that bash script only addresses #17887, not #17892.\n> \n> @Sjors It's not technically temporary until someone writes code that does a one-time sweep of people's rev files and backport this & that, but since we only see ~1 rev file a day, people's drives shouldn't suffer more than a few hundred MBs before a patch is in place, hopefully.\n\n@kallewoof Ah you're absol",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-578012384,578012384,
anton48,2020-01-24 08:40:34,"> > @eriknylund Unfortunately that bash script only addresses #17887, not #17892.\n> > @Sjors It's not technically temporary until someone writes code that does a one-time sweep of people's rev files and backport this & that, but since we only see ~1 rev file a day, people's drives shouldn't suffer more than a few hundred MBs before a patch is in place, hopefully.\n> \n> @kallewoof Ah you're ab",https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-578040791,578040791,
kallewoof,2020-01-26 11:41:25,I did some number crunching and concluded that a backport is probably not necessary. I am also closing this PR in favor of #17994. Will re-open if people object/prefer this one.,https://github.com/bitcoin/bitcoin/pull/17892#issuecomment-578493752,578493752,
eriknylund,2020-01-20 20:20:01,"```suggestion\n    int previous_undo_file = fFinalize && nLastBlockFile > 0 ? nLastBlockFile - 1 : nLastBlockFile;\n```\nGiven the comment on line 1738, is _previous_ more appropriate than last?",https://github.com/bitcoin/bitcoin/pull/17892#discussion_r368713120,368713120,src/validation.cpp
kallewoof,2020-01-21 00:23:46,Makes sense.,https://github.com/bitcoin/bitcoin/pull/17892#discussion_r368765758,368765758,src/validation.cpp
Sjors,2020-01-22 16:59:58,nit: add brackets to clarify (correct) precedence: `(nLastBlockFile > 0)`,https://github.com/bitcoin/bitcoin/pull/17892#discussion_r369684039,369684039,src/validation.cpp
kallewoof,2020-01-23 01:27:09,"I honestly don't think that's necessary, but I'm open to change my opinion.",https://github.com/bitcoin/bitcoin/pull/17892#discussion_r369892962,369892962,src/validation.cpp
