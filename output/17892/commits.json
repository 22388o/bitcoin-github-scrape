[
  {
    "sha": "b49b34139ac3c187eaac21b25f88cd493ce668b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDliMzQxMzlhYzNjMTg3ZWFhYzIxYjI1Zjg4Y2Q0OTNjZTY2OGIy",
    "commit": {
      "author": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-01-08T03:39:02Z"
      },
      "committer": {
        "name": "Karl-Johan Alm",
        "email": "karljohan-alm@garage.co.jp",
        "date": "2020-01-22T16:10:58Z"
      },
      "message": "bug-fix: delayed flush of undo files\n\nWhen creating blk and rev files, these are pre-allocated for performance reasons, and then truncated down to their final size after completion.\nThis works for blk files which are sequentially created, but since blocks are stored out of order, and since the undo data for blocks are stored sequentially (upon activation of the block), the rev file will be written to for awhile even after the blk file has been finalized. This change switches the flushing part to flush the *previous* undo file for the finalize (truncate) case, which addresses the problem, as we never write to the rev file 2 steps back.",
      "tree": {
        "sha": "eb683171c6a72ea1f91a5613e9395607f8879c62",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/eb683171c6a72ea1f91a5613e9395607f8879c62"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b49b34139ac3c187eaac21b25f88cd493ce668b2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEExCr/fGGz5EoUVM01V692LbM1MyIFAl4odBIACgkQV692LbM1\nMyKhDA//a9ZciJfXEXVLiU5Mlq57m6dARtdOqGB/acK5jMFRl0oaGwT6g4Qxcvgk\n+VmZkmEu2ABOhUCaj22YhKVvaX93wdlWorrTgUmvcXy5q0WZO4n3tcXNd86KzsPg\nN0wDexOZJYO4pKxgyc8/bjvR3hCIXeiR4gezOpfnvbPq4L3imwOzz9RghpYkRIuu\njs42+QsQSopZMs1PvQMz+H5zehiSuVMlXtgkM5TAhBjK9TAqiEJWRS29sLeYuOhp\nPkv5fen3QDgSCdXW+9yz6yRm41qnOHrfcKAypR2rNxhmU/Qg75XDabwkfOEdiXrU\nQ8mvLDCkw8To1PIZf7eGjAarTQBa7QHiLsmSr5HOHkIwMBhTiRwRJNH3fUHfMWnr\n9DRyI7Rc/9eT/MHjZ2yu9izA4yYzY/4wjX/pd6xK6NRALZCc6j8wElvSYlBBF8HK\n2iElmyUgyDek0Qsnp9bAAMjZmbooIUXPva00Z1qepaW2pMPzPF9x9oK1KgzTiJb2\nlbNEzmNtCayiKye5eQXMW0j9ISZtrufsxhnu6fbBTxpT/WfxSBwSpuclJEWOLPf/\nQA3vq+K2YooIO3ml2XhkzP1BryGMs8v1d6VWelsDLM0eTh7ILqRup2m9BPnay65A\nuqIt/uUmoxoKCdW3c1Bu+1qE8DbgKNtIlC/C3l6jhdGnje7ALoI=\n=f1c9\n-----END PGP SIGNATURE-----",
        "payload": "tree eb683171c6a72ea1f91a5613e9395607f8879c62\nparent 04f78b818f02279d32c3ad3a1140e9410bfb26bf\nauthor Karl-Johan Alm <karljohan-alm@garage.co.jp> 1578454742 +0900\ncommitter Karl-Johan Alm <karljohan-alm@garage.co.jp> 1579709458 +0900\n\nbug-fix: delayed flush of undo files\n\nWhen creating blk and rev files, these are pre-allocated for performance reasons, and then truncated down to their final size after completion.\nThis works for blk files which are sequentially created, but since blocks are stored out of order, and since the undo data for blocks are stored sequentially (upon activation of the block), the rev file will be written to for awhile even after the blk file has been finalized. This change switches the flushing part to flush the *previous* undo file for the finalize (truncate) case, which addresses the problem, as we never write to the rev file 2 steps back.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b49b34139ac3c187eaac21b25f88cd493ce668b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b49b34139ac3c187eaac21b25f88cd493ce668b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b49b34139ac3c187eaac21b25f88cd493ce668b2/comments",
    "author": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kallewoof",
      "id": 250224,
      "node_id": "MDQ6VXNlcjI1MDIyNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/250224?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kallewoof",
      "html_url": "https://github.com/kallewoof",
      "followers_url": "https://api.github.com/users/kallewoof/followers",
      "following_url": "https://api.github.com/users/kallewoof/following{/other_user}",
      "gists_url": "https://api.github.com/users/kallewoof/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kallewoof/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kallewoof/subscriptions",
      "organizations_url": "https://api.github.com/users/kallewoof/orgs",
      "repos_url": "https://api.github.com/users/kallewoof/repos",
      "events_url": "https://api.github.com/users/kallewoof/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kallewoof/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04f78b818f02279d32c3ad3a1140e9410bfb26bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04f78b818f02279d32c3ad3a1140e9410bfb26bf",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04f78b818f02279d32c3ad3a1140e9410bfb26bf"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 7,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b287b17619ca1f2624e9f4ee6f05f0b49dd62db0",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 1,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b49b34139ac3c187eaac21b25f88cd493ce668b2/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b49b34139ac3c187eaac21b25f88cd493ce668b2/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=b49b34139ac3c187eaac21b25f88cd493ce668b2",
        "patch": "@@ -1735,8 +1735,14 @@ void static FlushBlockFile(bool fFinalize = false)\n {\n     LOCK(cs_LastBlockFile);\n \n+    // we want to finalize flush the previous undo file, as it will have been written to\n+    // for awhile even after we've moved onto the next blk file; if we don't do this, we\n+    // end up with a re-opened but unflushed rev file, resulting in pre-allocated but not\n+    // returned disk space allocation\n+    int previous_undo_file = fFinalize && nLastBlockFile > 0 ? nLastBlockFile - 1 : nLastBlockFile;\n+\n     FlatFilePos block_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nSize);\n-    FlatFilePos undo_pos_old(nLastBlockFile, vinfoBlockFile[nLastBlockFile].nUndoSize);\n+    FlatFilePos undo_pos_old(previous_undo_file, vinfoBlockFile[previous_undo_file].nUndoSize);\n \n     bool status = true;\n     status &= BlockFileSeq().Flush(block_pos_old, fFinalize);"
      }
    ]
  }
]