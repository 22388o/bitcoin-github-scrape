luke-jr,2017-04-19T16:54:09Z,This seems entirely unrelated to #10065 or address reuse...,https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295342918,295342918,
jonasschnelli,2017-04-19T17:07:07Z,"Not sure if this is the right direction... \nI agree with @luke-jr, blocking ""addresses"" from coin selection seems to be a different thing the ""address reuse"".\n\n@jet0: can you explain what kind of a use case your PR does allow/solve?",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295347969,295347969,
gmaxwell,2017-04-19T17:20:28Z,doing something like automatically freezing addresses once used would be interesting; but we'd need to have an extra 'frozen balance' displayed everywhere.,https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295353146,295353146,
jet0,2017-04-19T18:25:36Z,"@jonasschnelli , all - perhaps the title of this commit is wrong (it does not prevent reuse globally) - I was trying to solve the issue in #10065 and would like to get @RHavar 's opinion on this approach, since his use case was:\nPeople send tiny amounts to well known addresses in his wallet.\nThe coin selection mechanism continually spends those outputs, tainting most outgoing transactions.\nH",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295378501,295378501,
RHavar,2017-04-19T18:58:14Z,"@jet0  I'm not sure if this right granularity to disable address reuse. For instance, let's say I request someone sends me money to address X and they do so.\n\nI can't immediately use `freezeaddress` because doing so would stop me spending the coins. I'd have to wait until the coins left address X and then freeze it. But that's rather annoying to do, and leaves open the reuse problem until I've",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295391631,295391631,
jonasschnelli,2017-04-19T19:02:10Z,"> ... tainting most outgoing transaction`\n\nYes. This is a problem.\n\nBut is blacklisting addresses from coin-selection a valid solution? I would prefer if I could block certain UTXOs by txid/vout. Wouldn't blocking addresses lead to the problem that I cannot distinguish between taint-inputs and a real inputs (both could be sent to the same address)?\n\nBoth is already solvable:\n-> locku",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295393015,295393015,
gmaxwell,2017-04-19T19:16:41Z,"> Wouldn't blocking addresses lead to the problem that I cannot distinguish between taint-inputs and a real inputs\n\nI believe the only time one needs to worry about taint inputs is after a spend from that address happens, so long as the spends make sure to spend all (non-dust) coins paid to that address so far.  \n\nWhat we should prefer doing is when we spend any coin connected to an addres",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295398692,295398692,
RHavar,2017-04-19T19:29:49Z,"> I believe the only time one needs to worry about taint inputs is after a spend from that address happens, so long as the spends make sure to spend all (non-dust) coins paid to that address so far.\n\nThat's a good point, but from a pragmatic point of view I think it's not worth it. It comes at a terrible cost to coin selection (instead of picking from a set of outputs, it's going to have to pi",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295403437,295403437,
jet0,2017-04-19T19:53:45Z,"> And then the configuration option to disable address reuse could automatically lock any outputs you got, if the associated address has already been used.\n\n@RHavar - to clarify - ""associated address has already been used"" - do you mean to automatically lock all (new or existing) outputs for an address that matches any in the already locked set?",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295412658,295412658,
jet0,2017-04-19T19:56:10Z,"@jonasschnelli what would you recommend the feature looks like?\n> But your approach may be useful. But I'd recommend to add it as RPC command rather then a startup argument (otherwise you need to restart Core in order to get this thing working).\n\nA set of RPC commands to freeze/unfreeze a wallet address from being used in coin selection (similar to the IsFrozenCoin() I have)?",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295413631,295413631,
RHavar,2017-04-19T20:01:30Z,"> @RHavar - to clarify - ""associated address has already been used"" - do you mean to automatically lock all (new or existing) outputs for an address that matches any in the already locked set?\n\nI mean if you're running with `-dont-allow-address-reuse` when the wallet sees a new inbound output, it checks to see if that address has already previously been used. If it's been used, it locks the ou",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295416078,295416078,
jet0,2017-04-19T20:24:47Z,"> it checks to see if that address has already previously been used\n\nHow do you define ""previously been used""? I don't understand its relationship with ""lockunspent"" feature in your comments.\n(1) funds were received to it, or (2) its funds were spent, or (3) that some or all of its txouts are locked via lockunspent RPC or (4) something else?\nOn the other hand - if we are working with persi",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295425495,295425495,
RHavar,2017-04-19T20:27:19Z,"> How do you define ""previously been used""? I don't understand its relationship with ""lockunspent"" feature in your comments.\n(1) funds were received to it, or (2) its funds were spent, or (3) that some or all of its txouts are locked via lockunspent RPC or (4) something else?\n\nI mean (1). If you're getting money to a previously used address (i.e. You've previously received money to this addr",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295426426,295426426,
jet0,2017-04-19T21:02:12Z,"@RHavar I think I understand now - in your original request you were not intending to execute a bunch of ""lockunspent"" calls or ""freezeaddress"" with specific txouts or addresses in mind, but wanted a system-wide switch to 'spend once from each address'. I.e. no manual txout or address selection, correct?",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295440933,295440933,
RHavar,2017-04-19T21:28:29Z,"@jet0 yeah, ideally it would just be an option that I enable and the wallet does all the hard work for me =)\n\nI mean, if there was an rpcinterface  `freezeaddress` I'd happily use it.  But it's more of a pain in the ass than I'd like (especially if I had to first make sure there was no money left in it). ",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295450998,295450998,
gmaxwell,2017-04-19T23:38:30Z,"> That's a good point, but from a pragmatic point of view I think it's not worth it. It comes at a terrible cost to coin selection (instead of picking from a set of outputs, it's going to have to pick from a set of sets). \n\nWith due respect, I think you're handwaving here -- and that isn't a way to accomplish anything.  Doing anything less then treating all spendable coins paid to an address a",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295494511,295494511,
RHavar,2017-04-20T00:03:10Z,"> and I don't believe this would add _any_ complexity to coin selection-- the ""coin"" you select over is just the effect of spending the whole group\n\nWell, that's only because the current algorithm is naive and doesn't even consider the size of the transaction. But if it's smarter, then there's a different cost to adding different amounts of inputs (i.e. adding two 5 BTC inputs is going to cost",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295502056,295502056,
gmaxwell,2017-04-20T00:33:49Z,"Oh by no means do I think the behavior is anywhere near optimal, but to me it sounded you were opposing fixing it in favor of more special purpose options. The amount of configurables is already a major burden in improving the software already.  Damn, I really wish your answer had been ""I think X does it perfectly."" :P\n\n> But core's just tries to minimize the amount of the change output, \n\",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295511818,295511818,
RHavar,2017-04-20T00:55:42Z,">  It tries to move as little of your coins at a time as it can to avoid linking the payments.\n\nI am familiar with the coin selection algorithm, and don't understand how you come to this conclusion. \n\nThe algorithm is a little tricky, because it's kind of two unrelated algorithms but it basically is:\n\nStage 1: If sending N, and you have an input of exactly N ... use that.\nStage 2: If",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295519981,295519981,
jet0,2017-04-20T14:43:13Z,"Sorry for the long discussion - I'd like to bring this to some closure.\nI think @jonasschnelli had some use for ""freezeaddress"" type functionality, perhaps with RPC calls instead of the config - I will deliver that if it can be quantified. Comments please. :)\n@RHavar - is there a minimum subset of manual lockunspent + some automation for new txouts appearing you'd like to see? (The deluxe/idea",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-295762782,295762782,
laanwj,2017-10-04T12:58:56Z,"This seems to have reached an impasse, closing for now, feel free to tag me to reopen it when there is more agreement that this specific change is a good idea.",https://github.com/bitcoin/bitcoin/pull/10233#issuecomment-334146741,334146741,
