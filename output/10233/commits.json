[
  {
    "sha": "b971bb9e9a52856c35f249b837425d033c7756df",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiOTcxYmI5ZTlhNTI4NTZjMzVmMjQ5YjgzNzQyNWQwMzNjNzc1NmRm",
    "commit": {
      "author": {
        "name": "jet0",
        "email": "fact@protonmail.ch",
        "date": "2017-04-19T16:37:26Z"
      },
      "committer": {
        "name": "jet0",
        "email": "fact@protonmail.ch",
        "date": "2017-04-19T16:37:26Z"
      },
      "message": "Wallet: Support not reusing addresses\n\nImplements -freezeaddress (also via the bitcoin.conf): a way to skip address(es) during coin selection.\nFixes #10065\nRequested to be similar to the lock coins functionality, but with addresses & persistence.",
      "tree": {
        "sha": "1b4307ba3efb48f03d47bdae7ae9726382ff5798",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1b4307ba3efb48f03d47bdae7ae9726382ff5798"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b971bb9e9a52856c35f249b837425d033c7756df",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b971bb9e9a52856c35f249b837425d033c7756df",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b971bb9e9a52856c35f249b837425d033c7756df",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b971bb9e9a52856c35f249b837425d033c7756df/comments",
    "author": {
      "login": "jet0",
      "id": 27317396,
      "node_id": "MDQ6VXNlcjI3MzE3Mzk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27317396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jet0",
      "html_url": "https://github.com/jet0",
      "followers_url": "https://api.github.com/users/jet0/followers",
      "following_url": "https://api.github.com/users/jet0/following{/other_user}",
      "gists_url": "https://api.github.com/users/jet0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jet0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jet0/subscriptions",
      "organizations_url": "https://api.github.com/users/jet0/orgs",
      "repos_url": "https://api.github.com/users/jet0/repos",
      "events_url": "https://api.github.com/users/jet0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jet0/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jet0",
      "id": 27317396,
      "node_id": "MDQ6VXNlcjI3MzE3Mzk2",
      "avatar_url": "https://avatars.githubusercontent.com/u/27317396?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jet0",
      "html_url": "https://github.com/jet0",
      "followers_url": "https://api.github.com/users/jet0/followers",
      "following_url": "https://api.github.com/users/jet0/following{/other_user}",
      "gists_url": "https://api.github.com/users/jet0/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jet0/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jet0/subscriptions",
      "organizations_url": "https://api.github.com/users/jet0/orgs",
      "repos_url": "https://api.github.com/users/jet0/repos",
      "events_url": "https://api.github.com/users/jet0/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jet0/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c91ca0ace9bd62eea8158b92cfc53d6d219e37b7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c91ca0ace9bd62eea8158b92cfc53d6d219e37b7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c91ca0ace9bd62eea8158b92cfc53d6d219e37b7"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 33,
      "deletions": 0
    },
    "files": [
      {
        "sha": "f8a934a3613f366503b4e48bccc4e46fb3a67bb6",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 0,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b971bb9e9a52856c35f249b837425d033c7756df/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b971bb9e9a52856c35f249b837425d033c7756df/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=b971bb9e9a52856c35f249b837425d033c7756df",
        "patch": "@@ -2058,6 +2058,7 @@ void CWallet::AvailableCoins(std::vector<COutput>& vCoins, bool fOnlySafe, const\n             for (unsigned int i = 0; i < pcoin->tx->vout.size(); i++) {\n                 isminetype mine = IsMine(pcoin->tx->vout[i]);\n                 if (!(IsSpent(wtxid, i)) && mine != ISMINE_NO &&\n+                    !IsFrozenCoin(pcoin->tx->vout[i]) &&\n                     !IsLockedCoin((*it).first, i) && (pcoin->tx->vout[i].nValue > 0 || fIncludeZeroValue) &&\n                     (!coinControl || !coinControl->HasSelected() || coinControl->fAllowOtherInputs || coinControl->IsSelected(COutPoint((*it).first, i))))\n                         vCoins.push_back(COutput(pcoin, i, nDepth,\n@@ -3438,6 +3439,19 @@ void CWallet::ListLockedCoins(std::vector<COutPoint>& vOutpts)\n     }\n }\n \n+bool CWallet::IsFrozenCoin(const CTxOut& txout) const\n+{\n+    AssertLockHeld(cs_wallet); // setFrozenAddresses\n+    if (0 < setFrozenAddresses.size()) {\n+        CTxDestination outputDestination;\n+        if(ExtractDestination(txout.scriptPubKey, outputDestination)) {\n+            CBitcoinAddress outputAddress(outputDestination);\n+            return setFrozenAddresses.end() != setFrozenAddresses.find(outputAddress);\n+        }\n+    }\n+    return false;\n+}\n+\n /** @} */ // end of Actions\n \n class CAffectedKeysVisitor : public boost::static_visitor<void> {\n@@ -3637,6 +3651,7 @@ std::string CWallet::GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n     strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n+    strUsage += HelpMessageOpt(\"-freezeaddress=<address>\", _(\"Do not use this address for coin selection\"));\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n                                                                CURRENCY_UNIT, FormatMoney(DEFAULT_FALLBACK_FEE)));\n@@ -3884,6 +3899,16 @@ void CWallet::postInitProcess(CScheduler& scheduler)\n     // Do this here as mempool requires genesis block to be loaded\n     ReacceptWalletTransactions();\n \n+    if (mapMultiArgs.count(\"-freezeaddress\")) {\n+        BOOST_FOREACH(std::string freezeString, mapMultiArgs.at(\"-freezeaddress\"))\n+        {\n+            CBitcoinAddress freezeAddress(freezeString);\n+            if (freezeAddress.IsValid())\n+                setFrozenAddresses.insert(freezeAddress);\n+        }\n+        LogPrint(BCLog::SELECTCOINS, \"freezeaddress count = %u\\n\", setFrozenAddresses.size());\n+    }\n+\n     // Run a thread to flush wallet periodically\n     if (!CWallet::fFlushScheduled.exchange(true)) {\n         scheduler.scheduleEvery(MaybeCompactWalletDB, 500);"
      },
      {
        "sha": "840d236cdd6b384faa85dd67799e680df7d0fa3d",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b971bb9e9a52856c35f249b837425d033c7756df/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b971bb9e9a52856c35f249b837425d033c7756df/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=b971bb9e9a52856c35f249b837425d033c7756df",
        "patch": "@@ -7,6 +7,7 @@\n #define BITCOIN_WALLET_WALLET_H\n \n #include \"amount.h\"\n+#include \"base58.h\"\n #include \"streams.h\"\n #include \"tinyformat.h\"\n #include \"ui_interface.h\"\n@@ -715,6 +716,12 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n      */\n     bool AddWatchOnly(const CScript& dest) override;\n \n+    /**\n+     * Addresses designated as 'frozen'; coins will not to be selected during coin selection nor listed in unspent.\n+     * Set via -freezeaddress\n+     */\n+    std::set<CBitcoinAddress> setFrozenAddresses;\n+\n public:\n     /*\n      * Main wallet lock.\n@@ -822,6 +829,7 @@ class CWallet : public CCryptoKeyStore, public CValidationInterface\n     void UnlockCoin(const COutPoint& output);\n     void UnlockAllCoins();\n     void ListLockedCoins(std::vector<COutPoint>& vOutpts);\n+    bool IsFrozenCoin(const CTxOut& txout) const;\n \n     /*\n      * Rescan abort properties"
      }
    ]
  }
]