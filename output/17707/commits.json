[
  {
    "sha": "d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMzBjY2I5ZGQ3MmM4ZGVmMmQzYzZhNWUzY2IzNDAwYjJiNjc4MDU2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-10T03:08:16Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@protonmail.com",
        "date": "2019-12-10T03:10:08Z"
      },
      "message": "util: Use try_lock return value in UniqueLock::TryEnter\n\nIf I understand correctly, the return value if `try_lock` already\nsignifies whether the locking was succesful, there is no need to\ncall `Base::owns_lock` to check.\n\nShould get rid of the following MSVC warning in AppVeyor:\n\"warning C4834: discarding return value of function with 'nodiscard' attribute\"",
      "tree": {
        "sha": "84dcf5f26d085cd1327cfdfb2cf1c2073075e133",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84dcf5f26d085cd1327cfdfb2cf1c2073075e133"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac09180128a1d2c7d198fa1e08095a46f54831f9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac09180128a1d2c7d198fa1e08095a46f54831f9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac09180128a1d2c7d198fa1e08095a46f54831f9"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ea377ffded51b8122d6c8cb6f1d3e1f6130c32fb",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=d30ccb9dd72c8def2d3c6a5e3cb3400b2b678056",
        "patch": "@@ -136,10 +136,10 @@ class SCOPED_LOCKABLE UniqueLock : public Base\n     bool TryEnter(const char* pszName, const char* pszFile, int nLine)\n     {\n         EnterCritical(pszName, pszFile, nLine, (void*)(Base::mutex()), true);\n-        Base::try_lock();\n-        if (!Base::owns_lock())\n+        bool successful = Base::try_lock();\n+        if (!successful)\n             LeaveCritical();\n-        return Base::owns_lock();\n+        return successful;\n     }\n \n public:"
      }
    ]
  }
]