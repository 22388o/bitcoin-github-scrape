[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688486654",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-688486654",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 688486654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODQ4NjY1NA==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T19:38:18Z",
    "updated_at": "2020-09-07T19:38:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688486654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688531736",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-688531736",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 688531736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODUzMTczNg==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-07T22:46:48Z",
    "updated_at": "2020-09-07T22:46:48Z",
    "author_association": "MEMBER",
    "body": "The thread sanitizer is complaining about locking order; I'm looking into it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688531736/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688712793",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-688712793",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 688712793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4ODcxMjc5Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T08:34:41Z",
    "updated_at": "2020-09-08T08:34:41Z",
    "author_association": "MEMBER",
    "body": "@narula \r\n> The thread sanitizer is complaining about locking order; I'm looking into it.\r\n\r\nCould I suggest some code reorganization to keep locking order constant:\r\nhttps://github.com/hebasto/bitcoin/commits/pr19911-0908 ?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/688712793/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692068452",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-692068452",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 692068452,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5MjA2ODQ1Mg==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-14T13:54:40Z",
    "updated_at": "2020-09-14T13:54:40Z",
    "author_association": "MEMBER",
    "body": "I've pushed a new series of commits which move `vRecvGetData` and `orphan_work_set` to `Peer` and then guard them appropriately. It's a bit more of a change, but happy to help move things over there if that's the end goal. \r\n\r\n> I do have some commits that move both `vRecvGetData` and `orphan_work_set` to the `Peer` struct in https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split-needs-rebase (everything from\r\n> _END move tx data to net processing // START move work queue data to net processing_ to _END move work queue data to net processing // START move subversion to net_processing_). It's slightly orthogonal to this PR, but perhaps we should just do that now while we're touching these fields?\r\n\r\n@jnewbery I tried to cherry-pick some of your commits but they did not move cleanly given the scope of your branch's change; I also didn't do one of the renames you did to minimize the change. Let me know if there's an appropriate way to credit you.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/692068452/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695215436",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-695215436",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 695215436,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTIxNTQzNg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-19T13:45:36Z",
    "updated_at": "2020-10-15T21:51:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20158 (tree-wide: De-globalize ChainstateManager by dongcarl)\n* #19910 (net processing: Move peer_map to PeerManager by jnewbery)\n* #19829 (net processing: Move block inventory state to net_processing by jnewbery)\n* #9245 (Drop IO priority to idle while reading blocks for peer requests and startup verification by luke-jr)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/695215436/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701428765",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-701428765",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 701428765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTQyODc2NQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-30T14:30:22Z",
    "updated_at": "2020-09-30T14:30:22Z",
    "author_association": "MEMBER",
    "body": "Sorry - needs rebase :grimacing: ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701428765/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701565791",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-701565791",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 701565791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMTU2NTc5MQ==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-30T18:29:25Z",
    "updated_at": "2020-09-30T18:29:25Z",
    "author_association": "MEMBER",
    "body": "This is rebased and I think all comments have been addressed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/701565791/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708430130",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-708430130",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 708430130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQzMDEzMA==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T14:11:32Z",
    "updated_at": "2020-10-14T14:11:32Z",
    "author_association": "MEMBER",
    "body": "> In commit _Move m_orphan_work_set to net_processing_, you're not removing CNode::m_orphan_work_set.\r\n> \r\n> Other than that, looks good!\r\n\r\nGood catch, I lost that in the last rebase! Fixed.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708430130/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708445514",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-708445514",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 708445514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ0NTUxNA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T14:35:41Z",
    "updated_at": "2020-10-14T14:35:41Z",
    "author_association": "MEMBER",
    "body": "Code review ACK da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708445514/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708497125",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-708497125",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 708497125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ5NzEyNQ==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T15:56:57Z",
    "updated_at": "2020-10-14T15:56:57Z",
    "author_association": "MEMBER",
    "body": "> Mind making the first rename commit a scripted-diff as well?\r\n\r\nIt can't be, since `orphan_work_set` is currently used as the name for both a member variable and a local variable.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708497125/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708498683",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-708498683",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 708498683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ5ODY4Mw==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T15:59:23Z",
    "updated_at": "2020-10-14T15:59:23Z",
    "author_association": "MEMBER",
    "body": "> > Mind making the first rename commit a scripted-diff as well?\r\n> \r\n> It can't be, since `orphan_work_set` is currently used as the name for both a member variable and a local variable.\r\n\r\nIndeed. Sorry.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/708498683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709539465",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-709539465",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 709539465,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwOTUzOTQ2NQ==",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-15T19:19:57Z",
    "updated_at": "2020-10-15T19:19:57Z",
    "author_association": "MEMBER",
    "body": "I think all comments have been addressed except the remaining review comments which I can summarize to the following nits:\r\n\r\n1) change `if (peer == nullptr)` to `if (!peer)` in the places where I add a new `nullptr` check\r\n2) fix up an existing if without braces: https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504759682 in a line I touch\r\n\r\nI don't think these are important, and I already have one ACK on the code so I'd prefer not to change them. However, if others disagree, I can do so.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/709539465/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711038096",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#issuecomment-711038096",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/19911",
    "id": 711038096,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxMTAzODA5Ng==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-17T16:17:49Z",
    "updated_at": "2020-10-17T16:17:49Z",
    "author_association": "MEMBER",
    "body": "review ACK da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde \ud83d\udc2c\r\n\r\n<details><summary>Show signature and timestamp</summary>\r\n\r\nSignature:\r\n\r\n```\r\n-----BEGIN PGP SIGNED MESSAGE-----\r\nHash: SHA512\r\n\r\nreview ACK da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde \ud83d\udc2c\r\n-----BEGIN PGP SIGNATURE-----\r\n\r\niQGzBAEBCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\r\npUh3Kwv/Z92YkezB0vKDt8zCSK2kekyViu2esvi5EQIv7t59sPpc1lksTFvC75lX\r\nrmr8hVvOHb6l1pMTGEXLJHVgamn4B/xd5jnJCEGcI9GR1bamL6wRlSKLZEyhnVjV\r\nSiyp7qPFIQPTQxUsUhgJxeLqqYWV1TLmxRvekBnwtfksqpHTBR6icrBsQpg7Nu7Q\r\nf9uiggfUZq3UrnyzF9dJqYUG5CyGiymnRH9YUE89W+7cg/L7RllSQh6K5lrbeb9b\r\nWwAbJL64iDR3Npv4d9bwIQkZNgadyZA8yYw/kskriD9Gt+Qxg7V0VnBbExhve3mp\r\nvc2i6mpPqgDS0n4a+tv3pB7g4zvv9w8kLNt4wXiBIETVdbfH5acdDw3GvTOAhQBl\r\nNwu0KhCxCkXtWDP56vJo2D0V8WsaHMQv53DUAjsAKHot7c0ihXd+V3zhwUHhJXEP\r\nd1BHU3W+II9DB0c2e9gXyiS/ZHWbEhzwvtdj2pVAtETJG6dt8gM9aEmdzh7Lnfga\r\nQWbax8bo\r\n=//W2\r\n-----END PGP SIGNATURE-----\r\n```\r\n\r\n[Timestamp of file with hash `350e455a9cfde318c3ab04c709fac25fca0a0b8205b4cfd5c3a0765e95f4dff4  -`](https://opentimestamps.org/info/?004f70656e54696d657374616d7073000050726f6f6600bf89e2e884e892940108350e455a9cfde318c3ab04c709fac25fca0a0b8205b4cfd5c3a0765e95f4dff4f0108a65cb16c9b0c417eb5c7ddb3b913e8f08fff01013365521c5ff7b210251f58646d396d908f020fedf6d58a34cfe59ead72c640db1970626c70b3547027d547292211118e08a6f08f1045f8b1904f008e14c74031e8915e10083dfe30d2ef90c8e292868747470733a2f2f66696e6e65792e63616c656e6461722e657465726e69747977616c6c2e636f6dfff0102134509a7bc59e36cf5bf95b5fd7c12f08f020e3d2bd7b88e92e5b536d050ac5ffc040baaadc5c92a67d77120fd4229471decc08f1045f8b1902f008e352791dc9dbec720083dfe30d2ef90c8e2e2d68747470733a2f2f616c6963652e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267fff010262a9f94d2d60a327f2d7df07623d31308f1045f8b1902f0087ad9b4f054271fc50083dfe30d2ef90c8e232268747470733a2f2f6274632e63616c656e6461722e636174616c6c6178792e636f6df010a2a0682b72a70587f505e1028c82150908f020762cd581e83d8e88f794a46cd0a4960ea161133aae641e761dd54852f4d24aa408f1045f8b1902f008f76918ad4500e30f0083dfe30d2ef90c8e2c2b68747470733a2f2f626f622e6274632e63616c656e6461722e6f70656e74696d657374616d70732e6f7267)\r\n\r\n</details>\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/711038096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484555699",
    "pull_request_review_id": 483699195,
    "id": 484555699,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU1NTY5OQ==",
    "diff_hunk": "@@ -2880,7 +2883,10 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n             CInv inv;\n             inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n             inv.hash = req.blockhash;\n-            pfrom.vRecvGetData.push_back(inv);\n+            {\n+                LOCK(pfrom.cs_vRecv);\n+                pfrom.vRecvGetData.push_back(inv);\n+            }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "a4d7f3dc3126b6b808f27dcf3ad7b6e8b9d6b0a7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Consider using the `WITH_LOCK` macro for simple one-line statements:\r\n\r\n```suggestion\r\n            WITH_LOCK(pfrom.cs_vRecv, pfrom.vRecvGetData.push_back(inv));\r\n```",
    "created_at": "2020-09-07T19:54:50Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484555699",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484555699"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484555699"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484555699/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2886,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2922,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484558805",
    "pull_request_review_id": 483699195,
    "id": 484558805,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU1ODgwNQ==",
    "diff_hunk": "@@ -3855,15 +3861,20 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     //\n     bool fMoreWork = false;\n \n-    if (!pfrom->vRecvGetData.empty())\n-        ProcessGetData(*pfrom, chainparams, m_connman, m_mempool, interruptMsgProc);\n+    {\n+        LOCK(pfrom->cs_vRecv);\n+        if (!pfrom->vRecvGetData.empty())",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "a4d7f3dc3126b6b808f27dcf3ad7b6e8b9d6b0a7",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "style: consider adding braces to if blocks when touching code, to conform with the current style guide.",
    "created_at": "2020-09-07T20:14:20Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484558805",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484558805"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484558805"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484558805/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3866,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568250",
    "pull_request_review_id": 483710588,
    "id": 484568250,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2ODI1MA==",
    "diff_hunk": "@@ -2880,7 +2883,10 @@ void PeerLogicValidation::ProcessMessage(CNode& pfrom, const std::string& msg_ty\n             CInv inv;\n             inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n             inv.hash = req.blockhash;\n-            pfrom.vRecvGetData.push_back(inv);\n+            {\n+                LOCK(pfrom.cs_vRecv);\n+                pfrom.vRecvGetData.push_back(inv);\n+            }",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "a4d7f3dc3126b6b808f27dcf3ad7b6e8b9d6b0a7",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done!",
    "created_at": "2020-09-07T21:15:47Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484568250",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568250"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484568250"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568250/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2886,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2922,
    "side": "RIGHT",
    "in_reply_to_id": 484555699
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568297",
    "pull_request_review_id": 483710633,
    "id": 484568297,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2ODI5Nw==",
    "diff_hunk": "@@ -3855,15 +3861,20 @@ bool PeerLogicValidation::ProcessMessages(CNode* pfrom, std::atomic<bool>& inter\n     //\n     bool fMoreWork = false;\n \n-    if (!pfrom->vRecvGetData.empty())\n-        ProcessGetData(*pfrom, chainparams, m_connman, m_mempool, interruptMsgProc);\n+    {\n+        LOCK(pfrom->cs_vRecv);\n+        if (!pfrom->vRecvGetData.empty())",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 43,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "a4d7f3dc3126b6b808f27dcf3ad7b6e8b9d6b0a7",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done! did not do so to adjacent code i wasn't touching.",
    "created_at": "2020-09-07T21:16:00Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484568297",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568297"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484568297"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484568297/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3866,
    "side": "RIGHT",
    "in_reply_to_id": 484558805
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484707451",
    "pull_request_review_id": 483863940,
    "id": 484707451,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcwNzQ1MQ==",
    "diff_hunk": "@@ -1722,7 +1722,7 @@ static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode&\n     return {};\n }\n \n-void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n+void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(pfrom.cs_vRecv) LOCKS_EXCLUDED(cs_main)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\nstatic void ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc)\r\n    EXCLUSIVE_LOCKS_REQUIRED(!cs_main, pfrom.cs_vRecv)\r\n```",
    "created_at": "2020-09-08T07:28:11Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484707451",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484707451"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484707451"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484707451/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1725,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484737211",
    "pull_request_review_id": 483901878,
    "id": 484737211,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDczNzIxMQ==",
    "diff_hunk": "@@ -825,7 +826,7 @@ class CNode\n \n     RecursiveMutex cs_sendProcessing;\n \n-    std::deque<CInv> vRecvGetData;\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecv);",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it's right to reuse this mutex to guard `vRecvGetData` (despite the name similarities). `cs_vRecv` was added in 321d0fc6b6624c65508f8b9059418cb936f0bbbe to guard `nRecvBytes` and `mapRecvBytesPerMsgCmd`, which are statistics used in the net layer. `vRecvGetData` is a data structure used in the application layer (and should eventually move to the `Peer` struct), so should be guarded by a different mutex.\r\n\r\nI do have some commits that move both `vRecvGetData` and `orphan_work_set` to the `Peer` struct in https://github.com/jnewbery/bitcoin/commits/2020-06-cs-main-split-needs-rebase (everything from \r\n_END move tx data to net processing // START move work queue data to net processing_ to _END move work queue data to net processing // START move subversion to net_processing_). It's slightly orthogonal to this PR, but perhaps we should just do that now while we're touching these fields?",
    "created_at": "2020-09-08T08:19:36Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484737211",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484737211"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484737211"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484737211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 829,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484795962",
    "pull_request_review_id": 483901878,
    "id": 484795962,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5NTk2Mg==",
    "diff_hunk": "@@ -3852,8 +3861,14 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n \n     // this maintains the order of responses\n     // and prevents vRecvGetData to grow unbounded\n-    if (!pfrom->vRecvGetData.empty()) return true;\n-    if (!pfrom->orphan_work_set.empty()) return true;\n+    {\n+        LOCK(pfrom->cs_vRecv);\n+        if (!pfrom->vRecvGetData.empty()) return true;\n+    }\n+    {\n+        LOCK2(cs_main, g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 72,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think `cs_main` is required here.",
    "created_at": "2020-09-08T09:54:05Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484795962",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484795962"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484795962"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484795962/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3869,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484799322",
    "pull_request_review_id": 483981369,
    "id": 484799322,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5OTMyMg==",
    "diff_hunk": "@@ -825,7 +826,7 @@ class CNode\n \n     RecursiveMutex cs_sendProcessing;\n \n-    std::deque<CInv> vRecvGetData;\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecv);",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> ... `vRecvGetData` is a data structure used in the application layer (and should eventually move to the `Peer` struct)...\r\n\r\nMaybe start from moving, and then introduce a mutex?",
    "created_at": "2020-09-08T09:59:50Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484799322",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484799322"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484799322"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484799322/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 829,
    "side": "RIGHT",
    "in_reply_to_id": 484737211
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484820843",
    "pull_request_review_id": 484009752,
    "id": 484820843,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgyMDg0Mw==",
    "diff_hunk": "@@ -825,7 +826,7 @@ class CNode\n \n     RecursiveMutex cs_sendProcessing;\n \n-    std::deque<CInv> vRecvGetData;\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecv);",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Maybe start from moving, and then introduce a mutex?\r\n\r\nI think that's probably the cleanest order, but I don't want to scope-creep @narula's PR if she thinks it's better to add the mutex first. I can do the move later.",
    "created_at": "2020-09-08T10:39:48Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484820843",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484820843"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r484820843"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/484820843/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 829,
    "side": "RIGHT",
    "in_reply_to_id": 484737211
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485237497",
    "pull_request_review_id": 484546358,
    "id": 485237497,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIzNzQ5Nw==",
    "diff_hunk": "@@ -1722,7 +1722,7 @@ static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode&\n     return {};\n }\n \n-void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n+void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(pfrom.cs_vRecv) LOCKS_EXCLUDED(cs_main)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks @hebasto! TIL. It's certainly shorter, but I'm worried people might miss the `!` if reading quickly, and think this function requires `cs_main`.\r\n\r\nCould you share why you suggest switching from `void static` to `static void`? Is it for general cleanup?",
    "created_at": "2020-09-08T22:49:57Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r485237497",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485237497"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r485237497"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485237497/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1725,
    "side": "RIGHT",
    "in_reply_to_id": 484707451
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485351754",
    "pull_request_review_id": 484676711,
    "id": 485351754,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM1MTc1NA==",
    "diff_hunk": "@@ -1722,7 +1722,7 @@ static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode&\n     return {};\n }\n \n-void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n+void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(pfrom.cs_vRecv) LOCKS_EXCLUDED(cs_main)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> Thanks @hebasto! TIL. It's certainly shorter, but I'm worried people might miss the `!` if reading quickly, and think this function requires `cs_main`.\r\n\r\nIt is not about \"shorter\" :)\r\nSee:\r\n- https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#excludes\r\n- https://clang.llvm.org/docs/ThreadSafetyAnalysis.html#negative-capabilities\r\n\r\n> Could you share why you suggest switching from `void static` to `static void`? Is it for general cleanup?\r\n\r\nE.g., fa0572d0f3b083b4c8e2e883a66e2b198c6779f1 by @MarcoFalke \r\n\r\n",
    "created_at": "2020-09-09T05:44:56Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r485351754",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485351754"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r485351754"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/485351754/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1725,
    "side": "RIGHT",
    "in_reply_to_id": 484707451
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487585290",
    "pull_request_review_id": 487345173,
    "id": 487585290,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzU4NTI5MA==",
    "diff_hunk": "@@ -3852,8 +3861,14 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n \n     // this maintains the order of responses\n     // and prevents vRecvGetData to grow unbounded\n-    if (!pfrom->vRecvGetData.empty()) return true;\n-    if (!pfrom->orphan_work_set.empty()) return true;\n+    {\n+        LOCK(pfrom->cs_vRecv);\n+        if (!pfrom->vRecvGetData.empty()) return true;\n+    }\n+    {\n+        LOCK2(cs_main, g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 72,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "right!",
    "created_at": "2020-09-13T22:29:35Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487585290",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487585290"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487585290"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487585290/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 3869,
    "side": "RIGHT",
    "in_reply_to_id": 484795962
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487697265",
    "pull_request_review_id": 487473240,
    "id": 487697265,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzY5NzI2NQ==",
    "diff_hunk": "@@ -825,7 +826,7 @@ class CNode\n \n     RecursiveMutex cs_sendProcessing;\n \n-    std::deque<CInv> vRecvGetData;\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecv);",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> I don't think it's right to reuse this mutex to guard `vRecvGetData` (despite the name similarities).\r\n\r\nI agree on not reusing of irrelevant mutex. To keep this PR focused, would it more correctly to introduce a new `Mutex m_recvgetdata_mutex`?",
    "created_at": "2020-09-14T07:14:13Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487697265",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487697265"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487697265"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487697265/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 829,
    "side": "RIGHT",
    "in_reply_to_id": 484737211
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487736372",
    "pull_request_review_id": 487526536,
    "id": 487736372,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzczNjM3Mg==",
    "diff_hunk": "@@ -2845,36 +2848,36 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n-\n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+        CInv inv;\n+        {\n+            LOCK(cs_main);\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n             // If an older block is requested (should never happen in practice,\n             // but can happen in tests) send a block response instead of a\n             // blocktxn response. Sending a full block response instead of a\n             // small blocktxn response is preferable in the case where a peer\n             // might maliciously send lots of getblocktxn requests to trigger\n             // expensive disk reads, because it will require the peer to\n             // actually receive all the data read from disk over the network.\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n             inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            pfrom.vRecvGetData.push_back(inv);\n-            // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n-            return;\n         }\n \n-        CBlock block;\n-        bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-        assert(ret);\n-\n-        SendBlockTransactions(pfrom, block, req);\n+        LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n+        inv.hash = req.blockhash;\n+        WITH_LOCK(pfrom.cs_vRecv, pfrom.vRecvGetData.push_back(inv));\n+        // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 75,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "eadbad9d273edbca08ca1a49cb493292edd411a3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This would be a slight sequencing change, but perhaps we should either call `ProcessGetData()` here, or not call it in the `GETDATA` processing for consistency. It seems from this comment that the only reason we weren't calling `ProcessGetData()` here was that `cs_main` was being held, which is no longer the case.",
    "created_at": "2020-09-14T08:24:48Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487736372",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487736372"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487736372"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487736372/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2880,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487935532",
    "pull_request_review_id": 487789803,
    "id": 487935532,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkzNTUzMg==",
    "diff_hunk": "@@ -825,7 +826,7 @@ class CNode\n \n     RecursiveMutex cs_sendProcessing;\n \n-    std::deque<CInv> vRecvGetData;\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecv);",
    "path": "src/net.h",
    "position": null,
    "original_position": 13,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "3fe40815bf0e26b58dca03e164972ea70a6aa69d",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I agree on a new mutex; I was wondering about that but assumed @sipa had some reason for suggesting using `cs_vRecv` to guard it in the first place. ",
    "created_at": "2020-09-14T13:51:22Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487935532",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487935532"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487935532"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487935532/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 829,
    "side": "RIGHT",
    "in_reply_to_id": 484737211
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487939860",
    "pull_request_review_id": 487793806,
    "id": 487939860,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkzOTg2MA==",
    "diff_hunk": "@@ -2845,36 +2848,36 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n-\n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+        CInv inv;\n+        {\n+            LOCK(cs_main);\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n             // If an older block is requested (should never happen in practice,\n             // but can happen in tests) send a block response instead of a\n             // blocktxn response. Sending a full block response instead of a\n             // small blocktxn response is preferable in the case where a peer\n             // might maliciously send lots of getblocktxn requests to trigger\n             // expensive disk reads, because it will require the peer to\n             // actually receive all the data read from disk over the network.\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n             inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            pfrom.vRecvGetData.push_back(inv);\n-            // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n-            return;\n         }\n \n-        CBlock block;\n-        bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-        assert(ret);\n-\n-        SendBlockTransactions(pfrom, block, req);\n+        LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n+        inv.hash = req.blockhash;\n+        WITH_LOCK(pfrom.cs_vRecv, pfrom.vRecvGetData.push_back(inv));\n+        // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 75,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "eadbad9d273edbca08ca1a49cb493292edd411a3",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Would this be a behavior change?",
    "created_at": "2020-09-14T13:55:26Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487939860",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487939860"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r487939860"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/487939860/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2880,
    "side": "RIGHT",
    "in_reply_to_id": 487736372
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488028390",
    "pull_request_review_id": 487897779,
    "id": 488028390,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyODM5MA==",
    "diff_hunk": "@@ -1722,11 +1730,11 @@ static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode&\n     return {};\n }\n \n-void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n+void static ProcessGetData(CNode& pfrom, PeerRef peer, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(!cs_main, peer->cs_vRecvGetData)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "e15554c134c55599951e0765b02b520f72750a79",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`PeerRef` is a shared pointer, so by passing it by value here, you're incrementing the ref count, and decrementing it again when you leave the function, which incurs a performance cost, since those operations need to be atomic.\r\n\r\nThis function doesn't need to take shared ownership of the underlying `Peer` object, so you should pass by `Peer&` (see http://isocpp.github.io/CppCoreGuidelines/CppCoreGuidelines#r30-take-smart-pointers-as-parameters-only-to-explicitly-express-lifetime-semantics).",
    "created_at": "2020-09-14T15:33:44Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r488028390",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488028390"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r488028390"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488028390/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1733,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488029389",
    "pull_request_review_id": 487897779,
    "id": 488029389,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyOTM4OQ==",
    "diff_hunk": "@@ -2334,6 +2342,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    assert(peer);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 61,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "e15554c134c55599951e0765b02b520f72750a79",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's probably safer to just return if you can't find the `Peer` object here (as all other instances of `GetPeerRef()` except the `FinalizeNode()` call do) rather than assert.",
    "created_at": "2020-09-14T15:35:06Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r488029389",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488029389"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r488029389"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/488029389/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2346,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173268",
    "pull_request_review_id": 499009276,
    "id": 497173268,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3MzI2OA==",
    "diff_hunk": "@@ -1722,11 +1730,11 @@ static CTransactionRef FindTxForGetData(const CTxMemPool& mempool, const CNode&\n     return {};\n }\n \n-void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) LOCKS_EXCLUDED(cs_main)\n+void static ProcessGetData(CNode& pfrom, PeerRef peer, const CChainParams& chainparams, CConnman& connman, CTxMemPool& mempool, const std::atomic<bool>& interruptMsgProc) EXCLUSIVE_LOCKS_REQUIRED(!cs_main, peer->cs_vRecvGetData)",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 20,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "e15554c134c55599951e0765b02b520f72750a79",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "thanks for the pointer! fixed.",
    "created_at": "2020-09-30T00:19:44Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497173268",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173268"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497173268"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173268/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1733,
    "side": "RIGHT",
    "in_reply_to_id": 488028390
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173408",
    "pull_request_review_id": 499009343,
    "id": 497173408,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3MzQwOA==",
    "diff_hunk": "@@ -2334,6 +2342,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    assert(peer);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 61,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "e15554c134c55599951e0765b02b520f72750a79",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "addressed.",
    "created_at": "2020-09-30T00:19:53Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497173408",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173408"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497173408"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497173408/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2346,
    "side": "RIGHT",
    "in_reply_to_id": 488029389
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497435407",
    "pull_request_review_id": 499331075,
    "id": 497435407,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQzNTQwNw==",
    "diff_hunk": "@@ -2984,6 +2987,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         }\n \n         std::list<CTransactionRef> lRemovedTxn;\n+        PeerRef peer = GetPeerRef(pfrom.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "418cc40c35f5e34cfb9d19034d746d4abb75cfe3",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit \"Move m_orphan_work_set to net_processing\": I think you should put this call at the top of `ProcessMessage()` in this commit, rather than putting it here, and then moving it up in a later commit.\r\n\r\nAlternatively, you could change the `ProcessMessage()` signature to take a `Peer&`. I don't think that's necessary, but you may prefer it to fetching the `PeerRef` in `ProcessMessages()` and then again in `ProcessMessage()`.",
    "created_at": "2020-09-30T11:27:17Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497435407",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497435407"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497435407"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497435407/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2990,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497446364",
    "pull_request_review_id": 499331075,
    "id": 497446364,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0NjM2NA==",
    "diff_hunk": "@@ -488,6 +488,14 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects vRecvGetData **/\n+    Mutex cs_vRecvGetData;\n+    /** Work queue of items requested by this peer **/\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecvGetData);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "fe476e0c5130b8e13d5194fd7c98672f87818ba4",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Since you're touching every line that `vRecvGetData` is on already, you may as well add a scripted-diff commit to this branch that updates the name to modern style guidelines, e.g. something like `m_get_data_requests` or similar. Same for the mutex name - it could be renamed to `m_get_data_requests_mutex` or similar.",
    "created_at": "2020-09-30T11:48:23Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497446364",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497446364"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497446364"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497446364/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 510,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497715142",
    "pull_request_review_id": 499701900,
    "id": 497715142,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNTE0Mg==",
    "diff_hunk": "@@ -488,6 +488,14 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects vRecvGetData **/\n+    Mutex cs_vRecvGetData;\n+    /** Work queue of items requested by this peer **/\n+    std::deque<CInv> vRecvGetData GUARDED_BY(cs_vRecvGetData);",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "fe476e0c5130b8e13d5194fd7c98672f87818ba4",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done",
    "created_at": "2020-09-30T18:26:43Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497715142",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497715142"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497715142"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497715142/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 510,
    "side": "RIGHT",
    "in_reply_to_id": 497446364
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497716433",
    "pull_request_review_id": 499703501,
    "id": 497716433,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxNjQzMw==",
    "diff_hunk": "@@ -2984,6 +2987,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         }\n \n         std::list<CTransactionRef> lRemovedTxn;\n+        PeerRef peer = GetPeerRef(pfrom.GetId());",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 14,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "418cc40c35f5e34cfb9d19034d746d4abb75cfe3",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "done. I am fine with calling `GetPeerRef` again, so will leave as is and not change the signature of `ProcessMessage()`.",
    "created_at": "2020-09-30T18:28:55Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497716433",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497716433"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r497716433"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/497716433/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2990,
    "side": "RIGHT",
    "in_reply_to_id": 497435407
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913124",
    "pull_request_review_id": 505036862,
    "id": 501913124,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxMzEyNA==",
    "diff_hunk": "@@ -2858,36 +2872,40 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        CInv inv;\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+        {\n+            LOCK(cs_main);\n+\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n+\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n+\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n             // If an older block is requested (should never happen in practice,",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 111,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "348202f27b75a6b147ab04166cdb343d3e955d91",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Rather than splitting this logic up (hoisting the `CInv` declaration above the code block, fetching the `type` inside the `cs_main` scope, and then putting the rest of the logic outside the cs_main scope), I recommend you keep all the logic together:\r\n\r\n```diff\r\n--- a/src/net_processing.cpp\r\n+++ b/src/net_processing.cpp\r\n@@ -2872,8 +2872,6 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n             return;\r\n         }\r\n \r\n-        CInv inv;\r\n-\r\n         {\r\n             LOCK(cs_main);\r\n \r\n@@ -2892,17 +2890,18 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\r\n                 return;\r\n             }\r\n \r\n-            // If an older block is requested (should never happen in practice,\r\n-            // but can happen in tests) send a block response instead of a\r\n-            // blocktxn response. Sending a full block response instead of a\r\n-            // small blocktxn response is preferable in the case where a peer\r\n-            // might maliciously send lots of getblocktxn requests to trigger\r\n-            // expensive disk reads, because it will require the peer to\r\n-            // actually receive all the data read from disk over the network.\r\n-            inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\r\n         }\r\n \r\n+        // If an older block is requested (should never happen in practice,\r\n+        // but can happen in tests) send a block response instead of a\r\n+        // blocktxn response. Sending a full block response instead of a\r\n+        // small blocktxn response is preferable in the case where a peer\r\n+        // might maliciously send lots of getblocktxn requests to trigger\r\n+        // expensive disk reads, because it will require the peer to\r\n+        // actually receive all the data read from disk over the network.\r\n         LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\r\n+        CInv inv;\r\n+        inv.type = WITH_LOCK(cs_main, return State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);\r\n         inv.hash = req.blockhash;\r\n```\r\n\r\nIt's slightly wasteful that cs_main is released and then taken again, but I think it's ok because:\r\n\r\n1. As the comment says, we don't expect this to happen except in tests\r\n2. `fWantsCmpctWitness` should move to the `Peer` struct eventually, removing the need to take cs_main",
    "created_at": "2020-10-08T18:03:59Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r501913124",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913124"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r501913124"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2895,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913848",
    "pull_request_review_id": 505036862,
    "id": 501913848,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxMzg0OA==",
    "diff_hunk": "@@ -501,6 +501,14 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n+\n+    /** Protects m_getdata_requests **/\n+    Mutex m_getdata_requests_mutex;",
    "path": "src/net_processing.cpp",
    "position": 8,
    "original_position": 8,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "348202f27b75a6b147ab04166cdb343d3e955d91",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just realised you add this as `cs_vRecvGetData` in one commit and then change it with a scripted diff in the subsequent commit. You can just name it `m_getdata_requests_mutex` in the first commit!",
    "created_at": "2020-10-08T18:05:06Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r501913848",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913848"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r501913848"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/501913848/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 519,
    "original_line": 519,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504301257",
    "pull_request_review_id": 507880932,
    "id": 504301257,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwMTI1Nw==",
    "diff_hunk": "@@ -2858,36 +2872,40 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        CInv inv;\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+        {\n+            LOCK(cs_main);\n+\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n+\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n+\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n             // If an older block is requested (should never happen in practice,",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 111,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "348202f27b75a6b147ab04166cdb343d3e955d91",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agreed, this is nicer! Changed. \r\n\r\nInterestingly, your exact suggestion didn't work: I had to move the assignment to `inv.type` inside the `WITH_LOCK` macro. I got the following error the other way:\r\n\r\n```\r\n./sync.h:257:45: note: expanded from macro 'WITH_LOCK'\r\n#define WITH_LOCK(cs, code) [&] { LOCK(cs); code; }()\r\n                                            ^~~~\r\nnet_processing.cpp:2934:20: error: assigning to 'uint32_t' (aka 'unsigned int') from incompatible type 'void'\r\n        inv.type = WITH_LOCK(cs_main, State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);\r\n                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n./sync.h:257:29: note: expanded from macro 'WITH_LOCK'\r\n#define WITH_LOCK(cs, code) [&] { LOCK(cs); code; }()\r\n                            ^~~~~~~~~~~~~~~~~~~~~~~~~\r\n```",
    "created_at": "2020-10-13T22:46:25Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504301257",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504301257"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504301257"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504301257/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2895,
    "side": "RIGHT",
    "in_reply_to_id": 501913124
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504504603",
    "pull_request_review_id": 508122868,
    "id": 504504603,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDUwNDYwMw==",
    "diff_hunk": "@@ -2858,36 +2872,40 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        CInv inv;\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+        {\n+            LOCK(cs_main);\n+\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n+\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n+\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n             // If an older block is requested (should never happen in practice,",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 111,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "348202f27b75a6b147ab04166cdb343d3e955d91",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It looks like you missed out the `return` from inside the `WITH_LOCK` macro's second argument:\r\n\r\n`        inv.type = WITH_LOCK(cs_main, return State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);`\r\n\r\nBut your way is also fine!",
    "created_at": "2020-10-14T08:42:20Z",
    "updated_at": "2020-10-14T14:10:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504504603",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504504603"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504504603"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504504603/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2895,
    "side": "RIGHT",
    "in_reply_to_id": 501913124
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504745752",
    "pull_request_review_id": 508436752,
    "id": 504745752,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc0NTc1Mg==",
    "diff_hunk": "@@ -512,6 +512,9 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/",
    "path": "src/net_processing.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc\r\n\r\nTo describe a member `//!` is [recommended](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments):\r\n```suggestion\r\n    //! Set of txids to reconsider once their parent transactions have been accepted.\r\n```",
    "created_at": "2020-10-14T14:55:18Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504745752",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504745752"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504745752"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504745752/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504746443",
    "pull_request_review_id": 508436752,
    "id": 504746443,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc0NjQ0Mw==",
    "diff_hunk": "@@ -2363,6 +2366,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 61,
    "original_position": 15,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc, nit:\r\n```suggestion\r\n    if (!peer) return;\r\n```",
    "created_at": "2020-10-14T14:56:06Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504746443",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504746443"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504746443"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504746443/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2375,
    "original_line": 2370,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504748385",
    "pull_request_review_id": 508436752,
    "id": 504748385,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc0ODM4NQ==",
    "diff_hunk": "@@ -3865,12 +3870,15 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n {\n     bool fMoreWork = false;\n \n+    PeerRef peer = GetPeerRef(pfrom->GetId());\n+    if (peer == nullptr) return false;",
    "path": "src/net_processing.cpp",
    "position": 170,
    "original_position": 42,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc, nit:\r\n```suggestion\r\n    if (!peer) return false;\r\n```",
    "created_at": "2020-10-14T14:58:28Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504748385",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504748385"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504748385"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504748385/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3885,
    "original_line": 3874,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504755912",
    "pull_request_review_id": 508436752,
    "id": 504755912,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1NTkxMg==",
    "diff_hunk": "@@ -513,7 +513,7 @@ struct Peer {\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set;\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "673247b58cd1252ab7e99f7d63ead05cc100cef2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "673247b58cd1252ab7e99f7d63ead05cc100cef2, nit:\r\n```suggestion\r\n    std::set<uint256> m_orphan_work_set GUARDED_BY(::g_cs_orphans);\r\n```",
    "created_at": "2020-10-14T15:08:07Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504755912",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504755912"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504755912"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504755912/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 516,
    "original_line": 516,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504756533",
    "pull_request_review_id": 508436752,
    "id": 504756533,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1NjUzMw==",
    "diff_hunk": "@@ -3887,7 +3889,10 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n     // this maintains the order of responses\n     // and prevents vRecvGetData to grow unbounded\n     if (!pfrom->vRecvGetData.empty()) return true;\n-    if (!peer->m_orphan_work_set.empty()) return true;\n+    {\n+        LOCK(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": 202,
    "original_position": 29,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "673247b58cd1252ab7e99f7d63ead05cc100cef2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "673247b58cd1252ab7e99f7d63ead05cc100cef2, nit:\r\n```suggestion\r\n        LOCK(::g_cs_orphans);\r\n```",
    "created_at": "2020-10-14T15:08:55Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504756533",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504756533"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504756533"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504756533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3912,
    "original_line": 3893,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504757740",
    "pull_request_review_id": 508436752,
    "id": 504757740,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1Nzc0MA==",
    "diff_hunk": "@@ -515,6 +515,9 @@ struct Peer {\n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n     std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n \n+    /** Work queue of items requested by this peer **/",
    "path": "src/net_processing.cpp",
    "position": 9,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2d9f2fca43aadcdda4d644cddab36dca88b40b97\r\n\r\nTo describe a member `//!` is [recommended](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments):\r\n```suggestion\r\n    //! Work queue of items requested by this peer.\r\n```",
    "created_at": "2020-10-14T15:10:26Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504757740",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504757740"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504757740"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504757740/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 520,
    "original_line": 518,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758200",
    "pull_request_review_id": 508436752,
    "id": 504758200,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1ODIwMA==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 16,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2d9f2fca43aadcdda4d644cddab36dca88b40b97, nit:\r\n```suggestion\r\n    if (!peer) return;\r\n```",
    "created_at": "2020-10-14T15:11:02Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504758200",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758200"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504758200"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758200/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1761,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758581",
    "pull_request_review_id": 508436752,
    "id": 504758581,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1ODU4MQ==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2d9f2fca43aadcdda4d644cddab36dca88b40b97, nit:\r\n```suggestion\r\n    auto it = peer->vRecvGetData.begin();\r\n```",
    "created_at": "2020-10-14T15:11:33Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504758581",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758581"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504758581"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504758581/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504759682",
    "pull_request_review_id": 508436752,
    "id": 504759682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc1OTY4Mg==",
    "diff_hunk": "@@ -3921,7 +3928,7 @@ bool PeerManager::ProcessMessages(CNode* pfrom, std::atomic<bool>& interruptMsgP\n         ProcessMessage(*pfrom, msg_type, msg.m_recv, msg.m_time, interruptMsgProc);\n         if (interruptMsgProc)\n             return false;\n-        if (!pfrom->vRecvGetData.empty())\n+        if (!peer->vRecvGetData.empty())\n             fMoreWork = true;",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 93,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "2d9f2fca43aadcdda4d644cddab36dca88b40b97\r\n\r\nnit: add braces or make one line?",
    "created_at": "2020-10-14T15:12:59Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504759682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504759682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504759682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504759682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 3931,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 3932,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504760847",
    "pull_request_review_id": 508436752,
    "id": 504760847,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc2MDg0Nw==",
    "diff_hunk": "@@ -515,8 +515,10 @@ struct Peer {\n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n     std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n \n+    /** Protects vRecvGetData **/",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "ba951812ec0cc8ebee5911a582f188525b76ff0a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ba951812ec0cc8ebee5911a582f188525b76ff0a\r\n\r\nTo describe a member `//!` is [recommended](https://github.com/bitcoin/bitcoin/blob/master/doc/developer-notes.md#coding-style-doxygen-compatible-comments):\r\n```suggestion\r\n    //! Protects vRecvGetData.\r\n```",
    "created_at": "2020-10-14T15:14:32Z",
    "updated_at": "2020-10-14T15:31:47Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504760847",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504760847"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504760847"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504760847/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 518,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504772681",
    "pull_request_review_id": 508436752,
    "id": 504772681,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc3MjY4MQ==",
    "diff_hunk": "@@ -2900,36 +2903,38 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        {\n+            LOCK(cs_main);\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n-            // If an older block is requested (should never happen in practice,\n-            // but can happen in tests) send a block response instead of a\n-            // blocktxn response. Sending a full block response instead of a\n-            // small blocktxn response is preferable in the case where a peer\n-            // might maliciously send lots of getblocktxn requests to trigger\n-            // expensive disk reads, because it will require the peer to\n-            // actually receive all the data read from disk over the network.\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n-            inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            peer->vRecvGetData.push_back(inv);\n-            // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n-            return;\n-        }\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n \n-        CBlock block;\n-        bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-        assert(ret);\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n+        }\n \n-        SendBlockTransactions(pfrom, block, req);\n+        // If an older block is requested (should never happen in practice,\n+        // but can happen in tests) send a block response instead of a\n+        // blocktxn response. Sending a full block response instead of a\n+        // small blocktxn response is preferable in the case where a peer\n+        // might maliciously send lots of getblocktxn requests to trigger\n+        // expensive disk reads, because it will require the peer to\n+        // actually receive all the data read from disk over the network.\n+        LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n+        CInv inv;\n+        WITH_LOCK(cs_main, inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);",
    "path": "src/net_processing.cpp",
    "position": 138,
    "original_position": 129,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "ba951812ec0cc8ebee5911a582f188525b76ff0a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this could change behavior as between two consequent `::cs_main` holding the guarded state could be changed.\r\n\r\nMaybe just place `State` call into the guarded block above?",
    "created_at": "2020-10-14T15:29:51Z",
    "updated_at": "2020-10-14T15:31:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504772681",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504772681"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504772681"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504772681/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2934,
    "original_line": 2934,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504790496",
    "pull_request_review_id": 508495150,
    "id": 504790496,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MDQ5Ng==",
    "diff_hunk": "@@ -2900,36 +2903,38 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        {\n+            LOCK(cs_main);\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n-            // If an older block is requested (should never happen in practice,\n-            // but can happen in tests) send a block response instead of a\n-            // blocktxn response. Sending a full block response instead of a\n-            // small blocktxn response is preferable in the case where a peer\n-            // might maliciously send lots of getblocktxn requests to trigger\n-            // expensive disk reads, because it will require the peer to\n-            // actually receive all the data read from disk over the network.\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n-            inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            peer->vRecvGetData.push_back(inv);\n-            // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n-            return;\n-        }\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n \n-        CBlock block;\n-        bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-        assert(ret);\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n+        }\n \n-        SendBlockTransactions(pfrom, block, req);\n+        // If an older block is requested (should never happen in practice,\n+        // but can happen in tests) send a block response instead of a\n+        // blocktxn response. Sending a full block response instead of a\n+        // small blocktxn response is preferable in the case where a peer\n+        // might maliciously send lots of getblocktxn requests to trigger\n+        // expensive disk reads, because it will require the peer to\n+        // actually receive all the data read from disk over the network.\n+        LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n+        CInv inv;\n+        WITH_LOCK(cs_main, inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);",
    "path": "src/net_processing.cpp",
    "position": 138,
    "original_position": 129,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "ba951812ec0cc8ebee5911a582f188525b76ff0a",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Whether a peer prefers witness data is independent from whether the block can be fetched from disk. The fact that they both happen to be guarded by cs_main is more of a historic accident than anything else. I think it's fine to release and retake cs_main here.",
    "created_at": "2020-10-14T15:54:21Z",
    "updated_at": "2020-10-14T15:54:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504790496",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504790496"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504790496"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504790496/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2934,
    "original_line": 2934,
    "side": "RIGHT",
    "in_reply_to_id": 504772681
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504791695",
    "pull_request_review_id": 508496671,
    "id": 504791695,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MTY5NQ==",
    "diff_hunk": "@@ -512,6 +512,9 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/",
    "path": "src/net_processing.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I see lots of examples of `/**` being used for member comments throughout the codebase. We should update the developer docs to say both styles are allowed rather than try to change all comments to fit to one style.",
    "created_at": "2020-10-14T15:55:59Z",
    "updated_at": "2020-10-14T15:56:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504791695",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504791695"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504791695"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504791695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT",
    "in_reply_to_id": 504745752
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792094",
    "pull_request_review_id": 508497161,
    "id": 504792094,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MjA5NA==",
    "diff_hunk": "@@ -2900,36 +2903,38 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             return;\n         }\n \n-        LOCK(cs_main);\n+        {\n+            LOCK(cs_main);\n \n-        const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n-        if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n-            return;\n-        }\n+            const CBlockIndex* pindex = LookupBlockIndex(req.blockhash);\n+            if (!pindex || !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n+                LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block we don't have\\n\", pfrom.GetId());\n+                return;\n+            }\n \n-        if (pindex->nHeight < ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n-            // If an older block is requested (should never happen in practice,\n-            // but can happen in tests) send a block response instead of a\n-            // blocktxn response. Sending a full block response instead of a\n-            // small blocktxn response is preferable in the case where a peer\n-            // might maliciously send lots of getblocktxn requests to trigger\n-            // expensive disk reads, because it will require the peer to\n-            // actually receive all the data read from disk over the network.\n-            LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n-            inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            peer->vRecvGetData.push_back(inv);\n-            // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n-            return;\n-        }\n+            if (pindex->nHeight >= ::ChainActive().Height() - MAX_BLOCKTXN_DEPTH) {\n+                CBlock block;\n+                bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n+                assert(ret);\n \n-        CBlock block;\n-        bool ret = ReadBlockFromDisk(block, pindex, m_chainparams.GetConsensus());\n-        assert(ret);\n+                SendBlockTransactions(pfrom, block, req);\n+                return;\n+            }\n+        }\n \n-        SendBlockTransactions(pfrom, block, req);\n+        // If an older block is requested (should never happen in practice,\n+        // but can happen in tests) send a block response instead of a\n+        // blocktxn response. Sending a full block response instead of a\n+        // small blocktxn response is preferable in the case where a peer\n+        // might maliciously send lots of getblocktxn requests to trigger\n+        // expensive disk reads, because it will require the peer to\n+        // actually receive all the data read from disk over the network.\n+        LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n+        CInv inv;\n+        WITH_LOCK(cs_main, inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK);",
    "path": "src/net_processing.cpp",
    "position": 138,
    "original_position": 129,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "ba951812ec0cc8ebee5911a582f188525b76ff0a",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@jnewbery Thanks!",
    "created_at": "2020-10-14T15:56:28Z",
    "updated_at": "2020-10-14T15:56:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504792094",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792094"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504792094"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792094/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2934,
    "original_line": 2934,
    "side": "RIGHT",
    "in_reply_to_id": 504772681
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792680",
    "pull_request_review_id": 508497904,
    "id": 504792680,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDc5MjY4MA==",
    "diff_hunk": "@@ -512,6 +512,9 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/",
    "path": "src/net_processing.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree.",
    "created_at": "2020-10-14T15:57:15Z",
    "updated_at": "2020-10-14T15:57:15Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504792680",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792680"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504792680"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504792680/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT",
    "in_reply_to_id": 504745752
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504975677",
    "pull_request_review_id": 508733523,
    "id": 504975677,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDk3NTY3Nw==",
    "diff_hunk": "@@ -2363,6 +2366,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 61,
    "original_position": 15,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm trying to be consistent with other ways this is checked in the file, for example https://github.com/bitcoin/bitcoin/blob/8803aee66813d27ddbdfce937ab9c35f8f7c35bc/src/net_processing.cpp#L999 and https://github.com/bitcoin/bitcoin/blob/8803aee66813d27ddbdfce937ab9c35f8f7c35bc/src/net_processing.cpp#L1146",
    "created_at": "2020-10-14T21:13:56Z",
    "updated_at": "2020-10-14T21:13:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504975677",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504975677"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r504975677"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/504975677/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2375,
    "original_line": 2370,
    "side": "RIGHT",
    "in_reply_to_id": 504746443
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505006941",
    "pull_request_review_id": 508803607,
    "id": 505006941,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNjk0MQ==",
    "diff_hunk": "@@ -512,6 +512,9 @@ struct Peer {\n     /** Whether this peer should be disconnected and marked as discouraged (unless it has the noban permission). */\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n+    /** Set of txids to reconsider once their parent transactions have been accepted **/",
    "path": "src/net_processing.cpp",
    "position": 4,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Resolution: I'll leave this as is.",
    "created_at": "2020-10-14T22:06:37Z",
    "updated_at": "2020-10-14T22:06:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505006941",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505006941"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505006941"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505006941/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 515,
    "original_line": 515,
    "side": "RIGHT",
    "in_reply_to_id": 504745752
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505007383",
    "pull_request_review_id": 508803926,
    "id": 505007383,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNzM4Mw==",
    "diff_hunk": "@@ -515,6 +515,9 @@ struct Peer {\n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n     std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);\n \n+    /** Work queue of items requested by this peer **/",
    "path": "src/net_processing.cpp",
    "position": 9,
    "original_position": 4,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "As noted above, leaving this as is.",
    "created_at": "2020-10-14T22:07:12Z",
    "updated_at": "2020-10-14T22:07:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505007383",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505007383"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505007383"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505007383/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 520,
    "original_line": 518,
    "side": "RIGHT",
    "in_reply_to_id": 504757740
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505018501",
    "pull_request_review_id": 508810822,
    "id": 505018501,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAxODUwMQ==",
    "diff_hunk": "@@ -513,7 +513,7 @@ struct Peer {\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set;\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "673247b58cd1252ab7e99f7d63ead05cc100cef2",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thank you for the suggestion! Could you point me towards anything which indicates why this might be preferred? Based on my understanding, it seems like a style preference. 1) Globals are already prefixed with `g_` making it very unlikely to have a conflicting local variable 2) I don't see anywhere else in the codebase using this operator for globals.",
    "created_at": "2020-10-14T22:21:35Z",
    "updated_at": "2020-10-14T22:21:35Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505018501",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505018501"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505018501"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505018501/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 516,
    "original_line": 516,
    "side": "RIGHT",
    "in_reply_to_id": 504755912
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505192691",
    "pull_request_review_id": 509019540,
    "id": 505192691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE5MjY5MQ==",
    "diff_hunk": "@@ -513,7 +513,7 @@ struct Peer {\n     bool m_should_discourage GUARDED_BY(m_misbehavior_mutex){false};\n \n     /** Set of txids to reconsider once their parent transactions have been accepted **/\n-    std::set<uint256> m_orphan_work_set;\n+    std::set<uint256> m_orphan_work_set GUARDED_BY(g_cs_orphans);",
    "path": "src/net_processing.cpp",
    "position": 5,
    "original_position": 5,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "673247b58cd1252ab7e99f7d63ead05cc100cef2",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`git grep ::cs` or https://github.com/bitcoin/bitcoin/blob/f2e6d14430137a271d153348d207df6ab8086bc6/src/init.cpp#L216\r\n\r\n> Based on my understanding, it seems like a style preference.\r\n\r\nCorrect. Feel free to ignore this nit.",
    "created_at": "2020-10-15T06:19:35Z",
    "updated_at": "2020-10-15T06:19:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505192691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505192691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505192691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505192691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 516,
    "original_line": 516,
    "side": "RIGHT",
    "in_reply_to_id": 504755912
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505198649",
    "pull_request_review_id": 509033307,
    "id": 505198649,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE5ODY0OQ==",
    "diff_hunk": "@@ -2363,6 +2366,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 61,
    "original_position": 15,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think it is required to be consistent with a bad style of the surrounding code. Are we going to check every raw/smart pointer against `nullptr` explicitly everywhere in the code?",
    "created_at": "2020-10-15T06:27:10Z",
    "updated_at": "2020-10-15T06:27:10Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505198649",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505198649"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505198649"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505198649/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2375,
    "original_line": 2370,
    "side": "RIGHT",
    "in_reply_to_id": 504746443
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505377863",
    "pull_request_review_id": 509170186,
    "id": 505377863,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM3Nzg2Mw==",
    "diff_hunk": "@@ -2363,6 +2366,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         return;\n     }\n \n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;",
    "path": "src/net_processing.cpp",
    "position": 61,
    "original_position": 15,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "8803aee66813d27ddbdfce937ab9c35f8f7c35bc",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think both are fine. We don't express a preference in our style guide. I think @hebasto's suggestion is more idiomatic, and if I were writing those lines again, I'd use the `!ptr` form.",
    "created_at": "2020-10-15T09:06:01Z",
    "updated_at": "2020-10-15T09:06:02Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505377863",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505377863"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505377863"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505377863/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2375,
    "original_line": 2370,
    "side": "RIGHT",
    "in_reply_to_id": 504746443
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505379547",
    "pull_request_review_id": 509171915,
    "id": 505379547,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM3OTU0Nw==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "We don't have guidance about `auto` usage in our style guide. I personally think `auto` should only be used if the type is immediately obvious from the surrounding code, and it's saving redundant and verbose keystrokes. ",
    "created_at": "2020-10-15T09:08:11Z",
    "updated_at": "2020-10-15T09:08:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505379547",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505379547"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505379547"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505379547/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT",
    "in_reply_to_id": 504758581
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505388279",
    "pull_request_review_id": 509181490,
    "id": 505388279,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTM4ODI3OQ==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "> We don't have guidance about `auto` usage in our style guide.\r\n\r\nYes. And I think we should have it.\r\n\r\n> I personally think `auto` should only be used if the type is immediately obvious from the surrounding code, and it's saving redundant and verbose keystrokes.\r\n\r\nhttps://herbsutter.com/2013/08/12/gotw-94-solution-aaa-style-almost-always-auto/",
    "created_at": "2020-10-15T09:19:50Z",
    "updated_at": "2020-10-15T09:19:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505388279",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505388279"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505388279"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505388279/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT",
    "in_reply_to_id": 504758581
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505431669",
    "pull_request_review_id": 509232748,
    "id": 505431669,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzMTY2OQ==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks @hebasto. I hadn't seen that particular blog post before, but I am familiar with the arguments for and against `auto`. Scott Meyers also dedicates a chapter to it in Exceptional Modern C++.\r\n\r\nHere, I think it's useful to explicitly name the type, since `CInv` is part of the interface. Sure, we could switch out `std::deque` for another container at some point, but to know what `it->IsGenTxMsg()` is doing a few lines further down, you need to know that `it` is an iterator over some container of `CInv`s. I'd much rather the code told me that explicitly than having to go find out what `m_getdata_requests` is from somewhere else.",
    "created_at": "2020-10-15T10:23:52Z",
    "updated_at": "2020-10-15T10:23:52Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505431669",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505431669"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505431669"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505431669/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT",
    "in_reply_to_id": 504758581
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505435886",
    "pull_request_review_id": 509237940,
    "id": 505435886,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQzNTg4Ng==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "ok.",
    "created_at": "2020-10-15T10:30:56Z",
    "updated_at": "2020-10-15T10:30:56Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505435886",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505435886"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505435886"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505435886/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT",
    "in_reply_to_id": 504758581
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505779994",
    "pull_request_review_id": 509691019,
    "id": 505779994,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc3OTk5NA==",
    "diff_hunk": "@@ -1754,7 +1757,10 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n {\n     AssertLockNotHeld(cs_main);\n \n-    std::deque<CInv>::iterator it = pfrom.vRecvGetData.begin();\n+    PeerRef peer = GetPeerRef(pfrom.GetId());\n+    if (peer == nullptr) return;\n+\n+    std::deque<CInv>::iterator it = peer->vRecvGetData.begin();",
    "path": "src/net_processing.cpp",
    "position": null,
    "original_position": 18,
    "commit_id": "da0988daf1d665a4644ad3f1ddf3f8a8bdd88cde",
    "original_commit_id": "2d9f2fca43aadcdda4d644cddab36dca88b40b97",
    "user": {
      "login": "narula",
      "id": 177646,
      "node_id": "MDQ6VXNlcjE3NzY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/177646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/narula",
      "html_url": "https://github.com/narula",
      "followers_url": "https://api.github.com/users/narula/followers",
      "following_url": "https://api.github.com/users/narula/following{/other_user}",
      "gists_url": "https://api.github.com/users/narula/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/narula/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/narula/subscriptions",
      "organizations_url": "https://api.github.com/users/narula/orgs",
      "repos_url": "https://api.github.com/users/narula/repos",
      "events_url": "https://api.github.com/users/narula/events{/privacy}",
      "received_events_url": "https://api.github.com/users/narula/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "That is a very interesting post! I'm not sure I entirely agree with his reasoning against the readability argument, but perhaps we could debate that somewhere else :) I think this could go either way, and I prefer having the type explicit.",
    "created_at": "2020-10-15T19:14:00Z",
    "updated_at": "2020-10-15T19:14:00Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505779994",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505779994"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/19911#discussion_r505779994"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/19911"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/505779994/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 1763,
    "side": "RIGHT",
    "in_reply_to_id": 504758581
  }
]