[
  {
    "sha": "e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNDE2Y2ZjOTJiZjUxZjZmZDA4OGFiNjFjMjMwNmM1ZTczODc3ZGQw",
    "commit": {
      "author": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2020-11-25T19:49:50Z"
      },
      "committer": {
        "name": "sanket1729",
        "email": "sanket1729@gmail.com",
        "date": "2020-11-25T20:04:39Z"
      },
      "message": "Add MAX_STANDARD_SCRIPTSIG_SIZE to policy\n\nBitcoin core has a standardness rule for max satisfaction script sig size.\nThis PR adds to the policy header file so that it is documented along with\nalong policy rules. The initial reasoning that 1650 is an implicit\nlimit(would not reached assuming all other policy rules are being\nfollowed) is outdated.\n\nAs we now know, bitcoin transactions can have spend conditions are more than\njust signatures and there may exist p2sh transactions involving 100 byte\npreimages that maybe non-standard because of this rule. Because this\nrule is no longer implicit, we should explicitly document it in policy\nheader file",
      "tree": {
        "sha": "6ef36ea0f3fd3471df6b95530247e464b90acf35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6ef36ea0f3fd3471df6b95530247e464b90acf35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e416cfc92bf51f6fd088ab61c2306c5e73877dd0/comments",
    "author": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sanket1729",
      "id": 6881849,
      "node_id": "MDQ6VXNlcjY4ODE4NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6881849?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sanket1729",
      "html_url": "https://github.com/sanket1729",
      "followers_url": "https://api.github.com/users/sanket1729/followers",
      "following_url": "https://api.github.com/users/sanket1729/following{/other_user}",
      "gists_url": "https://api.github.com/users/sanket1729/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sanket1729/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sanket1729/subscriptions",
      "organizations_url": "https://api.github.com/users/sanket1729/orgs",
      "repos_url": "https://api.github.com/users/sanket1729/repos",
      "events_url": "https://api.github.com/users/sanket1729/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sanket1729/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50091592dd875a1c94030dbed74112b003732d68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50091592dd875a1c94030dbed74112b003732d68",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50091592dd875a1c94030dbed74112b003732d68"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "4e33fd6cb569bdcef4334bcbf77c2900334de3e9",
        "filename": "src/policy/policy.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e416cfc92bf51f6fd088ab61c2306c5e73877dd0/src/policy/policy.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e416cfc92bf51f6fd088ab61c2306c5e73877dd0/src/policy/policy.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.cpp?ref=e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
        "patch": "@@ -92,14 +92,15 @@ bool IsStandardTx(const CTransaction& tx, bool permit_bare_multisig, const CFeeR\n \n     for (const CTxIn& txin : tx.vin)\n     {\n-        // Biggest 'standard' txin is a 15-of-15 P2SH multisig with compressed\n-        // keys (remember the 520 byte limit on redeemScript size). That works\n-        // out to a (15*(33+1))+3=513 byte redeemScript, 513+1+15*(73+1)+3=1627\n-        // bytes of scriptSig, which we round off to 1650 bytes for some minor\n-        // future-proofing. That's also enough to spend a 20-of-20\n-        // CHECKMULTISIG scriptPubKey, though such a scriptPubKey is not\n-        // considered standard.\n-        if (txin.scriptSig.size() > 1650) {\n+        // Biggest 'standard' txin involving only keys is a 15-of-15 P2SH\n+        // multisig with compressed keys (remember the 520 byte limit on\n+        // redeemScript size). That works out to a (15*(33+1))+3=513 byte\n+        // redeemScript, 513+1+15*(73+1)+3=1627 bytes of scriptSig, which\n+        // we round off to 1650(MAX_STANDARD_SCRIPTSIG_SIZE) bytes for\n+        // some minor future-proofing. That's also enough to spend a\n+        // 20-of-20 CHECKMULTISIG scriptPubKey, though such a scriptPubKey\n+        // is not considered standard.\n+        if (txin.scriptSig.size() > MAX_STANDARD_SCRIPTSIG_SIZE) {\n             reason = \"scriptsig-size\";\n             return false;\n         }"
      },
      {
        "sha": "fdbf45a66cf662c0404133c730f33794dc196538",
        "filename": "src/policy/policy.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e416cfc92bf51f6fd088ab61c2306c5e73877dd0/src/policy/policy.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e416cfc92bf51f6fd088ab61c2306c5e73877dd0/src/policy/policy.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/policy.h?ref=e416cfc92bf51f6fd088ab61c2306c5e73877dd0",
        "patch": "@@ -44,6 +44,8 @@ static const unsigned int MAX_STANDARD_P2WSH_STACK_ITEM_SIZE = 80;\n static const unsigned int MAX_STANDARD_TAPSCRIPT_STACK_ITEM_SIZE = 80;\n /** The maximum size of a standard witnessScript */\n static const unsigned int MAX_STANDARD_P2WSH_SCRIPT_SIZE = 3600;\n+/** The maximum size of a standard ScriptSig */\n+static const unsigned int MAX_STANDARD_SCRIPTSIG_SIZE = 1650;\n /** Min feerate for defining dust. Historically this has been based on the\n  * minRelayTxFee, however changing the dust limit changes which transactions are\n  * standard and should be done with care and ideally rarely. It makes sense to"
      }
    ]
  }
]