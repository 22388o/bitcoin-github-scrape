[
  {
    "sha": "3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYzc2NDJmOTJiN2E5Y2M3Y2FkZjU2YTI4Y2UzNmZhMDkxOTdlMmJl",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-26T05:03:22Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-03-26T05:04:27Z"
      },
      "message": "Explicitly state our assumptions about LookupBlockIndex(...) return values",
      "tree": {
        "sha": "f2dea1994881c1f7157e060b6308a0c16b05ee35",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2dea1994881c1f7157e060b6308a0c16b05ee35"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7466a26cab5d66665991433947964a638f5b957e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7466a26cab5d66665991433947964a638f5b957e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7466a26cab5d66665991433947964a638f5b957e"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 8,
      "deletions": 2
    },
    "files": [
      {
        "sha": "1e8184093612482f071c158fb6209c3b02e2bde1",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
        "patch": "@@ -858,7 +858,9 @@ static bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n     stats.hashBlock = pcursor->GetBestBlock();\n     {\n         LOCK(cs_main);\n-        stats.nHeight = LookupBlockIndex(stats.hashBlock)->nHeight;\n+        CBlockIndex* blockIndex = LookupBlockIndex(stats.hashBlock);\n+        assert(blockIndex);\n+        stats.nHeight = blockIndex->nHeight;\n     }\n     ss << stats.hashBlock;\n     uint256 prevkey;\n@@ -1042,6 +1044,7 @@ UniValue gettxout(const JSONRPCRequest& request)\n     }\n \n     const CBlockIndex* pindex = LookupBlockIndex(pcoinsTip->GetBestBlock());\n+    assert(pindex);\n     ret.pushKV(\"bestblock\", pindex->GetBlockHash().GetHex());\n     if (coin.nHeight == MEMPOOL_HEIGHT) {\n         ret.pushKV(\"confirmations\", 0);"
      },
      {
        "sha": "e991a186d941d48afc8d706088248a3728aa0349",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
        "patch": "@@ -1317,6 +1317,7 @@ int GetSpendHeight(const CCoinsViewCache& inputs)\n {\n     LOCK(cs_main);\n     CBlockIndex* pindexPrev = LookupBlockIndex(inputs.GetBestBlock());\n+    assert(pindexPrev);\n     return pindexPrev->nHeight + 1;\n }\n "
      },
      {
        "sha": "f56eb48efcceccfe018b09f48b38cc1d943e91e8",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3c7642f92b7a9cc7cadf56a28ce36fa09197e2be/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=3c7642f92b7a9cc7cadf56a28ce36fa09197e2be",
        "patch": "@@ -95,7 +95,9 @@ void WalletTxToJSON(const CWalletTx& wtx, UniValue& entry)\n     {\n         entry.pushKV(\"blockhash\", wtx.hashBlock.GetHex());\n         entry.pushKV(\"blockindex\", wtx.nIndex);\n-        entry.pushKV(\"blocktime\", LookupBlockIndex(wtx.hashBlock)->GetBlockTime());\n+        CBlockIndex* blockIndex = LookupBlockIndex(wtx.hashBlock);\n+        assert(blockIndex);\n+        entry.pushKV(\"blocktime\", blockIndex->GetBlockTime());\n     } else {\n         entry.pushKV(\"trusted\", wtx.IsTrusted());\n     }"
      }
    ]
  }
]