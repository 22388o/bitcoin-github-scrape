Empact,2018-08-23T10:35:33Z,"Note the effective implementation of `resize(n)` in this case is:\n\n```C++\n        change_capacity(n);\n        _size += n;\n        fill(item_ptr(0), n);\n```",https://github.com/bitcoin/bitcoin/pull/14030#issuecomment-415370201,415370201,
DrahtBot,2018-08-23T11:28:42Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #14028 (Explicitly initialize prevector _union by Empact)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14030#issuecomment-415382209,415382209,
sipa,2018-08-23T16:26:59Z,utACK,https://github.com/bitcoin/bitcoin/pull/14030#issuecomment-415479967,415479967,
theuni,2018-08-23T18:11:05Z,"utACK 497e90c02b96e8739e8faf3d43e41ba1ff0627b7.\n\nFor reference, with c++11, std::vector's matching constructor also removed its default argument and dropped the explicit qualifier.",https://github.com/bitcoin/bitcoin/pull/14030#issuecomment-415515986,415515986,
sipa,2018-08-23T16:26:51Z,The `explicit` keyword is also redundant for constructions with >1 argument.,https://github.com/bitcoin/bitcoin/pull/14030#discussion_r212374298,212374298,src/prevector.h
Empact,2018-08-23T16:49:26Z,"FYI: looks like this will change post C++11:\nhttps://en.cppreference.com/w/cpp/language/explicit\nhttps://en.cppreference.com/w/cpp/language/converting_constructor",https://github.com/bitcoin/bitcoin/pull/14030#discussion_r212381023,212381023,src/prevector.h
theuni,2018-08-23T18:05:34Z,"Neat!\n\nIt's not really relevant here, but I'll expand on @Empact's comment because it's something I didn't know, maybe others will benefit as well.\n\nPost c++11:\n```c++\n    using ScriptType = prevector<28, unsigned char>;\n    ScriptType vec{1, 255};   // always works\n    vec = ScriptType{1, 255}; // always works\n    vec = {1, 255};           // only works if prevector's ctor is no",https://github.com/bitcoin/bitcoin/pull/14030#discussion_r212404811,212404811,src/prevector.h
