hebasto,2021-07-18 22:05:20,cc @promag @jarolrod @fanquake ,https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-882122468,882122468,
fanquake,2021-07-19 05:30:26,"> I noticed the following line in the output when building qt through depends, how much of a concern can this be?:\n\nIt's not a concern. Output like that is expected while Qt is running it's feature checks.",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-882250387,882250387,
hebasto,2021-07-19 08:55:40,"@promag \n> However, I tried the following (hardcoded) and it worked fine:\n\nWhat is your Qt Configure summary?\n\nUPDATE:\n\n> ```\n> $(package)_config_opts_darwin += -device-option QMAKE_APPLE_DEVICE_ARCHS=arm64\n> \n> make -C depends qt_configured\n> ```\n\nThe `-device-option` will trigger cross-compiling. But a native compiling should be executed when not passing the `HOST` vari",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-882372449,882372449,
hebasto,2021-07-20 15:24:54,"Updated 5a55ba9b04f6e65e4e06564a092205c41d7de432 -> 8edac79a405b259544db12654e502e15717f18fc ([pr22487.01](https://github.com/hebasto/bitcoin/commits/pr22487.01) -> [pr22487.02](https://github.com/hebasto/bitcoin/commits/pr22487.02)):\n\n- rebased on top of the #22506 to make possible to cross-compile `bitcoin-qt` binaries",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-883483311,883483311,
hebasto,2021-07-20 15:26:06,"@fanquake \n> Does configuring with qt, for a x86-64 cross-compile, on an M1, using this PR, currently work?\n\nYes, it does, after the [recent update](https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-883483311).",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-883484227,883484227,
hebasto,2021-07-23 07:39:18,Rebased 8edac79a405b259544db12654e502e15717f18fc -> d660e8057c756dd0262cacf86b97b2519749579e ([pr22487.02](https://github.com/hebasto/bitcoin/commits/pr22487.02) -> [pr22487.03](https://github.com/hebasto/bitcoin/commits/pr22487.03)) due to the conflict with #22526.,https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-885458379,885458379,
DrahtBot,2021-07-26 15:40:45,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#23580](https://github.com/bitcoin/bitcoin/pull/23580) (build: explicitly define previously implicit header include by ki",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-886813086,886813086,
hebasto,2021-08-03 06:39:22,Rebased d660e8057c756dd0262cacf86b97b2519749579e -> 85888b5210c4c58cc82a06907d0d99ab1eed7f9c ([pr22487.03](https://github.com/hebasto/bitcoin/commits/pr22487.03) -> [pr22487.04](https://github.com/hebasto/bitcoin/commits/pr22487.04)) due to the conflict with #22448.,https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-891577103,891577103,
jarolrod,2021-08-18 22:29:04,"GUIX hashes\n\n```\nfind guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\n\ndf863a06c4b6b708580cb82e807194793b9c3a8fb9396a66c0099c0c29617d6b  guix-build-85888b5210c4/output/aarch64-linux-gnu/SHA256SUMS.part\n6e43e1faf23c13460a779aff681c0b39ab489cdc7ffc08656492638f0d1e9745  guix-build-85888b5210c4/output/aarch64-linux-gnu/bitcoi",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-901470997,901470997,
hebasto,2021-08-19 09:06:56,"#### Guix builds:\n\n```\n$ find guix-build-$(git rev-parse --short=12 HEAD)/output/ -type f -print0 | env LC_ALL=C sort -z | xargs -r0 sha256sum\ndf863a06c4b6b708580cb82e807194793b9c3a8fb9396a66c0099c0c29617d6b  guix-build-85888b5210c4/output/aarch64-linux-gnu/SHA256SUMS.part\n6e43e1faf23c13460a779aff681c0b39ab489cdc7ffc08656492638f0d1e9745  guix-build-85888b5210c4/output/aarch64-linux-gnu/b",https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-901742939,901742939,
fanquake,2021-11-25 07:55:23,I'm closing this for now. In favour of #23583.,https://github.com/bitcoin/bitcoin/pull/22487#issuecomment-978921692,978921692,
jarolrod,2021-07-19 04:06:04,I would prefer if we could document the reason it doesn't work. And any possible information on how/when/what circumstances this patch could be dropped,https://github.com/bitcoin/bitcoin/pull/22487#discussion_r671973286,671973286,depends/patches/qt/fix_darwin_archs.patch
hebasto,2021-07-19 08:02:00,"> I would prefer if we could document the reason it doesn't work.\n\nI failed to track this bug down, unfortunately.\n\n> And any possible information on how/when/what circumstances this patch could be dropped\n\nAs this is an ad-hoc hack, we should try to drop it while bumping Qt version in the future.",https://github.com/bitcoin/bitcoin/pull/22487#discussion_r672074930,672074930,depends/patches/qt/fix_darwin_archs.patch
fanquake,2021-07-20 06:57:50,"Why add another patch, instead of doing this in `mac-qmake.conf`?\n```diff\ndiff --git a/depends/patches/qt/mac-qmake.conf b/depends/patches/qt/mac-qmake.conf\nindex 190ab7a16..963f0982b 100644\n--- a/depends/patches/qt/mac-qmake.conf\n+++ b/depends/patches/qt/mac-qmake.conf\n@@ -13,7 +13,7 @@ QMAKE_MAC_SDK.macosx.Path = $${MAC_SDK_PATH}\n QMAKE_MAC_SDK.macosx.platform_name = macosx\n QMAK",https://github.com/bitcoin/bitcoin/pull/22487#discussion_r672856481,672856481,depends/patches/qt/fix_darwin_archs.patch
fanquake,2021-07-20 07:19:01,"Right, we can't do that because we only use this for the Linux cross-compile (`macx-clang-linux`). Kind of annoying that this needs even more hacky patching. Although I guess that's what you get when trying to force support for things like this into Qt versions that well and truly don't support it.",https://github.com/bitcoin/bitcoin/pull/22487#discussion_r672869436,672869436,depends/patches/qt/fix_darwin_archs.patch
hebasto,2021-11-24 16:43:57,I think the #23583 is the correct solution for this problem.,https://github.com/bitcoin/bitcoin/pull/22487#discussion_r756258466,756258466,depends/patches/qt/fix_darwin_archs.patch
