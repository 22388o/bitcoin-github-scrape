gmaxwell,2015-03-20T22:06:44Z,"I'm not super enthusiastic of using work as a float here, but it seems correct and harmless.\n\nutACK. (I don't currently have something setup to test this specific behavior.)\n",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-84166533,84166533,
sipa,2015-03-23T13:30:14Z,Updated to use uint256 arithmetic.\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-84997635,84997635,
laanwj,2015-03-24T09:52:57Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-85427094,85427094,
sipa,2015-03-24T11:58:06Z,"This patch is running on bitcoin.sipa.be, if someone wants to test whether syncing works. \n",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-85467095,85467095,
gmaxwell,2015-04-01T18:17:45Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-88583029,88583029,
sipa,2015-04-08T17:02:07Z,@sergiodemianlerner Feel like commenting?\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-90975548,90975548,
SergioDemianLerner,2015-04-17T20:44:04Z,"When *mi->second has greater nChainWork than *pindexBestHeader, then subtraction in GetBlockProofEquivalentTime() will overflow the uint256 and zero wrap. Multiplication by TargetSpacing() can also overflow the uint256. This will prevent the block from being served.\nOf course, mi->second should never have more chain work than the tip (if it does it would become the new tip).\nNevertheless, as a p",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94071219,94071219,
gmaxwell,2015-04-17T21:24:05Z,"@SergioDemianLerner how about an assert?  (if that case ever becomes possible, then something is horribly wrong; I think.)\n",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94078311,94078311,
gmaxwell,2015-04-17T22:28:31Z,"@SergioDemianLerner how about an assert?  (if that case ever becomes possible, then something is horribly wrong; I think.)\n",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94088531,94088531,
sdaftuar,2015-04-20T15:46:13Z,"@gmaxwell  I'm not sure an assert makes sense here; the way the code seems to be structured now is that we don't generally hold a lock on cs_main in between updating mapBlockIndex (after receiving a block) and calling ActivateBestChain, so accessing chainActive.Tip() in between could result in an assertion failure.\n\nI can't think of how this could occur outside of an interaction with the invalid",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94489095,94489095,
sipa,2015-04-20T16:00:35Z,Let's just fix the code to deal with negatives.\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94493355,94493355,
sipa,2015-04-21T15:32:39Z,Updated.\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-94839987,94839987,
sipa,2015-04-22T11:01:07Z,"- Rebased\n- Changed the argument order of GetBlockProofEquivalentTime(a, b, c, d) to be identical to a->GetBlockTime () - b->GetBlockTime().\n- Changed the order of calls in the fingerprinting test to be consistent with this.\n- Passed Consensus::Params as an argument (make @jtimon happy).\n- Added a simple unit test.\n",https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-95137964,95137964,
gavinandresen,2015-04-27T14:43:55Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/5918#issuecomment-96681187,96681187,
morcos,2015-04-21T16:18:10Z,Is this supposed to be < nOneMonth?\n,https://github.com/bitcoin/bitcoin/pull/5918#discussion_r28794953,28794953,src/main.cpp
sipa,2015-04-21T17:01:56Z,"Ugh, yes. This is why code like this needs tests...\n",https://github.com/bitcoin/bitcoin/pull/5918#discussion_r28799035,28799035,src/main.cpp
rebroad,2016-12-23T16:19:12Z,"nPowTargetSpacing, which always equals 600 regardless.... why can't this just be a global variable? It would save having to pass around the params everywhere.",https://github.com/bitcoin/bitcoin/pull/5918#discussion_r93781353,93781353,src/pow.cpp
