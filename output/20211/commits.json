[
  {
    "sha": "fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTU5ZTBiNWJkMmFlZDgzODBjYzliOWU1Mjc5MWY2NjJhZWNkNmE2",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-21T11:48:39Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-21T11:50:47Z"
      },
      "message": "test: Add missing script_standard_Solver_success cases",
      "tree": {
        "sha": "8261023053b42fceeadd9e88fe858909de055fc0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8261023053b42fceeadd9e88fe858909de055fc0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUh/EAv/ZgpLVqYt5sgAVbqPQ5bzjU9EWdO/iNe2/3nel3e08wJNtYuKuYBQ5kFy\nkCLBBV82hTAZD/6KNSsRv/CHv8BtYH+hA0SPk5a5vJ9MIcWmcnTiMtvQQkMpUQ5j\n2tEprLn3lj1nQY+wiUudbjuWmPxYoGly5UHLJwQj0kMJySXaiUsDmMd62uEgdUqc\nycezOfIiLKhuSJVi/wnS0qX7SmrIypOFucSzWPBMGMW/g8hzqOcoEtxWTqSJ/c2i\nJXKXRAovgFrRI6YvZbMyKo8pDFGwv3Gb1GtRyD4WLEevELY26hbP+Fk/68IN31Yr\n4tUrYWm4hz/3NAuRf8m2Vw7YynfhC5QyCcwWk51LBPWFsBLKANMSWM+utOo3p3lk\nr4hFXRfmAZrpJrKBbq4YoGGb0hFIQAa5TTi+5J2Z+5QBP5eKAbGteeJu4ApJ3Ltj\n8IS3kcYcT95H43kvO5m2piFyr0pVRbbHerYCZKdK9D7IinS11361yxlKb97lGtor\noR2wwgLp\n=IZCZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 8261023053b42fceeadd9e88fe858909de055fc0\nparent 45385018e13e167521e655c36128d8ee4f2a3e0b\nauthor MarcoFalke <falke.marco@gmail.com> 1603280919 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1603281047 +0200\n\ntest: Add missing script_standard_Solver_success cases\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "45385018e13e167521e655c36128d8ee4f2a3e0b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/45385018e13e167521e655c36128d8ee4f2a3e0b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/45385018e13e167521e655c36128d8ee4f2a3e0b"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5970d6857c40cea4c70174a5f6fff66826af9f0f",
        "filename": "src/test/script_standard_tests.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6/src/test/script_standard_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6/src/test/script_standard_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_standard_tests.cpp?ref=fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
        "patch": "@@ -107,6 +107,22 @@ BOOST_AUTO_TEST_CASE(script_standard_Solver_success)\n     BOOST_CHECK_EQUAL(solutions.size(), 1U);\n     BOOST_CHECK(solutions[0] == ToByteVector(scriptHash));\n \n+    // TxoutType::WITNESS_V1_TAPROOT\n+    s.clear();\n+    s << OP_1 << ToByteVector(uint256::ZERO);\n+    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_V1_TAPROOT);\n+    BOOST_CHECK_EQUAL(solutions.size(), 2U);\n+    BOOST_CHECK(solutions[0] == std::vector<unsigned char>{1});\n+    BOOST_CHECK(solutions[1] == ToByteVector(uint256::ZERO));\n+\n+    // TxoutType::WITNESS_UNKNOWN\n+    s.clear();\n+    s << OP_16 << ToByteVector(uint256::ONE);\n+    BOOST_CHECK_EQUAL(Solver(s, solutions), TxoutType::WITNESS_UNKNOWN);\n+    BOOST_CHECK_EQUAL(solutions.size(), 2U);\n+    BOOST_CHECK(solutions[0] == std::vector<unsigned char>{16});\n+    BOOST_CHECK(solutions[1] == ToByteVector(uint256::ONE));\n+\n     // TxoutType::NONSTANDARD\n     s.clear();\n     s << OP_9 << OP_ADD << OP_11 << OP_EQUAL;"
      }
    ]
  },
  {
    "sha": "fa650ca7f19307a9237e64ac311488c8947fc12a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTY1MGNhN2YxOTMwN2E5MjM3ZTY0YWMzMTE0ODhjODk0N2ZjMTJh",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-21T11:57:24Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-21T11:51:21Z"
      },
      "message": "Use -Wswitch for TxoutType where possible",
      "tree": {
        "sha": "aa7bfa72129b010a07b2d4e537dee944818391ee",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/aa7bfa72129b010a07b2d4e537dee944818391ee"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa650ca7f19307a9237e64ac311488c8947fc12a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgEIQwAhJULvj/WH7tVRxl7N/1gkaIICWseOsT7I6Wtgi0mZ9I25rpWU338jOYa\nf3r+dm3in12otPbSNKuqe2zu5AHrNWW6jNEYzv8oGMb6r2O+rtsOtLgZZiGuH8Ms\nlV9j0ohbvkf22vvk1ByW88/m5THOIvlVjCLFfYPntUDE9Wo0uUV6tv+JHKK9loYl\nbDkB6gbRWgvqn0l0Fi6448ICnYzm2obbG9qViG3v0Cd0Yu2lGGf9uya8SIehUfgl\nuI6zEdN3j4DDoD6mwdHPjt29w8RWXvLvj8BsHkvGvUhtrnsLEHQYKmlok6Fcg5qe\n/3mA1I1YfHTtIgx14JLmjD3USgTy06LTjSqyK9BUb191uUMlXBWAI7LB7/yb2Ai8\nwaA9fs0SdA15wwYzvCIGWLbUkNC389+klR+H2sbkxMVvZMolHdaUl8i1HrUHknt0\nw2cAeqHJZeoa557FCyOrptXQher45FqKHS9iDcE+pIc33hpd73hGtiyGPeppP5kC\nRE2IBgog\n=sbAU\n-----END PGP SIGNATURE-----",
        "payload": "tree aa7bfa72129b010a07b2d4e537dee944818391ee\nparent fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6\nauthor MarcoFalke <falke.marco@gmail.com> 1603281444 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1603281081 +0200\n\nUse -Wswitch for TxoutType where possible\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa650ca7f19307a9237e64ac311488c8947fc12a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa650ca7f19307a9237e64ac311488c8947fc12a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa650ca7f19307a9237e64ac311488c8947fc12a/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa59e0b5bd2aed8380cc9b9e52791f662aecd6a6"
      }
    ],
    "stats": {
      "total": 49,
      "additions": 26,
      "deletions": 23
    },
    "files": [
      {
        "sha": "be3a15120617d6b25a50de8dbec0e315a86c6f0d",
        "filename": "src/script/sign.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 6,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa650ca7f19307a9237e64ac311488c8947fc12a/src/script/sign.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa650ca7f19307a9237e64ac311488c8947fc12a/src/script/sign.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sign.cpp?ref=fa650ca7f19307a9237e64ac311488c8947fc12a",
        "patch": "@@ -106,8 +106,7 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n     std::vector<valtype> vSolutions;\n     whichTypeRet = Solver(scriptPubKey, vSolutions);\n \n-    switch (whichTypeRet)\n-    {\n+    switch (whichTypeRet) {\n     case TxoutType::NONSTANDARD:\n     case TxoutType::NULL_DATA:\n     case TxoutType::WITNESS_UNKNOWN:\n@@ -173,10 +172,8 @@ static bool SignStep(const SigningProvider& provider, const BaseSignatureCreator\n         // Could not find witnessScript, add to missing\n         sigdata.missing_witness_script = uint256(vSolutions[0]);\n         return false;\n-\n-    default:\n-        return false;\n-    }\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n }\n \n static CScript PushAll(const std::vector<valtype>& values)"
      },
      {
        "sha": "2ebc7037758203d5b93f62e5b5f99954a814301f",
        "filename": "src/script/standard.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 12,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa650ca7f19307a9237e64ac311488c8947fc12a/src/script/standard.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa650ca7f19307a9237e64ac311488c8947fc12a/src/script/standard.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/standard.cpp?ref=fa650ca7f19307a9237e64ac311488c8947fc12a",
        "patch": "@@ -45,8 +45,7 @@ WitnessV0ScriptHash::WitnessV0ScriptHash(const CScript& in)\n \n std::string GetTxnOutputType(TxoutType t)\n {\n-    switch (t)\n-    {\n+    switch (t) {\n     case TxoutType::NONSTANDARD: return \"nonstandard\";\n     case TxoutType::PUBKEY: return \"pubkey\";\n     case TxoutType::PUBKEYHASH: return \"pubkeyhash\";\n@@ -182,43 +181,51 @@ bool ExtractDestination(const CScript& scriptPubKey, CTxDestination& addressRet)\n     std::vector<valtype> vSolutions;\n     TxoutType whichType = Solver(scriptPubKey, vSolutions);\n \n-    if (whichType == TxoutType::PUBKEY) {\n+    switch (whichType) {\n+    case TxoutType::PUBKEY: {\n         CPubKey pubKey(vSolutions[0]);\n         if (!pubKey.IsValid())\n             return false;\n \n         addressRet = PKHash(pubKey);\n         return true;\n     }\n-    else if (whichType == TxoutType::PUBKEYHASH)\n-    {\n+    case TxoutType::PUBKEYHASH: {\n         addressRet = PKHash(uint160(vSolutions[0]));\n         return true;\n     }\n-    else if (whichType == TxoutType::SCRIPTHASH)\n-    {\n+    case TxoutType::SCRIPTHASH: {\n         addressRet = ScriptHash(uint160(vSolutions[0]));\n         return true;\n-    } else if (whichType == TxoutType::WITNESS_V0_KEYHASH) {\n+    }\n+    case TxoutType::WITNESS_V0_KEYHASH: {\n         WitnessV0KeyHash hash;\n         std::copy(vSolutions[0].begin(), vSolutions[0].end(), hash.begin());\n         addressRet = hash;\n         return true;\n-    } else if (whichType == TxoutType::WITNESS_V0_SCRIPTHASH) {\n+    }\n+    case TxoutType::WITNESS_V0_SCRIPTHASH: {\n         WitnessV0ScriptHash hash;\n         std::copy(vSolutions[0].begin(), vSolutions[0].end(), hash.begin());\n         addressRet = hash;\n         return true;\n-    } else if (whichType == TxoutType::WITNESS_UNKNOWN || whichType == TxoutType::WITNESS_V1_TAPROOT) {\n+    }\n+    case TxoutType::WITNESS_UNKNOWN:\n+    case TxoutType::WITNESS_V1_TAPROOT: {\n         WitnessUnknown unk;\n         unk.version = vSolutions[0][0];\n         std::copy(vSolutions[1].begin(), vSolutions[1].end(), unk.program);\n         unk.length = vSolutions[1].size();\n         addressRet = unk;\n         return true;\n     }\n-    // Multisig txns have more than one address...\n-    return false;\n+    case TxoutType::MULTISIG:\n+        // Multisig txns have more than one address...\n+    case TxoutType::NULL_DATA:\n+    case TxoutType::NONSTANDARD:\n+        return false;\n+    } // no default case, so the compiler can warn about missing cases\n+    assert(false);\n }\n \n bool ExtractDestinations(const CScript& scriptPubKey, TxoutType& typeRet, std::vector<CTxDestination>& addressRet, int& nRequiredRet)"
      },
      {
        "sha": "064084a413edd979cc3b0855d791f546a4405bf2",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa650ca7f19307a9237e64ac311488c8947fc12a/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa650ca7f19307a9237e64ac311488c8947fc12a/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=fa650ca7f19307a9237e64ac311488c8947fc12a",
        "patch": "@@ -934,9 +934,9 @@ static std::string RecurseImportData(const CScript& script, ImportData& import_d\n     case TxoutType::NONSTANDARD:\n     case TxoutType::WITNESS_UNKNOWN:\n     case TxoutType::WITNESS_V1_TAPROOT:\n-    default:\n         return \"unrecognized script\";\n-    }\n+    } // no default case, so the compiler can warn about missing cases\n+    CHECK_NONFATAL(false);\n }\n \n static UniValue ProcessImportLegacy(ImportData& import_data, std::map<CKeyID, CPubKey>& pubkey_map, std::map<CKeyID, CKey>& privkey_map, std::set<CScript>& script_pub_keys, bool& have_solving_data, const UniValue& data, std::vector<CKeyID>& ordered_pubkeys)"
      },
      {
        "sha": "ceda99c64a0219238b775aed9d39822659fa380a",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa650ca7f19307a9237e64ac311488c8947fc12a/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa650ca7f19307a9237e64ac311488c8947fc12a/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=fa650ca7f19307a9237e64ac311488c8947fc12a",
        "patch": "@@ -91,8 +91,7 @@ IsMineResult IsMineInner(const LegacyScriptPubKeyMan& keystore, const CScript& s\n     TxoutType whichType = Solver(scriptPubKey, vSolutions);\n \n     CKeyID keyID;\n-    switch (whichType)\n-    {\n+    switch (whichType) {\n     case TxoutType::NONSTANDARD:\n     case TxoutType::NULL_DATA:\n     case TxoutType::WITNESS_UNKNOWN:\n@@ -191,7 +190,7 @@ IsMineResult IsMineInner(const LegacyScriptPubKeyMan& keystore, const CScript& s\n         }\n         break;\n     }\n-    }\n+    } // no default case, so the compiler can warn about missing cases\n \n     if (ret == IsMineResult::NO && keystore.HaveWatchOnly(scriptPubKey)) {\n         ret = std::max(ret, IsMineResult::WATCH_ONLY);"
      }
    ]
  }
]