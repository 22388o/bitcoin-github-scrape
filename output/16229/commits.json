[
  {
    "sha": "8529175bf06b88c52e17654188a11c420e4020ad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NTI5MTc1YmYwNmI4OGM1MmUxNzY1NDE4OGExMWM0MjBlNDAyMGFk",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-22T04:36:12Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T05:18:03Z"
      },
      "message": "scripted-diff: change to Consensus::Deployment\n\nWork towards using a single structure to describe deployments rather\nthan separate ones for each deployment method.\n\n-BEGIN VERIFY SCRIPT-\nfind src/ -name \"*.cpp\" -o -name \"*.h\" | xargs perl -i -pe 's/BIP9Deployment/Deployment/g'\n-END VERIFY SCRIPT-",
      "tree": {
        "sha": "a9c7f1dcd84426a566cb2202ff4b3bc323de10a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a9c7f1dcd84426a566cb2202ff4b3bc323de10a7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8529175bf06b88c52e17654188a11c420e4020ad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8529175bf06b88c52e17654188a11c420e4020ad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8529175bf06b88c52e17654188a11c420e4020ad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8529175bf06b88c52e17654188a11c420e4020ad/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98958c81f5065a5de13699d46995d278ecb6709e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98958c81f5065a5de13699d46995d278ecb6709e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98958c81f5065a5de13699d46995d278ecb6709e"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 10,
      "deletions": 10
    },
    "files": [
      {
        "sha": "cb92cb19e6841596a7fe41c2a21b80f03100d747",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8529175bf06b88c52e17654188a11c420e4020ad/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8529175bf06b88c52e17654188a11c420e4020ad/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=8529175bf06b88c52e17654188a11c420e4020ad",
        "patch": "@@ -290,13 +290,13 @@ class CRegTestParams : public CChainParams {\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = Consensus::BIP9Deployment::ALWAYS_ACTIVE;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = Consensus::BIP9Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = Consensus::Deployment::ALWAYS_ACTIVE;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00\");"
      },
      {
        "sha": "fdbde9172d80263787aae4efc10f72cc33b8f788",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8529175bf06b88c52e17654188a11c420e4020ad/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8529175bf06b88c52e17654188a11c420e4020ad/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=8529175bf06b88c52e17654188a11c420e4020ad",
        "patch": "@@ -25,7 +25,7 @@ enum DeploymentPos\n /**\n  * Struct for each individual consensus rule change using BIP9.\n  */\n-struct BIP9Deployment {\n+struct Deployment {\n     /** Bit position to select the particular bit in nVersion. */\n     int bit;\n     /** Start MedianTime for version bits miner confirmation. Can be a date in the past */\n@@ -65,7 +65,7 @@ struct Params {\n      */\n     uint32_t nRuleChangeActivationThreshold;\n     uint32_t nMinerConfirmationWindow;\n-    BIP9Deployment vDeployments[MAX_VERSION_BITS_DEPLOYMENTS];\n+    Deployment vDeployments[MAX_VERSION_BITS_DEPLOYMENTS];\n     /** Proof of work parameters */\n     uint256 powLimit;\n     bool fPowAllowMinDifficultyBlocks;"
      },
      {
        "sha": "795a7c8a29289a744f3b413e41fc04c218bb111f",
        "filename": "src/test/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8529175bf06b88c52e17654188a11c420e4020ad/src/test/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8529175bf06b88c52e17654188a11c420e4020ad/src/test/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/setup_common.cpp?ref=8529175bf06b88c52e17654188a11c420e4020ad",
        "patch": "@@ -117,7 +117,7 @@ TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)\n {\n     // CreateAndProcessBlock() does not support building SegWit blocks, so don't activate in these tests.\n     // TODO: fix the code to support SegWit blocks.\n-    gArgs.ForceSetArg(\"-vbparams\", strprintf(\"segwit:0:%d\", (int64_t)Consensus::BIP9Deployment::NO_TIMEOUT));\n+    gArgs.ForceSetArg(\"-vbparams\", strprintf(\"segwit:0:%d\", (int64_t)Consensus::Deployment::NO_TIMEOUT));\n     SelectParams(CBaseChainParams::REGTEST);\n \n     // Generate a 100-block chain:"
      },
      {
        "sha": "bc74e58350e8c365afba474f70a0f836c0521e28",
        "filename": "src/test/versionbits_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8529175bf06b88c52e17654188a11c420e4020ad/src/test/versionbits_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8529175bf06b88c52e17654188a11c420e4020ad/src/test/versionbits_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/versionbits_tests.cpp?ref=8529175bf06b88c52e17654188a11c420e4020ad",
        "patch": "@@ -35,7 +35,7 @@ class TestConditionChecker : public AbstractThresholdConditionChecker\n class TestAlwaysActiveConditionChecker : public TestConditionChecker\n {\n public:\n-    int64_t BeginTime(const Consensus::Params& params) const override { return Consensus::BIP9Deployment::ALWAYS_ACTIVE; }\n+    int64_t BeginTime(const Consensus::Params& params) const override { return Consensus::Deployment::ALWAYS_ACTIVE; }\n };\n \n #define CHECKERS 6"
      },
      {
        "sha": "8bdc8c2d363e5d05b750e9c1ae089741b6724ab7",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8529175bf06b88c52e17654188a11c420e4020ad/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8529175bf06b88c52e17654188a11c420e4020ad/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=8529175bf06b88c52e17654188a11c420e4020ad",
        "patch": "@@ -13,7 +13,7 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n     int64_t nTimeTimeout = EndTime(params);\n \n     // Check if this deployment is always active.\n-    if (nTimeStart == Consensus::BIP9Deployment::ALWAYS_ACTIVE) {\n+    if (nTimeStart == Consensus::Deployment::ALWAYS_ACTIVE) {\n         return ThresholdState::ACTIVE;\n     }\n \n@@ -127,7 +127,7 @@ BIP9Stats AbstractThresholdConditionChecker::GetStateStatisticsFor(const CBlockI\n int AbstractThresholdConditionChecker::GetStateSinceHeightFor(const CBlockIndex* pindexPrev, const Consensus::Params& params, ThresholdConditionCache& cache) const\n {\n     int64_t start_time = BeginTime(params);\n-    if (start_time == Consensus::BIP9Deployment::ALWAYS_ACTIVE) {\n+    if (start_time == Consensus::Deployment::ALWAYS_ACTIVE) {\n         return 0;\n     }\n "
      }
    ]
  },
  {
    "sha": "e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTQxMzZmOGQ4YjcyNjQyODhmYzRiMDBiNjVjNTFmN2E4YzdmODUw",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-16T15:21:31Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T05:54:35Z"
      },
      "message": "[refactor] DeploymentActive helper\n\nHelper function that encapsulates the logic to check if a version bits\ndeployment is active.",
      "tree": {
        "sha": "e7fa47a2a9e98a0f3afb0c9e3411d96912117605",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7fa47a2a9e98a0f3afb0c9e3411d96912117605"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8529175bf06b88c52e17654188a11c420e4020ad",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8529175bf06b88c52e17654188a11c420e4020ad",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8529175bf06b88c52e17654188a11c420e4020ad"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 12,
      "deletions": 7
    },
    "files": [
      {
        "sha": "7720a69231a223792d3d2215e0a83e35c0a47e3e",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
        "patch": "@@ -532,7 +532,7 @@ static UniValue getblocktemplate(const JSONRPCRequest& request)\n     pblock->nNonce = 0;\n \n     // NOTE: If at some point we support pre-segwit miners post-segwit-activation, this needs to take segwit support into consideration\n-    const bool fPreSegWit = (ThresholdState::ACTIVE != VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache));\n+    const bool fPreSegWit = !DeploymentActive(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache);\n \n     UniValue aCaps(UniValue::VARR); aCaps.push_back(\"proposal\");\n "
      },
      {
        "sha": "12b2724c993eee937a9497c8e4ddf9dbf87b90e7",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 6,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
        "patch": "@@ -1617,7 +1617,7 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     }\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n-    if (VersionBitsState(pindex->pprev, consensusparams, Consensus::DEPLOYMENT_CSV, versionbitscache) == ThresholdState::ACTIVE) {\n+    if (DeploymentActive(pindex->pprev, consensusparams, Consensus::DEPLOYMENT_CSV, versionbitscache)) {\n         flags |= SCRIPT_VERIFY_CHECKSEQUENCEVERIFY;\n     }\n \n@@ -1808,7 +1808,7 @@ bool CChainState::ConnectBlock(const CBlock& block, CValidationState& state, CBl\n \n     // Start enforcing BIP68 (sequence locks) and BIP112 (CHECKSEQUENCEVERIFY) using versionbits logic.\n     int nLockTimeFlags = 0;\n-    if (VersionBitsState(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache) == ThresholdState::ACTIVE) {\n+    if (DeploymentActive(pindex->pprev, chainparams.GetConsensus(), Consensus::DEPLOYMENT_CSV, versionbitscache)) {\n         nLockTimeFlags |= LOCKTIME_VERIFY_SEQUENCE;\n     }\n \n@@ -3011,13 +3011,13 @@ bool CheckBlock(const CBlock& block, CValidationState& state, const Consensus::P\n bool IsWitnessEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n {\n     LOCK(cs_main);\n-    return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n+    return DeploymentActive(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache);\n }\n \n bool IsNullDummyEnabled(const CBlockIndex* pindexPrev, const Consensus::Params& params)\n {\n     LOCK(cs_main);\n-    return (VersionBitsState(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE);\n+    return DeploymentActive(pindexPrev, params, Consensus::DEPLOYMENT_SEGWIT, versionbitscache);\n }\n \n // Compute at which vout of the block's coinbase transaction the witness\n@@ -3152,7 +3152,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n \n     // Start enforcing BIP113 (Median Time Past) using versionbits logic.\n     int nLockTimeFlags = 0;\n-    if (VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_CSV, versionbitscache) == ThresholdState::ACTIVE) {\n+    if (DeploymentActive(pindexPrev, consensusParams, Consensus::DEPLOYMENT_CSV, versionbitscache)) {\n         assert(pindexPrev != nullptr);\n         nLockTimeFlags |= LOCKTIME_MEDIAN_TIME_PAST;\n     }\n@@ -3187,7 +3187,7 @@ static bool ContextualCheckBlock(const CBlock& block, CValidationState& state, c\n     //   {0xaa, 0x21, 0xa9, 0xed}, and the following 32 bytes are SHA256^2(witness root, witness reserved value). In case there are\n     //   multiple, the last one is used.\n     bool fHaveWitness = false;\n-    if (VersionBitsState(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache) == ThresholdState::ACTIVE) {\n+    if (DeploymentActive(pindexPrev, consensusParams, Consensus::DEPLOYMENT_SEGWIT, versionbitscache)) {\n         int commitpos = GetWitnessCommitmentIndex(block);\n         if (commitpos != -1) {\n             bool malleated = false;"
      },
      {
        "sha": "6f2d261bd611992bba23998810b3e22603cea7a7",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e54136f8d8b7264288fc4b00b65c51f7a8c7f850/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
        "patch": "@@ -68,4 +68,9 @@ BIP9Stats VersionBitsStatistics(const CBlockIndex* pindexPrev, const Consensus::\n int VersionBitsStateSinceHeight(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache);\n uint32_t VersionBitsMask(const Consensus::Params& params, Consensus::DeploymentPos pos);\n \n+inline bool DeploymentActive(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache)\n+{\n+    return VersionBitsState(pindexPrev, params, pos, cache) == ThresholdState::ACTIVE;\n+}\n+\n #endif // BITCOIN_VERSIONBITS_H"
      }
    ]
  },
  {
    "sha": "7b29ee2c77f76a58ac0db081c5b824112d3fe749",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YjI5ZWUyYzc3Zjc2YTU4YWMwZGIwODFjNWI4MjQxMTJkM2ZlNzQ5",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-16T15:20:08Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T06:32:10Z"
      },
      "message": "[refactor] vDeployments initialisation by template function for static checks",
      "tree": {
        "sha": "4daebf2dee9de1a2698fbd81d82b251e4cb91765",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4daebf2dee9de1a2698fbd81d82b251e4cb91765"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7b29ee2c77f76a58ac0db081c5b824112d3fe749",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b29ee2c77f76a58ac0db081c5b824112d3fe749",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7b29ee2c77f76a58ac0db081c5b824112d3fe749",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b29ee2c77f76a58ac0db081c5b824112d3fe749/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e54136f8d8b7264288fc4b00b65c51f7a8c7f850",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e54136f8d8b7264288fc4b00b65c51f7a8c7f850"
      }
    ],
    "stats": {
      "total": 63,
      "additions": 36,
      "deletions": 27
    },
    "files": [
      {
        "sha": "d7272f0574bea953a2f9322d81595865f6d80e4b",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 27,
        "changes": 63,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7b29ee2c77f76a58ac0db081c5b824112d3fe749/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7b29ee2c77f76a58ac0db081c5b824112d3fe749/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=7b29ee2c77f76a58ac0db081c5b824112d3fe749",
        "patch": "@@ -56,6 +56,33 @@ static CBlock CreateGenesisBlock(uint32_t nTime, uint32_t nNonce, uint32_t nBits\n     return CreateGenesisBlock(pszTimestamp, genesisOutputScript, nTime, nNonce, nBits, nVersion, genesisReward);\n }\n \n+template <int b>\n+inline Consensus::Deployment DeploymentAlwaysActive()\n+{\n+    // have to specify bit here, so that it AlwaysActive can be overridden usefully by -vbparams\n+    static_assert(0 <= b && b <= 28, \"Version bit must be between 0 and 28\");\n+\n+    Consensus::Deployment res;\n+    res.bit = b;\n+    res.nStartTime = Consensus::Deployment::ALWAYS_ACTIVE;\n+    res.nTimeout = Consensus::Deployment::NO_TIMEOUT;\n+    return res;\n+}\n+\n+template <int b, int64_t start, int64_t end>\n+inline Consensus::Deployment DeploymentByBIP9()\n+{\n+    static_assert(0 <= b && b <= 28, \"Version bit must be between 0 and 28\");\n+    static_assert(start != Consensus::Deployment::ALWAYS_ACTIVE, \"Use DeploymentAlwaysActive()\");\n+    static_assert(end >= start, \"End time must be greater than start time\");\n+\n+    Consensus::Deployment res;\n+    res.bit = b;\n+    res.nStartTime = start;\n+    res.nTimeout = end;\n+    return res;\n+}\n+\n /**\n  * Main network\n  */\n@@ -76,19 +103,13 @@ class CMainParams : public CChainParams {\n         consensus.fPowNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1916; // 95% of 2016\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 1199145601, 1230767999>(); // January 1, 2008 - December 31, 2008\n \n         // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1462060800; // May 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1462060800, 1493596800>(); // May 1st, 2016 - May 1st, 2017\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1479168000; // November 15th, 2016.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1510704000; // November 15th, 2017.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentByBIP9<1, 1479168000, 1510704000>(); // November 15th, 2016 - November 15th, 2017.\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000051dc8b82f450202ecb3d471\");\n@@ -193,19 +214,13 @@ class CTestNetParams : public CChainParams {\n         consensus.fPowNoRetargeting = false;\n         consensus.nRuleChangeActivationThreshold = 1512; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 1199145601; // January 1, 2008\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = 1230767999; // December 31, 2008\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 1199145601, 1230767999>(); // January 1, 2008 - December 31, 2008\n \n         // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 1456790400; // March 1st, 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = 1493596800; // May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1456790400, 1493596800>(); // March 1st, 2016 - May 1st, 2017\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = 1462060800; // May 1st 2016\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = 1493596800; // May 1st 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentByBIP9<1, 1462060800, 1493596800>(); // May 1st 2016 - May 1st 2017\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000007dbe94253893cbd463\");\n@@ -288,15 +303,9 @@ class CRegTestParams : public CChainParams {\n         consensus.fPowNoRetargeting = true;\n         consensus.nRuleChangeActivationThreshold = 108; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].bit = 28;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].bit = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nStartTime = 0;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].bit = 1;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nStartTime = Consensus::Deployment::ALWAYS_ACTIVE;\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT].nTimeout = Consensus::Deployment::NO_TIMEOUT;\n+        consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 0, Consensus::Deployment::NO_TIMEOUT>();\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 0, Consensus::Deployment::NO_TIMEOUT>();\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentAlwaysActive<1>();\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00\");"
      }
    ]
  },
  {
    "sha": "da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTI4ZWY4MWJlNTc5MzcyNmI5Y2EyNzk0YzUzZjJhYzBiMTJmYzNi",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T06:00:40Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T07:15:36Z"
      },
      "message": "Support for fixed height activation and always-disabled deployments",
      "tree": {
        "sha": "5707447897eab84b4a80ee4e84210218fb2c313e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5707447897eab84b4a80ee4e84210218fb2c313e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7b29ee2c77f76a58ac0db081c5b824112d3fe749",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7b29ee2c77f76a58ac0db081c5b824112d3fe749",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7b29ee2c77f76a58ac0db081c5b824112d3fe749"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 58,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ebe4e38ba97c7e0e8c393e4222434020f4a27332",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
        "patch": "@@ -69,11 +69,25 @@ inline Consensus::Deployment DeploymentAlwaysActive()\n     return res;\n }\n \n+template <int64_t height>\n+inline Consensus::Deployment DeploymentAtFixedHeight()\n+{\n+    static_assert(0 < height, \"Use DeploymentAlwaysActive() or set positive height for fixed activation\");\n+    static_assert(height < 500000000, \"Fixed activation height should not look like a timestamp\");\n+\n+    Consensus::Deployment res;\n+    res.bit = 33;\n+    res.nStartTime = height;\n+    res.nTimeout = Consensus::Deployment::FIXED_ACTIVATION_HEIGHT;\n+    return res;\n+}\n+\n template <int b, int64_t start, int64_t end>\n inline Consensus::Deployment DeploymentByBIP9()\n {\n     static_assert(0 <= b && b <= 28, \"Version bit must be between 0 and 28\");\n     static_assert(start != Consensus::Deployment::ALWAYS_ACTIVE, \"Use DeploymentAlwaysActive()\");\n+    static_assert(end != Consensus::Deployment::DISABLED, \"Use DeploymentDisabled()\");\n     static_assert(end >= start, \"End time must be greater than start time\");\n \n     Consensus::Deployment res;\n@@ -83,6 +97,15 @@ inline Consensus::Deployment DeploymentByBIP9()\n     return res;\n }\n \n+inline Consensus::Deployment DeploymentDisabled()\n+{\n+    Consensus::Deployment res;\n+    res.bit = 33;\n+    res.nStartTime = 0;\n+    res.nTimeout = Consensus::Deployment::DISABLED;\n+    return res;\n+}\n+\n /**\n  * Main network\n  */"
      },
      {
        "sha": "2879fbd78412b7e44a2501f21ee6191848348caa",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
        "patch": "@@ -36,11 +36,19 @@ struct Deployment {\n     /** Constant for nTimeout very far in the future. */\n     static constexpr int64_t NO_TIMEOUT = std::numeric_limits<int64_t>::max();\n \n+    /** Constant for nTimeout indicating nStartTime is a fixed block height where activation begins. */\n+    static constexpr int64_t FIXED_ACTIVATION_HEIGHT = -1;\n+\n     /** Special value for nStartTime indicating that the deployment is always active.\n      *  This is useful for testing, as it means tests don't need to deal with the activation\n      *  process (which takes at least 3 BIP9 intervals). Only tests that specifically test the\n      *  behaviour during activation cannot use this. */\n     static constexpr int64_t ALWAYS_ACTIVE = -1;\n+\n+    /** Special value for nTimeout indicating that the deployment is never active.\n+     *  This is useful for integrating code changes or activation on regtest/testnet\n+     *  before the deployment parameters for mainnet are set. */\n+    static constexpr int64_t DISABLED = 0;\n };\n \n /**"
      },
      {
        "sha": "7402fc24ee6c5bdfd21ae5d3ce8efb94d24a63f5",
        "filename": "src/versionbits.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/versionbits.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da28ef81be5793726b9ca2794c53f2ac0b12fc3b/src/versionbits.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.cpp?ref=da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
        "patch": "@@ -17,6 +17,20 @@ ThresholdState AbstractThresholdConditionChecker::GetStateFor(const CBlockIndex*\n         return ThresholdState::ACTIVE;\n     }\n \n+    // Disabled deployments; permanently defined, never active/failed\n+    if (nTimeTimeout == Consensus::Deployment::DISABLED) {\n+        return ThresholdState::DEFINED;\n+    }\n+\n+    // Fixed height deployments\n+    if (nTimeTimeout == Consensus::Deployment::FIXED_ACTIVATION_HEIGHT) {\n+        if (pindexPrev == nullptr || pindexPrev->nHeight + 1 < nTimeStart) {\n+            return ThresholdState::DEFINED;\n+        } else {\n+            return ThresholdState::ACTIVE;\n+        }\n+    }\n+\n     // A block's state is always the same as that of the first of its period, so it is computed based on a pindexPrev whose height equals a multiple of nPeriod - 1.\n     if (pindexPrev != nullptr) {\n         pindexPrev = pindexPrev->GetAncestor(pindexPrev->nHeight - ((pindexPrev->nHeight + 1) % nPeriod));\n@@ -131,6 +145,19 @@ int AbstractThresholdConditionChecker::GetStateSinceHeightFor(const CBlockIndex*\n         return 0;\n     }\n \n+    int64_t end_time = EndTime(params);\n+    if (end_time == Consensus::Deployment::DISABLED) {\n+        return 0;\n+    }\n+\n+    if (end_time == Consensus::Deployment::FIXED_ACTIVATION_HEIGHT) {\n+        if (pindexPrev == nullptr || pindexPrev->nHeight + 1 < start_time) {\n+            return 0;\n+        } else {\n+            return start_time;\n+        }\n+    }\n+\n     const ThresholdState initialState = GetStateFor(pindexPrev, params, cache);\n \n     // BIP 9 about state DEFINED: \"The genesis block is by definition in this state for each deployment.\""
      }
    ]
  },
  {
    "sha": "7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZTZhOTBkMjgwYjA0Y2UyMTE0Y2YwNDBkNDI0M2E2ZWQwOWIxZDEy",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-18T07:12:30Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T07:18:49Z"
      },
      "message": "Use Deployment struct for BIP 65 and BIP 66",
      "tree": {
        "sha": "8d1bf05145a4b045dbf2ad4942115d328e254389",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8d1bf05145a4b045dbf2ad4942115d328e254389"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da28ef81be5793726b9ca2794c53f2ac0b12fc3b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/da28ef81be5793726b9ca2794c53f2ac0b12fc3b"
      }
    ],
    "stats": {
      "total": 52,
      "additions": 35,
      "deletions": 17
    },
    "files": [
      {
        "sha": "bd335f295faab640b3e74f68e881b6be0633ff67",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 14,
        "deletions": 6,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "patch": "@@ -117,8 +117,6 @@ class CMainParams : public CChainParams {\n         consensus.BIP16Exception = uint256S(\"0x00000000000002dc756eebf4f49723ed8d30cc28a5f108eb94b1ba88ac4f9c22\");\n         consensus.BIP34Height = 227931;\n         consensus.BIP34Hash = uint256S(\"0x000000000000024b89b42a942fe0d9fea3bb44ab7bd1b19115dd6a759c0808b8\");\n-        consensus.BIP65Height = 388381; // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n-        consensus.BIP66Height = 363725; // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -128,6 +126,12 @@ class CMainParams : public CChainParams {\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 1199145601, 1230767999>(); // January 1, 2008 - December 31, 2008\n \n+        // Deployment of BIP66.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_STRICTDER] = DeploymentAtFixedHeight<363725>(); // 00000000000000000379eaa19dce8c9b722d46ae6a57c2f1a988119488b50931\n+\n+        // Deployment of BIP65.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CLTV] = DeploymentAtFixedHeight<388381>(); // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n+\n         // Deployment of BIP68, BIP112, and BIP113.\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1462060800, 1493596800>(); // May 1st, 2016 - May 1st, 2017\n \n@@ -228,8 +232,6 @@ class CTestNetParams : public CChainParams {\n         consensus.BIP16Exception = uint256S(\"0x00000000dd30457c001f4095d208cc1296b0eed002427aa599874af7a432b105\");\n         consensus.BIP34Height = 21111;\n         consensus.BIP34Hash = uint256S(\"0x0000000023b3a96d3484e5abb3755c413e7d41500f8e2a5c3f0dd01299cd8ef8\");\n-        consensus.BIP65Height = 581885; // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n-        consensus.BIP66Height = 330776; // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n         consensus.powLimit = uint256S(\"00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -239,6 +241,12 @@ class CTestNetParams : public CChainParams {\n         consensus.nMinerConfirmationWindow = 2016; // nPowTargetTimespan / nPowTargetSpacing\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 1199145601, 1230767999>(); // January 1, 2008 - December 31, 2008\n \n+        // Deployment of BIP66.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_STRICTDER] = DeploymentAtFixedHeight<330776>(); // 000000002104c8c45e99a8853285a3b592602a3ccde2b832481da85e9e4ba182\n+\n+        // Deployment of BIP65.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CLTV] = DeploymentAtFixedHeight<581885>(); // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n+\n         // Deployment of BIP68, BIP112, and BIP113.\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1456790400, 1493596800>(); // March 1st, 2016 - May 1st, 2017\n \n@@ -317,8 +325,6 @@ class CRegTestParams : public CChainParams {\n         consensus.BIP16Exception = uint256();\n         consensus.BIP34Height = 500; // BIP34 activated on regtest (Used in functional tests)\n         consensus.BIP34Hash = uint256();\n-        consensus.BIP65Height = 1351; // BIP65 activated on regtest (Used in functional tests)\n-        consensus.BIP66Height = 1251; // BIP66 activated on regtest (Used in functional tests)\n         consensus.powLimit = uint256S(\"7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n         consensus.nPowTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n         consensus.nPowTargetSpacing = 10 * 60;\n@@ -327,6 +333,8 @@ class CRegTestParams : public CChainParams {\n         consensus.nRuleChangeActivationThreshold = 108; // 75% for testchains\n         consensus.nMinerConfirmationWindow = 144; // Faster than normal for regtest (144 instead of 2016)\n         consensus.vDeployments[Consensus::DEPLOYMENT_TESTDUMMY] = DeploymentByBIP9<28, 0, Consensus::Deployment::NO_TIMEOUT>();\n+        consensus.vDeployments[Consensus::DEPLOYMENT_STRICTDER] = DeploymentAtFixedHeight<1251>(); // BIP66 activated on regtest (Used in functional tests)\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CLTV] = DeploymentAtFixedHeight<1351>(); // BIP65 activated on regtest (Used in functional tests)\n         consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 0, Consensus::Deployment::NO_TIMEOUT>();\n         consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentAlwaysActive<1>();\n "
      },
      {
        "sha": "ca36ab0878b02d7034009c4fd9bf9c4da168d89c",
        "filename": "src/consensus/params.h",
        "status": "modified",
        "additions": 2,
        "deletions": 4,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/consensus/params.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/consensus/params.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/params.h?ref=7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "patch": "@@ -16,6 +16,8 @@ namespace Consensus {\n enum DeploymentPos\n {\n     DEPLOYMENT_TESTDUMMY,\n+    DEPLOYMENT_STRICTDER, // Deployment of BIP66\n+    DEPLOYMENT_CLTV, // Deployment of BIP65\n     DEPLOYMENT_CSV, // Deployment of BIP68, BIP112, and BIP113.\n     DEPLOYMENT_SEGWIT, // Deployment of BIP141, BIP143, and BIP147.\n     // NOTE: Also add new deployments to VersionBitsDeploymentInfo in versionbits.cpp\n@@ -62,10 +64,6 @@ struct Params {\n     /** Block height and hash at which BIP34 becomes active */\n     int BIP34Height;\n     uint256 BIP34Hash;\n-    /** Block height at which BIP65 becomes active */\n-    int BIP65Height;\n-    /** Block height at which BIP66 becomes active */\n-    int BIP66Height;\n     /**\n      * Minimum blocks including miner confirmation of the total of 2016 blocks in a retargeting period,\n      * (nPowTargetTimespan / nPowTargetSpacing) which is also used for BIP9 deployments."
      },
      {
        "sha": "10f8b6ea25df531f41aa234b8c5333b52dd39d65",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "patch": "@@ -1225,6 +1225,8 @@ static UniValue verifychain(const JSONRPCRequest& request)\n }\n \n /** Implementation of IsSuperMajority with better feedback */\n+static VersionBitsCache vbcache GUARDED_BY(cs_main);\n+\n static UniValue SoftForkMajorityDesc(int version, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n {\n     UniValue rv(UniValue::VOBJ);\n@@ -1235,10 +1237,10 @@ static UniValue SoftForkMajorityDesc(int version, const CBlockIndex* pindex, con\n             activated = pindex->nHeight >= consensusParams.BIP34Height;\n             break;\n         case 3:\n-            activated = pindex->nHeight >= consensusParams.BIP66Height;\n+            activated = DeploymentActive(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_STRICTDER, vbcache);\n             break;\n         case 4:\n-            activated = pindex->nHeight >= consensusParams.BIP65Height;\n+            activated = DeploymentActive(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_CLTV, vbcache);\n             break;\n     }\n     rv.pushKV(\"status\", activated);"
      },
      {
        "sha": "962ee1c07b47e9cca975a07ca802dea4a97838cd",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 4,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "patch": "@@ -1607,12 +1607,12 @@ static unsigned int GetBlockScriptFlags(const CBlockIndex* pindex, const Consens\n     }\n \n     // Start enforcing the DERSIG (BIP66) rule\n-    if (pindex->nHeight >= consensusparams.BIP66Height) {\n+    if (DeploymentActive(pindex->pprev, consensusparams, Consensus::DEPLOYMENT_STRICTDER, versionbitscache)) {\n         flags |= SCRIPT_VERIFY_DERSIG;\n     }\n \n     // Start enforcing CHECKLOCKTIMEVERIFY (BIP65) rule\n-    if (pindex->nHeight >= consensusparams.BIP65Height) {\n+    if (DeploymentActive(pindex->pprev, consensusparams, Consensus::DEPLOYMENT_CLTV, versionbitscache)) {\n         flags |= SCRIPT_VERIFY_CHECKLOCKTIMEVERIFY;\n     }\n \n@@ -3132,10 +3132,11 @@ static bool ContextualCheckBlockHeader(const CBlockHeader& block, CValidationSta\n     // Reject outdated version blocks when 95% (75% on testnet) of the network has upgraded:\n     // check for version 2, 3 and 4 upgrades\n     if((block.nVersion < 2 && nHeight >= consensusParams.BIP34Height) ||\n-       (block.nVersion < 3 && nHeight >= consensusParams.BIP66Height) ||\n-       (block.nVersion < 4 && nHeight >= consensusParams.BIP65Height))\n+       (block.nVersion < 3 && DeploymentActive(pindexPrev, consensusParams, Consensus::DEPLOYMENT_STRICTDER, versionbitscache)) ||\n+       (block.nVersion < 4 && DeploymentActive(pindexPrev, consensusParams, Consensus::DEPLOYMENT_CLTV, versionbitscache))) {\n             return state.Invalid(ValidationInvalidReason::BLOCK_INVALID_HEADER, false, REJECT_OBSOLETE, strprintf(\"bad-version(0x%08x)\", block.nVersion),\n                                  strprintf(\"rejected nVersion=0x%08x block\", block.nVersion));\n+    }\n \n     return true;\n }"
      },
      {
        "sha": "6db552d3703c8b8fea87b6a0aa2cbe67c8846d17",
        "filename": "src/versionbitsinfo.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 1,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/versionbitsinfo.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7e6a90d280b04ce2114cf040d4243a6ed09b1d12/src/versionbitsinfo.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbitsinfo.cpp?ref=7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "patch": "@@ -6,11 +6,19 @@\n \n #include <consensus/params.h>\n \n-const struct VBDeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_BITS_DEPLOYMENTS] = {\n+const struct VBDeploymentInfo VersionBitsDeploymentInfo[] = {\n     {\n         /*.name =*/ \"testdummy\",\n         /*.gbt_force =*/ true,\n     },\n+    {\n+        /*.name =*/ \"strictder\",\n+        /*.gbt_force =*/ true,\n+    },\n+    {\n+        /*.name =*/ \"cltv\",\n+        /*.gbt_force =*/ true,\n+    },\n     {\n         /*.name =*/ \"csv\",\n         /*.gbt_force =*/ true,\n@@ -20,3 +28,4 @@ const struct VBDeploymentInfo VersionBitsDeploymentInfo[Consensus::MAX_VERSION_B\n         /*.gbt_force =*/ true,\n     }\n };\n+static_assert(sizeof(VersionBitsDeploymentInfo) == Consensus::MAX_VERSION_BITS_DEPLOYMENTS * sizeof(VersionBitsDeploymentInfo[0]), \"Must specify names for all deployments\");"
      }
    ]
  },
  {
    "sha": "caf9848a0bbd924df51d5d07e12361be267fb574",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjYWY5ODQ4YTBiYmQ5MjRkZjUxZDVkMDdlMTIzNjFiZTI2N2ZiNTc0",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-18T07:48:51Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T07:29:58Z"
      },
      "message": "Display fixed height deployments in bip9_softforks\n\n(This does not include pre-CSV soft-forks however, due to special casing\nin the loop that calls BIP9SoftForkDescPushBack)",
      "tree": {
        "sha": "e25a94da04574df8d655244ed4c48b3f3464c79a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e25a94da04574df8d655244ed4c48b3f3464c79a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/caf9848a0bbd924df51d5d07e12361be267fb574",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caf9848a0bbd924df51d5d07e12361be267fb574",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/caf9848a0bbd924df51d5d07e12361be267fb574",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caf9848a0bbd924df51d5d07e12361be267fb574/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7e6a90d280b04ce2114cf040d4243a6ed09b1d12",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7e6a90d280b04ce2114cf040d4243a6ed09b1d12"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "ab174241e030e24f6f956f19f91a02825a712bce",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/caf9848a0bbd924df51d5d07e12361be267fb574/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/caf9848a0bbd924df51d5d07e12361be267fb574/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=caf9848a0bbd924df51d5d07e12361be267fb574",
        "patch": "@@ -1290,11 +1290,12 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n \n static void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n-    // Deployments with timeout value of 0 are hidden.\n+    // Deployments with timeout value of 0 (DISABLED) are hidden.\n     // A timeout value of 0 guarantees a softfork will never be activated.\n     // This is used when softfork codes are merged without specifying the deployment schedule.\n-    if (consensusParams.vDeployments[id].nTimeout > 0)\n+    if (consensusParams.vDeployments[id].nTimeout != Consensus::Deployment::DISABLED) {\n         bip9_softforks.pushKV(VersionBitsDeploymentInfo[id].name, BIP9SoftForkDesc(consensusParams, id));\n+    }\n }\n \n UniValue getblockchaininfo(const JSONRPCRequest& request)"
      }
    ]
  },
  {
    "sha": "d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDg2NWI1MTJhOGZkOGFmZTU1MDNmYTY0Mzc0YTZmM2NkOTdhZGY4",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-02-18T09:21:49Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T07:30:47Z"
      },
      "message": "Hardcode csv/segwit activation",
      "tree": {
        "sha": "3fa73bc7f3e42ff079294d4588fb83f0a7212dbc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3fa73bc7f3e42ff079294d4588fb83f0a7212dbc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4865b512a8fd8afe5503fa64374a6f3cd97adf8/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "caf9848a0bbd924df51d5d07e12361be267fb574",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/caf9848a0bbd924df51d5d07e12361be267fb574",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/caf9848a0bbd924df51d5d07e12361be267fb574"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "eb98ab416cf2d65111f1ed80b8bab304958a00d1",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d4865b512a8fd8afe5503fa64374a6f3cd97adf8/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d4865b512a8fd8afe5503fa64374a6f3cd97adf8/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
        "patch": "@@ -133,10 +133,10 @@ class CMainParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_CLTV] = DeploymentAtFixedHeight<388381>(); // 000000000000000004c2b624ed5d7756c508d90fd0da2c7c679febfa6c4735f0\n \n         // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1462060800, 1493596800>(); // May 1st, 2016 - May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentAtFixedHeight<419328>(); // 000000000000000004a1b34462cb8aeebd5799177f7a29cf28f2d1961716b5b5\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentByBIP9<1, 1479168000, 1510704000>(); // November 15th, 2016 - November 15th, 2017.\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentAtFixedHeight<481824>(); // 0000000000000000001c8018d9cb3b742ef25114f27563e3fc4a1902167f9893\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x0000000000000000000000000000000000000000051dc8b82f450202ecb3d471\");\n@@ -248,10 +248,10 @@ class CTestNetParams : public CChainParams {\n         consensus.vDeployments[Consensus::DEPLOYMENT_CLTV] = DeploymentAtFixedHeight<581885>(); // 00000000007f6655f22f98e72ed80d8b06dc761d5da09df0fa1dc4be4f861eb6\n \n         // Deployment of BIP68, BIP112, and BIP113.\n-        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentByBIP9<0, 1456790400, 1493596800>(); // March 1st, 2016 - May 1st, 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_CSV] = DeploymentAtFixedHeight<770112>(); // 00000000025e930139bac5c6c31a403776da130831ab85be56578f3fa75369bb\n \n         // Deployment of SegWit (BIP141, BIP143, and BIP147)\n-        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentByBIP9<1, 1462060800, 1493596800>(); // May 1st 2016 - May 1st 2017\n+        consensus.vDeployments[Consensus::DEPLOYMENT_SEGWIT] = DeploymentAtFixedHeight<834624>(); // 00000000002b980fcd729daaa248fd9316a5200e9b367f4ff2c42453e84201ca\n \n         // The best chain should have at least this much work.\n         consensus.nMinimumChainWork = uint256S(\"0x00000000000000000000000000000000000000000000007dbe94253893cbd463\");"
      }
    ]
  },
  {
    "sha": "c4ca81264b99b8f03d660f2cb3204fd2fbced555",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNGNhODEyNjRiOTliOGYwM2Q2NjBmMmNiMzIwNGZkMmZiY2VkNTU1",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-18T21:18:05Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-19T05:40:28Z"
      },
      "message": "Merge bip9 info into getblockchaininfo softforks",
      "tree": {
        "sha": "032931cd895c8aab963d82a15321d205f52953b8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/032931cd895c8aab963d82a15321d205f52953b8"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c4ca81264b99b8f03d660f2cb3204fd2fbced555",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4ca81264b99b8f03d660f2cb3204fd2fbced555",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c4ca81264b99b8f03d660f2cb3204fd2fbced555",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4ca81264b99b8f03d660f2cb3204fd2fbced555/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d4865b512a8fd8afe5503fa64374a6f3cd97adf8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d4865b512a8fd8afe5503fa64374a6f3cd97adf8"
      }
    ],
    "stats": {
      "total": 104,
      "additions": 42,
      "deletions": 62
    },
    "files": [
      {
        "sha": "fb149a668f8de3e8b68453a2a9a13de530d9dbcc",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 41,
        "deletions": 60,
        "changes": 101,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ca81264b99b8f03d660f2cb3204fd2fbced555/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ca81264b99b8f03d660f2cb3204fd2fbced555/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=c4ca81264b99b8f03d660f2cb3204fd2fbced555",
        "patch": "@@ -1224,39 +1224,7 @@ static UniValue verifychain(const JSONRPCRequest& request)\n     return CVerifyDB().VerifyDB(Params(), pcoinsTip.get(), nCheckLevel, nCheckDepth);\n }\n \n-/** Implementation of IsSuperMajority with better feedback */\n-static VersionBitsCache vbcache GUARDED_BY(cs_main);\n-\n-static UniValue SoftForkMajorityDesc(int version, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n-{\n-    UniValue rv(UniValue::VOBJ);\n-    bool activated = false;\n-    switch(version)\n-    {\n-        case 2:\n-            activated = pindex->nHeight >= consensusParams.BIP34Height;\n-            break;\n-        case 3:\n-            activated = DeploymentActive(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_STRICTDER, vbcache);\n-            break;\n-        case 4:\n-            activated = DeploymentActive(pindex->pprev, consensusParams, Consensus::DEPLOYMENT_CLTV, vbcache);\n-            break;\n-    }\n-    rv.pushKV(\"status\", activated);\n-    return rv;\n-}\n-\n-static UniValue SoftForkDesc(const std::string &name, int version, const CBlockIndex* pindex, const Consensus::Params& consensusParams)\n-{\n-    UniValue rv(UniValue::VOBJ);\n-    rv.pushKV(\"id\", name);\n-    rv.pushKV(\"version\", version);\n-    rv.pushKV(\"reject\", SoftForkMajorityDesc(version, pindex, consensusParams));\n-    return rv;\n-}\n-\n-static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+static UniValue SoftForkDesc(const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     UniValue rv(UniValue::VOBJ);\n     const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n@@ -1271,8 +1239,14 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n     {\n         rv.pushKV(\"bit\", consensusParams.vDeployments[id].bit);\n     }\n-    rv.pushKV(\"startTime\", consensusParams.vDeployments[id].nStartTime);\n-    rv.pushKV(\"timeout\", consensusParams.vDeployments[id].nTimeout);\n+    if (consensusParams.vDeployments[id].nStartTime == Consensus::Deployment::ALWAYS_ACTIVE) {\n+        rv.pushKV(\"alwaysActive\", true);\n+    } else if (consensusParams.vDeployments[id].nTimeout == Consensus::Deployment::FIXED_ACTIVATION_HEIGHT) {\n+        rv.pushKV(\"fixedHeight\", consensusParams.vDeployments[id].nStartTime);\n+    } else {\n+        rv.pushKV(\"startTime\", consensusParams.vDeployments[id].nStartTime);\n+        rv.pushKV(\"timeout\", consensusParams.vDeployments[id].nTimeout);\n+    }\n     rv.pushKV(\"since\", VersionBitsTipStateSinceHeight(consensusParams, id));\n     if (ThresholdState::STARTED == thresholdState)\n     {\n@@ -1288,13 +1262,32 @@ static UniValue BIP9SoftForkDesc(const Consensus::Params& consensusParams, Conse\n     return rv;\n }\n \n-static void BIP9SoftForkDescPushBack(UniValue& bip9_softforks, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n+static void BIP34DescPushBack(UniValue& softforks, const Consensus::Params& consensusParams)\n+{\n+    UniValue rv(UniValue::VOBJ);\n+    bool active;\n+    {\n+        LOCK(cs_main);\n+        active = ::ChainActive().Height() >= consensusParams.BIP34Height;\n+    }\n+    rv.pushKV(\"status\", (active ? \"active\" : \"defined\"));\n+    rv.pushKV(\"fixedHeight\", consensusParams.BIP34Height);\n+    rv.pushKV(\"since\", (active ? consensusParams.BIP34Height : 0));\n+    softforks.pushKV(\"bip34\", rv);\n+}\n+\n+static void SoftForkDescPushBack(UniValue& softforks, const Consensus::Params& consensusParams, Consensus::DeploymentPos id)\n {\n     // Deployments with timeout value of 0 (DISABLED) are hidden.\n     // A timeout value of 0 guarantees a softfork will never be activated.\n     // This is used when softfork codes are merged without specifying the deployment schedule.\n-    if (consensusParams.vDeployments[id].nTimeout != Consensus::Deployment::DISABLED) {\n-        bip9_softforks.pushKV(VersionBitsDeploymentInfo[id].name, BIP9SoftForkDesc(consensusParams, id));\n+    // Further deployments with a timeout earlier than Jan 1 2009 are hidden;\n+    // this is used for unit tests with the TESTDUMMY deployment.\n+    // Note that a timeout of -1 indicates a fixed height deployment, so\n+    // is allowed.\n+    const int64_t timeout = consensusParams.vDeployments[id].nTimeout;\n+    if (timeout < 0 || timeout >= 1230768000) {\n+        softforks.pushKV(VersionBitsDeploymentInfo[id].name, SoftForkDesc(consensusParams, id));\n     }\n }\n \n@@ -1321,21 +1314,13 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n             \"  \\\"pruneheight\\\": xxxxxx,        (numeric) lowest-height complete block stored (only present if pruning is enabled)\\n\"\n             \"  \\\"automatic_pruning\\\": xx,      (boolean) whether automatic pruning is enabled (only present if pruning is enabled)\\n\"\n             \"  \\\"prune_target_size\\\": xxxxxx,  (numeric) the target size used by pruning (only present if automatic pruning is enabled)\\n\"\n-            \"  \\\"softforks\\\": [                (array) status of softforks in progress\\n\"\n-            \"     {\\n\"\n-            \"        \\\"id\\\": \\\"xxxx\\\",           (string) name of softfork\\n\"\n-            \"        \\\"version\\\": xx,          (numeric) block version\\n\"\n-            \"        \\\"reject\\\": {             (object) progress toward rejecting pre-softfork blocks\\n\"\n-            \"           \\\"status\\\": xx,        (boolean) true if threshold reached\\n\"\n-            \"        },\\n\"\n-            \"     }, ...\\n\"\n-            \"  ],\\n\"\n-            \"  \\\"bip9_softforks\\\": {           (object) status of BIP9 softforks in progress\\n\"\n+            \"  \\\"softforks\\\": {                (array) status of softforks\\n\"\n             \"     \\\"xxxx\\\" : {                 (string) name of the softfork\\n\"\n             \"        \\\"status\\\": \\\"xxxx\\\",       (string) one of \\\"defined\\\", \\\"started\\\", \\\"locked_in\\\", \\\"active\\\", \\\"failed\\\"\\n\"\n             \"        \\\"bit\\\": xx,              (numeric) the bit (0-28) in the block version field used to signal this softfork (only for \\\"started\\\" status)\\n\"\n-            \"        \\\"startTime\\\": xx,        (numeric) the minimum median time past of a block at which the bit gains its meaning\\n\"\n-            \"        \\\"timeout\\\": xx,          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in\\n\"\n+            \"        \\\"startTime\\\": xx,        (numeric) the minimum median time past of a block at which the bit gains its meaning (only for bip9 deployments)\\n\"\n+            \"        \\\"timeout\\\": xx,          (numeric) the median time past of a block at which the deployment is considered failed if not yet locked in (only for bip9 deployments)\\n\"\n+            \"        \\\"fixedHeight\\\": xx,      (numeric) the fixed activation height of the soft fork (only for buried deployments)\\n\"\n             \"        \\\"since\\\": xx,            (numeric) height of the first block to which the status applies\\n\"\n             \"        \\\"statistics\\\": {         (object) numeric statistics about BIP9 signalling for a softfork (only for \\\"started\\\" status)\\n\"\n             \"           \\\"period\\\": xx,        (numeric) the length in blocks of the BIP9 signalling period \\n\"\n@@ -1388,16 +1373,12 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     }\n \n     const Consensus::Params& consensusParams = Params().GetConsensus();\n-    UniValue softforks(UniValue::VARR);\n-    UniValue bip9_softforks(UniValue::VOBJ);\n-    softforks.push_back(SoftForkDesc(\"bip34\", 2, tip, consensusParams));\n-    softforks.push_back(SoftForkDesc(\"bip66\", 3, tip, consensusParams));\n-    softforks.push_back(SoftForkDesc(\"bip65\", 4, tip, consensusParams));\n-    for (int pos = Consensus::DEPLOYMENT_CSV; pos != Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++pos) {\n-        BIP9SoftForkDescPushBack(bip9_softforks, consensusParams, static_cast<Consensus::DeploymentPos>(pos));\n-    }\n-    obj.pushKV(\"softforks\",             softforks);\n-    obj.pushKV(\"bip9_softforks\", bip9_softforks);\n+    UniValue softforks(UniValue::VOBJ);\n+    BIP34DescPushBack(softforks, consensusParams);\n+    for (int pos = 0; pos != Consensus::MAX_VERSION_BITS_DEPLOYMENTS; ++pos) {\n+        SoftForkDescPushBack(softforks, consensusParams, static_cast<Consensus::DeploymentPos>(pos));\n+    }\n+    obj.pushKV(\"softforks\", softforks);\n \n     obj.pushKV(\"warnings\", GetWarnings(\"statusbar\"));\n     return obj;"
      },
      {
        "sha": "a3063f4781818ca8f8b7d97fd294e263e94b87ff",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ca81264b99b8f03d660f2cb3204fd2fbced555/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ca81264b99b8f03d660f2cb3204fd2fbced555/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=c4ca81264b99b8f03d660f2cb3204fd2fbced555",
        "patch": "@@ -78,7 +78,6 @@ def _test_getblockchaininfo(self):\n \n         keys = [\n             'bestblockhash',\n-            'bip9_softforks',\n             'blocks',\n             'chain',\n             'chainwork',"
      },
      {
        "sha": "68bf04fc482679394174b17fed7154332db7f2d9",
        "filename": "test/functional/test_framework/util.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c4ca81264b99b8f03d660f2cb3204fd2fbced555/test/functional/test_framework/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c4ca81264b99b8f03d660f2cb3204fd2fbced555/test/functional/test_framework/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/test_framework/util.py?ref=c4ca81264b99b8f03d660f2cb3204fd2fbced555",
        "patch": "@@ -343,7 +343,7 @@ def delete_cookie_file(datadir):\n \n def get_bip9_status(node, key):\n     info = node.getblockchaininfo()\n-    return info['bip9_softforks'][key]\n+    return info['softforks'][key]\n \n def set_node_times(nodes, t):\n     for node in nodes:"
      }
    ]
  },
  {
    "sha": "48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OGQ1ZmVmNWY1ZWIyNWE0YmY3MjAxZjQ0YTY0ODM3ZTgyMzdmYzU3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@gmail.com",
        "date": "2018-02-13T14:35:22Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-19T05:40:49Z"
      },
      "message": "[tests] Add coverage for the content of getblockchaininfo.softforks",
      "tree": {
        "sha": "de2d536ac6283ba3086b60e6f9cc590af7ea7919",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/de2d536ac6283ba3086b60e6f9cc590af7ea7919"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48d5fef5f5eb25a4bf7201f44a64837e8237fc57/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c4ca81264b99b8f03d660f2cb3204fd2fbced555",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c4ca81264b99b8f03d660f2cb3204fd2fbced555",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c4ca81264b99b8f03d660f2cb3204fd2fbced555"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 35,
      "deletions": 0
    },
    "files": [
      {
        "sha": "05e501306970ca15348837a5b5a75a1987650eaa",
        "filename": "test/functional/rpc_blockchain.py",
        "status": "modified",
        "additions": 35,
        "deletions": 0,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/48d5fef5f5eb25a4bf7201f44a64837e8237fc57/test/functional/rpc_blockchain.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/48d5fef5f5eb25a4bf7201f44a64837e8237fc57/test/functional/rpc_blockchain.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_blockchain.py?ref=48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
        "patch": "@@ -123,6 +123,41 @@ def _test_getblockchaininfo(self):\n         assert_equal(res['prune_target_size'], 576716800)\n         assert_greater_than(res['size_on_disk'], 0)\n \n+        assert_equal(res['softforks'], {\n+            'bip34': {'status': 'defined', 'fixedHeight': 500, 'since': 0},\n+            'strictder': {'status': 'defined', 'fixedHeight': 1251, 'since': 0},\n+            'cltv': {'status': 'defined', 'fixedHeight': 1351, 'since': 0},\n+            'csv': {\n+                'status': 'started',\n+                'bit': 0,\n+                'startTime': 0,\n+                'timeout': 9223372036854775807,\n+                'since': 144,\n+                'statistics': {\n+                    'period': 144,\n+                    'threshold': 108,\n+                    'elapsed': 57,\n+                    'count': 57,\n+                    'possible': True\n+                }\n+            },\n+            'segwit': {'status': 'active', 'alwaysActive': True, 'since': 0},\n+            'testdummy': {\n+                'status': 'started',\n+                'bit': 28,\n+                'startTime': 0,\n+                'timeout': 9223372036854775807,\n+                'since': 144,\n+                'statistics': {\n+                    'period': 144,\n+                    'threshold': 108,\n+                    'elapsed': 57,\n+                    'count': 57,\n+                    'possible': True\n+                }\n+            },\n+        })\n+\n     def _test_getchaintxstats(self):\n         self.log.info(\"Test getchaintxstats\")\n "
      }
    ]
  },
  {
    "sha": "845deb1c60d02f23356e7d89509c50b69b0be8f7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4NDVkZWIxYzYwZDAyZjIzMzU2ZTdkODk1MDljNTBiNjliMGJlOGY3",
    "commit": {
      "author": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-19T05:46:32Z"
      },
      "committer": {
        "name": "Anthony Towns",
        "email": "aj@erisian.com.au",
        "date": "2019-06-19T05:46:32Z"
      },
      "message": "Add releases notes for RPC change",
      "tree": {
        "sha": "bb80d2fe47e8be6be31c706ee4169153cf677813",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb80d2fe47e8be6be31c706ee4169153cf677813"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/845deb1c60d02f23356e7d89509c50b69b0be8f7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845deb1c60d02f23356e7d89509c50b69b0be8f7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/845deb1c60d02f23356e7d89509c50b69b0be8f7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/845deb1c60d02f23356e7d89509c50b69b0be8f7/comments",
    "author": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ajtowns",
      "id": 127186,
      "node_id": "MDQ6VXNlcjEyNzE4Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/127186?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ajtowns",
      "html_url": "https://github.com/ajtowns",
      "followers_url": "https://api.github.com/users/ajtowns/followers",
      "following_url": "https://api.github.com/users/ajtowns/following{/other_user}",
      "gists_url": "https://api.github.com/users/ajtowns/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ajtowns/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ajtowns/subscriptions",
      "organizations_url": "https://api.github.com/users/ajtowns/orgs",
      "repos_url": "https://api.github.com/users/ajtowns/repos",
      "events_url": "https://api.github.com/users/ajtowns/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ajtowns/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/48d5fef5f5eb25a4bf7201f44a64837e8237fc57",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/48d5fef5f5eb25a4bf7201f44a64837e8237fc57"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 3,
      "deletions": 0
    },
    "files": [
      {
        "sha": "bd8c8617c40c0da478d5ed93ec20211aa5c7d884",
        "filename": "doc/release-notes-16229.md",
        "status": "added",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/845deb1c60d02f23356e7d89509c50b69b0be8f7/doc/release-notes-16229.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/845deb1c60d02f23356e7d89509c50b69b0be8f7/doc/release-notes-16229.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes-16229.md?ref=845deb1c60d02f23356e7d89509c50b69b0be8f7",
        "patch": "@@ -0,0 +1,3 @@\n+RPC changes\n+-----------\n+The RPC `getblockchaininfo` response changes the `softforks` key to provide an object whose keys are the softfork ids, rather than a list of softforks. This also now includes any BIP 9 softforks, and associated data. The `bip9_softforks` key is no longer included."
      }
    ]
  }
]