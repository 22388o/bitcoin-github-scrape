[
  {
    "sha": "fa299ac27364bd7a59e6fb7e0c4ce476f2deec40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTI5OWFjMjczNjRiZDdhNTllNmZiN2UwYzRjZTQ3NmYyZGVlYzQw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-08T10:10:01Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-10-13T13:38:18Z"
      },
      "message": "test: Speed up wallet_resendwallettransactions test with mockscheduler RPC",
      "tree": {
        "sha": "dbc55e499af90845b183edd3d255d80b880bf732",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dbc55e499af90845b183edd3d255d80b880bf732"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUhu1Av+PMGADBmPGX+R+JhOFPlJimENmk0sW95gEmqTEa795m7o3jB8XWPO9qpo\npxDcQkVyCVb3JbWtPposae1WM76Ng24CpErFAbpu2kQWHZTTPrPWlQ3HpCKz1Wzv\nEadetEwXSkCmVMd6/jaWoqg9LRjSLp+YUmO3aXwg71FSZSfAMW6qGiQKui1u2UXe\nfwPZmDqDuF0AEJZH2lnXLPbF3ln/I0cNQps89cftHKyz6eUc6n/1v/ge/ARiThEB\nGoHqwu2eFP7Vui25mQgMIXkZ152jxXg7kokEJx221sC0X1HA9doo084jrbQMmlWr\nb2A8zuxXY+sgX0A6elbt+AWw+G62e/yTQLQ+Z6DuILprsp6PVATW1RMu/iXydR1c\nN3qat65EYkeT3hdujvkyNPkVAE+T+zCHSDIIpOQLJBwUW6odmr9jIAyF5mkuCsOa\n6nCEwBT1BLldxRqCIrRZjt+MPECWgcht/UO9B8iyKd5YIp8r9KHOQoi/6oLZiOaw\nyGeikjRA\n=ApeP\n-----END PGP SIGNATURE-----",
        "payload": "tree dbc55e499af90845b183edd3d255d80b880bf732\nparent ec0453cd57736df33e9f50c004d88bea10428ad5\nauthor MarcoFalke <falke.marco@gmail.com> 1602151801 +0200\ncommitter MarcoFalke <falke.marco@gmail.com> 1602596298 +0200\n\ntest: Speed up wallet_resendwallettransactions test with mockscheduler RPC\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec0453cd57736df33e9f50c004d88bea10428ad5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec0453cd57736df33e9f50c004d88bea10428ad5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec0453cd57736df33e9f50c004d88bea10428ad5"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 9,
      "deletions": 7
    },
    "files": [
      {
        "sha": "353deefcc126493d803f35f823c1a6e592c9aca0",
        "filename": "test/functional/wallet_resendwallettransactions.py",
        "status": "modified",
        "additions": 9,
        "deletions": 7,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40/test/functional/wallet_resendwallettransactions.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa299ac27364bd7a59e6fb7e0c4ce476f2deec40/test/functional/wallet_resendwallettransactions.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_resendwallettransactions.py?ref=fa299ac27364bd7a59e6fb7e0c4ce476f2deec40",
        "patch": "@@ -11,6 +11,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import assert_equal\n \n+\n class ResendWalletTransactionsTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 1\n@@ -27,10 +28,10 @@ def run_test(self):\n         txid = node.sendtoaddress(node.getnewaddress(), 1)\n \n         # Wallet rebroadcast is first scheduled 1 sec after startup (see\n-        # nNextResend in ResendWalletTransactions()). Sleep for just over a\n-        # second to be certain that it has been called before the first\n+        # nNextResend in ResendWalletTransactions()). Tell scheduler to call\n+        # MaybeResendWalletTxn now to initialize nNextResend before the first\n         # setmocktime call below.\n-        time.sleep(1.1)\n+        node.mockscheduler(1)\n \n         # Can take a few seconds due to transaction trickling\n         peer_first.wait_for_broadcast([txid])\n@@ -57,15 +58,16 @@ def run_test(self):\n         twelve_hrs = 12 * 60 * 60\n         two_min = 2 * 60\n         node.setmocktime(now + twelve_hrs - two_min)\n-        time.sleep(2) # ensure enough time has passed for rebroadcast attempt to occur\n+        node.mockscheduler(1)  # Tell scheduler to call MaybeResendWalletTxn now\n         assert_equal(int(txid, 16) in peer_second.get_invs(), False)\n \n         self.log.info(\"Bump time & check that transaction is rebroadcast\")\n         # Transaction should be rebroadcast approximately 24 hours in the future,\n         # but can range from 12-36. So bump 36 hours to be sure.\n-        node.setmocktime(now + 36 * 60 * 60)\n-        # Tell scheduler to call MaybeResendWalletTxn now.\n-        node.mockscheduler(1)\n+        with node.assert_debug_log(['ResendWalletTransactions: resubmit 1 unconfirmed transactions']):\n+            node.setmocktime(now + 36 * 60 * 60)\n+            # Tell scheduler to call MaybeResendWalletTxn now.\n+            node.mockscheduler(1)\n         # Give some time for trickle to occur\n         node.setmocktime(now + 36 * 60 * 60 + 600)\n         peer_second.wait_for_broadcast([txid])"
      }
    ]
  }
]