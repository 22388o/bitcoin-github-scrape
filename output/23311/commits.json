[
  {
    "sha": "da791c7f66243080177f92ce5f38c49305da63dc",
    "node_id": "C_kwDOABII59oAKGRhNzkxYzdmNjYyNDMwODAxNzdmOTJjZTVmMzhjNDkzMDVkYTYzZGM",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-19T20:53:23Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2021-10-20T18:09:14Z"
      },
      "message": "wallet: Use PACKAGE_NAME to mention our software",
      "tree": {
        "sha": "dca91e69cb1bbee43aea34498c2ddd5ab6ad7ce0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dca91e69cb1bbee43aea34498c2ddd5ab6ad7ce0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da791c7f66243080177f92ce5f38c49305da63dc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAmFwW0oACgkQQQEIES5+\nqB97hA/9FV038Kp2oYw6XCLZ64zpRo34UQrucX75UJpBdfGi2xi7KTMgDO9IW/Qd\nkN1eHU4V2nwNk90LlrrurE8PzsK8CnbqiGTP0tHuMhmKWxT8jXvMej+r5TO+ucrF\nCtaSGZyo/NMrjW4BVK0OcYcisDQL/pmeu1GcyIHQJsYj2qG1nSQi7HCLICF7HkG/\nkB5h76e/t/4LdtgkF1KsEmvL1qq9upywGjwyagIrX0p1ZQoe36zggGGwYSdL+cQt\nwEdeKwIAWIdUmOn/Pfe9C5Y1AL1S37/lJ7jhVeWE3Gx4xNlZd84POl71yqsJd7qS\nd1vB6818iqqE9ts7t8iprWAt93M9s877eVVsulNw7bkqoqq/Nfs+P/WyAu4FXdZA\nVNi0r5oPdDERJ0tL9TREv1H+ynFRw+idoiH7eMrrai3UhtVnzxBGhmMhOWjkQeYc\nbV5FZk5PtB6WAur+Z3qPwmGpgmiplbDV+4Sl8MqRzy6GKzgfYZ7mb+VJyRByKOmN\nT4JY6Z/ZkMN57oIN0dEgvHpe1tNvpPRS4ihUt3jTc22yTGVpaD1d7kfeiJc8vUBm\nvqcZUVOTGuvablQmEaBrLnj2RaF+ETHX6IuRkcc2y3orBtClf6YtEnRM5pic+5E2\nqXs2j8NgEsxOgZNP3s34KrOEDDnT0qoiUqgg2wSBW3pQrgD57vg=\n=//dp\n-----END PGP SIGNATURE-----",
        "payload": "tree dca91e69cb1bbee43aea34498c2ddd5ab6ad7ce0\nparent 986003aff93c099c400c9285b4a2ed63f4b3f180\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1634676803 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1634753354 +0300\n\nwallet: Use PACKAGE_NAME to mention our software\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da791c7f66243080177f92ce5f38c49305da63dc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da791c7f66243080177f92ce5f38c49305da63dc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da791c7f66243080177f92ce5f38c49305da63dc/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "986003aff93c099c400c9285b4a2ed63f4b3f180",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/986003aff93c099c400c9285b4a2ed63f4b3f180",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/986003aff93c099c400c9285b4a2ed63f4b3f180"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 6,
      "deletions": 6
    },
    "files": [
      {
        "sha": "74fc10ab25728d8ebc3b57d033b957f53827f714",
        "filename": "src/wallet/bdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da791c7f66243080177f92ce5f38c49305da63dc/src/wallet/bdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da791c7f66243080177f92ce5f38c49305da63dc/src/wallet/bdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/bdb.cpp?ref=da791c7f66243080177f92ce5f38c49305da63dc",
        "patch": "@@ -132,7 +132,7 @@ bool BerkeleyEnvironment::Open(bilingual_str& err)\n     fs::path pathIn = fs::PathFromString(strPath);\n     TryCreateDirectories(pathIn);\n     if (!LockDirectory(pathIn, \".walletlock\")) {\n-        LogPrintf(\"Cannot obtain a lock on wallet directory %s. Another instance of bitcoin may be using it.\\n\", strPath);\n+        LogPrintf(\"Cannot obtain a lock on wallet directory %s. Another instance may be using it.\\n\", strPath);\n         err = strprintf(_(\"Error initializing wallet database environment %s!\"), fs::quoted(fs::PathToString(Directory())));\n         return false;\n     }"
      },
      {
        "sha": "c493b96248fb332cf2fda255bba3ee558ad925f4",
        "filename": "src/wallet/sqlite.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da791c7f66243080177f92ce5f38c49305da63dc/src/wallet/sqlite.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da791c7f66243080177f92ce5f38c49305da63dc/src/wallet/sqlite.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/sqlite.cpp?ref=da791c7f66243080177f92ce5f38c49305da63dc",
        "patch": "@@ -228,7 +228,7 @@ void SQLiteDatabase::Open()\n     // Now begin a transaction to acquire the exclusive lock. This lock won't be released until we close because of the exclusive locking mode.\n     int ret = sqlite3_exec(m_db, \"BEGIN EXCLUSIVE TRANSACTION\", nullptr, nullptr, nullptr);\n     if (ret != SQLITE_OK) {\n-        throw std::runtime_error(\"SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\\n\");\n+        throw std::runtime_error(\"SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of \" PACKAGE_NAME \"?\\n\");\n     }\n     ret = sqlite3_exec(m_db, \"COMMIT\", nullptr, nullptr, nullptr);\n     if (ret != SQLITE_OK) {"
      },
      {
        "sha": "0fc654e10a87443e692f38d8b5e0e13a543dce0a",
        "filename": "test/functional/feature_filelock.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/feature_filelock.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/feature_filelock.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/feature_filelock.py?ref=da791c7f66243080177f92ce5f38c49305da63dc",
        "patch": "@@ -35,7 +35,7 @@ def check_wallet_filelock(descriptors):\n                 wallet_dir = os.path.join(datadir, 'wallets')\n                 self.log.info(\"Check that we can't start a second bitcoind instance using the same wallet\")\n                 if descriptors:\n-                    expected_msg = \"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+                    expected_msg = f\"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of {self.config['environment']['PACKAGE_NAME']}?\"\n                 else:\n                     expected_msg = \"Error: Error initializing wallet database environment\"\n                 self.nodes[1].assert_start_raises_init_error(extra_args=[f'-walletdir={wallet_dir}', f'-wallet={wallet_name}', '-noserver'], expected_msg=expected_msg, match=ErrorMatch.PARTIAL_REGEX)"
      },
      {
        "sha": "a276d20b436a52b5d0c1634742a07d3473f0fccd",
        "filename": "test/functional/tool_wallet.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/tool_wallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/tool_wallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/tool_wallet.py?ref=da791c7f66243080177f92ce5f38c49305da63dc",
        "patch": "@@ -193,7 +193,7 @@ def test_invalid_tool_commands_and_args(self):\n         locked_dir = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\")\n         error = 'Error initializing wallet database environment \"{}\"!'.format(locked_dir)\n         if self.options.descriptors:\n-            error = \"SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+            error = f\"SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of {self.config['environment']['PACKAGE_NAME']}?\"\n         self.assert_raises_tool_error(\n             error,\n             '-wallet=' + self.default_wallet_name,"
      },
      {
        "sha": "68ca005649346b26008c841f1ab933bb48781cea",
        "filename": "test/functional/wallet_multiwallet.py",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/wallet_multiwallet.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da791c7f66243080177f92ce5f38c49305da63dc/test/functional/wallet_multiwallet.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_multiwallet.py?ref=da791c7f66243080177f92ce5f38c49305da63dc",
        "patch": "@@ -202,7 +202,7 @@ def wallet_file(name):\n         self.restart_node(0, ['-nowallet', '-walletdir=' + competing_wallet_dir])\n         self.nodes[0].createwallet(self.default_wallet_name)\n         if self.options.descriptors:\n-            exp_stderr = r\"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\"\n+            exp_stderr = f\"Error: SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of {self.config['environment']['PACKAGE_NAME']}?\"\n         else:\n             exp_stderr = r\"Error: Error initializing wallet database environment \\\"\\S+competing_walletdir\\S*\\\"!\"\n         self.nodes[1].assert_start_raises_init_error(['-walletdir=' + competing_wallet_dir], exp_stderr, match=ErrorMatch.PARTIAL_REGEX)\n@@ -303,7 +303,7 @@ def wallet_file(name):\n         # Fail to load duplicate wallets\n         path = os.path.join(self.options.tmpdir, \"node0\", \"regtest\", \"wallets\", \"w1\", \"wallet.dat\")\n         if self.options.descriptors:\n-            assert_raises_rpc_error(-4, \"Wallet file verification failed. SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another bitcoind?\", self.nodes[0].loadwallet, wallet_names[0])\n+            assert_raises_rpc_error(-4, f\"Wallet file verification failed. SQLiteDatabase: Unable to obtain an exclusive lock on the database, is it being used by another instance of {self.config['environment']['PACKAGE_NAME']}?\", self.nodes[0].loadwallet, wallet_names[0])\n         else:\n             assert_raises_rpc_error(-35, \"Wallet file verification failed. Refusing to load database. Data file '{}' is already loaded.\".format(path), self.nodes[0].loadwallet, wallet_names[0])\n "
      }
    ]
  }
]