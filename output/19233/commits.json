[
  {
    "sha": "38e33aa481cefbe12c50f344bae190c0d95fb489",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOGUzM2FhNDgxY2VmYmUxMmM1MGYzNDRiYWUxOTBjMGQ5NWZiNDg5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T08:21:40Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T12:01:09Z"
      },
      "message": "refactor: Make GetWarnings() bilingual_str aware internally",
      "tree": {
        "sha": "e07340819a06b3fb96c9e64613749f07112930dd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e07340819a06b3fb96c9e64613749f07112930dd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/38e33aa481cefbe12c50f344bae190c0d95fb489",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7gy4cACgkQQQEIES5+\nqB8wlRAAvJS9wf8U2pgOl+T1tVawoDuQ07qyCnghObDqMgdvieVS0pRSt3BxH/mt\nxwsABQIqi5j0YvUXUTEkoz3T/mGPYz4cwRDh6qajB4WAmDHP4jXqQcXhrWYrIf+f\nrscy5/jX9C8ZewfpUN4h7nznWEQknmnW+2SRztl8qAZ/4s7zLlDgfgjjQIvshVGO\nATvPv9ARnO540jNWZ+5fLjp1bs8okcF8ZJ7FjQ/8q9dothIRqEzrwn2OIYmbPZOe\nxhlexJncyd/fqRL5D82CUtu6jj6G5gA0WI7d8IIO5AZ7Zd/nhzRIlSFaHtAYEDNf\n/iA9f+i2tku8Db7Tv4rqcnykPtKB5Q2crHh7iozkZ8HKN8McdFYOdNQ32Bs5hUpV\nuJgxKH2vQmvI3RzB/204JcxrPbTMRHg3B6CqOzwoi0Cy3yq7Ti2If7faG86cm7s4\nyfuHTmr13BzaVWOegkrH9RjWqj7xGbHqftqdrPVQps9gwrx5tKEzCECUy+OgGrWH\ny4cOPJtSLZRk4DM5jK0Xxqno8vIigLnJbW2s0pMDu6S/yNOQYBnArTPxI3NHiw/k\nqrWg16OBGwDsOng0EzO8yjFBV0oxfED+ViPxkjuKb+QRpzFCvswvmp4uTy2XRRSV\nulg/OzatdV5jNV823KsR/HB5F1jdvrp11WnZk0afCHDlEqNc0i0=\n=uuKW\n-----END PGP SIGNATURE-----",
        "payload": "tree e07340819a06b3fb96c9e64613749f07112930dd\nparent 20e95313790c75631e44f9572a2f8767685c52d6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591777300 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591790469 +0300\n\nrefactor: Make GetWarnings() bilingual_str aware internally\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38e33aa481cefbe12c50f344bae190c0d95fb489",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/38e33aa481cefbe12c50f344bae190c0d95fb489",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38e33aa481cefbe12c50f344bae190c0d95fb489/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "20e95313790c75631e44f9572a2f8767685c52d6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/20e95313790c75631e44f9572a2f8767685c52d6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/20e95313790c75631e44f9572a2f8767685c52d6"
      }
    ],
    "stats": {
      "total": 33,
      "additions": 19,
      "deletions": 14
    },
    "files": [
      {
        "sha": "0c645de2ba359a09ffbf613558ba036177160f1e",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 14,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/38e33aa481cefbe12c50f344bae190c0d95fb489/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/38e33aa481cefbe12c50f344bae190c0d95fb489/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=38e33aa481cefbe12c50f344bae190c0d95fb489",
        "patch": "@@ -6,9 +6,12 @@\n #include <warnings.h>\n \n #include <sync.h>\n+#include <util/string.h>\n #include <util/system.h>\n #include <util/translation.h>\n \n+#include <vector>\n+\n static Mutex g_warnings_mutex;\n static std::string strMiscWarning GUARDED_BY(g_warnings_mutex);\n static bool fLargeWorkForkFound GUARDED_BY(g_warnings_mutex) = false;\n@@ -40,32 +43,34 @@ void SetfLargeWorkInvalidChainFound(bool flag)\n \n std::string GetWarnings(bool verbose)\n {\n-    std::string warnings_concise;\n-    std::string warnings_verbose;\n-    const std::string warning_separator = \"<hr />\";\n+    bilingual_str warnings_concise;\n+    std::vector<bilingual_str> warnings_verbose;\n \n     LOCK(g_warnings_mutex);\n \n     // Pre-release build warning\n     if (!CLIENT_VERSION_IS_RELEASE) {\n-        warnings_concise = \"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\";\n-        warnings_verbose = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\").translated;\n+        warnings_concise = _(\"This is a pre-release test build - use at your own risk - do not use for mining or merchant applications\");\n+        warnings_verbose.emplace_back(warnings_concise);\n     }\n \n     // Misc warnings like out of disk space and clock is wrong\n-    if (strMiscWarning != \"\") {\n-        warnings_concise = strMiscWarning;\n-        warnings_verbose += (warnings_verbose.empty() ? \"\" : warning_separator) + strMiscWarning;\n+    if (!strMiscWarning.empty()) {\n+        warnings_concise = Untranslated(strMiscWarning);\n+        warnings_verbose.emplace_back(warnings_concise);\n     }\n \n     if (fLargeWorkForkFound) {\n-        warnings_concise = \"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\";\n-        warnings_verbose += (warnings_verbose.empty() ? \"\" : warning_separator) + _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\").translated;\n+        warnings_concise = _(\"Warning: The network does not appear to fully agree! Some miners appear to be experiencing issues.\");\n+        warnings_verbose.emplace_back(warnings_concise);\n     } else if (fLargeWorkInvalidChainFound) {\n-        warnings_concise = \"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\";\n-        warnings_verbose += (warnings_verbose.empty() ? \"\" : warning_separator) + _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\").translated;\n+        warnings_concise = _(\"Warning: We do not appear to fully agree with our peers! You may need to upgrade, or other nodes may need to upgrade.\");\n+        warnings_verbose.emplace_back(warnings_concise);\n+    }\n+\n+    if (verbose) {\n+        return Join(warnings_verbose, Untranslated(\"<hr />\")).translated;\n     }\n \n-    if (verbose) return warnings_verbose;\n-    else return warnings_concise;\n+    return warnings_concise.original;\n }"
      }
    ]
  },
  {
    "sha": "d1ae7c0355662481a7d181a0a458284936d53eb1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMWFlN2MwMzU1NjYyNDgxYTdkMTgxYTBhNDU4Mjg0OTM2ZDUzZWIx",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T08:44:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T12:01:20Z"
      },
      "message": "Make GetWarnings() return bilingual_str",
      "tree": {
        "sha": "55d250c43634c6a224d92944e22692bcf03efeff",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/55d250c43634c6a224d92944e22692bcf03efeff"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d1ae7c0355662481a7d181a0a458284936d53eb1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7gy5AACgkQQQEIES5+\nqB8cPg//QQo2FChVnanx16b+qlJMNuFcM7b25rtoitPeB/MYTykyKn9mtjmhkY2x\nSlI/9wxLW3sXqdwWzAOSsqYvj1vu/JwJhZ/dLZQSHcpzCnsx1Emtsa8vpRmvzEQp\nCfqcB6KMnp6gnMVZ930mh8snFyOUL1JqmAkBhAyJ+ELDCxz9hfroYSM2Vi0kzHbs\nzXUonl4EfaX5Dwi4QfaHlQeiRgOaIWMykceImAIkpOKAMKGA9Mj+97Wd6NL4gNA7\nLbQH3LtFRDeXbQmeU8ifmzQZKfxcvQNZVFU6n8+raX97pp6OHDiwJgqb6fAU9FZm\nUFrJb9wbkjSyiGTnMj/Asbch6hkvchkeJKavN4X4Su01dNaWc6X5wuLFS0HtowGi\nhyMrzQnQk08engBWuy1oqMIGOTrX0ttLcZz3v/659gLcyDuuuH2tT8nDlMLN0XRe\nPnEg2b3+rk2el2StixH/WelKVFPHu6NHHrL9QZKl1a3AGY9vsaTHIKOqtFF01+Uo\ngjY6rf3YhLwE4MJG0ahwh3I7fNZ063Buhi/WD0MRkAnAYNo8oyU6yr/VSflrZ0PT\nUiiQj45NHV8s8Lof0dz1h8hOJgupHxHoCPshfT/ehut5aqsbdukODFIWMJz4LyI1\ncwqKQrrBSNiikktXSrA6OOvY8cQy94E6R2vbJ7J/YV6JL/x4cqA=\n=8h8F\n-----END PGP SIGNATURE-----",
        "payload": "tree 55d250c43634c6a224d92944e22692bcf03efeff\nparent 38e33aa481cefbe12c50f344bae190c0d95fb489\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591778688 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591790480 +0300\n\nMake GetWarnings() return bilingual_str\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1ae7c0355662481a7d181a0a458284936d53eb1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d1ae7c0355662481a7d181a0a458284936d53eb1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1ae7c0355662481a7d181a0a458284936d53eb1/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "38e33aa481cefbe12c50f344bae190c0d95fb489",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/38e33aa481cefbe12c50f344bae190c0d95fb489",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/38e33aa481cefbe12c50f344bae190c0d95fb489"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 22,
      "deletions": 15
    },
    "files": [
      {
        "sha": "d420788dbe78143713a19145b2b2f01649a55483",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -71,7 +71,7 @@ class NodeImpl : public Node\n     std::string getNetwork() override { return Params().NetworkIDString(); }\n     void initLogging() override { InitLogging(); }\n     void initParameterInteraction() override { InitParameterInteraction(); }\n-    std::string getWarnings() override { return GetWarnings(true); }\n+    bilingual_str getWarnings() override { return GetWarnings(true); }\n     uint32_t getLogCategories() override { return LogInstance().GetCategoryMask(); }\n     bool baseInitialize() override\n     {"
      },
      {
        "sha": "877a40568f8765f81fa0b9d6ea559ef01e32b40b",
        "filename": "src/interfaces/node.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/interfaces/node.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/interfaces/node.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.h?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -10,6 +10,7 @@\n #include <net_types.h>  // For banmap_t\n #include <netaddress.h> // For Network\n #include <support/allocators/secure.h> // For SecureString\n+#include <util/translation.h>\n \n #include <functional>\n #include <memory>\n@@ -81,7 +82,7 @@ class Node\n     virtual void initParameterInteraction() = 0;\n \n     //! Get warnings.\n-    virtual std::string getWarnings() = 0;\n+    virtual bilingual_str getWarnings() = 0;\n \n     // Get log flags.\n     virtual uint32_t getLogCategories() = 0;"
      },
      {
        "sha": "e0b9345a32942ffb618b03b8da7126e81840ea46",
        "filename": "src/qt/bitcoin.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/qt/bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/qt/bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -155,7 +155,7 @@ BitcoinCore::BitcoinCore(interfaces::Node& node) :\n void BitcoinCore::handleRunawayException(const std::exception *e)\n {\n     PrintExceptionContinue(e, \"Runaway exception\");\n-    Q_EMIT runawayException(QString::fromStdString(m_node.getWarnings()));\n+    Q_EMIT runawayException(QString::fromStdString(m_node.getWarnings().translated));\n }\n \n void BitcoinCore::initialize()\n@@ -599,10 +599,10 @@ int GuiMain(int argc, char* argv[])\n         }\n     } catch (const std::exception& e) {\n         PrintExceptionContinue(&e, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(node->getWarnings()));\n+        app.handleRunawayException(QString::fromStdString(node->getWarnings().translated));\n     } catch (...) {\n         PrintExceptionContinue(nullptr, \"Runaway exception\");\n-        app.handleRunawayException(QString::fromStdString(node->getWarnings()));\n+        app.handleRunawayException(QString::fromStdString(node->getWarnings().translated));\n     }\n     return rv;\n }"
      },
      {
        "sha": "7822d4c5f3a3c4901ac51908fd419038805f08f5",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -166,7 +166,7 @@ enum BlockSource ClientModel::getBlockSource() const\n \n QString ClientModel::getStatusBarWarnings() const\n {\n-    return QString::fromStdString(m_node.getWarnings());\n+    return QString::fromStdString(m_node.getWarnings().translated);\n }\n \n OptionsModel *ClientModel::getOptionsModel()"
      },
      {
        "sha": "8252af3ee60f2120e8a72434c058d8a71feab42a",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -32,6 +32,7 @@\n #include <util/ref.h>\n #include <util/strencodings.h>\n #include <util/system.h>\n+#include <util/translation.h>\n #include <validation.h>\n #include <validationinterface.h>\n #include <warnings.h>\n@@ -1278,7 +1279,7 @@ UniValue getblockchaininfo(const JSONRPCRequest& request)\n     BIP9SoftForkDescPushBack(softforks, \"testdummy\", consensusParams, Consensus::DEPLOYMENT_TESTDUMMY);\n     obj.pushKV(\"softforks\",             softforks);\n \n-    obj.pushKV(\"warnings\", GetWarnings(false));\n+    obj.pushKV(\"warnings\", GetWarnings(false).original);\n     return obj;\n }\n "
      },
      {
        "sha": "a2de175c85e786877c2c6da98c93ee0cfb8e2059",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -29,6 +29,7 @@\n #include <util/strencodings.h>\n #include <util/string.h>\n #include <util/system.h>\n+#include <util/translation.h>\n #include <validation.h>\n #include <validationinterface.h>\n #include <versionbitsinfo.h>\n@@ -416,7 +417,7 @@ static UniValue getmininginfo(const JSONRPCRequest& request)\n     obj.pushKV(\"networkhashps\",    getnetworkhashps(request));\n     obj.pushKV(\"pooledtx\",         (uint64_t)mempool.size());\n     obj.pushKV(\"chain\",            Params().NetworkIDString());\n-    obj.pushKV(\"warnings\",         GetWarnings(false));\n+    obj.pushKV(\"warnings\",         GetWarnings(false).original);\n     return obj;\n }\n "
      },
      {
        "sha": "df1e0fe623daa668dec1ebb869727003b95aa57a",
        "filename": "src/rpc/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/rpc/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/net.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -22,6 +22,7 @@\n #include <util/strencodings.h>\n #include <util/string.h>\n #include <util/system.h>\n+#include <util/translation.h>\n #include <validation.h>\n #include <version.h>\n #include <warnings.h>\n@@ -548,7 +549,7 @@ static UniValue getnetworkinfo(const JSONRPCRequest& request)\n         }\n     }\n     obj.pushKV(\"localaddresses\", localAddresses);\n-    obj.pushKV(\"warnings\",       GetWarnings(false));\n+    obj.pushKV(\"warnings\",       GetWarnings(false).original);\n     return obj;\n }\n "
      },
      {
        "sha": "1dcee23bbbc61186e1aa0bc6b0e82cbb928345b8",
        "filename": "src/test/timedata_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/test/timedata_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/test/timedata_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/timedata_tests.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -9,6 +9,7 @@\n #include <test/util/setup_common.h>\n #include <timedata.h>\n #include <util/string.h>\n+#include <util/translation.h>\n #include <warnings.h>\n \n #include <string>\n@@ -66,7 +67,7 @@ BOOST_AUTO_TEST_CASE(addtimedata)\n         MultiAddTimeData(1, DEFAULT_MAX_TIME_ADJUSTMENT + 1); //filter size 5\n     }\n \n-    BOOST_CHECK(GetWarnings(true).find(\"clock is wrong\") != std::string::npos);\n+    BOOST_CHECK(GetWarnings(true).original.find(\"clock is wrong\") != std::string::npos);\n \n     // nTimeOffset is not changed if the median of offsets exceeds DEFAULT_MAX_TIME_ADJUSTMENT\n     BOOST_CHECK_EQUAL(GetTimeOffset(), 0);"
      },
      {
        "sha": "1dd7f63575ab74fd03cbe8ec158269f9ecb9371a",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -41,7 +41,7 @@ void SetfLargeWorkInvalidChainFound(bool flag)\n     fLargeWorkInvalidChainFound = flag;\n }\n \n-std::string GetWarnings(bool verbose)\n+bilingual_str GetWarnings(bool verbose)\n {\n     bilingual_str warnings_concise;\n     std::vector<bilingual_str> warnings_verbose;\n@@ -69,8 +69,8 @@ std::string GetWarnings(bool verbose)\n     }\n \n     if (verbose) {\n-        return Join(warnings_verbose, Untranslated(\"<hr />\")).translated;\n+        return Join(warnings_verbose, Untranslated(\"<hr />\"));\n     }\n \n-    return warnings_concise.original;\n+    return warnings_concise;\n }"
      },
      {
        "sha": "8897ace9eb6a28bb108e112524557fcbe011cce1",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 4,
        "deletions": 2,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d1ae7c0355662481a7d181a0a458284936d53eb1/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d1ae7c0355662481a7d181a0a458284936d53eb1/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=d1ae7c0355662481a7d181a0a458284936d53eb1",
        "patch": "@@ -8,16 +8,18 @@\n \n #include <string>\n \n+struct bilingual_str;\n+\n void SetMiscWarning(const std::string& strWarning);\n void SetfLargeWorkForkFound(bool flag);\n bool GetfLargeWorkForkFound();\n void SetfLargeWorkInvalidChainFound(bool flag);\n /** Format a string that describes several potential problems detected by the core.\n  * @param[in] verbose bool\n- * - if true, get all warnings, translated (where possible), separated by <hr />\n+ * - if true, get all warnings separated by <hr />\n  * - if false, get the most important warning\n  * @returns the warning string\n  */\n-std::string GetWarnings(bool verbose);\n+bilingual_str GetWarnings(bool verbose);\n \n #endif //  BITCOIN_WARNINGS_H"
      }
    ]
  },
  {
    "sha": "d49612f98add29066817b7c808b76c2d728948e5",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkNDk2MTJmOThhZGQyOTA2NjgxN2I3YzgwOGI3NmMyZDcyODk0OGU1",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T09:14:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-06-10T12:01:20Z"
      },
      "message": "Make SetMiscWarning() accept bilingual_str argument",
      "tree": {
        "sha": "63b71a0f69b6c829b177ffd4de5d8352b1b462e3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63b71a0f69b6c829b177ffd4de5d8352b1b462e3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d49612f98add29066817b7c808b76c2d728948e5",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl7gy5AACgkQQQEIES5+\nqB9Kiw/+KiPiG4esoG0HrQeZxZqaUodk1fvqzj8WW91oh3aYIU5hW2Pdbcht7DoI\nQ8MtUjjZyzBiVemqICXXtmMBZPz2fqjLv8W5pH0d3rjipZMDq3aLmLAgCoDwFzS3\nzKArzm8U3+1sdOieUFABRj9iyxazpzPj4Z0D6v3NtD1B8XRUo+VJzoMSaS0WGm0I\nqBX8a+BgROKoD4b60G96GN5pDuFXv4KFyvxk7X1GnR0ZQVmm+Vn4lwvVBmhWXlHS\n+2Yq51bCijlaE1KTKqd1uNsG61zzVbA1OZ7LW42M099cD9TQJ2JBO5gZV/4Ac307\nz5VY2JqRFrz2YpWK9kqHEVaP0m48zpfOcoBbfy6OgyRckGQI44TviVvlcl3xARCV\njUdwuH9iZi/m0qrcbBycKsOOP1tzzNOTCZWFGe8AYrZ0EBgkXPikSjCCCrP0Dqqg\npLzjcbcdq+yq0VNNldphpt11KHrKb+E8RZci8cY+FwTO8LRtlNNQ0XmoO0KWMgI1\nSfw6qCJsdKEU6U2OS0A+I5sco6+3M1KyJOXtfot9tiUyjZ3sv9BSArmA3GeeWFVc\nLeGgmh4eAw5DqbyUKpal6/yeKnSgDzdH5IwJWRDGsip/ndIC0mJ721Yj1wcC18Of\nXh5oR3PbrmbUEoIPIn5sZNHvuoy8tD3nWTQhFfwOzvWwaa/xZCw=\n=k5K5\n-----END PGP SIGNATURE-----",
        "payload": "tree 63b71a0f69b6c829b177ffd4de5d8352b1b462e3\nparent d1ae7c0355662481a7d181a0a458284936d53eb1\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591780472 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1591790480 +0300\n\nMake SetMiscWarning() accept bilingual_str argument\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d49612f98add29066817b7c808b76c2d728948e5",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d49612f98add29066817b7c808b76c2d728948e5",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d49612f98add29066817b7c808b76c2d728948e5/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d1ae7c0355662481a7d181a0a458284936d53eb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d1ae7c0355662481a7d181a0a458284936d53eb1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d1ae7c0355662481a7d181a0a458284936d53eb1"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "1d09f2e577bb865037548632287c10a7fd868c8e",
        "filename": "src/index/base.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d49612f98add29066817b7c808b76c2d728948e5/src/index/base.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d49612f98add29066817b7c808b76c2d728948e5/src/index/base.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/index/base.cpp?ref=d49612f98add29066817b7c808b76c2d728948e5",
        "patch": "@@ -21,7 +21,7 @@ template<typename... Args>\n static void FatalError(const char* fmt, const Args&... args)\n {\n     std::string strMessage = tfm::format(fmt, args...);\n-    SetMiscWarning(strMessage);\n+    SetMiscWarning(Untranslated(strMessage));\n     LogPrintf(\"*** %s\\n\", strMessage);\n     uiInterface.ThreadSafeMessageBox(\n         Untranslated(\"Error: A fatal internal error occurred, see debug.log for details\"),"
      },
      {
        "sha": "16dac24a486f70f6dc14a5650d91212f305470b6",
        "filename": "src/timedata.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d49612f98add29066817b7c808b76c2d728948e5/src/timedata.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d49612f98add29066817b7c808b76c2d728948e5/src/timedata.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/timedata.cpp?ref=d49612f98add29066817b7c808b76c2d728948e5",
        "patch": "@@ -95,7 +95,7 @@ void AddTimeData(const CNetAddr& ip, int64_t nOffsetSample)\n                 if (!fMatch) {\n                     fDone = true;\n                     bilingual_str strMessage = strprintf(_(\"Please check that your computer's date and time are correct! If your clock is wrong, %s will not work properly.\"), PACKAGE_NAME);\n-                    SetMiscWarning(strMessage.translated);\n+                    SetMiscWarning(strMessage);\n                     uiInterface.ThreadSafeMessageBox(strMessage, \"\", CClientUIInterface::MSG_WARNING);\n                 }\n             }"
      },
      {
        "sha": "cbe89443b829df9b1a56dd9b781e41cc42c4bf35",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d49612f98add29066817b7c808b76c2d728948e5/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d49612f98add29066817b7c808b76c2d728948e5/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=d49612f98add29066817b7c808b76c2d728948e5",
        "patch": "@@ -1666,7 +1666,7 @@ bool UndoReadFromDisk(CBlockUndo& blockundo, const CBlockIndex* pindex)\n // TODO: AbortNode() should take bilingual_str userMessage parameter.\n static bool AbortNode(const std::string& strMessage, const std::string& userMessage = \"\", unsigned int prefix = 0)\n {\n-    SetMiscWarning(strMessage);\n+    SetMiscWarning(Untranslated(strMessage));\n     LogPrintf(\"*** %s\\n\", strMessage);\n     if (!userMessage.empty()) {\n         uiInterface.ThreadSafeMessageBox(Untranslated(userMessage), \"\", CClientUIInterface::MSG_ERROR | prefix);\n@@ -2429,20 +2429,20 @@ void CChainState::PruneAndFlush() {\n     }\n }\n \n-static void DoWarning(const std::string& strWarning)\n+static void DoWarning(const bilingual_str& warning)\n {\n     static bool fWarned = false;\n-    SetMiscWarning(strWarning);\n+    SetMiscWarning(warning);\n     if (!fWarned) {\n-        AlertNotify(strWarning);\n+        AlertNotify(warning.original);\n         fWarned = true;\n     }\n }\n \n /** Private helper function that concatenates warning messages. */\n-static void AppendWarning(std::string& res, const std::string& warn)\n+static void AppendWarning(bilingual_str& res, const bilingual_str& warn)\n {\n-    if (!res.empty()) res += \", \";\n+    if (!res.empty()) res += Untranslated(\", \");\n     res += warn;\n }\n \n@@ -2459,7 +2459,7 @@ void static UpdateTip(const CBlockIndex* pindexNew, const CChainParams& chainPar\n         g_best_block_cv.notify_all();\n     }\n \n-    std::string warningMessages;\n+    bilingual_str warning_messages;\n     if (!::ChainstateActive().IsInitialBlockDownload())\n     {\n         int nUpgraded = 0;\n@@ -2468,11 +2468,11 @@ void static UpdateTip(const CBlockIndex* pindexNew, const CChainParams& chainPar\n             WarningBitsConditionChecker checker(bit);\n             ThresholdState state = checker.GetStateFor(pindex, chainParams.GetConsensus(), warningcache[bit]);\n             if (state == ThresholdState::ACTIVE || state == ThresholdState::LOCKED_IN) {\n-                const std::string strWarning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\").translated, bit);\n+                const bilingual_str warning = strprintf(_(\"Warning: unknown new rules activated (versionbit %i)\"), bit);\n                 if (state == ThresholdState::ACTIVE) {\n-                    DoWarning(strWarning);\n+                    DoWarning(warning);\n                 } else {\n-                    AppendWarning(warningMessages, strWarning);\n+                    AppendWarning(warning_messages, warning);\n                 }\n             }\n         }\n@@ -2485,14 +2485,14 @@ void static UpdateTip(const CBlockIndex* pindexNew, const CChainParams& chainPar\n             pindex = pindex->pprev;\n         }\n         if (nUpgraded > 0)\n-            AppendWarning(warningMessages, strprintf(_(\"%d of last 100 blocks have unexpected version\").translated, nUpgraded));\n+            AppendWarning(warning_messages, strprintf(_(\"%d of last 100 blocks have unexpected version\"), nUpgraded));\n     }\n     LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%.8g tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\", __func__,\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight, pindexNew->nVersion,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), (unsigned long)pindexNew->nChainTx,\n       FormatISO8601DateTime(pindexNew->GetBlockTime()),\n       GuessVerificationProgress(chainParams.TxData(), pindexNew), ::ChainstateActive().CoinsTip().DynamicMemoryUsage() * (1.0 / (1<<20)), ::ChainstateActive().CoinsTip().GetCacheSize(),\n-      !warningMessages.empty() ? strprintf(\" warning='%s'\", warningMessages) : \"\");\n+      !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages.original) : \"\");\n \n }\n "
      },
      {
        "sha": "501bf7e637e958eb92d0bb0a963735730df5878a",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d49612f98add29066817b7c808b76c2d728948e5/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d49612f98add29066817b7c808b76c2d728948e5/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=d49612f98add29066817b7c808b76c2d728948e5",
        "patch": "@@ -13,14 +13,14 @@\n #include <vector>\n \n static Mutex g_warnings_mutex;\n-static std::string strMiscWarning GUARDED_BY(g_warnings_mutex);\n+static bilingual_str g_misc_warnings GUARDED_BY(g_warnings_mutex);\n static bool fLargeWorkForkFound GUARDED_BY(g_warnings_mutex) = false;\n static bool fLargeWorkInvalidChainFound GUARDED_BY(g_warnings_mutex) = false;\n \n-void SetMiscWarning(const std::string& strWarning)\n+void SetMiscWarning(const bilingual_str& warning)\n {\n     LOCK(g_warnings_mutex);\n-    strMiscWarning = strWarning;\n+    g_misc_warnings = warning;\n }\n \n void SetfLargeWorkForkFound(bool flag)\n@@ -55,8 +55,8 @@ bilingual_str GetWarnings(bool verbose)\n     }\n \n     // Misc warnings like out of disk space and clock is wrong\n-    if (!strMiscWarning.empty()) {\n-        warnings_concise = Untranslated(strMiscWarning);\n+    if (!g_misc_warnings.empty()) {\n+        warnings_concise = g_misc_warnings;\n         warnings_verbose.emplace_back(warnings_concise);\n     }\n "
      },
      {
        "sha": "28546eb753ba54cfb07b268818f6d2a9954ff0bd",
        "filename": "src/warnings.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d49612f98add29066817b7c808b76c2d728948e5/src/warnings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d49612f98add29066817b7c808b76c2d728948e5/src/warnings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.h?ref=d49612f98add29066817b7c808b76c2d728948e5",
        "patch": "@@ -10,7 +10,7 @@\n \n struct bilingual_str;\n \n-void SetMiscWarning(const std::string& strWarning);\n+void SetMiscWarning(const bilingual_str& warning);\n void SetfLargeWorkForkFound(bool flag);\n bool GetfLargeWorkForkFound();\n void SetfLargeWorkInvalidChainFound(bool flag);"
      }
    ]
  }
]