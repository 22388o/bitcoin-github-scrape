PierreRochard,2018-09-04T14:38:48Z,~~Would it be better if the test mocked the `g_dbenvs` in db.cpp? I wasn't able to figure out how to do that.~~,https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-418391856,418391856,
DrahtBot,2018-09-04T18:14:50Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #11911 (Free BerkeleyEnvironment instances when not in use by ryanofsky)\n* #10973 (Refactor: separate wallet from node by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged fi",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-418466851,418466851,
PierreRochard,2018-09-04T21:30:19Z,~~I'm unable to reproduce the CI failures locally for debugging and the logs don't seem to provide enough information to pinpoint the problem~~,https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-418524628,418524628,
ken2812221,2018-09-05T09:58:39Z,"> I'm unable to reproduce the CI failures locally for debugging and the logs don't seem to provide enough information to pinpoint the problem\n\nYou can take a look at appveyor CI. That might be helpful.\n```\nget_fileid: file ID not set\nRunning 315 test cases...\nunknown location(0): fatal error: in ""psbt_wallet_tests/psbt_updater_test"": class std::runtime_error: BerkeleyBatch: Can't open ",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-418673225,418673225,
PierreRochard,2018-09-06T02:32:24Z,"~~@promag I moved the modification to `walletutil.cpp`, excellent suggestion, thank you!~~\n\nForce push diff: https://github.com/PierreRochard/bitcoin/commit/5a28a99d2887be85d02cb9a9a062f6bde96f56a2",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-418943875,418943875,
PierreRochard,2018-09-11T01:33:13Z,"Took up @promag's excellent suggestion to clean up the path with `fs::canonical`. Added unit tests for the `walletdir` interaction in wallet init. If there are other (cross-platform) test cases you would like to see, I'm happy to add them. The commits have completely changed, no value in a force push diff.",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-420115885,420115885,
PierreRochard,2018-09-11T19:19:08Z,"~~Appveyor is failing, I rebooted into my Windows environment and see a memory leak is being detected, I'm debugging it now.~~\n",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-420390645,420390645,
PierreRochard,2018-09-12T02:05:17Z,"I replaced the `wallet/init.cpp` include and removed extraneous whitespace, force push diff here https://github.com/bitcoin/bitcoin/commit/c8b2076d6206ac8fe349c08a97611189d2e729a8\n~~I'm still working on the Windows memory leak issue.~~",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-420487065,420487065,
PierreRochard,2018-09-13T01:12:15Z,"I solved the problem on my local Windows machine, the fixture destructor was removing the current working directory - apparently this is ok on posix but not on Windows, force push diff: https://github.com/bitcoin/bitcoin/commit/6e2616deffd815051c1ac2e826bd55850e2898f9\n",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-420849245,420849245,
ken2812221,2018-09-13T18:06:31Z,The unit tests is spamming error messages while running test_bitcoin. Would it confuse the user?,https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421099412,421099412,
PierreRochard,2018-09-13T18:49:44Z,"> The unit tests is spamming error messages while running test_bitcoin. Would it confuse the user?\n\nIt definitely could, I've actually been researching how to properly mock `CClientUIInterface`. A shortcut would be to create a unit-test version of `noui_connect` but I was struggling on how to capture the output to check it in the unit test. If you have ideas I'm interested, whether they fit in",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421112726,421112726,
ken2812221,2018-09-15T06:03:47Z,"@PierreRochard Haven't tested, but can we use `gArgs.SoftSetBoolArg(""-printtoconsole"", false);`?",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421534088,421534088,
PierreRochard,2018-09-15T23:01:26Z,Unfortunately that didn't work. In `noui.cpp` the `noui_ThreadSafeMessageBox` function uses `fprintf` for output,https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421650082,421650082,
ken2812221,2018-09-16T04:48:37Z,IMO you could just replace it with `LogPrintf`. Maybe ask for other dev's opinion,https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421693577,421693577,
PierreRochard,2018-09-16T11:42:41Z,"I just looked into opening a PR for a simple replace of `fprintf` with `LogPrintf` but I think it would have to be a larger refactoring, as `stderr` output is necessary in some cases, for example when the debug log file can't be opened:\n```\nAssertionError: [node 0] Expected message ""Error: Could not open debug log file \S+$"" does not fully match stderr:\n""""\n```",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-421751045,421751045,
laanwj,2018-10-18T08:58:40Z,"utACK 2d471636eb9160ab51b08e491e3f003f57adbc36\nthanks for finding and addressing this bug (and adding tests too !)",https://github.com/bitcoin/bitcoin/pull/14146#issuecomment-430931028,430931028,
promag,2018-09-04T23:46:18Z,"nit, remove space after `++i`.",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215099225,215099225,src/wallet/test/db_tests.cpp
promag,2018-09-04T23:48:08Z,Use `boost::filesystem::path::preferred_separator`?,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215099539,215099539,src/wallet/test/db_tests.cpp
ken2812221,2018-09-04T23:55:46Z,"I would prefer the code down there. It might cause an infinity loop on Unix if the wallet filename is `wallet\`\n```cpp\nwhile (fs::detail::is_directory_separator(env_directory.string().back())) {\n    env_directory.remove_trailing_separator();\n}\n```",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215100743,215100743,src/wallet/db.cpp
fanquake,2018-09-05T01:28:36Z,"@promag Not sure if you're aware, but anything `boost::filesystem::` should use `fs::` as is already being done here. See https://github.com/bitcoin/bitcoin/blob/master/src/fs.h.",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215113147,215113147,src/wallet/test/db_tests.cpp
promag,2018-09-05T10:04:37Z,"Yes, just wanted give full type for reference.",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215208737,215208737,src/wallet/test/db_tests.cpp
PierreRochard,2018-09-06T02:29:20Z,"Thank you, that's much cleaner, fixed!",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215479142,215479142,src/wallet/db.cpp
PierreRochard,2018-09-06T02:29:28Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215479162,215479162,src/wallet/test/db_tests.cpp
PierreRochard,2018-09-06T02:30:18Z,"Thank you, that's great, fixed!",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215479265,215479265,src/wallet/test/db_tests.cpp
promag,2018-09-06T14:33:42Z,"I think you could add above:\n```cpp\nif (gArgs.IsArgSet(""-walletdir"")) {\n    path = gArgs.GetArg(""-walletdir"", """");\n    boost::system::error_code error;\n    path = fs::canonical(path, error);\n    if (error || !fs::is_directory(path)) {\n        ...\n```\n`fs::canonical` checks if it exists and also cleans the path. For instance, locally calling `canonical(""/Users/promag/.///.//"")` gi",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215649285,215649285,src/wallet/walletutil.cpp
promag,2018-09-06T14:35:29Z,I would add a couple of cases instead.,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215649928,215649928,src/wallet/test/walletutil_tests.cpp
PierreRochard,2018-09-06T15:42:44Z,"Ah `fs::canonical` is even better! What do you think about me adding this to `WalletInit::Verify` [here](https://github.com/bitcoin/bitcoin/blob/0.17/src/wallet/init.cpp#L180-L189) and then `gArgs.ForceSetArg` with the new clean path? \nThat way we keep the error checking in one place and the path gets cleaned up once, rather than every time `GetWalletDir` is called.",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215676604,215676604,src/wallet/walletutil.cpp
promag,2018-09-06T15:49:20Z,"Sounds good, you could replace `fs::exists` with `fs::canonical` in https://github.com/bitcoin/bitcoin/blob/465a583f9dcc2383eb20bbb98bffa66fe82f2cde/src/wallet/init.cpp#L182",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215679095,215679095,src/wallet/walletutil.cpp
PierreRochard,2018-09-06T16:28:51Z,"The nuance with that approach is that we want to avoid transforming a relative file path to an absolute one, per @ryanofsky's commit message there: \n\n> Specifying paths relative to the current working directory in a daemon process can be dangerous, because files can fail to be located even if the configuration doesn't change, but the daemon is started up differently.\n\nI'm thinking to first",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r215692983,215692983,src/wallet/walletutil.cpp
ken2812221,2018-09-11T12:35:51Z,Why this include cpp file?,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216651577,216651577,src/wallet/test/init_tests.cpp
PierreRochard,2018-09-11T19:12:35Z,"The `WalletInit` class was moved from the header file to the cpp file in this pull request https://github.com/bitcoin/bitcoin/pull/12836\n\nShould I move it back or is there a bigger picture architectural issue that I'm not seeing? ",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216788025,216788025,src/wallet/test/init_tests.cpp
promag,2018-09-11T19:15:50Z,Include `src/walletinitinterface.h`?,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216789051,216789051,src/wallet/test/init_tests.cpp
promag,2018-09-11T19:19:16Z,Remove 2nd empty line.,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216790025,216790025,src/wallet/test/init_test_fixture.cpp
PierreRochard,2018-09-11T19:44:52Z,"🤔 how would I create an instance of the `WalletInit` class to test its implementation of `Verify`?\n\n(I'll take ""read this book / article"" as an answer if I'm out of my depth here haha)",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216797567,216797567,src/wallet/test/init_tests.cpp
ken2812221,2018-09-11T19:50:59Z,The program will find the implementation by C++ virtual method table?,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216799336,216799336,src/wallet/test/init_tests.cpp
promag,2018-09-11T19:59:41Z,There is already an instance. Just replace the include.,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216802015,216802015,src/wallet/test/init_tests.cpp
PierreRochard,2018-09-12T02:01:38Z,"Ah ok, fixed, I added `init.h` as well as it has the global instance in it",https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216876994,216876994,src/wallet/test/init_tests.cpp
PierreRochard,2018-09-12T02:01:46Z,Fixed,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r216877013,216877013,src/wallet/test/init_test_fixture.cpp
practicalswift,2018-09-23T07:51:04Z,Please sort includes and make the grouping consistent to how it is done in other files.,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r219691093,219691093,src/wallet/test/init_tests.cpp
practicalswift,2018-09-23T07:51:38Z,Nit: Extra newline.,https://github.com/bitcoin/bitcoin/pull/14146#discussion_r219691104,219691104,src/wallet/test/init_test_fixture.h
