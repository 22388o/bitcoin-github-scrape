DrahtBot,2018-09-28T06:09:47Z,<!--32850dd3fdea838b4049e64f46995ea2-->\n| Coverage  | Change ([pull 14268](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/14268/total.coverage/index.html)) | Reference ([master](https://drahtbot.github.io/reports/coverage/bitcoin/bitcoin/master/total.coverage/index.html))   |\n|-----------|-------------------------|--------------------|\n| Lines     | +0.0099 %            | 87.0361 %,https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-425332069,425332069,
achow101,2018-10-09T01:18:11Z,utACK 985892e5aa75b76f71a354c8d835d7729048cccc,https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-428027875,428027875,
meshcollider,2018-11-10T06:45:08Z,"utACK https://github.com/bitcoin/bitcoin/pull/14268/commits/985892e5aa75b76f71a354c8d835d7729048cccc\n\nStyle-nit: the developer notes say ""No indentation for `public`/`protected`/`private` or for `namespace`"", so you might want to change the MallocedDbt class to fit that.\n\nFirst commit is unrelated as promag said, but a nice cleanup, the last use of `setRange` was in `ListAccountCreditDebit",https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-437562962,437562962,
Empact,2018-11-12T23:42:46Z,"Ok just pushed some significant changes:\n* Now called `SafeDbt`, and applied in all cases where `memory_cleanse` was used with `Dbt`\n* No longer in an anonymous namespace as that is a violation of [DCL59-CPP](https://wiki.sei.cmu.edu/confluence/display/cplusplus/DCL59-CPP.+Do+not+define+an+unnamed+namespace+in+a+header+file), instead nest it inside `BerkeleyBatch`, as all uses are therein.\n*",https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-438072311,438072311,
Empact,2018-11-13T04:43:17Z,Appveyor failure looks unrelated.,https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-438133984,438133984,
ken2812221,2018-11-13T05:56:56Z,utACK 1a9f9f7e5e2e73fb832f5b96ad7e9e57954f3f3c,https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-438146837,438146837,
laanwj,2018-11-23T07:13:45Z,utACK 1a9f9f7e5e2e73fb832f5b96ad7e9e57954f3f3c,https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-441168408,441168408,
Empact,2018-11-25T02:51:41Z,"Added another commit:\n* Make `SafeDbt` `DB_DBT_MALLOC` on default initialization\n* Ran `clang-format`\n\nSeparate for easier review, can squash.",https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-441411254,441411254,
Empact,2018-11-25T04:41:02Z,"Appveyor failure looks unrelated: ""ConnectionAbortedError: [WinError 10053] An established connection was aborted by the software in your host machine""",https://github.com/bitcoin/bitcoin/pull/14268#issuecomment-441414943,441414943,
practicalswift,2018-09-20T05:22:33Z,Perhaps add a comment here explaining why the explicit `free` is needed and where the matching allocation takes place?,https://github.com/bitcoin/bitcoin/pull/14268#discussion_r219037414,219037414,src/wallet/db.h
practicalswift,2018-09-22T19:02:09Z,"```\n2018-09-22 20:42:07 cpplint(pr=14268): src/wallet/db.h:204:  Anonymous namespace should be terminated with ""// namespace""  [readability/namespace] [5]\n```",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r219679697,219679697,src/wallet/db.h
l2a5b1,2018-09-24T08:36:35Z,"nit: You can drop the `private` access modifier. `m_dbt` is implicitly declared private, because private is the default class access level. ",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r219761571,219761571,src/wallet/db.h
promag,2018-10-01T17:57:36Z,`final`,https://github.com/bitcoin/bitcoin/pull/14268#discussion_r221700881,221700881,src/wallet/db.h
promag,2018-10-01T18:07:33Z,"nit, IMO class name could be improved, as it also calls `memory_cleanse`. Maybe `SafeDbt` â€” I'm sure there is a better name ðŸ˜›",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r221704044,221704044,src/wallet/db.h
practicalswift,2018-11-20T06:56:45Z,`const`? :-),https://github.com/bitcoin/bitcoin/pull/14268#discussion_r234886882,234886882,src/wallet/db.cpp
laanwj,2018-11-23T07:11:51Z,"it's returning a mutable pointer to the internal structure, I don't think it'd make sense to make the method const (unless you mean it should return a `const*` pointer too, but that's likely not good enough for the BDB functions)",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r235857432,235857432,src/wallet/db.cpp
laanwj,2018-11-23T07:17:53Z,"This changes behavior: in the case of `Write` it was also cleansing the dtabase key, now it no longer is.\nNot sure if this is necessary, I don't think the database keys ever contain sensitive information, but it should be noted.",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r235858119,235858119,src/wallet/db.cpp
Empact,2018-11-25T02:28:43Z,"I believe it is cleansing the key - if you're referring to the cleansing here:\nhttps://github.com/bitcoin/bitcoin/pull/14268/files#diff-c557c8e6d496041acccfd8ac4e3db625L257\n\nThen the key and value are separate `SafeDbt` objects, with each managing/cleansing its own data:\nhttps://github.com/bitcoin/bitcoin/pull/14268/files#diff-c557c8e6d496041acccfd8ac4e3db625R258\nhttps://github.com/bitco",https://github.com/bitcoin/bitcoin/pull/14268#discussion_r236058793,236058793,src/wallet/db.cpp
