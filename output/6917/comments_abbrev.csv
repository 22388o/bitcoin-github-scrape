sipa,2015-10-30T21:45:49Z,Please submit to https://github.com/bitcoin/leveldb first?\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152658388,152658388,
laanwj,2015-10-30T21:51:45Z,"Thought about that, but I think it gets more exposure and testing here.\n(obviously it should still go there when accepted...)\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152659330,152659330,
sipa,2015-10-30T22:06:44Z,@laanwj Sure!\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152661610,152661610,
jgarzik,2015-10-30T22:31:51Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152665897,152665897,
dcousens,2015-10-31T00:24:24Z,ut ACK\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152679209,152679209,
sipa,2015-10-31T04:27:28Z,We should probably benchmark a reindex with this?\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152691649,152691649,
gmaxwell,2015-10-31T04:38:55Z,"@sipa Yes, and if its much slower it's reason to figure out whats strictly required for the syncs. And if it's not, we could call it done.  Reindex time right now is ruined by signature validation, if someone benchmarks that they must be sure to bypass.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152693784,152693784,
laanwj,2015-10-31T07:40:21Z,"This is the same as how it works on POSIX already, directly converted to WIN32 API. By all means, benchmark, but IMO we should apply this nevertheless (if it has no new bugs). We should first get rid of stability issues and only then worry about optimization. This will likely save many people from having to do a reindex _at all_.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152708802,152708802,
MarcoFalke,2015-10-31T08:45:27Z,Concept ACK\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152715772,152715772,
laanwj,2015-10-31T09:12:00Z,"Last commit is optional and potentially risky. From what I understand,  leveldb's WritableFiles are [supposed to do their own caching](https://github.com/bitcoin/bitcoin/blob/master/src/leveldb/include/leveldb/env.h#L209), and `flush()` is supposed to flush this cache to the OS (its implementation is `fflush(FILE*)` in POSIX). As this implementation uses OS calls directly, there is no need for tha",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152717077,152717077,
Diapolo,2015-10-31T09:18:28Z,Isn't LevelDB dead at all? Their Github repo seemed to be not actively developed on the last time I checked.\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152717279,152717279,
laanwj,2015-10-31T09:19:56Z,@Diapolo That is a good observation. That's why I'm doing an attempt at maintaining it.\nCan you help testing?\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152717339,152717339,
Diapolo,2015-10-31T09:25:29Z,"@laanwj Yes, will first do a -reindex on testnet to be able to compare before and after... after that I'm going to kill the testnet instance and see if it's corrupting.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152717543,152717543,
laanwj,2015-10-31T09:26:02Z,Thanks!\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152717567,152717567,
laanwj,2015-10-31T11:02:23Z,"Here is an alternative implementation of `Win32WritableFile` that uses application-buffered libc primitives (fopen, fwrite, ...): https://github.com/laanwj/bitcoin/tree/2015_10_leveldb_win_nomap2   . Barely tested, and I'd not necessarily suggest using it instead of this, but if someone is going to benchmark it should be included (as it reduces the number of system calls in case of lots of small w",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152723341,152723341,
laanwj,2015-11-01T09:03:55Z,"@jonasschnelli it would be useful to have executables here, mind pointing your nightly builder at this?\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152808169,152808169,
jonasschnelli,2015-11-01T14:05:59Z,Here we go: https://bitcoin.jonasschnelli.ch/pulls/6917/\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152828468,152828468,
NicolasDorier,2015-11-01T14:59:38Z,I am so glad about it you can't imagine the time I lost because of this bug. This is the only reason I don't have a full node on my laptop. Trying it right now.\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152832852,152832852,
sipa,2015-11-01T21:04:01Z,"@laanwj We don't do small writes anyway, so I doubt an application-level cache would help.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152863786,152863786,
sipa,2015-11-01T22:07:16Z,Concept ACK in any case.\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152869122,152869122,
laanwj,2015-11-02T02:29:49Z,"> @laanwj We don't do small writes anyway, so I doubt an application-level cache would help.\n\nWe don't, but maybe leveldb does internally? (WritableFiles are used for all of leveldb's file creation and writing, also when building/rebuilding tables, not just to write out database batches. Not sure how careful it is to not, say, call Append multiple times to write different parts of data structure",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-152893891,152893891,
jonasschnelli,2015-11-02T14:10:24Z,I just have started a fresh node (mainnet / this PR) on a win8.1pro with enabled mcafee antivirus (SSD / 2GB RAM / 1.4 GHZ Core i5) ... will report soon.\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153027134,153027134,
jonasschnelli,2015-11-03T09:25:35Z,"Have synced up to 318301,.. twice restarted bitcoin-qt (just to see if stop / start / checkblocks works). No problems with the database so far.\n\nMy node is still syncing (very slow, serval blocks per minutes).\nBut a strange problem appeared.\nQt console window says I'm no block 318301, ... looking in the debug.log i can see that im 318613...\nPeers windows is updating... but somehow with missin",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153296402,153296402,
laanwj,2015-11-03T11:09:07Z,"@jonasschnelli that's a known issue and unrelated to these changes, see #5664\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153316467,153316467,
NicolasDorier,2015-11-04T06:36:58Z,"Pro tip for corruption problem : Attach a disk, index the blockchain data on it, unplug savagely.\n\nI had corruption everytimes my cat played with the ethernet cable between my computer and my network disk.\n\nI did not managed to reproduce the problem so far by just killing the process, I'll try once I find a spare disk somewhere.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153597462,153597462,
sipa,2015-11-04T06:38:22Z,I'm pretty surprised that having the blockchain database on a network disk\nworks at all...\n,https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153598133,153598133,
NicolasDorier,2015-11-04T06:41:47Z,"Mapped Drive, then just pointing to SMB share. I'm not at my office, so I'll try with external drive unplugged savagely instead of real network disk as soon as I can.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153600065,153600065,
sipa,2015-11-04T06:43:57Z,"Well it's good to know that it seems to work _even_ with a network\nfilesystem. But network filesystems usually offer much weaker\nsynchronization guarantees, so often are inappropriate for databases with\nstrong consistency requirements.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153601430,153601430,
NicolasDorier,2015-11-04T07:15:45Z,"Yes I agree, this is why I switched to a normal VM later on Microsoft Azure. But since I've moved to VM they are sometimes rebooted automatically for maintainance purposes, and it got corrupted several time.\n\nThe good thing about mapped disk is that thanks to weaker synchronization guarantee, it makes easier to reproduce data corruption problems ! :)\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153611888,153611888,
laanwj,2015-11-04T10:04:50Z,"The issue that this change tries to improve is extremely easy to reproduce already: it happens nearly every time bitcoind or bitcoin-qt running on Windows crashes, or the Windows crashes, or the power is pulled. This happens for local filesystems on drives connected through SATA.\n\nThe PR does not purport to fix issues with external harddisks, network filesystems, corrupting cables, felines, and ",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153667846,153667846,
jonasschnelli,2015-11-04T12:11:36Z,"I have powered down (unclean sudden shutdown) my Win8.1 VM and restarted Windows and Bitcoin-Qt. Bitcoin-Qt started without issues and is ~ on the same height (353900).\nI'll wait now a couple of minutes and will power down (unplug) the VM host system (MacMini) and see, what happens then.\n\nWould it be worth to do the same procedure with the current master WITHOUT this PR to compare it?\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153701710,153701710,
laanwj,2015-11-04T12:45:49Z,"> Would it be worth to do the same procedure with the current master WITHOUT this PR to compare it?\n\nSure. If you have a VM environment where you can take a snapshot, that's helpful, you can return to that after messing up the db.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153710653,153710653,
jonasschnelli,2015-11-04T12:47:46Z,"I made a snapshot before the first sudden shutdown. But just powered down the host by unplugging the power cable... Best chain could be activated and the node continues syncing. Will do some more shutdowns and see if nothing happens,... then switch to current master and try again.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153711286,153711286,
jonasschnelli,2015-11-04T13:21:57Z,"Now, after a ""power off"" (sudden shutdown), the db is corrupted (still using this PR).\n\n<img width=""1264"" alt=""screen shot 2015-11-04 at 14 16 41"" src=""https://cloud.githubusercontent.com/assets/178464/10939040/00a57576-82ff-11e5-8074-446c683073a9.png"">\n\n""Rebuild the block databases"" ends with ""error opening database"":\n<img width=""1264"" alt=""bildschirmfoto 2015-11-04 um 14 20 15"" src=""https:/",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153717812,153717812,
laanwj,2015-11-04T14:13:13Z,"Re: ""bad undo data"", see #6923 - it's a potential issue, but not something that could be solved by this (as  it isn't a leveldb problem)\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153731495,153731495,
jonasschnelli,2015-11-04T14:43:38Z,"I now did restore serval times back to my snapshot and did some sudden power downs. ~50% it will end up with a corrupt database (100% with ""bad undo data"").\n\nWill now try to run my snapshot with current master without this PR.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153748050,153748050,
laanwj,2015-11-04T14:54:06Z,"That's strange - I only managed to get the undo data error once in all my tries, whereas (without this PR) it produced consistent leveldb errors.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153751867,153751867,
gmaxwell,2015-11-04T15:37:55Z,"Difference in VM flushing behavior, I guess --- it may just be that the VM buffers and reorders writes and ignores fsync.\n\nAlthough... we appear to be missing a FileCommit in UndoWriteToDisk-- I think we need to have synced the blocks and undo before calling the insert.\n\nIt would probably be better for performance if it wrote the block then undo, then did the syncs on both however.  \n\nEdit: ",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153765783,153765783,
jonasschnelli,2015-11-04T15:50:17Z,"With the current master (_without_ this PR), after every sudden shut down, i get ""Corruptions: error in middle of record"".\n\n<img width=""1264"" alt=""bildschirmfoto 2015-11-04 um 16 48 15"" src=""https://cloud.githubusercontent.com/assets/178464/10943254/f537df84-8313-11e5-9b9f-0dc538df1724.png"">\n\nThis PR looks after an improvement but getting #6923 for roughly 50% of power-off shutdowns.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153770363,153770363,
laanwj,2015-11-04T16:49:44Z,"If it improves things, that is good. \n\nFiled this for the leveldb repository: https://github.com/bitcoin/leveldb/pull/9\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153789256,153789256,
laanwj,2015-11-04T16:51:39Z,"Closing the pull here, as it has been moved to the leveldb repository. It should come back to the bitcoin repository in a subtree update.\n",https://github.com/bitcoin/bitcoin/pull/6917#issuecomment-153789721,153789721,
sipa,2015-11-01T20:20:56Z,"Any reason not to use OPEN_ALWAYS (which should open if exists, and create if not, according to https://msdn.microsoft.com/en-us/library/windows/desktop/aa363858%28v=vs.85%29.aspx)?\n",https://github.com/bitcoin/bitcoin/pull/6917#discussion_r43587107,43587107,src/leveldb/util/env_win.cc
sipa,2015-11-01T20:21:53Z,"Oh, this code is just moved.\n",https://github.com/bitcoin/bitcoin/pull/6917#discussion_r43587117,43587117,src/leveldb/util/env_win.cc
sipa,2015-11-01T20:53:33Z,Is this field used at all?\n,https://github.com/bitcoin/bitcoin/pull/6917#discussion_r43587441,43587441,src/leveldb/util/env_win.cc
laanwj,2015-11-02T02:33:57Z,"The goal is to have `f=fopen(filename, ""wb"")` semantics. It's possible that this could be improved, but indeed I just copied the code from the previous WritableFile implementation.\n",https://github.com/bitcoin/bitcoin/pull/6917#discussion_r43593541,43593541,src/leveldb/util/env_win.cc
laanwj,2015-11-02T02:36:03Z,"Good catch. It's there for troubleshooting. Looking at env_posix it's supposed to be passed as 'context' argument to IOErrors, but that's not done at the moment.\n",https://github.com/bitcoin/bitcoin/pull/6917#discussion_r43593579,43593579,src/leveldb/util/env_win.cc
