[
  {
    "sha": "bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZjlhN2ZiYTQ0NjA3OTBhZjNlMTRmZTFjYWUxM2ZkMDQ3ZWU2YmQx",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T01:33:25Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-11-18T13:24:18Z"
      },
      "message": "Allow network activity to be temporarily suspended.\n\nAdded the function SetNetworkActive() which when called with argument set to false disconnects all nodes and sets the flag fNetworkActive to false. As long as this flag is false no new connections are attempted and no incoming connections are accepted. Network activity is reenabled by calling the function with argument true.",
      "tree": {
        "sha": "dd924a88d0208199786d1c9a1129b684ff44ed81",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dd924a88d0208199786d1c9a1129b684ff44ed81"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8adf457047677df1d58da070bae5629526bb5b74",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8adf457047677df1d58da070bae5629526bb5b74",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8adf457047677df1d58da070bae5629526bb5b74"
      }
    ],
    "stats": {
      "total": 29,
      "additions": 29,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ccbb5a14dc29b27a5a04a8804bf99e4c1069e090",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 0,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
        "patch": "@@ -67,6 +67,7 @@ namespace {\n // Global state variables\n //\n bool fDiscover = true;\n+bool fNetworkActive = true;\n bool fListen = true;\n uint64_t nLocalServices = NODE_NETWORK;\n CCriticalSection cs_mapLocalHost;\n@@ -860,6 +861,11 @@ void ThreadSocketHandler()\n                     if (nErr != WSAEWOULDBLOCK)\n                         LogPrintf(\"socket error accept failed: %s\\n\", NetworkErrorString(nErr));\n                 }\n+                else if (!fNetworkActive)\n+                {\n+                    printf(\"connection from %s dropped (not accepting new connections)\\n\", addr.ToString().c_str());\n+                    closesocket(hSocket);\n+                }\n                 else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {\n                     CloseSocket(hSocket);\n@@ -1373,6 +1379,8 @@ bool OpenNetworkConnection(const CAddress& addrConnect, CSemaphoreGrant *grantOu\n     // Initiate outbound network connection\n     //\n     boost::this_thread::interruption_point();\n+    if (!fNetworkActive)\n+        return false;\n     if (!pszDest) {\n         if (IsLocal(addrConnect) ||\n             FindNode((CNetAddr)addrConnect) || CNode::IsBanned(addrConnect) ||\n@@ -1673,6 +1681,25 @@ bool StopNode()\n     return true;\n }\n \n+void SetNetworkActive(bool active)\n+{\n+    if (fDebug)\n+        printf(\"SetNetworkActive: %s\\n\", active ? \"true\" : \"false\");\n+\n+    if (!active) {\n+        fNetworkActive = false;\n+\n+        LOCK(cs_vNodes);\n+        // Close sockets to all nodes\n+        BOOST_FOREACH(CNode* pnode, vNodes)\n+        {\n+            pnode->CloseSocketDisconnect();\n+        }\n+    } else {\n+        fNetworkActive = true;\n+    }\n+}\n+\n class CNetCleanup\n {\n public:"
      },
      {
        "sha": "20ec090d9a92b85b157cbd09fe4ac6b95a99fff7",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
        "patch": "@@ -72,6 +72,7 @@ bool BindListenPort(const CService &bindAddr, std::string& strError, bool fWhite\n void StartNode(boost::thread_group& threadGroup);\n bool StopNode();\n void SocketSendData(CNode *pnode);\n+void SetNetworkActive(bool active);\n \n typedef int NodeId;\n \n@@ -117,6 +118,7 @@ CAddress GetLocalAddress(const CNetAddr *paddrPeer = NULL);\n \n \n extern bool fDiscover;\n+extern bool fNetworkActive;\n extern bool fListen;\n extern uint64_t nLocalServices;\n extern uint64_t nLocalHostNonce;"
      }
    ]
  },
  {
    "sha": "649272f6e0fed7951b41981b24ffd253924c787a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2NDkyNzJmNmUwZmVkNzk1MWI0MTk4MWIyNGZmZDI1MzkyNGM3ODdh",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T01:38:24Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-11-18T13:28:44Z"
      },
      "message": "Add RPC command \"togglenetwork\" to toggle network activity temporarily.\n\nRPC command \"togglenetwork\" toggles network and returns new state after command.\nRPC command \"getinfo\" returns \"networkactive\" field in output.",
      "tree": {
        "sha": "086ec557ab17821e388dd41a025e8a47d193bcdb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/086ec557ab17821e388dd41a025e8a47d193bcdb"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/649272f6e0fed7951b41981b24ffd253924c787a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/649272f6e0fed7951b41981b24ffd253924c787a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/649272f6e0fed7951b41981b24ffd253924c787a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/649272f6e0fed7951b41981b24ffd253924c787a/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/bf9a7fba4460790af3e14fe1cae13fd047ee6bd1"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 15,
      "deletions": 0
    },
    "files": [
      {
        "sha": "64871b016ead624d90c544fe089b29801439d110",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=649272f6e0fed7951b41981b24ffd253924c787a",
        "patch": "@@ -89,6 +89,7 @@ Value getinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"proxy\",         (proxy.IsValid() ? proxy.ToStringIPPort() : string())));\n     obj.push_back(Pair(\"difficulty\",    (double)GetDifficulty()));\n     obj.push_back(Pair(\"testnet\",       Params().TestnetToBeDeprecatedFieldRPC()));\n+    obj.push_back(Pair(\"networkactive\", fNetworkActive));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"keypoololdest\", pwalletMain->GetOldestKeyPoolTime()));"
      },
      {
        "sha": "98ffb9c5bf53cabb93b41141a3a79ccc68e1b137",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=649272f6e0fed7951b41981b24ffd253924c787a",
        "patch": "@@ -434,3 +434,15 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"localaddresses\", localAddresses));\n     return obj;\n }\n+\n+Value togglenetwork(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"togglenetwork\\n\"\n+            \"Toggle all network activity temporarily.\");\n+\n+    SetNetworkActive(!fNetworkActive);\n+\n+    return fNetworkActive;\n+}"
      },
      {
        "sha": "9bf4d1946f44c4afed1bd73897149ecb0873e398",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=649272f6e0fed7951b41981b24ffd253924c787a",
        "patch": "@@ -250,6 +250,7 @@ static const CRPCCommand vRPCCommands[] =\n     /* P2P networking */\n     { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,      false,      false },\n     { \"network\",            \"addnode\",                &addnode,                true,      true,       false },\n+    { \"network\",            \"togglenetwork\",          &togglenetwork,          true,      false,      false },\n     { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,      false,      false },\n     { \"network\",            \"getnettotals\",           &getnettotals,           true,      true,       false },"
      },
      {
        "sha": "0203a30ffd9805283b815b06dda836bf61822936",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/649272f6e0fed7951b41981b24ffd253924c787a/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=649272f6e0fed7951b41981b24ffd253924c787a",
        "patch": "@@ -138,6 +138,7 @@ extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, b\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value ping(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value togglenetwork(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getnettotals(const json_spirit::Array& params, bool fHelp);\n "
      }
    ]
  },
  {
    "sha": "fd6456d001fe149920333e2b6ce637a70662f166",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZDY0NTZkMDAxZmUxNDk5MjAzMzNlMmI2Y2U2MzdhNzA2NjJmMTY2",
    "commit": {
      "author": {
        "name": "Jon Lund Steffensen",
        "email": "jonlst@gmail.com",
        "date": "2013-03-26T02:07:06Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-11-18T13:33:19Z"
      },
      "message": "Add gui feedback and control of network activity state.\n\nAdd getNetworkActive()/setNetworkActive() method to client model.\nSend network active status through NotifyNetworkActiveChanged.\nIndicate in tool tip of gui status bar network indicator whether network activity is disabled.\nIndicate in debug window whether network activity is disabled and add button to allow user to toggle network activity state.",
      "tree": {
        "sha": "56e83db4155226aebb743794b53ab3a01101c12d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56e83db4155226aebb743794b53ab3a01101c12d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fd6456d001fe149920333e2b6ce637a70662f166",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6456d001fe149920333e2b6ce637a70662f166",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6456d001fe149920333e2b6ce637a70662f166",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6456d001fe149920333e2b6ce637a70662f166/comments",
    "author": {
      "login": "jonls",
      "id": 420734,
      "node_id": "MDQ6VXNlcjQyMDczNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/420734?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonls",
      "html_url": "https://github.com/jonls",
      "followers_url": "https://api.github.com/users/jonls/followers",
      "following_url": "https://api.github.com/users/jonls/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonls/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonls/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonls/subscriptions",
      "organizations_url": "https://api.github.com/users/jonls/orgs",
      "repos_url": "https://api.github.com/users/jonls/repos",
      "events_url": "https://api.github.com/users/jonls/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonls/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "649272f6e0fed7951b41981b24ffd253924c787a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/649272f6e0fed7951b41981b24ffd253924c787a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/649272f6e0fed7951b41981b24ffd253924c787a"
      }
    ],
    "stats": {
      "total": 97,
      "additions": 90,
      "deletions": 7
    },
    "files": [
      {
        "sha": "63ecef5659ed22a05ce5140af2ff19de874056e9",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -1698,6 +1698,8 @@ void SetNetworkActive(bool active)\n     } else {\n         fNetworkActive = true;\n     }\n+\n+    uiInterface.NotifyNetworkActiveChanged(fNetworkActive);\n }\n \n class CNetCleanup"
      },
      {
        "sha": "25d59fc84325c01310fde367b28bbf686cbb9d30",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 3,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -417,8 +417,9 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         createTrayIconMenu();\n \n         // Keep up to date with client\n-        setNumConnections(clientModel->getNumConnections());\n+        updateNetworkState();\n         connect(clientModel, SIGNAL(numConnectionsChanged(int)), this, SLOT(setNumConnections(int)));\n+        connect(clientModel, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n \n         setNumBlocks(clientModel->getNumBlocks());\n         connect(clientModel, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n@@ -620,8 +621,9 @@ void BitcoinGUI::gotoVerifyMessageTab(QString addr)\n }\n #endif // ENABLE_WALLET\n \n-void BitcoinGUI::setNumConnections(int count)\n+void BitcoinGUI::updateNetworkState()\n {\n+    int count = clientModel->getNumConnections();\n     QString icon;\n     switch(count)\n     {\n@@ -632,7 +634,21 @@ void BitcoinGUI::setNumConnections(int count)\n     default: icon = \":/icons/connect_4\"; break;\n     }\n     labelConnectionsIcon->setPixmap(QIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-    labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+\n+    if (clientModel->getNetworkActive())\n+        labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+    else\n+        labelConnectionsIcon->setToolTip(tr(\"Network activity disabled\"));\n+}\n+\n+void BitcoinGUI::setNumConnections(int count)\n+{\n+    updateNetworkState();\n+}\n+\n+void BitcoinGUI::setNetworkActive(bool networkActive)\n+{\n+    updateNetworkState();\n }\n \n void BitcoinGUI::setNumBlocks(int count)"
      },
      {
        "sha": "90d0ce7c45309e07a2878dbcaf28db12441402e7",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 5,
        "deletions": 0,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -134,13 +134,18 @@ class BitcoinGUI : public QMainWindow\n     /** Disconnect core signals from GUI client */\n     void unsubscribeFromCoreSignals();\n \n+    /** Update UI with latest network info from model. */\n+    void updateNetworkState();\n+    \n signals:\n     /** Signal raised when a URI was entered or dragged to the GUI */\n     void receivedURI(const QString &uri);\n \n public slots:\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n+    /** Set network state shown in the UI */\n+    void setNetworkActive(bool networkActive);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count);\n "
      },
      {
        "sha": "34c82834d9c0fc530f5b8b28d361fb030b67773d",
        "filename": "src/qt/clientmodel.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/clientmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/clientmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.cpp?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -127,6 +127,11 @@ void ClientModel::updateNumConnections(int numConnections)\n     emit numConnectionsChanged(numConnections);\n }\n \n+void ClientModel::updateNetworkActive(bool networkActive)\n+{\n+    emit networkActiveChanged(networkActive);\n+}\n+\n void ClientModel::updateAlert(const QString &hash, int status)\n {\n     // Show error message notification for new alert\n@@ -161,6 +166,16 @@ enum BlockSource ClientModel::getBlockSource() const\n     return BLOCK_SOURCE_NONE;\n }\n \n+void ClientModel::setNetworkActive(bool active)\n+{\n+    SetNetworkActive(active);\n+}\n+\n+bool ClientModel::getNetworkActive() const\n+{\n+    return fNetworkActive;\n+}\n+\n QString ClientModel::getStatusBarWarnings() const\n {\n     return QString::fromStdString(GetWarnings(\"statusbar\"));\n@@ -217,6 +232,12 @@ static void NotifyNumConnectionsChanged(ClientModel *clientmodel, int newNumConn\n                               Q_ARG(int, newNumConnections));\n }\n \n+static void NotifyNetworkActiveChanged(ClientModel *clientmodel, bool networkActive)\n+{\n+    QMetaObject::invokeMethod(clientmodel, \"updateNetworkActive\", Qt::QueuedConnection,\n+                              Q_ARG(bool, networkActive));\n+}\n+\n static void NotifyAlertChanged(ClientModel *clientmodel, const uint256 &hash, ChangeType status)\n {\n     qDebug() << \"NotifyAlertChanged : \" + QString::fromStdString(hash.GetHex()) + \" status=\" + QString::number(status);\n@@ -230,6 +251,7 @@ void ClientModel::subscribeToCoreSignals()\n     // Connect signals to client\n     uiInterface.ShowProgress.connect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.connect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n+    uiInterface.NotifyNetworkActiveChanged.connect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.connect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }\n \n@@ -238,5 +260,6 @@ void ClientModel::unsubscribeFromCoreSignals()\n     // Disconnect signals from client\n     uiInterface.ShowProgress.disconnect(boost::bind(ShowProgress, this, _1, _2));\n     uiInterface.NotifyNumConnectionsChanged.disconnect(boost::bind(NotifyNumConnectionsChanged, this, _1));\n+    uiInterface.NotifyNetworkActiveChanged.disconnect(boost::bind(NotifyNetworkActiveChanged, this, _1));\n     uiInterface.NotifyAlertChanged.disconnect(boost::bind(NotifyAlertChanged, this, _1, _2));\n }"
      },
      {
        "sha": "e0a733e4c9f6c7363eed78e1d50e25727af4144e",
        "filename": "src/qt/clientmodel.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/clientmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/clientmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/clientmodel.h?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -60,6 +60,10 @@ class ClientModel : public QObject\n     bool inInitialBlockDownload() const;\n     //! Return true if core is importing blocks\n     enum BlockSource getBlockSource() const;\n+    //! Return true if network activity in core is enabled\n+    bool getNetworkActive() const;\n+    //! Toggle network activity state in core\n+    void setNetworkActive(bool active);\n     //! Return warnings to be displayed in status bar\n     QString getStatusBarWarnings() const;\n \n@@ -87,6 +91,7 @@ class ClientModel : public QObject\n signals:\n     void numConnectionsChanged(int count);\n     void numBlocksChanged(int count);\n+    void networkActiveChanged(bool networkActive);\n     void alertsChanged(const QString &warnings);\n     void bytesChanged(quint64 totalBytesIn, quint64 totalBytesOut);\n \n@@ -99,6 +104,7 @@ class ClientModel : public QObject\n public slots:\n     void updateTimer();\n     void updateNumConnections(int numConnections);\n+    void updateNetworkActive(bool networkActive);\n     void updateAlert(const QString &hash, int status);\n };\n "
      },
      {
        "sha": "0a2fc8cbae0305c0e3fdc315313c304fd64271cc",
        "filename": "src/qt/rpcconsole.cpp",
        "status": "modified",
        "additions": 25,
        "deletions": 4,
        "changes": 29,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/rpcconsole.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/rpcconsole.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.cpp?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -294,6 +294,9 @@ void RPCConsole::setClientModel(ClientModel *model)\n         setNumBlocks(model->getNumBlocks());\n         connect(model, SIGNAL(numBlocksChanged(int)), this, SLOT(setNumBlocks(int)));\n \n+        updateNetworkState();\n+        connect(model, SIGNAL(networkActiveChanged(bool)), this, SLOT(setNetworkActive(bool)));\n+\n         updateTrafficStats(model->getTotalBytesRecv(), model->getTotalBytesSent());\n         connect(model, SIGNAL(bytesChanged(quint64,quint64)), this, SLOT(updateTrafficStats(quint64, quint64)));\n \n@@ -389,16 +392,29 @@ void RPCConsole::message(int category, const QString &message, bool html)\n     ui->messagesWidget->append(out);\n }\n \n+void RPCConsole::updateNetworkState()\n+{\n+    QString connections = QString::number(clientModel->getNumConnections()) + \" (\";\n+    connections += tr(\"In:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_IN)) + \" / \";\n+    connections += tr(\"Out:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_OUT)) + \")\";\n+    \n+    if(!clientModel->getNetworkActive())\n+        connections += \" (\" + tr(\"Network activity disabled\") + \")\";\n+\n+    ui->numberOfConnections->setText(connections);\n+}\n+\n void RPCConsole::setNumConnections(int count)\n {\n     if (!clientModel)\n         return;\n \n-    QString connections = QString::number(count) + \" (\";\n-    connections += tr(\"In:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_IN)) + \" / \";\n-    connections += tr(\"Out:\") + \" \" + QString::number(clientModel->getNumConnections(CONNECTIONS_OUT)) + \")\";\n+    updateNetworkState();\n+}\n \n-    ui->numberOfConnections->setText(connections);\n+void RPCConsole::setNetworkActive(bool networkActive)\n+{\n+    updateNetworkState();\n }\n \n void RPCConsole::setNumBlocks(int count)\n@@ -657,3 +673,8 @@ void RPCConsole::hideEvent(QHideEvent *event)\n     // stop PeerTableModel auto refresh\n     clientModel->getPeerTableModel()->stopAutoRefresh();\n }\n+\n+void RPCConsole::on_toggleNetworkActiveButton_clicked()\n+{\n+    clientModel->setNetworkActive(!clientModel->getNetworkActive());\n+}"
      },
      {
        "sha": "90f6b82b27dcee035414750578a7950f6767b8f4",
        "filename": "src/qt/rpcconsole.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/rpcconsole.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/qt/rpcconsole.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/rpcconsole.h?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -47,6 +47,8 @@ class RPCConsole: public QDialog\n private slots:\n     void on_lineEdit_returnPressed();\n     void on_tabWidget_currentChanged(int index);\n+    /** toggle network activity */\n+    void on_toggleNetworkActiveButton_clicked();\n     /** open the debug.log from the current datadir */\n     void on_openDebugLogfileButton_clicked();\n     /** change the time range of the network traffic graph */\n@@ -63,6 +65,8 @@ public slots:\n     void message(int category, const QString &message, bool html = false);\n     /** Set number of connections shown in the UI */\n     void setNumConnections(int count);\n+    /** Set network state shown in the UI */\n+    void setNetworkActive(bool networkActive);\n     /** Set number of blocks shown in the UI */\n     void setNumBlocks(int count);\n     /** Go forward or back in history */\n@@ -98,6 +102,9 @@ public slots:\n     QStringList history;\n     int historyPtr;\n     NodeId cachedNodeid;\n+    \n+    /** Update UI with latest network info from model. */\n+    void updateNetworkState();\n };\n \n #endif // BITCOIN_QT_RPCCONSOLE_H"
      },
      {
        "sha": "1662e59a61c2f6e8774371ffe5abdc34bfc5ecd9",
        "filename": "src/ui_interface.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fd6456d001fe149920333e2b6ce637a70662f166/src/ui_interface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fd6456d001fe149920333e2b6ce637a70662f166/src/ui_interface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/ui_interface.h?ref=fd6456d001fe149920333e2b6ce637a70662f166",
        "patch": "@@ -84,6 +84,9 @@ class CClientUIInterface\n     /** Number of network connections changed. */\n     boost::signals2::signal<void (int newNumConnections)> NotifyNumConnectionsChanged;\n \n+    /** Network activity state changed. */\n+    boost::signals2::signal<void (bool networkActive)> NotifyNetworkActiveChanged;\n+\n     /**\n      * New, updated or cancelled alert.\n      * @note called with lock cs_mapAlerts held."
      }
    ]
  },
  {
    "sha": "ba0456186a55d8ee7229e177832bc7608ef6c288",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiYTA0NTYxODZhNTVkOGVlNzIyOWUxNzc4MzJiYzc2MDhlZjZjMjg4",
    "commit": {
      "author": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-11-19T12:33:34Z"
      },
      "committer": {
        "name": "Jonas Schnelli",
        "email": "jonas.schnelli@include7.ch",
        "date": "2014-11-19T15:22:49Z"
      },
      "message": "overhaul @jonls network-activity-togle\n\n- rename rpc command \"togglenetwork\" to \"setnetworkactive (true|false)\"\n- add simple testcase\n- GUI toggle added to connections icon in statusbar",
      "tree": {
        "sha": "4f170cc6883c25b2b91bce153bb8203404796ef7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4f170cc6883c25b2b91bce153bb8203404796ef7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ba0456186a55d8ee7229e177832bc7608ef6c288",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba0456186a55d8ee7229e177832bc7608ef6c288",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ba0456186a55d8ee7229e177832bc7608ef6c288",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ba0456186a55d8ee7229e177832bc7608ef6c288/comments",
    "author": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonasschnelli",
      "id": 178464,
      "node_id": "MDQ6VXNlcjE3ODQ2NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/178464?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonasschnelli",
      "html_url": "https://github.com/jonasschnelli",
      "followers_url": "https://api.github.com/users/jonasschnelli/followers",
      "following_url": "https://api.github.com/users/jonasschnelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonasschnelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonasschnelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonasschnelli/subscriptions",
      "organizations_url": "https://api.github.com/users/jonasschnelli/orgs",
      "repos_url": "https://api.github.com/users/jonasschnelli/repos",
      "events_url": "https://api.github.com/users/jonasschnelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonasschnelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fd6456d001fe149920333e2b6ce637a70662f166",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fd6456d001fe149920333e2b6ce637a70662f166",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fd6456d001fe149920333e2b6ce637a70662f166"
      }
    ],
    "stats": {
      "total": 107,
      "additions": 91,
      "deletions": 16
    },
    "files": [
      {
        "sha": "79480cdaa56d13334d9a34f37119ed516ba4f102",
        "filename": "doc/assets-attribution.md",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/doc/assets-attribution.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/doc/assets-attribution.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/assets-attribution.md?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -101,3 +101,13 @@ Jonas Schnelli\n \tsrc/qt/res/src/bitcoin.ico, src/qt/res/src/bitcoin.png,\n \tsrc/qt/res/src/bitcoin_testnet.png, docs/bitcoin_logo_doxygen.png,\n \tsrc/qt/res/images/splash.png, src/qt/res/images/splash_testnet.png\n+\n+Yusuke Kamiyamane\n+-----------------------\n+\n+### Info\n+* Designer: Yusuke Kamiyamane\n+* License: Creative Commons (Attribution 3.0 Unported)\n+\n+### Assets Used\n+\tsrc/qt/res/icons/network_disabled.png\n\\ No newline at end of file"
      },
      {
        "sha": "c5dfd5869510527d15a63c21be6ac45b120bfff0",
        "filename": "src/Makefile.qt.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/Makefile.qt.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/Makefile.qt.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.qt.include?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -240,6 +240,7 @@ RES_ICONS = \\\n   qt/res/icons/key.png \\\n   qt/res/icons/lock_closed.png \\\n   qt/res/icons/lock_open.png \\\n+  qt/res/icons/network_disabled.png \\\n   qt/res/icons/overview.png \\\n   qt/res/icons/qrcode.png \\\n   qt/res/icons/quit.png \\"
      },
      {
        "sha": "85b860138a388f628c8b2ab18b3fb150bfae4114",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -864,7 +864,7 @@ void ThreadSocketHandler()\n                 else if (!fNetworkActive)\n                 {\n                     printf(\"connection from %s dropped (not accepting new connections)\\n\", addr.ToString().c_str());\n-                    closesocket(hSocket);\n+                    CloseSocket(hSocket);\n                 }\n                 else if (nInbound >= nMaxConnections - MAX_OUTBOUND_CONNECTIONS)\n                 {"
      },
      {
        "sha": "30e094ff4fc4133c35c370fbdd0435ab58a468e1",
        "filename": "src/qt/bitcoin.qrc",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoin.qrc",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoin.qrc",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoin.qrc?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -45,6 +45,7 @@\n         <file alias=\"filesave\">res/icons/filesave.png</file>\n         <file alias=\"qrcode\">res/icons/qrcode.png</file>\n         <file alias=\"debugwindow\">res/icons/debugwindow.png</file>\n+        <file alias=\"network_disabled\">res/icons/network_disabled.png</file>\n     </qresource>\n     <qresource prefix=\"/images\">\n         <file alias=\"about\">res/images/about.png</file>"
      },
      {
        "sha": "af8188828239e9f631f1bb4aeb1cd90f14cfaca2",
        "filename": "src/qt/bitcoingui.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 7,
        "changes": 38,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoingui.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoingui.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -66,7 +66,7 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n     walletFrame(0),\n     unitDisplayControl(0),\n     labelEncryptionIcon(0),\n-    labelConnectionsIcon(0),\n+    connectionsControl(0),\n     labelBlocksIcon(0),\n     progressBarLabel(0),\n     progressBar(0),\n@@ -172,7 +172,7 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n     frameBlocksLayout->setSpacing(3);\n     unitDisplayControl = new UnitDisplayStatusBarControl();\n     labelEncryptionIcon = new QLabel();\n-    labelConnectionsIcon = new QLabel();\n+    connectionsControl = new NetworkToggleStatusBarControl();\n     labelBlocksIcon = new QLabel();\n     if(enableWallet)\n     {\n@@ -182,7 +182,7 @@ BitcoinGUI::BitcoinGUI(const NetworkStyle *networkStyle, QWidget *parent) :\n         frameBlocksLayout->addWidget(labelEncryptionIcon);\n     }\n     frameBlocksLayout->addStretch();\n-    frameBlocksLayout->addWidget(labelConnectionsIcon);\n+    frameBlocksLayout->addWidget(connectionsControl);\n     frameBlocksLayout->addStretch();\n     frameBlocksLayout->addWidget(labelBlocksIcon);\n     frameBlocksLayout->addStretch();\n@@ -438,6 +438,7 @@ void BitcoinGUI::setClientModel(ClientModel *clientModel)\n         }\n #endif // ENABLE_WALLET\n         unitDisplayControl->setOptionsModel(clientModel->getOptionsModel());\n+        connectionsControl->setClientModel(clientModel);\n     } else {\n         // Disable possibility to show main window via action\n         toggleHideAction->setEnabled(false);\n@@ -633,12 +634,18 @@ void BitcoinGUI::updateNetworkState()\n     case 7: case 8: case 9: icon = \":/icons/connect_3\"; break;\n     default: icon = \":/icons/connect_4\"; break;\n     }\n-    labelConnectionsIcon->setPixmap(QIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n-\n+    \n     if (clientModel->getNetworkActive())\n-        labelConnectionsIcon->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+    {\n+        connectionsControl->setToolTip(tr(\"%n active connection(s) to Bitcoin network\", \"\", count));\n+    }\n     else\n-        labelConnectionsIcon->setToolTip(tr(\"Network activity disabled\"));\n+    {\n+        connectionsControl->setToolTip(tr(\"Network activity disabled\"));\n+        icon = \":/icons/network_disabled\";\n+    }\n+    \n+    connectionsControl->setPixmap(QIcon(icon).pixmap(STATUSBAR_ICONSIZE,STATUSBAR_ICONSIZE));\n }\n \n void BitcoinGUI::setNumConnections(int count)\n@@ -1099,3 +1106,20 @@ void UnitDisplayStatusBarControl::onMenuSelection(QAction* action)\n         optionsModel->setDisplayUnit(action->data());\n     }\n }\n+\n+void NetworkToggleStatusBarControl::mousePressEvent(QMouseEvent *event)\n+{\n+    if(clientModel)\n+    {\n+        clientModel->setNetworkActive(!clientModel->getNetworkActive());\n+    }\n+}\n+\n+/** Lets the control know about the Client Model */\n+void NetworkToggleStatusBarControl::setClientModel(ClientModel *clientModel)\n+{\n+    if (clientModel)\n+    {\n+        this->clientModel = clientModel;\n+    }\n+}\n\\ No newline at end of file"
      },
      {
        "sha": "d81cbc71958b7a10351f9195d55a04800fb01708",
        "filename": "src/qt/bitcoingui.h",
        "status": "modified",
        "additions": 15,
        "deletions": 1,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoingui.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/bitcoingui.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoingui.h?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -25,6 +25,7 @@ class OptionsModel;\n class RPCConsole;\n class SendCoinsRecipient;\n class UnitDisplayStatusBarControl;\n+class NetworkToggleStatusBarControl;\n class WalletFrame;\n class WalletModel;\n \n@@ -79,7 +80,7 @@ class BitcoinGUI : public QMainWindow\n \n     UnitDisplayStatusBarControl *unitDisplayControl;\n     QLabel *labelEncryptionIcon;\n-    QLabel *labelConnectionsIcon;\n+    NetworkToggleStatusBarControl *connectionsControl;\n     QLabel *labelBlocksIcon;\n     QLabel *progressBarLabel;\n     QProgressBar *progressBar;\n@@ -242,4 +243,17 @@ private slots:\n     void onMenuSelection(QAction* action);\n };\n \n+class NetworkToggleStatusBarControl : public QLabel\n+{\n+    Q_OBJECT\n+    \n+public:\n+    void setClientModel(ClientModel *clientModel);\n+protected:\n+    void mousePressEvent(QMouseEvent *event);\n+    \n+private:\n+    ClientModel *clientModel;\n+};\n+\n #endif // BITCOIN_QT_BITCOINGUI_H"
      },
      {
        "sha": "5119cef474bbf070befd5902016044c9c2ce7ce0",
        "filename": "src/qt/res/icons/network_disabled.png",
        "status": "added",
        "additions": 0,
        "deletions": 0,
        "changes": 0,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/res/icons/network_disabled.png",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/qt/res/icons/network_disabled.png",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/res/icons/network_disabled.png?ref=ba0456186a55d8ee7229e177832bc7608ef6c288"
      },
      {
        "sha": "f4bee3369e9704feeb6b2b4d0d4835184eef748c",
        "filename": "src/rpcclient.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcclient.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcclient.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcclient.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -87,6 +87,7 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"estimatepriority\", 0 },\n     { \"prioritisetransaction\", 1 },\n     { \"prioritisetransaction\", 2 },\n+    { \"setnetworkactive\", 0 },\n };\n \n class CRPCConvertTable"
      },
      {
        "sha": "b480a8f930c40d5545b682ac952781ab78e25256",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -385,6 +385,7 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n             \"  \\\"localservices\\\": \\\"xxxxxxxxxxxxxxxx\\\", (string) the services we offer to the network\\n\"\n             \"  \\\"timeoffset\\\": xxxxx,                   (numeric) the time offset\\n\"\n             \"  \\\"connections\\\": xxxxx,                  (numeric) the number of connections\\n\"\n+            \"  \\\"networkactive\\\": x,                    (numeric) the number of connections\\n\"\n             \"  \\\"networks\\\": [                          (array) information per network\\n\"\n             \"  {\\n\"\n             \"    \\\"name\\\": \\\"xxx\\\",                     (string) network (ipv4, ipv6 or onion)\\n\"\n@@ -417,6 +418,7 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     obj.push_back(Pair(\"localservices\",       strprintf(\"%016x\", nLocalServices)));\n     obj.push_back(Pair(\"timeoffset\",    GetTimeOffset()));\n     obj.push_back(Pair(\"connections\",   (int)vNodes.size()));\n+    obj.push_back(Pair(\"networkactive\",   (int)fNetworkActive));\n     obj.push_back(Pair(\"networks\",      GetNetworksInfo()));\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n     Array localAddresses;\n@@ -435,14 +437,14 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n     return obj;\n }\n \n-Value togglenetwork(const Array& params, bool fHelp)\n+Value setnetworkactive(const Array& params, bool fHelp)\n {\n-    if (fHelp || params.size() != 0)\n+    if (fHelp || params.size() != 1)\n         throw runtime_error(\n-            \"togglenetwork\\n\"\n-            \"Toggle all network activity temporarily.\");\n+            \"setnetworkactive \\\"true|false\\\"\\n\"\n+            \"Disable/Re-Enable all network activity temporarily.\");\n \n-    SetNetworkActive(!fNetworkActive);\n+    SetNetworkActive(params[0].get_bool());\n \n     return fNetworkActive;\n }"
      },
      {
        "sha": "7fde966fdf842a6edcd68b4eff7cf82f8d69ae73",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -250,7 +250,7 @@ static const CRPCCommand vRPCCommands[] =\n     /* P2P networking */\n     { \"network\",            \"getnetworkinfo\",         &getnetworkinfo,         true,      false,      false },\n     { \"network\",            \"addnode\",                &addnode,                true,      true,       false },\n-    { \"network\",            \"togglenetwork\",          &togglenetwork,          true,      false,      false },\n+    { \"network\",            \"setnetworkactive\",       &setnetworkactive,       true,      false,      false },\n     { \"network\",            \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true,       false },\n     { \"network\",            \"getconnectioncount\",     &getconnectioncount,     true,      false,      false },\n     { \"network\",            \"getnettotals\",           &getnettotals,           true,      true,       false },"
      },
      {
        "sha": "21b848d268468c4e979fd2225cd0699ecb805fcf",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -138,7 +138,7 @@ extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, b\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value ping(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n-extern json_spirit::Value togglenetwork(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value setnetworkactive(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getnettotals(const json_spirit::Array& params, bool fHelp);\n "
      },
      {
        "sha": "10b9c9c32e4310009d9acb69519d7336e2c9b894",
        "filename": "src/test/rpc_tests.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ba0456186a55d8ee7229e177832bc7608ef6c288/src/test/rpc_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ba0456186a55d8ee7229e177832bc7608ef6c288/src/test/rpc_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/rpc_tests.cpp?ref=ba0456186a55d8ee7229e177832bc7608ef6c288",
        "patch": "@@ -89,6 +89,28 @@ BOOST_AUTO_TEST_CASE(rpc_rawparams)\n     BOOST_CHECK_THROW(CallRPC(string(\"sendrawtransaction \")+rawtx+\" extra\"), runtime_error);\n }\n \n+BOOST_AUTO_TEST_CASE(rpc_togglenetwork)\n+{\n+    Value r;\n+    \n+    r = CallRPC(\"getnetworkinfo\");\n+    int netState = find_value(r.get_obj(), \"networkactive\").get_int();\n+    BOOST_CHECK_EQUAL(netState,1);\n+    \n+    BOOST_CHECK_NO_THROW(CallRPC(\"setnetworkactive false\"));\n+    r = CallRPC(\"getnetworkinfo\");\n+    int numConnection = find_value(r.get_obj(), \"connections\").get_int();\n+    BOOST_CHECK_EQUAL(numConnection,0);\n+    \n+    netState = find_value(r.get_obj(), \"networkactive\").get_int();\n+    BOOST_CHECK_EQUAL(netState,0);\n+    \n+    BOOST_CHECK_NO_THROW(CallRPC(\"setnetworkactive true\"));\n+    r = CallRPC(\"getnetworkinfo\");\n+    netState = find_value(r.get_obj(), \"networkactive\").get_int();\n+    BOOST_CHECK_EQUAL(netState,1);\n+}\n+\n BOOST_AUTO_TEST_CASE(rpc_rawsign)\n {\n     Value r;"
      }
    ]
  }
]