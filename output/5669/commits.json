[
  {
    "sha": "27afcd89db302d87168e0f504ee141dbf0e1ea22",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyN2FmY2Q4OWRiMzAyZDg3MTY4ZTBmNTA0ZWUxNDFkYmYwZTFlYTIy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-01-16T23:57:14Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-15T14:05:26Z"
      },
      "message": "Consensus: Refactor: Decouple CValidationState from main::AbortNode()",
      "tree": {
        "sha": "e378199b41e44842552409034e7a084ab9e610bd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e378199b41e44842552409034e7a084ab9e610bd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/27afcd89db302d87168e0f504ee141dbf0e1ea22",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27afcd89db302d87168e0f504ee141dbf0e1ea22",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/27afcd89db302d87168e0f504ee141dbf0e1ea22",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27afcd89db302d87168e0f504ee141dbf0e1ea22/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ac75bafafdc394f60f819ede18181682eb5aa662",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ac75bafafdc394f60f819ede18181682eb5aa662",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ac75bafafdc394f60f819ede18181682eb5aa662"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 27,
      "deletions": 33
    },
    "files": [
      {
        "sha": "0a849c035c017cc83a63add4bd686803b5fc8ed3",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 27,
        "changes": 54,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27afcd89db302d87168e0f504ee141dbf0e1ea22/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27afcd89db302d87168e0f504ee141dbf0e1ea22/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=27afcd89db302d87168e0f504ee141dbf0e1ea22",
        "patch": "@@ -1552,6 +1552,24 @@ bool UndoReadFromDisk(CBlockUndo& blockundo, const CDiskBlockPos& pos, const uin\n     return true;\n }\n \n+/** Abort with a message */\n+bool AbortNode(const std::string& strMessage, const std::string& userMessage=\"\")\n+{\n+    strMiscWarning = strMessage;\n+    LogPrintf(\"*** %s\\n\", strMessage);\n+    uiInterface.ThreadSafeMessageBox(\n+        userMessage.empty() ? _(\"Error: A fatal internal error occured, see debug.log for details\") : userMessage,\n+        \"\", CClientUIInterface::MSG_ERROR);\n+    StartShutdown();\n+    return false;\n+}\n+\n+bool AbortNode(CValidationState& state, const std::string& strMessage, const std::string& userMessage=\"\")\n+{\n+    AbortNode(strMessage, userMessage);\n+    return state.Error(strMessage);\n+}\n+\n } // anon namespace\n \n /**\n@@ -1831,7 +1849,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n             if (!FindUndoPos(state, pindex->nFile, pos, ::GetSerializeSize(blockundo, SER_DISK, CLIENT_VERSION) + 40))\n                 return error(\"ConnectBlock(): FindUndoPos failed\");\n             if (!UndoWriteToDisk(blockundo, pos, pindex->pprev->GetBlockHash()))\n-                return state.Abort(\"Failed to write undo data\");\n+                return AbortNode(state, \"Failed to write undo data\");\n \n             // update nUndoPos in block index\n             pindex->nUndoPos = pos.nPos;\n@@ -1844,7 +1862,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     if (fTxIndex)\n         if (!pblocktree->WriteTxIndex(vPos))\n-            return state.Abort(\"Failed to write transaction index\");\n+            return AbortNode(state, \"Failed to write transaction index\");\n \n     // add this block to the view's block chain\n     view.SetBestBlock(pindex->GetBlockHash());\n@@ -1938,7 +1956,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n                 setDirtyBlockIndex.erase(it++);\n             }\n             if (!pblocktree->WriteBatchSync(vFiles, nLastBlockFile, vBlocks)) {\n-                return state.Abort(\"Files to write to block index database\");\n+                return AbortNode(state, \"Files to write to block index database\");\n             }\n         }\n         // Finally remove any pruned files\n@@ -1959,7 +1977,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n             return state.Error(\"out of disk space\");\n         // Flush the chainstate (which may refer to block index entries).\n         if (!pcoinsTip->Flush())\n-            return state.Abort(\"Failed to write to coin database\");\n+            return AbortNode(state, \"Failed to write to coin database\");\n         nLastFlush = nNow;\n     }\n     if ((mode == FLUSH_STATE_ALWAYS || mode == FLUSH_STATE_PERIODIC) && nNow > nLastSetChain + (int64_t)DATABASE_WRITE_INTERVAL * 1000000) {\n@@ -1968,7 +1986,7 @@ bool static FlushStateToDisk(CValidationState &state, FlushStateMode mode) {\n         nLastSetChain = nNow;\n     }\n     } catch (const std::runtime_error& e) {\n-        return state.Abort(std::string(\"System error while flushing: \") + e.what());\n+        return AbortNode(state, std::string(\"System error while flushing: \") + e.what());\n     }\n     return true;\n }\n@@ -2032,7 +2050,7 @@ bool static DisconnectTip(CValidationState &state) {\n     // Read block from disk.\n     CBlock block;\n     if (!ReadBlockFromDisk(block, pindexDelete))\n-        return state.Abort(\"Failed to read block\");\n+        return AbortNode(state, \"Failed to read block\");\n     // Apply the block atomically to the chain state.\n     int64_t nStart = GetTimeMicros();\n     {\n@@ -2083,7 +2101,7 @@ bool static ConnectTip(CValidationState &state, CBlockIndex *pindexNew, CBlock *\n     CBlock block;\n     if (!pblock) {\n         if (!ReadBlockFromDisk(block, pindexNew))\n-            return state.Abort(\"Failed to read block\");\n+            return AbortNode(state, \"Failed to read block\");\n         pblock = &block;\n     }\n     // Apply the block atomically to the chain state.\n@@ -2790,11 +2808,11 @@ bool AcceptBlock(CBlock& block, CValidationState& state, CBlockIndex** ppindex,\n             return error(\"AcceptBlock(): FindBlockPos failed\");\n         if (dbp == NULL)\n             if (!WriteBlockToDisk(block, blockPos))\n-                return state.Abort(\"Failed to write block\");\n+                AbortNode(state, \"Failed to write block\");\n         if (!ReceivedBlockTransactions(block, state, pindex, blockPos))\n             return error(\"AcceptBlock(): ReceivedBlockTransactions failed\");\n     } catch (const std::runtime_error& e) {\n-        return state.Abort(std::string(\"System error: \") + e.what());\n+        return AbortNode(state, std::string(\"System error: \") + e.what());\n     }\n \n     if (fCheckForPruning)\n@@ -2869,24 +2887,6 @@ bool TestBlockValidity(CValidationState &state, const CBlock& block, CBlockIndex\n     return true;\n }\n \n-\n-\n-\n-\n-\n-\n-\n-bool AbortNode(const std::string &strMessage, const std::string &userMessage) {\n-    strMiscWarning = strMessage;\n-    LogPrintf(\"*** %s\\n\", strMessage);\n-    uiInterface.ThreadSafeMessageBox(\n-        userMessage.empty() ? _(\"Error: A fatal internal error occured, see debug.log for details\") : userMessage,\n-        \"\", CClientUIInterface::MSG_ERROR);\n-    StartShutdown();\n-    return false;\n-}\n-\n-\n /**\n  * BLOCK PRUNING CODE\n  */"
      },
      {
        "sha": "1fc418daffa0ed2a001029bdf12e05ef8df3eeb8",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 6,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/27afcd89db302d87168e0f504ee141dbf0e1ea22/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/27afcd89db302d87168e0f504ee141dbf0e1ea22/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=27afcd89db302d87168e0f504ee141dbf0e1ea22",
        "patch": "@@ -228,8 +228,6 @@ void UnlinkPrunedFiles(std::set<int>& setFilesToPrune);\n \n /** Create a new block index entry for a given block hash */\n CBlockIndex * InsertBlockIndex(uint256 hash);\n-/** Abort with a message */\n-bool AbortNode(const std::string &msg, const std::string &userMessage=\"\");\n /** Get statistics from node state */\n bool GetNodeStateStats(NodeId nodeid, CNodeStateStats &stats);\n /** Increase a node's misbehavior score. */\n@@ -495,10 +493,6 @@ class CValidationState {\n         mode = MODE_ERROR;\n         return false;\n     }\n-    bool Abort(const std::string &msg) {\n-        AbortNode(msg);\n-        return Error(msg);\n-    }\n     bool IsValid() const {\n         return mode == MODE_VALID;\n     }"
      }
    ]
  },
  {
    "sha": "da29ecbcc6c003a603ee2312309d593708ec6fb2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkYTI5ZWNiY2M2YzAwM2E2MDNlZTIzMTIzMDlkNTkzNzA4ZWM2ZmIy",
    "commit": {
      "author": {
        "name": "jtimon",
        "email": "jtimon@jtimon.cc",
        "date": "2015-01-24T14:57:12Z"
      },
      "committer": {
        "name": "Jorge Tim\u00f3n",
        "email": "jtimon@jtimon.cc",
        "date": "2015-05-15T14:05:28Z"
      },
      "message": "Consensus: MOVEONLY: Move CValidationState from main consensus/validation",
      "tree": {
        "sha": "7d736bfddf11c238fe5f811f2ff4671f05ef617c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7d736bfddf11c238fe5f811f2ff4671f05ef617c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/da29ecbcc6c003a603ee2312309d593708ec6fb2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da29ecbcc6c003a603ee2312309d593708ec6fb2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/da29ecbcc6c003a603ee2312309d593708ec6fb2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/da29ecbcc6c003a603ee2312309d593708ec6fb2/comments",
    "author": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jtimon",
      "id": 1008458,
      "node_id": "MDQ6VXNlcjEwMDg0NTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1008458?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtimon",
      "html_url": "https://github.com/jtimon",
      "followers_url": "https://api.github.com/users/jtimon/followers",
      "following_url": "https://api.github.com/users/jtimon/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtimon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtimon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtimon/subscriptions",
      "organizations_url": "https://api.github.com/users/jtimon/orgs",
      "repos_url": "https://api.github.com/users/jtimon/repos",
      "events_url": "https://api.github.com/users/jtimon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtimon/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "27afcd89db302d87168e0f504ee141dbf0e1ea22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/27afcd89db302d87168e0f504ee141dbf0e1ea22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/27afcd89db302d87168e0f504ee141dbf0e1ea22"
      }
    ],
    "stats": {
      "total": 182,
      "additions": 101,
      "deletions": 81
    },
    "files": [
      {
        "sha": "6ce431e236f67c347293b1d4ff90679569f784f5",
        "filename": "src/Makefile.am",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/Makefile.am",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/Makefile.am",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.am?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -92,6 +92,7 @@ BITCOIN_CORE_H = \\\n   compressor.h \\\n   consensus/consensus.h \\\n   consensus/params.h \\\n+  consensus/validation.h \\\n   core_io.h \\\n   eccryptoverify.h \\\n   ecwrapper.h \\"
      },
      {
        "sha": "c92bec4fae5a8db11e3a0fc3adbf406ad1ed061f",
        "filename": "src/consensus/validation.h",
        "status": "added",
        "additions": 80,
        "deletions": 0,
        "changes": 80,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/consensus/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/consensus/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/consensus/validation.h?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -0,0 +1,80 @@\n+// Copyright (c) 2009-2010 Satoshi Nakamoto\n+// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#ifndef BITCOIN_CONSENSUS_VALIDATION_H\n+#define BITCOIN_CONSENSUS_VALIDATION_H\n+\n+#include <string>\n+\n+/** \"reject\" message codes */\n+static const unsigned char REJECT_MALFORMED = 0x01;\n+static const unsigned char REJECT_INVALID = 0x10;\n+static const unsigned char REJECT_OBSOLETE = 0x11;\n+static const unsigned char REJECT_DUPLICATE = 0x12;\n+static const unsigned char REJECT_NONSTANDARD = 0x40;\n+static const unsigned char REJECT_DUST = 0x41;\n+static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n+static const unsigned char REJECT_CHECKPOINT = 0x43;\n+\n+/** Capture information about block/transaction validation */\n+class CValidationState {\n+private:\n+    enum mode_state {\n+        MODE_VALID,   //! everything ok\n+        MODE_INVALID, //! network rule violation (DoS value may be set)\n+        MODE_ERROR,   //! run-time error\n+    } mode;\n+    int nDoS;\n+    std::string strRejectReason;\n+    unsigned char chRejectCode;\n+    bool corruptionPossible;\n+public:\n+    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n+    bool DoS(int level, bool ret = false,\n+             unsigned char chRejectCodeIn=0, std::string strRejectReasonIn=\"\",\n+             bool corruptionIn=false) {\n+        chRejectCode = chRejectCodeIn;\n+        strRejectReason = strRejectReasonIn;\n+        corruptionPossible = corruptionIn;\n+        if (mode == MODE_ERROR)\n+            return ret;\n+        nDoS += level;\n+        mode = MODE_INVALID;\n+        return ret;\n+    }\n+    bool Invalid(bool ret = false,\n+                 unsigned char _chRejectCode=0, std::string _strRejectReason=\"\") {\n+        return DoS(0, ret, _chRejectCode, _strRejectReason);\n+    }\n+    bool Error(std::string strRejectReasonIn=\"\") {\n+        if (mode == MODE_VALID)\n+            strRejectReason = strRejectReasonIn;\n+        mode = MODE_ERROR;\n+        return false;\n+    }\n+    bool IsValid() const {\n+        return mode == MODE_VALID;\n+    }\n+    bool IsInvalid() const {\n+        return mode == MODE_INVALID;\n+    }\n+    bool IsError() const {\n+        return mode == MODE_ERROR;\n+    }\n+    bool IsInvalid(int &nDoSOut) const {\n+        if (IsInvalid()) {\n+            nDoSOut = nDoS;\n+            return true;\n+        }\n+        return false;\n+    }\n+    bool CorruptionPossible() const {\n+        return corruptionPossible;\n+    }\n+    unsigned char GetRejectCode() const { return chRejectCode; }\n+    std::string GetRejectReason() const { return strRejectReason; }\n+};\n+\n+#endif // BITCOIN_CONSENSUS_VALIDATION_H"
      },
      {
        "sha": "d3172093463a106b0597b9d270bd28977cdf980f",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -13,6 +13,7 @@\n #include \"amount.h\"\n #include \"checkpoints.h\"\n #include \"compat/sanity.h\"\n+#include \"consensus/validation.h\"\n #include \"key.h\"\n #include \"main.h\"\n #include \"miner.h\""
      },
      {
        "sha": "481eeaa9e43ab3319abaf8644ecc188fd10fa430",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -11,6 +11,7 @@\n #include \"chainparams.h\"\n #include \"checkpoints.h\"\n #include \"checkqueue.h\"\n+#include \"consensus/validation.h\"\n #include \"init.h\"\n #include \"merkleblock.h\"\n #include \"net.h\""
      },
      {
        "sha": "1386339fd1f5e562b4d441e0fa6dda0e48371b11",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 0,
        "deletions": 69,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -89,16 +89,6 @@ static const unsigned int DATABASE_FLUSH_INTERVAL = 24 * 60 * 60;\n /** Maximum length of reject messages. */\n static const unsigned int MAX_REJECT_MESSAGE_LENGTH = 111;\n \n-/** \"reject\" message codes */\n-static const unsigned char REJECT_MALFORMED = 0x01;\n-static const unsigned char REJECT_INVALID = 0x10;\n-static const unsigned char REJECT_OBSOLETE = 0x11;\n-static const unsigned char REJECT_DUPLICATE = 0x12;\n-static const unsigned char REJECT_NONSTANDARD = 0x40;\n-static const unsigned char REJECT_DUST = 0x41;\n-static const unsigned char REJECT_INSUFFICIENTFEE = 0x42;\n-static const unsigned char REJECT_CHECKPOINT = 0x43;\n-\n struct BlockHasher\n {\n     size_t operator()(const uint256& hash) const { return hash.GetCheapHash(); }\n@@ -457,65 +447,6 @@ class CBlockFileInfo\n      }\n };\n \n-/** Capture information about block/transaction validation */\n-class CValidationState {\n-private:\n-    enum mode_state {\n-        MODE_VALID,   //! everything ok\n-        MODE_INVALID, //! network rule violation (DoS value may be set)\n-        MODE_ERROR,   //! run-time error\n-    } mode;\n-    int nDoS;\n-    std::string strRejectReason;\n-    unsigned char chRejectCode;\n-    bool corruptionPossible;\n-public:\n-    CValidationState() : mode(MODE_VALID), nDoS(0), chRejectCode(0), corruptionPossible(false) {}\n-    bool DoS(int level, bool ret = false,\n-             unsigned char chRejectCodeIn=0, std::string strRejectReasonIn=\"\",\n-             bool corruptionIn=false) {\n-        chRejectCode = chRejectCodeIn;\n-        strRejectReason = strRejectReasonIn;\n-        corruptionPossible = corruptionIn;\n-        if (mode == MODE_ERROR)\n-            return ret;\n-        nDoS += level;\n-        mode = MODE_INVALID;\n-        return ret;\n-    }\n-    bool Invalid(bool ret = false,\n-                 unsigned char _chRejectCode=0, std::string _strRejectReason=\"\") {\n-        return DoS(0, ret, _chRejectCode, _strRejectReason);\n-    }\n-    bool Error(std::string strRejectReasonIn=\"\") {\n-        if (mode == MODE_VALID)\n-            strRejectReason = strRejectReasonIn;\n-        mode = MODE_ERROR;\n-        return false;\n-    }\n-    bool IsValid() const {\n-        return mode == MODE_VALID;\n-    }\n-    bool IsInvalid() const {\n-        return mode == MODE_INVALID;\n-    }\n-    bool IsError() const {\n-        return mode == MODE_ERROR;\n-    }\n-    bool IsInvalid(int &nDoSOut) const {\n-        if (IsInvalid()) {\n-            nDoSOut = nDoS;\n-            return true;\n-        }\n-        return false;\n-    }\n-    bool CorruptionPossible() const {\n-        return corruptionPossible;\n-    }\n-    unsigned char GetRejectCode() const { return chRejectCode; }\n-    std::string GetRejectReason() const { return strRejectReason; }\n-};\n-\n /** RAII wrapper for VerifyDB: Verify consistency of the block and coin databases */\n class CVerifyDB {\n public:"
      },
      {
        "sha": "daa94e59a939fcd0384d6a853e58e0f7b0b6946a",
        "filename": "src/miner.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/miner.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/miner.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/miner.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -8,6 +8,7 @@\n #include \"amount.h\"\n #include \"chainparams.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n #include \"hash.h\"\n #include \"main.h\"\n #include \"net.h\""
      },
      {
        "sha": "79528db2feaf06c8e65662a264d65b6989416d48",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -4,7 +4,9 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"checkpoints.h\"\n+#include \"consensus/validation.h\"\n #include \"main.h\"\n+#include \"primitives/transaction.h\"\n #include \"rpcserver.h\"\n #include \"sync.h\"\n #include \"util.h\""
      },
      {
        "sha": "d58d438573802f6ee01d4b17f89fc52d27bca24f",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -6,6 +6,7 @@\n #include \"amount.h\"\n #include \"chainparams.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n #include \"main.h\""
      },
      {
        "sha": "3e37b797e8de3914757b8ec8452aafd62e07dbdb",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -4,13 +4,14 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include \"base58.h\"\n-#include \"primitives/transaction.h\"\n+#include \"consensus/validation.h\"\n #include \"core_io.h\"\n #include \"init.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n #include \"merkleblock.h\"\n #include \"net.h\"\n+#include \"primitives/transaction.h\"\n #include \"rpcserver.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\""
      },
      {
        "sha": "51530c4de5a02873c1df19cff4c35d927f76a9d4",
        "filename": "src/test/checkblock_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 7,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/checkblock_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/checkblock_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/checkblock_tests.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -2,16 +2,11 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n-//\n-// Unit tests for block.CheckBlock()\n-//\n-\n-\n-\n #include \"clientversion.h\"\n+#include \"consensus/validation.h\"\n #include \"main.h\"\n-#include \"utiltime.h\"\n #include \"test/test_bitcoin.h\"\n+#include \"utiltime.h\"\n \n #include <cstdio>\n "
      },
      {
        "sha": "b6365b1b3a2aeef9ee4ba0e3b86e411a4d941c4e",
        "filename": "src/test/miner_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/miner_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/miner_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/miner_tests.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -2,6 +2,7 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"miner.h\"\n #include \"pubkey.h\""
      },
      {
        "sha": "87be2217c456fd2916724a5ab6a9636c985e37f4",
        "filename": "src/test/sighash_tests.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/sighash_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/sighash_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/sighash_tests.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -2,15 +2,16 @@\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n+#include \"consensus/validation.h\"\n #include \"data/sighash.json.h\"\n #include \"main.h\"\n #include \"random.h\"\n-#include \"serialize.h\"\n-#include \"script/script.h\"\n #include \"script/interpreter.h\"\n+#include \"script/script.h\"\n+#include \"serialize.h\"\n+#include \"test/test_bitcoin.h\"\n #include \"util.h\"\n #include \"version.h\"\n-#include \"test/test_bitcoin.h\"\n \n #include <iostream>\n "
      },
      {
        "sha": "d12535e43854bbafa1342878689ee60e4f63247c",
        "filename": "src/test/transaction_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/transaction_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/test/transaction_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/transaction_tests.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -7,12 +7,13 @@\n #include \"test/test_bitcoin.h\"\n \n #include \"clientversion.h\"\n+#include \"consensus/validation.h\"\n+#include \"core_io.h\"\n #include \"key.h\"\n #include \"keystore.h\"\n #include \"main.h\"\n #include \"script/script.h\"\n #include \"script/script_error.h\"\n-#include \"core_io.h\"\n \n #include <map>\n #include <string>"
      },
      {
        "sha": "1c16e2092e43b011389259011c84e944cb1b2695",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -7,6 +7,7 @@\n \n #include \"clientversion.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"policy/fees.h\"\n #include \"streams.h\""
      },
      {
        "sha": "afc3d7acd5d7b02b79cc52456d98a96851610c55",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -9,6 +9,7 @@\n #include \"checkpoints.h\"\n #include \"coincontrol.h\"\n #include \"consensus/consensus.h\"\n+#include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"net.h\"\n #include \"script/script.h\""
      },
      {
        "sha": "d16e7825d60b2796f2e0280b880a42e586d06f8c",
        "filename": "src/wallet/walletdb.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/wallet/walletdb.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/da29ecbcc6c003a603ee2312309d593708ec6fb2/src/wallet/walletdb.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/walletdb.cpp?ref=da29ecbcc6c003a603ee2312309d593708ec6fb2",
        "patch": "@@ -6,6 +6,7 @@\n #include \"wallet/walletdb.h\"\n \n #include \"base58.h\"\n+#include \"consensus/validation.h\"\n #include \"main.h\"\n #include \"protocol.h\"\n #include \"serialize.h\""
      }
    ]
  }
]