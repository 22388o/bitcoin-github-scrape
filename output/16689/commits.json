[
  {
    "sha": "353010849185cda53c97da1f5089565dccf6f16a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNTMwMTA4NDkxODVjZGE1M2M5N2RhMWY1MDg5NTY1ZGNjZjZmMTZh",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-08-23T22:31:57Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-10-09T18:22:02Z"
      },
      "message": "MOVEONLY : move RPC wallets helpers to TransactionDescriptionString",
      "tree": {
        "sha": "49b3cba03342f352f0f806a75a25e9f0556ef1e2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/49b3cba03342f352f0f806a75a25e9f0556ef1e2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/353010849185cda53c97da1f5089565dccf6f16a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/353010849185cda53c97da1f5089565dccf6f16a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/353010849185cda53c97da1f5089565dccf6f16a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/353010849185cda53c97da1f5089565dccf6f16a/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "e173d587e1c2391f774d08f28b7337cbe4ffcbe5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e173d587e1c2391f774d08f28b7337cbe4ffcbe5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e173d587e1c2391f774d08f28b7337cbe4ffcbe5"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 22,
      "deletions": 34
    },
    "files": [
      {
        "sha": "3dc96af48f0e0e937cce266ebe726d075688131d",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 34,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/353010849185cda53c97da1f5089565dccf6f16a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/353010849185cda53c97da1f5089565dccf6f16a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=353010849185cda53c97da1f5089565dccf6f16a",
        "patch": "@@ -1359,6 +1359,22 @@ static void ListTransactions(interfaces::Chain::Lock& locked_chain, CWallet* con\n     }\n }\n \n+static const std::string TransactionDescriptionString()\n+{\n+    return \"    \\\"confirmations\\\": n,                        (numeric) The number of confirmations for the transaction. Negative confirmations means the\\n\"\n+           \"                                                       transaction conflicted that many blocks ago.\\n\"\n+           \"    \\\"trusted\\\": xxx,                            (bool) Whether we consider the outputs of this unconfirmed transaction safe to spend.\\n\"\n+           \"    \\\"blockhash\\\": \\\"hashvalue\\\",                  (string) The block hash containing the transaction.\\n\"\n+           \"    \\\"blockindex\\\": n,                           (numeric) The index of the transaction in the block that includes it.\\n\"\n+           \"    \\\"blocktime\\\": xxx,                          (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n+           \"    \\\"txid\\\": \\\"transactionid\\\",                   (string) The transaction id.\\n\"\n+           \"    \\\"time\\\": xxx,                               (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n+           \"    \\\"timereceived\\\": xxx,                       (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n+           \"    \\\"comment\\\": \\\"...\\\",                          (string) If a comment is associated with the transaction, only present if not empty.\\n\"\n+           \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",    (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n+           \"                                                     may be unknown for unconfirmed transactions not in the mempool\\n\";\n+}\n+\n UniValue listtransactions(const JSONRPCRequest& request)\n {\n     std::shared_ptr<CWallet> const wallet = GetWalletForJSONRPCRequest(request);\n@@ -1394,19 +1410,8 @@ UniValue listtransactions(const JSONRPCRequest& request)\n             \"    \\\"vout\\\": n,                (numeric) the vout value\\n\"\n             \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                                         'send' category of transactions.\\n\"\n-            \"    \\\"confirmations\\\": n,       (numeric) The number of confirmations for the transaction. Negative confirmations indicate the\\n\"\n-            \"                                         transaction conflicts with the block chain\\n\"\n-            \"    \\\"trusted\\\": xxx,           (bool) Whether we consider the outputs of this unconfirmed transaction safe to spend.\\n\"\n-            \"    \\\"blockhash\\\": \\\"hashvalue\\\", (string) The block hash containing the transaction.\\n\"\n-            \"    \\\"blockindex\\\": n,          (numeric) The index of the transaction in the block that includes it.\\n\"\n-            \"    \\\"blocktime\\\": xxx,         (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\", (string) The transaction id.\\n\"\n-            \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n-            \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n-            \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n-            \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n-            \"                                                     may be unknown for unconfirmed transactions not in the mempool\\n\"\n-            \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n+            + TransactionDescriptionString()\n+            + \"    \\\"abandoned\\\": xxx          (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n             \"                                         'send' category of transactions.\\n\"\n             \"  }\\n\"\n             \"]\\n\"\n@@ -1526,17 +1531,8 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n             \"                                         for all other categories\\n\"\n             \"    \\\"vout\\\" : n,               (numeric) the vout value\\n\"\n             \"    \\\"fee\\\": x.xxx,             (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the 'send' category of transactions.\\n\"\n-            \"    \\\"confirmations\\\": n,       (numeric) The number of confirmations for the transaction.\\n\"\n-            \"                                          When it's < 0, it means the transaction conflicted that many blocks ago.\\n\"\n-            \"    \\\"blockhash\\\": \\\"hashvalue\\\",     (string) The block hash containing the transaction.\\n\"\n-            \"    \\\"blockindex\\\": n,          (numeric) The index of the transaction in the block that includes it.\\n\"\n-            \"    \\\"blocktime\\\": xxx,         (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n-            \"    \\\"txid\\\": \\\"transactionid\\\",  (string) The transaction id.\\n\"\n-            \"    \\\"time\\\": xxx,              (numeric) The transaction time in seconds since epoch (Jan 1 1970 GMT).\\n\"\n-            \"    \\\"timereceived\\\": xxx,      (numeric) The time received in seconds since epoch (Jan 1 1970 GMT).\\n\"\n-            \"    \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n-            \"                                                   may be unknown for unconfirmed transactions not in the mempool\\n\"\n-            \"    \\\"abandoned\\\": xxx,         (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions.\\n\"\n+            + TransactionDescriptionString()\n+            + \"    \\\"abandoned\\\": xxx,         (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the 'send' category of transactions.\\n\"\n             \"    \\\"comment\\\": \\\"...\\\",       (string) If a comment is associated with the transaction.\\n\"\n             \"    \\\"label\\\" : \\\"label\\\"       (string) A comment for the address/transaction, if any\\n\"\n             \"    \\\"to\\\": \\\"...\\\",            (string) If a comment to is associated with the transaction.\\n\"\n@@ -1658,16 +1654,8 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n             \"  \\\"amount\\\" : x.xxx,        (numeric) The transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n             \"  \\\"fee\\\": x.xxx,            (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                              'send' category of transactions.\\n\"\n-            \"  \\\"confirmations\\\" : n,     (numeric) The number of confirmations\\n\"\n-            \"  \\\"blockhash\\\" : \\\"hash\\\",  (string) The block hash\\n\"\n-            \"  \\\"blockindex\\\" : xx,       (numeric) The index of the transaction in the block that includes it\\n\"\n-            \"  \\\"blocktime\\\" : ttt,       (numeric) The time in seconds since epoch (1 Jan 1970 GMT)\\n\"\n-            \"  \\\"txid\\\" : \\\"transactionid\\\",   (string) The transaction id.\\n\"\n-            \"  \\\"time\\\" : ttt,            (numeric) The transaction time in seconds since epoch (1 Jan 1970 GMT)\\n\"\n-            \"  \\\"timereceived\\\" : ttt,    (numeric) The time received in seconds since epoch (1 Jan 1970 GMT)\\n\"\n-            \"  \\\"bip125-replaceable\\\": \\\"yes|no|unknown\\\",  (string) Whether this transaction could be replaced due to BIP125 (replace-by-fee);\\n\"\n-            \"                                                   may be unknown for unconfirmed transactions not in the mempool\\n\"\n-            \"  \\\"details\\\" : [\\n\"\n+            + TransactionDescriptionString()\n+            + \"  \\\"details\\\" : [\\n\"\n             \"    {\\n\"\n             \"      \\\"address\\\" : \\\"address\\\",          (string) The bitcoin address involved in the transaction\\n\"\n             \"      \\\"category\\\" :                      (string) The transaction category.\\n\""
      }
    ]
  },
  {
    "sha": "f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNGM4OTUzYjAwNzNlNmJjMzdhYmQxOGVjNGE1Y2JjM2VhOTcxOWEx",
    "commit": {
      "author": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-08-23T22:34:08Z"
      },
      "committer": {
        "name": "Antoine Riard",
        "email": "ariard@student.42.fr",
        "date": "2019-10-09T18:26:50Z"
      },
      "message": "Add missing fields in TransactionDescriptionString and others\n\nFields involvesWatchonly, generated, walletconflicts were missing\nin result description of listtransactions, listsinceblock,\ngettransaction\n\nAlign getttransaction fields which were odd compare to other rpc\nhelpers",
      "tree": {
        "sha": "d48264f221880d48aa678ec853190f8bc0b28754",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d48264f221880d48aa678ec853190f8bc0b28754"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "353010849185cda53c97da1f5089565dccf6f16a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/353010849185cda53c97da1f5089565dccf6f16a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/353010849185cda53c97da1f5089565dccf6f16a"
      }
    ],
    "stats": {
      "total": 58,
      "additions": 33,
      "deletions": 25
    },
    "files": [
      {
        "sha": "dc437e5cd8281d81e9ecaf78fb25ae069029cd7e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 33,
        "deletions": 25,
        "changes": 58,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=f4c8953b0073e6bc37abd18ec4a5cbc3ea9719a1",
        "patch": "@@ -1190,7 +1190,7 @@ static UniValue listreceivedbyaddress(const JSONRPCRequest& request)\n                 RPCResult{\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returned if imported addresses were involved in transaction\\n\"\n+            \"    \\\"involvesWatchonly\\\" : true,        (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n             \"    \\\"address\\\" : \\\"receivingaddress\\\",  (string) The receiving address\\n\"\n             \"    \\\"amount\\\" : x.xxx,                  (numeric) The total amount in \" + CURRENCY_UNIT + \" received by the address\\n\"\n             \"    \\\"confirmations\\\" : n,               (numeric) The number of confirmations of the most recent transaction included\\n\"\n@@ -1240,7 +1240,7 @@ static UniValue listreceivedbylabel(const JSONRPCRequest& request)\n                 RPCResult{\n             \"[\\n\"\n             \"  {\\n\"\n-            \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returned if imported addresses were involved in transaction\\n\"\n+            \"    \\\"involvesWatchonly\\\" : true,   (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n             \"    \\\"amount\\\" : x.xxx,             (numeric) The total amount received by addresses with this label\\n\"\n             \"    \\\"confirmations\\\" : n,          (numeric) The number of confirmations of the most recent transaction included\\n\"\n             \"    \\\"label\\\" : \\\"label\\\"           (string) The label of the receiving address. The default label is \\\"\\\".\\n\"\n@@ -1363,11 +1363,16 @@ static const std::string TransactionDescriptionString()\n {\n     return \"    \\\"confirmations\\\": n,                        (numeric) The number of confirmations for the transaction. Negative confirmations means the\\n\"\n            \"                                                       transaction conflicted that many blocks ago.\\n\"\n-           \"    \\\"trusted\\\": xxx,                            (bool) Whether we consider the outputs of this unconfirmed transaction safe to spend.\\n\"\n+           \"    \\\"generated\\\": xxx,                          (bool) Only present if transaction only input is a coinbase one.\\n\"\n+           \"    \\\"trusted\\\": xxx,                            (bool) Only present if we consider transaction to be trusted and so safe to spend from.\\n\"\n            \"    \\\"blockhash\\\": \\\"hashvalue\\\",                  (string) The block hash containing the transaction.\\n\"\n            \"    \\\"blockindex\\\": n,                           (numeric) The index of the transaction in the block that includes it.\\n\"\n            \"    \\\"blocktime\\\": xxx,                          (numeric) The block time in seconds since epoch (1 Jan 1970 GMT).\\n\"\n            \"    \\\"txid\\\": \\\"transactionid\\\",                   (string) The transaction id.\\n\"\n+           \"    \\\"walletconflicts\\\": [                       (array) Conflicting transaction ids.\\n\"\n+           \"      \\\"txid\\\",                                  (string) The transaction id.\\n\"\n+           \"      ...\\n\"\n+           \"    ],\\n\"\n            \"    \\\"time\\\": xxx,                               (numeric) The transaction time in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n            \"    \\\"timereceived\\\": xxx,                       (numeric) The time received in seconds since epoch (midnight Jan 1 1970 GMT).\\n\"\n            \"    \\\"comment\\\": \\\"...\\\",                          (string) If a comment is associated with the transaction, only present if not empty.\\n\"\n@@ -1397,6 +1402,7 @@ UniValue listtransactions(const JSONRPCRequest& request)\n                 RPCResult{\n             \"[\\n\"\n             \"  {\\n\"\n+            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n             \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n             \"    \\\"category\\\":               (string) The transaction category.\\n\"\n             \"                \\\"send\\\"                  Transactions sent.\\n\"\n@@ -1520,6 +1526,7 @@ static UniValue listsinceblock(const JSONRPCRequest& request)\n                 RPCResult{\n             \"{\\n\"\n             \"  \\\"transactions\\\": [\\n\"\n+            \"    \\\"involvesWatchonly\\\": xxx, (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n             \"    \\\"address\\\":\\\"address\\\",    (string) The bitcoin address of the transaction.\\n\"\n             \"    \\\"category\\\":               (string) The transaction category.\\n\"\n             \"                \\\"send\\\"                  Transactions sent.\\n\"\n@@ -1651,32 +1658,33 @@ static UniValue gettransaction(const JSONRPCRequest& request)\n                 },\n                 RPCResult{\n             \"{\\n\"\n-            \"  \\\"amount\\\" : x.xxx,        (numeric) The transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"  \\\"fee\\\": x.xxx,            (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n+            \"    \\\"amount\\\" : x.xxx,        (numeric) The transaction amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"    \\\"fee\\\": x.xxx,            (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                              'send' category of transactions.\\n\"\n             + TransactionDescriptionString()\n-            + \"  \\\"details\\\" : [\\n\"\n-            \"    {\\n\"\n-            \"      \\\"address\\\" : \\\"address\\\",          (string) The bitcoin address involved in the transaction\\n\"\n-            \"      \\\"category\\\" :                      (string) The transaction category.\\n\"\n-            \"                   \\\"send\\\"                  Transactions sent.\\n\"\n-            \"                   \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n-            \"                   \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n-            \"                   \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n-            \"                   \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n-            \"      \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n-            \"      \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n-            \"      \\\"vout\\\" : n,                       (numeric) the vout value\\n\"\n-            \"      \\\"fee\\\": x.xxx,                     (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n+            + \"    \\\"details\\\" : [\\n\"\n+            \"      {\\n\"\n+            \"        \\\"involvesWatchonly\\\": xxx,         (bool) Only returns true if imported addresses were involved in transaction.\\n\"\n+            \"        \\\"address\\\" : \\\"address\\\",          (string) The bitcoin address involved in the transaction\\n\"\n+            \"        \\\"category\\\" :                      (string) The transaction category.\\n\"\n+            \"                     \\\"send\\\"                  Transactions sent.\\n\"\n+            \"                     \\\"receive\\\"               Non-coinbase transactions received.\\n\"\n+            \"                     \\\"generate\\\"              Coinbase transactions received with more than 100 confirmations.\\n\"\n+            \"                     \\\"immature\\\"              Coinbase transactions received with 100 or fewer confirmations.\\n\"\n+            \"                     \\\"orphan\\\"                Orphaned coinbase transactions received.\\n\"\n+            \"        \\\"amount\\\" : x.xxx,                 (numeric) The amount in \" + CURRENCY_UNIT + \"\\n\"\n+            \"        \\\"label\\\" : \\\"label\\\",              (string) A comment for the address/transaction, if any\\n\"\n+            \"        \\\"vout\\\" : n,                       (numeric) the vout value\\n\"\n+            \"        \\\"fee\\\": x.xxx,                     (numeric) The amount of the fee in \" + CURRENCY_UNIT + \". This is negative and only available for the \\n\"\n             \"                                           'send' category of transactions.\\n\"\n-            \"      \\\"abandoned\\\": xxx                  (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n+            \"        \\\"abandoned\\\": xxx                  (bool) 'true' if the transaction has been abandoned (inputs are respendable). Only available for the \\n\"\n             \"                                           'send' category of transactions.\\n\"\n-            \"    }\\n\"\n-            \"    ,...\\n\"\n-            \"  ],\\n\"\n-            \"  \\\"hex\\\" : \\\"data\\\"         (string) Raw data for transaction\\n\"\n-            \"  \\\"decoded\\\" : transaction         (json object) Optional, the decoded transaction (only present when `verbose` is passed), equivalent to the\\n\"\n-            \"                                                RPC decoderawtransaction method, or the RPC getrawtransaction method when `verbose` is passed.\\n\"\n+            \"      }\\n\"\n+            \"      ,...\\n\"\n+            \"    ],\\n\"\n+            \"    \\\"hex\\\" : \\\"data\\\"         (string) Raw data for transaction\\n\"\n+            \"    \\\"decoded\\\" : transaction         (json object) Optional, the decoded transaction (only present when `verbose` is passed), equivalent to the\\n\"\n+            \"                                                  RPC decoderawtransaction method, or the RPC getrawtransaction method when `verbose` is passed.\\n\"\n             \"}\\n\"\n                 },\n                 RPCExamples{"
      }
    ]
  }
]