[
  {
    "sha": "52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjIyN2Y3YjNkN2M0MTI1M2IzMTQ5ZjRhN2M2MmYwZGY5YmY4YWFj",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-19T08:46:17Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-20T06:38:05Z"
      },
      "message": "Removed main.h dependency from rpcserver.cpp",
      "tree": {
        "sha": "cfb343a33358d90a30f31e3db2dfce337f3c9c68",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cfb343a33358d90a30f31e3db2dfce337f3c9c68"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84d13eef883769451ba9f77b56d9738d24474d5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84d13eef883769451ba9f77b56d9738d24474d5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84d13eef883769451ba9f77b56d9738d24474d5c"
      }
    ],
    "stats": {
      "total": 187,
      "additions": 151,
      "deletions": 36
    },
    "files": [
      {
        "sha": "7166954c0689bb597511b08763969cff860e4018",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 0,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -95,6 +95,7 @@ Value getblockcount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblockcount\", \"\")\n         );\n \n+    LOCK(cs_main);\n     return chainActive.Height();\n }\n \n@@ -111,6 +112,7 @@ Value getbestblockhash(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getbestblockhash\", \"\")\n         );\n \n+    LOCK(cs_main);\n     return chainActive.Tip()->GetBlockHash().GetHex();\n }\n \n@@ -127,6 +129,7 @@ Value getdifficulty(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getdifficulty\", \"\")\n         );\n \n+    LOCK(cs_main);\n     return GetDifficulty();\n }\n \n@@ -163,6 +166,8 @@ Value getrawmempool(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getrawmempool\", \"true\")\n         );\n \n+    LOCK(cs_main);\n+\n     bool fVerbose = false;\n     if (params.size() > 0)\n         fVerbose = params[0].get_bool();\n@@ -223,6 +228,8 @@ Value getblockhash(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblockhash\", \"1000\")\n         );\n \n+    LOCK(cs_main);\n+\n     int nHeight = params[0].get_int();\n     if (nHeight < 0 || nHeight > chainActive.Height())\n         throw runtime_error(\"Block number out of range.\");\n@@ -267,6 +274,8 @@ Value getblock(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblock\", \"\\\"00000000c937983704a73af28acdec37b049d214adbda81d7e2a3dd146f6ed09\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     std::string strHash = params[0].get_str();\n     uint256 hash(strHash);\n \n@@ -316,6 +325,8 @@ Value gettxoutsetinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"gettxoutsetinfo\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     Object ret;\n \n     CCoinsStats stats;\n@@ -369,6 +380,8 @@ Value gettxout(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"gettxout\", \"\\\"txid\\\", 1\")\n         );\n \n+    LOCK(cs_main);\n+\n     Object ret;\n \n     std::string strHash = params[0].get_str();\n@@ -425,6 +438,8 @@ Value verifychain(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"verifychain\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     int nCheckLevel = GetArg(\"-checklevel\", 3);\n     int nCheckDepth = GetArg(\"-checkblocks\", 288);\n     if (params.size() > 0)\n@@ -456,6 +471,8 @@ Value getblockchaininfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblockchaininfo\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     Object obj;\n     obj.push_back(Pair(\"chain\",                 Params().NetworkIDString()));\n     obj.push_back(Pair(\"blocks\",                (int)chainActive.Height()));\n@@ -507,6 +524,8 @@ Value getchaintips(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getchaintips\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     /* Build up a list of chain tips.  We start with the list of all\n        known blocks, and successively remove blocks that appear as pprev\n        of another block.  */"
      },
      {
        "sha": "6a9396f864810adcbb68cc6a27fb626944214e5c",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 26,
        "deletions": 9,
        "changes": 35,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -85,6 +85,7 @@ Value getnetworkhashps(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getnetworkhashps\", \"\")\n        );\n \n+    LOCK(cs_main);\n     return GetNetworkHashPS(params.size() > 0 ? params[0].get_int() : 120, params.size() > 1 ? params[1].get_int() : -1);\n }\n \n@@ -104,6 +105,7 @@ Value getgenerate(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getgenerate\", \"\")\n         );\n \n+    LOCK(cs_main);\n     return GetBoolArg(\"-gen\", false);\n }\n \n@@ -198,6 +200,8 @@ Value gethashespersec(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"gethashespersec\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     if (GetTimeMillis() - nHPSTimerStart > 8000)\n         return (int64_t)0;\n     return (int64_t)dHashesPerSec;\n@@ -230,17 +234,26 @@ Value getmininginfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getmininginfo\", \"\")\n         );\n \n+\n     Object obj;\n-    obj.push_back(Pair(\"blocks\",           (int)chainActive.Height()));\n-    obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n-    obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n-    obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n-    obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n-    obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n+    {\n+        LOCK(cs_main);\n+        obj.push_back(Pair(\"blocks\",           (int)chainActive.Height()));\n+        obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n+        obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n+        obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n+        obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n+        obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n+    }\n+\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n-    obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n-    obj.push_back(Pair(\"testnet\",          Params().TestnetToBeDeprecatedFieldRPC()));\n-    obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n+\n+    {\n+        LOCK(cs_main);\n+        obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n+        obj.push_back(Pair(\"testnet\",          Params().TestnetToBeDeprecatedFieldRPC()));\n+        obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n+    }\n #ifdef ENABLE_WALLET\n     obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n     obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));\n@@ -270,6 +283,8 @@ Value prioritisetransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"prioritisetransaction\", \"\\\"txid\\\", 0.0, 0.00010000\")\n         );\n \n+    LOCK(cs_main);\n+\n     uint256 hash;\n     hash.SetHex(params[0].get_str());\n \n@@ -344,6 +359,8 @@ Value getblocktemplate(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getblocktemplate\", \"\")\n          );\n \n+    LOCK(cs_main);\n+\n     std::string strMode = \"template\";\n     Value lpval = Value::null;\n     if (params.size() > 0)"
      },
      {
        "sha": "3510766404dbcc02910972eade220c77b4bdbb9c",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -70,6 +70,11 @@ Value getinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getinfo\", \"\")\n         );\n \n+    ENTER_CRITICAL_SECTION(cs_main);\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) ENTER_CRITICAL_SECTION(pwalletMain->cs_wallet);\n+#endif\n+\n     proxyType proxy;\n     GetProxy(NET_IPV4, proxy);\n \n@@ -99,6 +104,12 @@ Value getinfo(const Array& params, bool fHelp)\n #endif\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n+\n+#ifdef ENABLE_WALLET\n+    if (pwalletMain) LEAVE_CRITICAL_SECTION(pwalletMain->cs_wallet);\n+#endif\n+    LEAVE_CRITICAL_SECTION(cs_main);\n+\n     return obj;\n }\n \n@@ -172,6 +183,8 @@ Value validateaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     CBitcoinAddress address(params[0].get_str());\n     bool isValid = address.IsValid();\n \n@@ -325,6 +338,8 @@ Value verifymessage(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"verifymessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"signature\\\", \\\"my message\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     string strAddress  = params[0].get_str();\n     string strSign     = params[1].get_str();\n     string strMessage  = params[2].get_str();"
      },
      {
        "sha": "5134a94dc3394ded79eac27ce5e6c125284d9cc3",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -33,7 +33,8 @@ Value getconnectioncount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getconnectioncount\", \"\")\n         );\n \n-    LOCK(cs_vNodes);\n+    LOCK2(cs_main, cs_vNodes);\n+\n     return (int)vNodes.size();\n }\n \n@@ -51,7 +52,8 @@ Value ping(const Array& params, bool fHelp)\n         );\n \n     // Request that each node send a ping during next message processing pass\n-    LOCK(cs_vNodes);\n+    LOCK2(cs_main, cs_vNodes);\n+\n     BOOST_FOREACH(CNode* pNode, vNodes) {\n         pNode->fPingQueued = true;\n     }\n@@ -111,6 +113,8 @@ Value getpeerinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getpeerinfo\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     vector<CNodeStats> vstats;\n     CopyNodeStats(vstats);\n \n@@ -408,6 +412,8 @@ Value getnetworkinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getnetworkinfo\", \"\")\n         );\n \n+    LOCK(cs_main);\n+\n     Object obj;\n     obj.push_back(Pair(\"version\",       CLIENT_VERSION));\n     obj.push_back(Pair(\"subversion\","
      },
      {
        "sha": "9860cdd34616ece33b0a64dc302a0e644bec2dea",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -171,6 +171,8 @@ Value getrawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getrawtransaction\", \"\\\"mytxid\\\", 1\")\n         );\n \n+    LOCK(cs_main);\n+\n     uint256 hash = ParseHashV(params[0], \"parameter 1\");\n \n     bool fVerbose = false;\n@@ -336,6 +338,8 @@ Value createrawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"createrawtransaction\", \"\\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"myid\\\\\\\",\\\\\\\"vout\\\\\\\":0}]\\\", \\\"{\\\\\\\"address\\\\\\\":0.01}\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     RPCTypeCheck(params, list_of(array_type)(obj_type));\n \n     Array inputs = params[0].get_array();\n@@ -430,6 +434,8 @@ Value decoderawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"decoderawtransaction\", \"\\\"hexstring\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     RPCTypeCheck(params, list_of(str_type));\n \n     CTransaction tx;\n@@ -468,6 +474,8 @@ Value decodescript(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"decodescript\", \"\\\"hexstring\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     RPCTypeCheck(params, list_of(str_type));\n \n     Object r;\n@@ -534,6 +542,8 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"signrawtransaction\", \"\\\"myhex\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     RPCTypeCheck(params, list_of(str_type)(array_type)(array_type)(str_type), true);\n \n     vector<unsigned char> txData(ParseHexV(params[0], \"argument 1\"));\n@@ -722,6 +732,8 @@ Value sendrawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"sendrawtransaction\", \"\\\"signedhex\\\"\")\n         );\n \n+    LOCK(cs_main);\n+\n     RPCTypeCheck(params, list_of(str_type)(bool_type));\n \n     // parse hex string from parameter"
      },
      {
        "sha": "9e9da69b695aaec9871b1ca5e25c349bdd31c65a",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 23,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -7,9 +7,9 @@\n \n #include \"base58.h\"\n #include \"init.h\"\n-#include \"main.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"random.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif\n@@ -732,7 +732,7 @@ void StopRPCThreads()\n     deadlineTimers.clear();\n \n     rpc_io_service->stop();\n-    cvBlockChange.notify_all();\n+    //cvBlockChange.notify_all();\n     if (rpc_worker_group != NULL)\n         rpc_worker_group->join_all();\n     delete rpc_dummy_work; rpc_dummy_work = NULL;\n@@ -946,34 +946,15 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n #endif\n \n     // Observe safe mode\n-    string strWarning = GetWarnings(\"rpc\");\n+    string strWarning = \"\"; //GetWarnings(\"rpc\");\n     if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", false) &&\n         !pcmd->okSafeMode)\n         throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n \n     try\n     {\n         // Execute\n-        Value result;\n-        {\n-            if (pcmd->threadSafe)\n-                result = pcmd->actor(params, false);\n-#ifdef ENABLE_WALLET\n-            else if (!pwalletMain) {\n-                LOCK(cs_main);\n-                result = pcmd->actor(params, false);\n-            } else {\n-                LOCK2(cs_main, pwalletMain->cs_wallet);\n-                result = pcmd->actor(params, false);\n-            }\n-#else // ENABLE_WALLET\n-            else {\n-                LOCK(cs_main);\n-                result = pcmd->actor(params, false);\n-            }\n-#endif // !ENABLE_WALLET\n-        }\n-        return result;\n+        return pcmd->actor(params, false);\n     }\n     catch (std::exception& e)\n     {"
      },
      {
        "sha": "13a2275bd0bbef925c49b13f72af0ff895132ee3",
        "filename": "src/rpcwallet.cpp",
        "status": "modified",
        "additions": 67,
        "deletions": 2,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac/src/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcwallet.cpp?ref=52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "patch": "@@ -92,6 +92,8 @@ Value getnewaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getnewaddress\", \"\\\"myaccount\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount;\n     if (params.size() > 0)\n@@ -166,13 +168,14 @@ Value getaccountaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getaccountaddress\", \"\\\"myaccount\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Parse the account first so we don't generate a key if there's an error\n     string strAccount = AccountFromValue(params[0]);\n \n     Value ret;\n \n     ret = GetAccountAddress(strAccount).ToString();\n-\n     return ret;\n }\n \n@@ -191,6 +194,8 @@ Value getrawchangeaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getrawchangeaddress\", \"\")\n        );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (!pwalletMain->IsLocked())\n         pwalletMain->TopUpKeyPool();\n \n@@ -221,11 +226,12 @@ Value setaccount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"setaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"tabby\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n \n-\n     string strAccount;\n     if (params.size() > 1)\n         strAccount = AccountFromValue(params[1]);\n@@ -264,6 +270,8 @@ Value getaccount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getaccount\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n@@ -294,6 +302,8 @@ Value getaddressesbyaccount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getaddressesbyaccount\", \"\\\"tabby\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount = AccountFromValue(params[0]);\n \n     // Find all addresses that have the given account\n@@ -331,6 +341,8 @@ Value sendtoaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"sendtoaddress\", \"\\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.1, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBitcoinAddress address(params[0].get_str());\n     if (!address.IsValid())\n         throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Invalid Bitcoin address\");\n@@ -379,6 +391,8 @@ Value listaddressgroupings(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listaddressgroupings\", \"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Array jsonGroupings;\n     map<CTxDestination, CAmount> balances = pwalletMain->GetAddressBalances();\n     BOOST_FOREACH(set<CTxDestination> grouping, pwalletMain->GetAddressGroupings())\n@@ -424,6 +438,8 @@ Value signmessage(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"signmessage\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", \\\"my message\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     string strAddress = params[0].get_str();\n@@ -474,6 +490,8 @@ Value getreceivedbyaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getreceivedbyaddress\", \"\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\", 6\")\n        );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Bitcoin address\n     CBitcoinAddress address = CBitcoinAddress(params[0].get_str());\n     if (!address.IsValid())\n@@ -527,6 +545,8 @@ Value getreceivedbyaccount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getreceivedbyaccount\", \"\\\"tabby\\\", 6\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Minimum confirmations\n     int nMinDepth = 1;\n     if (params.size() > 1)\n@@ -617,6 +637,8 @@ Value getbalance(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getbalance\", \"\\\"tabby\\\", 6\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (params.size() == 0)\n         return  ValueFromAmount(pwalletMain->GetBalance());\n \n@@ -669,6 +691,9 @@ Value getunconfirmedbalance(const Array &params, bool fHelp)\n         throw runtime_error(\n                 \"getunconfirmedbalance\\n\"\n                 \"Returns the server's total unconfirmed balance\\n\");\n+\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     return ValueFromAmount(pwalletMain->GetUnconfirmedBalance());\n }\n \n@@ -695,6 +720,8 @@ Value movecmd(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"move\", \"\\\"timotei\\\", \\\"akiko\\\", 0.01, 6, \\\"happy birthday!\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strFrom = AccountFromValue(params[0]);\n     string strTo = AccountFromValue(params[1]);\n     CAmount nAmount = AmountFromValue(params[2]);\n@@ -767,6 +794,8 @@ Value sendfrom(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"sendfrom\", \"\\\"tabby\\\", \\\"1M72Sfpbz1BPpXFHz9m3CdqATR44Jvaydd\\\", 0.01, 6, \\\"donation\\\", \\\"seans outpost\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount = AccountFromValue(params[0]);\n     CBitcoinAddress address(params[1].get_str());\n     if (!address.IsValid())\n@@ -827,6 +856,8 @@ Value sendmany(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"sendmany\", \"\\\"tabby\\\", \\\"{\\\\\\\"1D1ZrZNe3JUo7ZycKEYQQiQAWd9y54F4XZ\\\\\\\":0.01,\\\\\\\"1353tsE8YMTA4EuV7dgUXGjNFf9KpVvKHz\\\\\\\":0.02}\\\", 6, \\\"testing\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount = AccountFromValue(params[0]);\n     Object sendTo = params[1].get_obj();\n     int nMinDepth = 1;\n@@ -912,6 +943,8 @@ Value addmultisigaddress(const Array& params, bool fHelp)\n         throw runtime_error(msg);\n     }\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount;\n     if (params.size() > 2)\n         strAccount = AccountFromValue(params[2]);\n@@ -1087,6 +1120,8 @@ Value listreceivedbyaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listreceivedbyaddress\", \"6, true, true\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     return ListReceived(params, false);\n }\n \n@@ -1118,6 +1153,8 @@ Value listreceivedbyaccount(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listreceivedbyaccount\", \"6, true, true\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     return ListReceived(params, true);\n }\n \n@@ -1272,6 +1309,8 @@ Value listtransactions(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listtransactions\", \"\\\"tabby\\\", 20, 100\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strAccount = \"*\";\n     if (params.size() > 0)\n         strAccount = params[0].get_str();\n@@ -1352,6 +1391,8 @@ Value listaccounts(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listaccounts\", \"6\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     int nMinDepth = 1;\n     if (params.size() > 0)\n         nMinDepth = params[0].get_int();\n@@ -1440,6 +1481,8 @@ Value listsinceblock(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listsinceblock\", \"\\\"000000000000000bacf66f7497b7dc45ef753ee9a7d38571037cdb1a57f663ad\\\", 6\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CBlockIndex *pindex = NULL;\n     int target_confirms = 1;\n     isminefilter filter = ISMINE_SPENDABLE;\n@@ -1526,6 +1569,8 @@ Value gettransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"gettransaction\", \"\\\"1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     uint256 hash;\n     hash.SetHex(params[0].get_str());\n \n@@ -1574,6 +1619,8 @@ Value backupwallet(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"backupwallet\", \"\\\"backup.dat\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     string strDest = params[0].get_str();\n     if (!BackupWallet(*pwalletMain, strDest))\n         throw JSONRPCError(RPC_WALLET_ERROR, \"Error: Wallet backup failed!\");\n@@ -1596,6 +1643,8 @@ Value keypoolrefill(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"keypoolrefill\", \"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // 0 is interpreted by TopUpKeyPool() as the default keypool size given by -keypool\n     unsigned int kpSize = 0;\n     if (params.size() > 0) {\n@@ -1643,6 +1692,8 @@ Value walletpassphrase(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"walletpassphrase\", \"\\\"my pass phrase\\\", 60\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp)\n         return true;\n     if (!pwalletMain->IsCrypted())\n@@ -1690,6 +1741,8 @@ Value walletpassphrasechange(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"walletpassphrasechange\", \"\\\"old one\\\", \\\"new one\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp)\n         return true;\n     if (!pwalletMain->IsCrypted())\n@@ -1736,6 +1789,8 @@ Value walletlock(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"walletlock\", \"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp)\n         return true;\n     if (!pwalletMain->IsCrypted())\n@@ -1777,6 +1832,8 @@ Value encryptwallet(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"encryptwallet\", \"\\\"my pass phrase\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (fHelp)\n         return true;\n     if (pwalletMain->IsCrypted())\n@@ -1841,6 +1898,8 @@ Value lockunspent(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"lockunspent\", \"false, \\\"[{\\\\\\\"txid\\\\\\\":\\\\\\\"a08e6907dbbd3d809776dbfc5d82e371b764ed838b5655e72f463568df1aadf0\\\\\\\",\\\\\\\"vout\\\\\\\":1}]\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     if (params.size() == 1)\n         RPCTypeCheck(params, list_of(bool_type));\n     else\n@@ -1910,6 +1969,8 @@ Value listlockunspent(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"listlockunspent\", \"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     vector<COutPoint> vOutpts;\n     pwalletMain->ListLockedCoins(vOutpts);\n \n@@ -1941,6 +2002,8 @@ Value settxfee(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"settxfee\", \"0.00001\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     // Amount\n     CAmount nAmount = 0;\n     if (params[0].get_real() != 0.0)\n@@ -1970,6 +2033,8 @@ Value getwalletinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getwalletinfo\", \"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     Object obj;\n     obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));\n     obj.push_back(Pair(\"balance\",       ValueFromAmount(pwalletMain->GetBalance())));"
      }
    ]
  },
  {
    "sha": "c8282311830336b1379ce2eb365526232e6ed023",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjODI4MjMxMTgzMDMzNmIxMzc5Y2UyZWIzNjU1MjYyMzJlNmVkMDIz",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:06:37Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:49:39Z"
      },
      "message": "Enable conditional locking.",
      "tree": {
        "sha": "d29ef85eb380068dde0f48570244cec9dd15d644",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d29ef85eb380068dde0f48570244cec9dd15d644"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c8282311830336b1379ce2eb365526232e6ed023",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8282311830336b1379ce2eb365526232e6ed023",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c8282311830336b1379ce2eb365526232e6ed023",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8282311830336b1379ce2eb365526232e6ed023/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/52227f7b3d7c41253b3149f4a7c62f0df9bf8aac"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 11,
      "deletions": 0
    },
    "files": [
      {
        "sha": "e018ec4e2327634ac4f8227ed579898ca260ef26",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c8282311830336b1379ce2eb365526232e6ed023/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c8282311830336b1379ce2eb365526232e6ed023/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=c8282311830336b1379ce2eb365526232e6ed023",
        "patch": "@@ -142,6 +142,17 @@ class CMutexLock\n             Enter(pszName, pszFile, nLine);\n     }\n \n+    CMutexLock(Mutex* pmutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false)\n+    {\n+        if (!pmutexIn) return;\n+\n+        lock = boost::unique_lock<Mutex>(*pmutexIn, boost::defer_lock);\n+        if (fTry)\n+            TryEnter(pszName, pszFile, nLine);\n+        else\n+            Enter(pszName, pszFile, nLine);\n+    }\n+\n     ~CMutexLock()\n     {\n         if (lock.owns_lock())"
      }
    ]
  },
  {
    "sha": "522ad03da56288abaa8f1043292f85cc77cd8c55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MjJhZDAzZGE1NjI4OGFiYWE4ZjEwNDMyOTJmODVjYzc3Y2Q4YzU1",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:07:11Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T04:00:21Z"
      },
      "message": "Use conditional lock in signrawtransaction.",
      "tree": {
        "sha": "51566016452435930084c6d5bc0a26be28b4bc7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/51566016452435930084c6d5bc0a26be28b4bc7c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/522ad03da56288abaa8f1043292f85cc77cd8c55",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/522ad03da56288abaa8f1043292f85cc77cd8c55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/522ad03da56288abaa8f1043292f85cc77cd8c55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/522ad03da56288abaa8f1043292f85cc77cd8c55/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c8282311830336b1379ce2eb365526232e6ed023",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c8282311830336b1379ce2eb365526232e6ed023",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c8282311830336b1379ce2eb365526232e6ed023"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "55d995afde2216c13ecccc7833f9ce55ebde8f65",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/522ad03da56288abaa8f1043292f85cc77cd8c55/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/522ad03da56288abaa8f1043292f85cc77cd8c55/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=522ad03da56288abaa8f1043292f85cc77cd8c55",
        "patch": "@@ -542,7 +542,11 @@ Value signrawtransaction(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"signrawtransaction\", \"\\\"myhex\\\"\")\n         );\n \n+#ifdef ENABLE_WALLET\n+    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+#else\n     LOCK(cs_main);\n+#endif\n \n     RPCTypeCheck(params, list_of(str_type)(array_type)(array_type)(str_type), true);\n \n@@ -601,7 +605,7 @@ Value signrawtransaction(const Array& params, bool fHelp)\n         }\n     }\n #ifdef ENABLE_WALLET\n-    else\n+    else if (pwalletMain)\n         EnsureWalletIsUnlocked();\n #endif\n "
      }
    ]
  },
  {
    "sha": "b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2QwYmM3MmRiM2ZhMjliNzRhYzk0NDY3ZGNjZjVkMDQ0OGNhZjlm",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:20:08Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T04:00:21Z"
      },
      "message": "Use conditional lock in getinfo and validateaddress.",
      "tree": {
        "sha": "c26f6e489debc953841a9160378b6c3557863b65",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c26f6e489debc953841a9160378b6c3557863b65"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "522ad03da56288abaa8f1043292f85cc77cd8c55",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/522ad03da56288abaa8f1043292f85cc77cd8c55",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/522ad03da56288abaa8f1043292f85cc77cd8c55"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 7,
      "deletions": 8
    },
    "files": [
      {
        "sha": "bf73374ac1e9112342ac6ccfac80660decffaa02",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 8,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
        "patch": "@@ -70,9 +70,10 @@ Value getinfo(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"getinfo\", \"\")\n         );\n \n-    ENTER_CRITICAL_SECTION(cs_main);\n #ifdef ENABLE_WALLET\n-    if (pwalletMain) ENTER_CRITICAL_SECTION(pwalletMain->cs_wallet);\n+    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+#else\n+    LOCK(cs_main);\n #endif\n \n     proxyType proxy;\n@@ -104,12 +105,6 @@ Value getinfo(const Array& params, bool fHelp)\n #endif\n     obj.push_back(Pair(\"relayfee\",      ValueFromAmount(::minRelayTxFee.GetFeePerK())));\n     obj.push_back(Pair(\"errors\",        GetWarnings(\"statusbar\")));\n-\n-#ifdef ENABLE_WALLET\n-    if (pwalletMain) LEAVE_CRITICAL_SECTION(pwalletMain->cs_wallet);\n-#endif\n-    LEAVE_CRITICAL_SECTION(cs_main);\n-\n     return obj;\n }\n \n@@ -183,7 +178,11 @@ Value validateaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"validateaddress\", \"\\\"1PSSGeFHDnKNxiEyFrD1wcEaHr9hrQDDWc\\\"\")\n         );\n \n+#ifdef ENABLE_WALLET\n+    LOCK2(cs_main, pwalletMain ? &pwalletMain->cs_wallet : NULL);\n+#else\n     LOCK(cs_main);\n+#endif\n \n     CBitcoinAddress address(params[0].get_str());\n     bool isValid = address.IsValid();"
      }
    ]
  },
  {
    "sha": "a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNDE5ZDA5ZmNiNDFhYzk5MDU0YjFmOWViNDBmOWI5MDI2YmVjYTRi",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:20:50Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T04:00:21Z"
      },
      "message": "Allow recursive locking in getmininginfo.",
      "tree": {
        "sha": "5901accd6aa63b8df00ce6f58ade1d9e7be2b910",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5901accd6aa63b8df00ce6f58ade1d9e7be2b910"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a419d09fcb41ac99054b1f9eb40f9b9026beca4b/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3d0bc72db3fa29b74ac94467dccf5d0448caf9f"
      }
    ],
    "stats": {
      "total": 28,
      "additions": 11,
      "deletions": 17
    },
    "files": [
      {
        "sha": "26f43772baaf61d72e562df063debf12d3b13214",
        "filename": "src/rpcmining.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 17,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a419d09fcb41ac99054b1f9eb40f9b9026beca4b/src/rpcmining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a419d09fcb41ac99054b1f9eb40f9b9026beca4b/src/rpcmining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmining.cpp?ref=a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
        "patch": "@@ -235,25 +235,19 @@ Value getmininginfo(const Array& params, bool fHelp)\n         );\n \n \n-    Object obj;\n-    {\n-        LOCK(cs_main);\n-        obj.push_back(Pair(\"blocks\",           (int)chainActive.Height()));\n-        obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n-        obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n-        obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n-        obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n-        obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n-    }\n+    LOCK(cs_main);\n \n+    Object obj;\n+    obj.push_back(Pair(\"blocks\",           (int)chainActive.Height()));\n+    obj.push_back(Pair(\"currentblocksize\", (uint64_t)nLastBlockSize));\n+    obj.push_back(Pair(\"currentblocktx\",   (uint64_t)nLastBlockTx));\n+    obj.push_back(Pair(\"difficulty\",       (double)GetDifficulty()));\n+    obj.push_back(Pair(\"errors\",           GetWarnings(\"statusbar\")));\n+    obj.push_back(Pair(\"genproclimit\",     (int)GetArg(\"-genproclimit\", -1)));\n     obj.push_back(Pair(\"networkhashps\",    getnetworkhashps(params, false)));\n-\n-    {\n-        LOCK(cs_main);\n-        obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n-        obj.push_back(Pair(\"testnet\",          Params().TestnetToBeDeprecatedFieldRPC()));\n-        obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n-    }\n+    obj.push_back(Pair(\"pooledtx\",         (uint64_t)mempool.size()));\n+    obj.push_back(Pair(\"testnet\",          Params().TestnetToBeDeprecatedFieldRPC()));\n+    obj.push_back(Pair(\"chain\",            Params().NetworkIDString()));\n #ifdef ENABLE_WALLET\n     obj.push_back(Pair(\"generate\",         getgenerate(params, false)));\n     obj.push_back(Pair(\"hashespersec\",     gethashespersec(params, false)));"
      }
    ]
  },
  {
    "sha": "8a022a8dacee29e87c7a4dea6cab568319b0c11d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4YTAyMmE4ZGFjZWUyOWU4N2M3YTRkZWE2Y2FiNTY4MzE5YjBjMTFk",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-20T05:08:26Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T04:00:21Z"
      },
      "message": "Added RPC signals.",
      "tree": {
        "sha": "d54e2405ed2961ca8cd86284407187eb9f07643c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d54e2405ed2961ca8cd86284407187eb9f07643c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8a022a8dacee29e87c7a4dea6cab568319b0c11d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a022a8dacee29e87c7a4dea6cab568319b0c11d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8a022a8dacee29e87c7a4dea6cab568319b0c11d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a022a8dacee29e87c7a4dea6cab568319b0c11d/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a419d09fcb41ac99054b1f9eb40f9b9026beca4b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a419d09fcb41ac99054b1f9eb40f9b9026beca4b"
      }
    ],
    "stats": {
      "total": 78,
      "additions": 68,
      "deletions": 10
    },
    "files": [
      {
        "sha": "b91825de7bb33906a1048672b7c981de2f398bb2",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 0,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=8a022a8dacee29e87c7a4dea6cab568319b0c11d",
        "patch": "@@ -215,6 +215,26 @@ bool static Bind(const CService &addr, unsigned int flags) {\n     return true;\n }\n \n+void OnRPCStopped()\n+{\n+    cvBlockChange.notify_all();\n+    LogPrint(\"rpc\", \"RPC stopped.\\n\");\n+}\n+\n+void OnRPCPreCommand(const CRPCCommand& cmd)\n+{\n+#ifdef ENABLE_WALLET\n+    if (cmd.reqWallet && !pwalletMain)\n+        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n+#endif\n+\n+    // Observe safe mode\n+    string strWarning = GetWarnings(\"rpc\");\n+    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", false) &&\n+        !cmd.okSafeMode)\n+        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n+}\n+\n std::string HelpMessage(HelpMessageMode mode)\n {\n     // When adding new options to the categories, please keep and ensure alphabetical ordering.\n@@ -1243,6 +1263,9 @@ bool AppInit2(boost::thread_group& threadGroup)\n #endif\n \n     StartNode(threadGroup);\n+\n+    RPCServer::OnStopped(&OnRPCStopped);\n+    RPCServer::OnPreCommand(&OnRPCPreCommand);\n     if (fServer)\n         StartRPCThreads();\n "
      },
      {
        "sha": "cc57c45b6c711d6fb11ae5069fd82413989069e9",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 35,
        "deletions": 10,
        "changes": 45,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=8a022a8dacee29e87c7a4dea6cab568319b0c11d",
        "patch": "@@ -24,12 +24,14 @@\n #include <boost/iostreams/stream.hpp>\n #include <boost/shared_ptr.hpp>\n #include <boost/thread.hpp>\n+#include <boost/signals2/signal.hpp>\n #include \"json/json_spirit_writer_template.h\"\n \n using namespace boost;\n using namespace boost::asio;\n using namespace json_spirit;\n using namespace std;\n+using namespace RPCServer;\n \n static std::string strRPCUserColonPass;\n \n@@ -43,6 +45,34 @@ static boost::asio::io_service::work *rpc_dummy_work = NULL;\n static std::vector<CSubNet> rpc_allow_subnets; //!< List of subnets to allow RPC connections from\n static std::vector< boost::shared_ptr<ip::tcp::acceptor> > rpc_acceptors;\n \n+static struct CRPCSignals\n+{\n+    boost::signals2::signal<void ()> Started;\n+    boost::signals2::signal<void ()> Stopped;\n+    boost::signals2::signal<void (const CRPCCommand&)> PreCommand;\n+    boost::signals2::signal<void (const CRPCCommand&)> PostCommand;\n+} g_rpcSignals;\n+\n+void RPCServer::OnStarted(boost::function<void ()> slot)\n+{\n+    g_rpcSignals.Started.connect(slot);\n+}\n+\n+void RPCServer::OnStopped(boost::function<void ()> slot)\n+{\n+    g_rpcSignals.Stopped.connect(slot);\n+}\n+\n+void RPCServer::OnPreCommand(boost::function<void (const CRPCCommand&)> slot)\n+{\n+    g_rpcSignals.PreCommand.connect(boost::bind(slot, _1));\n+}\n+\n+void RPCServer::OnPostCommand(boost::function<void (const CRPCCommand&)> slot)\n+{\n+    g_rpcSignals.PostCommand.connect(boost::bind(slot, _1));\n+}\n+\n void RPCTypeCheck(const Array& params,\n                   const list<Value_type>& typesExpected,\n                   bool fAllowNull)\n@@ -690,6 +720,7 @@ void StartRPCThreads()\n     for (int i = 0; i < GetArg(\"-rpcthreads\", 4); i++)\n         rpc_worker_group->create_thread(boost::bind(&asio::io_service::run, rpc_io_service));\n     fRPCRunning = true;\n+    g_rpcSignals.Started();\n }\n \n void StartDummyRPCThread()\n@@ -732,7 +763,7 @@ void StopRPCThreads()\n     deadlineTimers.clear();\n \n     rpc_io_service->stop();\n-    //cvBlockChange.notify_all();\n+    g_rpcSignals.Stopped();\n     if (rpc_worker_group != NULL)\n         rpc_worker_group->join_all();\n     delete rpc_dummy_work; rpc_dummy_work = NULL;\n@@ -940,16 +971,8 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     const CRPCCommand *pcmd = tableRPC[strMethod];\n     if (!pcmd)\n         throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found\");\n-#ifdef ENABLE_WALLET\n-    if (pcmd->reqWallet && !pwalletMain)\n-        throw JSONRPCError(RPC_METHOD_NOT_FOUND, \"Method not found (disabled)\");\n-#endif\n \n-    // Observe safe mode\n-    string strWarning = \"\"; //GetWarnings(\"rpc\");\n-    if (strWarning != \"\" && !GetBoolArg(\"-disablesafemode\", false) &&\n-        !pcmd->okSafeMode)\n-        throw JSONRPCError(RPC_FORBIDDEN_BY_SAFE_MODE, string(\"Safe mode: \") + strWarning);\n+    g_rpcSignals.PreCommand(*pcmd);\n \n     try\n     {\n@@ -960,6 +983,8 @@ json_spirit::Value CRPCTable::execute(const std::string &strMethod, const json_s\n     {\n         throw JSONRPCError(RPC_MISC_ERROR, e.what());\n     }\n+\n+    g_rpcSignals.PostCommand(*pcmd);\n }\n \n std::string HelpExampleCli(string methodname, string args){"
      },
      {
        "sha": "5727d17c14361e9f249cad81c0b4b8214d5a7a57",
        "filename": "src/rpcserver.h",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/rpcserver.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8a022a8dacee29e87c7a4dea6cab568319b0c11d/src/rpcserver.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.h?ref=8a022a8dacee29e87c7a4dea6cab568319b0c11d",
        "patch": "@@ -19,6 +19,16 @@\n #include \"json/json_spirit_utils.h\"\n #include \"json/json_spirit_writer_template.h\"\n \n+class CRPCCommand;\n+\n+namespace RPCServer\n+{\n+    void OnStarted(boost::function<void ()> slot);\n+    void OnStopped(boost::function<void ()> slot);\n+    void OnPreCommand(boost::function<void (const CRPCCommand&)> slot);\n+    void OnPostCommand(boost::function<void (const CRPCCommand&)> slot);\n+}\n+\n class CBlockIndex;\n class CNetAddr;\n "
      }
    ]
  },
  {
    "sha": "c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMWY3YmI2MDBhY2JmOTM3M2EyYjY4YmM3YmVhZjUwZGUwODBkZWRk",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T03:23:08Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-22T04:00:21Z"
      },
      "message": "Alphabetical ordering of includes and namespaces",
      "tree": {
        "sha": "c60cd66f15c063d8abc0c09754da90a81030d824",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c60cd66f15c063d8abc0c09754da90a81030d824"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f7bb600acbf9373a2b68bc7beaf50de080dedd/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8a022a8dacee29e87c7a4dea6cab568319b0c11d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8a022a8dacee29e87c7a4dea6cab568319b0c11d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8a022a8dacee29e87c7a4dea6cab568319b0c11d"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9c92b75f93424bd2ba95824226f022bc40823155",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c1f7bb600acbf9373a2b68bc7beaf50de080dedd/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c1f7bb600acbf9373a2b68bc7beaf50de080dedd/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
        "patch": "@@ -7,9 +7,9 @@\n \n #include \"base58.h\"\n #include \"init.h\"\n+#include \"random.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n-#include \"random.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif\n@@ -23,15 +23,15 @@\n #include <boost/iostreams/concepts.hpp>\n #include <boost/iostreams/stream.hpp>\n #include <boost/shared_ptr.hpp>\n-#include <boost/thread.hpp>\n #include <boost/signals2/signal.hpp>\n+#include <boost/thread.hpp>\n #include \"json/json_spirit_writer_template.h\"\n \n using namespace boost;\n using namespace boost::asio;\n using namespace json_spirit;\n-using namespace std;\n using namespace RPCServer;\n+using namespace std;\n \n static std::string strRPCUserColonPass;\n "
      }
    ]
  },
  {
    "sha": "1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmM2ZDQyMWY4OTZiNWZkYmNmYmExMmU0ZmI0NTQ1YzNjN2ZhNjVh",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T05:41:58Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T05:41:58Z"
      },
      "message": "Added locks to dumpprivkey, dumpwallet, importprivkey, importwallet, and importaddress.",
      "tree": {
        "sha": "f3e306c36eaaff871a16b9c918b4445f378443f5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f3e306c36eaaff871a16b9c918b4445f378443f5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1f7bb600acbf9373a2b68bc7beaf50de080dedd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1f7bb600acbf9373a2b68bc7beaf50de080dedd"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 10,
      "deletions": 0
    },
    "files": [
      {
        "sha": "14bf1a19befd77ad8b150df55eae1426eb3e725e",
        "filename": "src/rpcdump.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 0,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a/src/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a/src/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcdump.cpp?ref=1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
        "patch": "@@ -91,6 +91,8 @@ Value importprivkey(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"importprivkey\", \"\\\"mykey\\\", \\\"testing\\\", false\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     string strSecret = params[0].get_str();\n@@ -157,6 +159,8 @@ Value importaddress(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"importaddress\", \"\\\"myaddress\\\", \\\"testing\\\", false\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     CScript script;\n \n     CBitcoinAddress address(params[0].get_str());\n@@ -222,6 +226,8 @@ Value importwallet(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"importwallet\", \"\\\"test\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     ifstream file;\n@@ -320,6 +326,8 @@ Value dumpprivkey(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"dumpprivkey\", \"\\\"myaddress\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     string strAddress = params[0].get_str();\n@@ -349,6 +357,8 @@ Value dumpwallet(const Array& params, bool fHelp)\n             + HelpExampleRpc(\"dumpwallet\", \"\\\"test\\\"\")\n         );\n \n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n+\n     EnsureWalletIsUnlocked();\n \n     ofstream file;"
      }
    ]
  },
  {
    "sha": "d21569e7a7c792df039001d598cc384ab3408f2a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMjE1NjllN2E3Yzc5MmRmMDM5MDAxZDU5OGNjMzg0YWIzNDA4ZjJh",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T05:42:25Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T05:42:25Z"
      },
      "message": "Added locks to listunspent.",
      "tree": {
        "sha": "a25ad2447eb938276173ca9851ff57e145018a78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a25ad2447eb938276173ca9851ff57e145018a78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d21569e7a7c792df039001d598cc384ab3408f2a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21569e7a7c792df039001d598cc384ab3408f2a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d21569e7a7c792df039001d598cc384ab3408f2a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21569e7a7c792df039001d598cc384ab3408f2a/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fc6d421f896b5fdbcfba12e4fb4545c3c7fa65a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "2afd970c9861531e0c76a5d80f3f80b0f923c357",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d21569e7a7c792df039001d598cc384ab3408f2a/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d21569e7a7c792df039001d598cc384ab3408f2a/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=d21569e7a7c792df039001d598cc384ab3408f2a",
        "patch": "@@ -260,6 +260,7 @@ Value listunspent(const Array& params, bool fHelp)\n     Array results;\n     vector<COutput> vecOutputs;\n     assert(pwalletMain != NULL);\n+    LOCK2(cs_main, pwalletMain->cs_wallet);\n     pwalletMain->AvailableCoins(vecOutputs, false);\n     BOOST_FOREACH(const COutput& out, vecOutputs) {\n         if (out.nDepth < nMinDepth || out.nDepth > nMaxDepth)"
      }
    ]
  },
  {
    "sha": "3394388ef09cdeab3294dfb73a0591205cf41cfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMzk0Mzg4ZWYwOWNkZWFiMzI5NGRmYjczYTA1OTEyMDVjZjQxY2Zl",
    "commit": {
      "author": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T06:11:55Z"
      },
      "committer": {
        "name": "Eric Lombrozo",
        "email": "elombrozo@gmail.com",
        "date": "2014-10-28T06:11:55Z"
      },
      "message": "Missing include",
      "tree": {
        "sha": "dcedcf12303561b95b849f5b7526c9003c6095cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/dcedcf12303561b95b849f5b7526c9003c6095cd"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3394388ef09cdeab3294dfb73a0591205cf41cfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3394388ef09cdeab3294dfb73a0591205cf41cfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3394388ef09cdeab3294dfb73a0591205cf41cfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3394388ef09cdeab3294dfb73a0591205cf41cfe/comments",
    "author": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "CodeShark",
      "id": 894059,
      "node_id": "MDQ6VXNlcjg5NDA1OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/894059?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/CodeShark",
      "html_url": "https://github.com/CodeShark",
      "followers_url": "https://api.github.com/users/CodeShark/followers",
      "following_url": "https://api.github.com/users/CodeShark/following{/other_user}",
      "gists_url": "https://api.github.com/users/CodeShark/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/CodeShark/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/CodeShark/subscriptions",
      "organizations_url": "https://api.github.com/users/CodeShark/orgs",
      "repos_url": "https://api.github.com/users/CodeShark/repos",
      "events_url": "https://api.github.com/users/CodeShark/events{/privacy}",
      "received_events_url": "https://api.github.com/users/CodeShark/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d21569e7a7c792df039001d598cc384ab3408f2a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d21569e7a7c792df039001d598cc384ab3408f2a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d21569e7a7c792df039001d598cc384ab3408f2a"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "291712c77bd8b4839c87ef911e36a865f761cdc8",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3394388ef09cdeab3294dfb73a0591205cf41cfe/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3394388ef09cdeab3294dfb73a0591205cf41cfe/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=3394388ef09cdeab3294dfb73a0591205cf41cfe",
        "patch": "@@ -10,6 +10,7 @@\n #include \"random.h\"\n #include \"ui_interface.h\"\n #include \"util.h\"\n+#include \"utilstrencodings.h\"\n #ifdef ENABLE_WALLET\n #include \"wallet.h\"\n #endif"
      }
    ]
  }
]