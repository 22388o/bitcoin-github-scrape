DrahtBot,2018-12-24T12:50:41Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15764](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15764.html) (Native descriptor wallets by achow101)\n\nI",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-449730516,449730516,
DrahtBot,2019-02-01T13:44:31Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-459726740,459726740,
meshcollider,2019-02-05T06:55:39Z,I'll rebase this after #14491 is merged,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-460532864,460532864,
Sjors,2019-02-15T09:00:53Z,Needs rebase,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-463959937,463959937,
gwillen,2019-04-08T22:38:41Z,"I am strongly interested in this for the usability of my offline-signing work, and will give it a look.",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-481033882,481033882,
gwillen,2019-04-08T22:41:46Z,Could you rebase now that 14491 is in? It will clean up the diff a lot. Then I'll take a look.,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-481034515,481034515,
meshcollider,2019-04-09T11:35:49Z,Rebased :),https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-481214733,481214733,
gwillen,2019-04-09T22:17:00Z,"ACK with some testing.\n\nI tested one ranged and one non-ranged descriptor, verified with deriveaddresses and getaddressinfo that I get the correct keypaths and such displayed everywhere, and is_mine is true where expected. I did not test actually spending.\n\nI get a slightly weird result from getaddressinfo which I assume is probably not exactly the fault of this PR: I get an ""hdseedid"" of ",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-481461015,481461015,
sipa,2019-05-09T23:36:16Z,"ACK code changes, but I think the tests don't cover much.",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491103638,491103638,
sipa,2019-05-10T01:14:43Z,"> Also while testing wsh(multi(2, ..., ...)) I got descriptor parsed as p2sh-segwit address instead of a bech32 one, is this normal (with addresstype=p2sh-segwit) ?\n\nI don't know what you mean by this. What RPC/function calls did you make, and what did you observe?",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491119494,491119494,
ariard,2019-05-10T02:49:02Z,"I did :\n\n    bitcoin-cli importmulti '[{ ""desc"" : ""wsh(multi(2,tprv8ZgxMBicQKsPebkWkTSP4F4mfbaSsriLFNWkJGKJxmq881mR8aEpCe8wH1V5ZGSWAj3H15TCfMWKdhG136ysuRfYRq5YuLDNYLxvPsaqzxf/0h/1h/0h, tprv8ZgxMBicQKsPebkWkTSP4F4mfbaSsriLFNWkJGKJxmq881mR8aEpCe8wH1V5ZGSWAj3H15TCfMWKdhG136ysuRfYRq5YuLDNYLxvPsaqzxf/0h/1h/1h))"", ""timestamp"" : 0 }]'\n    \nGot  `""success"" : true`\nThen, with address from wallet ",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491135905,491135905,
sipa,2019-05-10T03:02:31Z,"That's not surprising, but why are you calling `getaddressinfo` on a P2SH address rather than a P2WSH one? Is that the address you get from `deriveaddresses`?\n\nEDIT: Oh, because that's the address you got from the dump? Don't rely on those, it's very hard for the current logic to guess what addresses you actually wanted imported (it inevitably imports other versions of the same policy along wi",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491138574,491138574,
ariard,2019-05-10T12:40:53Z,"Yes that's it I was relying on address from the dump, it's fine with `deriveaddresses` I got a bech32 one\n\nSo tested ACK e00c3dd minor the maybe-add-a-no-checksum option arg in RPC",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491274831,491274831,
Sjors,2019-05-10T14:28:42Z,"I'd like to see more tests. I tried a similar example as @ariard, but having some difficulty:\n\n```\nsrc/bitcoin-cli getdescriptorinfo ""wsh(multi(2,tprv8ZgxMBicQKsPebkWkTSP4F4mfbaSsriLFNWkJGKJxmq881mR8aEpCe8wH1V5ZGSWAj3H15TCfMWKdhG136ysuRfYRq5YuLDNYLxvPsaqzxf,tprv8ZgxMBicQKsPebkWkTSP4F4mfbaSsriLFNWkJGKJxmq881mR8aEpCe8wH1V5ZGSWAj3H15TCfMWKdhG136ysuRfYRq5YuLDNYLxvPsaqzxf))""\n{\n  ""descriptor"":",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491309050,491309050,
sipa,2019-05-10T17:29:54Z,"@Sjors Yes, importmulti requires descriptors with a checksum. See #15986.",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491368498,491368498,
Sjors,2019-05-12T12:14:39Z,"@sipa in particular, it requires the checksum based on the private key (added in #15986), not the checksum based on public key currently returned by `getdescriptorinfo`.",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491590433,491590433,
promag,2019-05-13T18:05:51Z,@meshcollider please update OP as the base PR is already merged.,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-491926708,491926708,
meshcollider,2019-06-06T08:11:10Z,Fixed the test and amended the comment pointed out by John,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499394360,499394360,
meshcollider,2019-06-06T10:05:04Z,"@ryanofsky done, thanks!",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499432913,499432913,
jnewbery,2019-06-06T10:35:55Z,"> it's unclear what other kinds of tests would be helpful here.\n\nThe added test in this PR checks that importing `sh(wpkh(xpriv/path))` makes the `sh(wpkh(pubkey))` spendable for paths /0 and /1.\n\nSuggested additional tests:\n\n- That the subscript `wpkh(pubkey)` is spendable for paths /0 and /1 (tests the `if (m_script_arg)` path in `ExpandPrivate()`).\n- Import a descriptor with a WIF",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499442227,499442227,
meshcollider,2019-06-07T08:11:19Z,"Thanks for the suggestions @jnewbery, I've added the first two tests you suggested, but I'm unsure about the third. The first test already tests the BIP32PubkeyProvider derivation. Did you mean OriginPubkeyProvider? OriginPubkeyProvider just calls the BIP32 derivation though so I don't think it needs a separate test",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499797674,499797674,
meshcollider,2019-06-07T13:36:03Z,@achow101 done,https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499887245,499887245,
achow101,2019-06-07T13:37:13Z,"ACK 53b7de629d3d9281dc6f8fa10e32c4cdec59c140\n\nSquash yo commits",https://github.com/bitcoin/bitcoin/pull/15024#issuecomment-499887635,499887635,
jnewbery,2019-05-02T21:36:00Z,Comment above (`# Test importing of a ranged descriptor without keys`) needs to be updated to something like `# Test importing of a ranged descriptor with xpriv`,https://github.com/bitcoin/bitcoin/pull/15024#discussion_r280604963,280604963,test/functional/wallet_importmulti.py
jnewbery,2019-05-02T21:36:40Z,"This isn't testing anything (the `address` loop variable in not being used, and the address tested is left over from the test above)",https://github.com/bitcoin/bitcoin/pull/15024#discussion_r280605148,280605148,test/functional/wallet_importmulti.py
ariard,2019-05-10T01:05:55Z,"nit: Maybe take opportunity to add `importmulti` as a supporting RPC in `descriptors.md`.\nYou may also add a descriptor import example in `importmulti` ",https://github.com/bitcoin/bitcoin/pull/15024#discussion_r282717124,282717124,src/wallet/rpcdump.cpp
meshcollider,2019-06-06T07:30:31Z,"@jnewbery  not sure what you mean, it calls `self.test_address(address, ...)` with each address to ensure they imported correctly from the xpriv after failing to import in the test before?\n\nEDIT: sorry, I was looking at an older branch, will fix",https://github.com/bitcoin/bitcoin/pull/15024#discussion_r291052154,291052154,test/functional/wallet_importmulti.py
ryanofsky,2019-06-06T09:14:30Z,"In commit ""Add private key derivation functions to descriptors"" (ca039db0776b1626ce4d220a0da5ff985d93985d)\n\nThis is duplicating code already in GetPubKey above. Since this has to exist separately, it'd be good to change GetPubKey to call this function. It'd simplify GetPubKey and remove a chunk of duplicate code.",https://github.com/bitcoin/bitcoin/pull/15024#discussion_r291090153,291090153,src/script/descriptor.cpp
