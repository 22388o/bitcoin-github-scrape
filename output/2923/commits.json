[
  {
    "sha": "a505a99a08753fa3c3b890fc6222679539b2f64c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNTA1YTk5YTA4NzUzZmEzYzNiODkwZmM2MjIyNjc5NTM5YjJmNjRj",
    "commit": {
      "author": {
        "name": "Josh Lehan",
        "email": "krellan@krellan.net",
        "date": "2013-08-22T05:50:19Z"
      },
      "committer": {
        "name": "Josh Lehan",
        "email": "krellan@krellan.net",
        "date": "2013-08-22T05:50:19Z"
      },
      "message": "Added new peerlocal field to RPC getpeerinfo per-node output, which comes from CNode::addrLocal.",
      "tree": {
        "sha": "3257664aa25af16bee0a84b26a3c0873a13b8a31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3257664aa25af16bee0a84b26a3c0873a13b8a31"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a505a99a08753fa3c3b890fc6222679539b2f64c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a505a99a08753fa3c3b890fc6222679539b2f64c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a505a99a08753fa3c3b890fc6222679539b2f64c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a505a99a08753fa3c3b890fc6222679539b2f64c/comments",
    "author": {
      "login": "Krellan",
      "id": 4563817,
      "node_id": "MDQ6VXNlcjQ1NjM4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krellan",
      "html_url": "https://github.com/Krellan",
      "followers_url": "https://api.github.com/users/Krellan/followers",
      "following_url": "https://api.github.com/users/Krellan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krellan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krellan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krellan/subscriptions",
      "organizations_url": "https://api.github.com/users/Krellan/orgs",
      "repos_url": "https://api.github.com/users/Krellan/repos",
      "events_url": "https://api.github.com/users/Krellan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krellan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Krellan",
      "id": 4563817,
      "node_id": "MDQ6VXNlcjQ1NjM4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krellan",
      "html_url": "https://github.com/Krellan",
      "followers_url": "https://api.github.com/users/Krellan/followers",
      "following_url": "https://api.github.com/users/Krellan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krellan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krellan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krellan/subscriptions",
      "organizations_url": "https://api.github.com/users/Krellan/orgs",
      "repos_url": "https://api.github.com/users/Krellan/repos",
      "events_url": "https://api.github.com/users/Krellan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krellan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b986663ccdd3dfd8a93aad660839a315ca5c5bdd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b986663ccdd3dfd8a93aad660839a315ca5c5bdd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b986663ccdd3dfd8a93aad660839a315ca5c5bdd"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 5,
      "deletions": 0
    },
    "files": [
      {
        "sha": "594de7ed3bcca9999167a37a1d51664d063d4e6e",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a505a99a08753fa3c3b890fc6222679539b2f64c/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a505a99a08753fa3c3b890fc6222679539b2f64c/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=a505a99a08753fa3c3b890fc6222679539b2f64c",
        "patch": "@@ -610,6 +610,7 @@ void CNode::copyStats(CNodeStats &stats)\n     X(nSendBytes);\n     X(nRecvBytes);\n     stats.fSyncNode = (this == pnodeSync);\n+    stats.addrLocal = CAddress(addrLocal).ToString().c_str();\n }\n #undef X\n "
      },
      {
        "sha": "cfeba6a0615f4c9f779bf265d702d92db2f872a8",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a505a99a08753fa3c3b890fc6222679539b2f64c/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a505a99a08753fa3c3b890fc6222679539b2f64c/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=a505a99a08753fa3c3b890fc6222679539b2f64c",
        "patch": "@@ -119,6 +119,7 @@ class CNodeStats\n     uint64 nSendBytes;\n     uint64 nRecvBytes;\n     bool fSyncNode;\n+    std::string addrLocal;\n };\n \n "
      },
      {
        "sha": "fa13dc34e48f72a9fdb8b07509894753f8c6a16d",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a505a99a08753fa3c3b890fc6222679539b2f64c/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a505a99a08753fa3c3b890fc6222679539b2f64c/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=a505a99a08753fa3c3b890fc6222679539b2f64c",
        "patch": "@@ -61,6 +61,9 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"banscore\", stats.nMisbehavior));\n         if (stats.fSyncNode)\n             obj.push_back(Pair(\"syncnode\", true));\n+        \n+        // Name \"peerlocal\" instead of \"addrlocal\" to avoid breaking scripts that grep for \"addr\"\n+        obj.push_back(Pair(\"peerlocal\", stats.addrLocal));\n \n         ret.push_back(obj);\n     }"
      }
    ]
  },
  {
    "sha": "fbc91c10d818432070ef8bac56b07707f43ef0b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYmM5MWMxMGQ4MTg0MzIwNzBlZjhiYWM1NmIwNzcwN2Y0M2VmMGIx",
    "commit": {
      "author": {
        "name": "Josh Lehan",
        "email": "krellan@krellan.net",
        "date": "2013-08-22T11:34:33Z"
      },
      "committer": {
        "name": "Josh Lehan",
        "email": "krellan@krellan.net",
        "date": "2013-08-22T11:34:33Z"
      },
      "message": "Ping time support. Added RPC ping command. Added pong handler. Added timing results to getpeerinfo.",
      "tree": {
        "sha": "2842103f217f099830701ac26006b4ab91756904",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2842103f217f099830701ac26006b4ab91756904"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fbc91c10d818432070ef8bac56b07707f43ef0b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbc91c10d818432070ef8bac56b07707f43ef0b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fbc91c10d818432070ef8bac56b07707f43ef0b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fbc91c10d818432070ef8bac56b07707f43ef0b1/comments",
    "author": {
      "login": "Krellan",
      "id": 4563817,
      "node_id": "MDQ6VXNlcjQ1NjM4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krellan",
      "html_url": "https://github.com/Krellan",
      "followers_url": "https://api.github.com/users/Krellan/followers",
      "following_url": "https://api.github.com/users/Krellan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krellan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krellan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krellan/subscriptions",
      "organizations_url": "https://api.github.com/users/Krellan/orgs",
      "repos_url": "https://api.github.com/users/Krellan/repos",
      "events_url": "https://api.github.com/users/Krellan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krellan/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Krellan",
      "id": 4563817,
      "node_id": "MDQ6VXNlcjQ1NjM4MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4563817?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Krellan",
      "html_url": "https://github.com/Krellan",
      "followers_url": "https://api.github.com/users/Krellan/followers",
      "following_url": "https://api.github.com/users/Krellan/following{/other_user}",
      "gists_url": "https://api.github.com/users/Krellan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Krellan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Krellan/subscriptions",
      "organizations_url": "https://api.github.com/users/Krellan/orgs",
      "repos_url": "https://api.github.com/users/Krellan/repos",
      "events_url": "https://api.github.com/users/Krellan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Krellan/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a505a99a08753fa3c3b890fc6222679539b2f64c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a505a99a08753fa3c3b890fc6222679539b2f64c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a505a99a08753fa3c3b890fc6222679539b2f64c"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 88,
      "deletions": 5
    },
    "files": [
      {
        "sha": "a0e3ade0d8486593fd5a34bf08f133e3c3f698da",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -198,6 +198,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"getbestblockhash\",       &getbestblockhash,       true,      false },\n     { \"getconnectioncount\",     &getconnectioncount,     true,      false },\n     { \"getpeerinfo\",            &getpeerinfo,            true,      false },\n+    { \"ping\",                   &ping,                   true,      false },\n     { \"addnode\",                &addnode,                true,      true },\n     { \"getaddednodeinfo\",       &getaddednodeinfo,       true,      true },\n     { \"getdifficulty\",          &getdifficulty,          true,      false },"
      },
      {
        "sha": "1e6a77ca22ccf34642c8268a773c639e554bee3c",
        "filename": "src/bitcoinrpc.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/bitcoinrpc.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/bitcoinrpc.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.h?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -143,6 +143,7 @@ extern void EnsureWalletIsUnlocked();\n \n extern json_spirit::Value getconnectioncount(const json_spirit::Array& params, bool fHelp); // in rpcnet.cpp\n extern json_spirit::Value getpeerinfo(const json_spirit::Array& params, bool fHelp);\n+extern json_spirit::Value ping(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value addnode(const json_spirit::Array& params, bool fHelp);\n extern json_spirit::Value getaddednodeinfo(const json_spirit::Array& params, bool fHelp);\n "
      },
      {
        "sha": "9a499d531af2209d2ba0a4555fc81fbfe3a1fe6c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 43,
        "deletions": 5,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -3845,10 +3845,35 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n             // seconds to respond to each, the 5th ping the remote sends would appear to\n             // return very quickly.\n             pfrom->PushMessage(\"pong\", nonce);\n+            printf(\"Ping %s: Echoed nonce %\"PRI64x\"\\n\", pfrom->addrName.c_str(), nonce);\n+        } else {\n+            printf(\"Ping %s: Ignoring ping, peer version %d is too old for pong\\n\", pfrom->addrName.c_str(), pfrom->nVersion);\n         }\n     }\n \n \n+    else if (strCommand == \"pong\")\n+    {\n+        int64 pingEnded = GetTimeMicros();\n+        uint64 nonce = 0;\n+        vRecv >> nonce;\n+        if (nonce == pfrom->nPingNonce) {\n+            if (pfrom->nPingStart > 0) {\n+                // Successful ping, remember how long the roundtrip took\n+                pfrom->nPingTime = pingEnded - pfrom->nPingStart;\n+                printf(\"Pong %s: Matched nonce %\"PRI64x\", %\"PRI64d\" usec\\n\", pfrom->addrName.c_str(), nonce, pfrom->nPingTime);\n+            } else {\n+                printf(\"Pong %s: Lost track of timestamp for comparison\\n\", pfrom->addrName.c_str());\n+            }\n+            \n+            // This completes the ping request, it is no longer outstanding\n+            pfrom->nPingStart = -1;\n+        } else {\n+            printf(\"Pong %s: Ignoring nonce mismatch, expected %\"PRI64x\", received %\"PRI64x\"\\n\", pfrom->addrName.c_str(), pfrom->nPingNonce, nonce);\n+        }\n+    }\n+    \n+    \n     else if (strCommand == \"alert\")\n     {\n         CAlert alert;\n@@ -4070,14 +4095,27 @@ bool SendMessages(CNode* pto, bool fSendTrickle)\n         if (pto->nVersion == 0)\n             return true;\n \n-        // Keep-alive ping. We send a nonce of zero because we don't use it anywhere\n-        // right now.\n+        // Keep-alive ping, or an explicit request by user to send a ping right now\n+        bool pingSend = false;\n+        if (pto->fPingRequested) {\n+            pingSend = true;\n+        }\n         if (pto->nLastSend && GetTime() - pto->nLastSend > 30 * 60 && pto->vSendMsg.empty()) {\n-            uint64 nonce = 0;\n-            if (pto->nVersion > BIP0031_VERSION)\n+            pingSend = true;\n+        }\n+        if (pingSend) {\n+            uint64 nonce;\n+            RAND_bytes((unsigned char*)&nonce, sizeof(nonce));\n+            pto->fPingRequested = false;\n+            pto->nPingNonce = nonce;\n+            pto->nPingStart = GetTimeMicros();\n+            if (pto->nVersion > BIP0031_VERSION) {\n                 pto->PushMessage(\"ping\", nonce);\n-            else\n+            } else {\n+                // Peer is too old to support ping command with nonce, pong will never arrive, disable timing\n+                pto->nPingStart = -1;\n                 pto->PushMessage(\"ping\");\n+            }\n         }\n \n         // Start block sync"
      },
      {
        "sha": "f954181caed2a1e418788db41fd4386ea7edc1a5",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -597,6 +597,18 @@ bool CNode::Misbehaving(int howmuch)\n #define X(name) stats.name = name\n void CNode::copyStats(CNodeStats &stats)\n {\n+    // Raw is microsecs, but show it to user as whole seconds (Bitcoin users should be well used to small numbers with many decimal places by now :)\n+    stats.dPingTime = ((double)((nPingTime > 0) ? nPingTime : 0)) / 1000000.0;\n+    stats.nPingStat = 0;\n+    \n+    // Since ping does not update instantly, give user feedback, avoid ambiguity\n+    if (fPingRequested) {\n+        stats.nPingStat |= 0x1;  // Ping request by user\n+    }\n+    if (nPingStart > 0) {\n+        stats.nPingStat |= 0x2;  // Ping in flight\n+    }\n+    \n     X(nServices);\n     X(nLastSend);\n     X(nLastRecv);"
      },
      {
        "sha": "de56a97840552c4e841f41100b91779cc9eca5a2",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 11,
        "deletions": 0,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -110,6 +110,8 @@ class CNodeStats\n     int64 nLastSend;\n     int64 nLastRecv;\n     int64 nTimeConnected;\n+    double dPingTime;\n+    int nPingStat;\n     std::string addrName;\n     int nVersion;\n     std::string strSubVer;\n@@ -235,6 +237,12 @@ class CNode\n     CCriticalSection cs_inventory;\n     std::multimap<int64, CInv> mapAskFor;\n \n+    // Ping time measurement\n+    bool fPingRequested;\n+    uint64 nPingNonce;\n+    int64 nPingStart;\n+    int64 nPingTime;\n+    \n     CNode(SOCKET hSocketIn, CAddress addrIn, std::string addrNameIn = \"\", bool fInboundIn=false) : ssSend(SER_NETWORK, MIN_PROTO_VERSION)\n     {\n         nServices = 0;\n@@ -269,6 +277,9 @@ class CNode\n         fRelayTxes = false;\n         setInventoryKnown.max_size(SendBufferSize() / 1000);\n         pfilter = new CBloomFilter();\n+        fPingRequested = false;\n+        nPingStart = -1; // no ping request outstanding on network right now\n+        nPingTime = -1; // no previous ping request successfully completed yet\n \n         // Be shy and don't send version until we hear\n         if (hSocket != INVALID_SOCKET && !fInbound)"
      },
      {
        "sha": "eb387f3d1935f5f7e530d4526ca76216d5e954a5",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 20,
        "deletions": 0,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fbc91c10d818432070ef8bac56b07707f43ef0b1/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=fbc91c10d818432070ef8bac56b07707f43ef0b1",
        "patch": "@@ -19,6 +19,24 @@ Value getconnectioncount(const Array& params, bool fHelp)\n     return (int)vNodes.size();\n }\n \n+Value ping(const Array& params, bool fHelp)\n+{\n+    if (fHelp || params.size() != 0)\n+        throw runtime_error(\n+            \"ping\\n\"\n+            \"Requests that a ping be sent to all other nodes, to measure ping time.\\n\"\n+            \"Results in getpeerinfo: pingtime is decimal seconds, pingstat is bitmask.\\n\"\n+            \"Bitmask: 0x1 = ping requested, 0x2 = ping is in flight.\\n\"\n+            \"Ping command is handled in queue with all other commands, so it measures processing backlog, not just network ping.\");\n+\n+    LOCK(cs_vNodes);\n+    BOOST_FOREACH(CNode* pNode, vNodes) {\n+        pNode->fPingRequested = true;\n+    }\n+    \n+    return Value::null;\n+}\n+\n static void CopyNodeStats(std::vector<CNodeStats>& vstats)\n {\n     vstats.clear();\n@@ -54,6 +72,8 @@ Value getpeerinfo(const Array& params, bool fHelp)\n         obj.push_back(Pair(\"bytessent\", (boost::int64_t)stats.nSendBytes));\n         obj.push_back(Pair(\"bytesrecv\", (boost::int64_t)stats.nRecvBytes));\n         obj.push_back(Pair(\"conntime\", (boost::int64_t)stats.nTimeConnected));\n+        obj.push_back(Pair(\"pingtime\", stats.dPingTime));\n+        obj.push_back(Pair(\"pingstat\", stats.nPingStat));\n         obj.push_back(Pair(\"version\", stats.nVersion));\n         obj.push_back(Pair(\"subver\", stats.strSubVer));\n         obj.push_back(Pair(\"inbound\", stats.fInbound));"
      }
    ]
  }
]