adamjonas,2020-04-30 00:42:14,Ref https://github.com/bitcoin/bitcoin/issues/15914.,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-621545152,621545152,
DrahtBot,2020-04-30 00:51:10,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-621547806,621547806,
practicalswift,2020-05-03 19:04:12,"Concept ACK\n\nHaving this merged would allow enabling MemorySanitizer (MSan) more easily (#18288).",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-623163438,623163438,
practicalswift,2020-05-03 19:34:50,@dongcarl It seems like the Travis macOS 10.12 job failed :),https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-623168207,623168207,
fanquake,2020-05-06 23:31:06,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-624944088,624944088,
hebasto,2020-05-21 13:13:01,"Tested a0e7fe7e11f061025396da6e588f6f3828a205e7 on Linux Mint 19.3:\n```\n$ make -C depends/ CC=clang CXX=clang++\n...\nlibtool:   error: '/home/hebasto/GitHub/bitcoin/depends/work/build/x86_64-pc-linux-gnu/freetype/2.7.1-6ee38f80395/objs/ftsystem.lo' is not a valid libtool object\nconfig.mk:55: recipe for target '/home/hebasto/GitHub/bitcoin/depends/work/build/x86_64-pc-linux-gnu/freetype/2.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632078253,632078253,
MarcoFalke,2020-05-21 13:36:09,Concept ACK (assuming it solves my problems),https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632090140,632090140,
hebasto,2020-05-21 15:11:11,Concept ACK.,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632140635,632140635,
dongcarl,2020-05-21 22:31:29,"Seems like the issue is that we need to separate the `toolset` and the `target-os` for `b2`, will investigate further tomorrow.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632379449,632379449,
dongcarl,2020-05-22 21:48:55,"Done, should work now. Glad to know that our build system is not the only one with weird idiosyncrasies :grimacing:  ",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632921493,632921493,
practicalswift,2020-05-23 05:44:26,ACK 645e0803d8b5e0a4e101649519ca7588852f9d3d -- patch looks correct and Travis is happy :),https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632989757,632989757,
hebasto,2020-05-23 06:50:23,Maybe instead of backporting patch just bump FreeType version to the latest 2.10.2 where that patch is included?,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632996892,632996892,
dongcarl,2020-05-23 14:33:36,"> Tested [645e080](https://github.com/bitcoin/bitcoin/commit/645e0803d8b5e0a4e101649519ca7588852f9d3d) on Linux Mint 19.3 (x86_64):\n> \n> ```\n> $ make -C depends CC=clang CXX=clang++\n> $ CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure\n> ...\n>   CC            = /usr/bin/ccache clang\n> ...\n>   CXX           = /usr/bin/ccache clang++ -std=c++11\n> ...\n> $ ",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633065701,633065701,
hebasto,2020-05-23 15:15:32,"@dongcarl \n```\n$ make -C depends bdb CC=clang CXX=clang++\n```\n<details> \n  <summary>output</summary>\n\n```\nmake: Entering directory '/home/hebasto/GitHub/bitcoin/depends'\nFetching db-4.8.30.NC.tar.gz from https://download.oracle.com/berkeley-db\n  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current\n                                 Dload  Upload   Total",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633073931,633073931,
hebasto,2020-05-23 16:04:51,"@dongcarl \nAnother approach (EDITED):\n```\n$ make -C depends CC='clang -fPIC' CXX='clang++ -fPIC'\n$ CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure\n$ make check\n# ok :)\n```",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633083477,633083477,
hebasto,2020-05-23 16:35:35,REMOVED,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633090048,633090048,
DrahtBot,2020-05-24 15:57:48,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit fa3288cda12537b2e99a3cc7e14dfff3e944884f<br>(master) | commit 798774a521fdf73c873d4a6ece69dd38b4977a20<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-0.21-res.yml | [`904ff6de15a70fa1...`](https://drahtbot.space/gitian/bitcoin/bitcoin/fa3288cda12537b2e99a3cc7e14dfff3e944884f/bitcoin-core-linux-0.21-res.yml,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633251858,633251858,
dongcarl,2020-05-26 21:06:44,"> @dongcarl\n> Another approach (EDITED):\n> \n> ```\n> $ make -C depends CC='clang -fPIC' CXX='clang++ -fPIC'\n> $ CONFIG_SITE=$PWD/depends/x86_64-pc-linux-gnu/share/config.site ./configure\n> $ make check\n> # ok :)\n> ```\n\nHmmm... Does this mean that `bdb` isn't handling `--with-pic` correctly?",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634279318,634279318,
hebasto,2020-05-27 05:34:22,"@dongcarl\n> Hmmm... Does this mean that `bdb` isn't handling `--with-pic` correctly?\n\nIt seems so...\n\nIt would be nice if someone else could reproduce the issue I'm facing.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634438706,634438706,
MarcoFalke,2020-05-27 14:34:48,"> It would be nice if someone else could reproduce the issue I'm facing.\n\nIs this a blocker on this pull request or a separate issue?",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634702407,634702407,
hebasto,2020-05-27 16:41:04,"> > It would be nice if someone else could reproduce the issue I'm facing.\n> \n> Is this a blocker on this pull request or a separate issue?\n\nCouldn't build 645e0803d8b5e0a4e101649519ca7588852f9d3d on my machine.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634790396,634790396,
MarcoFalke,2020-05-27 17:10:13,"Previously it wasn't possible to propagate vars at all, so this still seems to be an improvement? Also, there are steps to work around: https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-633083477 , right?\n\nBtw, steps to reproduce the bdb fpic issue on a fresh Ubuntu focal:\n\n```\n# history \n    1  apt update\n    2  apt install git vim htop -y \n    3  git clone --depth=1 http",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634809430,634809430,
hebasto,2020-05-27 17:12:31,There is a [question](https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-632996892) also...,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634810782,634810782,
dongcarl,2020-05-27 17:16:13,"I don't think we should bump if there's no other reason to. I'm looking into the `bdb` build system problem, but I think this can probably be merged by itself.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634812980,634812980,
dongcarl,2020-05-27 21:42:59,">     * Would be nice to document these options or mention that they get picked up in the depends readme\n> \n>     * It would be nice to extend these options so they are picked up for `build_CC` etc variables not just `host_CC` etc variables if this doesn't happen already (maybe it already does, I didn't check)\n> \n>     * It would be nice to reduce scope of these options so they only affect",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634957900,634957900,
dongcarl,2020-05-27 21:44:19,"@hebasto @MarcoFalke Found quite a clean fix for our woes in f0d7ed10b48a6303d8b0cb6f2fc6b8652945bffb, it eliminates the need for the freetype backport and is in general more correct I think. My local testing shows that it's working correctly.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-634958570,634958570,
practicalswift,2020-05-28 05:20:58,ACK f0d7ed10b48a6303d8b0cb6f2fc6b8652945bffb -- patch looks correct,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635108992,635108992,
MarcoFalke,2020-05-28 11:21:12,"Checked that this passes now:\n\n```\n# history \n    1  apt update && apt install git vim htop -y\n    2  git clone --depth=1 https://github.com/dongcarl/bitcoin/ ./bitcoin-core --branch 2020-04-improve-depends-hosts2\n    3  cd bitcoin-core/\n    4  apt install curl wget htop git vim ccache build-essential libtool autotools-dev automake pkg-config bsdmainutils python3-zmq clang -y\n    5",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635279501,635279501,
laanwj,2020-05-28 12:32:52,"Code review and concept ACK f0d7ed10b48a6303d8b0cb6f2fc6b8652945bffb\n(didn't specifically test anything though)\nedit: Tested that my ARM32 build w/ crosstool-ng still works",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635319459,635319459,
MarcoFalke,2020-05-28 15:45:39,@ryanofsky @fanquake Anything left to do here? ,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635430730,635430730,
fanquake,2020-05-29 12:46:10,"Please don't merge this just yet. There's at least one build failure that will need addressing (likely in a follow up, but I want to understand it before merging).",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635953096,635953096,
fanquake,2020-05-29 13:52:18,"There is a at least one failure building `zlib`, when you cross-compile for macOS and you set CC=clang:\n```bash\nmake -C depends/ -j6 V=1 HOST=x86_64-apple-darwin16 CC=clang CXX=clang++\n....\necho Configuring zlib...\nConfiguring zlib...\nrm -rf /bitcoin/depends/x86_64-apple-darwin16; mkdir -p /bitcoin/depends/x86_64-apple-darwin16/lib; cd /bitcoin/depends/x86_64-apple-darwin16;  tar --no-",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-635984091,635984091,
fanquake,2020-05-29 14:32:06,"I'll also just mention that you can't seem to cross-compile for Windows when using Clang. The build bombs out at Boost (haven't looked into this at all ðŸ˜´):\n```bash\necho Building boost...\nBuilding boost...\nmkdir -p /bitcoin/depends/work/build/x86_64-w64-mingw32/boost/1_70_0-d650037a261/.\ncd /bitcoin/depends/work/build/x86_64-w64-mingw32/boost/1_70_0-d650037a261/.; PATH=/bitcoin/depends/x8",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636004435,636004435,
MarcoFalke,2020-05-29 14:52:48,"There is also a build failure on a fresh Ubuntu focal vm:\n\n```\nchecking for QT5... yes\nchecking for QT_TEST... yes\nchecking for QT_DBUS... yes\nchecking for static Qt... yes\nchecking for QTFONTDATABASE... yes\nchecking for QTEVENTDISPATCHER... yes\nchecking for QTTHEME... yes\nchecking for QTDEVICEDISCOVERY... yes\nchecking for QTACCESSIBILITY... yes\nchecking for QTFB... yes\nc",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636017324,636017324,
dongcarl,2020-05-29 18:27:44,"I think this PR by itself is already an improvement over the current situation (all cases that worked before still works, and a few cases that didn't work before now works) and I don't really want to overload this PR any longer. After doing some investigation, I think the following are worthwhile followups:\n\n1. Make cross-compiles work with user-specified well-known vars\n    - Fixes: https:/",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636120946,636120946,
MarcoFalke,2020-05-29 18:38:50,"> I think it's time to put things that are flags into CFLAGS and CXXFLAGS\n\nIs there documentation on how to pass CXXFLAGS into depends qt? I recently tried that and it appeared they were not picked up.",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636126141,636126141,
MarcoFalke,2020-05-29 18:39:09,Concept ACK on merging this,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636126295,636126295,
dongcarl,2020-05-29 18:49:07,"> Is there documentation on how to pass CXXFLAGS into depends qt? I recently tried that and it appeared they were not picked up.\n\nWe do some extremely nasty `sed`s in `qtbase/mkspecs` :-( See: #16837\n\nA cleanup of how we interact with QT's build system probably also deserves to be a followup  ",https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636130501,636130501,
fanquake,2020-05-30 03:14:13,@dongcarl followups sound ok. I think we've figured out a path to improving the macOS CFLAGS post this change as well.,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636267552,636267552,
DrahtBot,2020-05-30 03:16:54,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit ea3e9e0b84c57df4110ca9e5ccced65c5bbe4611<br>(master) | commit c403792d33431815ae43d2e1280249d10c9f52fe<br>(master and this pull) |\n|--|--|--|\n| bitcoin-core-linux-0.21-res.yml | [`e00ff2634378492a...`](https://drahtbot.space/gitian/bitcoin/bitcoin/ea3e9e0b84c57df4110ca9e5ccced65c5bbe4611/bitcoin-core-linux-0.21-res.yml,https://github.com/bitcoin/bitcoin/pull/18820#issuecomment-636267805,636267805,
ryanofsky,2020-05-27 19:30:09,"In commit ""depends: Propagate well-known vars into depends"" (8ae3fc18b050bf1249dcd050f842f01a08ce8340)\n\nI can't figure out what the point of the ifneq branching is here. It seems like the 3 assignments in the else block do everything the 3 assignments in the ifneq block and more, so this would be shorter and clearer without branching and just keeping the else block.",https://github.com/bitcoin/bitcoin/pull/18820#discussion_r431393161,431393161,depends/hosts/default.mk
dongcarl,2020-05-27 21:40:55,"Added a blurb in 3d6603e340d6d461832f0aa204b04343d34af3d4, let me know if that's clear!",https://github.com/bitcoin/bitcoin/pull/18820#discussion_r431458649,431458649,depends/hosts/default.mk
