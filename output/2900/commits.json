[
  {
    "sha": "c50f2b4de8568112281895e66131dbcfec4cbbc6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNTBmMmI0ZGU4NTY4MTEyMjgxODk1ZTY2MTMxZGJjZmVjNGNiYmM2",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-06-06T07:15:55Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-06-06T07:15:55Z"
      },
      "message": "Add nLocalServices info to RPC getinfo",
      "tree": {
        "sha": "1e6f6ea9114e8b564013b5c5d69250679ce4f4d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1e6f6ea9114e8b564013b5c5d69250679ce4f4d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c50f2b4de8568112281895e66131dbcfec4cbbc6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c50f2b4de8568112281895e66131dbcfec4cbbc6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c50f2b4de8568112281895e66131dbcfec4cbbc6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c50f2b4de8568112281895e66131dbcfec4cbbc6/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f0f4904becbf2514c7cdc53a8942faf3982dda19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f0f4904becbf2514c7cdc53a8942faf3982dda19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f0f4904becbf2514c7cdc53a8942faf3982dda19"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "7c93f76bdc2ba716f62875f9cb86fcf99604cc5a",
        "filename": "src/rpcmisc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c50f2b4de8568112281895e66131dbcfec4cbbc6/src/rpcmisc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c50f2b4de8568112281895e66131dbcfec4cbbc6/src/rpcmisc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcmisc.cpp?ref=c50f2b4de8568112281895e66131dbcfec4cbbc6",
        "patch": "@@ -36,6 +36,7 @@ Value getinfo(const Array& params, bool fHelp)\n             \"{\\n\"\n             \"  \\\"version\\\": xxxxx,           (numeric) the server version\\n\"\n             \"  \\\"protocolversion\\\": xxxxx,   (numeric) the protocol version\\n\"\n+            \"  \\\"services\\\": \\\"xxxxxxxx\\\",   (string) the local services\\n\"\n             \"  \\\"walletversion\\\": xxxxx,     (numeric) the wallet version\\n\"\n             \"  \\\"balance\\\": xxxxxxx,         (numeric) the total bitcoin balance of the wallet\\n\"\n             \"  \\\"blocks\\\": xxxxxx,           (numeric) the current number of blocks processed in the server\\n\"\n@@ -62,6 +63,7 @@ Value getinfo(const Array& params, bool fHelp)\n     Object obj;\n     obj.push_back(Pair(\"version\",       (int)CLIENT_VERSION));\n     obj.push_back(Pair(\"protocolversion\",(int)PROTOCOL_VERSION));\n+    obj.push_back(Pair(\"services\",       strprintf(\"%08x\", nLocalServices)));\n #ifdef ENABLE_WALLET\n     if (pwalletMain) {\n         obj.push_back(Pair(\"walletversion\", pwalletMain->GetVersion()));"
      },
      {
        "sha": "5f4d0670ce303af47362cc18c78ef3c7d6bfd211",
        "filename": "src/rpcnet.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c50f2b4de8568112281895e66131dbcfec4cbbc6/src/rpcnet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c50f2b4de8568112281895e66131dbcfec4cbbc6/src/rpcnet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcnet.cpp?ref=c50f2b4de8568112281895e66131dbcfec4cbbc6",
        "patch": "@@ -80,7 +80,7 @@ Value getpeerinfo(const Array& params, bool fHelp)\n             \"  {\\n\"\n             \"    \\\"addr\\\":\\\"host:port\\\",      (string) The ip address and port of the peer\\n\"\n             \"    \\\"addrlocal\\\":\\\"ip:port\\\",   (string) local address\\n\"\n-            \"    \\\"services\\\":\\\"00000001\\\",   (string) The services\\n\"\n+            \"    \\\"services\\\":\\\"xxxxxxxx\\\",   (string) The services\\n\"\n             \"    \\\"lastsend\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last send\\n\"\n             \"    \\\"lastrecv\\\": ttt,           (numeric) The time in seconds since epoch (Jan 1 1970 GMT) of the last receive\\n\"\n             \"    \\\"bytessent\\\": n,            (numeric) The total bytes sent\\n\""
      }
    ]
  },
  {
    "sha": "29834c0a077ddce249a8822fe2549e3dc5eb08c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyOTgzNGMwYTA3N2RkY2UyNDlhODgyMmZlMjU0OWUzZGM1ZWIwOGMx",
    "commit": {
      "author": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-06-06T07:16:47Z"
      },
      "committer": {
        "name": "Peter Todd",
        "email": "pete@petertodd.org",
        "date": "2014-06-06T07:16:47Z"
      },
      "message": "Add NODE_BLOOM service bit and bump protocol version\n\nLets nodes advertise that they offer bloom filter support explicitly.\nThe protocol version bump allows SPV nodes to assume that NODE_BLOOM is\nset if NODE_NETWORK is set for pre-70003 nodes.\n\nAlso adds an undocumented option to turn bloom filter support off for\ntesting purposes. Nodes attempting to use bloom filters are immediately\ndropped so as to not waste their bandwidth.",
      "tree": {
        "sha": "f8a0b774bd1384a054cecb7778ee093565b2b150",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f8a0b774bd1384a054cecb7778ee093565b2b150"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/29834c0a077ddce249a8822fe2549e3dc5eb08c1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.14 (GNU/Linux)\n\niQGrBAABCACVBQJTkWskXhSAAAAAABUAQGJsb2NraGFzaEBiaXRjb2luLm9yZzAw\nMDAwMDAwMDAwMDAwMDA0NmU4ZjY3ZTZhZjE0MzM4NGQwMmVmOWMzMTk2YWIyMTc2\nNmYzMDVjNDUyNzM5OTcvFIAAAAAAFQARcGthLWFkZHJlc3NAZ251cGcub3JncGV0\nZUBwZXRlcnRvZC5vcmcACgkQJIFAPaXwkfuLxAf+N+FkAXPhSmsqEOIX3VvHGLZs\nnUcApw9L2SCN7/VX0LtuszR5SnYoqAlqF9yw7c3fcIE/Q2kjrSlJvHBSKpKL+rrD\nA8ADedRZ+ODTAR/ancyR082+j4bJ5HmNv13IrsLcUuAN6si/OnBwLhC9vn4sno92\n48kxtUBupDIKYQ2SsljckimrRawpl8YUCFFC/wfBWFOI4eG44IV07wnBlJArxU9d\nq6uG7i5Mn4T1jYuzYVMIj1IPIHcj/7CzG1QEzGqQJRuyMkHUTSMRseYOG1lY0h/X\nqcy47JID9v3tJKcOWg6EWwdyg8e3/vcArwNW78WUoUFKciUk+iXV6aWRH4EiHQ==\n=DyCu\n-----END PGP SIGNATURE-----",
        "payload": "tree f8a0b774bd1384a054cecb7778ee093565b2b150\nparent c50f2b4de8568112281895e66131dbcfec4cbbc6\nauthor Peter Todd <pete@petertodd.org> 1402039007 -0400\ncommitter Peter Todd <pete@petertodd.org> 1402039007 -0400\n\nAdd NODE_BLOOM service bit and bump protocol version\n\nLets nodes advertise that they offer bloom filter support explicitly.\nThe protocol version bump allows SPV nodes to assume that NODE_BLOOM is\nset if NODE_NETWORK is set for pre-70003 nodes.\n\nAlso adds an undocumented option to turn bloom filter support off for\ntesting purposes. Nodes attempting to use bloom filters are immediately\ndropped so as to not waste their bandwidth.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29834c0a077ddce249a8822fe2549e3dc5eb08c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/29834c0a077ddce249a8822fe2549e3dc5eb08c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29834c0a077ddce249a8822fe2549e3dc5eb08c1/comments",
    "author": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "petertodd",
      "id": 7042,
      "node_id": "MDQ6VXNlcjcwNDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7042?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/petertodd",
      "html_url": "https://github.com/petertodd",
      "followers_url": "https://api.github.com/users/petertodd/followers",
      "following_url": "https://api.github.com/users/petertodd/following{/other_user}",
      "gists_url": "https://api.github.com/users/petertodd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/petertodd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/petertodd/subscriptions",
      "organizations_url": "https://api.github.com/users/petertodd/orgs",
      "repos_url": "https://api.github.com/users/petertodd/repos",
      "events_url": "https://api.github.com/users/petertodd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/petertodd/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c50f2b4de8568112281895e66131dbcfec4cbbc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c50f2b4de8568112281895e66131dbcfec4cbbc6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c50f2b4de8568112281895e66131dbcfec4cbbc6"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 14,
      "deletions": 1
    },
    "files": [
      {
        "sha": "acec51192dd6c5f65bed0d5d4e35b8da7beb585a",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=29834c0a077ddce249a8822fe2549e3dc5eb08c1",
        "patch": "@@ -545,6 +545,9 @@ bool AppInit2(boost::thread_group& threadGroup)\n             nConnectTimeout = nNewTimeout;\n     }\n \n+    if (GetBoolArg(\"-bloomfilters\", true))\n+        nLocalServices |= NODE_BLOOM;\n+\n     // Continue to put \"/P2SH/\" in the coinbase to monitor\n     // BIP16 support.\n     // This can be removed eventually..."
      },
      {
        "sha": "9ddf22a37ab1d2e154461b385166358596ff0513",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 0,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=29834c0a077ddce249a8822fe2549e3dc5eb08c1",
        "patch": "@@ -4067,6 +4067,15 @@ bool static ProcessMessage(CNode* pfrom, string strCommand, CDataStream& vRecv)\n         }\n     }\n \n+    else if (!(nLocalServices & NODE_BLOOM) &&\n+             (strCommand == \"filterload\" ||\n+              strCommand == \"filteradd\" ||\n+              strCommand == \"filterclear\"))\n+    {\n+        pfrom->CloseSocketDisconnect();\n+        return error(\"peer %s %s attempted to set a bloom filter even though we do not advertise NODE_BLOOM\",\n+                     pfrom->addr.ToString(), pfrom->cleanSubVer);\n+    }\n \n     else if (strCommand == \"filterload\")\n     {"
      },
      {
        "sha": "d236c957a9ac73d0cb1d6013f7043d8e45fb9f3b",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=29834c0a077ddce249a8822fe2549e3dc5eb08c1",
        "patch": "@@ -63,6 +63,7 @@ class CMessageHeader\n enum\n {\n     NODE_NETWORK = (1 << 0),\n+    NODE_BLOOM   = (1 << 1),\n };\n \n /** A CService with information about it as peer */"
      },
      {
        "sha": "3256f0986eefb8a7ebf85e4e3938c2dfab0bcf4a",
        "filename": "src/version.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/version.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/29834c0a077ddce249a8822fe2549e3dc5eb08c1/src/version.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/version.h?ref=29834c0a077ddce249a8822fe2549e3dc5eb08c1",
        "patch": "@@ -26,7 +26,7 @@ extern const std::string CLIENT_DATE;\n // network protocol versioning\n //\n \n-static const int PROTOCOL_VERSION = 70002;\n+static const int PROTOCOL_VERSION = 70003;\n \n // intial proto version, to be increased after version/verack negotiation\n static const int INIT_PROTO_VERSION = 209;"
      }
    ]
  }
]