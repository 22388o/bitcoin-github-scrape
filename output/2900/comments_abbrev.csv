petertodd,2013-08-15T15:32:55Z,"The alert tests are protocol version specific; what would be best way to work around this? I'd say just set PROTOCOL_VERSION for testing, but it's a #define rather than a mutable variable.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22710734,22710734,
mikehearn,2013-08-15T16:43:58Z,"What DoS attacks? Why not post them to the security list so we can look at how to fix them (ignoring for now the fact that bitcoin is full of DoS attacks so this would not make much difference).\n\nAnyway, I think this pull request is a bad idea. I do not wish to have to support this in bitcoinj as it would complicate things significantly to have to search out nodes that properly support bloom fil",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22712679,22712679,
petertodd,2013-08-15T17:09:18Z,"For instance this one posted to the email list: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02490.html All of the devs, including you, are aware of a second and more serious non-public vulnerability.\n\nbitcoinj added a protocol version test to find bloom capable peers in revision 2c44a4fad7faccfe9b1392c67f60d21b25703bde; add a second test to check for the NODE_BLOOM b",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22714363,22714363,
gmaxwell,2013-08-15T18:17:19Z,"I asked Peter to open this pull.\n\nService bitting bloom makes sense to me— it increases nodes control over the granularity of the services they are providing the public, should it be needed— I have no clue why I didn't ask for this to begin with.  The primary risk I see with this is that it will potentially result in increased levels lazy alternative node implementers not implementing the bloom ",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22718867,22718867,
petertodd,2013-08-15T18:34:38Z,"Keep in mind that if an alternative node implementation doesn't want to put in the relatively small amount of effort to implement bloom filters, what makes you think they are going to put in the much larger amount of effort required to really get Bitcoin semantics exactly right regarding convergence? Given that SPV nodes are relatively dependent on their peers - especially if users are accepting z",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22720055,22720055,
mikehearn,2013-08-15T19:30:10Z,"So the argument is that because you can ask a peer to use _less_ bandwidth, that makes dos attacks _worse_?\n\nYou can't fix a denial of service by denying service. That's backwards, especially as I don't recall the last time I saw a DoS attacker who actually paid for his own bandwidth. The only way to fix it is to figure out who should be getting service and ensuring they get it first. So why don",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22723770,22723770,
petertodd,2013-08-15T20:42:04Z,"@mikehearn As you know the DoS attacks identified are not attacks on bandwidth, but rather other resources. Those attacks are significantly easier to pull off if the attacker can reduce the amount of data the targets send back to them; bloom filters do exactly that by reducing the INV messages the attacker receives, allowing one computer to attack a very large number of nodes with very little band",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22728664,22728664,
jgarzik,2013-08-16T00:15:20Z,"ACK NODE_BLOOM and ACK the entire patch, though myself, I probably wouldn't have added an option to disable bloom filters in the reference impl\n\nA minor BIP would be nice (like to document every protocol change in a BIP, even though this is terribly minor)\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22740077,22740077,
petertodd,2013-08-16T01:29:20Z,@jgarzik Good idea re: BIP.\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22742635,22742635,
wtogami,2013-08-16T03:57:30Z,"Note: When you bump the protocol version it breaks the alert tests. Your options are then to either generate new signed test data every time the protocol version is bumped, or rather fix the alert tests so the protocol version does not matter.\n\nhttps://github.com/litecoin-project/litecoin/commit/dbc5f6d7f4ef7ba38157e12b6d9c52ff99aba695\nLitecoin chose the latter option as the alert notify codepa",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22746389,22746389,
gavinandresen,2013-08-16T04:14:43Z,"I'm curious to see what @SergioDemianLerner thinks of this patch.\n\nMy concern is that if there IS a valid DoS attack on bloom-filter nodes (the ""attack"", as I understand it, is supposed to cause excessive disk seeking looking for transactions, yes?  ""meh"" -- worst case is ""node gets slow"" if it isn't running with big disk cache buffers or from an SSD), then adding a NODE_BLOOM bit will just make",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22746762,22746762,
luke-jr,2013-08-16T06:18:50Z,"We only have 64 service bits. It would make sense to only use them when nodes benefit from not implementing features. On the other hand, having a separate service bit means notes can support bloom filters, but _not_ NODE_NETWORK...\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22749513,22749513,
petertodd,2013-08-16T08:01:05Z,```\nuint64 nServices;\n```\n\nWe've got 64 of them - I don't think we're about to run out...\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22752833,22752833,
petertodd,2013-08-16T08:09:04Z,"@gavinandresen ""node gets slow"" is a potentially serious problem. ""making it easier for attackers to find them"": Serving SPV nodes is far less important to the health of the network than ensuring relaying works and consensus is maintained.\n\nNext time I'd suggest letting people finish exploring the issue before you assume revealing the exploit publicly won't do any harm.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22753140,22753140,
mikehearn,2013-08-16T10:40:34Z,"Can we cut it out with ""revealing the exploit"" stuff? It's trivial to find DoS attacks on bitcoind. I did it for fun last time this came up and it took about 45 minutes. I was going to post about it (it's a memory bloat issue) and then got distracted with the RNG stuff.\n\nWhy would we make bloom filtering optional? There's no benefit to be had from that at this point. If somebody wants to reimple",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22759172,22759172,
petertodd,2013-08-16T11:49:30Z,"Mike, enough with the overheated rhetoric.\n\nOccasionally nodes will have reasons not to offer the bloom filter service, while still having block data. (NODE_NETWORK) Right now the protocol doesn't give any way to say that, adding the NODE_BLOOM service bit lets you do that.\n\nOf course, if you are going to have NODE_BLOOM, it's useful to be able to disable the bloom service for testing SPV clie",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22761634,22761634,
petertodd,2013-08-16T11:52:26Z,"@wtogami I suggested awhile back to make it easy to set the alert keys locally for testing - maybe that's the way to handle testing them? You'd still have to regenerate the test cases every time the protocol version was changed, but that could be turned into a simple script using a known privkey.\n\nMight be a better idea in general: because the key is what's non-standard, you can have test cases ",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22761718,22761718,
SergioDemianLerner,2013-08-16T16:07:27Z,"I don't have access to the DoS report of  issue it's been discussed, but I can imagine.\n\nAny tool (or NODE_ bit) that gives the users the ability to mitigate an eventual DoS attack would be welcomed by the community. Bitcoin network protocol is not ""fair"", peers do not send the exact amount of useful information they receive. This is a true altruistic network, so I think people won't use these b",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22776227,22776227,
SergioDemianLerner,2013-08-16T16:15:07Z,"Regarding using the bit NODE_BLOOM maliciously to detect ""vulnerable"" nodes, I don't think this ease much an attack, since bloom enabled nodes can been detected by many different ways indirectly. (e.g. connecting to the victim with two peers, and testing if txs are filtered or not). \n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22776705,22776705,
petertodd,2013-08-16T16:18:14Z,"Another way of looking at it is Gavin is worried about NODE_BLOOM making it easier to detect ""vulnerable"" nodes, and his solution is to make all nodes vulnerable.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22776898,22776898,
wtogami,2013-08-17T11:58:17Z,"ACK to NODE_BLOOM and this particular patch.  We will however need a solution for the broken alert tests, preferably one that does not require the alert key signer to have de facto centralized control over any protocol version bumps.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22810433,22810433,
gmaxwell,2013-08-17T12:06:32Z,@wtogami change your test to run with a throwaway key which is only used in testing mode if thats your concern.\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22810556,22810556,
wtogami,2013-08-17T12:08:26Z,@gmaxwell Does that mean you suggest that be added as a second commit to this PR?\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22810585,22810585,
gmaxwell,2013-08-17T12:26:40Z,"@wtogami  No, I don't care, updating the protocol version is infrequent enough that we can just fix the test after doing so. ""Defacto centeral control"" is not a concern there, if you are having trouble getting the test updated you just make the change I suggested, remove the test, or remove the alert key entirely.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-22810860,22810860,
sipa,2013-08-25T15:46:55Z,"@gavinandresen I don't really follow your reasoning; assuming an attack exists (ignoring whether it does or not for now), then forcing everyone to be vulnerable is certainly worse than making it optional and advertizing it (perhaps combining it with stronger anti-DoS measures, knowing that it may reduce availability of other offered services).\n\nI do agree with @mikehearn that a decent resource-l",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-23229946,23229946,
petertodd,2013-08-26T16:12:00Z,"A good example where the very different requirements of the different types of nodes matters is for anyone with a lot of bandwidth available to them, but not a lot of disk io or memory, a common scenario for servers in datacenters.\n\nThe most efficient way to push blocks over the wire for such a server would be to use sendfile() to do a direct copy from the blockchain data on disk to the network ",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-23274616,23274616,
petertodd,2013-08-26T16:46:54Z,"Also, here is my draft BIP: http://www.mail-archive.com/bitcoin-development@lists.sourceforge.net/msg02751.html\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-23276995,23276995,
gavinandresen,2013-10-21T02:16:28Z,Needs rebase and a test plan. But I still think this is a bad idea....\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26689385,26689385,
petertodd,2013-10-21T03:02:38Z,"@gavinandresen rebased\n\nCurrent test plan and results has been as follows:\n\n1) Bloom filters enabled, NODE_BLOOM set, protocol version bump (default settings)\n\nPeers connect normally, no observed changes: PASS\nAndroid Bitcoin Wallet connects successfully: PASS\nAndroid Bitcoin Wallet connects as only peer: PASS\n\n2) Bloom filters disabled, NODE_BLOOM unset (-bloomfilters=0)\n\nNon-bloom-us",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26690423,26690423,
petertodd,2013-10-21T03:05:58Z,"Note that the alert tests need to be fixed because the protocol version was incremented, as discussed above; if disabled manually all other tests run fine.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26690505,26690505,
wtogami,2013-10-21T10:32:20Z,https://code.google.com/p/bitcoinj/source/detail?r=2c44a4fad7faccfe9b1392c67f60d21b25703bde\nThe current Android Wallet logic is to determine if a peer does bloom only from the protocol version.  bitcoinj would need to learn how to to read service bits.\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26706681,26706681,
petertodd,2013-10-21T10:36:53Z,"@wtogami Sure, but that's not something that prevents merging this patch; it's compatible with older SPV implementations. More to the point, those implementations aren't going to change until this patch is merged.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26706931,26706931,
wtogami,2013-10-21T10:38:41Z,"Sorry, I didn't mean that is a blocker for this patch, it was meant as a FYI.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26707029,26707029,
mikehearn,2013-10-21T13:23:06Z,"Um, old SPV implementations are not compatible with this patch - it is inherently impossible for them to be so. A node that opts out of a previously mandatory feature will still be expected to provide it by old software. If an old client connects to a new server that has the feature disabled, it will hang as it waits for a response to a message that the remote server has ignored.\n\nThis patch is ",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26716129,26716129,
petertodd,2013-10-21T13:35:35Z,"@mikehearn Read the patch prior to commenting about it; it automatically kicks older peers so they won't waste their bandwidth and my draft BIP says that behavior is a must.\n\nAlso, the requirements of serving archival and bloomfilter-using nodes are very different and can productively be optimized differently: https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-23274616\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26717023,26717023,
mikehearn,2013-10-21T13:41:04Z,"Yes, I read that comment. That's why I suggested serving the chain torrent if you have lots of bandwidth and not much CPU. Or heck, just serve snapshots of the chain via HTTP. Then you have a piece of software and protocol actually designed for serving large files, instead of bitcoin+p2p protocol which simply isn't.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26717448,26717448,
petertodd,2013-10-21T13:49:55Z,"So you agree that it's backwards compatible with older SPV implementations? Any other issues?\n\nI don't see why we want to depend on a clunky system of requiring separate manual torrent/HTTP downloads, especially given ideas like partial UTXO mode to transparently bring nodes from SPV security to full over time in the background.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26718181,26718181,
mikehearn,2013-10-21T14:03:59Z,"Your patch is ""backwards compatible"" as long as most nodes don't use it, which is not the meaning most people would associate with the term. Worse, you implemented this by DoS banning the IP address, which fails to take into account that many users (especially on mobile) sit behind giant NAT boxes. A single user who didn't upgrade could get their entire local cell tower or even city banned from ev",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26719432,26719432,
petertodd,2013-10-21T14:28:43Z,"Ah good, finally you looked at the code. Anyone have any comments re: the DoS behavior? I could potentially change it to simply close the associated connection.\n\nService bits are meant to advertise services, and performing computations on behalf of clients who don't serve other clients sounds very much like a service to me. That said I'd be very surprised to see many nodes operators disabling bl",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26721635,26721635,
TheBlueMatt,2013-10-21T14:31:11Z,I think it may make more sense to start advertising NODE_BLOOM before we add a (even undocumented) option to disable it. That could ease the transition significantly\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26721860,26721860,
petertodd,2013-10-21T14:53:20Z,"@TheBlueMatt If the sticking point for people is the fact that there is that option, I'll remove it.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26723942,26723942,
wtogami,2013-10-21T18:39:09Z,"> our patch is ""backwards compatible"" as long as most nodes don't use it\n\nNODE_BLOOM enabled-by-default with 0.9 combined with always-enabled with 0.8.x means most nodes will use it.\n\n> I think it may make more sense to start advertising NODE_BLOOM before we add a (even undocumented) option to disable it. That could ease the transition significantly\n\nPlease.  No.  Removing the option would m",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26744037,26744037,
gavinandresen,2013-10-21T22:32:37Z,"The ""sticking point"" for me is practical:  every service bit adds complication-- another possible configuration that should be tested, but probably won't be (which makes attacks more likely).\n\nI have seen zero evidence that requiring that every NODE_NETWORK node support bloom filters causes anything more than temporary denial-of-service problems for under-powered full nodes, and I see large bene",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26762842,26762842,
TheBlueMatt,2013-10-22T01:53:17Z,"On Mon, 2013-10-21 at 11:39 -0700, Warren Togami wrote:\n\n> ```\n>     I think it may make more sense to start advertising NODE_BLOOM\n>     before we add a (even undocumented) option to disable it. That\n>     could ease the transition significantly\n> ```\n> \n> Please. No. Removing the option would mean other clients can entirely\n> opt out of paying attention to the service bit, thereby rende",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-26771832,26771832,
petertodd,2013-10-26T06:15:10Z,"Updated to use CloseSocketDisconnect() rather than a 24-hour DoS-ban.\n\nTested with my Android wallet, which happily successfully connects then is disconnected about five times a second forever...\n\nOff-topic here, but @schildbach I'd suggest some kind of back-off algorithm, or at least waiting a second or two. It even does that on a cellular data connection, which could get rather expensive.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-27140402,27140402,
schildbach,2013-10-26T07:23:35Z,"@petertodd Yes, that's a well known regression in bitcoinj: http://code.google.com/p/bitcoinj/issues/detail?id=296\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-27141167,27141167,
laanwj,2014-05-28T13:50:47Z,"There has been no activity in this issue for more than half a year. What's the way forward here?\n\nIt is clear that next time that a service is introduced on the P2P network we have to be more careful, and add a services bit (or another way) to advertise the service instead of making it mandatory at a protocol version. This makes it possible for the node owner to choose whether to run the service",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44408614,44408614,
leofidus,2014-05-28T16:11:28Z,"Both Litecoin and Dogecoin as well as their forks have deployed this patch without problems. From what I've seen an heard, their SPV clients are not acutally looking for the service bit, since this patch is designed to be backwards compatible and there are only few nodes which disable bloom filters. Instead they are disconnected when trying to set the bloom filter and choose another node instead.\",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44429126,44429126,
mikehearn,2014-05-28T16:22:04Z,"Arguing for a patch on the grounds that not enough people use it to be harmful is not a great start. But I think we went around this six months ago and the conclusion was not to apply - the pull req should just have been closed back then.\n\nThe right way to solve the problem (is it a problem yet?) of nodes running out of CPU is to teach them how to prioritise within their capabilities, not expect",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44430483,44430483,
laanwj,2014-05-28T16:46:10Z,"Right, I run various nodes on cheap ARM boxes and have never seen significant CPU usage after the initial block sync (and from that, ECDSA verification is by far the most expensive operation). Bloom filtering is really efficient. If anyone can show with benchmarks/profiles that serving SPV nodes filtered blocks is actually a problem in practice, I'll gladly reconsider my opinion.\n\nBandwidth is a",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44433636,44433636,
jgarzik,2014-05-28T17:36:40Z,"AFAIK, this is not about CPU usage or network bandwidth at all, but about the ability of remote attackers to DoS a node's disk bandwidth.  The capability bit provides a way to opt out of one DoS attack vector.\n\nDo we need this?  My feeling is ""NAK"" but it is really a protocol change, and thus requires a BIP and some email list discussion (the latter of which has already happened, IIRC).\n\nEven ",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44439856,44439856,
wtogami,2014-05-28T18:25:13Z,Wouldn't it be a good idea to have for full node implementations like btcd which do not support bloom?\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44445834,44445834,
laanwj,2014-05-28T19:19:22Z,"This discussion has been going on for a long time. A draft BIP was written, as well as discussion on the mailing list: http://sourceforge.net/p/bitcoin/mailman/message/31298904/ . \n\nIf this is to be merged it at least needs a rebase.\n\nIn any case there needs to be a decision, this has dragged on for too long, and no one seems to care much either way. If we don't absolutely need it it's IMO bet",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44452306,44452306,
petertodd,2014-05-28T19:37:51Z,I'll be submitting the BIP to the bitcoin/bips repo once I get back next week.\n\n@wtogami Exactly. Obelisk nodes don't support bloom filters either; they will in the future support the more scalable and private prefix filters. Eventually we'll likely wind up with NODE_PREFIX in addition to NODE_BLOOM.\n,https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44454314,44454314,
mikehearn,2014-05-28T19:58:16Z,"@laanwj I think @gavinandresen's announcement has left the chain of command a little unclear, but  I guess if you want a decision, it's up to you to make one. Asking for one just makes us all restate our positions again, it doesn't lead to a decision :)\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-44456588,44456588,
BitcoinPullTester,2014-06-06T07:43:02Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/29834c0a077ddce249a8822fe2549e3dc5eb08c1 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-45310982,45310982,
gavinandresen,2014-06-12T13:44:40Z,"Closing, no consensus this is a good idea.\n",https://github.com/bitcoin/bitcoin/pull/2900#issuecomment-45892726,45892726,
