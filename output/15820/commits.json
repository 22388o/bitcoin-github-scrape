[
  {
    "sha": "01971da9bd88c454403ba41b70c9e7f707d00bad",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMTk3MWRhOWJkODhjNDU0NDAzYmE0MWI3MGM5ZTdmNzA3ZDAwYmFk",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2019-04-15T17:17:04Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "accounts@carldong.me",
        "date": "2019-05-15T18:12:45Z"
      },
      "message": "docs: Add productivity notes for \"dummy rebases\"",
      "tree": {
        "sha": "fd9ad8f562a4222e3378ce17a81c0e35366eae92",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd9ad8f562a4222e3378ce17a81c0e35366eae92"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/01971da9bd88c454403ba41b70c9e7f707d00bad",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01971da9bd88c454403ba41b70c9e7f707d00bad",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/01971da9bd88c454403ba41b70c9e7f707d00bad",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/01971da9bd88c454403ba41b70c9e7f707d00bad/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2d16fb7a2b6a9e5a2535295d2de03e27c2438d1f"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "b25ddc94e500b27e881683845c595a436110ffc4",
        "filename": "doc/productivity.md",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/01971da9bd88c454403ba41b70c9e7f707d00bad/doc/productivity.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/01971da9bd88c454403ba41b70c9e7f707d00bad/doc/productivity.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/productivity.md?ref=01971da9bd88c454403ba41b70c9e7f707d00bad",
        "patch": "@@ -10,6 +10,7 @@ Table of Contents\n    * [Make use of your threads with `make -j`](#make-use-of-your-threads-with-make--j)\n    * [Only build what you need](#only-build-what-you-need)\n    * [Multiple working directories with `git worktrees`](#multiple-working-directories-with-git-worktrees)\n+   * [Interactive \"dummy rebases\" for fixups and execs with `git merge-base`](#interactive-dummy-rebases-for-fixups-and-execs-with-git-merge-base)\n * [Writing code](#writing-code)\n    * [Format C/C++/Protobuf diffs with `clang-format-diff.py`](#format-ccprotobuf-diffs-with-clang-format-diffpy)\n    * [Format Python diffs with `yapf-diff.py`](#format-python-diffs-with-yapf-diffpy)\n@@ -93,6 +94,21 @@ To simply check out a commit-ish under a new working directory without disruptin\n git worktree add --checkout ../where-my-checkout-commit-ish-will-live my-checkout-commit-ish\n ```\n \n+### Interactive \"dummy rebases\" for fixups and execs with `git merge-base`\n+\n+When rebasing, we often want to do a \"dummy rebase,\" whereby we are not rebasing over an updated master but rather over the last common commit with master. This might be useful for rearranging commits, `rebase --autosquash`ing, or `rebase --exec`ing without introducing conflicts that arise from an updated master. In these situations, we can use `git merge-base` to identify the last common commit with master, and rebase off of that.\n+\n+To squash in `git commit --fixup` commits without rebasing over an updated master, we can do the following:\n+\n+```sh\n+git rebase -i --autosquash \"$(git merge-base master HEAD)\"\n+```\n+\n+To execute `make check` on every commit since last diverged from master, but without rebasing over an updated master, we can do the following:\n+```sh\n+git rebase -i --exec \"make check\" \"$(git merge-base master HEAD)\"\n+```\n+\n -----\n \n This synergizes well with [`ccache`](#cache-compilations-with-ccache) as objects resulting from unchanged code will most likely hit the cache and won't need to be recompiled."
      }
    ]
  }
]