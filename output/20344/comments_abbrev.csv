practicalswift,2020-11-08 19:44:56,"ACK 4771bac85b3924f118d326afb05347992815514d, but consider getting rid of the UBSan suppression that is no longer needed after this change :)\n\nFWIW I've tried getting rid of this and all other float divide by zeros in our code base before (see PR #17208), but I had to close that PR due to lack of reviewer interest back then :)\n\nPlease consider taking on the other cases from #17208 when you",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-723656376,723656376,
MarcoFalke,2020-11-11 09:19:26,"Please remove the unused suppression:\n\n\n```diff\ndiff --git a/test/sanitizer_suppressions/ubsan b/test/sanitizer_suppressions/ubsan\nindex 75257d886..784273952 100644\n--- a/test/sanitizer_suppressions/ubsan\n+++ b/test/sanitizer_suppressions/ubsan\n@@ -1,7 +1,6 @@\n # -fsanitize=undefined suppressions\n # =================================\n float-divide-by-zero:validation.cpp\n-flo",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-725306476,725306476,
theStack,2020-11-11 12:24:28,"Force-pushed with the UBSan suppression removal as suggested by practicalswift and MarcoFalke.\n\n> Please consider taking on the other cases from #17208 when you're done with this one. I'd be glad to review :)\n\nThanks for the suggestion and review offer, will definitely take a look into it.",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-725394204,725394204,
MarcoFalke,2020-11-11 15:09:40,review ACK 5e146022daa4336de94447e5b8e5418296286927,https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-725477131,725477131,
fanquake,2020-11-12 11:27:11,"@jonasschnelli reported on IRC that builds have been failing on his CI since this PR was merged. https://bitcoinbuilds.org/index.php?job=ffb7d59f-379f-4f27-a273-a5595b8c5f07:\n```bash\n********* Start testing of WalletTests *********\nConfig: Using QtTest library 5.9.5, Qt 5.9.5 (x86_64-little_endian-lp64 shared (dynamic) release build; by GCC 7.4.0)\nPASS   : WalletTests::initTestCase()\nQDE",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-726019598,726019598,
jonasschnelli,2020-11-12 11:44:22,"This triggers at least a dev-by-0 here (https://github.com/bitcoin/bitcoin/blob/9bd1316697292251ed5690390794fc64517fc86b/src/wallet/wallet.cpp#L3110)\n\nMaybe at other places?\n\nHow could this not trigger a travis error? I guess we run the qt tests there as well?",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-726027802,726027802,
MarcoFalke,2020-11-12 12:00:13,"Yes, the qt tests did run: https://cirrus-ci.com/task/5112026252967936?command=ci#L3962",https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-726034884,726034884,
practicalswift,2020-11-12 13:25:25,@fanquake @jonasschnelli Feel free to cherry-pick in 0201cbcd866f1527b3b097823ad522662a4d84ad from #17208.,https://github.com/bitcoin/bitcoin/pull/20344#issuecomment-726075579,726075579,
promag,2020-11-11 12:42:47,"nit, ~~one time check~~:\n```cpp\n// avoid divide-by-zero for single block scan range (i.e. start and stop hashes are equal)\ndouble progress_ratio = progress_end > progress_begin ? progress_end - progress_begin : 1;\nwhile (...) {\n    m_scanning_progress = (progress_current - progress_begin) / progress_ratio;\n```\nwait, `progress_end` can change in the loop, never mind then.",https://github.com/bitcoin/bitcoin/pull/20344#discussion_r521331581,521331581,src/wallet/wallet.cpp
