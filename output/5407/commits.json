[
  {
    "sha": "9e56532959939f417d7603aa2a4a2c1687508897",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZTU2NTMyOTU5OTM5ZjQxN2Q3NjAzYWEyYTRhMmMxNjg3NTA4ODk3",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-12-02T16:44:50Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2014-12-03T00:07:39Z"
      },
      "message": "Coinbases-in-mempool regression test\n\nImmature coinbase spends are allowed in the memory pool if they can be mined in the next block.\nThey are not allowed in the memory pool if they cannot be mined in the next block.\n\nThis regression test tests those edge cases.",
      "tree": {
        "sha": "01c4e87a2d0f452ee201db473e410c2258a22987",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/01c4e87a2d0f452ee201db473e410c2258a22987"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9e56532959939f417d7603aa2a4a2c1687508897",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlR+VE4ACgkQdYgkL74406gqDgCbBDaa6vion8tg0sfwHKMjCL5P\ncGYAoJqlbbue9ClYVegJMOmVh9JkMchK\n=TESe\n-----END PGP SIGNATURE-----",
        "payload": "tree 01c4e87a2d0f452ee201db473e410c2258a22987\nparent 90f7aa777865864d5cf7d1f12af8ef37d851faab\nauthor Gavin Andresen <gavinandresen@gmail.com> 1417538690 -0500\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1417565259 -0500\n\nCoinbases-in-mempool regression test\n\nImmature coinbase spends are allowed in the memory pool if they can be mined in the next block.\nThey are not allowed in the memory pool if they cannot be mined in the next block.\n\nThis regression test tests those edge cases.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e56532959939f417d7603aa2a4a2c1687508897",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9e56532959939f417d7603aa2a4a2c1687508897",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9e56532959939f417d7603aa2a4a2c1687508897/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "90f7aa777865864d5cf7d1f12af8ef37d851faab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/90f7aa777865864d5cf7d1f12af8ef37d851faab",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/90f7aa777865864d5cf7d1f12af8ef37d851faab"
      }
    ],
    "stats": {
      "total": 82,
      "additions": 81,
      "deletions": 1
    },
    "files": [
      {
        "sha": "9587d90dfe7e4071f6eb9cd12b128f62c6b88c42",
        "filename": "qa/pull-tester/rpc-tests.sh",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e56532959939f417d7603aa2a4a2c1687508897/qa/pull-tester/rpc-tests.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e56532959939f417d7603aa2a4a2c1687508897/qa/pull-tester/rpc-tests.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/pull-tester/rpc-tests.sh?ref=9e56532959939f417d7603aa2a4a2c1687508897",
        "patch": "@@ -22,6 +22,7 @@ if [ \"x${ENABLE_BITCOIND}${ENABLE_UTILS}${ENABLE_WALLET}\" = \"x111\" ]; then\n   ${BUILDDIR}/qa/rpc-tests/txn_doublespend.py --mineblock --srcdir \"${BUILDDIR}/src\"\n   ${BUILDDIR}/qa/rpc-tests/getchaintips.py --srcdir \"${BUILDDIR}/src\"\n   ${BUILDDIR}/qa/rpc-tests/rest.py --srcdir \"${BUILDDIR}/src\"\n+  ${BUILDDIR}/qa/rpc-tests/mempool_spendcoinbase.py --srcdir \"${BUILDDIR}/src\"\n   #${BUILDDIR}/qa/rpc-tests/forknotify.py --srcdir \"${BUILDDIR}/src\"\n else\n   echo \"No rpc tests to run. Wallet, utils, and bitcoind must all be enabled\""
      },
      {
        "sha": "0fc7c8577eab361f027b09fb5e348cf53b9f879b",
        "filename": "qa/rpc-tests/mempool_spendcoinbase.py",
        "status": "added",
        "additions": 69,
        "deletions": 0,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e56532959939f417d7603aa2a4a2c1687508897/qa/rpc-tests/mempool_spendcoinbase.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e56532959939f417d7603aa2a4a2c1687508897/qa/rpc-tests/mempool_spendcoinbase.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/mempool_spendcoinbase.py?ref=9e56532959939f417d7603aa2a4a2c1687508897",
        "patch": "@@ -0,0 +1,69 @@\n+#!/usr/bin/env python\n+# Copyright (c) 2014 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#\n+# Test spending coinbase transactions.\n+# The coinbase transaction in block N can appear in block\n+# N+100... so is valid in the mempool when the best block\n+# height is N+99.\n+# This test makes sure coinbase spends that will be mature\n+# in the next block are accepted into the memory pool,\n+# but less mature coinbase spends are NOT.\n+#\n+\n+from test_framework import BitcoinTestFramework\n+from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException\n+from util import *\n+import os\n+import shutil\n+\n+# Create one-input, one-output, no-fee transaction:\n+class MempoolSpendCoinbaseTest(BitcoinTestFramework):\n+\n+    def setup_network(self):\n+        # Just need one node for this test\n+        args = [\"-checkmempool\", \"-debug=mempool\"]\n+        self.nodes = []\n+        self.nodes.append(start_node(0, self.options.tmpdir, args))\n+        self.is_network_split = False\n+\n+    def create_tx(self, from_txid, to_address, amount):\n+        inputs = [{ \"txid\" : from_txid, \"vout\" : 0}]\n+        outputs = { to_address : amount }\n+        rawtx = self.nodes[0].createrawtransaction(inputs, outputs)\n+        signresult = self.nodes[0].signrawtransaction(rawtx)\n+        assert_equal(signresult[\"complete\"], True)\n+        return signresult[\"hex\"]\n+\n+    def run_test(self):\n+        chain_height = self.nodes[0].getblockcount()\n+        assert_equal(chain_height, 200)\n+        node0_address = self.nodes[0].getnewaddress()\n+\n+        # Coinbase at height chain_height-100+1 ok in mempool, should\n+        # get mined. Coinbase at height chain_height-100+2 is\n+        # is too immature to spend.\n+        b = [ self.nodes[0].getblockhash(n) for n in range(101, 103) ]\n+        coinbase_txids = [ self.nodes[0].getblock(h)['tx'][0] for h in b ]\n+        spends_raw = [ self.create_tx(txid, node0_address, 50) for txid in coinbase_txids ]\n+\n+        spend_101_id = self.nodes[0].sendrawtransaction(spends_raw[0])\n+\n+        # coinbase at height 102 should be too immature to spend\n+        assert_raises(JSONRPCException, self.nodes[0].sendrawtransaction, spends_raw[1])\n+\n+        # mempool should have just spend_101:\n+        assert_equal(self.nodes[0].getrawmempool(), [ spend_101_id ])\n+\n+        # mine a block, spend_101 should get confirmed\n+        self.nodes[0].setgenerate(True, 1)\n+        assert_equal(set(self.nodes[0].getrawmempool()), set())\n+\n+        # ... and now height 102 can be spent:\n+        spend_102_id = self.nodes[0].sendrawtransaction(spends_raw[1])\n+        assert_equal(self.nodes[0].getrawmempool(), [ spend_102_id ])\n+\n+if __name__ == '__main__':\n+    MempoolSpendCoinbaseTest().main()"
      },
      {
        "sha": "ec65f783e8f19c1ffae18a450f0b7b62a6ed044d",
        "filename": "qa/rpc-tests/util.py",
        "status": "modified",
        "additions": 11,
        "deletions": 1,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9e56532959939f417d7603aa2a4a2c1687508897/qa/rpc-tests/util.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9e56532959939f417d7603aa2a4a2c1687508897/qa/rpc-tests/util.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/util.py?ref=9e56532959939f417d7603aa2a4a2c1687508897",
        "patch": "@@ -330,4 +330,14 @@ def assert_equal(thing1, thing2):\n \n def assert_greater_than(thing1, thing2):\n     if thing1 <= thing2:\n-        raise AssertionError(\"%s <= %s\"%(str(thing1),str(thing2)))\n\\ No newline at end of file\n+        raise AssertionError(\"%s <= %s\"%(str(thing1),str(thing2)))\n+\n+def assert_raises(exc, fun, *args, **kwds):\n+    try:\n+        fun(*args, **kwds)\n+    except exc:\n+        pass\n+    except Exception as e:\n+        raise AssertionError(\"Unexpected exception raised: \"+type(e).__name__)\n+    else:\n+        raise AssertionError(\"No exception raised\")"
      }
    ]
  }
]