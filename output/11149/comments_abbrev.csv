danra,2017-08-25T22:54:30Z,"@promag Would this be more manageable if this was split into single-file commits? I wouldn't mind doing that, but I'm just started out with pull requests to this repo and so far I got the impression that multiple small pull requests would be frowned upon.",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325051438,325051438,
danra,2017-08-25T22:56:18Z,"@luke-jr cppcheck pointed to all the non-trivial object increments which should be optimized. Beyond that, there was no automation. Automation of this would probably require building a clang module or similar, since one can't blindly change all postfixes to prefixes, only those where the result is not used.",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325051658,325051658,
promag,2017-08-25T23:02:59Z,"I think everyone agrees if you add a developer note with the advice, and keep an eye on PR's that add or touch code with postfix inc/dec.\n\nAs for this PR, wait for more feedback. If you could make this scripted then I wouldn't mind if it doesn't fix the code style as @luke-jr suggests.",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325052481,325052481,
danra,2017-08-25T23:19:49Z,"@promag There is actually already such a note in the developer notes:\n\n> ++i is preferred over i++.\n\nShould I expand on the reasoning for this in the developer notes?",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325054453,325054453,
achow101,2017-08-26T03:57:10Z,"I tend toward NACKing this. It is a lot of code churn and will likely require a lot of other PRs to be rebased and work through a lot of merge conflict stuff. Also, shouldn't the compiler be optimizing out all of those anyways so it doesn't really matter?",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325081994,325081994,
danra,2017-08-26T08:59:07Z,"@achow101 \n>  Also, shouldn't the compiler be optimizing out all of those anyways so it doesn't really matter?\n\nThe experts say no. Isn't Scott Meyers' advice authoritative enough? :)\n\nAlso, see https://stackoverflow.com/questions/30036749/is-it-still-better-to-prefer-pre-increment-over-post-increment\n\nMy favorite quote from there:\n\n> The point is, the compiler is free to change ",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325105019,325105019,
promag,2017-08-26T09:14:28Z,"NACK, although it's a better code and all, unless you show numbers of performance increase.",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325106336,325106336,
laanwj,2017-08-26T10:51:53Z,"This should certainly be done in new code, but not sure about changing this for the entire existing code at once. Seems too much. Usually we improve minor things like this as time goes on and code needs to be changed anyway.\n\nAlso this does have a risk attached, as the compiled code will not always stay the same (which is the point).\n\nDo you see any differences in benchmarks/profiles to wa",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325114413,325114413,
danra,2017-08-26T11:32:08Z,@laanwj I don't. Just thought that fixing some cppcheck performance messages as well as following the developer guidelines would be reason enough to introduce this fix.,https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325117703,325117703,
meshcollider,2017-08-26T12:12:53Z,"Yeah because there are no real benefits to the change other than code style changes, its not worth the merge issues and even small risks imo, so I'd have to give this a NACK. Thanks though, nice in theory :)",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325121143,325121143,
MarcoFalke,2017-08-27T00:04:03Z,"The last time someone tried those changes, we compared the binaries before\nand after and nothing changed. Implying that the compiler can handle this.\n\nOn Sat, Aug 26, 2017 at 8:13 AM, MeshCollider <notifications@github.com>\nwrote:\n\n> Yeah because there are no real benefits to the change other than code\n> style changes, its not worth the merge issues and even small risks imo, so\n> I'd have ",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325168671,325168671,
laanwj,2017-08-28T08:23:17Z,"Ok, closing this then. Sorry.",https://github.com/bitcoin/bitcoin/pull/11149#issuecomment-325291967,325291967,
luke-jr,2017-08-25T22:32:13Z,"While you're touching these, can you add braces too (in a separate commit in the same PR)?",https://github.com/bitcoin/bitcoin/pull/11149#discussion_r135365493,135365493,src/arith_uint256.h
luke-jr,2017-08-25T22:34:16Z,Add some spaces here.,https://github.com/bitcoin/bitcoin/pull/11149#discussion_r135365765,135365765,src/net.cpp
MarcoFalke,2017-08-25T23:20:42Z,"In the subject you mention ""for non-trivial types"". I always thought that int was a trivial type.",https://github.com/bitcoin/bitcoin/pull/11149#discussion_r135370502,135370502,src/addrman.cpp
danra,2017-08-25T23:28:15Z,"I've explained this in the commit message body:\n\n> All the modified files fix this for some objects of non-trivial type. Increments/decrements of trivial types in these files were also converted to prefix instead of postfix (wherever the result isn't used) for consistency.\n\nBut, I'll change the subject to reflect that as well.",https://github.com/bitcoin/bitcoin/pull/11149#discussion_r135371142,135371142,src/addrman.cpp
