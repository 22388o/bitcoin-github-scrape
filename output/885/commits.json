[
  {
    "sha": "34f878891520927206fb81993579cfad8e74a793",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNGY4Nzg4OTE1MjA5MjcyMDZmYjgxOTkzNTc5Y2ZhZDhlNzRhNzkz",
    "commit": {
      "author": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-22T17:12:28Z"
      },
      "committer": {
        "name": "Luke Dashjr",
        "email": "luke-jr+git@utopios.org",
        "date": "2012-02-22T17:31:28Z"
      },
      "message": "Cleanup JSON-RPC getblock output to be consistent\n- Add \"size\" and \"bits\"\n- Rename \"blockcount\" to \"height\"\n- Rename \"hashprevious\" and \"hashnext\" to \"previousblockhash\" and \"nextblockhash\" (respectively)",
      "tree": {
        "sha": "b3486d14570bc8c0980a5cbdca0ad284ff11cac0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3486d14570bc8c0980a5cbdca0ad284ff11cac0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/34f878891520927206fb81993579cfad8e74a793",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f878891520927206fb81993579cfad8e74a793",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/34f878891520927206fb81993579cfad8e74a793",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/34f878891520927206fb81993579cfad8e74a793/comments",
    "author": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "luke-jr",
      "id": 1095675,
      "node_id": "MDQ6VXNlcjEwOTU2NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1095675?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/luke-jr",
      "html_url": "https://github.com/luke-jr",
      "followers_url": "https://api.github.com/users/luke-jr/followers",
      "following_url": "https://api.github.com/users/luke-jr/following{/other_user}",
      "gists_url": "https://api.github.com/users/luke-jr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/luke-jr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/luke-jr/subscriptions",
      "organizations_url": "https://api.github.com/users/luke-jr/orgs",
      "repos_url": "https://api.github.com/users/luke-jr/repos",
      "events_url": "https://api.github.com/users/luke-jr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/luke-jr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1af97c95f377245d359f309035011ac499239635",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1af97c95f377245d359f309035011ac499239635",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1af97c95f377245d359f309035011ac499239635"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 17,
      "deletions": 10
    },
    "files": [
      {
        "sha": "c677b174ca960e834db0126da12c6ae9eadf27e2",
        "filename": "src/bitcoinrpc.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 10,
        "changes": 27,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/34f878891520927206fb81993579cfad8e74a793/src/bitcoinrpc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/34f878891520927206fb81993579cfad8e74a793/src/bitcoinrpc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bitcoinrpc.cpp?ref=34f878891520927206fb81993579cfad8e74a793",
        "patch": "@@ -120,6 +120,17 @@ Value ValueFromAmount(int64 amount)\n     return (double)amount / (double)COIN;\n }\n \n+std::string\n+HexBits(unsigned int nBits)\n+{\n+    union {\n+        int32_t nBits;\n+        char cBits[4];\n+    } uBits;\n+    uBits.nBits = htonl((int32_t)nBits);\n+    return HexStr(BEGIN(uBits.cBits), END(uBits.cBits));\n+}\n+\n void WalletTxToJSON(const CWalletTx& wtx, Object& entry)\n {\n     int confirms = wtx.GetDepthInMainChain();\n@@ -147,21 +158,23 @@ Object blockToJSON(const CBlock& block, const CBlockIndex* blockindex)\n {\n     Object result;\n     result.push_back(Pair(\"hash\", block.GetHash().GetHex()));\n-    result.push_back(Pair(\"blockcount\", blockindex->nHeight));\n+    result.push_back(Pair(\"size\", (int)::GetSerializeSize(block, SER_NETWORK)));\n+    result.push_back(Pair(\"height\", blockindex->nHeight));\n     result.push_back(Pair(\"version\", block.nVersion));\n     result.push_back(Pair(\"merkleroot\", block.hashMerkleRoot.GetHex()));\n     result.push_back(Pair(\"time\", (boost::int64_t)block.GetBlockTime()));\n     result.push_back(Pair(\"nonce\", (boost::uint64_t)block.nNonce));\n+    result.push_back(Pair(\"bits\", HexBits(block.nBits)));\n     result.push_back(Pair(\"difficulty\", GetDifficulty(blockindex)));\n     Array txhashes;\n     BOOST_FOREACH (const CTransaction&tx, block.vtx)\n         txhashes.push_back(tx.GetHash().GetHex());\n     result.push_back(Pair(\"tx\", txhashes));\n \n     if (blockindex->pprev)\n-        result.push_back(Pair(\"hashprevious\", blockindex->pprev->GetBlockHash().GetHex()));\n+        result.push_back(Pair(\"previousblockhash\", blockindex->pprev->GetBlockHash().GetHex()));\n     if (blockindex->pnext)\n-        result.push_back(Pair(\"hashnext\", blockindex->pnext->GetBlockHash().GetHex()));\n+        result.push_back(Pair(\"nextblockhash\", blockindex->pnext->GetBlockHash().GetHex()));\n     return result;\n }\n \n@@ -1939,13 +1952,7 @@ Value getmemorypool(const Array& params, bool fHelp)\n         result.push_back(Pair(\"time\", (int64_t)pblock->nTime));\n         result.push_back(Pair(\"mintime\", (int64_t)pindexPrev->GetMedianTimePast()+1));\n         result.push_back(Pair(\"curtime\", (int64_t)GetAdjustedTime()));\n-\n-        union {\n-            int32_t nBits;\n-            char cBits[4];\n-        } uBits;\n-        uBits.nBits = htonl((int32_t)pblock->nBits);\n-        result.push_back(Pair(\"bits\", HexStr(BEGIN(uBits.cBits), END(uBits.cBits))));\n+        result.push_back(Pair(\"bits\", HexBits(pblock->nBits)));\n \n         return result;\n     }"
      }
    ]
  }
]