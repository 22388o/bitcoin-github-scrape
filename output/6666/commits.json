[
  {
    "sha": "132fb974a1ac4353a7bd383cf78dcedbb939b02c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMzJmYjk3NGExYWM0MzUzYTdiZDM4M2NmNzhkY2VkYmI5MzliMDJj",
    "commit": {
      "author": {
        "name": "sandakersmann",
        "email": "mkjaerstad@yahoo.no",
        "date": "2015-09-12T20:17:35Z"
      },
      "committer": {
        "name": "sandakersmann",
        "email": "mkjaerstad@yahoo.no",
        "date": "2015-09-12T20:17:35Z"
      },
      "message": "Blockchain is one word",
      "tree": {
        "sha": "438b348b517d0945cfbe7dadd768fe33c0812364",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/438b348b517d0945cfbe7dadd768fe33c0812364"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/132fb974a1ac4353a7bd383cf78dcedbb939b02c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/132fb974a1ac4353a7bd383cf78dcedbb939b02c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/132fb974a1ac4353a7bd383cf78dcedbb939b02c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/132fb974a1ac4353a7bd383cf78dcedbb939b02c/comments",
    "author": null,
    "committer": null,
    "parents": [
      {
        "sha": "3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3224936bedd8fe777b23d43c253abd2c0cd95d22",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3224936bedd8fe777b23d43c253abd2c0cd95d22"
      }
    ],
    "stats": {
      "total": 194,
      "additions": 97,
      "deletions": 97
    },
    "files": [
      {
        "sha": "cf29b58d50da747e2f3030c3ebf4e48552c413a1",
        "filename": "contrib/debian/manpages/bitcoin-qt.1",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/debian/manpages/bitcoin-qt.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/debian/manpages/bitcoin-qt.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoin-qt.1?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -65,7 +65,7 @@ Only connect to nodes in network <net> (IPv4, IPv6 or Tor)\n Discover own IP address (default: 1 when listening and no \\fB\\-externalip\\fR)\n .TP\n \\fB\\-checkpoints\\fR\n-Only accept block chain matching built\\-in checkpoints (default: 1)\n+Only accept blockchain matching built\\-in checkpoints (default: 1)\n .TP\n \\fB\\-listen\\fR\n Accept connections from outside (default: 1 if no \\fB\\-proxy\\fR or \\fB\\-connect\\fR)\n@@ -146,7 +146,7 @@ Upgrade wallet to latest format\n Set key pool size to <n> (default: 100)\n .TP\n \\fB\\-rescan\\fR\n-Rescan the block chain for missing wallet transactions\n+Rescan the blockchain for missing wallet transactions\n .TP\n \\fB\\-salvagewallet\\fR\n Attempt to recover private keys from a corrupt wallet.dat\n@@ -164,7 +164,7 @@ Maintain a full transaction index (default: 0)\n Imports blocks from external blk000??.dat file\n .TP\n \\fB\\-reindex\\fR\n-Rebuild block chain index from current blk000??.dat files\n+Rebuild blockchain index from current blk000??.dat files\n .TP\n \\fB\\-par=\\fR<n>\n Set the number of script verification threads (1\\-16, 0=auto, default: 0)"
      },
      {
        "sha": "080b8370dbbc8a27a99f67d8a96331840d329658",
        "filename": "contrib/debian/manpages/bitcoind.1",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/debian/manpages/bitcoind.1",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/debian/manpages/bitcoind.1",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/manpages/bitcoind.1?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -86,10 +86,10 @@ DEPRECATED. Returns the list of addresses associated with the given 'account'.\n Returns the server's available balance, or the balance for 'account' (accounts are deprecated).\n .TP\n \\fBgetblockcount\\fR\n-Returns the number of blocks in the longest block chain.\n+Returns the number of blocks in the longest blockchain.\n .TP\n \\fBgetblocknumber\\fR\n-Returns the block number of the latest block in the longest block chain.\n+Returns the block number of the latest block in the longest blockchain.\n .TP\n \\fBgetconnectioncount\\fR\n Returns the number of connections to other nodes."
      },
      {
        "sha": "586523af48e848fb9415b17576f055aeb5d6315d",
        "filename": "contrib/linearize/README.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/linearize/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/contrib/linearize/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/README.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -10,7 +10,7 @@ Required configuration file settings for linearize-hashes:\n \n Optional config file setting for linearize-hashes:\n * RPC: host, port\n-* Block chain: min_height, max_height\n+* Blockchain: min_height, max_height\n \n ## Step 2: Copy local block data\n "
      },
      {
        "sha": "a602a1a3c535c2a29f8faa6e7ecc22cfbc309e68",
        "filename": "doc/REST-interface.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/REST-interface.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/REST-interface.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/REST-interface.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -31,7 +31,7 @@ Given a block hash: returns <COUNT> amount of blockheaders in upward direction.\n ####Chaininfos\n `GET /rest/chaininfo.json`\n \n-Returns various state info regarding block chain processing.\n+Returns various state info regarding blockchain processing.\n Only supports JSON as output format.\n * chain : (string) current network name as defined in BIP70 (main, test, regtest)\n * blocks : (numeric) the current number of blocks processed in the server"
      },
      {
        "sha": "6ffc34f42fec5ce12d80fee9a70329d031926f49",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -5,7 +5,7 @@\n * blocks/blk000??.dat: block data (custom, 128 MiB per file); since 0.8.0\n * blocks/rev000??.dat; block undo data (custom); since 0.8.0 (format changed since pre-0.8)\n * blocks/index/*; block index (LevelDB); since 0.8.0\n-* chainstate/*; block chain state database (LevelDB); since 0.8.0\n+* chainstate/*; blockchain state database (LevelDB); since 0.8.0\n * database/*: BDB database environment; only used for wallet since 0.8.0\n * db.log: wallet database log file\n * debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n@@ -15,12 +15,12 @@\n \n Only used in pre-0.8.0\n ---------------------\n-* blktree/*; block chain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n+* blktree/*; blockchain index (LevelDB); since pre-0.8, replaced by blocks/index/* in 0.8.0\n * coins/*; unspent transaction output database (LevelDB); since pre-0.8, replaced by chainstate/* in 0.8.0\n \n Only used before 0.8.0\n ---------------------\n-* blkindex.dat: block chain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n+* blkindex.dat: blockchain index database (BDB); replaced by {chainstate/*,blocks/index/*,blocks/rev000??.dat} in 0.8.0\n * blk000?.dat: block data (custom, 2 GiB per file); replaced by blocks/blk000??.dat in 0.8.0\n \n Only used before 0.7.0"
      },
      {
        "sha": "1c22cd15de901ced6937b2e58766347d3d57fed4",
        "filename": "doc/release-notes/release-notes-0.10.0.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.10.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.10.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.0.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -69,7 +69,7 @@ the number of validated blocks.\n common with each peer. While synchronizing, the heights of the blocks that we\n have requested from peers (but haven't received yet) are also listed as\n 'inflight'.\n-- A new RPC `getchaintips` lists all known branches of the block chain,\n+- A new RPC `getchaintips` lists all known branches of the blockchain,\n including those we only have headers for.\n \n Transaction fee changes\n@@ -216,7 +216,7 @@ RPC documentation for those methods for more information.\n \n Compared to using `getrawtransaction`, this mechanism does not require\n `-txindex`, scales better, integrates better with the wallet, and is compatible\n-with future block chain pruning functionality. It does mean that all relevant\n+with future blockchain pruning functionality. It does mean that all relevant\n addresses need to added to the wallet before the payment, though.\n \n Consensus library"
      },
      {
        "sha": "872ff25f9f2651d4b9a1b24f6774a9345354bda5",
        "filename": "doc/release-notes/release-notes-0.10.1.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.10.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.10.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.10.1.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -64,7 +64,7 @@ Block (database) and transaction handling:\n - `1d2cdd2` Fix InvalidateBlock to add chainActive.Tip to setBlockIndexCandidates\n - `c91c660` fix InvalidateBlock to repopulate setBlockIndexCandidates\n - `002c8a2` fix possible block db breakage during re-index\n-- `a1f425b` Add (optional) consistency check for the block chain data structures\n+- `a1f425b` Add (optional) consistency check for the blockchain data structures\n - `1c62e84` Keep mempool consistent during block-reorgs\n - `57d1f46` Fix CheckBlockIndex for reindex\n - `bac6fca` Set nSequenceId when a block is fully linked"
      },
      {
        "sha": "cb635e098a9b928b322444327d6f3a172d779bd6",
        "filename": "doc/release-notes/release-notes-0.11.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.11.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.11.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.11.0.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -243,7 +243,7 @@ git merge commit are mentioned.\n \n ### Configuration and command-line options\n - #5636 `a353ad4` Add option `-allowselfsignedrootcertificate` to allow self signed root certs (for testing payment requests)\n-- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the block chain data structures\n+- #5900 `3e8a1f2` Add a consistency check `-checkblockindex` for the blockchain data structures\n - #5951 `7efc9cf` Make it possible to disable wallet transaction broadcast (using `-walletbroadcast=0`)\n - #5911 `b6ea3bc` privacy: Stream isolation for Tor (on by default, use `-proxyrandomize=0` to disable)\n - #5863 `c271304` Add autoprune functionality (`-prune=<size>`)"
      },
      {
        "sha": "579a222b549e35a830259b8442a4d0e37588b745",
        "filename": "doc/release-notes/release-notes-0.3.19.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.19.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.19.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.19.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -6,4 +6,4 @@ As Gavin and I have said clearly before, the software is not at all resistant to\n I'm leaving the -limitfreerelay part as a switch for now and it's there if you need it.\n \n - Removed \"safe mode\" alerts\n-\"safe mode\" alerts was a temporary measure after the 0.3.9 overflow bug.  We can say all we want that users can just run with \"-disablesafemode\", but it's better just not to have it for the sake of appearances.  It was never intended as a long term feature.  Safe mode can still be triggered by seeing a longer (greater total PoW) invalid block chain.\n+\"safe mode\" alerts was a temporary measure after the 0.3.9 overflow bug.  We can say all we want that users can just run with \"-disablesafemode\", but it's better just not to have it for the sake of appearances.  It was never intended as a long term feature.  Safe mode can still be triggered by seeing a longer (greater total PoW) invalid blockchain."
      },
      {
        "sha": "72ad3345e66d345b33e2b46e6d19f65927941103",
        "filename": "doc/release-notes/release-notes-0.3.20.2.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.20.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.20.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.2.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-The maxsendbuffer bug (0.3.20.1 clients not being able to download the block chain from other 0.3.20.1 clients) was only going to get\n+The maxsendbuffer bug (0.3.20.1 clients not being able to download the blockchain from other 0.3.20.1 clients) was only going to get\n worse as people upgraded, so I cherry-picked the bug fix and created a minor release yesterday.\n \n The Amazon Machine Images I used to do the builds are available:"
      },
      {
        "sha": "e9d2d1b5047cbdaa82de5081b8261fd0fbfa1dde",
        "filename": "doc/release-notes/release-notes-0.3.20.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.20.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.20.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.20.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -5,7 +5,7 @@ https://github.com/bitcoin/bitcoin\n ... and help test.  The new features that need testing are:\n \n * -nolisten : https://github.com/bitcoin/bitcoin/pull/11\n-* -rescan : scan block chain for missing wallet transactions\n+* -rescan : scan blockchain for missing wallet transactions\n * -printtoconsole : https://github.com/bitcoin/bitcoin/pull/37\n * RPC gettransaction details : https://github.com/bitcoin/bitcoin/pull/24\n * listtransactions new features : https://github.com/bitcoin/bitcoin/pull/10"
      },
      {
        "sha": "360b69cf11addabb6ba054eb7d2daa99e311f599",
        "filename": "doc/release-notes/release-notes-0.3.24.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.24.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.3.24.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.3.24.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -5,7 +5,7 @@ This is another bug fix release.  We had hoped to have wallet encryption ready f\n \n Notable fixes in v0.3.24, and the main reasons for this release:\n \n-F1) Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the block chain was bumping up against some earlier buffer-size DoS limits.\n+F1) Block downloads were failing or taking unreasonable amounts of time to complete, because the increased size of the blockchain was bumping up against some earlier buffer-size DoS limits.\n \n F2) Fix crash caused by loss/lack of network connection.\n "
      },
      {
        "sha": "0a126aa49dee78c1392c1ca378ce8da8892d62e1",
        "filename": "doc/release-notes/release-notes-0.5.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.5.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.5.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.0.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -47,7 +47,7 @@ MAJOR GUI CHANGES\n \n \"Splash\" graphics at startup that show address/wallet/blockchain loading progress.\n \n-\"Synchronizing with network\" progress bar to show block-chain download progress.\n+\"Synchronizing with network\" progress bar to show blockchain download progress.\n \n Icons at the bottom of the window that show how well connected you are to the network, with tooltips to display details.\n "
      },
      {
        "sha": "1478e7f5cb06315043e42c803ae281fde4cce02d",
        "filename": "doc/release-notes/release-notes-0.5.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.5.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.5.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.5.3.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -12,7 +12,7 @@ http://gitorious.org/bitcoin/bitcoind-stable/archive-tarball/v0.5.3#.tar.gz\n \n PROTOCOL UPDATES\n \n-BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the block chain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n+BIP 30: Introduce a new network rule: \"a block is not valid if it contains a transaction whose hash already exists in the blockchain, unless all that transaction's outputs were already spent before said block\" beginning on March 15, 2012, 00:00 UTC.\n On testnet, allow mining of min-difficulty blocks if 20 minutes have gone by without mining a regular-difficulty block. This is to make testing Bitcoin easier, and will not affect normal mode.\n \n BUG FIXES"
      },
      {
        "sha": "e450f9a342f07d0363f39f00d4cbaeb7990af3d7",
        "filename": "doc/release-notes/release-notes-0.6.3.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.6.3.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.6.3.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.6.3.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -17,7 +17,7 @@ speed up processing of new block messages and make propagating\n blocks across the network faster.\n \n Fixed an obscure bug that could cause the bitcoin process to get\n-stuck on an invalid block-chain, if the invalid chain was\n+stuck on an invalid blockchain, if the invalid chain was\n hundreds of blocks long.\n \n Bitcoin-Qt no longer automatically selects the first address"
      },
      {
        "sha": "ebd18ad4fb5d511cfdef2e1d63686aea0f046cbb",
        "filename": "doc/release-notes/release-notes-0.8.0.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.8.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.8.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.0.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -25,7 +25,7 @@ Incompatible Changes\n This release no longer maintains a full index of historical transaction ids\n by default, so looking up an arbitrary transaction using the getrawtransaction\n RPC call will not work. If you need that functionality, you must run once\n-with -txindex=1 -reindex=1 to rebuild block-chain indices (see below for more\n+with -txindex=1 -reindex=1 to rebuild blockchain indices (see below for more\n details).\n \n Improvements"
      },
      {
        "sha": "f9b3416803bcffdfff1203ef98e579845362a6bf",
        "filename": "doc/release-notes/release-notes-0.8.6.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.8.6.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.8.6.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.8.6.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -35,7 +35,7 @@ your machine.\n - Lower maximum size for free transaction creation\n   (see https://gist.github.com/gavinandresen/7670433#086-wallet)\n \n-- OSX block chain database corruption fixes\n+- OSX blockchain database corruption fixes\n   - Update leveldb to 1.13\n   - Use fcntl with `F_FULLSYNC` instead of fsync on OSX\n   - Use native Darwin memory barriers"
      },
      {
        "sha": "e6d087979ddf0cb93dddbc18416391683be1a941",
        "filename": "doc/release-notes/release-notes-0.9.0.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.0.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.0.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.0.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -66,7 +66,7 @@ To reduce confusion between Bitcoin-the-network and Bitcoin-the-software we\n have renamed the reference client to Bitcoin Core.\n \n \n-OP_RETURN and data in the block chain\n+OP_RETURN and data in the blockchain\n -------------------------------------\n On OP_RETURN:  There was been some confusion and misunderstanding in\n the community, regarding the OP_RETURN feature in 0.9 and data in the\n@@ -205,7 +205,7 @@ Command-line options:\n - Remove '-logtodebugger'\n - Allow `-noserver` with bitcoind\n \n-Block-chain handling and storage:\n+Blockchain handling and storage:\n \n - Update leveldb to 1.15\n - Check for correct genesis (prevent cases where a datadir from the wrong"
      },
      {
        "sha": "eecc597767827624c747a8026f378f366f0028af",
        "filename": "doc/release-notes/release-notes-0.9.2.1.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.2.1.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.2.1.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.1.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -78,7 +78,7 @@ Command-line options:\n - Fix `-printblocktree` output\n - Show error message if ReadConfigFile fails\n \n-Block-chain handling and storage:\n+Blockchain handling and storage:\n \n - Fix for GetBlockValue() after block 13,440,000 (BIP42)\n - Upgrade leveldb to 1.17"
      },
      {
        "sha": "19d510a9086fac019527f22a7d1c050be9c2e977",
        "filename": "doc/release-notes/release-notes-0.9.2.md",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.2.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/doc/release-notes/release-notes-0.9.2.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/release-notes/release-notes-0.9.2.md?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -78,7 +78,7 @@ Command-line options:\n - Fix `-printblocktree` output\n - Show error message if ReadConfigFile fails\n \n-Block-chain handling and storage:\n+Blockchain handling and storage:\n \n - Fix for GetBlockValue() after block 13,440,000 (BIP42)\n - Upgrade leveldb to 1.17"
      },
      {
        "sha": "8bc140ef283004aa7a4b349d0418a9d8adac56f0",
        "filename": "qa/rpc-tests/pruning.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/qa/rpc-tests/pruning.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/qa/rpc-tests/pruning.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/pruning.py?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n #!/usr/bin/env python2\n-# Copyright (c) 2014 The Bitcoin Core developers\n+# Copyright (c) 2014-2015 The Bitcoin Core developers\n # Distributed under the MIT software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -117,7 +117,7 @@ def create_chain_with_staleblocks(self):\n                 else:\n                     self.nodes[1].generate(1) #tx's already in mempool from previous disconnects\n \n-            # Reorg back with 25 block chain from node 0\n+            # Reorg back with 25 blockchain from node 0\n             self.utxo = self.nodes[0].listunspent()\n             for i in xrange(25): \n                 self.mine_full_block(self.nodes[0],self.address[0])\n@@ -130,7 +130,7 @@ def create_chain_with_staleblocks(self):\n         print \"Usage can be over target because of high stale rate:\", calc_usage(self.prunedir)\n \n     def reorg_test(self):\n-        # Node 1 will mine a 300 block chain starting 287 blocks back from Node 0 and Node 2's tip\n+        # Node 1 will mine a 300 blockchain starting 287 blocks back from Node 0 and Node 2's tip\n         # This will cause Node 2 to do a reorg requiring 288 blocks of undo data to the reorg_test chain\n         # Reboot node 1 to clear its mempool (hopefully make the invalidate faster)\n         # Lower the block max size so we don't keep mining all our big mempool transactions (from disconnected blocks)\n@@ -276,7 +276,7 @@ def run_test(self):\n         print \"Check that we'll exceed disk space target if we have a very high stale block rate\"\n         self.create_chain_with_staleblocks()\n         # Disconnect N0\n-        # And mine a 24 block chain on N1 and a separate 25 block chain on N0\n+        # And mine a 24 blockchain on N1 and a separate 25 blockchain on N0\n         # N1=N2 **...*+...+(1044)\n         # N0    **...**...**(1045)\n         #"
      },
      {
        "sha": "7f7890b6d7b5a0fb2f074d81db81ed44a0d3f4e7",
        "filename": "src/chain.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/chain.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/chain.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -94,7 +94,7 @@ enum BlockStatus {\n     BLOCK_FAILED_MASK        =   BLOCK_FAILED_VALID | BLOCK_FAILED_CHILD,\n };\n \n-/** The block chain is a tree shaped structure starting with the\n+/** The blockchain is a tree shaped structure starting with the\n  * genesis block at the root, with each block potentially having multiple\n  * candidates to be the next block. A blockindex may have multiple pprev pointing\n  * to it, but at most one of them can be part of the currently active branch."
      },
      {
        "sha": "be74ae145fe1d4ba5c86ea8b6f34ec672d4de085",
        "filename": "src/checkpoints.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/checkpoints.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/checkpoints.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/checkpoints.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,7 +13,7 @@ class CBlockIndex;\n struct CCheckpointData;\n \n /**\n- * Block-chain checkpoints are compiled-in sanity checks.\n+ * Blockchain checkpoints are compiled-in sanity checks.\n  * They are updated every release or three.\n  */\n namespace Checkpoints"
      },
      {
        "sha": "73afe29ff4498c8c93864bd6823362b6be2f623a",
        "filename": "src/coins.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/coins.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/coins.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/coins.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -79,7 +79,7 @@ class CCoins\n     //! unspent transaction outputs; spent outputs are .IsNull(); spent outputs at the end of the array are dropped\n     std::vector<CTxOut> vout;\n \n-    //! at which height this transaction was included in the active block chain\n+    //! at which height this transaction was included in the active blockchain\n     int nHeight;\n \n     //! version of the CTransaction; accesses to this value should probably check for nHeight as well,"
      },
      {
        "sha": "74bc318fba162b9321df051d91f34f1d6d64365e",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -311,7 +311,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-prune=<n>\", strprintf(_(\"Reduce storage requirements by pruning (deleting) old blocks. This mode is incompatible with -txindex and -rescan. \"\n             \"Warning: Reverting this setting requires re-downloading the entire blockchain. \"\n             \"(default: 0 = disable pruning blocks, >%u = target size in MiB to use for block files)\"), MIN_DISK_SPACE_FOR_BLOCK_FILES / 1024 / 1024));\n-    strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild block chain index from current blk000??.dat files on startup\"));\n+    strUsage += HelpMessageOpt(\"-reindex\", _(\"Rebuild blockchain index from current blk000??.dat files on startup\"));\n #if !defined(WIN32)\n     strUsage += HelpMessageOpt(\"-sysperms\", _(\"Create new files with system default permissions, instead of umask 077 (only effective with disabled wallet functionality)\"));\n #endif\n@@ -360,7 +360,7 @@ std::string HelpMessage(HelpMessageMode mode)\n             CURRENCY_UNIT, FormatMoney(CWallet::minTxFee.GetFeePerK())));\n     strUsage += HelpMessageOpt(\"-paytxfee=<amt>\", strprintf(_(\"Fee (in %s/kB) to add to transactions you send (default: %s)\"),\n         CURRENCY_UNIT, FormatMoney(payTxFee.GetFeePerK())));\n-    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the block chain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n+    strUsage += HelpMessageOpt(\"-rescan\", _(\"Rescan the blockchain for missing wallet transactions\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-salvagewallet\", _(\"Attempt to recover private keys from a corrupt wallet.dat\") + \" \" + _(\"on startup\"));\n     strUsage += HelpMessageOpt(\"-sendfreetransactions\", strprintf(_(\"Send transactions as zero-fee transactions if possible (default: %u)\"), 0));\n     strUsage += HelpMessageOpt(\"-spendzeroconfchange\", strprintf(_(\"Spend unconfirmed change when sending transactions (default: %u)\"), 1));\n@@ -1125,7 +1125,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n     BOOST_FOREACH(const std::string& strDest, mapMultiArgs[\"-seednode\"])\n         AddOneShot(strDest);\n \n-    // ********************************************************* Step 7: load block chain\n+    // ********************************************************* Step 7: load blockchain\n \n     fReindex = GetBoolArg(\"-reindex\", false);\n \n@@ -1469,7 +1469,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)\n         uiInterface.NotifyBlockTip.connect(BlockNotifyCallback);\n \n     uiInterface.InitMessage(_(\"Activating best chain...\"));\n-    // scan for better chains in the block chain database, that are not yet connected in the active best chain\n+    // scan for better chains in the blockchain database, that are not yet connected in the active best chain\n     CValidationState state;\n     if (!ActivateBestChain(state))\n         strErrors << \"Failed to connect best block\";"
      },
      {
        "sha": "d81c233a4800d7642e9c22333fa479ea1413d9b7",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -1353,7 +1353,7 @@ bool CheckInputs(const CTransaction& tx, CValidationState &state, const CCoinsVi\n         // Helps prevent CPU exhaustion attacks.\n \n         // Skip ECDSA signature verification when connecting blocks\n-        // before the last block chain checkpoint. This is safe because block merkle hashes are\n+        // before the last blockchain checkpoint. This is safe because block merkle hashes are\n         // still computed and checked, and any change will be caught at the next checkpoint.\n         if (fScriptChecks) {\n             for (unsigned int i = 0; i < tx.vin.size(); i++) {\n@@ -1834,7 +1834,7 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n         if (!pblocktree->WriteTxIndex(vPos))\n             return AbortNode(state, \"Failed to write transaction index\");\n \n-    // add this block to the view's block chain\n+    // add this block to the view's blockchain\n     view.SetBestBlock(pindex->GetBlockHash());\n \n     int64_t nTime3 = GetTimeMicros(); nTimeIndex += nTime3 - nTime2;"
      },
      {
        "sha": "95b8c5e37a279e5b2175457ae57c9d0100bc7862",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -178,7 +178,7 @@ bool IsInitialBlockDownload();\n std::string GetWarnings(const std::string& strFor);\n /** Retrieve a transaction (from memory pool, or from disk, if possible) */\n bool GetTransaction(const uint256 &hash, CTransaction &tx, uint256 &hashBlock, bool fAllowSlow = false);\n-/** Find the best known block, and make it the tip of the block chain */\n+/** Find the best known block, and make it the tip of the blockchain */\n bool ActivateBestChain(CValidationState &state, const CBlock *pblock = NULL);\n CAmount GetBlockSubsidy(int nHeight, const Consensus::Params& consensusParams);\n "
      },
      {
        "sha": "9ec2694d4fb40e66c33811b0020963715a866d1d",
        "filename": "src/policy/fees.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/policy/fees.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/policy/fees.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/fees.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -47,7 +47,7 @@ class CTxMemPoolEntry;\n  *\n  * Here is a brief description of the implementation for fee estimation.\n  * When a transaction that counts for fee estimation enters the mempool, we\n- * track the height of the block chain at entry.  Whenever a block comes in,\n+ * track the height of the blockchain at entry.  Whenever a block comes in,\n  * we count the number of transactions in each bucket and the total amount of fee\n  * paid in each bucket. Then we calculate how many blocks Y it took each\n  * transaction to be mined and we track an array of counters in each bucket"
      },
      {
        "sha": "71eb2c5b317f8326b12e453741370eb9612c4270",
        "filename": "src/primitives/block.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/primitives/block.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/primitives/block.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/primitives/block.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -13,7 +13,7 @@\n /** Nodes collect new transactions into a block, hash them into a hash tree,\n  * and scan through nonce values to make the block's hash satisfy proof-of-work\n  * requirements.  When they solve the proof-of-work, they broadcast the block\n- * to everyone and the block is added to the block chain.  The first transaction\n+ * to everyone and the block is added to the blockchain.  The first transaction\n  * in the block is a special one that creates a new coin owned by the creator\n  * of the block.\n  */\n@@ -130,7 +130,7 @@ class CBlock : public CBlockHeader\n };\n \n \n-/** Describes a place in the block chain to another node such that if the\n+/** Describes a place in the blockchain to another node such that if the\n  * other node doesn't have the same branch, it can find a recent common trunk.\n  * The further back it is, the further before the fork it may be.\n  */"
      },
      {
        "sha": "b3a981dbe616030e8618b0ba79bd696dfe3e90a5",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2013 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -67,7 +67,7 @@ class CMessageHeader\n \n /** nServices flags */\n enum {\n-    // NODE_NETWORK means that the node is capable of serving the block chain. It is currently\n+    // NODE_NETWORK means that the node is capable of serving the blockchain. It is currently\n     // set by all Bitcoin Core nodes, and is unset by SPV clients or other peers that just want\n     // network services but don't provide them.\n     NODE_NETWORK = (1 << 0),"
      },
      {
        "sha": "f55f70641767de550f3ee5c15942b60af6f55baa",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -263,7 +263,7 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Maximum per-connection send buffer, <n>*1000\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Need to specify a port with -whitebind: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Node relay options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Not enough file descriptors available.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept block chain matching built-in checkpoints (default: %u)\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only accept blockchain matching built-in checkpoints (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Only connect to nodes in network <net> (ipv4, ipv6 or onion)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Password for JSON-RPC connections\"),\n@@ -275,10 +275,10 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC server options:\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"RPC support for HTTP persistent connections (default: %d)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly drop 1 of every <n> network messages\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Randomly fuzz 1 of every <n> network messages\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild block chain index from current blk000??.dat files on startup\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rebuild blockchain index from current blk000??.dat files on startup\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay and mine data carrier transactions (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Relay non-P2SH multisig (default: %u)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the block chain for missing wallet transactions\"),\n+QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescan the blockchain for missing wallet transactions\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Rescanning...\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run a thread to flush wallet periodically (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Run in the background as a daemon and accept commands\"),"
      },
      {
        "sha": "a8e657d9aee3b26ad32898b656eb7553fa336d2d",
        "filename": "src/qt/forms/intro.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/forms/intro.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/forms/intro.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/intro.ui?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -56,7 +56,7 @@\n    <item>\n     <widget class=\"QLabel\" name=\"sizeWarningLabel\">\n      <property name=\"text\">\n-      <string>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n+      <string>Bitcoin Core will download and store a copy of the Bitcoin blockchain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</string>\n      </property>\n      <property name=\"wordWrap\">\n       <bool>true</bool>"
      },
      {
        "sha": "82df9e92b06f61edcf4e6f38190ab439795aac27",
        "filename": "src/qt/forms/rpcconsole.ui",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/forms/rpcconsole.ui",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/forms/rpcconsole.ui",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/forms/rpcconsole.ui?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -278,7 +278,7 @@\n           </font>\n          </property>\n          <property name=\"text\">\n-          <string>Block chain</string>\n+          <string>Blockchain</string>\n          </property>\n         </widget>\n        </item>"
      },
      {
        "sha": "b4ecde9088df574057c94357b4219b1e308f6cd3",
        "filename": "src/qt/intro.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/intro.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/intro.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/intro.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -17,7 +17,7 @@ namespace Ui {\n \n /** Introduction screen (pre-GUI startup).\n   Allows the user to choose a data directory,\n-  in which the wallet and block chain will be stored.\n+  in which the wallet and blockchain will be stored.\n  */\n class Intro : public QDialog\n {"
      },
      {
        "sha": "adbd07339aefc2f54c60cc0e99fd617d69c0e9b3",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1128,7 +1128,7 @@\n     </message>\n     <message>\n         <location line=\"+10\"/>\n-        <source>Bitcoin Core will download and store a copy of the Bitcoin block chain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n+        <source>Bitcoin Core will download and store a copy of the Bitcoin blockchain. At least %1GB of data will be stored in this directory, and it will grow over time. The wallet will also be stored in this directory.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -1852,8 +1852,8 @@\n     </message>\n     <message>\n         <location line=\"+29\"/>\n-        <source>Block chain</source>\n-        <translation>Block chain</translation>\n+        <source>Blockchain</source>\n+        <translation>Blockchain</translation>\n     </message>\n     <message>\n         <location line=\"+7\"/>\n@@ -3126,7 +3126,7 @@\n     </message>\n     <message>\n         <location line=\"+7\"/>\n-        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n+        <source>Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the blockchain. If it fails to get into the chain, its state will change to &quot;not accepted&quot; and it won&apos;t be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -4189,7 +4189,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+1\"/>\n-        <source>Rebuild block chain index from current blk000??.dat files on startup</source>\n+        <source>Rebuild blockchain index from current blk000??.dat files on startup</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n@@ -4339,8 +4339,8 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"-41\"/>\n-        <source>Rescan the block chain for missing wallet transactions</source>\n-        <translation>Rescan the block chain for missing wallet transactions</translation>\n+        <source>Rescan the blockchain for missing wallet transactions</source>\n+        <translation>Rescan the blockchain for missing wallet transactions</translation>\n     </message>\n     <message>\n         <location line=\"+42\"/>\n@@ -4494,7 +4494,7 @@ for example: alertnotify=echo %%s | mail -s &quot;Bitcoin Alert&quot; admin@foo.\n     </message>\n     <message>\n         <location line=\"+4\"/>\n-        <source>Only accept block chain matching built-in checkpoints (default: %u)</source>\n+        <source>Only accept blockchain matching built-in checkpoints (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>"
      },
      {
        "sha": "e36ed35ab33aa658ff4b028ac0a41bcc65ef3127",
        "filename": "src/qt/transactiondesc.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/transactiondesc.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/transactiondesc.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactiondesc.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -263,7 +263,7 @@ QString TransactionDesc::toHTML(CWallet *wallet, CWalletTx &wtx, TransactionReco\n     if (wtx.IsCoinBase())\n     {\n         quint32 numBlocksToMaturity = COINBASE_MATURITY +  1;\n-        strHTML += \"<br>\" + tr(\"Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the block chain. If it fails to get into the chain, its state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\").arg(QString::number(numBlocksToMaturity)) + \"<br>\";\n+        strHTML += \"<br>\" + tr(\"Generated coins must mature %1 blocks before they can be spent. When you generated this block, it was broadcast to the network to be added to the blockchain. If it fails to get into the chain, its state will change to \\\"not accepted\\\" and it won't be spendable. This may occasionally happen if another node generates a block within a few seconds of yours.\").arg(QString::number(numBlocksToMaturity)) + \"<br>\";\n     }\n \n     //"
      },
      {
        "sha": "0d4e1ea9450f27a17012286b68d942b0553926c3",
        "filename": "src/qt/transactionrecord.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/transactionrecord.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/qt/transactionrecord.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/transactionrecord.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -119,7 +119,7 @@ class TransactionRecord\n     /** Subtransaction index, for sort key */\n     int idx;\n \n-    /** Status: can change with block chain update */\n+    /** Status: can change with blockchain update */\n     TransactionStatus status;\n \n     /** Whether the transaction was sent/received with a watch-only address */"
      },
      {
        "sha": "d32b6cc68d6dc520fbc641a846f6694134bdb351",
        "filename": "src/rpcblockchain.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcblockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcblockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcblockchain.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -129,7 +129,7 @@ UniValue getblockcount(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getblockcount\\n\"\n-            \"\\nReturns the number of blocks in the longest block chain.\\n\"\n+            \"\\nReturns the number of blocks in the longest blockchain.\\n\"\n             \"\\nResult:\\n\"\n             \"n    (numeric) The current block count\\n\"\n             \"\\nExamples:\\n\"\n@@ -146,7 +146,7 @@ UniValue getbestblockhash(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getbestblockhash\\n\"\n-            \"\\nReturns the hash of the best (tip) block in the longest block chain.\\n\"\n+            \"\\nReturns the hash of the best (tip) block in the longest blockchain.\\n\"\n             \"\\nResult\\n\"\n             \"\\\"hex\\\"      (string) the block hash hex encoded\\n\"\n             \"\\nExamples\\n\"\n@@ -270,7 +270,7 @@ UniValue getblockhash(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() != 1)\n         throw runtime_error(\n             \"getblockhash index\\n\"\n-            \"\\nReturns hash of block in best-block-chain at index provided.\\n\"\n+            \"\\nReturns hash of block in best-blockchain at index provided.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. index         (numeric, required) The block index\\n\"\n             \"\\nResult:\\n\"\n@@ -595,7 +595,7 @@ UniValue getblockchaininfo(const UniValue& params, bool fHelp)\n     if (fHelp || params.size() != 0)\n         throw runtime_error(\n             \"getblockchaininfo\\n\"\n-            \"Returns an object containing various state info regarding block chain processing.\\n\"\n+            \"Returns an object containing various state info regarding blockchain processing.\\n\"\n             \"\\nResult:\\n\"\n             \"{\\n\"\n             \"  \\\"chain\\\": \\\"xxxx\\\",        (string) current network name as defined in BIP70 (main, test, regtest)\\n\""
      },
      {
        "sha": "989d3046dea18556e773a97d86d426fe130c39b8",
        "filename": "src/rpcrawtransaction.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcrawtransaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcrawtransaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcrawtransaction.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -530,7 +530,7 @@ UniValue signrawtransaction(const UniValue& params, bool fHelp)\n             \"signrawtransaction \\\"hexstring\\\" ( [{\\\"txid\\\":\\\"id\\\",\\\"vout\\\":n,\\\"scriptPubKey\\\":\\\"hex\\\",\\\"redeemScript\\\":\\\"hex\\\"},...] [\\\"privatekey1\\\",...] sighashtype )\\n\"\n             \"\\nSign inputs for raw transaction (serialized, hex-encoded).\\n\"\n             \"The second optional argument (may be null) is an array of previous transaction outputs that\\n\"\n-            \"this transaction depends on but may not yet be in the block chain.\\n\"\n+            \"this transaction depends on but may not yet be in the blockchain.\\n\"\n             \"The third optional argument (may be null) is an array of base58-encoded private\\n\"\n             \"keys that, if given, will be the only keys used to sign the transaction.\\n\"\n #ifdef ENABLE_WALLET\n@@ -820,7 +820,7 @@ UniValue sendrawtransaction(const UniValue& params, bool fHelp)\n             }\n         }\n     } else if (fHaveChain) {\n-        throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, \"transaction already in block chain\");\n+        throw JSONRPCError(RPC_TRANSACTION_ALREADY_IN_CHAIN, \"transaction already in blockchain\");\n     }\n     RelayTransaction(tx);\n "
      },
      {
        "sha": "c470c6b643570d99963c4e4c3dfe95401b39f4e3",
        "filename": "src/rpcserver.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/rpcserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpcserver.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -272,7 +272,7 @@ static const CRPCCommand vRPCCommands[] =\n     { \"network\",            \"listbanned\",             &listbanned,             true  },\n     { \"network\",            \"clearbanned\",            &clearbanned,            true  },\n \n-    /* Block chain and UTXO */\n+    /* Blockchain and UTXO */\n     { \"blockchain\",         \"getblockchaininfo\",      &getblockchaininfo,      true  },\n     { \"blockchain\",         \"getbestblockhash\",       &getbestblockhash,       true  },\n     { \"blockchain\",         \"getblockcount\",          &getblockcount,          true  },"
      },
      {
        "sha": "e16c73fa32a4a3f86d6ca66c236abd93ba474621",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -18,7 +18,7 @@ namespace {\n /**\n  * Valid signature cache, to avoid doing expensive ECDSA signature checking\n  * twice for every transaction (once when accepted into memory pool, and\n- * again when accepted into the block chain)\n+ * again when accepted into the blockchain)\n  */\n class CSignatureCache\n {"
      },
      {
        "sha": "9531d20ad57d746c5d6aa2571bcfce76a023f2b5",
        "filename": "src/test/Checkpoints_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/Checkpoints_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/Checkpoints_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/Checkpoints_tests.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,9 +1,9 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n //\n-// Unit tests for block-chain checkpoints\n+// Unit tests for blockchain checkpoints\n //\n \n #include \"checkpoints.h\""
      },
      {
        "sha": "9e212a94a28356aa737c1e240a58a3cbb3a76f2a",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2014 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -721,7 +721,7 @@ sign_multisig(CScript scriptPubKey, std::vector<CKey> keys, CTransaction transac\n     // NOTE: CHECKMULTISIG has an unfortunate bug; it requires\n     // one extra item on the stack, before the signatures.\n     // Putting OP_0 on the stack is the workaround;\n-    // fixing the bug would mean splitting the block chain (old\n+    // fixing the bug would mean splitting the blockchain (old\n     // clients would not accept new CHECKMULTISIG transactions,\n     // and vice-versa)\n     //"
      },
      {
        "sha": "b65daf6ea5df6ee7285fc37c8e6900742c6f6e51",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,4 +1,4 @@\n-// Copyright (c) 2011-2013 The Bitcoin Core developers\n+// Copyright (c) 2011-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -95,7 +95,7 @@ TestingSetup::~TestingSetup()\n \n TestChain100Setup::TestChain100Setup() : TestingSetup(CBaseChainParams::REGTEST)\n {\n-    // Generate a 100-block chain:\n+    // Generate a 100-blockchain:\n     coinbaseKey.MakeNewKey(true);\n     CScript scriptPubKey = CScript() <<  ToByteVector(coinbaseKey.GetPubKey()) << OP_CHECKSIG;\n     for (int i = 0; i < COINBASE_MATURITY; i++)"
      },
      {
        "sha": "2cf69d6ebec97acc85f82b982663f7da47c9a2db",
        "filename": "src/test/test_bitcoin.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/test_bitcoin.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/test/test_bitcoin.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -35,7 +35,7 @@ class CScript;\n \n //\n // Testing fixture that pre-creates a\n-// 100-block REGTEST-mode block chain\n+// 100-block REGTEST-mode blockchain\n //\n struct TestChain100Setup : public TestingSetup {\n     TestChain100Setup();"
      },
      {
        "sha": "d07c8a86ab8575c32581c7a7b866e9d7808ab564",
        "filename": "src/validationinterface.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/validationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/validationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validationinterface.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -48,7 +48,7 @@ struct CMainSignals {\n     boost::signals2::signal<void (const CTransaction &, const CBlock *)> SyncTransaction;\n     /** Notifies listeners of an updated transaction without new data (for now: a coinbase potentially becoming visible). */\n     boost::signals2::signal<void (const uint256 &)> UpdatedTransaction;\n-    /** Notifies listeners of a new active block chain. */\n+    /** Notifies listeners of a new active blockchain. */\n     boost::signals2::signal<void (const CBlockLocator &)> SetBestChain;\n     /** Notifies listeners about an inventory item being seen on the network. */\n     boost::signals2::signal<void (const uint256 &)> Inventory;"
      },
      {
        "sha": "f4074847aac912f6d8bb64d17a576820a7c06690",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -1051,7 +1051,7 @@ bool CWalletTx::WriteToDisk(CWalletDB *pwalletdb)\n }\n \n /**\n- * Scan the block chain (starting in pindexStart) for transactions\n+ * Scan the blockchain (starting in pindexStart) for transactions\n  * from or to us. If fUpdate is true, found transactions that already\n  * exist in the wallet will be updated.\n  */"
      },
      {
        "sha": "70d6dabd6542ae4881a77db2b2265a5d37e35ae3",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/132fb974a1ac4353a7bd383cf78dcedbb939b02c/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=132fb974a1ac4353a7bd383cf78dcedbb939b02c",
        "patch": "@@ -1,5 +1,5 @@\n // Copyright (c) 2009-2010 Satoshi Nakamoto\n-// Copyright (c) 2009-2014 The Bitcoin Core developers\n+// Copyright (c) 2009-2015 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n@@ -143,7 +143,7 @@ struct COutputEntry\n     int vout;\n };\n \n-/** A transaction with a merkle branch linking it to the block chain. */\n+/** A transaction with a merkle branch linking it to the blockchain. */\n class CMerkleTx : public CTransaction\n {\n private:\n@@ -204,7 +204,7 @@ class CMerkleTx : public CTransaction\n \n /** \n  * A transaction with a bunch of additional info that only the owner cares about.\n- * It includes any unrecorded transactions needed to link it back to the block chain.\n+ * It includes any unrecorded transactions needed to link it back to the blockchain.\n  */\n class CWalletTx : public CMerkleTx\n {"
      }
    ]
  }
]