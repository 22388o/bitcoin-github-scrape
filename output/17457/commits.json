[
  {
    "sha": "b4097bf91cc390735c6f787686571811b11d90d1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiNDA5N2JmOTFjYzM5MDczNWM2Zjc4NzY4NjU3MTgxMWIxMWQ5MGQx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T23:26:31Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-25T15:24:36Z"
      },
      "message": "gui: Fix Cannot queue arguments of type size_t",
      "tree": {
        "sha": "b8312f7d9e79ac60eb1f09d2d5bf7f55bbdbd996",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8312f7d9e79ac60eb1f09d2d5bf7f55bbdbd996"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b4097bf91cc390735c6f787686571811b11d90d1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4097bf91cc390735c6f787686571811b11d90d1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b4097bf91cc390735c6f787686571811b11d90d1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4097bf91cc390735c6f787686571811b11d90d1/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e6f167bfdfc056ced2064c7e21f8abbff6e3ff19"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "4d8cd646e23e67ef5a1ada3cf1ba72a6d0ba135b",
        "filename": "src/qt/test/test_main.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b4097bf91cc390735c6f787686571811b11d90d1/src/qt/test/test_main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b4097bf91cc390735c6f787686571811b11d90d1/src/qt/test/test_main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/test_main.cpp?ref=b4097bf91cc390735c6f787686571811b11d90d1",
        "patch": "@@ -63,6 +63,8 @@ int main(int argc, char *argv[])\n         setenv(\"QT_QPA_PLATFORM\", \"minimal\", /* overwrite */ 0);\n     #endif\n \n+    qRegisterMetaType<size_t>(\"size_t\");\n+\n     // Don't remove this, it's needed to access\n     // QApplication:: and QCoreApplication:: in the tests\n     BitcoinApplication app(*node);"
      }
    ]
  },
  {
    "sha": "101714135e37d544d754652a6754bb33ed6a4b0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxMDE3MTQxMzVlMzdkNTQ0ZDc1NDY1MmE2NzU0YmIzM2VkNmE0YjBk",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-16T23:41:16Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-25T15:24:36Z"
      },
      "message": "gui: Fix itemWalletAddress leak when not tree mode",
      "tree": {
        "sha": "1de53dcb960e27a0f94c20ce0d7695bc50bf5627",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1de53dcb960e27a0f94c20ce0d7695bc50bf5627"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/101714135e37d544d754652a6754bb33ed6a4b0d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101714135e37d544d754652a6754bb33ed6a4b0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/101714135e37d544d754652a6754bb33ed6a4b0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101714135e37d544d754652a6754bb33ed6a4b0d/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b4097bf91cc390735c6f787686571811b11d90d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b4097bf91cc390735c6f787686571811b11d90d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b4097bf91cc390735c6f787686571811b11d90d1"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 2,
      "deletions": 3
    },
    "files": [
      {
        "sha": "f2642cc4083b16f149a4cdaa66e817d47363bdc9",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 3,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/101714135e37d544d754652a6754bb33ed6a4b0d/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/101714135e37d544d754652a6754bb33ed6a4b0d/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=101714135e37d544d754652a6754bb33ed6a4b0d",
        "patch": "@@ -612,8 +612,7 @@ void CoinControlDialog::updateView()\n     int nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n \n     for (const auto& coins : model->wallet().listCoins()) {\n-        CCoinControlWidgetItem *itemWalletAddress = new CCoinControlWidgetItem();\n-        itemWalletAddress->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);\n+        CCoinControlWidgetItem* itemWalletAddress{nullptr};\n         QString sWalletAddress = QString::fromStdString(EncodeDestination(coins.first));\n         QString sWalletLabel = model->getAddressTableModel()->labelForAddress(sWalletAddress);\n         if (sWalletLabel.isEmpty())\n@@ -622,7 +621,7 @@ void CoinControlDialog::updateView()\n         if (treeMode)\n         {\n             // wallet address\n-            ui->treeWidget->addTopLevelItem(itemWalletAddress);\n+            itemWalletAddress = new CCoinControlWidgetItem(ui->treeWidget);\n \n             itemWalletAddress->setFlags(flgTristate);\n             itemWalletAddress->setCheckState(COLUMN_CHECKBOX, Qt::Unchecked);"
      }
    ]
  },
  {
    "sha": "04401ed67916f8d5289045ce084787803d35b404",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDQwMWVkNjc5MTZmOGQ1Mjg5MDQ1Y2UwODQ3ODc4MDNkMzViNDA0",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T21:00:58Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-25T15:24:36Z"
      },
      "message": "gui: Refactor CoinControlDialog usage\n\nThis removes the nested event loop when.",
      "tree": {
        "sha": "63f92843865d046f6465e35f034bce877d6321e4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/63f92843865d046f6465e35f034bce877d6321e4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/04401ed67916f8d5289045ce084787803d35b404",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04401ed67916f8d5289045ce084787803d35b404",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/04401ed67916f8d5289045ce084787803d35b404",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04401ed67916f8d5289045ce084787803d35b404/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "101714135e37d544d754652a6754bb33ed6a4b0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/101714135e37d544d754652a6754bb33ed6a4b0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/101714135e37d544d754652a6754bb33ed6a4b0d"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 15,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b09ae76127c49420c2b0f5b0bceb6fc47249e669",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 4,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04401ed67916f8d5289045ce084787803d35b404/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04401ed67916f8d5289045ce084787803d35b404/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=04401ed67916f8d5289045ce084787803d35b404",
        "patch": "@@ -691,6 +691,16 @@ void SendCoinsDialog::updateFeeMinimizedLabel()\n     }\n }\n \n+CoinControlDialog* SendCoinsDialog::coinControlDialog()\n+{\n+    if (!m_coin_control_dialog) {\n+        m_coin_control_dialog = new CoinControlDialog(platformStyle, this);\n+        m_coin_control_dialog->setModel(model);\n+        connect(m_coin_control_dialog, &QDialog::finished, this, &SendCoinsDialog::coinControlUpdateLabels);\n+    }\n+    return m_coin_control_dialog;\n+}\n+\n void SendCoinsDialog::updateCoinControlState(CCoinControl& ctrl)\n {\n     if (ui->radioCustomFee->isChecked()) {\n@@ -794,10 +804,7 @@ void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n // Coin Control: button inputs -> show actual coin control dialog\n void SendCoinsDialog::coinControlButtonClicked()\n {\n-    CoinControlDialog dlg(platformStyle);\n-    dlg.setModel(model);\n-    dlg.exec();\n-    coinControlUpdateLabels();\n+    coinControlDialog()->open();\n }\n \n // Coin Control: checkbox custom change address"
      },
      {
        "sha": "f77234f06d6a71e847022590902296014a12f2a0",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/04401ed67916f8d5289045ce084787803d35b404/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/04401ed67916f8d5289045ce084787803d35b404/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=04401ed67916f8d5289045ce084787803d35b404",
        "patch": "@@ -13,6 +13,7 @@\n #include <QTimer>\n \n class ClientModel;\n+class CoinControlDialog;\n class PlatformStyle;\n class SendCoinsEntry;\n class SendCoinsRecipient;\n@@ -60,6 +61,7 @@ public Q_SLOTS:\n     Ui::SendCoinsDialog *ui;\n     ClientModel *clientModel;\n     WalletModel *model;\n+    CoinControlDialog* m_coin_control_dialog{nullptr};\n     bool fNewRecipientAllowed;\n     bool fFeeMinimized;\n     const PlatformStyle *platformStyle;\n@@ -70,6 +72,8 @@ public Q_SLOTS:\n     void processSendCoinsReturn(const WalletModel::SendCoinsReturn &sendCoinsReturn, const QString &msgArg = QString());\n     void minimizeFeeSection(bool fMinimize);\n     void updateFeeMinimizedLabel();\n+    // Returns the coin control dialog, creating it on first call.\n+    CoinControlDialog* coinControlDialog();\n     // Update the passed in CCoinControl with state from the GUI\n     void updateCoinControlState(CCoinControl& ctrl);\n "
      }
    ]
  },
  {
    "sha": "1d544f730396e42c0caf0e5d291f98b2ce4be895",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZDU0NGY3MzAzOTZlNDJjMGNhZjBlNWQyOTFmOThiMmNlNGJlODk1",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-12T22:02:01Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2019-11-25T15:35:39Z"
      },
      "message": "gui: Remove static members from CoinControlDialog",
      "tree": {
        "sha": "56999fbe4d92d358c8352c028c4ef9126654759f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/56999fbe4d92d358c8352c028c4ef9126654759f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1d544f730396e42c0caf0e5d291f98b2ce4be895",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d544f730396e42c0caf0e5d291f98b2ce4be895",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1d544f730396e42c0caf0e5d291f98b2ce4be895",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1d544f730396e42c0caf0e5d291f98b2ce4be895/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "04401ed67916f8d5289045ce084787803d35b404",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/04401ed67916f8d5289045ce084787803d35b404",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/04401ed67916f8d5289045ce084787803d35b404"
      }
    ],
    "stats": {
      "total": 299,
      "additions": 241,
      "deletions": 58
    },
    "files": [
      {
        "sha": "5756c55ca19ba573078922b7c5c300e9f36c8e7b",
        "filename": "src/qt/coincontroldialog.cpp",
        "status": "modified",
        "additions": 31,
        "deletions": 37,
        "changes": 68,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/coincontroldialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/coincontroldialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.cpp?ref=1d544f730396e42c0caf0e5d291f98b2ce4be895",
        "patch": "@@ -31,9 +31,6 @@\n #include <QSettings>\n #include <QTreeWidget>\n \n-QList<CAmount> CoinControlDialog::payAmounts;\n-bool CoinControlDialog::fSubtractFeeFromAmount = false;\n-\n bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n     int column = treeWidget()->sortColumn();\n     if (column == CoinControlDialog::COLUMN_AMOUNT || column == CoinControlDialog::COLUMN_DATE || column == CoinControlDialog::COLUMN_CONFIRMATIONS)\n@@ -44,6 +41,7 @@ bool CCoinControlWidgetItem::operator<(const QTreeWidgetItem &other) const {\n CoinControlDialog::CoinControlDialog(const PlatformStyle *_platformStyle, QWidget *parent) :\n     QDialog(parent),\n     ui(new Ui::CoinControlDialog),\n+    m_coin_control(new CCoinControl()),\n     model(nullptr),\n     platformStyle(_platformStyle)\n {\n@@ -143,6 +141,7 @@ CoinControlDialog::~CoinControlDialog()\n     settings.setValue(\"nCoinControlSortColumn\", sortColumn);\n     settings.setValue(\"nCoinControlSortOrder\", (int)sortOrder);\n \n+    delete m_coin_control;\n     delete ui;\n }\n \n@@ -154,7 +153,7 @@ void CoinControlDialog::setModel(WalletModel *_model)\n     {\n         updateView();\n         updateLabelLocked();\n-        CoinControlDialog::updateLabels(_model, this);\n+        updateLabels();\n     }\n }\n \n@@ -184,7 +183,7 @@ void CoinControlDialog::buttonSelectAllClicked()\n     ui->treeWidget->setEnabled(true);\n     if (state == Qt::Unchecked)\n         coinControl()->UnSelectAll(); // just to be sure\n-    CoinControlDialog::updateLabels(model, this);\n+    updateLabels();\n }\n \n // context menu\n@@ -377,7 +376,7 @@ void CoinControlDialog::viewItemChanged(QTreeWidgetItem* item, int column)\n \n         // selection changed -> update labels\n         if (ui->treeWidget->isEnabled()) // do not update on every click for (un)select all\n-            CoinControlDialog::updateLabels(model, this);\n+            updateLabels();\n     }\n \n     // TODO: Remove this temporary qt5 fix after Qt5.3 and Qt5.4 are no longer used.\n@@ -402,7 +401,7 @@ void CoinControlDialog::updateLabelLocked()\n     else ui->labelLocked->setVisible(false);\n }\n \n-void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n+void CoinControlDialog::updateLabels()\n {\n     if (!model)\n         return;\n@@ -411,7 +410,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     CAmount nPayAmount = 0;\n     bool fDust = false;\n     CMutableTransaction txDummy;\n-    for (const CAmount &amount : CoinControlDialog::payAmounts)\n+    for (const CAmount &amount : payAmounts)\n     {\n         nPayAmount += amount;\n \n@@ -482,7 +481,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     if (nQuantity > 0)\n     {\n         // Bytes\n-        nBytes = nBytesInputs + ((CoinControlDialog::payAmounts.size() > 0 ? CoinControlDialog::payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n+        nBytes = nBytesInputs + ((payAmounts.size() > 0 ? payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n         if (fWitness)\n         {\n             // there is some fudging in these numbers related to the actual virtual transaction size calculation that will keep this estimate from being exact.\n@@ -493,7 +492,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         }\n \n         // in the subtract fee from amount case, we can tell if zero change already and subtract the bytes, so that fee calculation afterwards is accurate\n-        if (CoinControlDialog::fSubtractFeeFromAmount)\n+        if (fSubtractFeeFromAmount)\n             if (nAmount - nPayAmount == 0)\n                 nBytes -= 34;\n \n@@ -503,7 +502,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n         if (nPayAmount > 0)\n         {\n             nChange = nAmount - nPayAmount;\n-            if (!CoinControlDialog::fSubtractFeeFromAmount)\n+            if (!fSubtractFeeFromAmount)\n                 nChange -= nPayFee;\n \n             // Never create dust outputs; if we would, just add the dust to the fee.\n@@ -515,12 +514,12 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n                 {\n                     nPayFee += nChange;\n                     nChange = 0;\n-                    if (CoinControlDialog::fSubtractFeeFromAmount)\n+                    if (fSubtractFeeFromAmount)\n                         nBytes -= 34; // we didn't detect lack of change above\n                 }\n             }\n \n-            if (nChange == 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n+            if (nChange == 0 && !fSubtractFeeFromAmount)\n                 nBytes -= 34;\n         }\n \n@@ -533,19 +532,20 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     if (model && model->getOptionsModel())\n         nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n \n-    QLabel *l1 = dialog->findChild<QLabel *>(\"labelCoinControlQuantity\");\n-    QLabel *l2 = dialog->findChild<QLabel *>(\"labelCoinControlAmount\");\n-    QLabel *l3 = dialog->findChild<QLabel *>(\"labelCoinControlFee\");\n-    QLabel *l4 = dialog->findChild<QLabel *>(\"labelCoinControlAfterFee\");\n-    QLabel *l5 = dialog->findChild<QLabel *>(\"labelCoinControlBytes\");\n-    QLabel *l7 = dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\");\n-    QLabel *l8 = dialog->findChild<QLabel *>(\"labelCoinControlChange\");\n+\n+    QLabel *l1 = ui->labelCoinControlQuantity;\n+    QLabel *l2 = ui->labelCoinControlAmount;\n+    QLabel *l3 = ui->labelCoinControlFee;\n+    QLabel *l4 = ui->labelCoinControlAfterFee;\n+    QLabel *l5 = ui->labelCoinControlBytes;\n+    QLabel *l7 = ui->labelCoinControlLowOutput;\n+    QLabel *l8 = ui->labelCoinControlChange;\n \n     // enable/disable \"dust\" and \"change\"\n-    dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setEnabled(nPayAmount > 0);\n-    dialog->findChild<QLabel *>(\"labelCoinControlLowOutput\")    ->setEnabled(nPayAmount > 0);\n-    dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setEnabled(nPayAmount > 0);\n-    dialog->findChild<QLabel *>(\"labelCoinControlChange\")       ->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlLowOutputText->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlLowOutput    ->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlChangeText   ->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlChange       ->setEnabled(nPayAmount > 0);\n \n     // stats\n     l1->setText(QString::number(nQuantity));                                 // Quantity\n@@ -559,7 +559,7 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     {\n         l3->setText(ASYMP_UTF8 + l3->text());\n         l4->setText(ASYMP_UTF8 + l4->text());\n-        if (nChange > 0 && !CoinControlDialog::fSubtractFeeFromAmount)\n+        if (nChange > 0 && !fSubtractFeeFromAmount)\n             l8->setText(ASYMP_UTF8 + l8->text());\n     }\n \n@@ -578,22 +578,16 @@ void CoinControlDialog::updateLabels(WalletModel *model, QDialog* dialog)\n     l4->setToolTip(toolTip4);\n     l7->setToolTip(toolTipDust);\n     l8->setToolTip(toolTip4);\n-    dialog->findChild<QLabel *>(\"labelCoinControlFeeText\")      ->setToolTip(l3->toolTip());\n-    dialog->findChild<QLabel *>(\"labelCoinControlAfterFeeText\") ->setToolTip(l4->toolTip());\n-    dialog->findChild<QLabel *>(\"labelCoinControlBytesText\")    ->setToolTip(l5->toolTip());\n-    dialog->findChild<QLabel *>(\"labelCoinControlLowOutputText\")->setToolTip(l7->toolTip());\n-    dialog->findChild<QLabel *>(\"labelCoinControlChangeText\")   ->setToolTip(l8->toolTip());\n-\n-    // Insufficient funds\n-    QLabel *label = dialog->findChild<QLabel *>(\"labelCoinControlInsuffFunds\");\n-    if (label)\n-        label->setVisible(nChange < 0);\n+    ui->labelCoinControlFeeText      ->setToolTip(l3->toolTip());\n+    ui->labelCoinControlAfterFeeText ->setToolTip(l4->toolTip());\n+    ui->labelCoinControlBytesText    ->setToolTip(l5->toolTip());\n+    ui->labelCoinControlLowOutputText->setToolTip(l7->toolTip());\n+    ui->labelCoinControlChangeText   ->setToolTip(l8->toolTip());\n }\n \n CCoinControl* CoinControlDialog::coinControl()\n {\n-    static CCoinControl coin_control;\n-    return &coin_control;\n+    return m_coin_control;\n }\n \n void CoinControlDialog::updateView()"
      },
      {
        "sha": "5ff4a8c6222ee9bf2bdda46b557c808731ef3b51",
        "filename": "src/qt/coincontroldialog.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/coincontroldialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/coincontroldialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/coincontroldialog.h?ref=1d544f730396e42c0caf0e5d291f98b2ce4be895",
        "patch": "@@ -48,15 +48,15 @@ class CoinControlDialog : public QDialog\n \n     void setModel(WalletModel *model);\n \n-    // static because also called from sendcoinsdialog\n-    static void updateLabels(WalletModel*, QDialog*);\n+    void updateLabels();\n \n-    static QList<CAmount> payAmounts;\n-    static CCoinControl *coinControl();\n-    static bool fSubtractFeeFromAmount;\n+    QList<CAmount> payAmounts;\n+    CCoinControl* coinControl();\n+    bool fSubtractFeeFromAmount{false};\n \n private:\n     Ui::CoinControlDialog *ui;\n+    CCoinControl* m_coin_control{nullptr};\n     WalletModel *model;\n     int sortColumn;\n     Qt::SortOrder sortOrder;"
      },
      {
        "sha": "3e81bcf6903d6ccca9adecf5ba7a27711386b052",
        "filename": "src/qt/sendcoinsdialog.cpp",
        "status": "modified",
        "additions": 204,
        "deletions": 16,
        "changes": 220,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/sendcoinsdialog.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/sendcoinsdialog.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.cpp?ref=1d544f730396e42c0caf0e5d291f98b2ce4be895",
        "patch": "@@ -22,6 +22,7 @@\n #include <interfaces/node.h>\n #include <key_io.h>\n #include <policy/fees.h>\n+#include <policy/policy.h>\n #include <txmempool.h>\n #include <ui_interface.h>\n #include <wallet/coincontrol.h>\n@@ -266,7 +267,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     // Always use a CCoinControl instance, use the CoinControlDialog instance if CoinControl has been enabled\n     CCoinControl ctrl;\n     if (model->getOptionsModel()->getCoinControlFeatures())\n-        ctrl = *CoinControlDialog::coinControl();\n+        ctrl = *coinControlDialog()->coinControl();\n \n     updateCoinControlState(ctrl);\n \n@@ -414,7 +415,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n     }\n     if (!send_failure) {\n         accept();\n-        CoinControlDialog::coinControl()->UnSelectAll();\n+        coinControlDialog()->coinControl()->UnSelectAll();\n         coinControlUpdateLabels();\n     }\n     fNewRecipientAllowed = true;\n@@ -423,7 +424,7 @@ void SendCoinsDialog::on_sendButton_clicked()\n void SendCoinsDialog::clear()\n {\n     // Clear coin control settings\n-    CoinControlDialog::coinControl()->UnSelectAll();\n+    coinControlDialog()->coinControl()->UnSelectAll();\n     ui->checkBoxCoinControlChange->setChecked(false);\n     ui->lineEditCoinControlChange->clear();\n     coinControlUpdateLabels();\n@@ -644,7 +645,7 @@ void SendCoinsDialog::useAvailableBalance(SendCoinsEntry* entry)\n     // Get CCoinControl instance if CoinControl is enabled or create a new one.\n     CCoinControl coin_control;\n     if (model->getOptionsModel()->getCoinControlFeatures()) {\n-        coin_control = *CoinControlDialog::coinControl();\n+        coin_control = *coinControlDialog()->coinControl();\n     }\n \n     // Include watch-only for wallets without private key\n@@ -796,7 +797,7 @@ void SendCoinsDialog::coinControlFeatureChanged(bool checked)\n     ui->frameCoinControl->setVisible(checked);\n \n     if (!checked && model) // coin control features disabled\n-        CoinControlDialog::coinControl()->SetNull();\n+        coinControlDialog()->coinControl()->SetNull();\n \n     coinControlUpdateLabels();\n }\n@@ -812,7 +813,7 @@ void SendCoinsDialog::coinControlChangeChecked(int state)\n {\n     if (state == Qt::Unchecked)\n     {\n-        CoinControlDialog::coinControl()->destChange = CNoDestination();\n+        coinControlDialog()->coinControl()->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->clear();\n     }\n     else\n@@ -828,7 +829,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n     if (model && model->getAddressTableModel())\n     {\n         // Default to no change address until verified\n-        CoinControlDialog::coinControl()->destChange = CNoDestination();\n+        coinControlDialog()->coinControl()->destChange = CNoDestination();\n         ui->labelCoinControlChangeLabel->setStyleSheet(\"QLabel{color:red;}\");\n \n         const CTxDestination dest = DecodeDestination(text.toStdString());\n@@ -851,7 +852,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                     QMessageBox::Yes | QMessageBox::Cancel, QMessageBox::Cancel);\n \n                 if(btnRetVal == QMessageBox::Yes)\n-                    CoinControlDialog::coinControl()->destChange = dest;\n+                    coinControlDialog()->coinControl()->destChange = dest;\n                 else\n                 {\n                     ui->lineEditCoinControlChange->setText(\"\");\n@@ -870,7 +871,7 @@ void SendCoinsDialog::coinControlChangeEdited(const QString& text)\n                 else\n                     ui->labelCoinControlChangeLabel->setText(tr(\"(no label)\"));\n \n-                CoinControlDialog::coinControl()->destChange = dest;\n+                coinControlDialog()->coinControl()->destChange = dest;\n             }\n         }\n     }\n@@ -882,28 +883,28 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     if (!model || !model->getOptionsModel())\n         return;\n \n-    updateCoinControlState(*CoinControlDialog::coinControl());\n+    updateCoinControlState(*coinControlDialog()->coinControl());\n \n     // set pay amounts\n-    CoinControlDialog::payAmounts.clear();\n-    CoinControlDialog::fSubtractFeeFromAmount = false;\n+    coinControlDialog()->payAmounts.clear();\n+    coinControlDialog()->fSubtractFeeFromAmount = false;\n \n     for(int i = 0; i < ui->entries->count(); ++i)\n     {\n         SendCoinsEntry *entry = qobject_cast<SendCoinsEntry*>(ui->entries->itemAt(i)->widget());\n         if(entry && !entry->isHidden())\n         {\n             SendCoinsRecipient rcp = entry->getValue();\n-            CoinControlDialog::payAmounts.append(rcp.amount);\n+            coinControlDialog()->payAmounts.append(rcp.amount);\n             if (rcp.fSubtractFeeFromAmount)\n-                CoinControlDialog::fSubtractFeeFromAmount = true;\n+                coinControlDialog()->fSubtractFeeFromAmount = true;\n         }\n     }\n \n-    if (CoinControlDialog::coinControl()->HasSelected())\n+    if (coinControlDialog()->coinControl()->HasSelected())\n     {\n         // actual coin control calculation\n-        CoinControlDialog::updateLabels(model, this);\n+        updateLabels();\n \n         // show coin control stats\n         ui->labelCoinControlAutomaticallySelected->hide();\n@@ -918,6 +919,193 @@ void SendCoinsDialog::coinControlUpdateLabels()\n     }\n }\n \n+void SendCoinsDialog::updateLabels()\n+{\n+    if (!model)\n+        return;\n+\n+    // nPayAmount\n+    CAmount nPayAmount = 0;\n+    bool fDust = false;\n+    CMutableTransaction txDummy;\n+    for (const CAmount &amount : coinControlDialog()->payAmounts)\n+    {\n+        nPayAmount += amount;\n+\n+        if (amount > 0)\n+        {\n+            // Assumes a p2pkh script size\n+            CTxOut txout(amount, CScript() << std::vector<unsigned char>(24, 0));\n+            txDummy.vout.push_back(txout);\n+            fDust |= IsDust(txout, model->node().getDustRelayFee());\n+        }\n+    }\n+\n+    CAmount nAmount             = 0;\n+    CAmount nPayFee             = 0;\n+    CAmount nAfterFee           = 0;\n+    CAmount nChange             = 0;\n+    unsigned int nBytes         = 0;\n+    unsigned int nBytesInputs   = 0;\n+    unsigned int nQuantity      = 0;\n+    bool fWitness               = false;\n+\n+    std::vector<COutPoint> vCoinControl;\n+    coinControlDialog()->coinControl()->ListSelected(vCoinControl);\n+\n+    size_t i = 0;\n+    for (const auto& out : model->wallet().getCoins(vCoinControl)) {\n+        if (out.depth_in_main_chain < 0) continue;\n+\n+        // unselect already spent, very unlikely scenario, this could happen\n+        // when selected are spent elsewhere, like rpc or another computer\n+        const COutPoint& outpt = vCoinControl[i++];\n+        if (out.is_spent)\n+        {\n+            coinControlDialog()->coinControl()->UnSelect(outpt);\n+            continue;\n+        }\n+\n+        // Quantity\n+        nQuantity++;\n+\n+        // Amount\n+        nAmount += out.txout.nValue;\n+\n+        // Bytes\n+        CTxDestination address;\n+        int witnessversion = 0;\n+        std::vector<unsigned char> witnessprogram;\n+        if (out.txout.scriptPubKey.IsWitnessProgram(witnessversion, witnessprogram))\n+        {\n+            nBytesInputs += (32 + 4 + 1 + (107 / WITNESS_SCALE_FACTOR) + 4);\n+            fWitness = true;\n+        }\n+        else if(ExtractDestination(out.txout.scriptPubKey, address))\n+        {\n+            CPubKey pubkey;\n+            PKHash *pkhash = boost::get<PKHash>(&address);\n+            if (pkhash && model->wallet().getPubKey(CKeyID(*pkhash), pubkey))\n+            {\n+                nBytesInputs += (pubkey.IsCompressed() ? 148 : 180);\n+            }\n+            else\n+                nBytesInputs += 148; // in all error cases, simply assume 148 here\n+        }\n+        else nBytesInputs += 148;\n+    }\n+\n+    // calculation\n+    if (nQuantity > 0)\n+    {\n+        // Bytes\n+        nBytes = nBytesInputs + ((coinControlDialog()->payAmounts.size() > 0 ? coinControlDialog()->payAmounts.size() + 1 : 2) * 34) + 10; // always assume +1 output for change here\n+        if (fWitness)\n+        {\n+            // there is some fudging in these numbers related to the actual virtual transaction size calculation that will keep this estimate from being exact.\n+            // usually, the result will be an overestimate within a couple of satoshis so that the confirmation dialog ends up displaying a slightly smaller fee.\n+            // also, the witness stack size value is a variable sized integer. usually, the number of stack items will be well under the single byte var int limit.\n+            nBytes += 2; // account for the serialized marker and flag bytes\n+            nBytes += nQuantity; // account for the witness byte that holds the number of stack items for each input.\n+        }\n+\n+        // in the subtract fee from amount case, we can tell if zero change already and subtract the bytes, so that fee calculation afterwards is accurate\n+        if (coinControlDialog()->fSubtractFeeFromAmount)\n+            if (nAmount - nPayAmount == 0)\n+                nBytes -= 34;\n+\n+        // Fee\n+        nPayFee = model->wallet().getMinimumFee(nBytes, *coinControlDialog()->coinControl(), nullptr /* returned_target */, nullptr /* reason */);\n+\n+        if (nPayAmount > 0)\n+        {\n+            nChange = nAmount - nPayAmount;\n+            if (!coinControlDialog()->fSubtractFeeFromAmount)\n+                nChange -= nPayFee;\n+\n+            // Never create dust outputs; if we would, just add the dust to the fee.\n+            if (nChange > 0 && nChange < MIN_CHANGE)\n+            {\n+                // Assumes a p2pkh script size\n+                CTxOut txout(nChange, CScript() << std::vector<unsigned char>(24, 0));\n+                if (IsDust(txout, model->node().getDustRelayFee()))\n+                {\n+                    nPayFee += nChange;\n+                    nChange = 0;\n+                    if (coinControlDialog()->fSubtractFeeFromAmount)\n+                        nBytes -= 34; // we didn't detect lack of change above\n+                }\n+            }\n+\n+            if (nChange == 0 && !coinControlDialog()->fSubtractFeeFromAmount)\n+                nBytes -= 34;\n+        }\n+\n+        // after fee\n+        nAfterFee = std::max<CAmount>(nAmount - nPayFee, 0);\n+    }\n+\n+    // actually update labels\n+    int nDisplayUnit = BitcoinUnits::BTC;\n+    if (model && model->getOptionsModel())\n+        nDisplayUnit = model->getOptionsModel()->getDisplayUnit();\n+\n+\n+    QLabel *l1 = ui->labelCoinControlQuantity;\n+    QLabel *l2 = ui->labelCoinControlAmount;\n+    QLabel *l3 = ui->labelCoinControlFee;\n+    QLabel *l4 = ui->labelCoinControlAfterFee;\n+    QLabel *l5 = ui->labelCoinControlBytes;\n+    QLabel *l7 = ui->labelCoinControlLowOutput;\n+    QLabel *l8 = ui->labelCoinControlChange;\n+\n+    // enable/disable \"dust\" and \"change\"\n+    ui->labelCoinControlLowOutputText->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlLowOutput    ->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlChangeText   ->setEnabled(nPayAmount > 0);\n+    ui->labelCoinControlChange       ->setEnabled(nPayAmount > 0);\n+\n+    // stats\n+    l1->setText(QString::number(nQuantity));                                 // Quantity\n+    l2->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAmount));        // Amount\n+    l3->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nPayFee));        // Fee\n+    l4->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nAfterFee));      // After Fee\n+    l5->setText(((nBytes > 0) ? ASYMP_UTF8 : \"\") + QString::number(nBytes));        // Bytes\n+    l7->setText(fDust ? tr(\"yes\") : tr(\"no\"));                               // Dust\n+    l8->setText(BitcoinUnits::formatWithUnit(nDisplayUnit, nChange));        // Change\n+    if (nPayFee > 0)\n+    {\n+        l3->setText(ASYMP_UTF8 + l3->text());\n+        l4->setText(ASYMP_UTF8 + l4->text());\n+        if (nChange > 0 && !coinControlDialog()->fSubtractFeeFromAmount)\n+            l8->setText(ASYMP_UTF8 + l8->text());\n+    }\n+\n+    // turn label red when dust\n+    l7->setStyleSheet((fDust) ? \"color:red;\" : \"\");\n+\n+    // tool tips\n+    QString toolTipDust = tr(\"This label turns red if any recipient receives an amount smaller than the current dust threshold.\");\n+\n+    // how many satoshis the estimated fee can vary per byte we guess wrong\n+    double dFeeVary = (nBytes != 0) ? (double)nPayFee / nBytes : 0;\n+\n+    QString toolTip4 = tr(\"Can vary +/- %1 satoshi(s) per input.\").arg(dFeeVary);\n+\n+    l3->setToolTip(toolTip4);\n+    l4->setToolTip(toolTip4);\n+    l7->setToolTip(toolTipDust);\n+    l8->setToolTip(toolTip4);\n+    ui->labelCoinControlFeeText      ->setToolTip(l3->toolTip());\n+    ui->labelCoinControlAfterFeeText ->setToolTip(l4->toolTip());\n+    ui->labelCoinControlBytesText    ->setToolTip(l5->toolTip());\n+    ui->labelCoinControlLowOutputText->setToolTip(l7->toolTip());\n+    ui->labelCoinControlChangeText   ->setToolTip(l8->toolTip());\n+\n+    // Insufficient funds\n+    ui->labelCoinControlInsuffFunds->setVisible(nChange < 0);\n+}\n+\n SendConfirmationDialog::SendConfirmationDialog(const QString& title, const QString& text, const QString& informative_text, const QString& detailed_text, int _secDelay, const QString& _confirmButtonText, QWidget* parent)\n     : QMessageBox(parent), secDelay(_secDelay), confirmButtonText(_confirmButtonText)\n {"
      },
      {
        "sha": "338b6df8a6df74298fd8fc43ff92b2cd38c033ee",
        "filename": "src/qt/sendcoinsdialog.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/sendcoinsdialog.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1d544f730396e42c0caf0e5d291f98b2ce4be895/src/qt/sendcoinsdialog.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/sendcoinsdialog.h?ref=1d544f730396e42c0caf0e5d291f98b2ce4be895",
        "patch": "@@ -74,6 +74,7 @@ public Q_SLOTS:\n     void updateFeeMinimizedLabel();\n     // Returns the coin control dialog, creating it on first call.\n     CoinControlDialog* coinControlDialog();\n+    void updateLabels();\n     // Update the passed in CCoinControl with state from the GUI\n     void updateCoinControlState(CCoinControl& ctrl);\n "
      }
    ]
  }
]