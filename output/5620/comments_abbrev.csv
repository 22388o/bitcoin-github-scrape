laanwj,2015-01-09T11:24:02Z,"Looks good to me, utACK\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69322754,69322754,
jonasschnelli,2015-01-09T14:23:26Z,@Diapolo would it be possible to cover this with a test in `paymentservertests.cpp`?\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69339769,69339769,
Diapolo,2015-01-09T14:44:25Z,"One could craft and add an expired payment request into `paymentrequestdata.h`, copy and paste the check used in this pull `(details.has_expires() && (int64_t)details.expires() < GetTime()))` and use that in a testcase, yes. I can't craft a usable payment request usable there, feel free to jump in :).\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69342455,69342455,
Diapolo,2015-01-09T14:48:20Z,"Btw. @laanwj `expires` is also an `uint64` casted to `int64_t`, is that safe? `GetTime()`is using `int64_t` as return value, wheras the used `time()` in it is returning `time_t` (which is a `long long` on my compiler suite).\n\nThinking about it, `uint64` allows for bigger numbers than `int64` can store, so if one crafts payment request with `expires` set to a value bigger than `0x7FFFFFFFFFFFFFFF",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69343027,69343027,
gavinandresen,2015-01-09T15:36:31Z,"Definitely needs a unit test (or two, testing expires with large unsigned values is a great idea).\n\n@Diapolo : if you aren't willing to create unit tests for your code, then, in my humble opinion, you shouldn't be writing code. Testing is critical.\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69350006,69350006,
Diapolo,2015-01-09T15:39:45Z,"@gavinandresen Sorry if you have the impression I'm not willing, it's more my skills are limited in that case. I really have no idea how to craft a suiting payment request for `paymentrequestdata.h`, like you did -_-.\n\nOh and by the way, you created the initial check in paymentserver.cpp, which also had no unit test :-P. I just duplicated the code which was there and added it, where it also need",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69350471,69350471,
jonasschnelli,2015-01-09T15:43:31Z,@Diapolo i'll try to create one a link you in a commit for `paymentrequestdata.h`\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69351076,69351076,
Diapolo,2015-01-09T15:44:56Z,@jonasschnelli I'm glad if you also can help me in understanding how you do it :).\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69351330,69351330,
gavinandresen,2015-01-09T15:46:19Z,"There's simple c++ code for creating payment requests here:  https://github.com/gavinandresen/paymentrequest/blob/master/c%2B%2B/paymentrequest-create.cpp\n\nI used it to generate a binary payment request (after using openssl commands to generate private keys, certificates, etc).\n\nThen I converted the binary payment request files to base64 (e.g. openssl enc -base64)\n\nThen copy the base64 into ",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69351549,69351549,
Diapolo,2015-01-09T15:51:01Z,"@gavinandresen Thanks for linking that in here, I'll take a look.\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69352412,69352412,
jonasschnelli,2015-01-09T15:52:21Z,"Could you not take one from https://bitcoincore.org/~gavin/createpaymentrequest.php and base64 it?\nIf you need different values, take the php source, run them on MAMP/XAMP, etc. \nI suppose this might also work.\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69352645,69352645,
jonasschnelli,2015-01-09T16:03:15Z,@Diapolo ping me if you didn't succeed then i start looking at it.\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69354391,69354391,
Diapolo,2015-01-10T01:31:13Z,"@gavinandresen Wow, that was quite hard up to where I am now :). I took your whole branch https://github.com/gavinandresen/paymentrequest and converted the entire create_ca.sh to a Windows compatible create_ca.cmd, reworked build_detect_platform, Makefile, paymentrequest-create.cpp, paymentrequest-dump.cpp and even the README.txt (to perhaps aid others with this stuff) to be Windows compatible!\n\",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69431425,69431425,
Diapolo,2015-01-13T14:50:06Z,"I depend on #5642 getting merged, before I can add another unit test for this.\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69754844,69754844,
jonasschnelli,2015-01-13T14:55:26Z,@Diapolo could you not include #5642 commits in this PR and add a UT?\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69755737,69755737,
Diapolo,2015-01-13T15:01:46Z,"@jonasschnelli Yeah I could rebase this ontop of the other pull, but I'm not sure this allows for a quicker merge. The other pr requires a review of at least one other core dev I guess...\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69756760,69756760,
Diapolo,2015-01-14T13:02:29Z,"Rebased to be on top of #5642, which has 2 ACKs now.\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-69912673,69912673,
Diapolo,2015-01-15T08:09:42Z,If this passes Travis it should be ready to merge. Needs review by @gavinandresen or @laanwj.\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-70052251,70052251,
Diapolo,2015-01-23T10:29:45Z,So 8 days ago I finished this medium priority pull and no one cares to review/ACK? Are we dropping wallet support or why is no one caring about our reference implementation of the payment protocol?\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-71174690,71174690,
jonasschnelli,2015-01-23T10:48:53Z,I think we all care.\nIt's just very hard to set priorities.\nYour work looks really good and I will do a proper test and a review.\n\nPlease be patient and give us some more days. Thanks.\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-71176875,71176875,
jonasschnelli,2015-01-23T13:22:12Z,Here are some fresh built binaries from my gitian-build-server (in case some likes to test but not to build):\nhttps://bitcoin.jonasschnelli.ch/pulls/5620/\n,https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-71192138,71192138,
jonasschnelli,2015-01-29T08:25:55Z,"Tested, reviewed\nACK.\n\n![bildschirmfoto 2015-01-29 um 09 24 47](https://cloud.githubusercontent.com/assets/178464/5954520/cb7f0278-a798-11e4-9b69-050e63d23e37.png)\n",https://github.com/bitcoin/bitcoin/pull/5620#issuecomment-71986805,71986805,
SergioDemianLerner,2015-01-30T15:55:13Z,"Shouldn't ""fVerified"" be renamed ""fExpired"" ? ""Verified"" implies something positive. \n",https://github.com/bitcoin/bitcoin/pull/5620#discussion_r23850624,23850624,src/qt/paymentserver.cpp
