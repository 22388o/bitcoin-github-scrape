theStack,2021-08-31 09:23:02,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-909060039,909060039,
practicalswift,2021-09-04 13:48:36,Concept ACK,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-912977373,912977373,
DrahtBot,2021-09-07 20:53:32,<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nNo conflicts as of last run.,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-914622343,914622343,
naumenkogs,2021-09-17 09:34:39,ACK 632e648fd8a4d7b71be45139a51c75ffff305a1b,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-921654751,921654751,
mzumsande,2021-10-05 17:20:49,Rebased and addressed feedback by @naumenkogs .,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-934608731,934608731,
jnewbery,2021-10-06 09:49:59,utACK 2ac363a1f731b06d3f3c8b2fd7a02d0f846bb39b,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-935868318,935868318,
naumenkogs,2021-10-06 10:23:44,"ACK 2ac363a1f731b06d3f3c8b2fd7a02d0f846bb39b, but it'd be great to apply what vasild suggested.",https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-935920096,935920096,
fanquake,2021-10-07 05:42:04,"Given this change is quite small, and re-ACKing is easy, I'd suggest addressing the outstanding review comments before we merge this. Rather than having a followup to change the same lines again.\n\nAlso @naumenkogs I edited your ACK to remove the @ mention, otherwise it would have ended up in the merge message.",https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-937467868,937467868,
mzumsande,2021-10-07 07:28:58,"Makes sense of course, I'll push an update this evening. ",https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-937528608,937528608,
mzumsande,2021-10-07 23:59:57,"I addressed @vasild's suggestions, thanks for the review!\nNote that now this PR introduces more additional `BCLog::ADDRMAN` log calls. Although I originally had the intention to only log from the functions belonging to the public interface, I think that the entries in `ClearNew` and `MakeTried` can be helpful for debugging.",https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-938236001,938236001,
naumenkogs,2021-10-08 08:15:13,ACK 2ceab68079601072a8ab6f084e4b3123025d0463,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-938440234,938440234,
jnewbery,2021-10-08 09:14:51,ACK 2ceab68079601072a8ab6f084e4b3123025d0463,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-938483131,938483131,
mzumsande,2021-10-11 20:47:18,"Latest push: I added the bucket position everywhere where only the bucket was logged before and changed to a consistent notation `new[i][j]`, `tried[i][j]`.",https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-940429613,940429613,
jnewbery,2021-10-20 08:38:52,ACK b65a25a84666d41a0af4ad98ffadfa4ac802d1bb,https://github.com/bitcoin/bitcoin/pull/22839#issuecomment-947451590,947451590,
naumenkogs,2021-09-17 09:33:57,"nits:\n1. Say ""of size XYZ entries"" (implying not bytes).\n2. Maybe something more specific like ""Selected XYZ entries to be sent in response to GETADDR""",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r710905950,710905950,src/addrman.cpp
mzumsande,2021-10-02 22:36:14,Thanks - I forgot to answer this - will address it when I push next (i.e. after #22950 is merged and I'll need to rebase anyway).,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r720737254,720737254,src/addrman.cpp
naumenkogs,2021-10-04 07:16:10,"Why so pessimistic? :)\nThis already has 3 ACKs, so might bring this up at the meeting? Unless you explicitly want to avoid forcing a rebase on #22950",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r721096973,721096973,src/addrman.cpp
jnewbery,2021-10-04 09:11:40,"I think that since #22950 is so much larger and requires more time-consuming review, it makes sense to try to merge that first and rebase other PRs on top of it (rather than merge small PRs and force 22950 to be rebased/re-reviewed).",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r721179473,721179473,src/addrman.cpp
mzumsande,2021-10-04 09:53:59,"Yes, I agree with that. I'd much rather rebase this than go through all the (mostly mechanical) changes of 22950 another time. ",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r721211828,721211828,src/addrman.cpp
mzumsande,2021-10-05 17:20:11,"I took your second suggestion, thanks!",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r722452306,722452306,src/addrman.cpp
vasild,2021-10-06 08:38:25,"nit: a mixture of tenses is used: moving, adding, select, selected. ",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r723012957,723012957,src/addrman.cpp
vasild,2021-10-06 08:41:01,"nit: might as well drop ""IP"". ""Moving 10.20.30.40"" is also fine IMO.\n\n""Moving IP 2g5qfdkn2vvcbqhzcyvyiitg4ceukybxklraxjnu7atlhd22gdwywaid.onion"" is funny because that is not an IP (address).",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r723015165,723015165,src/addrman.cpp
vasild,2021-10-06 08:52:28,"Since we log the ""add"" operation, would it make sense to also log the ""delete""?\n* `Delete()`: removes an entry from the new table\n* `MakeTried()`: may move an entry from tried to new.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r723024716,723024716,src/addrman.cpp
vasild,2021-10-06 09:09:43,"Above, on line 581 there is a confusing log which says ""moving"", but it is actually not moving anything - it only adds the ID to a list of collided IDs. The promoted entry remains in the new table (`Good()` fails to promote it to tried) and the existent entry remains in tried.\n\n```diff\n     if (test_before_evict && (vvTried[tried_bucket][tried_bucket_pos] != -1)) {\n         // Output the e",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r723040597,723040597,src/addrman.cpp
mzumsande,2021-10-07 23:34:33,"I changed it to past in all added logs, but didn't change all existing ones: Sometimes the log describes something that is about to be done after the log.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724603012,724603012,src/addrman.cpp
mzumsande,2021-10-07 23:34:50,Done as suggested.,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724603132,724603132,src/addrman.cpp
mzumsande,2021-10-07 23:47:41,"I added a log to `MakeTried()` as suggested.\n\n>  Delete()`: removes an entry from the new table\n\nIt only removes from mapAddr and mapInfo:\nIf `Add()` attempts to add an unknown addr, which collides with an existing, non-terrible one, `Create()` and `Delete()` are called even though nothing is ever actually added into any new bucket - I don't think `Delete()` should log in this case.\nTh",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724607397,724607397,src/addrman.cpp
mzumsande,2021-10-07 23:50:55,"I changed this, and also moved the log call after the Insert into `m_tried_collisions` so that the logged `m_tried_collisions.size()` make more sense.\n""Cannot move"" sounds a bit too final, because it might be moved a bit later when evaluating  `m_tried_collisions` so I chose a slightly different wording. ",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724608524,724608524,src/addrman.cpp
vasild,2021-10-08 07:07:59,"nit: If the entry is not found, then the log would look like:\n```\nCollision with  while attempting...\n```\n\nI think the entry will always be found, unless some addrman corruption has happened. The previous log would also look strange in that case.\n\n```suggestion\n        LogPrint(BCLog::ADDRMAN, ""Collision%s while attempting to move %s to tried table. Collisions=%d\n"",\n            ",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724754140,724754140,src/addrman.cpp
naumenkogs,2021-10-08 08:03:05,"This case was unclear for me either. Perhaps `assert != end` is too dangerous, but at least logging that something is wrong explicitly would be great?\n",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724789577,724789577,src/addrman.cpp
naumenkogs,2021-10-08 08:08:59,"nit: If you decided to log a bucket, I assume the reason for that is to debug addrman logs in case something goes wrong. \nThen, logging a position would also be useful :)",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724793869,724793869,src/addrman.cpp
naumenkogs,2021-10-08 08:11:49,[Same kinda question](https://github.com/bitcoin/bitcoin/pull/22839/files#r724793869),https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724795795,724795795,src/addrman.cpp
vasild,2021-10-08 08:15:27,"Yeah, I also think an assert is too dangerous (and out of the scope of this PR). The methods `Good_()`, `Attempt()_`, `Connected()_` and `SetServices_()` just cancel the current operation without disturbing the entire process (like `assert()` would do) if the unexpected happens (search for `// if not found, bail out`).",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724798290,724798290,src/addrman.cpp
vasild,2021-10-08 08:20:02,"Now, we are doing [feature creep](https://en.wikipedia.org/wiki/Feature_creep) to this PR, so feel free to ignore. But, but, but... what about an uniform `new[i][j]` and `tried[i][j]` all over the place? E.g.\n\n```\nMoving 1.2.3.4 from tried[5][20] to new[4][50]\n```",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724801501,724801501,src/addrman.cpp
MarcoFalke,2021-10-08 08:21:16,`Assume` could be used,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724802503,724802503,src/addrman.cpp
vasild,2021-10-08 09:07:02,"Like this?\n```cpp\nAssume(colliding_entry != mapInfo.end());\nLogPrint(..., colliding_entry->second.ToString(), ...);\n```\nin the adverse scenario, in production, the first line would do nothing and the second line would crash.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724837395,724837395,src/addrman.cpp
jnewbery,2021-10-08 09:14:13,"This seems like a reasonable improvement, but the behavior here is unchanged in this PR. Previously the log was also doing a test on `colliding_entry != mapInfo.end()`. This PR is currently focused entirely on logging improvements, so I think changing this behavior should be left for a different PR.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r724842670,724842670,src/addrman.cpp
mzumsande,2021-10-09 13:47:39,That does sound useful! Might just take a couple more days until I get to it. ,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r725489862,725489862,src/addrman.cpp
mzumsande,2021-10-11 20:42:53,"Ok, I'll leave this as is in this PR.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r726556505,726556505,src/addrman.cpp
mzumsande,2021-10-11 20:43:40,I changed this as suggested by @vasild with the latest push.,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r726556846,726556846,src/addrman.cpp
mzumsande,2021-10-11 20:44:08,Done.,https://github.com/bitcoin/bitcoin/pull/22839#discussion_r726557063,726557063,src/addrman.cpp
vasild,2021-10-13 10:18:00,"This is the ""tried"" case but would log ""new"". Below, in the ""new"" case we would log ""tried"".",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r727914155,727914155,src/addrman.cpp
mzumsande,2021-10-13 22:39:47,"Oops, thanks for catching that! Fixed now.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r728497166,728497166,src/addrman.cpp
jnewbery,2021-10-15 10:11:15,"I don't really like having internal addrman logs including assumptions about how the external interface function is being used. Here, I think it's sufficient to log ""Selected %s from tried"". The calling code is responsible for logging about what it does with the returned data.\n\nYou could imagine in the future the Select() function being used for a purpose other than to get an address to connec",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r729694437,729694437,src/addrman.cpp
mzumsande,2021-10-18 22:28:33,"Changed. The reason I had those is to distinguish between GetAddr and Select, which both select addresses from addrman, but for a different purpose, and with a different methodology closely tied to the respective purpose. I removed the description of the purpose but kept the ""getaddr"" keyword to make that difference clear.",https://github.com/bitcoin/bitcoin/pull/22839#discussion_r731360316,731360316,src/addrman.cpp
