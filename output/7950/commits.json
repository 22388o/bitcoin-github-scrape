[
  {
    "sha": "9ca957bcd401de69c4c03904b9ee8b8b41052905",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5Y2E5NTdiY2Q0MDFkZTY5YzRjMDM5MDRiOWVlOGI4YjQxMDUyOTA1",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2016-02-09T11:37:05Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-27T10:29:56Z"
      },
      "message": "tests: Make proxy_test work on travis servers without IPv6\n\nGithub-Pull: #7489\nRebased-From: 7539f1aae3b41279dc5d49e09f448a78a071e114",
      "tree": {
        "sha": "41fa7f0eef928791a4eac56b18750eed9ec8c214",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/41fa7f0eef928791a4eac56b18750eed9ec8c214"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9ca957bcd401de69c4c03904b9ee8b8b41052905",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ca957bcd401de69c4c03904b9ee8b8b41052905",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9ca957bcd401de69c4c03904b9ee8b8b41052905",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ca957bcd401de69c4c03904b9ee8b8b41052905/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "89ae85484c8b8eb6400cdaa84461c369854f6667",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89ae85484c8b8eb6400cdaa84461c369854f6667",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/89ae85484c8b8eb6400cdaa84461c369854f6667"
      }
    ],
    "stats": {
      "total": 89,
      "additions": 58,
      "deletions": 31
    },
    "files": [
      {
        "sha": "91c871ddc900316c9ab2f867d2a0dbec31e6f70f",
        "filename": "qa/rpc-tests/proxy_test.py",
        "status": "modified",
        "additions": 43,
        "deletions": 31,
        "changes": 74,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ca957bcd401de69c4c03904b9ee8b8b41052905/qa/rpc-tests/proxy_test.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ca957bcd401de69c4c03904b9ee8b8b41052905/qa/rpc-tests/proxy_test.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/proxy_test.py?ref=9ca957bcd401de69c4c03904b9ee8b8b41052905",
        "patch": "@@ -7,6 +7,7 @@\n from test_framework.socks5 import Socks5Configuration, Socks5Command, Socks5Server, AddressType\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import *\n+from test_framework.netutil import test_ipv6_local\n '''\n Test plan:\n - Start bitcoind's with different proxy configurations\n@@ -34,6 +35,7 @@\n \n class ProxyTest(BitcoinTestFramework):\n     def __init__(self):\n+        self.have_ipv6 = test_ipv6_local()\n         # Create two proxies on different ports\n         # ... one unauthenticated\n         self.conf1 = Socks5Configuration()\n@@ -45,29 +47,36 @@ def __init__(self):\n         self.conf2.addr = ('127.0.0.1', 14000 + (os.getpid() % 1000))\n         self.conf2.unauth = True\n         self.conf2.auth = True\n-        # ... one on IPv6 with similar configuration\n-        self.conf3 = Socks5Configuration()\n-        self.conf3.af = socket.AF_INET6\n-        self.conf3.addr = ('::1', 15000 + (os.getpid() % 1000))\n-        self.conf3.unauth = True\n-        self.conf3.auth = True\n+        if self.have_ipv6:\n+            # ... one on IPv6 with similar configuration\n+            self.conf3 = Socks5Configuration()\n+            self.conf3.af = socket.AF_INET6\n+            self.conf3.addr = ('::1', 15000 + (os.getpid() % 1000))\n+            self.conf3.unauth = True\n+            self.conf3.auth = True\n+        else:\n+            print \"Warning: testing without local IPv6 support\"\n \n         self.serv1 = Socks5Server(self.conf1)\n         self.serv1.start()\n         self.serv2 = Socks5Server(self.conf2)\n         self.serv2.start()\n-        self.serv3 = Socks5Server(self.conf3)\n-        self.serv3.start()\n+        if self.have_ipv6:\n+            self.serv3 = Socks5Server(self.conf3)\n+            self.serv3.start()\n \n     def setup_nodes(self):\n         # Note: proxies are not used to connect to local nodes\n         # this is because the proxy to use is based on CService.GetNetwork(), which return NET_UNROUTABLE for localhost\n-        return start_nodes(4, self.options.tmpdir, extra_args=[\n+        args = [\n             ['-listen', '-debug=net', '-debug=proxy', '-proxy=%s:%i' % (self.conf1.addr),'-proxyrandomize=1'], \n             ['-listen', '-debug=net', '-debug=proxy', '-proxy=%s:%i' % (self.conf1.addr),'-onion=%s:%i' % (self.conf2.addr),'-proxyrandomize=0'], \n             ['-listen', '-debug=net', '-debug=proxy', '-proxy=%s:%i' % (self.conf2.addr),'-proxyrandomize=1'], \n-            ['-listen', '-debug=net', '-debug=proxy', '-proxy=[%s]:%i' % (self.conf3.addr),'-proxyrandomize=0', '-noonion']\n-            ])\n+            []\n+            ]\n+        if self.have_ipv6:\n+            args[3] = ['-listen', '-debug=net', '-debug=proxy', '-proxy=[%s]:%i' % (self.conf3.addr),'-proxyrandomize=0', '-noonion']\n+        return start_nodes(4, self.options.tmpdir, extra_args=args)\n \n     def node_test(self, node, proxies, auth, test_onion=True):\n         rv = []\n@@ -84,18 +93,19 @@ def node_test(self, node, proxies, auth, test_onion=True):\n             assert_equal(cmd.password, None)\n         rv.append(cmd)\n \n-        # Test: outgoing IPv6 connection through node\n-        node.addnode(\"[1233:3432:2434:2343:3234:2345:6546:4534]:5443\", \"onetry\")\n-        cmd = proxies[1].queue.get()\n-        assert(isinstance(cmd, Socks5Command))\n-        # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n-        assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n-        assert_equal(cmd.addr, b\"1233:3432:2434:2343:3234:2345:6546:4534\")\n-        assert_equal(cmd.port, 5443)\n-        if not auth:\n-            assert_equal(cmd.username, None)\n-            assert_equal(cmd.password, None)\n-        rv.append(cmd)\n+        if self.have_ipv6:\n+            # Test: outgoing IPv6 connection through node\n+            node.addnode(\"[1233:3432:2434:2343:3234:2345:6546:4534]:5443\", \"onetry\")\n+            cmd = proxies[1].queue.get()\n+            assert(isinstance(cmd, Socks5Command))\n+            # Note: bitcoind's SOCKS5 implementation only sends atyp DOMAINNAME, even if connecting directly to IPv4/IPv6\n+            assert_equal(cmd.atyp, AddressType.DOMAINNAME)\n+            assert_equal(cmd.addr, b\"1233:3432:2434:2343:3234:2345:6546:4534\")\n+            assert_equal(cmd.port, 5443)\n+            if not auth:\n+                assert_equal(cmd.username, None)\n+                assert_equal(cmd.password, None)\n+            rv.append(cmd)\n \n         if test_onion:\n             # Test: outgoing onion connection through node\n@@ -135,10 +145,11 @@ def run_test(self):\n         rv = self.node_test(self.nodes[2], [self.serv2, self.serv2, self.serv2, self.serv2], True)\n         # Check that credentials as used for -proxyrandomize connections are unique\n         credentials = set((x.username,x.password) for x in rv)\n-        assert_equal(len(credentials), 4)\n+        assert_equal(len(credentials), len(rv))\n \n-        # proxy on IPv6 localhost\n-        self.node_test(self.nodes[3], [self.serv3, self.serv3, self.serv3, self.serv3], False, False)\n+        if self.have_ipv6:\n+            # proxy on IPv6 localhost\n+            self.node_test(self.nodes[3], [self.serv3, self.serv3, self.serv3, self.serv3], False, False)\n \n         def networks_dict(d):\n             r = {}\n@@ -167,11 +178,12 @@ def networks_dict(d):\n             assert_equal(n2[net]['proxy_randomize_credentials'], True)\n         assert_equal(n2['onion']['reachable'], True)\n \n-        n3 = networks_dict(self.nodes[3].getnetworkinfo())\n-        for net in ['ipv4','ipv6']:\n-            assert_equal(n3[net]['proxy'], '[%s]:%i' % (self.conf3.addr))\n-            assert_equal(n3[net]['proxy_randomize_credentials'], False)\n-        assert_equal(n3['onion']['reachable'], False)\n+        if self.have_ipv6:\n+            n3 = networks_dict(self.nodes[3].getnetworkinfo())\n+            for net in ['ipv4','ipv6']:\n+                assert_equal(n3[net]['proxy'], '[%s]:%i' % (self.conf3.addr))\n+                assert_equal(n3[net]['proxy_randomize_credentials'], False)\n+            assert_equal(n3['onion']['reachable'], False)\n \n if __name__ == '__main__':\n     ProxyTest().main()"
      },
      {
        "sha": "52a7ab74890f134e6b32e4e32779e019ab482b0a",
        "filename": "qa/rpc-tests/test_framework/netutil.py",
        "status": "modified",
        "additions": 15,
        "deletions": 0,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9ca957bcd401de69c4c03904b9ee8b8b41052905/qa/rpc-tests/test_framework/netutil.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9ca957bcd401de69c4c03904b9ee8b8b41052905/qa/rpc-tests/test_framework/netutil.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/qa/rpc-tests/test_framework/netutil.py?ref=9ca957bcd401de69c4c03904b9ee8b8b41052905",
        "patch": "@@ -138,3 +138,18 @@ def addr_to_hex(addr):\n     else:\n         raise ValueError('Could not parse address %s' % addr)\n     return hexlify(bytearray(addr)).decode('ascii')\n+\n+def test_ipv6_local():\n+    '''\n+    Check for (local) IPv6 support.\n+    '''\n+    import socket\n+    # By using SOCK_DGRAM this will not actually make a connection, but it will\n+    # fail if there is no route to IPv6 localhost.\n+    have_ipv6 = True\n+    try:\n+        s = socket.socket(socket.AF_INET6, socket.SOCK_DGRAM)\n+        s.connect(('::1', 0))\n+    except socket.error:\n+        have_ipv6 = False\n+    return have_ipv6"
      }
    ]
  },
  {
    "sha": "564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjRhYWEyY2QwZWUwNTdkOWVlZGM4ZGExYzkwMGQ5MGY0M2M4OWM2",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-04-20T20:36:55Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2016-04-27T10:29:56Z"
      },
      "message": "travis: switch to Trusty\n\nGithub-Pull: #7920\nRebased-From: 06fdffd222ba0a00add4abe9fab9ad2c3e220d8f, 9267a47d86d0673eae9e504ee566aa4e0410d923, cf77fcdb1fe525b63b004ef729173f04bdb48882, 174023c9b008fc02316bce972b0c1031de3feee3, a33b7c9cb545985771d074748c0e368ca2d06702",
      "tree": {
        "sha": "d3ac8b18fc682e66c7fa50dd4de617dae750cd40",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d3ac8b18fc682e66c7fa50dd4de617dae750cd40"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9ca957bcd401de69c4c03904b9ee8b8b41052905",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9ca957bcd401de69c4c03904b9ee8b8b41052905",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9ca957bcd401de69c4c03904b9ee8b8b41052905"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 10,
      "deletions": 9
    },
    "files": [
      {
        "sha": "f2fb8a4fc2fcdef7f405a7479980365c11b773f5",
        "filename": ".travis.yml",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6/.travis.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6/.travis.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/.travis.yml?ref=564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
        "patch": "@@ -7,8 +7,7 @@\n #   IPv6 support\n \n sudo: required\n-dist: precise\n-group: legacy\n+dist: trusty\n \n os: linux\n language: cpp\n@@ -37,22 +36,25 @@ matrix:\n     - compiler: \": ARM\"\n       env: HOST=arm-linux-gnueabihf PACKAGES=\"g++-arm-linux-gnueabihf\" DEP_OPTS=\"NO_QT=1\" GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Win32\"\n-      env: HOST=i686-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-i686 g++-mingw-w64-i686 binutils-mingw-w64-i686 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=i686-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"nsis g++-mingw-w64-i686 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n     - compiler: \": 32-bit + dash\"\n-      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n+      env: HOST=i686-pc-linux-gnu PACKAGES=\"g++-multilib bc python-zmq\" DEP_OPTS=\"NO_QT=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++\" USE_SHELL=\"/bin/dash\"\n     - compiler: \": Win64\"\n-      env: HOST=x86_64-w64-mingw32 PPA=\"ppa:ubuntu-wine/ppa\" PACKAGES=\"nsis gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64 binutils-mingw-w64-x86-64 mingw-w64-dev wine1.7 bc\" RUN_TESTS=true GOAL=\"deploy\" BITCOIN_CONFIG=\"--enable-gui --enable-reduce-exports\" MAKEJOBS=\"-j2\"\n+      env: HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH=\"i386\" DEP_OPTS=\"NO_QT=1\" PACKAGES=\"nsis g++-mingw-w64-x86-64 wine1.6 bc\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-reduce-exports\"\n     - compiler: \": bitcoind\"\n-      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" PPA=\"ppa:chris-lea/zeromq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n+      env: HOST=x86_64-unknown-linux-gnu PACKAGES=\"bc python-zmq\" DEP_OPTS=\"NO_QT=1 NO_UPNP=1 DEBUG=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-zmq --enable-glibc-back-compat --enable-reduce-exports CPPFLAGS=-DDEBUG_LOCKORDER\"\n     - compiler: \": No wallet\"\n       env: HOST=x86_64-unknown-linux-gnu DEP_OPTS=\"NO_WALLET=1\" RUN_TESTS=true GOAL=\"install\" BITCOIN_CONFIG=\"--enable-glibc-back-compat --enable-reduce-exports\"\n     - compiler: \": Cross-Mac\"\n       env: HOST=x86_64-apple-darwin11 PACKAGES=\"cmake libcap-dev libz-dev libbz2-dev\" BITCOIN_CONFIG=\"--enable-reduce-exports\" OSX_SDK=10.9 GOAL=\"deploy\"\n   exclude:\n     - compiler: gcc\n+before_install:\n+    - export PATH=$(echo $PATH | tr ':' \"\\n\" | sed '/\\/opt\\/python/d' | tr \"\\n\" \":\" | sed \"s|::|:|g\")\n install:\n-    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/travis_ci_zeromq3-source.list; fi\n+    - if [ -n \"$PACKAGES\" ]; then sudo rm -f /etc/apt/sources.list.d/google-chrome.list; fi\n     - if [ -n \"$PPA\" ]; then travis_retry sudo add-apt-repository \"$PPA\" -y; fi\n+    - if [ -n \"$DPKG_ADD_ARCH\" ]; then sudo dpkg --add-architecture \"$DPKG_ADD_ARCH\" ; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get update; fi\n     - if [ -n \"$PACKAGES\" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi\n before_script:\n@@ -66,7 +68,6 @@ script:\n     - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST\n     - BITCOIN_CONFIG_ALL=\"--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib\"\n     - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE\n-    - if [ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]; then export CCACHE_READONLY=1; fi\n     - test -n \"$USE_SHELL\" && eval '\"$USE_SHELL\" -c \"./autogen.sh\"' || ./autogen.sh\n     - ./configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)\n     - make distdir PACKAGE=bitcoin VERSION=$HOST"
      },
      {
        "sha": "b2ed21f9d4da09cb06cfc07f2d6175e3bb08986a",
        "filename": "depends/packages/qt.mk",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6/depends/packages/qt.mk",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/564aaa2cd0ee057d9eedc8da1c900d90f43c89c6/depends/packages/qt.mk",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/depends/packages/qt.mk?ref=564aaa2cd0ee057d9eedc8da1c900d90f43c89c6",
        "patch": "@@ -31,7 +31,7 @@ $(package)_config_opts += -no-iconv\n $(package)_config_opts += -no-gif\n $(package)_config_opts += -no-freetype\n $(package)_config_opts += -no-nis\n-$(package)_config_opts += -no-pch\n+$(package)_config_opts += -pch\n $(package)_config_opts += -no-qml-debug\n $(package)_config_opts += -nomake examples\n $(package)_config_opts += -nomake tests"
      }
    ]
  }
]