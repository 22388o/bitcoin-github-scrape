[
  {
    "sha": "5b263399a09432988aadfbd85c85ecdb8275bf13",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1YjI2MzM5OWEwOTQzMjk4OGFhZGZiZDg1Yzg1ZWNkYjgyNzViZjEz",
    "commit": {
      "author": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-08-21T18:52:31Z"
      },
      "committer": {
        "name": "Daniel Kraft",
        "email": "d@domob.eu",
        "date": "2018-08-22T08:29:44Z"
      },
      "message": "ZMQ: Use C++ language bindings.\n\nThis changes the ZMQ code to use the C++ language bindings instead of the\nplain C interface.  This allows us to make use of RAII for initialisation\nand destruction, making the code easier to read and less error-prone.\n\nSee https://github.com/bitcoin/bitcoin/issues/13957.",
      "tree": {
        "sha": "a24a52a4e176dfb0db04b391462126e37ce60bc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a24a52a4e176dfb0db04b391462126e37ce60bc6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b263399a09432988aadfbd85c85ecdb8275bf13",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b263399a09432988aadfbd85c85ecdb8275bf13",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b263399a09432988aadfbd85c85ecdb8275bf13",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b263399a09432988aadfbd85c85ecdb8275bf13/comments",
    "author": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "domob1812",
      "id": 4943644,
      "node_id": "MDQ6VXNlcjQ5NDM2NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4943644?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/domob1812",
      "html_url": "https://github.com/domob1812",
      "followers_url": "https://api.github.com/users/domob1812/followers",
      "following_url": "https://api.github.com/users/domob1812/following{/other_user}",
      "gists_url": "https://api.github.com/users/domob1812/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/domob1812/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/domob1812/subscriptions",
      "organizations_url": "https://api.github.com/users/domob1812/orgs",
      "repos_url": "https://api.github.com/users/domob1812/repos",
      "events_url": "https://api.github.com/users/domob1812/events{/privacy}",
      "received_events_url": "https://api.github.com/users/domob1812/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2df11322faae555bd963a7610102b61049168333",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2df11322faae555bd963a7610102b61049168333",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2df11322faae555bd963a7610102b61049168333"
      }
    ],
    "stats": {
      "total": 119,
      "additions": 46,
      "deletions": 73
    },
    "files": [
      {
        "sha": "448205c9e53bde93d4b6c98c0649d10887036ca3",
        "filename": "doc/zmq.md",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/doc/zmq.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/doc/zmq.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/zmq.md?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -34,8 +34,8 @@ buffering or reassembly.\n ## Prerequisites\n \n The ZeroMQ feature in Bitcoin Core requires ZeroMQ API version 4.x or\n-newer. Typically, it is packaged by distributions as something like\n-*libzmq3-dev*. The C++ wrapper for ZeroMQ is *not* needed.\n+newer and the C++ language bindings.  Typically, it is packaged by\n+distributions as something like *libzmq3-dev*.\n \n In order to run the example Python client scripts in contrib/ one must\n also install *python3-zmq*, though this is not necessary for daemon"
      },
      {
        "sha": "b1caadda8186a8a29f6e54c54f9e2e94c5dbcc2f",
        "filename": "src/zmq/zmqabstractnotifier.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqabstractnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqabstractnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqabstractnotifier.h?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -7,6 +7,8 @@\n \n #include <zmq/zmqconfig.h>\n \n+#include <memory>\n+\n class CBlockIndex;\n class CZMQAbstractNotifier;\n \n@@ -15,7 +17,7 @@ typedef CZMQAbstractNotifier* (*CZMQNotifierFactory)();\n class CZMQAbstractNotifier\n {\n public:\n-    CZMQAbstractNotifier() : psocket(nullptr) { }\n+    CZMQAbstractNotifier() = default;\n     virtual ~CZMQAbstractNotifier();\n \n     template <typename T>\n@@ -29,14 +31,14 @@ class CZMQAbstractNotifier\n     std::string GetAddress() const { return address; }\n     void SetAddress(const std::string &a) { address = a; }\n \n-    virtual bool Initialize(void *pcontext) = 0;\n+    virtual bool Initialize(zmq::context_t& context) = 0;\n     virtual void Shutdown() = 0;\n \n     virtual bool NotifyBlock(const CBlockIndex *pindex);\n     virtual bool NotifyTransaction(const CTransaction &transaction);\n \n protected:\n-    void *psocket;\n+    std::shared_ptr<zmq::socket_t> psocket;\n     std::string type;\n     std::string address;\n };"
      },
      {
        "sha": "8d7f27c0ea6fb5daa0177c7aecc471a938e06578",
        "filename": "src/zmq/zmqconfig.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqconfig.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqconfig.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqconfig.h?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -13,12 +13,12 @@\n #include <string>\n \n #if ENABLE_ZMQ\n-#include <zmq.h>\n+#include <zmq.hpp>\n #endif\n \n #include <primitives/block.h>\n #include <primitives/transaction.h>\n \n-void zmqError(const char *str);\n+void zmqError(const char* msg, const zmq::error_t& exc);\n \n #endif // BITCOIN_ZMQ_ZMQCONFIG_H"
      },
      {
        "sha": "abc38384d74c29ef45e22aef32889c8838ff4ff7",
        "filename": "src/zmq/zmqnotificationinterface.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 25,
        "changes": 34,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqnotificationinterface.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqnotificationinterface.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.cpp?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -10,14 +10,13 @@\n #include <streams.h>\n #include <util.h>\n \n-void zmqError(const char *str)\n+void zmqError(const char* msg, const zmq::error_t& exc)\n {\n-    LogPrint(BCLog::ZMQ, \"zmq: Error: %s, errno=%s\\n\", str, zmq_strerror(errno));\n+    LogPrint(BCLog::ZMQ, \"zmq: %s: %s, errno=%s\\n\", msg, exc.what(), exc.num());\n }\n \n-CZMQNotificationInterface::CZMQNotificationInterface() : pcontext(nullptr)\n-{\n-}\n+CZMQNotificationInterface::CZMQNotificationInterface() : context(1)\n+{}\n \n CZMQNotificationInterface::~CZMQNotificationInterface()\n {\n@@ -82,21 +81,12 @@ CZMQNotificationInterface* CZMQNotificationInterface::Create()\n bool CZMQNotificationInterface::Initialize()\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Initialize notification interface\\n\");\n-    assert(!pcontext);\n-\n-    pcontext = zmq_init(1);\n-\n-    if (!pcontext)\n-    {\n-        zmqError(\"Unable to initialize context\");\n-        return false;\n-    }\n \n     std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin();\n     for (; i!=notifiers.end(); ++i)\n     {\n         CZMQAbstractNotifier *notifier = *i;\n-        if (notifier->Initialize(pcontext))\n+        if (notifier->Initialize(context))\n         {\n             LogPrint(BCLog::ZMQ, \"  Notifier %s ready (address = %s)\\n\", notifier->GetType(), notifier->GetAddress());\n         }\n@@ -119,17 +109,11 @@ bool CZMQNotificationInterface::Initialize()\n void CZMQNotificationInterface::Shutdown()\n {\n     LogPrint(BCLog::ZMQ, \"zmq: Shutdown notification interface\\n\");\n-    if (pcontext)\n+    for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n     {\n-        for (std::list<CZMQAbstractNotifier*>::iterator i=notifiers.begin(); i!=notifiers.end(); ++i)\n-        {\n-            CZMQAbstractNotifier *notifier = *i;\n-            LogPrint(BCLog::ZMQ, \"   Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n-            notifier->Shutdown();\n-        }\n-        zmq_ctx_destroy(pcontext);\n-\n-        pcontext = nullptr;\n+        CZMQAbstractNotifier *notifier = *i;\n+        LogPrint(BCLog::ZMQ, \"   Shutdown notifier %s at %s\\n\", notifier->GetType(), notifier->GetAddress());\n+        notifier->Shutdown();\n     }\n }\n "
      },
      {
        "sha": "7ee4ec2689bb3b1974aeae9363f462193e0a985b",
        "filename": "src/zmq/zmqnotificationinterface.h",
        "status": "modified",
        "additions": 4,
        "deletions": 1,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqnotificationinterface.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqnotificationinterface.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqnotificationinterface.h?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -6,6 +6,9 @@\n #define BITCOIN_ZMQ_ZMQNOTIFICATIONINTERFACE_H\n \n #include <validationinterface.h>\n+\n+#include <zmq.hpp>\n+\n #include <string>\n #include <map>\n #include <list>\n@@ -35,7 +38,7 @@ class CZMQNotificationInterface final : public CValidationInterface\n private:\n     CZMQNotificationInterface();\n \n-    void *pcontext;\n+    zmq::context_t context;\n     std::list<CZMQAbstractNotifier*> notifiers;\n };\n "
      },
      {
        "sha": "ac8501f2d1769d18ba954b795070b773b2a607ea",
        "filename": "src/zmq/zmqpublishnotifier.cpp",
        "status": "modified",
        "additions": 23,
        "deletions": 39,
        "changes": 62,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqpublishnotifier.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqpublishnotifier.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.cpp?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -18,39 +18,29 @@ static const char *MSG_RAWBLOCK  = \"rawblock\";\n static const char *MSG_RAWTX     = \"rawtx\";\n \n // Internal function to send multipart message\n-static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n+static int zmq_send_multipart(zmq::socket_t& sock, const void* data, size_t size, ...)\n {\n     va_list args;\n     va_start(args, size);\n \n     while (1)\n     {\n-        zmq_msg_t msg;\n-\n-        int rc = zmq_msg_init_size(&msg, size);\n-        if (rc != 0)\n-        {\n-            zmqError(\"Unable to initialize ZMQ msg\");\n-            va_end(args);\n-            return -1;\n-        }\n-\n-        void *buf = zmq_msg_data(&msg);\n-        memcpy(buf, data, size);\n+        zmq::message_t msg(data, size);\n \n         data = va_arg(args, const void*);\n \n-        rc = zmq_msg_send(&msg, sock, data ? ZMQ_SNDMORE : 0);\n-        if (rc == -1)\n-        {\n-            zmqError(\"Unable to send ZMQ msg\");\n-            zmq_msg_close(&msg);\n+        try {\n+            if (!sock.send(msg, data ? ZMQ_SNDMORE : 0)) {\n+                // Handle EAGAIN in the same way as other errors.\n+                throw zmq::error_t();\n+            }\n+        }\n+        catch (const zmq::error_t& exc) {\n+            zmqError(\"Unable to send ZMQ msg\", exc);\n             va_end(args);\n             return -1;\n         }\n \n-        zmq_msg_close(&msg);\n-\n         if (!data)\n             break;\n \n@@ -60,27 +50,22 @@ static int zmq_send_multipart(void *sock, const void* data, size_t size, ...)\n     return 0;\n }\n \n-bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n+bool CZMQAbstractPublishNotifier::Initialize(zmq::context_t& context)\n {\n-    assert(!psocket);\n+    assert(psocket == nullptr);\n \n     // check if address is being used by other publish notifier\n     std::multimap<std::string, CZMQAbstractPublishNotifier*>::iterator i = mapPublishNotifiers.find(address);\n \n     if (i==mapPublishNotifiers.end())\n     {\n-        psocket = zmq_socket(pcontext, ZMQ_PUB);\n-        if (!psocket)\n-        {\n-            zmqError(\"Failed to create socket\");\n-            return false;\n+        try {\n+            psocket = std::make_shared<zmq::socket_t>(context, ZMQ_PUB);\n+            psocket->bind(address);\n         }\n-\n-        int rc = zmq_bind(psocket, address.c_str());\n-        if (rc!=0)\n-        {\n-            zmqError(\"Failed to bind address\");\n-            zmq_close(psocket);\n+        catch (const zmq::error_t& exc) {\n+            zmqError(\"Failed to create or bind socket\", exc);\n+            psocket.reset();\n             return false;\n         }\n \n@@ -101,7 +86,7 @@ bool CZMQAbstractPublishNotifier::Initialize(void *pcontext)\n \n void CZMQAbstractPublishNotifier::Shutdown()\n {\n-    assert(psocket);\n+    assert(psocket != nullptr);\n \n     int count = mapPublishNotifiers.count(address);\n \n@@ -122,11 +107,10 @@ void CZMQAbstractPublishNotifier::Shutdown()\n     {\n         LogPrint(BCLog::ZMQ, \"Close socket at address %s\\n\", address);\n         int linger = 0;\n-        zmq_setsockopt(psocket, ZMQ_LINGER, &linger, sizeof(linger));\n-        zmq_close(psocket);\n+        psocket->setsockopt(ZMQ_LINGER, &linger, sizeof(linger));\n     }\n \n-    psocket = nullptr;\n+    psocket.reset();\n }\n \n bool CZMQAbstractPublishNotifier::SendMessage(const char *command, const void* data, size_t size)\n@@ -136,7 +120,7 @@ bool CZMQAbstractPublishNotifier::SendMessage(const char *command, const void* d\n     /* send three parts, command & data & a LE 4byte sequence number */\n     unsigned char msgseq[sizeof(uint32_t)];\n     WriteLE32(&msgseq[0], nSequence);\n-    int rc = zmq_send_multipart(psocket, command, strlen(command), data, size, msgseq, (size_t)sizeof(uint32_t), nullptr);\n+    int rc = zmq_send_multipart(*psocket, command, strlen(command), data, size, msgseq, (size_t)sizeof(uint32_t), nullptr);\n     if (rc == -1)\n         return false;\n \n@@ -177,7 +161,7 @@ bool CZMQPublishRawBlockNotifier::NotifyBlock(const CBlockIndex *pindex)\n         CBlock block;\n         if(!ReadBlockFromDisk(block, pindex, consensusParams))\n         {\n-            zmqError(\"Can't read block from disk\");\n+            LogPrint(BCLog::ZMQ, \"zmq: Can't read block from disk\\n\");\n             return false;\n         }\n "
      },
      {
        "sha": "ba953f6c5f60a7d69cd653755ac72bdf01524abd",
        "filename": "src/zmq/zmqpublishnotifier.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqpublishnotifier.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b263399a09432988aadfbd85c85ecdb8275bf13/src/zmq/zmqpublishnotifier.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/zmq/zmqpublishnotifier.h?ref=5b263399a09432988aadfbd85c85ecdb8275bf13",
        "patch": "@@ -24,7 +24,7 @@ class CZMQAbstractPublishNotifier : public CZMQAbstractNotifier\n     */\n     bool SendMessage(const char *command, const void* data, size_t size);\n \n-    bool Initialize(void *pcontext) override;\n+    bool Initialize(zmq::context_t& context) override;\n     void Shutdown() override;\n };\n "
      }
    ]
  }
]