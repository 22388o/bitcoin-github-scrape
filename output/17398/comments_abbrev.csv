DrahtBot,2019-11-06 23:51:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#18077](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/18077.html) (net: Add NAT-PMP port forwarding support by",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-550554380,550554380,
laanwj,2019-11-07 11:53:28,"OK, travis build should pass now\n\nTesting notes:\n\n- [x] check that `HAVE_FULLFSYNC=1` is passed on MacOS (done, `checking for F_FULLFSYNC... yes` appears in both MacOS builds)\n- [x] check that crc32c is correctly integrated\n  - [x] ARM64 (checked `crc32c::ExtendArm64` in `libcrc32c_arm_crc.a` is invoked and contains the correct asm instructions)\n   - [x] x86_64 (checked `crc32c::Exte",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551048478,551048478,
elichai,2019-11-07 13:20:18,"Concept ACK for the new branch. it's really nice that we can again easily see the diff from upstream.\nhttps://github.com/google/leveldb/compare/master...bitcoin-core:bitcoin-fork-new\n\nWill try to read later the (reported) changes upstream leveldb did in the past ~160 commits.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551075809,551075809,
sipsorcery,2019-11-07 17:59:56,"Regarding the msvc build I didn't have any problems getting it to build after applying what I think are the relevant changes to the `libleveldb` project.\n\nI do get two new warnings:\n\n````\nSeverity	Code	Description	Project	File	Line	Suppression State	Suppression State\nWarning	C26110	Caller failing to hold lock 'this->mu_' before calling function 'std::_Mutex_base::unlock'.	libleveldb	C:",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551193954,551193954,
laanwj,2019-11-07 20:36:40,"> In case it's of any use the diff for libleveldb.vcxproj is:\n\nThanks, I'll include that!\n\n> Are any of the preprocessor defines below relevant for Windows?\n\nI think they're only used in env_posix.cc? Yes, they are, so indeed they're irrelevant on windows.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551252823,551252823,
laanwj,2019-11-08 12:56:55,"AppVeyor fails on some warning that is promoted to error, for an unreachable destructor.\n```\nC:\projects\bitcoin\src\leveldb\util\env_windows.cc(383): error C2220: the following warning is treated as an error [C:\projects\bitcoin\build_msvc\bitcoind\bitcoind.vcxproj]\nC:\projects\bitcoin\src\leveldb\util\env_windows.cc(383): warning C4722: 'leveldb::`anonymous namespace'::WindowsEnv::~Windows",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551748307,551748307,
fanquake,2019-11-08 16:19:51,"Concept ACK - have not reviewed the changes yet. Only done some minimal does it compile + start running tests. Started testing going between leveldb versions on macOS.\n\n### macOS (fed6a9bd661321694b375dc393e8c0307042474f + depends):\n```bash\nchecking for fdatasync... no\nchecking for F_FULLFSYNC... yes\nchecking for O_CLOEXEC... yes\nchecking for __builtin_prefetch... yes\nchecking for ",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551892172,551892172,
laanwj,2019-11-08 20:40:02,"@fanquake thanks for testing, good to hear that this is not causing build failure anywhere, and that it works with regard to file dscriptors setting",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551981984,551981984,
laanwj,2019-11-10 10:49:51,Squashed fixup commits and removed WIP tag. Should be ready for review/testing.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552183465,552183465,
sipa,2019-11-11 03:51:39,"ACK.\n\nConcept: very happy to get rid of all those local modifications.\n\nCode review: I reviewed the diff between upstream LevelDB and our new branch (but not the changes in upstream LevelDB), and the new commits here. I left two nit comments on one of the commits.\n\nTests:\n* I verified that the crc32 asm code is being executed on x86_64 by adding asserts before the asm commands in the",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552282982,552282982,
sipsorcery,2019-11-11 16:06:35,"tACK* e2ef5fbc0ac077f942aa79dfb4274e0016701c24.\n\n*test on Windows (full sync, as well as catching up an existing node)",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552505806,552505806,
sipa,2019-11-11 17:09:19,Is commit https://github.com/bitcoin/bitcoin/commit/abd50f18e80f64f35cb3b6747b8d1f7e6617d977 still needed?,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552530282,552530282,
laanwj,2019-11-12 09:33:48,"Thanks for testing!\n\n> Is commit abd50f1 still needed?\n\nThe subtree check in travis didn't pass without it. I could try removing it, but I think that's still the case. \n\nI don't understand how it's supposed to pass in the first place for the other dependencies without ever fetching them as described in the [doc](https://github.com/bitcoin/bitcoin/blob/master/test/lint/README.md#git-sub",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552811611,552811611,
MarcoFalke,2019-11-12 13:24:41,"We only check that it is a subtree, not that the subtree corresponds to some subtree hosted somewhere else.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552891581,552891581,
laanwj,2019-11-12 13:44:45,"> We only check that it is a subtree, not that the subtree corresponds to some subtree hosted somewhere else.\n\nAre you sure? Now I'm doubly confused why that commit makes a difference at all (the literal error message was something like ""Could not find commit XXXXXX""). Did I subtree correctly?\n",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552899094,552899094,
MarcoFalke,2019-11-12 14:54:19,Maybe the script doesn't work for initial subtree check ins?,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-552927693,552927693,
laanwj,2019-11-15 09:52:10,"I don't understand why that would be the case. What is the difference between this tree, and the tree when it is merged into master, that would make it pass a subtree check? In both cases the merge of `crc32c` is simply an ancestor, it's one merge deeper then.\n\n(and if it is the case, what should we do, merge with this commit, or merge without it and hope everything will be alright after mergi",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554292159,554292159,
MarcoFalke,2019-11-15 14:18:05,I removed the commit and travis passed for me :woman_shrugging: ,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554375853,554375853,
laanwj,2019-11-15 15:03:38,"oh great, thanks, have i been chasing ghosts again… removed it here too\n",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554393484,554393484,
fanquake,2019-11-15 15:33:15,@theuni Cory it would be good to get your eyes over the build system changes here.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554406147,554406147,
MarcoFalke,2019-11-15 16:02:41,@jamesob Is this something you could benchmark?,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554419453,554419453,
jamesob,2019-11-15 16:27:50,"Sure thing, I'll start a benchmark run this afternoon.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-554430088,554430088,
laanwj,2019-11-18 12:58:18,"Travis still passes after removing the subtree workaround (yay). AppVeyor is still failing on [this issue](https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-551748307):\n\n> AppVeyor fails on some warning that is promoted to error, for an unreachable destructor.\n\nAnyone have ideas how to disable this warning, or at least make it no longer an error?",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555004260,555004260,
sipsorcery,2019-11-18 13:40:31,"@laanwj msvc is grumpy about the `std::abort` in the destructor. It does seem like the nuclear option but I guess the leveldb devs decided the condition is catastrophic enough to warrant it.\n\nTo get rid of the warning and get the appveyor build to pass the line in `build_msvc\common.init.vcxproj` file can be updated to:\n\n````\n<DisableSpecificWarnings>2220;4018;4221;4244;4267;4334;4715;48",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555019460,555019460,
laanwj,2019-11-18 13:44:39,"> @laanwj msvc is grumpy about the std::abort in the destructor. It does seem like the nuclear option but I guess the leveldb devs decided the condition is catastrophic enough to warrant it.\n\nI would also prefer if they do something different, but I'll leave that for upstream. I think the code is unreachable so the ""catastrophic condition"" never actually happens.\n\n> To get rid of the warni",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555020982,555020982,
sipsorcery,2019-11-18 18:36:13,Hmm leave that appveyor error with me. I'll track down why the error code reported isn't accepted in the ignore list.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555149856,555149856,
sipa,2019-11-18 19:32:37,"Perhaps you want disable C4722 (destructor never terminates), not C2220 (treat warnings as errors)?",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555173039,555173039,
sipsorcery,2019-11-18 19:37:46,"@sipa yes, I should have read the trace more closely. Double checking build with corrected fix at the moment.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555175204,555175204,
sipa,2019-11-18 19:47:32,"@laanwj Just discovered that the new native windows env here also has support for mmap'ed files, which may potentially be a significant performance improvement for windows systems. It's also limited to 1000 though. I don't think we want to change that without experimentation, but thought to bring it up so that we're aware of it.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555179249,555179249,
MarcoFalke,2019-11-18 20:53:36,Would it make sense to create the crc32c subtree in `src/subtree/` instead of in `src/`? That way it makes it doubly clear that it is a subtree and in light of #17413 it wouldn't have to be moved again when someone works on that issue.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555204110,555204110,
sipsorcery,2019-11-18 21:07:37,"Diff to fix the appveyor build. Removes the previously suggested warning fix and puts the correct one into the `leveldb` project.\n\n````\ndiff --git a/build_msvc/common.init.vcxproj b/build_msvc/common.init.vcxproj\nindex ddd34603c..a04a38ff7 100644\n--- a/build_msvc/common.init.vcxproj\n+++ b/build_msvc/common.init.vcxproj\n@@ -107,7 +107,7 @@\n       <WarningLevel>Level3</WarningLevel>",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555209297,555209297,
laanwj,2019-11-19 08:22:08,"> Just discovered that the new native windows env here also has support for mmap'ed files, \n\nVery good news!\n\n> It's also limited to 1000 though. I don't think we want to change that without experimentation\n\nAgree, this can be changed later, but at least for the initial merge of this, I think we'd want to stick with the default here.\n\n> Would it make sense to create the crc32c subt",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555388033,555388033,
sipa,2019-11-19 08:32:13,"I like the idea of a subtrees/thirdparty/whatever subdirectory, but not as part of this PR.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555391487,555391487,
jamesob,2019-11-19 18:38:03,"FWIW, 1b2407c97b4bd033efcbf6bb239cf3affbe696eb fails to compile for me:\n```\n./configure LDFLAGS=-L/home/james/src/bitcoin/db4/lib/ CPPFLAGS=-I/home/james/src/bitcoin/db4/include/ CXXFLAGS=-std=c++11 --enable-wallet --enable-debug --with-daemon CXX=/usr/bin/g++\n[...]\n  CXXLD    libunivalue.la\nIn file included from ./leveldb/port/port.h:14:0,\n                 from ./leveldb/db/filename.h",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555647736,555647736,
laanwj,2019-11-20 08:51:07,"> I like the idea of a subtrees/thirdparty/whatever subdirectory, but not as part of this PR.\n\nSame, I absolutely think it's a good idea, but not a good idea to commit to a specific way to doing it in this PR. It's classic scope creep. Now we'd have to agree on the directory scheme too.\n\n> Edit: disregard, stupid mistake - I ran make clean but didn't run make distclean && ./autogen.sh && .",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555903707,555903707,
laanwj,2019-11-20 08:54:03,"The new AppVeyor error is kind of interesting. All the RPC tests fail with:\n```\n node1 2019-11-19T20:55:35.174988Z [] Opening LevelDB in C:\Users\appveyor\AppData\Local\Temp\1\test_runner_₿_🏃_20191119_205529\wallet_hd_132\node1\regtest\blocks\index \n node1 2019-11-19T20:55:35.174988Z [] Fatal LevelDB error: NotFound: C:\Users\appveyor\AppData\Local\Temp\1\test_runner_₿_🏃_20191119_205529\wall",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-555904848,555904848,
jamesob,2019-11-20 14:55:27,"Benches finished. Performance looks basically equivalent, although it looks like leveldb 1.22 may use ~3% more memory, though this may just be noise.\n\n![leveldb-bench-plot](https://user-images.githubusercontent.com/73197/69249255-98c2af00-0b7b-11ea-9290-c9c77b9115fd.png)\n\n### bench/leveldb.1 vs. bench/leveldb.master.2 (absolute)\n|                 bench name                 |  x  |       ",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-556038507,556038507,
laanwj,2019-11-20 14:59:49,@jamesob Thanks for benchmarking! Which OS?,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-556040460,556040460,
jamesob,2019-11-20 15:05:23,"Here's the host info: (I'll try to embed this in the graphs somehow)\n\n| key                 | value                                     |\n| -----------------   | ---------------------------------------   |\n| hostname            | bench-strong                              |\n| cpu_model_name      | Intel(R) Core(TM) i7-4770 CPU @ 3.40GHz   |\n| ram_gb              | 31.353431701660156    ",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-556042972,556042972,
laanwj,2019-11-28 09:57:26,"> The new AppVeyor error is kind of interesting. All the RPC tests fail with:\n>\n> Might have something to do with UTF-8 handling in paths. -D_UNICODE -DUNICODE was taken from the upstream build system into both the MSVC and autotools, but it's not clear it's enough.\n\nDoes anyone have an idea about windows unicode issues? (if this is even the reason for this) I remember there were some patc",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-559424715,559424715,
MarcoFalke,2019-12-09 18:24:39,"Looks like this needs a new ubsan suppression `implicit-integer-sign-change:crc32c/*` in `test/sanitizer_supp...`\n\nThe newly added unit tests fails on windows: https://travis-ci.org/bitcoin/bitcoin/jobs/622714557#L3406 and https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/29415262#L66",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-563367317,563367317,
laanwj,2019-12-10 03:58:08,"Added the ubsan suppression, though I don't understand why this is suddenly needed where it wasn't before the rebase.\n\n> The newly added unit tests fails on windows: https://travis-ci.org/bitcoin/bitcoin/jobs/622714557#L3406 and https://ci.appveyor.com/project/DrahtBot/bitcoin/builds/29415262#L66\n\nYes, this is issue https://github.com/google/leveldb/issues/755\nCan't really move forward h",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-563726661,563726661,
MarcoFalke,2019-12-10 19:15:31,">  Can't really move forward here until that is solved.\n\nIt didn't sound like they are going to apply a patch. Unless maybe you can show a bug in chrome or so. They'd prefer we apply the patch to our own fork.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564191735,564191735,
laanwj,2019-12-11 11:36:25,"Yes, they seem to have no interest in the issue.\n\nNot sure how to move forward here, as there have been no demonstrated performance benefits here I may just close it. Rebasing this is kind of annoying as I have to re-import the trees every time.\n",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564501787,564501787,
sipsorcery,2019-12-11 12:16:31,I was going to submit a PR to the leveldb repo. I suspect they'll reject it but if there's no rush maybe it'd be worth leaving this one open until that happens.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564514248,564514248,
laanwj,2019-12-11 12:23:35,"> I was going to submit a PR to the leveldb repo. I suspect they'll reject it but if there's no rush maybe it'd be worth leaving this one open until that happens.\n\nFWIW I'm happy to merge that in our local tree! I'd like to avoid the current situation of completely diverging from upstream again, but we still have three patches on top (of which it isn't clear whether they will ever make upsteam",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564516609,564516609,
sipsorcery,2019-12-11 20:30:48,"Here's the patch. Once it's applied the test from #17641 passes and my python functional tests got 3 out of 4 100% passes (25% failure rate on Windows is about normal).\n\n[env_windows.cc.diff.txt](https://github.com/bitcoin/bitcoin/files/3952424/env_windows.cc.diff.txt)\n\n[PR](https://github.com/google/leveldb/pull/760) also submitted to leveldb upstream repo.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564719725,564719725,
laanwj,2019-12-12 08:51:30,"> Here's the patch. Once it's applied the test from #17641 passes and my python functional tests got 3 out of 4 100% passes (25% failure rate on Windows is about normal).\n\nThanks! Will apply it and rebase this.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-564910230,564910230,
laanwj,2019-12-12 15:33:20,"OK: Travis (including the new unit test on Windows) is passing now, ~~AppVeyor failing same as it is everywhere~~.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-565057010,565057010,
laanwj,2020-01-02 20:20:14,Rebased again (for trivial change in developer doc),https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-570331394,570331394,
DrahtBot,2020-01-10 03:02:50,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 6196e930018181301b5972842ae384ea4288ff34<br>(master) | commit a76cf2df290b24d19621dcfcfc60ecd5b9782644<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`f270073d08b5b19f...`](https://drahtbot.space/gitian/bitcoin/bitcoin/6196e930018181301b5972842ae384ea4288ff34/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-572852075,572852075,
sipsorcery,2020-01-26 11:30:58,Needs #17980 (and a few others) to be able to build again.,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-578492984,578492984,
MarcoFalke,2020-01-26 14:38:47,"re-run ci\n\nI am still planning to debug the gitian build failure",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-578507733,578507733,
laanwj,2020-01-28 15:27:58,"@MarcoFalke a local gitian build also failed with\n```\nfatal: No url found for submodule path 'src/crc32c/third_party/benchmark' in .gitmodules\nbin/gbuild:23:in `system!': failed to run cd inputs/bitcoin && git submodule update --init --recursive --force (RuntimeError)\n        from bin/gbuild:304:in `block in <main>'\n        from bin/gbuild:288:in `each'\n        from bin/gbuild:288:in `",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-579300311,579300311,
DrahtBot,2020-01-29 13:21:00,<!--a722867cd34abeea1fadc8d60700f111-->\n### Gitian builds\n\n| File | commit 2755b2b1092d0286022cf3cc3028e96f6bee2b34<br>(master) | commit 70e9122818c0e0ee51899e6724e53ab7f477feae<br>(master and this pull) |\n|--|--|--|\n| bitcoin-0.19.99-aarch64-linux-gnu-debug.tar.gz | [`d9f76eed7292db66...`](https://drahtbot.space/gitian/bitcoin/bitcoin/2755b2b1092d0286022cf3cc3028e96f6bee2b34/bitcoin-0.19.99-,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-579751871,579751871,
laanwj,2020-02-05 13:04:24,"Anything left to do here? If not, can this get some (re-)ACKs please?",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-582397447,582397447,
sipsorcery,2020-02-05 16:37:18,"ACK 66480821b36c839ab7615cb9309850015bceadb0.\n\nNo problems using a data directory of ""₿_🏃"" on Windows 10.",https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-582495842,582495842,
sipa,2020-02-08 08:05:34,ACK 677fb8e92380d4deb6a3753047c01f7cf7b5af91,https://github.com/bitcoin/bitcoin/pull/17398#issuecomment-583714273,583714273,
MarcoFalke,2019-12-09 13:46:25,(trivial conflict here),https://github.com/bitcoin/bitcoin/pull/17398#discussion_r355456599,355456599,Makefile.am
