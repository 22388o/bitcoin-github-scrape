[
  {
    "sha": "a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphMzhiZmJjNTFkMGI5OGZmZmQ4ZDc5NDU3ZjMxYzZmYjE5NmZmNTgw",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-09-08T12:19:25Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-10-14T00:57:11Z"
      },
      "message": "Add wallet backup text to import*, add* and dumpwallet RPCs",
      "tree": {
        "sha": "b4fd6c248f29f8dc6664260817ce9d8b4df9c1c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b4fd6c248f29f8dc6664260817ce9d8b4df9c1c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38bfbc51d0b98fffd8d79457f31c6fb196ff580/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "326a5652e0d25fdb60c337ef4f1c98a63e0748f0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/326a5652e0d25fdb60c337ef4f1c98a63e0748f0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/326a5652e0d25fdb60c337ef4f1c98a63e0748f0"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 8,
      "deletions": 7
    },
    "files": [
      {
        "sha": "88332e381510be87dd705ea5cb9971f25d9604c1",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a38bfbc51d0b98fffd8d79457f31c6fb196ff580/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a38bfbc51d0b98fffd8d79457f31c6fb196ff580/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
        "patch": "@@ -81,7 +81,7 @@ UniValue importprivkey(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 3)\n         throw std::runtime_error(\n             \"importprivkey \\\"privkey\\\" ( \\\"label\\\" ) ( rescan )\\n\"\n-            \"\\nAdds a private key (as returned by dumpprivkey) to your wallet.\\n\"\n+            \"\\nAdds a private key (as returned by dumpprivkey) to your wallet. Requires a new wallet backup.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"privkey\\\"          (string, required) The private key (see dumpprivkey)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n@@ -226,7 +226,7 @@ UniValue importaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n             \"importaddress \\\"address\\\" ( \\\"label\\\" rescan p2sh )\\n\"\n-            \"\\nAdds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend.\\n\"\n+            \"\\nAdds a script (in hex) or address that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"script\\\"           (string, required) The hex-encoded script (or address)\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n@@ -396,7 +396,7 @@ UniValue importpubkey(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 4)\n         throw std::runtime_error(\n             \"importpubkey \\\"pubkey\\\" ( \\\"label\\\" rescan )\\n\"\n-            \"\\nAdds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend.\\n\"\n+            \"\\nAdds a public key (in hex) that can be watched as if it were in your wallet but cannot be used to spend. Requires a new wallet backup.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"pubkey\\\"           (string, required) The hex-encoded public key\\n\"\n             \"2. \\\"label\\\"            (string, optional, default=\\\"\\\") An optional label\\n\"\n@@ -456,7 +456,7 @@ UniValue importwallet(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() != 1)\n         throw std::runtime_error(\n             \"importwallet \\\"filename\\\"\\n\"\n-            \"\\nImports keys from a wallet dump file (see dumpwallet).\\n\"\n+            \"\\nImports keys from a wallet dump file (see dumpwallet). Requires a new wallet backup to include imported keys.\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"filename\\\"    (string, required) The wallet file\\n\"\n             \"\\nExamples:\\n\"\n@@ -601,6 +601,7 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n         throw std::runtime_error(\n             \"dumpwallet \\\"filename\\\"\\n\"\n             \"\\nDumps all wallet keys in a human-readable format to a server-side file. This does not allow overwriting existing files.\\n\"\n+            \"Note that if your wallet contains keys which are not derived from your HD seed (e.g. imported keys), these are not covered by only backing up the seed itself, and must be backed up too (e.g. ensure you back up the whole dumpfile).\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"filename\\\"    (string, required) The filename with path (either absolute or relative to bitcoind)\\n\"\n             \"\\nResult:\\n\"\n@@ -1039,7 +1040,7 @@ UniValue importmulti(const JSONRPCRequest& mainRequest)\n     if (mainRequest.fHelp || mainRequest.params.size() < 1 || mainRequest.params.size() > 2)\n         throw std::runtime_error(\n             \"importmulti \\\"requests\\\" ( \\\"options\\\" )\\n\\n\"\n-            \"Import addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options).\\n\\n\"\n+            \"Import addresses/scripts (with private or public keys, redeem script (P2SH)), rescanning all addresses in one-shot-only (rescan can be disabled via options). Requires a new wallet backup.\\n\\n\"\n             \"Arguments:\\n\"\n             \"1. requests     (array, required) Data to be imported\\n\"\n             \"  [     (array of json objects)\\n\""
      },
      {
        "sha": "a8090add4cb1b097f253de2fbb0c6795ba46027e",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a38bfbc51d0b98fffd8d79457f31c6fb196ff580/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a38bfbc51d0b98fffd8d79457f31c6fb196ff580/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
        "patch": "@@ -1110,7 +1110,7 @@ UniValue addmultisigaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 2 || request.params.size() > 3)\n     {\n         std::string msg = \"addmultisigaddress nrequired [\\\"key\\\",...] ( \\\"account\\\" )\\n\"\n-            \"\\nAdd a nrequired-to-sign multisignature address to the wallet.\\n\"\n+            \"\\nAdd a nrequired-to-sign multisignature address to the wallet. Requires a new wallet backup.\\n\"\n             \"Each key is a Bitcoin address or hex-encoded public key.\\n\"\n             \"If 'account' is specified (DEPRECATED), assign address to that account.\\n\"\n \n@@ -1228,7 +1228,7 @@ UniValue addwitnessaddress(const JSONRPCRequest& request)\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n     {\n         std::string msg = \"addwitnessaddress \\\"address\\\" ( p2sh )\\n\"\n-            \"\\nAdd a witness address for a script (with pubkey or redeemscript known).\\n\"\n+            \"\\nAdd a witness address for a script (with pubkey or redeemscript known). Requires a new wallet backup.\\n\"\n             \"It returns the witness script.\\n\"\n \n             \"\\nArguments:\\n\""
      }
    ]
  },
  {
    "sha": "c098c581968fa23b2a1987c127c47e04d13fb5c8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMDk4YzU4MTk2OGZhMjNiMmExOTg3YzEyN2M0N2UwNGQxM2ZiNWM4",
    "commit": {
      "author": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-10-19T09:01:30Z"
      },
      "committer": {
        "name": "MeshCollider",
        "email": "dobsonsa68@gmail.com",
        "date": "2017-10-19T09:02:13Z"
      },
      "message": "Wrap dumpwallet warning and note scripts aren't dumped",
      "tree": {
        "sha": "7fcf481923015a4ad8392d1adfc5e2c6312aeec3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7fcf481923015a4ad8392d1adfc5e2c6312aeec3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c098c581968fa23b2a1987c127c47e04d13fb5c8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c098c581968fa23b2a1987c127c47e04d13fb5c8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c098c581968fa23b2a1987c127c47e04d13fb5c8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c098c581968fa23b2a1987c127c47e04d13fb5c8/comments",
    "author": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a38bfbc51d0b98fffd8d79457f31c6fb196ff580",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a38bfbc51d0b98fffd8d79457f31c6fb196ff580"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 3,
      "deletions": 1
    },
    "files": [
      {
        "sha": "67ef4edd5ba5e44958be273b6394a6d7ead3780a",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c098c581968fa23b2a1987c127c47e04d13fb5c8/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c098c581968fa23b2a1987c127c47e04d13fb5c8/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=c098c581968fa23b2a1987c127c47e04d13fb5c8",
        "patch": "@@ -601,7 +601,9 @@ UniValue dumpwallet(const JSONRPCRequest& request)\n         throw std::runtime_error(\n             \"dumpwallet \\\"filename\\\"\\n\"\n             \"\\nDumps all wallet keys in a human-readable format to a server-side file. This does not allow overwriting existing files.\\n\"\n-            \"Note that if your wallet contains keys which are not derived from your HD seed (e.g. imported keys), these are not covered by only backing up the seed itself, and must be backed up too (e.g. ensure you back up the whole dumpfile).\\n\"\n+            \"Imported scripts are not currently included in wallet dumps, these must be backed up separately.\\n\"\n+            \"Note that if your wallet contains keys which are not derived from your HD seed (e.g. imported keys), these are not covered by\\n\"\n+            \"only backing up the seed itself, and must be backed up too (e.g. ensure you back up the whole dumpfile).\\n\"\n             \"\\nArguments:\\n\"\n             \"1. \\\"filename\\\"    (string, required) The filename with path (either absolute or relative to bitcoind)\\n\"\n             \"\\nResult:\\n\""
      }
    ]
  }
]