laanwj,2020-12-07 10:49:13,"I kind of wish `CreateTransaction` would simply return an `optional<transaction, â€¦>` instead of the in/out parameters (of which one a reference to a transaction reference), that would make it easier to review.",https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-739838428,739838428,
practicalswift,2020-12-09 09:10:31,Concept ACK,https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-741638795,741638795,
laanwj,2020-12-10 11:40:42,"Thank, looks good to me now.\nCode review ACK fac39c198324715565897f4240709340477af0bf",https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-742468475,742468475,
laanwj,2020-12-07 10:43:46,"It appears that the only functional change is that this is initialized to a NULL pointer now, instead of a reference to a dummy transaction. I wonder why this choice was made initially and whether this has any consequences (it might make some additional check/assertion needed).",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537404661,537404661,src/wallet/feebumper.cpp
MarcoFalke,2020-12-07 10:52:32,"`CWallet::CreateTransactionInternal` will initialize the transaction. If that fails we will return here early with `return Result::WALLET_ERROR`.\n\nI can add an `Assert(tx_new)`, but I think it is not needed.",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537410421,537410421,src/wallet/feebumper.cpp
laanwj,2020-12-07 12:04:35,"I'm confused by the `CWallet::CreateTransaction` code here. It makes a copy of the `tx` that is passed in:\n```\nCTransactionRef tx2 = tx;\n```\nIf it's only an output parameter, why is it copied?\n",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537454456,537454456,src/wallet/feebumper.cpp
MarcoFalke,2020-12-07 12:10:45,"Looks like a typo. It should be possible to simply remove the useless assignment with\n\n```diff\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\nindex 65b54f39b4..d27aba7c7a 100644\n--- a/src/wallet/wallet.cpp\n+++ b/src/wallet/wallet.cpp\n@@ -3109,13 +3109,13 @@ bool CWallet::CreateTransaction(\n         bool sign)\n {\n     int nChangePosIn = nChangePosInOut;\n-    CTrans",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537458106,537458106,src/wallet/feebumper.cpp
laanwj,2020-12-07 12:39:39,"Sounds fair enough. But we also have a changepos in-out which seems coupled, so it is passing in a transaction in some cases?\n@meshcollider @achow101 can you weigh in what is supposed to be happening here please.",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537474630,537474630,src/wallet/feebumper.cpp
MarcoFalke,2020-12-07 13:51:14,changepos relates to vecSend to shuffle in the change output,https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537520611,537520611,src/wallet/feebumper.cpp
MarcoFalke,2020-12-07 13:52:22,Pushed a commit to fix the assignment typo,https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537521495,537521495,src/wallet/feebumper.cpp
MarcoFalke,2020-12-07 14:11:16,"Also, added a todo for https://github.com/bitcoin/bitcoin/pull/20588#issuecomment-739838428",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537535848,537535848,src/wallet/feebumper.cpp
achow101,2020-12-07 17:10:04,"`tx2` is used so that the second `CreateTransactionInternal` isn't polluted by the results of the first `CreateTransactionInternal`. But `tx` itself isn't used within `CreateTransactionInternal` at all, so it should be fine to remove the copy.",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r537676345,537676345,src/wallet/feebumper.cpp
MarcoFalke,2020-12-09 07:21:32,"ok, closing this discussion. Let me know if there is anything else you want me to address",https://github.com/bitcoin/bitcoin/pull/20588#discussion_r539065425,539065425,src/wallet/feebumper.cpp
