[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788935905",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-788935905",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 788935905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODkzNTkwNQ==",
    "user": {
      "login": "michaelfolkson",
      "id": 16323900,
      "node_id": "MDQ6VXNlcjE2MzIzOTAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16323900?u=e2201a78ad660e42fd175003d02ad749b855e0a9&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelfolkson",
      "html_url": "https://github.com/michaelfolkson",
      "followers_url": "https://api.github.com/users/michaelfolkson/followers",
      "following_url": "https://api.github.com/users/michaelfolkson/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelfolkson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelfolkson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelfolkson/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelfolkson/orgs",
      "repos_url": "https://api.github.com/users/michaelfolkson/repos",
      "events_url": "https://api.github.com/users/michaelfolkson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelfolkson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T14:10:29Z",
    "updated_at": "2021-03-02T14:10:29Z",
    "author_association": "CONTRIBUTOR",
    "body": "Concept ACK\r\n\r\nI was thinking this should be a `p2p_` test rather than a `feature_` test but maybe you're right...\r\n\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788935905/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788965587",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-788965587",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 788965587,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODk2NTU4Nw==",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?u=8c439f4b7ebd0e4276880e22ba4213330b802cab&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T14:54:00Z",
    "updated_at": "2021-03-02T14:54:00Z",
    "author_association": "CONTRIBUTOR",
    "body": "I added feature_anchors.py in BASE_SCRIPTS",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788965587/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788965917",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-788965917",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 788965917,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODk2NTkxNw==",
    "user": {
      "login": "jaonoctus",
      "id": 7918067,
      "node_id": "MDQ6VXNlcjc5MTgwNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7918067?u=86c1a74ef653b50d79e041c5b7fec8bce3b2bbd5&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaonoctus",
      "html_url": "https://github.com/jaonoctus",
      "followers_url": "https://api.github.com/users/jaonoctus/followers",
      "following_url": "https://api.github.com/users/jaonoctus/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaonoctus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaonoctus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaonoctus/subscriptions",
      "organizations_url": "https://api.github.com/users/jaonoctus/orgs",
      "repos_url": "https://api.github.com/users/jaonoctus/repos",
      "events_url": "https://api.github.com/users/jaonoctus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaonoctus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T14:54:30Z",
    "updated_at": "2021-03-02T14:54:30Z",
    "author_association": "NONE",
    "body": "CI Tests are failing for two reasons so far:\r\n\r\n1. The following scripts are not being run: `['feature_anchors.py']`. Check the test lists in `test_runner.py`\r\n2. Some lint errors\r\n```\r\nfeature_anchors.py:31:1: W293 blank line contains whitespace\r\nfeature_anchors.py:77:25: W292 no newline at end of file\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788965917/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788967916",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-788967916",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 788967916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4ODk2NzkxNg==",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?u=8c439f4b7ebd0e4276880e22ba4213330b802cab&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T14:57:14Z",
    "updated_at": "2021-03-02T14:57:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @jaonoctus. Fixed!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/788967916/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 1,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789011205",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-789011205",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 789011205,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTAxMTIwNQ==",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?u=7297e8aaf9188c0cb98bc549a8a02a1dc8d59e4c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T15:55:48Z",
    "updated_at": "2021-03-02T15:55:48Z",
    "author_association": "MEMBER",
    "body": "Concept ACK.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789011205/reactions",
      "total_count": 1,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 1,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789212085",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-789212085",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 789212085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTIxMjA4NQ==",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?u=8c439f4b7ebd0e4276880e22ba4213330b802cab&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T21:00:25Z",
    "updated_at": "2021-03-02T21:00:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leonardojobim Amazing review! I'm working on it at this moment! Thank you!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789212085/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789214460",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-789214460",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 789214460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTIxNDQ2MA==",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?u=8c439f4b7ebd0e4276880e22ba4213330b802cab&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T21:04:31Z",
    "updated_at": "2021-03-02T21:04:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@leonardojobim fixed! could you please test it again?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789214460/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789230281",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-789230281",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 789230281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4OTIzMDI4MQ==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-02T21:31:07Z",
    "updated_at": "2021-03-12T04:40:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19521 (Coinstats Index by fjahr)\n* #18795 (Test: wallet issue with orphaned rewards by domob1812)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/789230281/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791944309",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-791944309",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 791944309,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc5MTk0NDMwOQ==",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?u=8c439f4b7ebd0e4276880e22ba4213330b802cab&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-06T13:43:21Z",
    "updated_at": "2021-03-06T13:43:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the review @jonatack. Just pushed some fixes!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/791944309/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803214989",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-803214989",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 803214989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzIxNDk4OQ==",
    "user": {
      "login": "ottosch",
      "id": 17476,
      "node_id": "MDQ6VXNlcjE3NDc2",
      "avatar_url": "https://avatars.githubusercontent.com/u/17476?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ottosch",
      "html_url": "https://github.com/ottosch",
      "followers_url": "https://api.github.com/users/ottosch/followers",
      "following_url": "https://api.github.com/users/ottosch/following{/other_user}",
      "gists_url": "https://api.github.com/users/ottosch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ottosch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ottosch/subscriptions",
      "organizations_url": "https://api.github.com/users/ottosch/orgs",
      "repos_url": "https://api.github.com/users/ottosch/repos",
      "events_url": "https://api.github.com/users/ottosch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ottosch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T01:16:48Z",
    "updated_at": "2021-03-20T01:16:48Z",
    "author_association": "NONE",
    "body": "Tested ACK. I ran it 100x and they all passed.\r\nOS: Archlinux.\r\n\r\n![tack-21338](https://user-images.githubusercontent.com/17476/111854920-b2efd700-8900-11eb-8f10-e0fc0bb166dc.png)\r\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803214989/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803266423",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#issuecomment-803266423",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/21338",
    "id": 803266423,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwMzI2NjQyMw==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-20T07:36:17Z",
    "updated_at": "2021-03-20T07:36:17Z",
    "author_association": "MEMBER",
    "body": "Concept ACK 581791c62067403fbeb4e1fd88c1d80549627c94",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/803266423/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585649640",
    "pull_request_review_id": 601928729,
    "id": 585649640,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY0OTY0MA==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))\n+\n+        # It should contains only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+        for line in open(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'), 'rb'):",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 61,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "13762cda77f5ec159cf0c722daa61951c69bf5f0",
    "user": {
      "login": "jaonoctus",
      "id": 7918067,
      "node_id": "MDQ6VXNlcjc5MTgwNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7918067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaonoctus",
      "html_url": "https://github.com/jaonoctus",
      "followers_url": "https://api.github.com/users/jaonoctus/followers",
      "following_url": "https://api.github.com/users/jaonoctus/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaonoctus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaonoctus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaonoctus/subscriptions",
      "organizations_url": "https://api.github.com/users/jaonoctus/orgs",
      "repos_url": "https://api.github.com/users/jaonoctus/repos",
      "events_url": "https://api.github.com/users/jaonoctus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaonoctus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        for line in open(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'), 'rb', encoding='utf8'):\r\n```",
    "created_at": "2021-03-02T15:14:06Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585649640",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585649640"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585649640"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585649640/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585680413",
    "pull_request_review_id": 601969547,
    "id": 585680413,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY4MDQxMw==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))\n+\n+        # It should contains only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+        for line in open(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'), 'rb'):",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 61,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "13762cda77f5ec159cf0c722daa61951c69bf5f0",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it won't work because it's binary mode.",
    "created_at": "2021-03-02T15:48:12Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585680413",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585680413"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585680413"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585680413/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 585649640
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585686937",
    "pull_request_review_id": 601978170,
    "id": 585686937,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTY4NjkzNw==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))\n+\n+        # It should contains only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+        for line in open(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'), 'rb'):",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 61,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "13762cda77f5ec159cf0c722daa61951c69bf5f0",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Anyway, all of the linters must pass.",
    "created_at": "2021-03-02T15:55:37Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585686937",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585686937"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585686937"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585686937/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 585649640
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585758757",
    "pull_request_review_id": 602072355,
    "id": 585758757,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTc1ODc1Nw==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))\n+\n+        # It should contains only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+        for line in open(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'), 'rb'):",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 61,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "13762cda77f5ec159cf0c722daa61951c69bf5f0",
    "user": {
      "login": "jaonoctus",
      "id": 7918067,
      "node_id": "MDQ6VXNlcjc5MTgwNjc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7918067?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jaonoctus",
      "html_url": "https://github.com/jaonoctus",
      "followers_url": "https://api.github.com/users/jaonoctus/followers",
      "following_url": "https://api.github.com/users/jaonoctus/following{/other_user}",
      "gists_url": "https://api.github.com/users/jaonoctus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jaonoctus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jaonoctus/subscriptions",
      "organizations_url": "https://api.github.com/users/jaonoctus/orgs",
      "repos_url": "https://api.github.com/users/jaonoctus/repos",
      "events_url": "https://api.github.com/users/jaonoctus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jaonoctus/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Tested ACK. I'm pretty sure It's a false-flag.\r\n- OS: Ubuntu 20.10\r\n\r\n### Without `encoding` - passes\r\n![Screenshot from 2021-03-02 14-07-31](https://user-images.githubusercontent.com/7918067/109687248-d32e4080-7b61-11eb-86d5-0e73cb6de557.png)\r\n\r\n### With `encoding` - fail\r\n![Screenshot from 2021-03-02 14-15-21](https://user-images.githubusercontent.com/7918067/109687265-d6c1c780-7b61-11eb-89db-9e8c930ea052.png)\r\n\r\n---\r\n\r\nI also have checked other tests that are reading binaries. Such as [p2p_message_capture.py (line 37)](https://github.com/bitcoin/bitcoin/blob/b9f41df1ead4b6a83a51fc41966b111c8459c313/test/functional/p2p_message_capture.py#L37) or [rpc_dumptxoutset.py (line 40)](https://github.com/bitcoin/bitcoin/blob/b9f41df1ead4b6a83a51fc41966b111c8459c313/test/functional/rpc_dumptxoutset.py#L40). None have the encoding parameter, which makes sense.",
    "created_at": "2021-03-02T17:20:45Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585758757",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585758757"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585758757"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585758757/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT",
    "in_reply_to_id": 585649640
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585828542",
    "pull_request_review_id": 602161668,
    "id": 585828542,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTgyODU0Mg==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 57,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "b1a5e04be46255937af1e29c5c229daaf60d709e",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "could make the path a named variable to avoid repeating the join three times?",
    "created_at": "2021-03-02T18:59:40Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585828542",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585828542"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585828542"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585828542/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585845419",
    "pull_request_review_id": 602183720,
    "id": 585845419,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTg0NTQxOQ==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 57,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "b1a5e04be46255937af1e29c5c229daaf60d709e",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yeah, no problem! thanks!",
    "created_at": "2021-03-02T19:26:38Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585845419",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585845419"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585845419"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585845419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT",
    "in_reply_to_id": 585828542
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585851030",
    "pull_request_review_id": 602190985,
    "id": 585851030,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTg1MTAzMA==",
    "diff_hunk": "@@ -0,0 +1,77 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat'))",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 57,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "b1a5e04be46255937af1e29c5c229daaf60d709e",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done! ",
    "created_at": "2021-03-02T19:35:12Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585851030",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585851030"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r585851030"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/585851030/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 57,
    "side": "RIGHT",
    "in_reply_to_id": 585828542
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877690",
    "pull_request_review_id": 605754125,
    "id": 588877690,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3NzY5MA==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 11,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit, per PEP8 and `test/functional/README.md`, this import should be before the framework ones (separated by a blank line)",
    "created_at": "2021-03-06T12:40:38Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877690",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877690"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877690"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877690/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877760",
    "pull_request_review_id": 605754125,
    "id": 588877760,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3Nzc2MA==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 29,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            self.log.debug(f\"block-relay-only: {i}\")\r\n```",
    "created_at": "2021-03-06T12:41:36Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877760",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877760"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877760"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877760/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877772",
    "pull_request_review_id": 605754125,
    "id": 588877772,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3Nzc3Mg==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 34,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n            self.debug.info(f\"inbound: {i}\")\r\n```",
    "created_at": "2021-03-06T12:41:52Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877772",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877772"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588877772"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588877772/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878404",
    "pull_request_review_id": 605754125,
    "id": 588878404,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3ODQwNA==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = '7f000001'\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p['addr'].split(':')\n+            if p['connection_type'] == 'block-relay-only':\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(self.nodes[0].datadir + '/regtest', 'anchors.dat')\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contains only the block-relay-only addresses",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 61,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n        # It should contain only the block-relay-only addresses\r\n```",
    "created_at": "2021-03-06T12:47:59Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588878404",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878404"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588878404"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878404/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 61,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878990",
    "pull_request_review_id": 605754932,
    "id": 588878990,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg3ODk5MA==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 11,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "https://www.python.org/dev/peps/pep-0008/#imports\r\n\r\nImports should be grouped in the following order:\r\n\r\n-   Standard library imports.\r\n-    Related third party imports.\r\n-    Local application/library specific imports.\r\n\r\nYou should put a blank line between each group of imports.",
    "created_at": "2021-03-06T12:54:02Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588878990",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878990"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588878990"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588878990/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 588877690
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588881992",
    "pull_request_review_id": 605756637,
    "id": 588881992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg4MTk5Mg==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 11,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Thanks, just fixed! ",
    "created_at": "2021-03-06T13:24:05Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588881992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588881992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588881992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588881992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 11,
    "side": "RIGHT",
    "in_reply_to_id": 588877690
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883189",
    "pull_request_review_id": 605757303,
    "id": 588883189,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg4MzE4OQ==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 29,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just changed it, it's better _debug_ instead of _info_ for this case.",
    "created_at": "2021-03-06T13:35:46Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588883189",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883189"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588883189"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883189/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 29,
    "side": "RIGHT",
    "in_reply_to_id": 588877760
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883796",
    "pull_request_review_id": 605757668,
    "id": 588883796,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4ODg4Mzc5Ng==",
    "diff_hunk": "@@ -0,0 +1,82 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+import os\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.info(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\")\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.info(f\"inbound: {i}\")",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 34,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "a83908f9f72ea2979a02ab051e1fc0846d0262af",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Just changed it, but the right format is `self.log.debug` as you suggested above I guess.",
    "created_at": "2021-03-06T13:42:08Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588883796",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883796"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r588883796"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/588883796/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 34,
    "side": "RIGHT",
    "in_reply_to_id": 588877772
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589098479",
    "pull_request_review_id": 605892332,
    "id": 589098479,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTA5ODQ3OQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir + \"/regtest\", \"anchors.dat\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 60,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "9ef15a0af225fe0e8de94864f7b4e92c6f84bdc4",
    "user": {
      "login": "aarmoa",
      "id": 30988000,
      "node_id": "MDQ6VXNlcjMwOTg4MDAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30988000?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aarmoa",
      "html_url": "https://github.com/aarmoa",
      "followers_url": "https://api.github.com/users/aarmoa/followers",
      "following_url": "https://api.github.com/users/aarmoa/following{/other_user}",
      "gists_url": "https://api.github.com/users/aarmoa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aarmoa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aarmoa/subscriptions",
      "organizations_url": "https://api.github.com/users/aarmoa/orgs",
      "repos_url": "https://api.github.com/users/aarmoa/repos",
      "events_url": "https://api.github.com/users/aarmoa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aarmoa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hello Bruno. I think we should concatenate regtest sub directory using the os.path.join() function instead of using + \"/regtest\" (just to avoid assuming the test is running in a Unix based OS).\r\n` node0_anchors_path = os.path.join(\r\n            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\r\n)`",
    "created_at": "2021-03-07T22:29:28Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589098479",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589098479"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589098479"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589098479/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589106093",
    "pull_request_review_id": 605897749,
    "id": 589106093,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTEwNjA5Mw==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir + \"/regtest\", \"anchors.dat\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 60,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "9ef15a0af225fe0e8de94864f7b4e92c6f84bdc4",
    "user": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Good point.\r\n\r\nIn general, don't hesitate to refer to `test/functional/feature_asmap.py` for an example of a similar kind of test file.\r\n\r\n```python\r\n    self.datadir = os.path.join(self.node.datadir, self.chain)\r\n    self.default_asmap = os.path.join(self.datadir, DEFAULT_ASMAP_FILENAME)\r\n    self.asmap_raw = os.path.join(os.path.dirname(os.path.realpath(__file__)), ASMAP)\r\n```",
    "created_at": "2021-03-07T23:30:56Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589106093",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589106093"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589106093"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589106093/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 589098479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589109865",
    "pull_request_review_id": 605900852,
    "id": 589109865,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4OTEwOTg2NQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir + \"/regtest\", \"anchors.dat\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 60,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "9ef15a0af225fe0e8de94864f7b4e92c6f84bdc4",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Hello, Abel.. Thanks a lot for the review! Just changed it.",
    "created_at": "2021-03-08T00:02:19Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589109865",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589109865"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r589109865"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/589109865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 60,
    "side": "RIGHT",
    "in_reply_to_id": 589098479
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594398865",
    "pull_request_review_id": 612277127,
    "id": 594398865,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM5ODg2NQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "wouldn't it make more sense for this to be an array?",
    "created_at": "2021-03-15T14:45:10Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r594398865",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594398865"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r594398865"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594398865/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399939",
    "pull_request_review_id": 612277127,
    "id": 594399939,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDM5OTkzOQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 64,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this check can be skipped (will be checked by `open` already)",
    "created_at": "2021-03-15T14:46:14Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r594399939",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399939"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r594399939"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/594399939/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595555591",
    "pull_request_review_id": 613743306,
    "id": 595555591,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTU1NTU5MQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I don't think so. I am concatenating the lines to verify if the addresses are into this. I don't think an array would be useful here.",
    "created_at": "2021-03-16T21:32:50Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595555591",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595555591"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595555591"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595555591/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595556246",
    "pull_request_review_id": 613744138,
    "id": 595556246,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTU1NjI0Ng==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 64,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make sense. \r\nWhen the file doesn't exit in the node directory the `open` function will return a FileNotFoundError.\r\nThanks!",
    "created_at": "2021-03-16T21:34:02Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595556246",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595556246"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595556246"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595556246/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 594399939
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595568560",
    "pull_request_review_id": 613758989,
    "id": 595568560,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTU2ODU2MA==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 64,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done!",
    "created_at": "2021-03-16T21:56:43Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595568560",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595568560"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595568560"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595568560/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 64,
    "side": "RIGHT",
    "in_reply_to_id": 594399939
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595767873",
    "pull_request_review_id": 613985963,
    "id": 595767873,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NTc2Nzg3Mw==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Let's assume ip_port is `aa` and anchors is `['fa', 'af']`\r\n\r\nWith array:\r\n\r\n```\r\n>>> 'aa' in ['fa', 'af']\r\nFalse\r\n```\r\n\r\nWith string\r\n\r\n```\r\n>>> 'aa' in 'faaf'\r\nTrue\r\n```\r\n\r\nAm I missing something?",
    "created_at": "2021-03-17T07:27:00Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595767873",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595767873"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r595767873"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/595767873/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596462558",
    "pull_request_review_id": 614880045,
    "id": 596462558,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjQ2MjU1OA==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'm using string for the reason you're showing with your example. I think the question about using array or string is: how is anchors.dat structured?\r\n\r\nLet's suppose:\r\n\r\nip_port is 7f0000013e01 and the file content is:\r\nfabfb5da02fc5a030000e1f505000000000000000000000000000000000000ffff7f0000013e01fc5a030000e1f505000000000000000000000000000000000000ffff7f0000013e0075f7d7cf33e71e42f8add50c305f091fb881b6fa5633932559d86cd9f6141260\r\n\r\nbut we have:\r\nfabfb5da02fc5a030000e1f505000000000000000000000000000000000000ffff`7f00` (breaks line)\r\n`00013e`01fc5a030000e1f505000000000000000000000000000000000000ffff7f000 (breaks line)\r\n0013e0075f7d7cf33e71e42f8add50c305f091fb881b6fa5633932559d86cd9f6141260 (breaks line)\r\n\r\nin this case, my logic using string would be useful. \r\nBut how is the file structure for this case?\r\n\r\nAnyway, almost 100% of my tests showed me that anchors.dat usually has just one line.\r\n\r\n\r\n\r\n",
    "created_at": "2021-03-18T00:02:09Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r596462558",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596462558"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r596462558"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596462558/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596597263",
    "pull_request_review_id": 615034180,
    "id": 596597263,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjU5NzI2Mw==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "anchors.dat is binary data, so why would newlines matter and what is the point of `rstrip`?",
    "created_at": "2021-03-18T07:03:11Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r596597263",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596597263"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r596597263"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/596597263/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597331052",
    "pull_request_review_id": 615977214,
    "id": 597331052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzMzMTA1Mg==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I can remove `rstrip` I guess, it doesn't affect anything, thanks.\r\n ",
    "created_at": "2021-03-19T00:34:06Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597331052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597331052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597331052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597331052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597333829",
    "pull_request_review_id": 615980315,
    "id": 597333829,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzMzMzgyOQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "So, can I read only the first line?\r\n I was using `array` but the test `was failing, assuming:\r\n```\r\nitem (first line): fabfb5da02fc5a030000e1f505000000000000000000000000000000000000ffff7f0000012b6efc5a030000e1f505000000000000000000000000000000000000ffff7f0000012b6d1c665ef1c1d383c4869170e021306a945bdbfb9f39c12bb2e0\r\nip_port: 7f0000012b6e\r\nip_port in item: True\r\nip_port: 7f0000012b6d\r\nip_port in item: True\r\nitem (second line): 279f548ecaf3\r\nip_port: 7f0000012b6e\r\nip_port in item: False`\r\n```\r\n",
    "created_at": "2021-03-19T00:43:14Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597333829",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597333829"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597333829"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597333829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597438655",
    "pull_request_review_id": 616098798,
    "id": 597438655,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NzQzODY1NQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "If newlines don't have a meaning, they shouldn't be interpreted. You can just use `read()`?",
    "created_at": "2021-03-19T06:40:33Z",
    "updated_at": "2021-03-19T23:31:25Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597438655",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597438655"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r597438655"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/597438655/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598022059",
    "pull_request_review_id": 616848685,
    "id": 598022059,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODAyMjA1OQ==",
    "diff_hunk": "@@ -0,0 +1,88 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case, we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        self.log.info(\"Check anchors.dat file in the node directory\")\n+        assert os.path.exists(node0_anchors_path)\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        anchors = \"\"",
    "path": "test/functional/feature_anchors.py",
    "position": null,
    "original_position": 69,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "0605a3cbf8ddec39dfbe5c490a872158dc8a6faa",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, just pushed the changes. It makes sense. Could you please check?",
    "created_at": "2021-03-19T23:33:38Z",
    "updated_at": "2021-03-19T23:33:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598022059",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598022059"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598022059"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598022059/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 67,
    "side": "RIGHT",
    "in_reply_to_id": 594398865
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405319",
    "pull_request_review_id": 617127749,
    "id": 598405319,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQwNTMxOQ==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):",
    "path": "test/functional/feature_anchors.py",
    "position": 14,
    "original_position": 14,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This code is used once only. What are benefits of the separated function here?",
    "created_at": "2021-03-22T03:34:13Z",
    "updated_at": "2021-03-22T03:40:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405319",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405319"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405319"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405319/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 14,
    "original_line": 14,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405613",
    "pull_request_review_id": 617127749,
    "id": 598405613,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQwNTYxMw==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"",
    "path": "test/functional/feature_anchors.py",
    "position": 5,
    "original_position": 5,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit:\r\n```suggestion\r\n\"\"\"Test block-relay-only anchors functionality\"\"\"\r\n```",
    "created_at": "2021-03-22T03:35:28Z",
    "updated_at": "2021-03-22T03:40:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405613",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405613"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405613"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405613/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 5,
    "original_line": 5,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405887",
    "pull_request_review_id": 617127749,
    "id": 598405887,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQwNTg4Nw==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")",
    "path": "test/functional/feature_anchors.py",
    "position": 28,
    "original_position": 28,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: here and after s/\"node 0\"/\"node\"/ as it is the only node in this test.",
    "created_at": "2021-03-22T03:36:48Z",
    "updated_at": "2021-03-22T03:40:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405887",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405887"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598405887"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598405887/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 28,
    "original_line": 28,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406187",
    "pull_request_review_id": 617127749,
    "id": 598406187,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQwNjE4Nw==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):",
    "path": "test/functional/feature_anchors.py",
    "position": 29,
    "original_position": 29,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: Numbers of connections, i.e., 2 and 5, could be named variables.",
    "created_at": "2021-03-22T03:37:51Z",
    "updated_at": "2021-03-22T03:40:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598406187",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406187"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598406187"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406187/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 29,
    "original_line": 29,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406712",
    "pull_request_review_id": 617127749,
    "id": 598406712,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5ODQwNjcxMg==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case,\n+        # we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        with open(node0_anchors_path, \"rb\") as file_handler:\n+            anchors = file_handler.read().hex()\n+\n+        for port in block_relay_nodes_port:\n+            ip_port = ip + port\n+            assert ip_port in anchors\n+        for port in inbound_nodes_port:\n+            ip_port = ip + port\n+            assert ip_port not in anchors\n+\n+        self.log.info(\"Start node 0\")\n+        self.start_node(0)\n+\n+        self.log.info(\"When node starts, check if anchors.dat doesn't exist anymore\")\n+        assert not os.path.exists(node0_anchors_path)",
    "path": "test/functional/feature_anchors.py",
    "position": 81,
    "original_position": 81,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The same assertion seems reasonable to place in the test beginning too, no?",
    "created_at": "2021-03-22T03:40:09Z",
    "updated_at": "2021-03-22T03:40:21Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598406712",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406712"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r598406712"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/598406712/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640998845",
    "pull_request_review_id": 670683380,
    "id": 640998845,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MDk5ODg0NQ==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")\n+        for i in range(2):\n+            self.log.debug(f\"block-relay-only: {i}\")\n+            self.nodes[0].add_outbound_p2p_connection(\n+                P2PInterface(), p2p_idx=i, connection_type=\"block-relay-only\"\n+            )\n+\n+        self.log.info(\"Add 5 inbound connections to node 0\")\n+        for i in range(5):\n+            self.log.debug(f\"inbound: {i}\")\n+            self.nodes[0].add_p2p_connection(P2PInterface())\n+\n+        self.log.info(\"Check node 0 connections\")\n+        check_node_connections(node=self.nodes[0], num_in=5, num_out=2)\n+\n+        # 127.0.0.1\n+        ip = \"7f000001\"\n+\n+        # Since the ip is always 127.0.0.1 for this case,\n+        # we store only the port to identify the peers\n+        block_relay_nodes_port = []\n+        inbound_nodes_port = []\n+        for p in self.nodes[0].getpeerinfo():\n+            addr_split = p[\"addr\"].split(\":\")\n+            if p[\"connection_type\"] == \"block-relay-only\":\n+                block_relay_nodes_port.append(hex(int(addr_split[1]))[2:])\n+            else:\n+                inbound_nodes_port.append(hex(int(addr_split[1]))[2:])\n+\n+        self.log.info(\"Stop node 0\")\n+        self.stop_node(0)\n+\n+        node0_anchors_path = os.path.join(\n+            self.nodes[0].datadir, \"regtest\", \"anchors.dat\"\n+        )\n+\n+        # It should contain only the block-relay-only addresses\n+        self.log.info(\"Check the addresses in anchors.dat\")\n+\n+        with open(node0_anchors_path, \"rb\") as file_handler:\n+            anchors = file_handler.read().hex()\n+\n+        for port in block_relay_nodes_port:\n+            ip_port = ip + port\n+            assert ip_port in anchors\n+        for port in inbound_nodes_port:\n+            ip_port = ip + port\n+            assert ip_port not in anchors\n+\n+        self.log.info(\"Start node 0\")\n+        self.start_node(0)\n+\n+        self.log.info(\"When node starts, check if anchors.dat doesn't exist anymore\")\n+        assert not os.path.exists(node0_anchors_path)",
    "path": "test/functional/feature_anchors.py",
    "position": 81,
    "original_position": 81,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Yes, make sense. ",
    "created_at": "2021-05-27T22:00:01Z",
    "updated_at": "2021-05-27T22:00:01Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r640998845",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640998845"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r640998845"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/640998845/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 81,
    "original_line": 81,
    "side": "RIGHT",
    "in_reply_to_id": 598406712
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641017242",
    "pull_request_review_id": 670704237,
    "id": 641017242,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY0MTAxNzI0Mg==",
    "diff_hunk": "@@ -0,0 +1,85 @@\n+#!/usr/bin/env python3\n+# Copyright (c) 2020 The Bitcoin Core developers\n+# Distributed under the MIT software license, see the accompanying\n+# file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\"\"\"Test Anchors functionality\"\"\"\n+\n+import os\n+\n+from test_framework.p2p import P2PInterface\n+from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n+\n+\n+def check_node_connections(*, node, num_in, num_out):\n+    info = node.getnetworkinfo()\n+    assert_equal(info[\"connections_in\"], num_in)\n+    assert_equal(info[\"connections_out\"], num_out)\n+\n+\n+class AnchorsTest(BitcoinTestFramework):\n+    def set_test_params(self):\n+        self.num_nodes = 1\n+\n+    def setup_network(self):\n+        self.setup_nodes()\n+\n+    def run_test(self):\n+        self.log.info(\"Add 2 block-relay-only connections to node 0\")",
    "path": "test/functional/feature_anchors.py",
    "position": 28,
    "original_position": 28,
    "commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "original_commit_id": "581791c62067403fbeb4e1fd88c1d80549627c94",
    "user": {
      "login": "brunoerg",
      "id": 19480819,
      "node_id": "MDQ6VXNlcjE5NDgwODE5",
      "avatar_url": "https://avatars.githubusercontent.com/u/19480819?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brunoerg",
      "html_url": "https://github.com/brunoerg",
      "followers_url": "https://api.github.com/users/brunoerg/followers",
      "following_url": "https://api.github.com/users/brunoerg/following{/other_user}",
      "gists_url": "https://api.github.com/users/brunoerg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brunoerg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brunoerg/subscriptions",
      "organizations_url": "https://api.github.com/users/brunoerg/orgs",
      "repos_url": "https://api.github.com/users/brunoerg/repos",
      "events_url": "https://api.github.com/users/brunoerg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brunoerg/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Perfect, thanks!",
    "created_at": "2021-05-27T22:37:57Z",
    "updated_at": "2021-05-27T22:37:57Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r641017242",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641017242"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/21338#discussion_r641017242"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/21338"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/641017242/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 28,
    "original_line": 28,
    "side": "RIGHT",
    "in_reply_to_id": 598405887
  }
]