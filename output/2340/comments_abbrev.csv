petertodd,2013-03-02T05:11:58Z,@sipa I looked into it and I think we don't need to worry about nBestHeight decreasing on a retarget reorg. Anything already in a node's mempool stays there and will be mined once the chain height catches upl so it would be extremely rare for that to take more than an extra block or two.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-14323157,14323157,
petertodd,2013-03-03T17:48:38Z,Coinbase got back to me and they've now fixed the issue - they're using the same IsFinal() logic as the reference client.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-14351041,14351041,
petertodd,2013-03-04T11:40:45Z,"Re-based on top of the ""fix off-by-one errors"" fix, which unfortunately means this has to be weakened until the network upgrades. It'll still at least shake out bugs in the meantime.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-14376659,14376659,
BitcoinPullTester,2013-03-04T12:44:30Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/745083a87c9e8b42e472b1d232d68bb332a86bc1 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-14379062,14379062,
BitcoinPullTester,2013-04-14T02:25:06Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/903fec9192e71b9734388f5d951a7163dee5b852 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-16344713,16344713,
luke-jr,2013-07-17T03:47:44Z,@petertodd Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-21090359,21090359,
jgarzik,2013-08-25T03:23:49Z,This seems nice to have.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23221185,23221185,
petertodd,2013-08-25T19:16:42Z,"@jgarzik @luke-jr Updated and tested it against inputs.io, Coinbase, EasyWallet, SatoshiDice and the Android Bitcoin Wallet. It may make zero-conf tx's take a little longer to show up for SatoshiDice, but other than that possible issue I didn't have any problems. (the android wallet seems to have been updated to never show unconfirmed tx's so that's a non-issue) I couldn't test inputs.io properly ",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23233615,23233615,
petertodd,2013-08-25T19:17:09Z,@luke-jr You added this patch to next-test - any related bug reports?\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23233618,23233618,
jgarzik,2013-08-25T19:23:31Z,Without getting into too much public detail:  BitPay uses stock bitcoind as boundary nodes if at all possible.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23233737,23233737,
petertodd,2013-08-25T19:26:15Z,Well if you trust those bitcoind's 100% for what is or isn't a real transaction then this patch won't cause any problems for BitPay customers.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23233800,23233800,
BitcoinPullTester,2013-08-25T21:02:28Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/50e84e991d30ae86a40603cf8de5b7ac35734dad for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23235527,23235527,
schildbach,2013-08-25T21:55:56Z,"@petertodd \n\n> the android wallet seems to have been updated to never show unconfirmed tx's\n\nWhy do you think so? That's certainly not the case. However it will display a warning if lockTime > 0, and it also checks the unconfirmed dependency chain.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23236328,23236328,
luke-jr,2013-08-25T22:38:51Z,I've been using this as part of next-test for months now and haven't encountered any problems as a result.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23236979,23236979,
petertodd,2013-08-26T00:37:01Z,"@schildbach Actually seems that Android Wallet has a number of issues:\n\n8f8dee4bbd74b573c324745d9d23938a1e4d12f269f9afca022224cf740f16aa - This tx has nLockTime=1, but nSequence=int max so it is a final tx. Instead the wallet shows a big read ""this transaction is non-standard and should not be trusted"" until it confirmed - kinda silly.\n\nfdb100df609349802c90dee38c694f3626b6c1f62a20ba92603ad1720",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23238887,23238887,
schildbach,2013-08-26T07:29:55Z,@petertodd Thanks for your detailed tests. I'll investigate.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-23247554,23247554,
wtogami,2013-10-14T07:56:13Z,@schildbach any results?\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26240512,26240512,
schildbach,2013-10-14T08:06:37Z,"@wtogami I fixed the UI so that the first case should not show up as timelocked any more.\n\nThe other cases should not show up in their unconfirmed state. However, they will show once they're blockchain confirmed.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26240928,26240928,
petertodd,2013-10-15T18:50:58Z,"@schildbach What's blocking showing those tx's in their unconfirmed, but final, state?\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26361751,26361751,
schildbach,2013-10-16T07:54:18Z,"I think the rationale is those transactions currently do not constitute a usecase that is supported by bitcoinj, so for safety reasons they are not allowed into the wallet. I believe this will change in future, probably with the introduction of more complex payment types (consisting of more than one tx). Probably @mikehearn can tell more.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26398951,26398951,
petertodd,2013-10-17T16:47:40Z,"Using the nLockTime feature is the business of the sender; the receiver has no reason to care about whether or not that feature was used if the transaction is now final and can be mined.\n\nThis is just another example of the ""death-spiral"" of feature disablement that we keep seeing in Bitcoin where because we disable features based on nothing more than a suspicion that they might somehow be used ",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26525800,26525800,
mikehearn,2013-10-17T21:17:24Z,"Hmm, that argument sounds familiar :)\n\nThis came out of the conclusion that people could create time-locked transactions that people would think would confirm quickly, then wouldn't, making it easier to double spend. I think it was you that brought that up originally actually. Anyway it was a fair point so those transactions just don't get accepted into the wallet by default. And nowadays they'r",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26553847,26553847,
gmaxwell,2013-10-17T21:19:53Z,"@mikehearn The problem right now is that they don't show up in android wallet even after they're locked. Those transactions are not non-standard, they propagate fine, and other wallets (most?) display them okay too.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26554040,26554040,
mikehearn,2013-10-17T21:25:59Z,"I'll re-review that code, but I think final transactions are allowed, or are supposed to be. There was an issue with the Android UI checking if there was a time lock rather than if it was final, but I thought that was fixed. I filed bug 469 to investigate:\n\nhttps://code.google.com/p/bitcoinj/issues/detail?id=469\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-26554464,26554464,
mikehearn,2013-11-14T14:33:24Z,"I fixed the bitcoinj side issue. It may require a quick new API to make the UI do the right thing though. Andreas, let me know when you have time to retest this.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-28487890,28487890,
petertodd,2013-11-21T06:00:28Z,@schildbach @mikehearn Current version of the Android wallet is rejecting all using txs with nSequence != max and/or nLockTime != 0 even once they are confirmed.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-28960090,28960090,
schildbach,2013-11-21T09:09:15Z,"@petertodd If you have a test script, can you publish that so I can reproduce?\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-28967418,28967418,
mikehearn,2013-11-21T10:04:51Z,The current version of the app is not using bitcoinj 0.11-SNAPSHOT which is where I made the fixes. So that would be expected.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-28971405,28971405,
petertodd,2013-11-21T18:46:45Z,@schildbach I don't have a test script; I used the raw tx API and just edited the hex manually.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-29011654,29011654,
luke-jr,2014-02-21T00:14:19Z,"ACK. I have been using this for 4 months now, at least 2 months of that including my offline wallet with hundreds of BTC. No problems at all.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35685603,35685603,
jgarzik,2014-02-21T01:04:45Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35688778,35688778,
petertodd,2014-02-21T01:09:06Z,"NACK\n\nThis has potential privacy problems by acting as yet another bit of metadata added to transactions that can distinguish wallets and thus coins. While it may be a useful thing in the future, for now I consider those privacy issues significantly more important than the fee-sniping problem.\n\nClosing\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35689059,35689059,
gmaxwell,2014-02-21T01:32:33Z,Right now Bitcoin-QT created transactions are trivially distinguishable.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35690426,35690426,
petertodd,2014-02-21T01:40:49Z,@gmaxwell Explain?\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35690937,35690937,
luke-jr,2014-02-21T01:59:47Z,AFAIK this is only a privacy problem as long as only a few people are using it.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35691916,35691916,
gmaxwell,2014-02-21T02:25:42Z,"@petertodd All our signatures are have S values in half the order. Once you have more than a couple signatures on your transaction it's distinguishable with near certainty.  We also do things like ... not resending change to the same address which distinguishes us from multibit and bc.i, for example. Or compute fees correctly, distinguishing us from multibit (and I think anything bitcoinj based?),",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35693235,35693235,
mikehearn,2014-02-21T05:52:41Z,"Bitcoinj 0.11 wallets also use half order s values now and fees are\ncomputed correctly by bitcoinj, save for the fact that it won't ever create\nfree transactions regardless of priority due to the tiny fixed space\navailable. Once floating fees come in I hope to change that as we will have\nsome notion of how fast a free tx could confirm. And I'm working on HD\nwallets now so the address reuse wi",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35701182,35701182,
petertodd,2014-02-21T05:55:52Z,"@gmaxwell Most of those practices are things other wallets can and should adopt, e.g. S-values and using new addresses for change. Fees will be increasingly floating in the future, which makes them less useful as a distinguisher.\n\n@luke-jr Not necessarily. For instance a CoinJoin transaction may be completed in a time long enough for multiple blocks to be created, in which case the transaction s",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35701297,35701297,
luke-jr,2014-02-21T05:56:01Z,@mikehearn What are your thoughts about porting this change to BitcoinJ?\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35701301,35701301,
luke-jr,2014-02-21T05:59:17Z,@petertodd High latency users can afford to pick a future block and have it wait for relaying.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35701403,35701403,
mikehearn,2014-02-21T06:01:57Z,"I'm not sure yet. Still watching the debate. I'm not against doing that,\nalthough right now there are a lot of other changes that seem more\nimportant. I guess I'd like to see at least a BIP explaining the change and\nrationale in detail, so wallet authors can be pointed there to understand\nthings.\nOn 21 Feb 2014 11:26, ""Luke-Jr"" notifications@github.com wrote:\n\n> @mikehearn https://github.co",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35701493,35701493,
petertodd,2014-02-21T06:55:04Z,"Well anyway this is pretty low on my priority list; I updated it so that it goes 10 blocks back, and 1/10 times the depth is randomized.\n\nIf it pans out, it pans out, and in the meantime it'll help get rid of whatever remaining nLockTime-related bugs people have in their custom implementations.\n\nACK\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-35703677,35703677,
petertodd,2014-03-17T23:57:35Z,rebased\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-37885774,37885774,
sipa,2014-06-01T11:30:21Z,"I think this is a good idea for normal wallet behaviour. Perhaps we should open some discussion on the mailing list, or have an informative BIP?\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-44775389,44775389,
jgarzik,2014-06-01T14:29:00Z,@sipa +1\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-44779064,44779064,
laanwj,2014-06-25T09:09:35Z,If this is conditional on a BIP or mailing list condition I'm going to close this for now. It makes no sense to continue asking for rebases. Let me know when discussion is concluded and it can be merged.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47077333,47077333,
petertodd,2014-06-25T15:37:26Z,@laanwj Quite reasonable; I suspect there's zero interest in it frankly. It's a solution to a very far off problem.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47118517,47118517,
jgarzik,2014-06-25T15:43:29Z,"I continue to think this is good wallet behavior, and it is cheap to put in place now for the long term.  RE privacy, that is only true if others fail to adopt this practice.  bitcoind wallets can usually be detected by other means today anyway (thus in the future it should be private presuming it's adopted, and today it's not the biggest problem in that arena).\n\nJust mailed the list.  I think t",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47119375,47119375,
gmaxwell,2014-06-25T16:34:11Z,"It doesn't change how anyone else must behave... I agree it would be a best practice and consistency would be good for improved privacy, but I don't think thats a reason to defer or delay doing this.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47126526,47126526,
sipa,2014-06-25T16:36:32Z,"I suggested the BIP and mailinglist discussion mostly to let other wallet implementation be aware of this possibility and suggest using it. I don't think it's a blocker. The only concern here seems to be privacy, but I'm pretty sure our wallet implementation is already pretty recognizable.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47126886,47126886,
petertodd,2014-06-25T16:39:02Z,"Anyway, if it doesn't turn out to be a good idea, we can easily revert it; if it does turn out to be a good idea, it'll be easier to implement it more widely once someone has forced people to fix their nLockTime related bugs.\n\nBut I'm going to catch a flight soon, so if you want to merge it, someone else needs to fix whatever is making the merge fail. :) \n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47127209,47127209,
schildbach,2014-06-29T12:48:08Z,I must admit that I somehow don't understand this issue fully any more. Can someone post a tl;dr what nLockTime related bugs do other (perhaps specifically bitcoinj-based) wallets have?\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47453678,47453678,
mikehearn,2014-06-29T12:56:05Z,"I think the bugs were fixed a long time ago, at least at the library level. \n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47453868,47453868,
petertodd,2014-06-29T13:24:51Z,"Oh, I didn't mean to say I knew of any unfixed bugs right now, just that this will keep new ones from sticking around for long. \n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-47454500,47454500,
petertodd,2014-07-13T14:10:18Z,Rebased. This should be ready for merging.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-48841526,48841526,
jgarzik,2014-07-29T17:09:29Z,"Current dev consensus on this is ""looks good to have""   It was posted to the mailing list thread ""Wallet nLockTime best practices"" with little to no response.\n\nLet's collect ACKs and get it in:  ACK\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-50506887,50506887,
btcdrak,2014-07-30T21:19:32Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-50681523,50681523,
laanwj,2014-07-31T06:51:58Z,I think we're all a bit hesitant to be the first wallet to merge this.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-50720847,50720847,
dgenr8,2014-08-08T17:40:40Z,"ACK.  Another benefit is more txes in the blockchain with information on first-eligible-block vs. actual-block, at no additional storage cost.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-51634031,51634031,
BitcoinPullTester,2014-08-18T19:57:46Z,"Automatic sanity-testing: FAILED BUILD/TEST, see http://jenkins.bluematt.me/pull-tester/p2340_4cb83ab0c0d4eb43a90b6b14381fb04f115bd084/ for binaries and test log.\n\nThis could happen for one of several reasons:\n1. It chanages paths in makefile.linux-mingw or otherwise changes build scripts in a way that made them incompatible with the automated testing scripts (please tweak those patches in qa/p",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-52545937,52545937,
gmaxwell,2014-10-09T00:31:39Z,"I for some reason thought this was merged already. Functionality that doesn't get used will rot. It's also useful for some far out concerns.  I'm in favor of this, but it should probably get a configuration option to disable it. (e.g. if it turns out to be problematic for someone even after we ship it).\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58448724,58448724,
TheBlueMatt,2014-10-09T00:34:08Z,"Bitcoin Core is the reference wallet, and, as such, should set the best practices, ACK.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58448901,58448901,
jgarzik,2014-10-09T00:47:59Z,+1 still want this\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58449818,58449818,
luke-jr,2014-10-09T01:23:42Z,"If someone hasn't complained by now, they can hack the code and recompile. I've been using this in production for over a year now with no issues. So I'd favour just merging it without a config option.\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58452053,58452053,
btcdrak,2014-10-09T06:28:02Z,~~ACK~~\n\n+1\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58468367,58468367,
petertodd,2014-10-09T06:30:05Z,@btcdrak You realize code you ACKed doesn't actually compile right now... Lemme get this fixed and we can get this actually tested and merged.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58468500,58468500,
btcdrak,2014-10-09T06:34:19Z,"@petertodd Oops, I meant +1 to the idea. \n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58468778,58468778,
petertodd,2014-10-09T06:41:07Z,@btcdrak Your punishment: go fix that compile error for me so I can watch bad movies on my flight home instead. :)\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58469231,58469231,
btcdrak,2014-10-09T07:18:03Z,"@petertodd done, but a single character diff doesnt seem like punishment\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58471823,58471823,
petertodd,2014-10-10T06:33:14Z,Fixed unsigned-vs-signed issue and did one last bit of testing.\n\nLets just merge this as is before it drags on any further. Adding a command line option to disable it can easily be done in another pull-req.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58617533,58617533,
btcdrak,2014-10-10T06:39:29Z,"Well I can definitely say ""tested ACK"" it this time.\n\nTested ACK\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58617884,58617884,
petertodd,2014-10-13T12:20:39Z,Fixed issue brought up by @dgenr8 and added an assert() to double-check the resulting nLockTime is sane.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58884183,58884183,
petertodd,2014-10-13T12:21:16Z,It's unfortunate there's no unittest that actually does a CreateTransaction()... at first glance it looks like quite a bit of work to add however. :(\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-58884241,58884241,
jgarzik,2014-11-18T15:29:42Z,tested ACK\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-63488029,63488029,
schildbach,2014-12-22T14:38:50Z,Bitcoin Wallet version 4.16 – just released – is now compatible to this patch in that it doesn't display an 'untrusted' warning on those tx any more.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-67843519,67843519,
petertodd,2014-12-22T14:40:45Z,"@schildbach Thanks!\n\nOut of curiosity, how long for the Android store to update?\n",https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-67843728,67843728,
schildbach,2014-12-22T14:46:31Z,@petertodd It's already on Google Play. It usually takes an hour or so to appear.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-67844399,67844399,
petertodd,2014-12-23T19:22:55Z,@schildbach Thanks! Confirmed working here too.\n,https://github.com/bitcoin/bitcoin/pull/2340#issuecomment-67988349,67988349,
dgenr8,2014-08-08T17:49:57Z,This can cause an underflow when current height is less than 110 (or 10 on line 1361).\n,https://github.com/bitcoin/bitcoin/pull/2340#discussion_r16006142,16006142,src/wallet.cpp
Michagogo,2014-08-10T18:08:18Z,"Correct me if I'm wrong, but I would think that it's not a problem on line 1361 because this is (if  understand correctly) when creating a transaction spending wallet coins, and if the height is less than 10 then no mature coinbases exist and so a transaction can't be created. If I'm right about that, then the 110 issue can be fixed by dropping the number down from 100 to 89(?). (or you could just",https://github.com/bitcoin/bitcoin/pull/2340#discussion_r16032496,16032496,src/wallet.cpp
petertodd,2014-08-13T21:48:55Z,Nice catch! I just put std::max() on both. 'can't test on this computer; mind telling me if that fixed that edge case?\n,https://github.com/bitcoin/bitcoin/pull/2340#discussion_r16208678,16208678,src/wallet.cpp
btcdrak,2014-10-09T07:16:53Z,"```\ntxNew.nLockTime = std::max(0U, txNew.nLockTime - GetRandInt(100));\n```\n\n(type mismatch)\n",https://github.com/bitcoin/bitcoin/pull/2340#discussion_r18629975,18629975,src/wallet.cpp
dgenr8,2014-10-09T16:23:56Z,"I think it needs to be\n\n`txNew.nLockTime = std::max(0, (int)txNew.nLockTime - GetRandInt(100))`\n\notherwise, the second argument can't be negative as it must for the max to work.\n",https://github.com/bitcoin/bitcoin/pull/2340#discussion_r18656343,18656343,src/wallet.cpp
btcdrak,2014-10-09T18:39:28Z,"While both patches work, since `txNew.nLockTime` is already an `unsigned int`, it makes more sense to me to make the first parameter unsigned.\n",https://github.com/bitcoin/bitcoin/pull/2340#discussion_r18664969,18664969,src/wallet.cpp
