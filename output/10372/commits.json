[
  {
    "sha": "399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozOTlmYjhmMmQwZmE5Y2ZmMmY0NjFlZjJjMGRhNWI5MTc2NTk4N2Yx",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-05-22T20:01:29Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-05-22T20:01:29Z"
      },
      "message": "Add internal method to add new random data to our internal RNG state",
      "tree": {
        "sha": "cc5dc3bfe6f39ced25ac094bb1251963c490d94b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cc5dc3bfe6f39ced25ac094bb1251963c490d94b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "daf3e7def7b9e5db7a32f5a20b5c4e09e3f0dd18",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/daf3e7def7b9e5db7a32f5a20b5c4e09e3f0dd18",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/daf3e7def7b9e5db7a32f5a20b5c4e09e3f0dd18"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 16,
      "deletions": 0
    },
    "files": [
      {
        "sha": "3c856ecfa66ecd0adce42a19fb57ccc2cc4d32da",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 0,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
        "patch": "@@ -207,6 +207,22 @@ static std::mutex cs_rng_state;\n static unsigned char rng_state[32] = {0};\n static uint64_t rng_counter = 0;\n \n+static void AddDataToRng(void* data, size_t len) {\n+    CSHA512 hasher;\n+    hasher.Write((const unsigned char*)&len, sizeof(len));\n+    hasher.Write((const unsigned char*)data, len);\n+    unsigned char buf[64];\n+    {\n+        std::unique_lock<std::mutex> lock(cs_rng_state);\n+        hasher.Write(rng_state, sizeof(rng_state));\n+        hasher.Write((const unsigned char*)&rng_counter, sizeof(rng_counter));\n+        ++rng_counter;\n+        hasher.Finalize(buf);\n+        memcpy(rng_state, buf + 32, 32);\n+    }\n+    memory_cleanse(buf, 64);\n+}\n+\n void GetStrongRandBytes(unsigned char* out, int num)\n {\n     assert(num <= 32);"
      }
    ]
  },
  {
    "sha": "888cce57a67c901b89c86cc645f275071d021285",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ODhjY2U1N2E2N2M5MDFiODljODZjYzY0NWYyNzUwNzFkMDIxMjg1",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-05-22T20:01:52Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-05-22T20:01:52Z"
      },
      "message": "Add perf counter data to GetStrongRandBytes state in scheduler",
      "tree": {
        "sha": "14106f6de281a105033abba873dc6007c7be7180",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/14106f6de281a105033abba873dc6007c7be7180"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/888cce57a67c901b89c86cc645f275071d021285",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/888cce57a67c901b89c86cc645f275071d021285",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/888cce57a67c901b89c86cc645f275071d021285",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/888cce57a67c901b89c86cc645f275071d021285/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/399fb8f2d0fa9cff2f461ef2c0da5b91765987f1"
      }
    ],
    "stats": {
      "total": 30,
      "additions": 30,
      "deletions": 0
    },
    "files": [
      {
        "sha": "de7553c825509cdfe873c0d3529bfdb805269f2b",
        "filename": "src/random.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 0,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/888cce57a67c901b89c86cc645f275071d021285/src/random.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/888cce57a67c901b89c86cc645f275071d021285/src/random.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.cpp?ref=888cce57a67c901b89c86cc645f275071d021285",
        "patch": "@@ -203,6 +203,23 @@ void GetRandBytes(unsigned char* buf, int num)\n     }\n }\n \n+static void AddDataToRng(void* data, size_t len);\n+\n+void RandAddSeedSleep()\n+{\n+    int64_t nPerfCounter1 = GetPerformanceCounter();\n+    std::this_thread::sleep_for(std::chrono::milliseconds(1));\n+    int64_t nPerfCounter2 = GetPerformanceCounter();\n+\n+    // Combine with and update state\n+    AddDataToRng(&nPerfCounter1, sizeof(nPerfCounter1));\n+    AddDataToRng(&nPerfCounter2, sizeof(nPerfCounter2));\n+\n+    memory_cleanse(&nPerfCounter1, sizeof(nPerfCounter1));\n+    memory_cleanse(&nPerfCounter2, sizeof(nPerfCounter2));\n+}\n+\n+\n static std::mutex cs_rng_state;\n static unsigned char rng_state[32] = {0};\n static uint64_t rng_counter = 0;"
      },
      {
        "sha": "6a63d5742920954913d29d9954cfe750305557f7",
        "filename": "src/random.h",
        "status": "modified",
        "additions": 7,
        "deletions": 0,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/888cce57a67c901b89c86cc645f275071d021285/src/random.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/888cce57a67c901b89c86cc645f275071d021285/src/random.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/random.h?ref=888cce57a67c901b89c86cc645f275071d021285",
        "patch": "@@ -23,6 +23,13 @@ uint64_t GetRand(uint64_t nMax);\n int GetRandInt(int nMax);\n uint256 GetRandHash();\n \n+/**\n+ * Add a little bit of randomness to the output of GetStrongRangBytes.\n+ * This sleeps for a millisecond, so should only be called when there is\n+ * no other work to be done.\n+ */\n+void RandAddSeedSleep();\n+\n /**\n  * Function to gather random data from multiple sources, failing whenever any\n  * of those source fail to provide a result."
      },
      {
        "sha": "923ba2c231ede81b503d4923de93571033ab0862",
        "filename": "src/scheduler.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/888cce57a67c901b89c86cc645f275071d021285/src/scheduler.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/888cce57a67c901b89c86cc645f275071d021285/src/scheduler.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/scheduler.cpp?ref=888cce57a67c901b89c86cc645f275071d021285",
        "patch": "@@ -4,6 +4,7 @@\n \n #include \"scheduler.h\"\n \n+#include \"random.h\"\n #include \"reverselock.h\"\n \n #include <assert.h>\n@@ -39,6 +40,11 @@ void CScheduler::serviceQueue()\n     // is called.\n     while (!shouldStop()) {\n         try {\n+            if (!shouldStop() && taskQueue.empty()) {\n+                reverse_lock<boost::unique_lock<boost::mutex> > rlock(lock);\n+                // Use this chance to get a tiny bit more entropy\n+                RandAddSeedSleep();\n+            }\n             while (!shouldStop() && taskQueue.empty()) {\n                 // Wait until there is something to do.\n                 newTaskScheduled.wait(lock);"
      }
    ]
  }
]