[
  {
    "sha": "985430d9b2e183c1f59a34472e413a8d00a7e6da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODU0MzBkOWIyZTE4M2MxZjU5YTM0NDcyZTQxM2E4ZDAwYTdlNmRh",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-03-02T12:47:57Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-03-03T14:19:35Z"
      },
      "message": "test: Add gui test for wallet receive requests\n\nMake sure wallet receive requests are saved and deleted correctly by GUI\ncode\n\nCo-authored-by: Jarol Rodriguez <jarolrod@tutanota.com>",
      "tree": {
        "sha": "490e87feb8f8f6b51f00d48315da00787c8aa64d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/490e87feb8f8f6b51f00d48315da00787c8aa64d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/985430d9b2e183c1f59a34472e413a8d00a7e6da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/985430d9b2e183c1f59a34472e413a8d00a7e6da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/985430d9b2e183c1f59a34472e413a8d00a7e6da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/985430d9b2e183c1f59a34472e413a8d00a7e6da/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cabe63759ce890a7d39d72f7b8046195b0edb421",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cabe63759ce890a7d39d72f7b8046195b0edb421",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cabe63759ce890a7d39d72f7b8046195b0edb421"
      }
    ],
    "stats": {
      "total": 22,
      "additions": 22,
      "deletions": 0
    },
    "files": [
      {
        "sha": "0ef1fb318a44fdcbdb5d45be1e5486837283e150",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 22,
        "deletions": 0,
        "changes": 22,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/985430d9b2e183c1f59a34472e413a8d00a7e6da/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/985430d9b2e183c1f59a34472e413a8d00a7e6da/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=985430d9b2e183c1f59a34472e413a8d00a7e6da",
        "patch": "@@ -225,6 +225,7 @@ void TestGUI(interfaces::Node& node)\n     int initialRowCount = requestTableModel->rowCount({});\n     QPushButton* requestPaymentButton = receiveCoinsDialog.findChild<QPushButton*>(\"receiveButton\");\n     requestPaymentButton->click();\n+    QString address;\n     for (QWidget* widget : QApplication::topLevelWidgets()) {\n         if (widget->inherits(\"ReceiveRequestDialog\")) {\n             ReceiveRequestDialog* receiveRequestDialog = qobject_cast<ReceiveRequestDialog*>(widget);\n@@ -233,6 +234,9 @@ void TestGUI(interfaces::Node& node)\n             QString uri = receiveRequestDialog->QObject::findChild<QLabel*>(\"uri_content\")->text();\n             QCOMPARE(uri.count(\"bitcoin:\"), 2);\n             QCOMPARE(receiveRequestDialog->QObject::findChild<QLabel*>(\"address_tag\")->text(), QString(\"Address:\"));\n+            QVERIFY(address.isEmpty());\n+            address = receiveRequestDialog->QObject::findChild<QLabel*>(\"address_content\")->text();\n+            QVERIFY(!address.isEmpty());\n \n             QCOMPARE(uri.count(\"amount=0.00000001\"), 2);\n             QCOMPARE(receiveRequestDialog->QObject::findChild<QLabel*>(\"amount_tag\")->text(), QString(\"Amount:\"));\n@@ -259,12 +263,30 @@ void TestGUI(interfaces::Node& node)\n     int currentRowCount = requestTableModel->rowCount({});\n     QCOMPARE(currentRowCount, initialRowCount+1);\n \n+    // Check addition to wallet\n+    std::vector<std::string> requests = walletModel.wallet().getDestValues(\"rr\");\n+    QCOMPARE(requests.size(), size_t{1});\n+    RecentRequestEntry entry;\n+    CDataStream{MakeUCharSpan(requests[0]), SER_DISK, CLIENT_VERSION} >> entry;\n+    QCOMPARE(entry.nVersion, int{1});\n+    QCOMPARE(entry.id, int64_t{1});\n+    QVERIFY(entry.date.isValid());\n+    QCOMPARE(entry.recipient.address, address);\n+    QCOMPARE(entry.recipient.label, QString{\"TEST_LABEL_1\"});\n+    QCOMPARE(entry.recipient.amount, CAmount{1});\n+    QCOMPARE(entry.recipient.message, QString{\"TEST_MESSAGE_1\"});\n+    QCOMPARE(entry.recipient.sPaymentRequest, std::string{});\n+    QCOMPARE(entry.recipient.authenticatedMerchant, QString{});\n+\n     // Check Remove button\n     QTableView* table = receiveCoinsDialog.findChild<QTableView*>(\"recentRequestsView\");\n     table->selectRow(currentRowCount-1);\n     QPushButton* removeRequestButton = receiveCoinsDialog.findChild<QPushButton*>(\"removeRequestButton\");\n     removeRequestButton->click();\n     QCOMPARE(requestTableModel->rowCount({}), currentRowCount-1);\n+\n+    // Check removal from wallet\n+    QCOMPARE(walletModel.wallet().getDestValues(\"rr\").size(), size_t{0});\n }\n \n } // namespace"
      }
    ]
  },
  {
    "sha": "62252c95e5aa55f33a5ef22292d5d8161fcb892a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MjI1MmM5NWU1YWE1NWYzM2E1ZWYyMjI5MmQ1ZDgxNjFmY2I4OTJh",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-04-12T17:40:43Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-03-03T14:19:35Z"
      },
      "message": "interfaces: Stop exposing wallet destdata to gui\n\nStop giving GUI access to destdata rows in database. Replace with narrow\nAPI just for saving and reading receive request information.\n\nThis simplifies code and should prevent the GUI from interfering with\nother destdata like address-used status.\n\nNote: No user-visible behavior is changing in this commit. New\nCWallet::SetAddressReceiveRequest() implementation avoids a bug in\nCWallet::AddDestData() where a modification would leave the previous\nvalue in memory while writing the new value to disk. But it doesn't\nmatter because the GUI doesn't currently expose the ability to modify\nreceive requests, only to add and erase them.",
      "tree": {
        "sha": "f234ce0a5a2d8bdeb32cd2a57188f34c4bf9fc50",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f234ce0a5a2d8bdeb32cd2a57188f34c4bf9fc50"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62252c95e5aa55f33a5ef22292d5d8161fcb892a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62252c95e5aa55f33a5ef22292d5d8161fcb892a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62252c95e5aa55f33a5ef22292d5d8161fcb892a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62252c95e5aa55f33a5ef22292d5d8161fcb892a/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "985430d9b2e183c1f59a34472e413a8d00a7e6da",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/985430d9b2e183c1f59a34472e413a8d00a7e6da",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/985430d9b2e183c1f59a34472e413a8d00a7e6da"
      }
    ],
    "stats": {
      "total": 93,
      "additions": 39,
      "deletions": 54
    },
    "files": [
      {
        "sha": "88f93321f9e52a8c30398fe254613364bc8b414e",
        "filename": "src/interfaces/wallet.h",
        "status": "modified",
        "additions": 4,
        "deletions": 7,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/interfaces/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/interfaces/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/wallet.h?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -112,14 +112,11 @@ class Wallet\n     //! Get wallet address list.\n     virtual std::vector<WalletAddress> getAddresses() = 0;\n \n-    //! Add dest data.\n-    virtual bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) = 0;\n+    //! Get receive requests.\n+    virtual std::vector<std::string> getAddressReceiveRequests() = 0;\n \n-    //! Erase dest data.\n-    virtual bool eraseDestData(const CTxDestination& dest, const std::string& key) = 0;\n-\n-    //! Get dest values with prefix.\n-    virtual std::vector<std::string> getDestValues(const std::string& prefix) = 0;\n+    //! Save or remove receive request.\n+    virtual bool setAddressReceiveRequest(const CTxDestination& dest, const std::string& id, const std::string& value) = 0;\n \n     //! Lock coin.\n     virtual void lockCoin(const COutPoint& output) = 0;"
      },
      {
        "sha": "c47b34a2b0a746d5a59e946f968f69c1e51353b1",
        "filename": "src/qt/recentrequeststablemodel.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/recentrequeststablemodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/recentrequeststablemodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/recentrequeststablemodel.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -10,18 +10,20 @@\n #include <qt/walletmodel.h>\n \n #include <clientversion.h>\n+#include <interfaces/wallet.h>\n+#include <key_io.h>\n #include <streams.h>\n+#include <util/string.h>\n \n #include <utility>\n \n RecentRequestsTableModel::RecentRequestsTableModel(WalletModel *parent) :\n     QAbstractTableModel(parent), walletModel(parent)\n {\n     // Load entries from wallet\n-    std::vector<std::string> vReceiveRequests;\n-    parent->loadReceiveRequests(vReceiveRequests);\n-    for (const std::string& request : vReceiveRequests)\n+    for (const std::string& request : parent->wallet().getAddressReceiveRequests()) {\n         addNewRequest(request);\n+    }\n \n     /* These columns must match the indices in the ColumnIndex enumeration */\n     columns << tr(\"Date\") << tr(\"Label\") << tr(\"Message\") << getAmountTitle();\n@@ -143,7 +145,7 @@ bool RecentRequestsTableModel::removeRows(int row, int count, const QModelIndex\n         for (int i = 0; i < count; ++i)\n         {\n             const RecentRequestEntry* rec = &list[row+i];\n-            if (!walletModel->saveReceiveRequest(rec->recipient.address.toStdString(), rec->id, \"\"))\n+            if (!walletModel->wallet().setAddressReceiveRequest(DecodeDestination(rec->recipient.address.toStdString()), ToString(rec->id), \"\"))\n                 return false;\n         }\n \n@@ -172,7 +174,7 @@ void RecentRequestsTableModel::addNewRequest(const SendCoinsRecipient &recipient\n     CDataStream ss(SER_DISK, CLIENT_VERSION);\n     ss << newEntry;\n \n-    if (!walletModel->saveReceiveRequest(recipient.address.toStdString(), newEntry.id, ss.str()))\n+    if (!walletModel->wallet().setAddressReceiveRequest(DecodeDestination(recipient.address.toStdString()), ToString(newEntry.id), ss.str()))\n         return;\n \n     addNewRequest(newEntry);"
      },
      {
        "sha": "708c3cc92b22038327e0e5c9e913f3255e597adf",
        "filename": "src/qt/test/wallettests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/test/wallettests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/test/wallettests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/test/wallettests.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -264,7 +264,7 @@ void TestGUI(interfaces::Node& node)\n     QCOMPARE(currentRowCount, initialRowCount+1);\n \n     // Check addition to wallet\n-    std::vector<std::string> requests = walletModel.wallet().getDestValues(\"rr\");\n+    std::vector<std::string> requests = walletModel.wallet().getAddressReceiveRequests();\n     QCOMPARE(requests.size(), size_t{1});\n     RecentRequestEntry entry;\n     CDataStream{MakeUCharSpan(requests[0]), SER_DISK, CLIENT_VERSION} >> entry;\n@@ -286,7 +286,7 @@ void TestGUI(interfaces::Node& node)\n     QCOMPARE(requestTableModel->rowCount({}), currentRowCount-1);\n \n     // Check removal from wallet\n-    QCOMPARE(walletModel.wallet().getDestValues(\"rr\").size(), size_t{0});\n+    QCOMPARE(walletModel.wallet().getAddressReceiveRequests().size(), size_t{0});\n }\n \n } // namespace"
      },
      {
        "sha": "381d1ce654a50d83ef107d32ba85db2975d94a35",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 19,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -463,25 +463,6 @@ void WalletModel::UnlockContext::CopyFrom(UnlockContext&& rhs)\n     rhs.relock = false;\n }\n \n-void WalletModel::loadReceiveRequests(std::vector<std::string>& vReceiveRequests)\n-{\n-    vReceiveRequests = m_wallet->getDestValues(\"rr\"); // receive request\n-}\n-\n-bool WalletModel::saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest)\n-{\n-    CTxDestination dest = DecodeDestination(sAddress);\n-\n-    std::stringstream ss;\n-    ss << nId;\n-    std::string key = \"rr\" + ss.str(); // \"rr\" prefix = \"receive request\" in destdata\n-\n-    if (sRequest.empty())\n-        return m_wallet->eraseDestData(dest, key);\n-    else\n-        return m_wallet->addDestData(dest, key, sRequest);\n-}\n-\n bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n {\n     CCoinControl coin_control;"
      },
      {
        "sha": "72a1671146d24f17534476b954336819d7850980",
        "filename": "src/qt/walletmodel.h",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/walletmodel.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/qt/walletmodel.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.h?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -135,9 +135,6 @@ class WalletModel : public QObject\n \n     UnlockContext requestUnlock();\n \n-    void loadReceiveRequests(std::vector<std::string>& vReceiveRequests);\n-    bool saveReceiveRequest(const std::string &sAddress, const int64_t nId, const std::string &sRequest);\n-\n     bool bumpFee(uint256 hash, uint256& new_hash);\n \n     static bool isWalletEnabled();"
      },
      {
        "sha": "9a4b077b5ac5ad38ae6710759b038132a3342ad6",
        "filename": "src/wallet/interfaces.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 12,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/interfaces.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/interfaces.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/interfaces.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -199,22 +199,14 @@ class WalletImpl : public Wallet\n         }\n         return result;\n     }\n-    bool addDestData(const CTxDestination& dest, const std::string& key, const std::string& value) override\n-    {\n+    std::vector<std::string> getAddressReceiveRequests() override {\n         LOCK(m_wallet->cs_wallet);\n-        WalletBatch batch{m_wallet->GetDatabase()};\n-        return m_wallet->AddDestData(batch, dest, key, value);\n+        return m_wallet->GetAddressReceiveRequests();\n     }\n-    bool eraseDestData(const CTxDestination& dest, const std::string& key) override\n-    {\n+    bool setAddressReceiveRequest(const CTxDestination& dest, const std::string& id, const std::string& value) override {\n         LOCK(m_wallet->cs_wallet);\n         WalletBatch batch{m_wallet->GetDatabase()};\n-        return m_wallet->EraseDestData(batch, dest, key);\n-    }\n-    std::vector<std::string> getDestValues(const std::string& prefix) override\n-    {\n-        LOCK(m_wallet->cs_wallet);\n-        return m_wallet->GetDestValues(prefix);\n+        return m_wallet->SetAddressReceiveRequest(batch, dest, id, value);\n     }\n     void lockCoin(const COutPoint& output) override\n     {"
      },
      {
        "sha": "932a0c2eca3a5d519a41ec523831bbc2953e1f0d",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -391,10 +391,10 @@ BOOST_AUTO_TEST_CASE(LoadReceiveRequests)\n     LOCK(m_wallet.cs_wallet);\n     WalletBatch batch{m_wallet.GetDatabase()};\n     m_wallet.AddDestData(batch, dest, \"misc\", \"val_misc\");\n-    m_wallet.AddDestData(batch, dest, \"rr0\", \"val_rr0\");\n-    m_wallet.AddDestData(batch, dest, \"rr1\", \"val_rr1\");\n+    m_wallet.SetAddressReceiveRequest(batch, dest, \"0\", \"val_rr0\");\n+    m_wallet.SetAddressReceiveRequest(batch, dest, \"1\", \"val_rr1\");\n \n-    auto values = m_wallet.GetDestValues(\"rr\");\n+    auto values = m_wallet.GetAddressReceiveRequests();\n     BOOST_CHECK_EQUAL(values.size(), 2U);\n     BOOST_CHECK_EQUAL(values[0], \"val_rr0\");\n     BOOST_CHECK_EQUAL(values[1], \"val_rr1\");"
      },
      {
        "sha": "56c1ea7fa68bf5f5ba04b5dd5344112605b24078",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -3798,8 +3798,9 @@ bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, st\n     return false;\n }\n \n-std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n+std::vector<std::string> CWallet::GetAddressReceiveRequests() const\n {\n+    const std::string prefix{\"rr\"};\n     std::vector<std::string> values;\n     for (const auto& address : m_address_book) {\n         for (const auto& data : address.second.destdata) {\n@@ -3811,6 +3812,20 @@ std::vector<std::string> CWallet::GetDestValues(const std::string& prefix) const\n     return values;\n }\n \n+bool CWallet::SetAddressReceiveRequest(WalletBatch& batch, const CTxDestination& dest, const std::string& id, const std::string& value)\n+{\n+    const std::string key{\"rr\" + id}; // \"rr\" prefix = \"receive request\" in destdata\n+    CAddressBookData& data = m_address_book.at(dest);\n+    if (value.empty()) {\n+        if (!batch.EraseDestData(EncodeDestination(dest), key)) return false;\n+        data.destdata.erase(key);\n+    } else {\n+        if (!batch.WriteDestData(EncodeDestination(dest), key, value)) return false;\n+        data.destdata[key] = value;\n+    }\n+    return true;\n+}\n+\n std::unique_ptr<WalletDatabase> MakeWalletDatabase(const std::string& name, const DatabaseOptions& options, DatabaseStatus& status, bilingual_str& error_string)\n {\n     // Do some checking on wallet path. It should be either a:"
      },
      {
        "sha": "58538df0af0f48034eb9743e80bf8b1c675607dc",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62252c95e5aa55f33a5ef22292d5d8161fcb892a/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "patch": "@@ -876,8 +876,6 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     void LoadDestData(const CTxDestination& dest, const std::string& key, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Look up a destination data tuple in the store, return true if found false otherwise\n     bool GetDestData(const CTxDestination& dest, const std::string& key, std::string* value) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    //! Get all destination values matching a prefix.\n-    std::vector<std::string> GetDestValues(const std::string& prefix) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime GUARDED_BY(cs_wallet){0};\n@@ -1084,6 +1082,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     bool DelAddressBook(const CTxDestination& address);\n \n+    std::vector<std::string> GetAddressReceiveRequests() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SetAddressReceiveRequest(WalletBatch& batch, const CTxDestination& dest, const std::string& id, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     unsigned int GetKeyPoolSize() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! signify that a particular wallet feature is now used."
      }
    ]
  },
  {
    "sha": "f5ba424cd44619d9b9be88b8593d69a7ba96db26",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNWJhNDI0Y2Q0NDYxOWQ5YjliZTg4Yjg1OTNkNjlhN2JhOTZkYjI2",
    "commit": {
      "author": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2020-04-12T17:40:43Z"
      },
      "committer": {
        "name": "Russell Yanofsky",
        "email": "russ@yanofsky.org",
        "date": "2021-03-03T14:19:35Z"
      },
      "message": "wallet: Add IsAddressUsed / SetAddressUsed methods\n\nThis simplifies code and adds a less cumbersome interface for accessing\naddress used information than CWallet AddDestData / EraseDestData /\nGetDestData methods.\n\nThere is no change in behavior. Lower-level walletdb DestData methods\nare also still available and not affected by this change. If there is\ninterest in consolidating destdata logic more and making it internal to\nwalletdb, #18608 could be considered as a followup.",
      "tree": {
        "sha": "95a83600db17b68cca036097fa0102053bd97018",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/95a83600db17b68cca036097fa0102053bd97018"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f5ba424cd44619d9b9be88b8593d69a7ba96db26",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5ba424cd44619d9b9be88b8593d69a7ba96db26",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f5ba424cd44619d9b9be88b8593d69a7ba96db26",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f5ba424cd44619d9b9be88b8593d69a7ba96db26/comments",
    "author": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ryanofsky",
      "id": 7133040,
      "node_id": "MDQ6VXNlcjcxMzMwNDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7133040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanofsky",
      "html_url": "https://github.com/ryanofsky",
      "followers_url": "https://api.github.com/users/ryanofsky/followers",
      "following_url": "https://api.github.com/users/ryanofsky/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanofsky/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanofsky/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanofsky/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanofsky/orgs",
      "repos_url": "https://api.github.com/users/ryanofsky/repos",
      "events_url": "https://api.github.com/users/ryanofsky/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanofsky/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62252c95e5aa55f33a5ef22292d5d8161fcb892a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62252c95e5aa55f33a5ef22292d5d8161fcb892a"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 21,
      "deletions": 29
    },
    "files": [
      {
        "sha": "471ab67b322830524ce7268da6541307e0e014bf",
        "filename": "src/wallet/test/wallet_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/test/wallet_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/test/wallet_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/test/wallet_tests.cpp?ref=f5ba424cd44619d9b9be88b8593d69a7ba96db26",
        "patch": "@@ -390,7 +390,7 @@ BOOST_AUTO_TEST_CASE(LoadReceiveRequests)\n     CTxDestination dest = PKHash();\n     LOCK(m_wallet.cs_wallet);\n     WalletBatch batch{m_wallet.GetDatabase()};\n-    m_wallet.AddDestData(batch, dest, \"misc\", \"val_misc\");\n+    m_wallet.SetAddressUsed(batch, dest, true);\n     m_wallet.SetAddressReceiveRequest(batch, dest, \"0\", \"val_rr0\");\n     m_wallet.SetAddressReceiveRequest(batch, dest, \"1\", \"val_rr1\");\n "
      },
      {
        "sha": "473205770824d62ec4d64468708769fecdbd92f0",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 17,
        "deletions": 19,
        "changes": 36,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=f5ba424cd44619d9b9be88b8593d69a7ba96db26",
        "patch": "@@ -813,12 +813,11 @@ void CWallet::SetSpentKeyState(WalletBatch& batch, const uint256& hash, unsigned\n     CTxDestination dst;\n     if (ExtractDestination(srctx->tx->vout[n].scriptPubKey, dst)) {\n         if (IsMine(dst)) {\n-            if (used && !GetDestData(dst, \"used\", nullptr)) {\n-                if (AddDestData(batch, dst, \"used\", \"p\")) { // p for \"present\", opposite of absent (null)\n+            if (used != IsAddressUsed(dst)) {\n+                if (used) {\n                     tx_destinations.insert(dst);\n                 }\n-            } else if (!used && GetDestData(dst, \"used\", nullptr)) {\n-                EraseDestData(batch, dst, \"used\");\n+                SetAddressUsed(batch, dst, used);\n             }\n         }\n     }\n@@ -834,23 +833,23 @@ bool CWallet::IsSpentKey(const uint256& hash, unsigned int n) const\n         if (!ExtractDestination(srctx->tx->vout[n].scriptPubKey, dest)) {\n             return false;\n         }\n-        if (GetDestData(dest, \"used\", nullptr)) {\n+        if (IsAddressUsed(dest)) {\n             return true;\n         }\n         if (IsLegacy()) {\n             LegacyScriptPubKeyMan* spk_man = GetLegacyScriptPubKeyMan();\n             assert(spk_man != nullptr);\n             for (const auto& keyid : GetAffectedKeys(srctx->tx->vout[n].scriptPubKey, *spk_man)) {\n                 WitnessV0KeyHash wpkh_dest(keyid);\n-                if (GetDestData(wpkh_dest, \"used\", nullptr)) {\n+                if (IsAddressUsed(wpkh_dest)) {\n                     return true;\n                 }\n                 ScriptHash sh_wpkh_dest(GetScriptForDestination(wpkh_dest));\n-                if (GetDestData(sh_wpkh_dest, \"used\", nullptr)) {\n+                if (IsAddressUsed(sh_wpkh_dest)) {\n                     return true;\n                 }\n                 PKHash pkh_dest(keyid);\n-                if (GetDestData(pkh_dest, \"used\", nullptr)) {\n+                if (IsAddressUsed(pkh_dest)) {\n                     return true;\n                 }\n             }\n@@ -3761,37 +3760,36 @@ unsigned int CWallet::ComputeTimeSmart(const CWalletTx& wtx) const\n     return nTimeSmart;\n }\n \n-bool CWallet::AddDestData(WalletBatch& batch, const CTxDestination &dest, const std::string &key, const std::string &value)\n+bool CWallet::SetAddressUsed(WalletBatch& batch, const CTxDestination& dest, bool used)\n {\n+    const std::string key{\"used\"};\n     if (std::get_if<CNoDestination>(&dest))\n         return false;\n \n+    if (!used) {\n+        if (auto* data = util::FindKey(m_address_book, dest)) data->destdata.erase(key);\n+        return batch.EraseDestData(EncodeDestination(dest), key);\n+    }\n+\n+    const std::string value{\"1\"};\n     m_address_book[dest].destdata.insert(std::make_pair(key, value));\n     return batch.WriteDestData(EncodeDestination(dest), key, value);\n }\n \n-bool CWallet::EraseDestData(WalletBatch& batch, const CTxDestination &dest, const std::string &key)\n-{\n-    if (!m_address_book[dest].destdata.erase(key))\n-        return false;\n-    return batch.EraseDestData(EncodeDestination(dest), key);\n-}\n-\n void CWallet::LoadDestData(const CTxDestination &dest, const std::string &key, const std::string &value)\n {\n     m_address_book[dest].destdata.insert(std::make_pair(key, value));\n }\n \n-bool CWallet::GetDestData(const CTxDestination &dest, const std::string &key, std::string *value) const\n+bool CWallet::IsAddressUsed(const CTxDestination& dest) const\n {\n+    const std::string key{\"used\"};\n     std::map<CTxDestination, CAddressBookData>::const_iterator i = m_address_book.find(dest);\n     if(i != m_address_book.end())\n     {\n         CAddressBookData::StringMap::const_iterator j = i->second.destdata.find(key);\n         if(j != i->second.destdata.end())\n         {\n-            if(value)\n-                *value = j->second;\n             return true;\n         }\n     }"
      },
      {
        "sha": "798993fa84255b5f51970b44ecfc89c5c2437893",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 3,
        "deletions": 9,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f5ba424cd44619d9b9be88b8593d69a7ba96db26/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=f5ba424cd44619d9b9be88b8593d69a7ba96db26",
        "patch": "@@ -865,17 +865,8 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     bool LoadMinVersion(int nVersion) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet) { AssertLockHeld(cs_wallet); nWalletVersion = nVersion; return true; }\n \n-    /**\n-     * Adds a destination data tuple to the store, and saves it to disk\n-     * When adding new fields, take care to consider how DelAddressBook should handle it!\n-     */\n-    bool AddDestData(WalletBatch& batch, const CTxDestination& dest, const std::string& key, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    //! Erases a destination data tuple in the store and on disk\n-    bool EraseDestData(WalletBatch& batch, const CTxDestination& dest, const std::string& key) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     //! Adds a destination data tuple to the store, without saving it to disk\n     void LoadDestData(const CTxDestination& dest, const std::string& key, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n-    //! Look up a destination data tuple in the store, return true if found false otherwise\n-    bool GetDestData(const CTxDestination& dest, const std::string& key, std::string* value) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n \n     //! Holds a timestamp at which point the wallet is scheduled (externally) to be relocked. Caller must arrange for actual relocking to occur via Lock().\n     int64_t nRelockTime GUARDED_BY(cs_wallet){0};\n@@ -1082,6 +1073,9 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n \n     bool DelAddressBook(const CTxDestination& address);\n \n+    bool IsAddressUsed(const CTxDestination& dest) const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+    bool SetAddressUsed(WalletBatch& batch, const CTxDestination& dest, bool used) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n+\n     std::vector<std::string> GetAddressReceiveRequests() const EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n     bool SetAddressReceiveRequest(WalletBatch& batch, const CTxDestination& dest, const std::string& id, const std::string& value) EXCLUSIVE_LOCKS_REQUIRED(cs_wallet);\n "
      }
    ]
  }
]