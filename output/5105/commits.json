[
  {
    "sha": "a96d113962b92b550a04d6ab0f580d29401039da",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOTZkMTEzOTYyYjkyYjU1MGEwNGQ2YWIwZjU4MGQyOTQwMTAzOWRh",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-20T01:17:01Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2014-10-20T17:59:12Z"
      },
      "message": "Rename CWalletInterface to CValidationInterface\n\nIt's useful for much more than wallets.",
      "tree": {
        "sha": "a4f204b5087e8aee6ee1565756a0e16c6aa4c993",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a4f204b5087e8aee6ee1565756a0e16c6aa4c993"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a96d113962b92b550a04d6ab0f580d29401039da",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a96d113962b92b550a04d6ab0f580d29401039da",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a96d113962b92b550a04d6ab0f580d29401039da",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a96d113962b92b550a04d6ab0f580d29401039da/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "84d13eef883769451ba9f77b56d9738d24474d5c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/84d13eef883769451ba9f77b56d9738d24474d5c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/84d13eef883769451ba9f77b56d9738d24474d5c"
      }
    ],
    "stats": {
      "total": 66,
      "additions": 33,
      "deletions": 33
    },
    "files": [
      {
        "sha": "273c21f12f2a7a69271eecfdd8596eb1289732f6",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a96d113962b92b550a04d6ab0f580d29401039da/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a96d113962b92b550a04d6ab0f580d29401039da/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=a96d113962b92b550a04d6ab0f580d29401039da",
        "patch": "@@ -170,7 +170,7 @@ void Shutdown()\n #ifndef WIN32\n     boost::filesystem::remove(GetPidFile());\n #endif\n-    UnregisterAllWallets();\n+    UnregisterAllValidationInterfaces();\n #ifdef ENABLE_WALLET\n     delete pwalletMain;\n     pwalletMain = NULL;\n@@ -1154,7 +1154,7 @@ bool AppInit2(boost::thread_group& threadGroup)\n         LogPrintf(\"%s\", strErrors.str());\n         LogPrintf(\" wallet      %15dms\\n\", GetTimeMillis() - nStart);\n \n-        RegisterWallet(pwalletMain);\n+        RegisterValidationInterface(pwalletMain);\n \n         CBlockIndex *pindexRescan = chainActive.Tip();\n         if (GetBoolArg(\"-rescan\", false))"
      },
      {
        "sha": "630891bd3f905d77b4efca2380007aba951aa713",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 15,
        "deletions": 15,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a96d113962b92b550a04d6ab0f580d29401039da/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a96d113962b92b550a04d6ab0f580d29401039da/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a96d113962b92b550a04d6ab0f580d29401039da",
        "patch": "@@ -156,25 +156,25 @@ struct CMainSignals {\n \n } // anon namespace\n \n-void RegisterWallet(CWalletInterface* pwalletIn) {\n-    g_signals.SyncTransaction.connect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2));\n-    g_signals.EraseTransaction.connect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n-    g_signals.UpdatedTransaction.connect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n-    g_signals.SetBestChain.connect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.Inventory.connect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n-    g_signals.Broadcast.connect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n+void RegisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.SyncTransaction.connect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n+    g_signals.EraseTransaction.connect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.connect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.SetBestChain.connect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.Inventory.connect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n+    g_signals.Broadcast.connect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n }\n \n-void UnregisterWallet(CWalletInterface* pwalletIn) {\n-    g_signals.Broadcast.disconnect(boost::bind(&CWalletInterface::ResendWalletTransactions, pwalletIn));\n-    g_signals.Inventory.disconnect(boost::bind(&CWalletInterface::Inventory, pwalletIn, _1));\n-    g_signals.SetBestChain.disconnect(boost::bind(&CWalletInterface::SetBestChain, pwalletIn, _1));\n-    g_signals.UpdatedTransaction.disconnect(boost::bind(&CWalletInterface::UpdatedTransaction, pwalletIn, _1));\n-    g_signals.EraseTransaction.disconnect(boost::bind(&CWalletInterface::EraseFromWallet, pwalletIn, _1));\n-    g_signals.SyncTransaction.disconnect(boost::bind(&CWalletInterface::SyncTransaction, pwalletIn, _1, _2));\n+void UnregisterValidationInterface(CValidationInterface* pwalletIn) {\n+    g_signals.Broadcast.disconnect(boost::bind(&CValidationInterface::ResendWalletTransactions, pwalletIn));\n+    g_signals.Inventory.disconnect(boost::bind(&CValidationInterface::Inventory, pwalletIn, _1));\n+    g_signals.SetBestChain.disconnect(boost::bind(&CValidationInterface::SetBestChain, pwalletIn, _1));\n+    g_signals.UpdatedTransaction.disconnect(boost::bind(&CValidationInterface::UpdatedTransaction, pwalletIn, _1));\n+    g_signals.EraseTransaction.disconnect(boost::bind(&CValidationInterface::EraseFromWallet, pwalletIn, _1));\n+    g_signals.SyncTransaction.disconnect(boost::bind(&CValidationInterface::SyncTransaction, pwalletIn, _1, _2));\n }\n \n-void UnregisterAllWallets() {\n+void UnregisterAllValidationInterfaces() {\n     g_signals.Broadcast.disconnect_all_slots();\n     g_signals.Inventory.disconnect_all_slots();\n     g_signals.SetBestChain.disconnect_all_slots();"
      },
      {
        "sha": "c0c1fb2707893762ccde04076d25e1b11061b859",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 14,
        "deletions": 14,
        "changes": 28,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a96d113962b92b550a04d6ab0f580d29401039da/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a96d113962b92b550a04d6ab0f580d29401039da/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=a96d113962b92b550a04d6ab0f580d29401039da",
        "patch": "@@ -129,17 +129,17 @@ class CBlockTreeDB;\n class CTxUndo;\n class CScriptCheck;\n class CValidationState;\n-class CWalletInterface;\n+class CValidationInterface;\n struct CNodeStateStats;\n \n struct CBlockTemplate;\n \n /** Register a wallet to receive updates from core */\n-void RegisterWallet(CWalletInterface* pwalletIn);\n+void RegisterValidationInterface(CValidationInterface* pwalletIn);\n /** Unregister a wallet from core */\n-void UnregisterWallet(CWalletInterface* pwalletIn);\n+void UnregisterValidationInterface(CValidationInterface* pwalletIn);\n /** Unregister all wallets from core */\n-void UnregisterAllWallets();\n+void UnregisterAllValidationInterfaces();\n /** Push an updated transaction to all registered wallets */\n void SyncWithWallets(const CTransaction& tx, const CBlock* pblock = NULL);\n \n@@ -640,17 +640,17 @@ class CMerkleBlock\n };\n \n \n-class CWalletInterface {\n+class CValidationInterface {\n protected:\n-    virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) =0;\n-    virtual void EraseFromWallet(const uint256 &hash) =0;\n-    virtual void SetBestChain(const CBlockLocator &locator) =0;\n-    virtual void UpdatedTransaction(const uint256 &hash) =0;\n-    virtual void Inventory(const uint256 &hash) =0;\n-    virtual void ResendWalletTransactions() =0;\n-    friend void ::RegisterWallet(CWalletInterface*);\n-    friend void ::UnregisterWallet(CWalletInterface*);\n-    friend void ::UnregisterAllWallets();\n+    virtual void SyncTransaction(const CTransaction &tx, const CBlock *pblock) {};\n+    virtual void EraseFromWallet(const uint256 &hash) {};\n+    virtual void SetBestChain(const CBlockLocator &locator) {};\n+    virtual void UpdatedTransaction(const uint256 &hash) {};\n+    virtual void Inventory(const uint256 &hash) {};\n+    virtual void ResendWalletTransactions() {};\n+    friend void ::RegisterValidationInterface(CValidationInterface*);\n+    friend void ::UnregisterValidationInterface(CValidationInterface*);\n+    friend void ::UnregisterAllValidationInterfaces();\n };\n \n #endif // BITCOIN_MAIN_H"
      },
      {
        "sha": "e50218d8efb5c3ef5a09c2447c3acb5e99be9043",
        "filename": "src/test/test_bitcoin.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a96d113962b92b550a04d6ab0f580d29401039da/src/test/test_bitcoin.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a96d113962b92b550a04d6ab0f580d29401039da/src/test/test_bitcoin.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/test_bitcoin.cpp?ref=a96d113962b92b550a04d6ab0f580d29401039da",
        "patch": "@@ -47,7 +47,7 @@ struct TestingSetup {\n         bool fFirstRun;\n         pwalletMain = new CWallet(\"wallet.dat\");\n         pwalletMain->LoadWallet(fFirstRun);\n-        RegisterWallet(pwalletMain);\n+        RegisterValidationInterface(pwalletMain);\n #endif\n         nScriptCheckThreads = 3;\n         for (int i=0; i < nScriptCheckThreads-1; i++)"
      },
      {
        "sha": "06706655f8db6152c4b9577e31005cccd0534319",
        "filename": "src/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a96d113962b92b550a04d6ab0f580d29401039da/src/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a96d113962b92b550a04d6ab0f580d29401039da/src/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet.h?ref=a96d113962b92b550a04d6ab0f580d29401039da",
        "patch": "@@ -95,7 +95,7 @@ class CAddressBookData\n /** A CWallet is an extension of a keystore, which also maintains a set of transactions and balances,\n  * and provides the ability to create new transactions.\n  */\n-class CWallet : public CCryptoKeyStore, public CWalletInterface\n+class CWallet : public CCryptoKeyStore, public CValidationInterface\n {\n private:\n     bool SelectCoins(const CAmount& nTargetValue, std::set<std::pair<const CWalletTx*,unsigned int> >& setCoinsRet, CAmount& nValueRet, const CCoinControl *coinControl = NULL) const;"
      }
    ]
  }
]