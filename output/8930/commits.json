[
  {
    "sha": "ec4525ccc1c1b66bc99f064348a9842e163c1324",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplYzQ1MjVjY2MxYzFiNjZiYzk5ZjA2NDM0OGE5ODQyZTE2M2MxMzI0",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-10-15T21:34:02Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-18T01:10:00Z"
      },
      "message": "Move orphan processing to ActivateBestChain\n\nThis further decouples \"main\" and \"net\" processing logic by moving\norphan processing out of the chain-connecting cs_main lock and\ninto its own cs_main lock, beside all of the other chain callbacks.\n\nOnce further decoupling of net and main processing logic occurs,\norphan handing should move to its own lock, out of cs_main.\n\nNote that this will introduce a race if there are any cases where\nwe assume the orphan map to be consistent with the current chain\ntip, however I am confident there is no such case (ATMP will fail\nwithout DoS score in all such cases).",
      "tree": {
        "sha": "d84af25c530bb832408d3cc7cfc54a8e0c2314b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d84af25c530bb832408d3cc7cfc54a8e0c2314b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ec4525ccc1c1b66bc99f064348a9842e163c1324",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec4525ccc1c1b66bc99f064348a9842e163c1324",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ec4525ccc1c1b66bc99f064348a9842e163c1324",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec4525ccc1c1b66bc99f064348a9842e163c1324/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9346f8429957e356d21c665bab59fe45bcf1f74e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9346f8429957e356d21c665bab59fe45bcf1f74e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9346f8429957e356d21c665bab59fe45bcf1f74e"
      }
    ],
    "stats": {
      "total": 47,
      "additions": 27,
      "deletions": 20
    },
    "files": [
      {
        "sha": "d587b39e64abe50de5b101c42fc1c73e81aec5f9",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 27,
        "deletions": 20,
        "changes": 47,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ec4525ccc1c1b66bc99f064348a9842e163c1324/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ec4525ccc1c1b66bc99f064348a9842e163c1324/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ec4525ccc1c1b66bc99f064348a9842e163c1324",
        "patch": "@@ -2461,7 +2461,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n \n     CCheckQueueControl<CScriptCheck> control(fScriptChecks && nScriptCheckThreads ? &scriptcheckqueue : NULL);\n \n-    std::vector<uint256> vOrphanErase;\n     std::vector<int> prevheights;\n     CAmount nFees = 0;\n     int nInputs = 0;\n@@ -2492,17 +2491,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n                 prevheights[j] = view.AccessCoins(tx.vin[j].prevout.hash)->nHeight;\n             }\n \n-            // Which orphan pool entries must we evict?\n-            for (size_t j = 0; j < tx.vin.size(); j++) {\n-                auto itByPrev = mapOrphanTransactionsByPrev.find(tx.vin[j].prevout);\n-                if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n-                for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n-                    const CTransaction& orphanTx = (*mi)->second.tx;\n-                    const uint256& orphanHash = orphanTx.GetHash();\n-                    vOrphanErase.push_back(orphanHash);\n-                }\n-            }\n-\n             if (!SequenceLocks(tx, nLockTimeFlags, &prevheights, *pindex)) {\n                 return state.DoS(100, error(\"%s: contains a non-BIP68-final transaction\", __func__),\n                                  REJECT_INVALID, \"bad-txns-nonfinal\");\n@@ -2592,14 +2580,6 @@ bool ConnectBlock(const CBlock& block, CValidationState& state, CBlockIndex* pin\n     GetMainSignals().UpdatedTransaction(hashPrevBestCoinBase);\n     hashPrevBestCoinBase = block.vtx[0].GetHash();\n \n-    // Erase orphan transactions include or precluded by this block\n-    if (vOrphanErase.size()) {\n-        int nErased = 0;\n-        BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n-            nErased += EraseOrphanTx(orphanHash);\n-        }\n-        LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n-    }\n \n     int64_t nTime6 = GetTimeMicros(); nTimeCallbacks += nTime6 - nTime5;\n     LogPrint(\"bench\", \"    - Callbacks: %.2fms [%.2fs]\\n\", 0.001 * (nTime6 - nTime5), nTimeCallbacks * 0.000001);\n@@ -3105,6 +3085,33 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n         }\n         // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n+        // Remove orphan transactions with cs_main\n+        {\n+            LOCK(cs_main);\n+            std::vector<uint256> vOrphanErase;\n+            for(unsigned int i = 0; i < txChanged.size(); i++) {\n+                const CTransaction& tx = std::get<0>(txChanged[i]);\n+                // Which orphan pool entries must we evict?\n+                for (size_t j = 0; j < tx.vin.size(); j++) {\n+                    auto itByPrev = mapOrphanTransactionsByPrev.find(tx.vin[j].prevout);\n+                    if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n+                    for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n+                        const CTransaction& orphanTx = (*mi)->second.tx;\n+                        const uint256& orphanHash = orphanTx.GetHash();\n+                        vOrphanErase.push_back(orphanHash);\n+                    }\n+                }\n+            }\n+            // Erase orphan transactions include or precluded by this block\n+            if (vOrphanErase.size()) {\n+                int nErased = 0;\n+                BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n+                    nErased += EraseOrphanTx(orphanHash);\n+                }\n+                LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n+            }\n+        }\n+\n         // Notifications/callbacks that can run without cs_main\n \n         // throw all transactions though the signal-interface"
      }
    ]
  },
  {
    "sha": "97e28029c94bc187721242a8c59468cebd73441b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5N2UyODAyOWM5NGJjMTg3NzIxMjQyYThjNTk0NjhjZWJkNzM0NDFi",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-03T18:53:12Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-18T01:10:00Z"
      },
      "message": "Erase orphans per-transaction instead of per-block",
      "tree": {
        "sha": "f0b67bdc60fd9f5d2c0cf73649acd40320ba7768",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f0b67bdc60fd9f5d2c0cf73649acd40320ba7768"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/97e28029c94bc187721242a8c59468cebd73441b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e28029c94bc187721242a8c59468cebd73441b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/97e28029c94bc187721242a8c59468cebd73441b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e28029c94bc187721242a8c59468cebd73441b/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ec4525ccc1c1b66bc99f064348a9842e163c1324",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ec4525ccc1c1b66bc99f064348a9842e163c1324",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ec4525ccc1c1b66bc99f064348a9842e163c1324"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a5b00813634ea6da9f1538bb85785f7ab38755b2",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 8,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/97e28029c94bc187721242a8c59468cebd73441b/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/97e28029c94bc187721242a8c59468cebd73441b/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=97e28029c94bc187721242a8c59468cebd73441b",
        "patch": "@@ -3088,8 +3088,8 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n         // Remove orphan transactions with cs_main\n         {\n             LOCK(cs_main);\n-            std::vector<uint256> vOrphanErase;\n             for(unsigned int i = 0; i < txChanged.size(); i++) {\n+                std::vector<uint256> vOrphanErase;\n                 const CTransaction& tx = std::get<0>(txChanged[i]);\n                 // Which orphan pool entries must we evict?\n                 for (size_t j = 0; j < tx.vin.size(); j++) {\n@@ -3101,14 +3101,15 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n                         vOrphanErase.push_back(orphanHash);\n                     }\n                 }\n-            }\n-            // Erase orphan transactions include or precluded by this block\n-            if (vOrphanErase.size()) {\n-                int nErased = 0;\n-                BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n-                    nErased += EraseOrphanTx(orphanHash);\n+\n+                // Erase orphan transactions include or precluded by this block\n+                if (vOrphanErase.size()) {\n+                    int nErased = 0;\n+                    BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n+                        nErased += EraseOrphanTx(orphanHash);\n+                    }\n+                    LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n                 }\n-                LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n             }\n         }\n "
      }
    ]
  },
  {
    "sha": "d2b88f97a1235057290f9e8ca0bf11437ba919f8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkMmI4OGY5N2ExMjM1MDU3MjkwZjllOGNhMGJmMTE0MzdiYTkxOWY4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-03T18:58:29Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2016-11-23T20:29:26Z"
      },
      "message": "Move orphan-conflict removal from main logic into a callback\n\nThis makes the orphan map a part of net-processing logic instead\nof main logic.",
      "tree": {
        "sha": "91cf817b80242a6c0e28a5353f3bc1bd750536cc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/91cf817b80242a6c0e28a5353f3bc1bd750536cc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/d2b88f97a1235057290f9e8ca0bf11437ba919f8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2b88f97a1235057290f9e8ca0bf11437ba919f8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/d2b88f97a1235057290f9e8ca0bf11437ba919f8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2b88f97a1235057290f9e8ca0bf11437ba919f8/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "97e28029c94bc187721242a8c59468cebd73441b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/97e28029c94bc187721242a8c59468cebd73441b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/97e28029c94bc187721242a8c59468cebd73441b"
      }
    ],
    "stats": {
      "total": 57,
      "additions": 29,
      "deletions": 28
    },
    "files": [
      {
        "sha": "025449ad69ba9d8113815c29b1c5e94a0954ae26",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 28,
        "deletions": 28,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2b88f97a1235057290f9e8ca0bf11437ba919f8/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2b88f97a1235057290f9e8ca0bf11437ba919f8/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=d2b88f97a1235057290f9e8ca0bf11437ba919f8",
        "patch": "@@ -3085,34 +3085,6 @@ bool ActivateBestChain(CValidationState &state, const CChainParams& chainparams,\n         }\n         // When we reach this point, we switched to a new tip (stored in pindexNewTip).\n \n-        // Remove orphan transactions with cs_main\n-        {\n-            LOCK(cs_main);\n-            for(unsigned int i = 0; i < txChanged.size(); i++) {\n-                std::vector<uint256> vOrphanErase;\n-                const CTransaction& tx = std::get<0>(txChanged[i]);\n-                // Which orphan pool entries must we evict?\n-                for (size_t j = 0; j < tx.vin.size(); j++) {\n-                    auto itByPrev = mapOrphanTransactionsByPrev.find(tx.vin[j].prevout);\n-                    if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n-                    for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n-                        const CTransaction& orphanTx = (*mi)->second.tx;\n-                        const uint256& orphanHash = orphanTx.GetHash();\n-                        vOrphanErase.push_back(orphanHash);\n-                    }\n-                }\n-\n-                // Erase orphan transactions include or precluded by this block\n-                if (vOrphanErase.size()) {\n-                    int nErased = 0;\n-                    BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n-                        nErased += EraseOrphanTx(orphanHash);\n-                    }\n-                    LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n-                }\n-            }\n-        }\n-\n         // Notifications/callbacks that can run without cs_main\n \n         // throw all transactions though the signal-interface\n@@ -4752,6 +4724,34 @@ PeerLogicValidation::PeerLogicValidation(CConnman* connmanIn) : connman(connmanI\n     recentRejects.reset(new CRollingBloomFilter(120000, 0.000001));\n }\n \n+void PeerLogicValidation::SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock) {\n+    if (nPosInBlock == CMainSignals::SYNC_TRANSACTION_NOT_IN_BLOCK)\n+        return;\n+\n+    LOCK(cs_main);\n+\n+    std::vector<uint256> vOrphanErase;\n+    // Which orphan pool entries must we evict?\n+    for (size_t j = 0; j < tx.vin.size(); j++) {\n+        auto itByPrev = mapOrphanTransactionsByPrev.find(tx.vin[j].prevout);\n+        if (itByPrev == mapOrphanTransactionsByPrev.end()) continue;\n+        for (auto mi = itByPrev->second.begin(); mi != itByPrev->second.end(); ++mi) {\n+            const CTransaction& orphanTx = (*mi)->second.tx;\n+            const uint256& orphanHash = orphanTx.GetHash();\n+            vOrphanErase.push_back(orphanHash);\n+        }\n+    }\n+\n+    // Erase orphan transactions include or precluded by this block\n+    if (vOrphanErase.size()) {\n+        int nErased = 0;\n+        BOOST_FOREACH(uint256 &orphanHash, vOrphanErase) {\n+            nErased += EraseOrphanTx(orphanHash);\n+        }\n+        LogPrint(\"mempool\", \"Erased %d orphan tx included or conflicted by block\\n\", nErased);\n+    }\n+}\n+\n void PeerLogicValidation::UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload) {\n     const int nNewHeight = pindexNew->nHeight;\n     connman->SetBestHeight(nNewHeight);"
      },
      {
        "sha": "6d4240c26ca5d956022022d516d37d6bf9b24705",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/d2b88f97a1235057290f9e8ca0bf11437ba919f8/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/d2b88f97a1235057290f9e8ca0bf11437ba919f8/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=d2b88f97a1235057290f9e8ca0bf11437ba919f8",
        "patch": "@@ -560,6 +560,7 @@ class PeerLogicValidation : public CValidationInterface {\n public:\n     PeerLogicValidation(CConnman* connmanIn);\n \n+    virtual void SyncTransaction(const CTransaction& tx, const CBlockIndex* pindex, int nPosInBlock);\n     virtual void UpdatedBlockTip(const CBlockIndex *pindexNew, const CBlockIndex *pindexFork, bool fInitialDownload);\n     virtual void BlockChecked(const CBlock& block, const CValidationState& state);\n };"
      }
    ]
  }
]