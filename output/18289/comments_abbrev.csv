practicalswift,2020-03-07 16:31:46,"Concept ACK\n\nThanks for making the code easier to read. That is appreciated by future generations of Core developers :)",https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-596105738,596105738,
vasild,2020-03-08 19:28:09,"ACK faa90a0 (code review, not tested)",https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-596242345,596242345,
MarcoFalke,2020-03-10 13:59:48,"Addressed feedback by @vasild about the doxygen comment and feedback by @promag about the lambda stylistic syntax rewording. Also, added a commit to move the banman contstant to banman.",https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-597101016,597101016,
vasild,2020-03-10 14:35:44,"ACK fa36f3a (code review, not tested)",https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-597120015,597120015,
DrahtBot,2020-03-12 23:31:40,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #17383 (Refactor: Move consts to their correct translation units by jnewbery)\n\nIf you consider this pull request importa",https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-598477009,598477009,
ajtowns,2020-03-13 08:42:01,ACK fa36f3a29538012a6eb5c3402b3b3c18fd32b230,https://github.com/bitcoin/bitcoin/pull/18289#issuecomment-598611520,598611520,
ajtowns,2020-03-07 14:13:24,"In that case, should `stop()` also `assert(nThreadsServicingQueue > 0)` at least when `drain == true`?",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389257488,389257488,src/scheduler.cpp
vasild,2020-03-07 20:06:23,I agree. Maybe relax the assert to `assert(nThreadsServicingQueue > 0 || taskQueue.empty())` because otherwise `CScheduler c; c.stop();` would assert.,https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389308471,389308471,src/scheduler.cpp
kallewoof,2020-03-08 05:16:53,Nit: `const std::chrono::milliseconds&` to avoid copy (here and below).,https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389336510,389336510,src/scheduler.cpp
vasild,2020-03-08 18:50:06,"Nit: the comment warrants `s/ (900s)//`, or even reword to something like ""How often to dump addresses to banlist.dat"". Same below for `DUMP_PEERS_INTERVAL`.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389395171,389395171,src/init.cpp
promag,2020-03-08 21:51:17,"```suggestion\n    scheduler.scheduleEvery([this] { DumpAddresses(); }, DUMP_PEERS_INTERVAL);\n```\nSame below.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389408608,389408608,src/net.cpp
practicalswift,2020-03-09 09:19:54,"Nit on nit:\n\nI'm afraid that might be a pessimisation :)\n\nFrom a performance perspective the typical rule-of-thumb recommendation is to pass ""in"" parameters by value (instead of reference to const) if the parameter has a size up to 16 bytes (""cheaply-copied"" types).\n\nThus in this case the rule-of-thumb recommendation would be to pass by value instead of reference to const.\n\n(Discla",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389539257,389539257,src/scheduler.cpp
kallewoof,2020-03-09 09:22:25,"It feels unstable to me to depend on architecture and/or implementation rather than just go for const x& when you can, but it's a nit; I'll live. :)",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r389540471,389540471,src/scheduler.cpp
ajtowns,2020-03-10 04:40:45,"`std::chrono::milliseconds` is just a 64-bit int (well, 45-bit or greater int), so passing it as `const &` means you're passing a 64-bit pointer instead, and have to deref it later.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390092118,390092118,src/scheduler.cpp
MarcoFalke,2020-03-10 13:36:24,"I don't think we can do that. The scheduler accepts events before any service thread has been started, also we can ask it to stop before any service threads have been started (they might be started later on).\n\nI will leave it as is for now.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390316409,390316409,src/scheduler.cpp
MarcoFalke,2020-03-10 13:39:23,"Leaving as is for now, to not invalidate review",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390318405,390318405,src/scheduler.cpp
MarcoFalke,2020-03-10 13:40:40,"The other feedback aside, I prefer the copy here over a reference because other arguments (like the function) *must* be copied anyway.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390319300,390319300,src/scheduler.cpp
kallewoof,2020-03-10 13:57:26,"Yep, copy seems sensible after all.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390331043,390331043,src/scheduler.cpp
MarcoFalke,2020-03-10 13:58:03,"Thanks, done.",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390331508,390331508,src/init.cpp
MarcoFalke,2020-03-10 13:58:26,"> Same below.\n\nWhere exactly?",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390331787,390331787,src/net.cpp
vasild,2020-03-10 14:10:51,[src/net_processing.cpp:1127](https://github.com/bitcoin/bitcoin/pull/18289/files#diff-eff7adeaec73a769788bb78858815c91R1127)?,https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390340704,390340704,src/net.cpp
MarcoFalke,2020-03-10 14:24:32,"`consensusParams` needs to be passed in, not just `this`",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r390351196,390351196,src/net.cpp
ajtowns,2020-03-13 08:32:11,Makes sense,https://github.com/bitcoin/bitcoin/pull/18289#discussion_r392089494,392089494,src/scheduler.cpp
jonatack,2020-03-14 18:06:27,Would this be better as a Doxygen comment?,https://github.com/bitcoin/bitcoin/pull/18289#discussion_r392607403,392607403,src/banman.h
jonatack,2020-03-14 18:15:04,"suggestion:\n```cpp\n    /**\n     * Repeat f indefinitely until the scheduler is stopped. The first run\n     * occurs after delta time.\n     *\n     * The timing is not exact; every time f finishes, it is scheduled again\n     * to run delta time later. If you need more accurate scheduling, don't\n     * use this method.\n     */\n```",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r392607951,392607951,src/scheduler.h
MarcoFalke,2020-03-16 18:21:28,"Yes, but leaving as is for now",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r393226685,393226685,src/banman.h
MarcoFalke,2020-03-16 18:21:48,"might take, if I have to force push for other reasons",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r393226869,393226869,src/scheduler.h
MarcoFalke,2020-03-18 13:37:57,"The referenced global `consensusParams` can change in tests, so it needs to be copied. Fixed in #18376 ",https://github.com/bitcoin/bitcoin/pull/18289#discussion_r394351197,394351197,src/net_processing.cpp
