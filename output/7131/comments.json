[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160512755",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-160512755",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 160512755,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDUxMjc1NQ==",
    "user": {
      "login": "pstratem",
      "id": 620611,
      "node_id": "MDQ6VXNlcjYyMDYxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/620611?u=871eabd15ac87d37f1b4d2b927fa8f33e3ad7fe3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pstratem",
      "html_url": "https://github.com/pstratem",
      "followers_url": "https://api.github.com/users/pstratem/followers",
      "following_url": "https://api.github.com/users/pstratem/following{/other_user}",
      "gists_url": "https://api.github.com/users/pstratem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pstratem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pstratem/subscriptions",
      "organizations_url": "https://api.github.com/users/pstratem/orgs",
      "repos_url": "https://api.github.com/users/pstratem/repos",
      "events_url": "https://api.github.com/users/pstratem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pstratem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T04:21:37Z",
    "updated_at": "2015-11-30T04:21:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@jtimon as this is literally only used CreateNewBlock can you also add a parameter to override per getblocktemplate call ?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160512755/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160516124",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-160516124",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 160516124,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MDUxNjEyNA==",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?u=ebfcd086973c862b08aa09906c1e68ac89265045&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-30T04:59:54Z",
    "updated_at": "2015-11-30T04:59:54Z",
    "author_association": "NONE",
    "body": "@pstratem RE: per GBT call parameter: Possible, but I don't see the use-case for that being compelling enough to overcome my laziness. I think that runtime blockmaxsize adjustment will usually be done by a human pool operator in order to tweak and optimize block propagation times. This would be easiest to perform as a fire-once-and-forget kind of tweak. The option you're suggesting would be useful for pools that want to generate e.g. empty blocks immediately after receiving a block from a peer. That would be useful, but not quite useful enough for me to want to implement it myself.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/160516124/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161057233",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-161057233",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 161057233,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA1NzIzMw==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T18:36:39Z",
    "updated_at": "2015-12-01T18:36:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you rename to `setmaxblocksize`?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161057233/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161058461",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-161058461",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 161058461,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA1ODQ2MQ==",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?u=ebfcd086973c862b08aa09906c1e68ac89265045&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T18:41:57Z",
    "updated_at": "2015-12-01T18:43:43Z",
    "author_association": "NONE",
    "body": "> Can you rename to setmaxblocksize?\n\nOnly if we want to have a different name for the RPC and for the internal variable and command line switch, or if we want to rename the internal variable and command line switch.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161058461/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161059143",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-161059143",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 161059143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTA1OTE0Mw==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-01T18:44:44Z",
    "updated_at": "2015-12-01T18:44:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm forget about renaming. It is messed up in the master already...\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161059143/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161911540",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-161911540",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 161911540,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MTkxMTU0MA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-04T08:55:46Z",
    "updated_at": "2015-12-04T08:56:40Z",
    "author_association": "MEMBER",
    "body": "> @jtimon as this is literally only used CreateNewBlock can you also add a parameter to override per getblocktemplate call ?\n\nI also like that solution more. Especially as `getblocktemplate` is designed to be extended with extra parameters by taking an object, instead of having to tack on another positional argument.\n\nChanging global parameters in RPC calls is something I'd like to avoid, especially if they only apply \"hidden parameters\" to other RPC calls instead of change processes going on in the background. Stateful APIs are something commonly regretted, it complicates concurrent usage, for example.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/161911540/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162160299",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-162160299",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 162160299,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjE2MDI5OQ==",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?u=ebfcd086973c862b08aa09906c1e68ac89265045&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T08:14:35Z",
    "updated_at": "2015-12-05T08:15:14Z",
    "author_association": "NONE",
    "body": "laanwj if we make it an argument to CreateNewBlock, then it's of no direct use to sysadmins until pool software is rewritten to take advantage of it. Even then, the use-case that I had in mind (being able to change the block size soft limit from the command line without restarting any processes) would only be possible if the pool software implements something basically the same as what I just implemented, an RPC that mutates state, but in the pool software instead of bitcoind.\n\nAs a miner, I've wanted this functionality several times, so I eventually implemented it. A pool developer might want the functionality of having an argument to getblocktemplate, but that's a different feature for a different use-case.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162160299/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168378",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-162168378",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 162168378,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjE2ODM3OA==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T10:00:45Z",
    "updated_at": "2015-12-05T10:00:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "Rebase needed.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168378/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168533",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-162168533",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 162168533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjE2ODUzMw==",
    "user": {
      "login": "paveljanik",
      "id": 6848764,
      "node_id": "MDQ6VXNlcjY4NDg3NjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6848764?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/paveljanik",
      "html_url": "https://github.com/paveljanik",
      "followers_url": "https://api.github.com/users/paveljanik/followers",
      "following_url": "https://api.github.com/users/paveljanik/following{/other_user}",
      "gists_url": "https://api.github.com/users/paveljanik/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/paveljanik/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/paveljanik/subscriptions",
      "organizations_url": "https://api.github.com/users/paveljanik/orgs",
      "repos_url": "https://api.github.com/users/paveljanik/repos",
      "events_url": "https://api.github.com/users/paveljanik/events{/privacy}",
      "received_events_url": "https://api.github.com/users/paveljanik/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T10:04:30Z",
    "updated_at": "2015-12-05T10:04:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hmm, isn't better to create one generic interface?\n\n```\n# Bigger blocks...\nsetvariable blockmaxsize 8000000\n# Enlarge mempool 300M -> 2G\nsetvariable maxmempool 2000\n# Allow less connections\nsetvariable maxconnections 4\n```\n\netc.?\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168533/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168903",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-162168903",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 162168903,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjE2ODkwMw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T10:14:55Z",
    "updated_at": "2015-12-05T10:14:55Z",
    "author_association": "MEMBER",
    "body": "That would be awesome, but would really require a total rewrite of the\nargument parsing code, as it means reevaluation of interaction with other\narguments, constraints, changing global variables (which often were\nimmutable before and thus didn't need a lock but now do...).\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162168903/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162256491",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-162256491",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 162256491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2MjI1NjQ5MQ==",
    "user": {
      "login": "GIJensen",
      "id": 16140350,
      "node_id": "MDQ6VXNlcjE2MTQwMzUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/16140350?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GIJensen",
      "html_url": "https://github.com/GIJensen",
      "followers_url": "https://api.github.com/users/GIJensen/followers",
      "following_url": "https://api.github.com/users/GIJensen/following{/other_user}",
      "gists_url": "https://api.github.com/users/GIJensen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GIJensen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GIJensen/subscriptions",
      "organizations_url": "https://api.github.com/users/GIJensen/orgs",
      "repos_url": "https://api.github.com/users/GIJensen/repos",
      "events_url": "https://api.github.com/users/GIJensen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GIJensen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-05T23:26:24Z",
    "updated_at": "2015-12-05T23:26:24Z",
    "author_association": "NONE",
    "body": "I'd really like to see the ability to set global variables via RPC calls.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/162256491/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210010884",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#issuecomment-210010884",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7131",
    "id": 210010884,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDAxMDg4NA==",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-14T15:46:57Z",
    "updated_at": "2016-04-14T15:47:34Z",
    "author_association": "MEMBER",
    "body": "Closing due to inactivity, and seems to be disagreement on how to do this.\n\nAs for setting arguments at run time through RPC in general, see #7289\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210010884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46107992",
    "pull_request_review_id": null,
    "id": 46107992,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA3OTky",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)\n+        size = (params[0].get_int64());        // rejects 0.0 amounts",
    "path": "src/rpcmining.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "nit: why the extra parens?\n",
    "created_at": "2015-11-30T04:25:50Z",
    "updated_at": "2015-11-30T04:25:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46107992",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46107992"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46107992"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46107992/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 612,
    "original_line": 612,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46108480",
    "pull_request_review_id": null,
    "id": 46108480,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTA4NDgw",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)\n+        size = (params[0].get_int64());        // rejects 0.0 amounts",
    "path": "src/rpcmining.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "No good reason. Will fix.\n\nOh, and another thing right next to it: Bitcoin Core uses unsigned ints for nBlockMaxSize, not uint64_t. This shouldn't cause any functional problems as written right now, but it's still probably worth fixing.\n",
    "created_at": "2015-11-30T04:43:38Z",
    "updated_at": "2015-11-30T04:59:23Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46108480",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46108480"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46108480"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46108480/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 612,
    "original_line": 612,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46316854",
    "pull_request_review_id": null,
    "id": 46316854,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE2ODU0",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)",
    "path": "src/rpcmining.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This accepts unbounded size? What happens when it's above 1MB?\n",
    "created_at": "2015-12-01T18:25:08Z",
    "updated_at": "2015-12-01T18:25:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46316854",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46316854"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46316854"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46316854/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 611,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317186",
    "pull_request_review_id": null,
    "id": 46317186,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE3MTg2",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)",
    "path": "src/rpcmining.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I expect it will make CreateNewBlock fail its own sanity check.\n",
    "created_at": "2015-12-01T18:27:36Z",
    "updated_at": "2015-12-01T18:27:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46317186",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317186"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46317186"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317186/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 611,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317935",
    "pull_request_review_id": null,
    "id": 46317935,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE3OTM1",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)",
    "path": "src/rpcmining.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "miner.cpp:131:         nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));\n\nIf you pass a value larger than 1000000 to setblockmaxsize, then the variable will be set to that large value. However, when it's used, it's clamped to MAX_BLOCK_SIZE-1000, so block creation continues unimpeded with valid values.\n\nThe check against an excessively low block size (< 1000 bytes) wasn't necessary either. I mostly put it in because I didn't want to think about what might go wrong with negative values.\n",
    "created_at": "2015-12-01T18:33:12Z",
    "updated_at": "2015-12-01T18:35:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46317935",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317935"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46317935"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46317935/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 611,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318207",
    "pull_request_review_id": null,
    "id": 46318207,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4MjA3",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)",
    "path": "src/rpcmining.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Agree, not really an issue (though the RPC could fail to warn the user that it's not going to do what he requests).\n",
    "created_at": "2015-12-01T18:35:09Z",
    "updated_at": "2015-12-01T18:35:09Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46318207",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318207"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46318207"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318207/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 611,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318573",
    "pull_request_review_id": null,
    "id": 46318573,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4NTcz",
    "diff_hunk": "@@ -590,6 +590,31 @@ UniValue getblocktemplate(const UniValue& params, bool fHelp)\n     return result;\n }\n \n+UniValue setblockmaxsize(const UniValue& params, bool fHelp)\n+{\n+    if (fHelp || params.size() < 1 || params.size() > 1)\n+        throw runtime_error(\n+            \"setblockmaxsize size\\n\"\n+            \"\\nSet the maximum block size in bytes for getblocktemplate.\\n\"\n+            \"\\nArguments:\\n\"\n+            \"1. size           (numeric, required) The maximum size (in bytes) of blocks to create when mining. Minimum value: 1000.\\n\"\n+            \"\\nResult\\n\"\n+            \"true|false        (boolean) Returns true if successful\\n\"\n+            \"\\nExamples:\\n\"\n+            + HelpExampleCli(\"setblockmaxsize\", \"1000000\")\n+            + HelpExampleRpc(\"setblockmaxsize\", \"1000000\")\n+        );\n+\n+    LOCK(cs_main); // need to block against getblocktemplate\n+\n+    uint64_t size = nBlockMaxSize;\n+    if (params[0].get_real() >= 1000)",
    "path": "src/rpcmining.cpp",
    "position": 22,
    "original_position": 22,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I guess a warning would be useful for clarity about its purpose at least in the help doc.\n",
    "created_at": "2015-12-01T18:37:49Z",
    "updated_at": "2015-12-01T18:37:49Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46318573",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318573"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46318573"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46318573/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 611,
    "original_line": 611,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46331948",
    "pull_request_review_id": null,
    "id": 46331948,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzMxOTQ4",
    "diff_hunk": "@@ -125,8 +126,7 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n-    // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+    // Largest block you're willing to create\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));",
    "path": "src/miner.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This line now mutates a global variable. I think you should make a copy first.\n",
    "created_at": "2015-12-01T20:11:48Z",
    "updated_at": "2015-12-01T20:11:48Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46331948",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46331948"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46331948"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46331948/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46651229",
    "pull_request_review_id": null,
    "id": 46651229,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUxMjI5",
    "diff_hunk": "@@ -125,8 +126,7 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n-    // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+    // Largest block you're willing to create\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));",
    "path": "src/miner.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Make a copy? :-/\n\nhttps://software.intel.com/en-us/blogs/2013/01/06/benign-data-races-what-could-possibly-go-wrong?page=1\n",
    "created_at": "2015-12-04T05:48:43Z",
    "updated_at": "2015-12-04T05:48:43Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46651229",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46651229"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46651229"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46651229/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755654",
    "pull_request_review_id": null,
    "id": 46755654,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1NjU0",
    "diff_hunk": "@@ -125,8 +126,7 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n-    // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+    // Largest block you're willing to create\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));",
    "path": "src/miner.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@gmaxwell The RPC changing the global variable and the copy copying it would obviously need a lock.\n",
    "created_at": "2015-12-05T07:59:17Z",
    "updated_at": "2015-12-05T07:59:17Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46755654",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755654"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46755654"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755654/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755726",
    "pull_request_review_id": null,
    "id": 46755726,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzU1NzI2",
    "diff_hunk": "@@ -125,8 +126,7 @@ CBlockTemplate* CreateNewBlock(const CChainParams& chainparams, const CScript& s\n     pblocktemplate->vTxFees.push_back(-1); // updated at end\n     pblocktemplate->vTxSigOps.push_back(-1); // updated at end\n \n-    // Largest block you're willing to create:\n-    unsigned int nBlockMaxSize = GetArg(\"-blockmaxsize\", DEFAULT_BLOCK_MAX_SIZE);\n+    // Largest block you're willing to create\n     // Limit to betweeen 1K and MAX_BLOCK_SIZE-1K for sanity:\n     nBlockMaxSize = std::max((unsigned int)1000, std::min((unsigned int)(MAX_BLOCK_SIZE-1000), nBlockMaxSize));",
    "path": "src/miner.cpp",
    "position": 16,
    "original_position": 16,
    "commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "original_commit_id": "2c79653121e5c4699241c690dc14d3e5c25220c6",
    "user": {
      "login": "jtoomim",
      "id": 11898859,
      "node_id": "MDQ6VXNlcjExODk4ODU5",
      "avatar_url": "https://avatars.githubusercontent.com/u/11898859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtoomim",
      "html_url": "https://github.com/jtoomim",
      "followers_url": "https://api.github.com/users/jtoomim/followers",
      "following_url": "https://api.github.com/users/jtoomim/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtoomim/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtoomim/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtoomim/subscriptions",
      "organizations_url": "https://api.github.com/users/jtoomim/orgs",
      "repos_url": "https://api.github.com/users/jtoomim/repos",
      "events_url": "https://api.github.com/users/jtoomim/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtoomim/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "It's a \"global\" variable that is used in exactly one function, which is the same function that you're looking at here (just down 100 lines or so), and part of the same critical section. It's locked with the same lock (cs_main) as the code that mutates it in the RPC I created.\n\nAnyway, if you don't like the way it looks, I can take a look at it again in a few days. Kinda busy with other stuff right now, though.\n",
    "created_at": "2015-12-05T08:07:28Z",
    "updated_at": "2015-12-05T08:09:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46755726",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755726"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7131#discussion_r46755726"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7131"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/46755726/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 131,
    "original_line": 131,
    "side": "RIGHT"
  }
]