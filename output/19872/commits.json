[
  {
    "sha": "0314abb56c6039ec67cbed891d21879b9bbb682a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowMzE0YWJiNTZjNjAzOWVjNjdjYmVkODkxZDIxODc5YjliYmI2ODJh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T13:22:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:17Z"
      },
      "message": "refactor: CTxMemPool::check() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "0a479d95e9202487c45111850a93a2e60f660fc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0a479d95e9202487c45111850a93a2e60f660fc5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0314abb56c6039ec67cbed891d21879b9bbb682a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD0ACgkQQQEIES5+\nqB/u+w//Y8TDoVj/vDX8Mn9P+ejuawFyH6Kwy+8cia7VITTcDQuC556HbVlMhM6P\nlJ6EVljlLz+dlcNOs0k/u1GO8DmFSsYUb8yioDm4cq3dvSj31wfOBNP5XTnx9zdr\nUF/ZsfX28nmRZLrnu9cqv60SwPQx71Tf1zsj6vBLxX/FAsSviS7sZOYCunZCTnh6\n0E/8qlEZKV3ZEhkN+gaaddaUpSXMTle98HlyCDD8HzKK/YWpQJpl/GWqYkk0kAco\n0rpvz6saO7AUOuxncc/W2ReVs2yltFkV4bG/FKjwA2rslwjpMlwDU7whoaBkIFUk\nZdESxZ5qQZ2CBlW4eXmWc3EifPJbv+ogtyqeVszsRRLnPyyMdvOSUKWFJoAsj0l6\nqbpImN3cj4sPoxsKnUlmuzBCGRte1QXIUfgBeeOTCW5WWwo0Wpvm+w3jUYjl8rIj\nXM48G2m64zY301L9nPNM7G7Q+8OlbgrzMbwhiZWcgvk6UPA62lBuZVlr4V/aW8cG\n3IIhj7asFTdPA4NKKCmfs5o7RLR4m3zyccgBWju/K4WHdclRd/ieG5n0xSa7lR5O\nXJLWgQ00MhyTPx7uy0miIAgqZusJZBulUDBg26Eooo8pefvGLW4c04bePLplYHbN\n8lg918/e2kMF211lquSDcgBjXjNuCfso5Bo1w1iggCy404qnBFc=\n=sjJl\n-----END PGP SIGNATURE-----",
        "payload": "tree 0a479d95e9202487c45111850a93a2e60f660fc5\nparent 147d50d63e07f600b414273a9f6b84f9f4ad9696\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599225752 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502397 +0300\n\nrefactor: CTxMemPool::check() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0314abb56c6039ec67cbed891d21879b9bbb682a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0314abb56c6039ec67cbed891d21879b9bbb682a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0314abb56c6039ec67cbed891d21879b9bbb682a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "147d50d63e07f600b414273a9f6b84f9f4ad9696",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/147d50d63e07f600b414273a9f6b84f9f4ad9696",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/147d50d63e07f600b414273a9f6b84f9f4ad9696"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 7,
      "deletions": 3
    },
    "files": [
      {
        "sha": "c9f516038b6c02be9e6a64bdaf047ec7efdcaa74",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0314abb56c6039ec67cbed891d21879b9bbb682a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0314abb56c6039ec67cbed891d21879b9bbb682a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0314abb56c6039ec67cbed891d21879b9bbb682a",
        "patch": "@@ -2103,6 +2103,7 @@ void PeerManager::ProcessOrphanTx(std::set<uint256>& orphan_work_set, std::list<\n             EraseOrphanTx(orphanHash);\n             done = true;\n         }\n+        LOCK(m_mempool.cs);\n         m_mempool.check(&::ChainstateActive().CoinsTip());\n     }\n }\n@@ -3002,7 +3003,10 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n         // for witness malleation.\n         if (!AlreadyHaveTx(GenTxid(/* is_wtxid=*/true, wtxid), m_mempool) &&\n             AcceptToMemoryPool(m_mempool, state, ptx, &lRemovedTxn, false /* bypass_limits */, 0 /* nAbsurdFee */)) {\n-            m_mempool.check(&::ChainstateActive().CoinsTip());\n+            {\n+                LOCK(m_mempool.cs);\n+                m_mempool.check(&::ChainstateActive().CoinsTip());\n+            }\n             RelayTransaction(tx.GetHash(), tx.GetWitnessHash(), m_connman);\n             for (unsigned int i = 0; i < tx.vout.size(); i++) {\n                 auto it_by_prev = mapOrphanTransactionsByPrev.find(COutPoint(txid, i));"
      },
      {
        "sha": "04f7a26a70c7ad6594f3032ad4099fbec37f9941",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0314abb56c6039ec67cbed891d21879b9bbb682a/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0314abb56c6039ec67cbed891d21879b9bbb682a/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=0314abb56c6039ec67cbed891d21879b9bbb682a",
        "patch": "@@ -615,7 +615,7 @@ static void CheckInputsAndUpdateCoins(const CTransaction& tx, CCoinsViewCache& m\n \n void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);\n     if (nCheckFrequency == 0)\n         return;\n "
      },
      {
        "sha": "b63e62c9876012c9ebfa06128c7a6d4e15e37318",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0314abb56c6039ec67cbed891d21879b9bbb682a/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0314abb56c6039ec67cbed891d21879b9bbb682a/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=0314abb56c6039ec67cbed891d21879b9bbb682a",
        "patch": "@@ -606,7 +606,7 @@ class CTxMemPool\n      * all inputs are in the mapNextTx array). If sanity-checking is turned off,\n      * check does nothing.\n      */\n-    void check(const CCoinsViewCache *pcoins) const;\n+    void check(const CCoinsViewCache *pcoins) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     void setSanityCheck(double dFrequency = 1.0) { LOCK(cs); nCheckFrequency = static_cast<uint32_t>(dFrequency * 4294967295.0); }\n \n     // addUnchecked must updated state for all ancestors of a given transaction,"
      }
    ]
  },
  {
    "sha": "e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMGYzZDcyYjgwMTVlNDgxNDM3NTFlYThjYjA5MGUxYjBmYjY3ZDZh",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T13:40:50Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:17Z"
      },
      "message": "refactor: CTxMemPool::GetMinFee() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "6d86fc97b870a466de0f2c4a537e67341af58f2c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6d86fc97b870a466de0f2c4a537e67341af58f2c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD0ACgkQQQEIES5+\nqB+i+w//cl6LQmryNzA2pf6Y6zXAlNUnIx3VtGctWqFVRtjvpKF3MfdiRD+6etyF\nvhDd3wulbFj9MPiUY8xNT8kusp9v30sxnIi2QLq4yVhPnAZ6qnXgteOai8dg4chg\nZcyujBUSrJMMBTrOMxF8Eg1NayVsNXIcOmCALC7TC6J0UQFoiXIKh0ZmMnydjrtl\nsfxY+Qe/9AVYhztQbfAClNX+k4ifpY+Tqgl1pCmMqshmLELrt0GGO3kWJu+yTCkf\njoXdqM1NxTuR+wEPiu4b0IbcJ/+9JW9LisRjEDVP2YSnB7TacVrZr0JNkdYoS5F9\nym5qiOfKEomRUiLaxbxbiTaO+9m+qCKPTB+y6443dTT+Q7Gvg+EJvU2Ui6HHBmwT\ng/O69KpFP/vr4Lyy91bQnpyKWLh209yDW0a6jdr79po9Sf9OQdwYVuadNo2gceoQ\nredvzR3KCRMXqg8UhzrnbTI8BjTIZ/kWOwKDg6TuaeC1lJAgIcoaxNPksJkiZERN\nw9rdFInn8Sod5pQPedcF1TWJOQuh4tSF24TT/rqJRfcgdFpqHGs7Y/3LtXJS/wf0\nuhRUJSzZozCEkFs3iIqKHDoxK44gIJqhwxhAKDf2b/gfytSA8UxuYcr8eXrwdkwU\nhCqdCEmTJRGv3wYTvptd7UxMVFFnkDqwjabXrI+nlVz2wGfUeQU=\n=UQTZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 6d86fc97b870a466de0f2c4a537e67341af58f2c\nparent 0314abb56c6039ec67cbed891d21879b9bbb682a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599226850 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502397 +0300\n\nrefactor: CTxMemPool::GetMinFee() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0314abb56c6039ec67cbed891d21879b9bbb682a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0314abb56c6039ec67cbed891d21879b9bbb682a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0314abb56c6039ec67cbed891d21879b9bbb682a"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "c97b65ffc4fa9b278348568b4b940700e58a5740",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "patch": "@@ -336,6 +336,7 @@ class ChainImpl : public Chain\n     CFeeRate mempoolMinFee() override\n     {\n         if (!m_node.mempool) return {};\n+        LOCK(m_node.mempool->cs);\n         return m_node.mempool->GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000);\n     }\n     CFeeRate relayMinFee() override { return ::minRelayTxFee; }"
      },
      {
        "sha": "77ef867576ca5448de60e10535d1ac4f1c64ade5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "patch": "@@ -4649,7 +4649,8 @@ bool PeerManager::SendMessages(CNode* pto)\n         if (pto->m_tx_relay != nullptr && pto->nVersion >= FEEFILTER_VERSION && gArgs.GetBoolArg(\"-feefilter\", DEFAULT_FEEFILTER) &&\n             !pto->HasPermission(PF_FORCERELAY) // peers with the forcerelay permission should not filter txs to us\n         ) {\n-            CAmount currentFilter = m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFeePerK();\n+            const auto min_fee = WITH_LOCK(m_mempool.cs, return m_mempool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000));\n+            CAmount currentFilter = min_fee.GetFeePerK();\n             int64_t timeNow = GetTimeMicros();\n             static FeeFilterRounder g_filter_rounder{CFeeRate{DEFAULT_MIN_RELAY_TX_FEE}};\n             if (m_chainman.ActiveChainstate().IsInitialBlockDownload()) {"
      },
      {
        "sha": "84cca1f11d3e7f23db7b8426858ee67efc23c67f",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "patch": "@@ -993,8 +993,9 @@ void CTxMemPool::UpdateParent(txiter entry, txiter parent, bool add)\n     }\n }\n \n-CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const {\n-    LOCK(cs);\n+CFeeRate CTxMemPool::GetMinFee(size_t sizelimit) const\n+{\n+    AssertLockHeld(cs);\n     if (!blockSinceLastRollingFeeBump || rollingMinimumFeeRate == 0)\n         return CFeeRate(llround(rollingMinimumFeeRate));\n "
      },
      {
        "sha": "b996c032010a135aa766b808b98d587cf4f73f96",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "patch": "@@ -694,7 +694,7 @@ class CTxMemPool\n       *  takes the fee rate to go back down all the way to 0. When the feerate\n       *  would otherwise be half of this, it is set to 0 instead.\n       */\n-    CFeeRate GetMinFee(size_t sizelimit) const;\n+    CFeeRate GetMinFee(size_t sizelimit) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Remove transactions from the mempool until its dynamic size is <= sizelimit.\n       *  pvNoSpendsRemaining, if set, will be populated with the list of outpoints"
      },
      {
        "sha": "4bd1480c57346659bab0e1fdf5a3bfd00cd57899",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "patch": "@@ -523,7 +523,8 @@ class MemPoolAccept\n     // Compare a package's feerate against minimum allowed.\n     bool CheckFeeRate(size_t package_size, CAmount package_fee, TxValidationState& state)\n     {\n-        CAmount mempoolRejectFee = m_pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000).GetFee(package_size);\n+        const auto min_fee = WITH_LOCK(m_pool.cs, return m_pool.GetMinFee(gArgs.GetArg(\"-maxmempool\", DEFAULT_MAX_MEMPOOL_SIZE) * 1000000));\n+        const CAmount mempoolRejectFee = min_fee.GetFee(package_size);\n         if (mempoolRejectFee > 0 && package_fee < mempoolRejectFee) {\n             return state.Invalid(TxValidationResult::TX_MEMPOOL_POLICY, \"mempool min fee not met\", strprintf(\"%d < %d\", package_fee, mempoolRejectFee));\n         }"
      }
    ]
  },
  {
    "sha": "ccb4694512d928b3fb4e41513f64a0cc490f25e0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjY2I0Njk0NTEyZDkyOGIzZmI0ZTQxNTEzZjY0YTBjYzQ5MGYyNWUw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T13:54:00Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:17Z"
      },
      "message": "refactor: CTxMemPool::GetTransactionAncestry() requires cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "172b3bfa43b48f6231f8814b761e1c495578b950",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/172b3bfa43b48f6231f8814b761e1c495578b950"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ccb4694512d928b3fb4e41513f64a0cc490f25e0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD0ACgkQQQEIES5+\nqB86tRAAsyFGmtNYn2RXRrQ84zML/f7j3jY8ofQ2/U6YSdi1pZ1hYnDt9actVALj\nFlwBoB21l3z8RbZk5BPwKEA7LI6IL2G8tmM+feA8ZrmXXmndfOYagLQPOQYJ+pzi\n0ZvttnQpu3co8ofOQbTkJ/UbHONw8m2oLdrcF5PUcKOJr0mdJGjnvO45T6hAuaZM\nZrF+6wCvaYqm4MwR/+7NSrYI9Lc/sz6FSJ5I4J5/LR7X6RPq5GdwhToPjLo7UbTK\nOTQSs4Mk3eMyZe73/qh8UOyx1k3I0oO/w2ZyK4poPMoWez/EU3bSy4wUy89IJ8/K\nKgv7v9IL25lTHNMkjBjHse4L1eqS6f74awqOefIWmILjxBJ+aSeC5GJHJ7LO3X6b\nangGQRnfKbHv7IQAVq1H4V7nfsTkPtr1AhSDZe+9SmARhpT0Zjc43f8BdgwmXGRR\nnbuUtUBrPnjN5ONGzP91x5+5/nwZSFYgCzoM+dHPYO1DjP4FZAII1XdTqeb8+MZo\nRM3GYLl2X3/4UOvIC5xwxMyqE5euA0pIrqY5jzEmjIKjLkodYJEuJP30ruBJ32dh\ncpGFj823GR04Ubx3sYxT5T+HNWvCOKfIyx3+8WGuNfU5zMVWhHe9Q3R/d/i0BDYn\nAF5/zUnH2PgLZZkB3lP36FX6PfdOC2e52RSxgtg1jQjEbJnkgpI=\n=MaIB\n-----END PGP SIGNATURE-----",
        "payload": "tree 172b3bfa43b48f6231f8814b761e1c495578b950\nparent e0f3d72b8015e48143751ea8cb090e1b0fb67d6a\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599227640 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502397 +0300\n\nrefactor: CTxMemPool::GetTransactionAncestry() requires cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb4694512d928b3fb4e41513f64a0cc490f25e0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb4694512d928b3fb4e41513f64a0cc490f25e0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb4694512d928b3fb4e41513f64a0cc490f25e0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e0f3d72b8015e48143751ea8cb090e1b0fb67d6a"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 6,
      "deletions": 3
    },
    "files": [
      {
        "sha": "ddd6bcd15258bd4a32a915e2d615a61415c16c74",
        "filename": "src/interfaces/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/interfaces/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/interfaces/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/chain.cpp?ref=ccb4694512d928b3fb4e41513f64a0cc490f25e0",
        "patch": "@@ -302,6 +302,7 @@ class ChainImpl : public Chain\n     {\n         ancestors = descendants = 0;\n         if (!m_node.mempool) return;\n+        LOCK(m_node.mempool->cs);\n         m_node.mempool->GetTransactionAncestry(txid, ancestors, descendants);\n     }\n     void getPackageLimits(unsigned int& limit_ancestor_count, unsigned int& limit_descendant_count) override"
      },
      {
        "sha": "a6c6a6d15b0b279ced496d210f0c37fbca3336ab",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ccb4694512d928b3fb4e41513f64a0cc490f25e0",
        "patch": "@@ -1091,8 +1091,9 @@ uint64_t CTxMemPool::CalculateDescendantMaximum(txiter entry) const {\n     return maximum;\n }\n \n-void CTxMemPool::GetTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) const {\n-    LOCK(cs);\n+void CTxMemPool::GetTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) const\n+{\n+    AssertLockHeld(cs);\n     auto it = mapTx.find(txid);\n     ancestors = descendants = 0;\n     if (it != mapTx.end()) {"
      },
      {
        "sha": "4e5510f7121802d1a21f355df77b5ea39cf33bc3",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ccb4694512d928b3fb4e41513f64a0cc490f25e0/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=ccb4694512d928b3fb4e41513f64a0cc490f25e0",
        "patch": "@@ -709,7 +709,8 @@ class CTxMemPool\n      * Calculate the ancestor and descendant count for the given transaction.\n      * The counts include the transaction itself.\n      */\n-    void GetTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) const;\n+    void GetTransactionAncestry(const uint256& txid, size_t& ancestors, size_t& descendants) const\n+        EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** @returns true if the mempool is fully loaded */\n     bool IsLoaded() const;"
      }
    ]
  },
  {
    "sha": "b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiMjU2Y2MzYTkwZWNiN2ZkZjVmZmIxMjk2MDMyOGVlOGZjZmY3YmYw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T14:08:48Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:18Z"
      },
      "message": "refactor: CTxMemPool::IsLoaded() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "04b77b7b35ad0e4cfcd5bc73cc52a29f2a0330f7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/04b77b7b35ad0e4cfcd5bc73cc52a29f2a0330f7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD4ACgkQQQEIES5+\nqB/TdA/9FcTE/f0D/6JtDyFN6aqMeLDp21M4NE8WuRZWXRkRR/3tuwTJZ2pNZfXe\nqqlqOWIrfO05zMcAo8rOP8qze0svobTLYrtEumdQLD61lbIpXAOFxqtcIIqyym+m\nEJm9kMSTrttwRtIJafTLrQfiqdYbC2Su8rzhDDzjZyYQaXhvzIEZ+AEEccJkqOAe\n4EqHb9w32NjditgbS55Cpb2jPIoMVANz+xzZ+GLTLWAEZ34n3i0Zbo0hSRL66RMq\n1/K1u3aMSpaej1YPX9Np45/JgYY/ybp/d/+L0dH47UlM/NIKQuaQSxIvBW7tDBFI\ngYrd6jTInXN09x74s4PX4lyS7ERnkJpjQFS/7M6gPPfNCy1ByUmsAWcd9NO2Y7O6\nSZBIavpAPQZPcLbftxYX+DDlrQ3Ljn/O+fFMr1SEMZBvGIWHipbZuiTukjNbbPyB\niQTCZGdy121t8S+12Peq2WlLTSjow3wXNSHpMUYRcTiCmumYFSuj7A2PVknd7XPL\n5xFOstC9sujNhL3Lr2YZo+3VaiFhb3wDTjYfYhPFCJNpfEiU8WNn5EHz6y9/xuMV\nVZpEsm7PFm65OER2iM7vGJ8kbUnGEaPdrlScIj5gI720fF6NdCvblE21bmKBP1b0\nF7hGOFIx6kThCNGJeQofV1WMFO1fSrgjzWPOIaII0qtSVjpOIVk=\n=JwDN\n-----END PGP SIGNATURE-----",
        "payload": "tree 04b77b7b35ad0e4cfcd5bc73cc52a29f2a0330f7\nparent ccb4694512d928b3fb4e41513f64a0cc490f25e0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599228528 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502398 +0300\n\nrefactor: CTxMemPool::IsLoaded() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ccb4694512d928b3fb4e41513f64a0cc490f25e0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ccb4694512d928b3fb4e41513f64a0cc490f25e0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ccb4694512d928b3fb4e41513f64a0cc490f25e0"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "b670c45a0873ad1f9267fb1342c77016acb2bcc3",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "patch": "@@ -231,7 +231,7 @@ void Shutdown(NodeContext& node)\n     node.connman.reset();\n     node.banman.reset();\n \n-    if (node.mempool && node.mempool->IsLoaded() && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n+    if (node.mempool && WITH_LOCK(node.mempool->cs, return node.mempool->IsLoaded()) && node.args->GetArg(\"-persistmempool\", DEFAULT_PERSIST_MEMPOOL)) {\n         DumpMempool(*node.mempool);\n     }\n "
      },
      {
        "sha": "23e5942d5af40bdf5c3f5f757b0208ced6d20a9a",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "patch": "@@ -1964,7 +1964,7 @@ static UniValue savemempool(const JSONRPCRequest& request)\n \n     const CTxMemPool& mempool = EnsureMemPool(request.context);\n \n-    if (!mempool.IsLoaded()) {\n+    if (!WITH_LOCK(mempool.cs, return mempool.IsLoaded())) {\n         throw JSONRPCError(RPC_MISC_ERROR, \"The mempool was not loaded yet\");\n     }\n "
      },
      {
        "sha": "336dcaabfb863632e7de09655f116fac90848951",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "patch": "@@ -1104,7 +1104,7 @@ void CTxMemPool::GetTransactionAncestry(const uint256& txid, size_t& ancestors,\n \n bool CTxMemPool::IsLoaded() const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);\n     return m_is_loaded;\n }\n "
      },
      {
        "sha": "848a272bd6433c334216b303bab195fe84984bdb",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "patch": "@@ -713,7 +713,7 @@ class CTxMemPool\n         EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** @returns true if the mempool is fully loaded */\n-    bool IsLoaded() const;\n+    bool IsLoaded() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Sets the current loaded state */\n     void SetIsLoaded(bool loaded);"
      }
    ]
  },
  {
    "sha": "e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNzlmMmE0ZTRiN2U2MmY2NDJlYjlmY2UwMTNiYWUxZmFjNDY0Yzg5",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T14:10:57Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:18Z"
      },
      "message": "refactor: CTxMemPool::size() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "60cc1d5c2096025f04154a4f98547625e2b55b78",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/60cc1d5c2096025f04154a4f98547625e2b55b78"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD4ACgkQQQEIES5+\nqB83cA//bmXr3MZLcMvTW0OGsE+UMEGFnVtAHsSFu0jCXk2QYOqr34ySlNcJkMk4\nPkZAWp/opk3SjuAa8BDgt6bf2WKBm19QlK3CYribcWzDSC9Uq810t1CSqtzDiUUj\npXu+5ntqm5hPthBxFNd2pokrOQi9X6aJKA5FFQPxcjeIdkAD7xBEaBsRBRj9h1xQ\nM5mvZQaT1jNyE3LNVB9TaOS8OQz7kjdRepcGzZdUnmX0ObXWHbdbHBpPACTOOlHB\nOllG4usgFbUeVoxNuH8fzOF7I5vTluB8bzCr+peziwN3yVUqfSaoYWk0XEeWMAR2\nLV5dfpKYOs1fWyrbDftlcbQ33WY/zaWj9C+ucEdHUO3VIiIE3e1TL6QuFz7dgIqu\n+dDil34f608CRGs63d/+Oefhv3ejKOOzz/yIZvYWaaW7Ld5XiDmY2mFShw/8x4Ei\nkU7i2LfHX5WvU1f2AekrQgRn0pPMCcsHDUwy7cb5VFDdF6Js1yv0PjRweJNJfMgD\nHx1VJ1fA0OFlshEZQnprP6HUXX09LwDHcsexKAyO/KL+0S9Y5B84FONxWhWDh1Z2\nDVtUuvLyyGk1ZERsMsEm5KeKAe9PrXeLQxFWcQGUXTTJnshhCnIBz+ARD4wDUCth\nkINY6rRrNdO5a0Q+AguJlBtUQ66qmr3RHzwABoGA4MtxYN63yKQ=\n=w0e0\n-----END PGP SIGNATURE-----",
        "payload": "tree 60cc1d5c2096025f04154a4f98547625e2b55b78\nparent b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599228657 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502398 +0300\n\nrefactor: CTxMemPool::size() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b256cc3a90ecb7fdf5ffb12960328ee8fcff7bf0"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 9,
      "deletions": 8
    },
    "files": [
      {
        "sha": "f0775be187f3915669d2b0fcd5b65ee118047682",
        "filename": "src/interfaces/node.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/interfaces/node.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/interfaces/node.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/interfaces/node.cpp?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -156,7 +156,7 @@ class NodeImpl : public Node\n     }\n     int64_t getTotalBytesRecv() override { return m_context->connman ? m_context->connman->GetTotalBytesRecv() : 0; }\n     int64_t getTotalBytesSent() override { return m_context->connman ? m_context->connman->GetTotalBytesSent() : 0; }\n-    size_t getMempoolSize() override { return m_context->mempool ? m_context->mempool->size() : 0; }\n+    size_t getMempoolSize() override { return m_context->mempool ? WITH_LOCK(m_context->mempool->cs, return m_context->mempool->size()) : 0; }\n     size_t getMempoolDynamicUsage() override { return m_context->mempool ? m_context->mempool->DynamicMemoryUsage() : 0; }\n     bool getHeaderTip(int& height, int64_t& block_time) override\n     {"
      },
      {
        "sha": "bac9f92cb45fb0d18a371a3e96959ad5f8666235",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -3022,7 +3022,8 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n             LogPrint(BCLog::MEMPOOL, \"AcceptToMemoryPool: peer=%d: accepted %s (poolsz %u txn, %u kB)\\n\",\n                 pfrom.GetId(),\n                 tx.GetHash().ToString(),\n-                m_mempool.size(), m_mempool.DynamicMemoryUsage() / 1000);\n+                WITH_LOCK(m_mempool.cs, return m_mempool.size()),\n+                m_mempool.DynamicMemoryUsage() / 1000);\n \n             // Recursively process any orphan transactions that depended on this one\n             ProcessOrphanTx(pfrom.orphan_work_set, lRemovedTxn);"
      },
      {
        "sha": "e0dddedd601399d5add10b64d6e5878629e66910",
        "filename": "src/rpc/mining.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/rpc/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/rpc/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/mining.cpp?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -432,7 +432,7 @@ static RPCHelpMan getmininginfo()\n     if (BlockAssembler::m_last_block_num_txs) obj.pushKV(\"currentblocktx\", *BlockAssembler::m_last_block_num_txs);\n     obj.pushKV(\"difficulty\",       (double)GetDifficulty(::ChainActive().Tip()));\n     obj.pushKV(\"networkhashps\",    getnetworkhashps().HandleRequest(request));\n-    obj.pushKV(\"pooledtx\",         (uint64_t)mempool.size());\n+    obj.pushKV(\"pooledtx\",         (uint64_t)(WITH_LOCK(mempool.cs, return mempool.size())));\n     obj.pushKV(\"chain\",            Params().NetworkIDString());\n     obj.pushKV(\"warnings\",         GetWarnings(false).original);\n     return obj;"
      },
      {
        "sha": "4a1ce9653c3148cf4f7c608e277b21b045cca87b",
        "filename": "src/test/txvalidation_tests.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/test/txvalidation_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/test/txvalidation_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidation_tests.cpp?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -34,7 +34,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n \n     LOCK(cs_main);\n \n-    unsigned int initialPoolSize = m_node.mempool->size();\n+    unsigned int initialPoolSize = WITH_LOCK(m_node.mempool->cs, return m_node.mempool->size());\n \n     BOOST_CHECK_EQUAL(\n             false,\n@@ -44,7 +44,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_reject_coinbase, TestChain100Setup)\n                 0 /* nAbsurdFee */));\n \n     // Check that the transaction hasn't been added to mempool.\n-    BOOST_CHECK_EQUAL(m_node.mempool->size(), initialPoolSize);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(m_node.mempool->cs, return m_node.mempool->size()), initialPoolSize);\n \n     // Check that the validation state reflects the unsuccessful attempt.\n     BOOST_CHECK(state.IsInvalid());"
      },
      {
        "sha": "92fa5a86d388ad7f7e4b4f02646e40746f300ed4",
        "filename": "src/test/txvalidationcache_tests.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/test/txvalidationcache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/test/txvalidationcache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/txvalidationcache_tests.cpp?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -92,7 +92,7 @@ BOOST_FIXTURE_TEST_CASE(tx_mempool_block_doublespend, TestChain100Setup)\n     }\n     // spends[1] should have been removed from the mempool when the\n     // block with spends[0] is accepted:\n-    BOOST_CHECK_EQUAL(m_node.mempool->size(), 0U);\n+    BOOST_CHECK_EQUAL(WITH_LOCK(m_node.mempool->cs, return m_node.mempool->size()), 0U);\n }\n \n // Run CheckInputScripts (using CoinsTip()) on the given transaction, for all script"
      },
      {
        "sha": "cf19a671f36bec8a0bda447139045b3c23b918e4",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e79f2a4e4b7e62f642eb9fce013bae1fac464c89/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "patch": "@@ -718,9 +718,9 @@ class CTxMemPool\n     /** Sets the current loaded state */\n     void SetIsLoaded(bool loaded);\n \n-    unsigned long size() const\n+    unsigned long size() const EXCLUSIVE_LOCKS_REQUIRED(cs)\n     {\n-        LOCK(cs);\n+        AssertLockHeld(cs);\n         return mapTx.size();\n     }\n "
      }
    ]
  },
  {
    "sha": "049d8c54f4f14996c347d099bbad855c0aa74bb6",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNDlkOGM1NGY0ZjE0OTk2YzM0N2QwOTliYmFkODU1YzBhYTc0YmI2",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T14:27:06Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:18Z"
      },
      "message": "refactor: CTxMemPool::exists() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "8bda09209d6f6b435fe5e1e1b2238858cb73a7be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8bda09209d6f6b435fe5e1e1b2238858cb73a7be"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/049d8c54f4f14996c347d099bbad855c0aa74bb6",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD4ACgkQQQEIES5+\nqB/vPw/+N9p9aPnd5liAlD9PH6500g0QyuEiaV5PVaub9l0HwkZFhN3CFaI9n33Z\ntktal6LwlPJVrY9r9QWxVYjN250x5IVrTctjqO5NF8zyE9fMDbZLk60DZoAAInn+\n3MWqVV9AcNXHnSmMJhOS7xPKiR43fZ2soWoYMHjAWfrNRy0EbhZKtdDdpMehgnhH\nwl1BgfACnFoUSCyTfGDEb8Z+5+HdIyTXRySuxVMRZe6lh3+tyqlHKuorMNoWExuc\nuzFyYPVvyPo8zf8j5YZYMFL9ThXFFMp8mcjsR1rMzlP2AP4PnYMUAnXSiitU3fzM\n+mqt4Prk7qTjTlk7VXvv/MOHBIpu/bOmmP5KvX0xS4GKdsSLlBXwMujmr0iAw4Pn\nnVz7/fz6qQmMJxWoDZbX4dUL1GA/nUmJMNHyn4u7shGqCGHwmLYNnSNq3kmSEiI0\n+4yRYvf3LZOCqn42PjIzCZDr1kV97vbbA7Uko5haFwy8aVzddjuYKomhtozFQXXo\nyzsXg2InBcSDcJeT3xNepROu1qS0OK7hR69swHPtLtvOOfPTY3+s7UB51AZrvCul\nE6GrD/InB9OFO/kmAHQybjCNTNWwoSMTVsXDe8XKuKUWRblyYyXYHCMI90WAR8a6\nCcuF6qA7ap0Vj+/7ddYZY7/+PiY0N/ilm7hCEXRp7tlzkQAtqNs=\n=5kzl\n-----END PGP SIGNATURE-----",
        "payload": "tree 8bda09209d6f6b435fe5e1e1b2238858cb73a7be\nparent e79f2a4e4b7e62f642eb9fce013bae1fac464c89\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599229626 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502398 +0300\n\nrefactor: CTxMemPool::exists() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/049d8c54f4f14996c347d099bbad855c0aa74bb6",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/049d8c54f4f14996c347d099bbad855c0aa74bb6",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/049d8c54f4f14996c347d099bbad855c0aa74bb6/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e79f2a4e4b7e62f642eb9fce013bae1fac464c89",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e79f2a4e4b7e62f642eb9fce013bae1fac464c89"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "1902c35aa54216b6ad3264badd8750b504a9c00a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "patch": "@@ -893,7 +893,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n \n     for (const auto& elem : unbroadcast_txids) {\n         // Sanity check: all unbroadcast txns should exist in the mempool\n-        if (m_mempool.exists(elem.first)) {\n+        if (WITH_LOCK(m_mempool.cs, return m_mempool.exists(elem.first))) {\n             LOCK(cs_main);\n             RelayTransaction(elem.first, elem.second, m_connman);\n         } else {\n@@ -1479,7 +1479,7 @@ bool static AlreadyHaveTx(const GenTxid& gtxid, const CTxMemPool& mempool) EXCLU\n         if (g_recent_confirmed_transactions->contains(hash)) return true;\n     }\n \n-    return recentRejects->contains(hash) || mempool.exists(gtxid);\n+    return recentRejects->contains(hash) || WITH_LOCK(mempool.cs, return mempool.exists(gtxid));\n }\n \n bool static AlreadyHaveBlock(const uint256& block_hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n@@ -3120,7 +3120,7 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n                 // if they were already in the mempool,\n                 // allowing the node to function as a gateway for\n                 // nodes hidden behind it.\n-                if (!m_mempool.exists(tx.GetHash())) {\n+                if (!WITH_LOCK(m_mempool.cs, return m_mempool.exists(tx.GetHash()))) {\n                     LogPrintf(\"Not relaying non-mempool transaction %s from forcerelay peer=%d\\n\", tx.GetHash().ToString(), pfrom.GetId());\n                 } else {\n                     LogPrintf(\"Force relaying tx %s from peer=%d\\n\", tx.GetHash().ToString(), pfrom.GetId());"
      },
      {
        "sha": "bcf25f3f5fe47a72e80d8837777ee06921b57801",
        "filename": "src/node/transaction.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/node/transaction.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/node/transaction.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/transaction.cpp?ref=049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "patch": "@@ -35,7 +35,7 @@ TransactionError BroadcastTransaction(NodeContext& node, const CTransactionRef t\n         // So if the output does exist, then this transaction exists in the chain.\n         if (!existingCoin.IsSpent()) return TransactionError::ALREADY_IN_CHAIN;\n     }\n-    if (!node.mempool->exists(hashTx)) {\n+    if (!WITH_LOCK(node.mempool->cs, return node.mempool->exists(hashTx))) {\n         // Transaction is not already in the mempool. Submit it.\n         TxValidationState state;\n         if (!AcceptToMemoryPool(*node.mempool, state, std::move(tx),"
      },
      {
        "sha": "4356a9108bfea57d96a70aee73af8eb68191afff",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "patch": "@@ -730,15 +730,19 @@ class CTxMemPool\n         return totalTxSize;\n     }\n \n-    bool exists(const GenTxid& gtxid) const\n+    bool exists(const GenTxid& gtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\n     {\n-        LOCK(cs);\n+        AssertLockHeld(cs);\n         if (gtxid.IsWtxid()) {\n             return (mapTx.get<index_by_wtxid>().count(gtxid.GetHash()) != 0);\n         }\n         return (mapTx.count(gtxid.GetHash()) != 0);\n     }\n-    bool exists(const uint256& txid) const { return exists(GenTxid{false, txid}); }\n+    bool exists(const uint256& txid) const EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        AssertLockHeld(cs);\n+        return exists(GenTxid{false, txid});\n+    }\n \n     CTransactionRef get(const uint256& hash) const;\n     txiter get_iter_from_wtxid(const uint256& wtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs)"
      },
      {
        "sha": "879dbc4aa3c9693404b0484d52d3087376994874",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/049d8c54f4f14996c347d099bbad855c0aa74bb6/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "patch": "@@ -5104,7 +5104,7 @@ bool LoadMempool(CTxMemPool& pool)\n                     // wallet(s) having loaded it while we were processing\n                     // mempool transactions; consider these as valid, instead of\n                     // failed, but mark them as 'already there'\n-                    if (pool.exists(tx->GetHash())) {\n+                    if (WITH_LOCK(pool.cs, return pool.exists(tx->GetHash()))) {\n                         ++already_there;\n                     } else {\n                         ++failed;"
      }
    ]
  },
  {
    "sha": "598150bb1ea985ca0b30d1f45674b63a1c497a03",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1OTgxNTBiYjFlYTk4NWNhMGIzMGQxZjQ1Njc0YjYzYTFjNDk3YTAz",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T14:45:53Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:19Z"
      },
      "message": "refactor: CTxMemPool::infoAll() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "d008078ae844c13c064894c4c85518d67be2122b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d008078ae844c13c064894c4c85518d67be2122b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/598150bb1ea985ca0b30d1f45674b63a1c497a03",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD8ACgkQQQEIES5+\nqB8jKBAAlUmrZzeq6j6sf7vJN7m8w+26v6T39ZQ5yyB23tl52Pc+N15yTqT+IsLX\nd9fT1U7n/KLuASGFvBuM1yKpd5UbQIKWIKmHzluCe5wajgz14ReEyAKJeJeM0HOL\nVOHWXJx0o5nLGKawXsK1DMyjR109mgBnB+w1lIJXzAU/8tSMdaHOxHl+/6zPxMyb\n31O4owABgbNUj5jNJOt6zQUB84Dnh/uHAPKkLXMftAh1p5r+oLYN/eKmH3Tr4isp\nmJveHA6EpxnQBbG2JbJNNKjf37xn+88/3nNcv1/qGC4J2acabvt/Al2kUgKEJlRD\nacDD9ufftgKVEt4t99jy4VO+BbjNSRNvdzk793iK6h4FQ0RP0Z5PCyb5AHpuHCHN\nYulw8/6H7+yLixRHqOIc/e7NGPlBGoelvgDw7BUM2z5oC5zpBfwKk4N6k1zzzzy/\nfPuE9//vMeuZZOnjzN03g+L22L0weat+LHRk+W0kUhj3DGLYvbnmx1PdKooktJTr\nTKEBPu2xKwXyGezefK+LXiY+47GnTtaw4UIK+C0lZGmER0VzOyTiPLEeB6f1Agou\nSg481Ta/aURvlXhvaFmZ/sReXtw87i6KN5M6RdgJNN8ZfP+RjTcnkSZbCdcLGCqB\nnPqVaxG0k2MjqYhyBco50k+SgWb2skGwwmVsxjbEmiyT39Ih4wo=\n=CRbF\n-----END PGP SIGNATURE-----",
        "payload": "tree d008078ae844c13c064894c4c85518d67be2122b\nparent 049d8c54f4f14996c347d099bbad855c0aa74bb6\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599230753 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502399 +0300\n\nrefactor: CTxMemPool::infoAll() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598150bb1ea985ca0b30d1f45674b63a1c497a03",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/598150bb1ea985ca0b30d1f45674b63a1c497a03",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598150bb1ea985ca0b30d1f45674b63a1c497a03/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/049d8c54f4f14996c347d099bbad855c0aa74bb6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/049d8c54f4f14996c347d099bbad855c0aa74bb6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e566c1310696e8ca9d33aa200202d1177b4c7722",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=598150bb1ea985ca0b30d1f45674b63a1c497a03",
        "patch": "@@ -4366,7 +4366,7 @@ bool PeerManager::SendMessages(CNode* pto)\n \n                 // Respond to BIP35 mempool requests\n                 if (fSendTrickle && pto->m_tx_relay->fSendMempool) {\n-                    auto vtxinfo = m_mempool.infoAll();\n+                    const auto vtxinfo = WITH_LOCK(m_mempool.cs, return m_mempool.infoAll());\n                     pto->m_tx_relay->fSendMempool = false;\n                     CFeeRate filterrate;\n                     {"
      },
      {
        "sha": "6c8ac88903833e80be6405232fd4875d86c034c9",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=598150bb1ea985ca0b30d1f45674b63a1c497a03",
        "patch": "@@ -795,7 +795,7 @@ static TxMempoolInfo GetInfo(CTxMemPool::indexed_transaction_set::const_iterator\n \n std::vector<TxMempoolInfo> CTxMemPool::infoAll() const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);\n     auto iters = GetSortedDepthAndScore();\n \n     std::vector<TxMempoolInfo> ret;"
      },
      {
        "sha": "ba63b7ce9d3828ee85bb0dd391774f5fc3244903",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/598150bb1ea985ca0b30d1f45674b63a1c497a03/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=598150bb1ea985ca0b30d1f45674b63a1c497a03",
        "patch": "@@ -752,7 +752,7 @@ class CTxMemPool\n     }\n     TxMempoolInfo info(const uint256& hash) const;\n     TxMempoolInfo info(const GenTxid& gtxid) const;\n-    std::vector<TxMempoolInfo> infoAll() const;\n+    std::vector<TxMempoolInfo> infoAll() const EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     size_t DynamicMemoryUsage() const;\n "
      }
    ]
  },
  {
    "sha": "551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NTFjZjFiY2YyM2ExY2FmMWViOTk4NTJmZjRmNTNkMDMyZjA3Yzgw",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T15:24:40Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:19Z"
      },
      "message": "refactor: CTxMemPool::RemoveUnbroadcastTx() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "84d69da7eba55a5fd03cefdd04704902bb9dc475",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/84d69da7eba55a5fd03cefdd04704902bb9dc475"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD8ACgkQQQEIES5+\nqB9fEA//bgGG7OmU6mmfSI3J0NgXcu+Nr2uDozeRfauOaycrfE5okPdZDgh9xLEu\nXDESC0pg2vLCF/+Aj1Pfh/r7th4VTWJYNOxIimFkUZ4PMWvWz/nRNBzYEd8Ybaia\nDWNtB2kEKqdqWxkKa8XpPffsSZYHnMKdE1qBs+09NFDRlaNla/eBnujnD47FTe/P\nP/7GXvnnTd9mgc0g1gXwyIJCwhcjdrmY/tTiicKujXn4dAosCjq4buza0WanRkQG\nUPeM3SsUnVD5EUK1Bcj0Cz2f0ZDSIoeaYkhWtGOcgMt1oFEcrzNbz1+g5nVgD/yR\nqq5oSkGOgR1iVQODDHdGebXZDjTgR/wogSxDiXUtMf/36qRBQHbHzExigjOd3sfC\nDknVVv7tlxAAuxV6e+GlVjyPE1oUQ21xpo7iwDrI3r9fHfY/PS50Kk3qKruIcAAP\nHXjrv8K9VhBGUBX1xVlMuQNbnkkFEZc4ZCC/8uFIKjk2NNqeUW1zd/sRmaQ7HmgD\ncqeUpdE3TiW4H6ghc72+3MW03s8qQ1tJ0GVACLR9hqpDKse0cMgDtHjcI7W2ru8W\nsjelSCn2Yy+8S1FvyNmIvx0ZlvkbV32EwRJMZSG/5MEIahzlFef6lc4PVzld18Z5\nLVZ2sgbYYrfjMzbvfhX6ElxeU3Ydz9ZyEbyUXeK4o/GiTzLpICg=\n=fPRR\n-----END PGP SIGNATURE-----",
        "payload": "tree 84d69da7eba55a5fd03cefdd04704902bb9dc475\nparent 598150bb1ea985ca0b30d1f45674b63a1c497a03\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599233080 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502399 +0300\n\nrefactor: CTxMemPool::RemoveUnbroadcastTx() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "598150bb1ea985ca0b30d1f45674b63a1c497a03",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/598150bb1ea985ca0b30d1f45674b63a1c497a03",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/598150bb1ea985ca0b30d1f45674b63a1c497a03"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "a75c114396935fe16d022424bc2e0a25d0c7b2ee",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
        "patch": "@@ -897,7 +897,7 @@ void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n             LOCK(cs_main);\n             RelayTransaction(elem.first, elem.second, m_connman);\n         } else {\n-            m_mempool.RemoveUnbroadcastTx(elem.first, true);\n+            WITH_LOCK(m_mempool.cs, m_mempool.RemoveUnbroadcastTx(elem.first, true));\n         }\n     }\n \n@@ -1756,11 +1756,11 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n             // WTX and WITNESS_TX imply we serialize with witness\n             int nSendFlags = (inv.IsMsgTx() ? SERIALIZE_TRANSACTION_NO_WITNESS : 0);\n             connman.PushMessage(&pfrom, msgMaker.Make(nSendFlags, NetMsgType::TX, *tx));\n-            mempool.RemoveUnbroadcastTx(tx->GetHash());\n             // As we're going to send tx, make sure its unconfirmed parents are made requestable.\n             std::vector<uint256> parent_ids_to_add;\n             {\n                 LOCK(mempool.cs);\n+                mempool.RemoveUnbroadcastTx(tx->GetHash());\n                 auto txiter = mempool.GetIter(tx->GetHash());\n                 if (txiter) {\n                     const CTxMemPoolEntry::Parents& parents = (*txiter)->GetMemPoolParentsConst();"
      },
      {
        "sha": "b651f7373f7ff75e6a1c2384448eba71474ef6c3",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
        "patch": "@@ -928,11 +928,10 @@ size_t CTxMemPool::DynamicMemoryUsage() const {\n     return memusage::MallocUsage(sizeof(CTxMemPoolEntry) + 15 * sizeof(void*)) * mapTx.size() + memusage::DynamicUsage(mapNextTx) + memusage::DynamicUsage(mapDeltas) + memusage::DynamicUsage(vTxHashes) + cachedInnerUsage;\n }\n \n-void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked) {\n-    LOCK(cs);\n-\n-    if (m_unbroadcast_txids.erase(txid))\n-    {\n+void CTxMemPool::RemoveUnbroadcastTx(const uint256& txid, const bool unchecked)\n+{\n+    AssertLockHeld(cs);\n+    if (m_unbroadcast_txids.erase(txid)) {\n         LogPrint(BCLog::MEMPOOL, \"Removed %i from set of unbroadcast txns%s\\n\", txid.GetHex(), (unchecked ? \" before confirmation that txn was sent out\" : \"\"));\n     }\n }"
      },
      {
        "sha": "658e5080b7a5e0f391084767932c2442413ac0d3",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/551cf1bcf23a1caf1eb99852ff4f53d032f07c80/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
        "patch": "@@ -766,7 +766,8 @@ class CTxMemPool\n     }\n \n     /** Removes a transaction from the unbroadcast set */\n-    void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false);\n+    void RemoveUnbroadcastTx(const uint256& txid, const bool unchecked = false)\n+        EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Returns transactions in unbroadcast set */\n     std::map<uint256, uint256> GetUnbroadcastTxs() const {"
      }
    ]
  },
  {
    "sha": "e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNTQ2ZmZkN2U0Nzg2NGVlNmQ2MGIxYmRkOWM3MzZkMDA2ZmI1NGFm",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T15:31:23Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:19Z"
      },
      "message": "refactor: CTxMemPool::GetUnbroadcastTxs() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "2d71b31dc8c5d4c41767602c41d09c0dd3c8c0bf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2d71b31dc8c5d4c41767602c41d09c0dd3c8c0bf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeD8ACgkQQQEIES5+\nqB8GTA/9Ft1n9GZXe4EeIlJX1geHwVLcqYfXpV3Jy8p89+5uJXEbYPSAiQ9RUpiH\nv9Ac3s1bZHJ0Y+2RwtcT4GALQt8NXWiYh4V6lQp+RXmQqGEnB8LkztEG3hE5Gc/9\nFRmX7CZ4zRrUOvloTHILXuE1iV5lU5MHb3cqKQFx0c1v94cw/Xhiz+8x/sUKz9Xk\nxQ6C8pKg2oXSecx2oKuuYTv+P9kioP9XzbOEn9r4YXhi6vEZKxQ8P7mkUclfcIQZ\nnvoGADrSssYqFrmmJCHU1xPtNX3f02Lx9eq4z7/SAqF5eue3ZOMaQwGwKExfoE0Y\nWXqC0OJghLaFfRsK2osiduRuLWyjSc8FqY8HLEccDNUFOnrP9kyU5I0ZbKC7AnHi\nYUEaacs7zX28pl4LgZLl8ImJk8XScgrG1vLu707h6pATEP6cVyslwqLkyyXrnj2P\nwyrXx+R1iUCs+oVKsQiaCPB11NxU7T3f11SyAoQZ3wHbeVRNT/wOHZT1Lwi1M4Fv\nf0RjhmJ/cNGUancERKBW15Dcw/l+A+XkdM9y1T3d+IPvJltF6dzwKN+GjpNKNJlD\nNbmqd0O9efXTMs5Rx5BZTiTA9izBgF3W6OfTs0C1ZKOSfD1ThyM5WY9n7/3SvkTt\nr1VmcSoVMAgYM3NolSlTd6JAFGRulMnFKIBn6vrwOJAw5T0LQJE=\n=naKH\n-----END PGP SIGNATURE-----",
        "payload": "tree 2d71b31dc8c5d4c41767602c41d09c0dd3c8c0bf\nparent 551cf1bcf23a1caf1eb99852ff4f53d032f07c80\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599233483 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502399 +0300\n\nrefactor: CTxMemPool::GetUnbroadcastTxs() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e546ffd7e47864ee6d60b1bdd9c736d006fb54af/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551cf1bcf23a1caf1eb99852ff4f53d032f07c80",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/551cf1bcf23a1caf1eb99852ff4f53d032f07c80"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "9b6a4642a5abce1d59f845c24b2ae28e793b129a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e546ffd7e47864ee6d60b1bdd9c736d006fb54af/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e546ffd7e47864ee6d60b1bdd9c736d006fb54af/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
        "patch": "@@ -889,7 +889,7 @@ void PeerManager::InitializeNode(CNode *pnode) {\n \n void PeerManager::ReattemptInitialBroadcast(CScheduler& scheduler) const\n {\n-    std::map<uint256, uint256> unbroadcast_txids = m_mempool.GetUnbroadcastTxs();\n+    std::map<uint256, uint256> unbroadcast_txids = WITH_LOCK(m_mempool.cs, return m_mempool.GetUnbroadcastTxs());\n \n     for (const auto& elem : unbroadcast_txids) {\n         // Sanity check: all unbroadcast txns should exist in the mempool"
      },
      {
        "sha": "f64209c27ad20065db1fb0080137e7fe6890468c",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e546ffd7e47864ee6d60b1bdd9c736d006fb54af/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e546ffd7e47864ee6d60b1bdd9c736d006fb54af/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
        "patch": "@@ -770,8 +770,9 @@ class CTxMemPool\n         EXCLUSIVE_LOCKS_REQUIRED(cs);\n \n     /** Returns transactions in unbroadcast set */\n-    std::map<uint256, uint256> GetUnbroadcastTxs() const {\n-        LOCK(cs);\n+    std::map<uint256, uint256> GetUnbroadcastTxs() const EXCLUSIVE_LOCKS_REQUIRED(cs)\n+    {\n+        AssertLockHeld(cs);\n         return m_unbroadcast_txids;\n     }\n "
      }
    ]
  },
  {
    "sha": "ff19c7ddb8b8b076e5c538be434abd53af572b8d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZjE5YzdkZGI4YjhiMDc2ZTVjNTM4YmU0MzRhYmQ1M2FmNTcyYjhk",
    "commit": {
      "author": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-04T15:38:32Z"
      },
      "committer": {
        "name": "Hennadii Stepanov",
        "email": "32963518+hebasto@users.noreply.github.com",
        "date": "2020-09-07T18:13:20Z"
      },
      "message": "refactor: CTxMemPool::queryHashes() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.",
      "tree": {
        "sha": "d4a209a2d5ce802cd74bfc5a22e0376ae55bdf48",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d4a209a2d5ce802cd74bfc5a22e0376ae55bdf48"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ff19c7ddb8b8b076e5c538be434abd53af572b8d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEE0dvyxLlvLev0wWZUQQEIES5+qB8FAl9WeEAACgkQQQEIES5+\nqB9F2A//TIjRTCMhOzSqY9PALsIwLdO0MguRysTXOE4LZPn3f0Z+po4JJQIHcac0\nwK0VElxuV9nJlc82R/TsqgG2bzDr4kxchb9Y9kVpZOOEfPBCrhsZbgcf9bZaQYP6\nKRIMcjFXGZqCcKbbY6sn3YfUN4WwAW4RdvUjqK+g0LZR72/2OgAuBLQkCavldtOQ\n6lse22eFlC1FuTx4NzBGBXmyDhmFKWKI2NfWZ6zdgHX4A/Y0BtvAWTluNBHacmgz\nAFEDvb1dYUveu+94S6hxQwUJlHNInKdnrhsUhcPnzrwDaDVTk4wY/swhTUE6jutL\nZmSlCk3b8NcgA/R2kBMCrkgTAaKySjy+a6Enz2tnysQz0tXe2tZOYla5db5jd5Wq\ntsh0w6RNl7/gm7bQO4gvGRNQtZhvv3L/21lgMbt6ExXNYds+ohGEbOEGD9KfdbPk\nvfchPavYmPgY+7BUs1xnjFmZu6xOBerOWSwa54SBxnjQoS0bQBq3UUoU1KemCel/\nJYs+GaJSWUNTumxU7rRog9UxV8IXT4x6Tf/+oe2df0GZbph4MOPM6QuZvk3oZMA4\nOPGLRzVokBk0fQIkgi/zRQt9VsvohG/hoA7stEmmyhQbHdyaXRaNroSzZidIYdXG\nTkD9Nr9xrtcwscrPOiiITw3WrF/ltWrYdboH35n68Qfu7jZ95fQ=\n=xXxx\n-----END PGP SIGNATURE-----",
        "payload": "tree d4a209a2d5ce802cd74bfc5a22e0376ae55bdf48\nparent e546ffd7e47864ee6d60b1bdd9c736d006fb54af\nauthor Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599233912 +0300\ncommitter Hennadii Stepanov <32963518+hebasto@users.noreply.github.com> 1599502400 +0300\n\nrefactor: CTxMemPool::queryHashes() requires CTxMemPool::cs lock\n\nNo change in behavior, some call sites already held the lock and a lock\nis added in the remaining sites.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff19c7ddb8b8b076e5c538be434abd53af572b8d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ff19c7ddb8b8b076e5c538be434abd53af572b8d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ff19c7ddb8b8b076e5c538be434abd53af572b8d/comments",
    "author": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "hebasto",
      "id": 32963518,
      "node_id": "MDQ6VXNlcjMyOTYzNTE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/32963518?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hebasto",
      "html_url": "https://github.com/hebasto",
      "followers_url": "https://api.github.com/users/hebasto/followers",
      "following_url": "https://api.github.com/users/hebasto/following{/other_user}",
      "gists_url": "https://api.github.com/users/hebasto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hebasto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hebasto/subscriptions",
      "organizations_url": "https://api.github.com/users/hebasto/orgs",
      "repos_url": "https://api.github.com/users/hebasto/repos",
      "events_url": "https://api.github.com/users/hebasto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hebasto/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e546ffd7e47864ee6d60b1bdd9c736d006fb54af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e546ffd7e47864ee6d60b1bdd9c736d006fb54af"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "7bf4739ee6344cb5d6df7825889a38e9541646c2",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=ff19c7ddb8b8b076e5c538be434abd53af572b8d",
        "patch": "@@ -500,7 +500,7 @@ UniValue MempoolToJSON(const CTxMemPool& pool, bool verbose)\n         return o;\n     } else {\n         std::vector<uint256> vtxid;\n-        pool.queryHashes(vtxid);\n+        WITH_LOCK(pool.cs, pool.queryHashes(vtxid));\n \n         UniValue a(UniValue::VARR);\n         for (const uint256& hash : vtxid)"
      },
      {
        "sha": "65c3aa9748c770b68af715a8668ba4072586b5c9",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=ff19c7ddb8b8b076e5c538be434abd53af572b8d",
        "patch": "@@ -778,7 +778,7 @@ std::vector<CTxMemPool::indexed_transaction_set::const_iterator> CTxMemPool::Get\n \n void CTxMemPool::queryHashes(std::vector<uint256>& vtxid) const\n {\n-    LOCK(cs);\n+    AssertLockHeld(cs);\n     auto iters = GetSortedDepthAndScore();\n \n     vtxid.clear();"
      },
      {
        "sha": "7d324aed8d88e00e83b57b768eabcc351d7adc9f",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ff19c7ddb8b8b076e5c538be434abd53af572b8d/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=ff19c7ddb8b8b076e5c538be434abd53af572b8d",
        "patch": "@@ -627,7 +627,7 @@ class CTxMemPool\n     void clear();\n     void _clear() EXCLUSIVE_LOCKS_REQUIRED(cs); //lock free\n     bool CompareDepthAndScore(const uint256& hasha, const uint256& hashb, bool wtxid=false);\n-    void queryHashes(std::vector<uint256>& vtxid) const;\n+    void queryHashes(std::vector<uint256>& vtxid) const EXCLUSIVE_LOCKS_REQUIRED(cs);\n     bool isSpent(const COutPoint& outpoint) const;\n     unsigned int GetTransactionsUpdated() const;\n     void AddTransactionsUpdated(unsigned int n);"
      }
    ]
  }
]