hebasto,2020-09-04 15:53:31,cc @ajtowns @jnewbery @promag @vasild,https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-687235269,687235269,
hebasto,2020-09-04 18:03:08,"Updated c22c4d2320f288f57fd04515d29b72d6342ea11a -> e79bc0f275977fafcb98a3065256222639a46328 ([pr19872.01](https://github.com/hebasto/bitcoin/commits/pr19872.01) -> [pr19872.02](https://github.com/hebasto/bitcoin/commits/pr19872.02), [diff](https://github.com/hebasto/bitcoin/compare/pr19872.01..pr19872.02)):\n- fixed CentOS 32-bit build on Travis CI\n\n",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-687299772,687299772,
DrahtBot,2020-09-04 19:01:28,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #19848 (Remove mempool global from interfaces by MarcoFalke)\n* #19791 ([net processing] Move Misbehaving() to PeerManager",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-687326233,687326233,
hebasto,2020-09-05 15:33:41,"Rebased e79bc0f275977fafcb98a3065256222639a46328 -> 2a3e7cb01f4004310e0853d182e08574698db111 ([pr19872.02](https://github.com/hebasto/bitcoin/commits/pr19872.02) -> [pr19872.03](https://github.com/hebasto/bitcoin/commits/pr19872.03)) due to the conflict with #19848.\n\n",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-687626362,687626362,
hebasto,2020-09-07 11:26:16,"Rebased 2a3e7cb01f4004310e0853d182e08574698db111 -> f594b9a4a2957b7ad2e95ad7b17cab858e15282f ([pr19872.03](https://github.com/hebasto/bitcoin/commits/pr19872.03) -> [pr19872.04](https://github.com/hebasto/bitcoin/commits/pr19872.04)) due to the conflicts with #19478 and #19556.\n\n",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688262898,688262898,
hebasto,2020-09-07 18:16:29,"Rebased f594b9a4a2957b7ad2e95ad7b17cab858e15282f -> ff19c7ddb8b8b076e5c538be434abd53af572b8d ([pr19872.04](https://github.com/hebasto/bitcoin/commits/pr19872.04) -> [pr19872.05](https://github.com/hebasto/bitcoin/commits/pr19872.05)) due to the conflict with #19791.\n\n",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688463265,688463265,
vasild,2020-09-08 12:20:55,"Concept ACK.\n\nSimilar changes are justified, assuming we want to get rid of recursive mutexes.\n\nRecursive mutexes are used by functions that need to own a mutex to do their stuff, but some of the callers of those functions own the mutex and some don't. So the function does not have a clear interface wrt the mutex, rather it has a vague interface like ""the caller may own the mutex and I wil",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688830051,688830051,
hebasto,2020-09-08 13:05:04,"Many thanks to @jnewbery, @promag and @vasild for your attention to thread safety design!\n\nLet me summarize the two approaches to preventing recursive locking of a mutex that are suggested/discussed/used in the repo:\n\n1) ""move the lock up the stack if it prevents unnecessary unlocks/locks"" (credits to @promag)\nE.g., #19833, this PR (in its current state, ff19c7ddb8b8b076e5c538be434abd53a",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688852261,688852261,
vasild,2020-09-08 13:10:38,"0. (most preferred, if possible) lock the mutex only inside the function that needs it",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688855441,688855441,
hebasto,2020-09-08 13:13:16,"> 0. (most preferred, if possible) lock the mutex only inside the function that needs it\n\nSure! I just described variants when this is not possible :)",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688856953,688856953,
hebasto,2020-09-08 13:25:03,"@promag \n> IMO we should move the lock up the stack if it prevents unnecessary unlocks/locks. That's not the case, for instance in `CTxMemPool::exists`. Looks like it's a premature change.\n\nhttps://github.com/bitcoin/bitcoin/blob/147d50d63e07f600b414273a9f6b84f9f4ad9696/src/txmempool.h#L755-L761\n\nand `mempool_tests.cpp`",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688863897,688863897,
hebasto,2020-09-08 13:36:32,"For unit tests also there is @MarcoFalke's approach (fad3a7c5b9118d4d190401c0fbbd3e2068dffadc from #19909) to subclass `CTxMemPool`, and add member functions with locking required for tests.",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-688875922,688875922,
DrahtBot,2020-09-16 00:14:20,"<!--cf906140f33d8803c4a75a2196329ecb-->\nüêô This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/19872#issuecomment-693095500,693095500,
jnewbery,2020-09-08 10:55:23,I don't understand why this change is necessary. `check()` is never currently called with the lock held.,https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484828890,484828890,src/txmempool.cpp
jnewbery,2020-09-08 11:19:40,I don't think this change is necessary. `check()` isn't currently called anywhere with the lock held.,https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484840897,484840897,src/txmempool.cpp
jnewbery,2020-09-08 11:20:16,"Again, I don't think this change is necessary. `GetTransactionAncestry()` is only called with the lock held in the tests, which can be updated.",https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484841181,484841181,src/txmempool.cpp
vasild,2020-09-08 11:53:35,It is [here](https://github.com/bitcoin/bitcoin/blob/147d50d/src/validation.cpp#L2803) (mutex locked a [little bit earlier](https://github.com/bitcoin/bitcoin/blob/147d50d/src/validation.cpp#L2728)).,https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484857676,484857676,src/txmempool.cpp
vasild,2020-09-08 12:00:27,"Right, I also saw that. I guess @hebasto preferred this approach because the changes to tests would be too big and ugly? (if we mandate that `GetTransactionAncestry()` will lock the mutex itself and the callers should not be holding it)",https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484861382,484861382,src/txmempool.cpp
hebasto,2020-09-08 13:19:45,@vasild Correct.,https://github.com/bitcoin/bitcoin/pull/19872#discussion_r484908665,484908665,src/txmempool.cpp
