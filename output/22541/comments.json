[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887793693",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-887793693",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 887793693,
    "node_id": "IC_kwDOABII58406qgd",
    "user": {
      "login": "Rspigler",
      "id": 24482484,
      "node_id": "MDQ6VXNlcjI0NDgyNDg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/24482484?u=7354800fee53a3db4ba3c6aa40de4ea8c3bf58f0&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Rspigler",
      "html_url": "https://github.com/Rspigler",
      "followers_url": "https://api.github.com/users/Rspigler/followers",
      "following_url": "https://api.github.com/users/Rspigler/following{/other_user}",
      "gists_url": "https://api.github.com/users/Rspigler/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Rspigler/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Rspigler/subscriptions",
      "organizations_url": "https://api.github.com/users/Rspigler/orgs",
      "repos_url": "https://api.github.com/users/Rspigler/repos",
      "events_url": "https://api.github.com/users/Rspigler/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Rspigler/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-27T19:57:52Z",
    "updated_at": "2021-07-27T19:57:52Z",
    "author_association": "NONE",
    "body": "Concept ACK!",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/887793693/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888369974",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888369974",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 888369974,
    "node_id": "IC_kwDOABII584083M2",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?u=13b19d1ff2f5f914e180c41418f451a4ba6f8bd1&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-28T14:45:07Z",
    "updated_at": "2021-07-28T14:51:28Z",
    "author_association": "MEMBER",
    "body": "Concept ACK. I think this is more of an `importwallet` than `restorewallet` in the sense that an external wallet file is being imported into the data directory, which is slightly more general. But no strong opinion on RPC naming (ofc, `importwallet` already exists and does something else,).\r\n\r\n> The only way to do this is to replace the wallet.dat of a newly created wallet with the backup file, which is hardly an intuitive way.\r\n\r\nI don't think the replacement part is necessary (or desirable). As I understand, you can place it in the `wallets` directory then do `loadwallet`.\r\n\r\nNeeds a RPC test.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888369974/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888728006",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888728006",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 888728006,
    "node_id": "IC_kwDOABII5840-OnG",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-29T01:24:33Z",
    "updated_at": "2021-07-29T01:25:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "> As I understand, you can place it in the wallets directory then do loadwallet\r\n\r\nThis gives error:\r\n\r\n```\r\n$ bitcoin-cli loadwallet \"B1.dat\"\r\n\r\nerror code: -4\r\nerror message:\r\nBerkeleyDatabase: Can't open database B1.dat (duplicates fileid b6050000000024007aceafe40000000000000000 from wallet.dat)\r\n```",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888728006/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888853365",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-888853365",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 888853365,
    "node_id": "IC_kwDOABII5840-tN1",
    "user": {
      "login": "S3RK",
      "id": 1466284,
      "node_id": "MDQ6VXNlcjE0NjYyODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1466284?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/S3RK",
      "html_url": "https://github.com/S3RK",
      "followers_url": "https://api.github.com/users/S3RK/followers",
      "following_url": "https://api.github.com/users/S3RK/following{/other_user}",
      "gists_url": "https://api.github.com/users/S3RK/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/S3RK/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/S3RK/subscriptions",
      "organizations_url": "https://api.github.com/users/S3RK/orgs",
      "repos_url": "https://api.github.com/users/S3RK/repos",
      "events_url": "https://api.github.com/users/S3RK/events{/privacy}",
      "received_events_url": "https://api.github.com/users/S3RK/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-29T06:56:47Z",
    "updated_at": "2021-07-29T06:56:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "@prayank23 the error says that you are trying to load *a copy* of already existing wallet. Try the same with the wallet created on another node",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/888853365/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889066564",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-889066564",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 889066564,
    "node_id": "IC_kwDOABII5840_hRE",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-29T12:14:02Z",
    "updated_at": "2021-07-29T12:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "> the error says that you are trying to load a copy of already existing wallet. Try the same with the wallet created on another node\r\n\r\nRight. Wallet will be different when users restore from backup. Because if there is already a wallet, there is no need to restore.\r\n\r\nOr it can be same in few cases?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/889066564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890109678",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-890109678",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 890109678,
    "node_id": "IC_kwDOABII5841Df7u",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-07-30T19:32:43Z",
    "updated_at": "2021-07-30T19:37:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "`test/functional/wallet_backup.py` has been changed to use the `restorewallet` command instead of manually inserting the files.\r\nThe original test stopped nodes before inserting them. As this is no longer necessary, the backup files are used to restore the wallets on the fourth node without restarting it.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/890109678/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/895682829",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-895682829",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 895682829,
    "node_id": "IC_kwDOABII5841YwkN",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T02:37:12Z",
    "updated_at": "2021-08-10T02:37:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "https://github.com/bitcoin/bitcoin/pull/22541/commits/5b0a506962fe4388db13062e105201773954e4ee: Adds a helper function to load the wallet which is used by `restorewallet` and `loadwallet`.\r\n\r\nhttps://github.com/bitcoin/bitcoin/pull/22541/commits/8f87ef44013caf78e1405ca89f8097cbde1a11b0: Increases  coverage of`restorewallet` test. Adds `restore_nonexistent_wallet` and `restore_wallet_existent_name` functions.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/895682829/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896291946",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-896291946",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 896291946,
    "node_id": "IC_kwDOABII5841bFRq",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-10T20:20:46Z",
    "updated_at": "2021-08-10T20:20:46Z",
    "author_association": "MEMBER",
    "body": "ACK 8f87ef44013caf78e1405ca89f8097cbde1a11b0",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/896291946/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898708592",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-898708592",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 898708592,
    "node_id": "IC_kwDOABII5841kTRw",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?u=9791e96cd4268d48e3517bac41eaf2b1d09759fd&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-13T20:38:44Z",
    "updated_at": "2021-08-13T20:38:44Z",
    "author_association": "MEMBER",
    "body": "re-ACK 5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898708592/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898789843",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-898789843",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 898789843,
    "node_id": "IC_kwDOABII5841knHT",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-14T01:36:24Z",
    "updated_at": "2021-08-14T01:36:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#19101](https://github.com/bitcoin/bitcoin/pull/19101) (refactor: remove ::vpwallets and related global variables by ryanofsky)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/898789843/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899026956",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-899026956",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 899026956,
    "node_id": "IC_kwDOABII5841lhAM",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?u=03240c7cca7b55e5b9239eeab7a5914663a42b91&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-15T10:09:16Z",
    "updated_at": "2021-08-15T10:10:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "tACK https://github.com/bitcoin/bitcoin/commit/5fe8100ff36fed6d50c2a25b028f57b25af3504c\r\n\r\nTested on windows with below commands:\r\n\r\n1. Create wallet W1:\r\n   ```\r\n   bitcoin-cli createwallet W1\r\n   ```\r\n2. Backup wallet:\r\n   ```\r\n   bitcoin-cli -rpcwallet=\"w1\" backupwallet \"D:\\Backups\\backup_W1.dat\"\r\n   ```\r\n3. Delete wallet directory `regtest\\wallets\\W1`\r\n4. Restore wallet from backup:\r\n   ```\r\n   bitcoin-cli restorewallet \"W1\" \"D:\\Backups\\backup_W1.dat\"\r\n   ```\r\n   \r\n   ```\r\n   {\r\n    \"name\": \"W1\",\r\n    \"warning\": \"\"\r\n   }\r\n   ```\r\n5. Check wallet info: `bitcoin-cli -rpcwallet=\"W1\" getwalletinfo`\r\n   ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899026956/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899054167",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#issuecomment-899054167",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/22541",
    "id": 899054167,
    "node_id": "IC_kwDOABII5841lnpX",
    "user": {
      "login": "meshcollider",
      "id": 3211283,
      "node_id": "MDQ6VXNlcjMyMTEyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3211283?u=447cdc9e2966cbee415545c8ff452954ee1209af&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meshcollider",
      "html_url": "https://github.com/meshcollider",
      "followers_url": "https://api.github.com/users/meshcollider/followers",
      "following_url": "https://api.github.com/users/meshcollider/following{/other_user}",
      "gists_url": "https://api.github.com/users/meshcollider/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meshcollider/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meshcollider/subscriptions",
      "organizations_url": "https://api.github.com/users/meshcollider/orgs",
      "repos_url": "https://api.github.com/users/meshcollider/repos",
      "events_url": "https://api.github.com/users/meshcollider/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meshcollider/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-08-15T13:53:49Z",
    "updated_at": "2021-08-15T13:53:49Z",
    "author_association": "MEMBER",
    "body": "Great first contribution, thank you! \ud83c\udf89 ",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/899054167/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137717",
    "pull_request_review_id": 715510843,
    "id": 677137717,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzNzcxNw==",
    "diff_hunk": "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    ",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 31,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n```",
    "created_at": "2021-07-27T05:50:51Z",
    "updated_at": "2021-07-27T06:01:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137717",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137717"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137717"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137717/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2726,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137884",
    "pull_request_review_id": 715510843,
    "id": 677137884,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzNzg4NA==",
    "diff_hunk": "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    \n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+    ",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 42,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n```",
    "created_at": "2021-07-27T05:51:13Z",
    "updated_at": "2021-07-27T06:01:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137884",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137884"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677137884"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677137884/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2737,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677138096",
    "pull_request_review_id": 715510843,
    "id": 677138096,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NzEzODA5Ng==",
    "diff_hunk": "@@ -2696,6 +2696,107 @@ static RPCHelpMan setwalletflag()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+    \n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+    \n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);\n+    std::ofstream  dst(wallet_file.string(), std::ios::binary);\n+\n+    dst << src.rdbuf();\n+\n+    dst.flush();\n+    dst.close();\n+\n+    DatabaseOptions options;\n+    options.require_existing = true;\n+    DatabaseStatus status;\n+    bilingual_str error;\n+\n+    std::vector<bilingual_str> warnings;\n+\n+    std::optional<bool> load_on_start = request.params[2].isNull() ? std::nullopt : std::optional<bool>(request.params[2].get_bool());\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*context.chain, wallet_name, load_on_start, options, status, error, warnings);\n+    ",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 76,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "b1b6a4f8e53d544ae8024442baa070aae7d5478b",
    "user": {
      "login": "prayank23",
      "id": 13405205,
      "node_id": "MDQ6VXNlcjEzNDA1MjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13405205?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prayank23",
      "html_url": "https://github.com/prayank23",
      "followers_url": "https://api.github.com/users/prayank23/followers",
      "following_url": "https://api.github.com/users/prayank23/following{/other_user}",
      "gists_url": "https://api.github.com/users/prayank23/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prayank23/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prayank23/subscriptions",
      "organizations_url": "https://api.github.com/users/prayank23/orgs",
      "repos_url": "https://api.github.com/users/prayank23/repos",
      "events_url": "https://api.github.com/users/prayank23/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prayank23/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n```",
    "created_at": "2021-07-27T05:51:40Z",
    "updated_at": "2021-07-27T06:01:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677138096",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677138096"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r677138096"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/677138096/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2771,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678377307",
    "pull_request_review_id": 717105583,
    "id": 678377307,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3ODM3NzMwNw==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`fs::copy_file`?",
    "created_at": "2021-07-28T14:49:49Z",
    "updated_at": "2021-07-28T14:49:50Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r678377307",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678377307"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r678377307"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/678377307/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2850,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679338084",
    "pull_request_review_id": 718341521,
    "id": 679338084,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTMzODA4NA==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I would really prefer a shorter command name. I think calling it just `restorewallet` is good enough.",
    "created_at": "2021-07-29T17:11:16Z",
    "updated_at": "2021-07-29T18:23:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679338084",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679338084"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679338084"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679338084/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2795,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679374353",
    "pull_request_review_id": 718341521,
    "id": 679374353,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM3NDM1Mw==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Inexistent is not a word.\r\n\r\n```suggestion\r\n        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\r\n```",
    "created_at": "2021-07-29T18:03:38Z",
    "updated_at": "2021-07-29T18:23:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679374353",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679374353"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679374353"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679374353/reactions",
      "total_count": 3,
      "+1": 3,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2826,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679381753",
    "pull_request_review_id": 718341521,
    "id": 679381753,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM4MTc1Mw==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This `if` block is entirely unnecessary. It is largely copied from `MakeWalletDatabase`. However this is incorrect since `MakeWalletDatabase` is used for both creating new wallets, and opening existing ones. In a restore RPC, we do not want the restored wallet to be copied over an existing one. So allowing existing directories and files are not correct.\r\n\r\nThis should only check to see if a something exists in the wallet dir with the name that we want. If something does, that is an error and we should fail. But it is unnecessary to implement this check by ourselves, `TryCreateDirectories` below will do that for us and return false if something does exist. So this entire `if` block is not doing anything useful, and is potentially dangerous.",
    "created_at": "2021-07-29T18:15:01Z",
    "updated_at": "2021-07-29T18:23:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679381753",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679381753"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679381753"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679381753/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2834,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2842,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679384329",
    "pull_request_review_id": 718341521,
    "id": 679384329,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTM4NDMyOQ==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The wallet will not be restored at an arbitrary path as below we are combining this with `GetWalletDir()`. I don't think we should mention paths at all for the help for `wallet_name`\r\n\r\n```suggestion\r\n            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\r\n```",
    "created_at": "2021-07-29T18:18:53Z",
    "updated_at": "2021-07-29T18:23:19Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679384329",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679384329"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679384329"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679384329/reactions",
      "total_count": 2,
      "+1": 2,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2801,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476700",
    "pull_request_review_id": 718521404,
    "id": 679476700,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NjcwMA==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    std::ifstream  src(backup_file, std::ios::binary);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 59,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-07-29T20:49:31Z",
    "updated_at": "2021-07-29T20:49:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476700",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476700"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476700"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476700/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2850,
    "side": "RIGHT",
    "in_reply_to_id": 678377307
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476916",
    "pull_request_review_id": 718521674,
    "id": 679476916,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NjkxNg==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to `restorewallet`.",
    "created_at": "2021-07-29T20:49:54Z",
    "updated_at": "2021-07-29T20:49:54Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476916",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476916"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679476916"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679476916/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2795,
    "side": "RIGHT",
    "in_reply_to_id": 679338084
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477013",
    "pull_request_review_id": 718521826,
    "id": 679477013,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NzAxMw==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 35,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Fixed.",
    "created_at": "2021-07-29T20:50:07Z",
    "updated_at": "2021-07-29T20:50:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477013",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477013"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477013"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477013/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2826,
    "side": "RIGHT",
    "in_reply_to_id": 679374353
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477520",
    "pull_request_review_id": 718522515,
    "id": 679477520,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3NzUyMA==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully. If the wallet was restored using a full path, the wallet_name will be the full path.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewalletfrombackup\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewalletfrombackup\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Inexistent backup file\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+    fs::file_type path_type = fs::symlink_status(wallet_path).type();\n+\n+    if (!(path_type == fs::file_not_found || path_type == fs::directory_file ||\n+          (path_type == fs::symlink_file && fs::is_directory(wallet_path)) ||\n+          (path_type == fs::regular_file && fs::path(wallet_name).filename() == wallet_name))) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, Untranslated(strprintf(\n+              \"Invalid -wallet path '%s'. -wallet path should point to a directory where wallet.dat and \"\n+              \"database/log.?????????? files can be stored, a location where such a directory could be created, \"\n+              \"or (for backwards compatibility) the name of an existing data file in -walletdir (%s)\",\n+              wallet_name, GetWalletDir())).original);\n+    }",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 51,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`if` block removed.",
    "created_at": "2021-07-29T20:50:57Z",
    "updated_at": "2021-07-29T20:51:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477520",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477520"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679477520"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679477520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2834,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2842,
    "side": "RIGHT",
    "in_reply_to_id": 679381753
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679478182",
    "pull_request_review_id": 718523398,
    "id": 679478182,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3OTQ3ODE4Mg==",
    "diff_hunk": "@@ -2792,6 +2792,107 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewalletfrombackup()\n+{\n+    return RPCHelpMan{\n+        \"restorewalletfrombackup\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name for the wallet. If this is a path, the wallet will be restored at the path location.\"},",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 10,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "7b1b40a05586d76ffa4723d1619dd72747a41d73",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Changed to `wallet_name` only.",
    "created_at": "2021-07-29T20:52:07Z",
    "updated_at": "2021-07-29T20:52:08Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679478182",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679478182"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r679478182"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/679478182/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2801,
    "side": "RIGHT",
    "in_reply_to_id": 679384329
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680126836",
    "pull_request_review_id": 719341366,
    "id": 680126836,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDEyNjgzNg==",
    "diff_hunk": "@@ -2792,6 +2792,94 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewallet()\n+{\n+    return RPCHelpMan{\n+        \"restorewallet\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+\n+    if (fs::exists(wallet_path)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet name already exists.\");\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 122,
    "original_position": 52,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This will return a bool, we should throw an error if it is `false`.",
    "created_at": "2021-07-30T17:57:20Z",
    "updated_at": "2021-07-30T18:00:05Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680126836",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680126836"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680126836"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680126836/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2854,
    "original_line": 2854,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680135441",
    "pull_request_review_id": 719352772,
    "id": 680135441,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDEzNTQ0MQ==",
    "diff_hunk": "@@ -2792,6 +2792,94 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewallet()\n+{\n+    return RPCHelpMan{\n+        \"restorewallet\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+\n+    if (fs::exists(wallet_path)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet name already exists.\");\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 122,
    "original_position": 52,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "According to the [documentation](https://www.boost.org/doc/libs/1_58_0/libs/filesystem/doc/reference.html#copy_file), the return type is void, but throws an error if it cannot copy.\r\nSo try/catch can be used instead.\r\n\r\n```suggestion\r\n    try\r\n    {\r\n        fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);\r\n    } catch (const boost::filesystem::filesystem_error& e)\r\n    {\r\n        throw JSONRPCError(RPC_MISC_ERROR, \"Unable to copy backup file.\");\r\n    }\r\n```",
    "created_at": "2021-07-30T18:13:35Z",
    "updated_at": "2021-07-30T18:13:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680135441",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680135441"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680135441"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680135441/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2854,
    "original_line": 2854,
    "side": "RIGHT",
    "in_reply_to_id": 680126836
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143817",
    "pull_request_review_id": 719363440,
    "id": 680143817,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4MDE0MzgxNw==",
    "diff_hunk": "@@ -2792,6 +2792,94 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewallet()\n+{\n+    return RPCHelpMan{\n+        \"restorewallet\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+\n+    if (fs::exists(wallet_path)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet name already exists.\");\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);",
    "path": "src/wallet/rpcwallet.cpp",
    "position": 122,
    "original_position": 52,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "2f70a30cf39b43b9103120a51ce13a4a75588ef2",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Oh, we still use boost..\r\n\r\nIt's fine to not try/catch as the RPC server will catch those itself.",
    "created_at": "2021-07-30T18:29:32Z",
    "updated_at": "2021-07-30T18:29:32Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680143817",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143817"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r680143817"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/680143817/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 2854,
    "original_line": 2854,
    "side": "RIGHT",
    "in_reply_to_id": 680126836
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685461205",
    "pull_request_review_id": 725732130,
    "id": 685461205,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTQ2MTIwNQ==",
    "diff_hunk": "@@ -4636,6 +4724,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &bumpfee,                        },\n     { \"wallet\",             &psbtbumpfee,                    },\n     { \"wallet\",             &createwallet,                   },\n+    { \"wallet\",             &restorewallet,        },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 99,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5 \"Add a new RPC command: restorewallet\"\r\n\r\nnit: whitespace, `}` should line up with the rest.",
    "created_at": "2021-08-09T19:25:32Z",
    "updated_at": "2021-08-09T19:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685461205",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685461205"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685461205"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685461205/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4727,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685462052",
    "pull_request_review_id": 725732130,
    "id": 685462052,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTQ2MjA1Mg==",
    "diff_hunk": "@@ -2792,6 +2792,94 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewallet()\n+{\n+    return RPCHelpMan{\n+        \"restorewallet\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+\n+    if (fs::exists(wallet_path)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet name already exists.\");\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);\n+\n+    DatabaseOptions options;\n+    options.require_existing = true;\n+    DatabaseStatus status;\n+    bilingual_str error;\n+\n+    std::vector<bilingual_str> warnings;\n+\n+    std::optional<bool> load_on_start = request.params[2].isNull() ? std::nullopt : std::optional<bool>(request.params[2].get_bool());\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*context.chain, wallet_name, load_on_start, options, status, error, warnings);\n+\n+    if (!wallet) {\n+        // Map bad format to not found, since bad format is returned when the\n+        // wallet directory exists, but doesn't contain a data file.\n+        RPCErrorCode code = RPC_WALLET_ERROR;\n+        switch (status) {\n+            case DatabaseStatus::FAILED_NOT_FOUND:\n+            case DatabaseStatus::FAILED_BAD_FORMAT:\n+                code = RPC_WALLET_NOT_FOUND;\n+                break;\n+            case DatabaseStatus::FAILED_ALREADY_LOADED:\n+                code = RPC_WALLET_ALREADY_LOADED;\n+                break;\n+            default: // RPC_WALLET_ERROR is returned for all other cases.\n+                break;\n+        }\n+        throw JSONRPCError(code, error.original);\n+    }\n+\n+    UniValue obj(UniValue::VOBJ);\n+    obj.pushKV(\"name\", wallet->GetName());\n+    obj.pushKV(\"warning\", Join(warnings, Untranslated(\"\\n\")).original);\n+\n+    return obj;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In commit e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5 \"Add a new RPC command: restorewallet\"\r\n\r\nSince all of this code is basically just copied from the `loadwallet` RPC, I think it would be better to refactor it into a helper function that both `restorewallet` and `loadwallet` can call.",
    "created_at": "2021-08-09T19:27:05Z",
    "updated_at": "2021-08-09T19:29:33Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685462052",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685462052"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685462052"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685462052/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2845,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2862,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647564",
    "pull_request_review_id": 725957298,
    "id": 685647564,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTY0NzU2NA==",
    "diff_hunk": "@@ -2792,6 +2792,94 @@ static RPCHelpMan createwallet()\n     };\n }\n \n+static RPCHelpMan restorewallet()\n+{\n+    return RPCHelpMan{\n+        \"restorewallet\",\n+        \"\\nRestore and loads a wallet from backup.\\n\",\n+        {\n+            {\"wallet_name\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The name that will be applied to the restored wallet\"},\n+            {\"backup_file\", RPCArg::Type::STR, RPCArg::Optional::NO, \"The backup file that will be used to restore the wallet.\"},\n+            {\"load_on_startup\", RPCArg::Type::BOOL, RPCArg::Optional::OMITTED_NAMED_ARG, \"Save wallet name to persistent settings and load on startup. True to add wallet to startup list, false to remove, null to leave unchanged.\"},\n+        },\n+        RPCResult{\n+            RPCResult::Type::OBJ, \"\", \"\",\n+            {\n+                {RPCResult::Type::STR, \"name\", \"The wallet name if restored successfully.\"},\n+                {RPCResult::Type::STR, \"warning\", \"Warning message if wallet was not loaded cleanly.\"},\n+            }\n+        },\n+        RPCExamples{\n+            HelpExampleCli(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleRpc(\"restorewallet\", \"\\\"testwallet\\\" \\\"home\\\\backups\\\\backup-file.bak\\\"\")\n+            + HelpExampleCliNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+            + HelpExampleRpcNamed(\"restorewallet\", {{\"wallet_name\", \"testwallet\"}, {\"backup_file\", \"home\\\\backups\\\\backup-file.bak\\\"\"}, {\"load_on_startup\", true}})\n+        },\n+        [&](const RPCHelpMan& self, const JSONRPCRequest& request) -> UniValue\n+{\n+\n+    WalletContext& context = EnsureWalletContext(request.context);\n+\n+    std::string backup_file = request.params[1].get_str();\n+\n+    if (!fs::exists(backup_file)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Backup file does not exist\");\n+    }\n+\n+    std::string wallet_name = request.params[0].get_str();\n+\n+    const fs::path wallet_path = fsbridge::AbsPathJoin(GetWalletDir(), wallet_name);\n+\n+    if (fs::exists(wallet_path)) {\n+        throw JSONRPCError(RPC_INVALID_PARAMETER, \"Wallet name already exists.\");\n+    }\n+\n+    if (!TryCreateDirectories(wallet_path)) {\n+        throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Failed to create database path '%s'. Database already exists.\", wallet_path.string()));\n+    }\n+\n+    auto wallet_file = wallet_path / \"wallet.dat\";\n+\n+    fs::copy_file(backup_file, wallet_file, fs::copy_option::fail_if_exists);\n+\n+    DatabaseOptions options;\n+    options.require_existing = true;\n+    DatabaseStatus status;\n+    bilingual_str error;\n+\n+    std::vector<bilingual_str> warnings;\n+\n+    std::optional<bool> load_on_start = request.params[2].isNull() ? std::nullopt : std::optional<bool>(request.params[2].get_bool());\n+    std::shared_ptr<CWallet> const wallet = LoadWallet(*context.chain, wallet_name, load_on_start, options, status, error, warnings);\n+\n+    if (!wallet) {\n+        // Map bad format to not found, since bad format is returned when the\n+        // wallet directory exists, but doesn't contain a data file.\n+        RPCErrorCode code = RPC_WALLET_ERROR;\n+        switch (status) {\n+            case DatabaseStatus::FAILED_NOT_FOUND:\n+            case DatabaseStatus::FAILED_BAD_FORMAT:\n+                code = RPC_WALLET_NOT_FOUND;\n+                break;\n+            case DatabaseStatus::FAILED_ALREADY_LOADED:\n+                code = RPC_WALLET_ALREADY_LOADED;\n+                break;\n+            default: // RPC_WALLET_ERROR is returned for all other cases.\n+                break;\n+        }\n+        throw JSONRPCError(code, error.original);\n+    }\n+\n+    UniValue obj(UniValue::VOBJ);\n+    obj.pushKV(\"name\", wallet->GetName());\n+    obj.pushKV(\"warning\", Join(warnings, Untranslated(\"\\n\")).original);\n+\n+    return obj;",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 86,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Great suggestion. Done.",
    "created_at": "2021-08-10T02:37:18Z",
    "updated_at": "2021-08-10T02:37:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685647564",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647564"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685647564"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647564/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": 2845,
    "start_side": "RIGHT",
    "line": null,
    "original_line": 2862,
    "side": "RIGHT",
    "in_reply_to_id": 685462052
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647616",
    "pull_request_review_id": 725957361,
    "id": 685647616,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NTY0NzYxNg==",
    "diff_hunk": "@@ -4636,6 +4724,7 @@ static const CRPCCommand commands[] =\n     { \"wallet\",             &bumpfee,                        },\n     { \"wallet\",             &psbtbumpfee,                    },\n     { \"wallet\",             &createwallet,                   },\n+    { \"wallet\",             &restorewallet,        },",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 99,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "e7c86cdb6b0f1b50816b9aec7a9ce1bfeedd32f5",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done.",
    "created_at": "2021-08-10T02:37:29Z",
    "updated_at": "2021-08-10T02:37:29Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685647616",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647616"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r685647616"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/685647616/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 4727,
    "side": "RIGHT",
    "in_reply_to_id": 685461205
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686294691",
    "pull_request_review_id": 726810235,
    "id": 686294691,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjI5NDY5MQ==",
    "diff_hunk": "@@ -2572,6 +2572,37 @@ static RPCHelpMan listwallets()\n     };\n }\n \n+static std::tuple<std::shared_ptr<CWallet>, std::vector<bilingual_str>> LoadWallet(WalletContext& context, UniValue load_on_start_param, const std::string wallet_name)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "5b0a506962fe4388db13062e105201773954e4ee",
    "user": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "In 5b0a506962fe4388db13062e105201773954e4ee \"Add a new RPC command: restorewallet\"\r\n\r\nnit: I would prefer for this to not be named the same as the `LoadWallet` function in wallet.cpp",
    "created_at": "2021-08-10T20:21:42Z",
    "updated_at": "2021-08-10T20:21:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r686294691",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686294691"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r686294691"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686294691/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686446830",
    "pull_request_review_id": 726992332,
    "id": 686446830,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY4NjQ0NjgzMA==",
    "diff_hunk": "@@ -2572,6 +2572,37 @@ static RPCHelpMan listwallets()\n     };\n }\n \n+static std::tuple<std::shared_ptr<CWallet>, std::vector<bilingual_str>> LoadWallet(WalletContext& context, UniValue load_on_start_param, const std::string wallet_name)",
    "path": "src/wallet/rpcwallet.cpp",
    "position": null,
    "original_position": 4,
    "commit_id": "5fe8100ff36fed6d50c2a25b028f57b25af3504c",
    "original_commit_id": "5b0a506962fe4388db13062e105201773954e4ee",
    "user": {
      "login": "lsilva01",
      "id": 84432093,
      "node_id": "MDQ6VXNlcjg0NDMyMDkz",
      "avatar_url": "https://avatars.githubusercontent.com/u/84432093?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsilva01",
      "html_url": "https://github.com/lsilva01",
      "followers_url": "https://api.github.com/users/lsilva01/followers",
      "following_url": "https://api.github.com/users/lsilva01/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsilva01/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsilva01/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsilva01/subscriptions",
      "organizations_url": "https://api.github.com/users/lsilva01/orgs",
      "repos_url": "https://api.github.com/users/lsilva01/repos",
      "events_url": "https://api.github.com/users/lsilva01/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsilva01/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Done. Changed the name to `LoadWalletHelper`.",
    "created_at": "2021-08-11T02:31:55Z",
    "updated_at": "2021-08-11T02:31:55Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r686446830",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686446830"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/22541#discussion_r686446830"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/22541"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/686446830/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 2575,
    "side": "RIGHT",
    "in_reply_to_id": 686294691
  }
]