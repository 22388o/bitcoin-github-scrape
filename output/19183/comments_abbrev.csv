DrahtBot,2020-06-06 00:59:16,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20736 (rpc: Replace boost::variant with std::variant for RPCArg.m_fallback by MarcoFalke)\n* #20480 (Replace boost::varia",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-639930424,639930424,
kiminuo,2020-06-07 18:56:36,"@MarcoFalke Just an idea - it looks like `boost::fs` can be replaced with `std::filesystem`:\n\n> The Filesystem library provides facilities for performing operations on file systems and their components, such as paths, regular files, and directories.\n>\n> The filesystem library was originally developed as boost.filesystem, was published as the technical specification ISO/IEC TS 18822:2015, a",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-640263431,640263431,
JeremyRubin,2020-06-07 19:47:54,concept ACK & lite cr-ACK.,https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-640270068,640270068,
MarcoFalke,2020-06-08 11:53:42,"> Maybe it's already on your roadmap. I don't know. But I can give a hand if you like.\n\nI am not familiar with the filesystem library so I don't feel qualified to change that code. If you have a patch handy that compiles and works on all our supported operating systems, I am happy to include it here.",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-640556602,640556602,
laanwj,2020-06-09 14:07:23,"Concept ACK. The changes look good to me.\n\n> Maybe it's already on your roadmap. I don't know. But I can give a hand if you like.\n\nThis would be the eventual goal. However, I think it'd make sense to leave the filesystem change for another PR, as I think it involves quite a lot of ancillary changes to make it work, as well as to be confident it covers everything the current code does (I'm ",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-641321318,641321318,
practicalswift,2020-11-23 19:41:05,"Concept ACK\n\n@MarcoFalke What is left to do here until the ""[WIP DONTMERGE]"" can be dropped? :)",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-732383801,732383801,
MarcoFalke,2020-11-23 20:11:08,"commit a52ecc9 was required, which was only merged today",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-732399353,732399353,
hebasto,2020-11-23 20:15:22,Could 2d483142a7051389afe74c57a216843e6306f1a8 also be reverted?,https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-732401491,732401491,
mjdietzx,2020-11-23 20:51:33,"Concept ACK \n\n> Just an idea - it looks like `boost::fs` can be replaced with `std::filesystem`:\n\nand also like this idea\n",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-732419074,732419074,
practicalswift,2020-11-25 10:55:59,"@MarcoFalke CI is happily green now. Do you want to make any further changes before removing the draft status, or do you plan to submit these changes as individual PRs?\n\nI'm particularly looking forward to the `std::optional` change. I'm a bit afraid that mixing `boost::optional` and `std::optional` in our code base might lead to some unnecessary confusion.",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-733633003,733633003,
MarcoFalke,2020-11-25 11:05:05,"A green CI doesn't mean there are no bugs. No one knows if the shared_mutex can be replaced at all: https://github.com/bitcoin/bitcoin/pull/19183#discussion_r436395676 https://github.com/bitcoin/bitcoin/issues/16684#issuecomment-726214696\n\nAlso, commit 8b173d4f143c4db4cfe5f88d4fd07e10c146525a introduces a bug in the gui, which isn't covered by tests.\n\nFinally, optional can't be replaced wi",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-733637916,733637916,
elichai,2020-11-25 15:58:24,"> Finally, optional can't be replaced with mechanical changes because the standard library doesn't have a non-throwing accessor by pointer. So the imo confusing use of the non-throwing accessor should be removed first. See #19426\n\n`std::optional` acts like a ""non-throwing accessor by pointer"" by itself, e.g.:\n```c++\nvoid print_if(const std::optional<int>& val) {\n    if(val) {\n        s",https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-733794908,733794908,
MarcoFalke,2020-11-25 17:01:21,What I meant to say was that it doesn't have a `get_ptr` member function. Our current usage would need to be replaced by `val.has_value() ? &val.value() : nullptr`. So my goal is to first get rid of the `get_ptr` call.,https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-733831161,733831161,
MarcoFalke,2021-01-12 05:59:31,Closing for now due to https://github.com/bitcoin/bitcoin/pull/19183#discussion_r436395676 and https://github.com/bitcoin/bitcoin/issues/16684#issuecomment-726214696,https://github.com/bitcoin/bitcoin/pull/19183#issuecomment-758424835,758424835,
JeremyRubin,2020-06-07 19:47:14,"note: I think this has little risk of difference with boost vs std since we never use a condition variable with this mutex.\n\nofftopic note for anyone curious is that cs_sigcache is overkill since we generally know that there are no concurrent readers and writers ever, the read lock could be held at a higher layer for the entire span of block validation, it's just harder to expose the right API",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r436395676,436395676,src/script/sigcache.cpp
fanquake,2020-06-14 05:45:11,"Annoyingly, we can't do this while we are still supporting macOS 10.12. Using `std::get` with `std::variant` is not supported on macOS until 10.14, as that is when the libc++ dylib started supporting the `std::bad_variant_access` exception. Thus this PR with `-mmacos-version-min=10.12` fails to compile:\n```bash\nwallet/rpcwallet.cpp:2969:60: error: 'get<ScriptHash, CNoDestination, PKHash, Scrip",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r439794318,439794318,src/wallet/rpcwallet.cpp
fanquake,2020-06-14 05:46:15,"Similar issue here (as above) using `std::visit`:\n```bash\nwallet/rpcwallet.cpp:3605:43: error: 'visit<const DescribeWalletAddressVisitor &, std::__1::variant<CNoDestination, PKHash, ScriptHash, WitnessV0ScriptHash, WitnessV0KeyHash, WitnessUnknown> &>' is unavailable: introduced in macOS 10.14\n            UniValue wallet_detail = std::visit(*this, embedded);\n                               ",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r439794419,439794419,src/wallet/rpcwallet.cpp
Sjors,2020-06-19 13:48:12,This `if` statement is now ridiculous :-) (and comment needs an update),https://github.com/bitcoin/bitcoin/pull/19183#discussion_r442851038,442851038,configure.ac
Sjors,2020-06-19 13:49:34,Maybe bump this Travis machine to focal in a separate PR?,https://github.com/bitcoin/bitcoin/pull/19183#discussion_r442851777,442851777,.travis.yml
MarcoFalke,2020-06-19 13:54:25,#19267 ,https://github.com/bitcoin/bitcoin/pull/19183#discussion_r442854368,442854368,.travis.yml
practicalswift,2020-11-23 20:40:56,"`MakeOptional` can be dropped if these three workarounds are removed?\n\n```\nsrc/wallet/rpcwallet.cpp:    Optional<int> height = MakeOptional(false, int()); // Height of the specified block or the common ancestor, if the block provided was in a deactivated chain.\nsrc/wallet/rpcwallet.cpp:    Optional<int> stop_height = MakeOptional(false, int());\nsrc/wallet/wallet.cpp:        Optional<int6",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r528982716,528982716,src/optional.h
MarcoFalke,2020-11-25 09:38:32,"resolved, now that a52ecc9 is merged",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r530231726,530231726,src/wallet/rpcwallet.cpp
MarcoFalke,2020-11-25 09:38:41,"resolved, now that a52ecc9 is merged",https://github.com/bitcoin/bitcoin/pull/19183#discussion_r530231836,530231836,src/wallet/rpcwallet.cpp
