[
  {
    "sha": "89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4OWE0ZjhkYWQ4NDM5ZWFhOWViN2JlNzNlZTk3YWU2YTgyYzE0OTQx",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-06-05T22:33:44Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2021-01-12T05:54:28Z"
      },
      "message": "Use std::shared_mutex",
      "tree": {
        "sha": "616df96954633d4fcc86005598f0ed7324e35fc6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/616df96954633d4fcc86005598f0ed7324e35fc6"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6af013792f1bf85824803fc5283bf0d68a8fd080",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6af013792f1bf85824803fc5283bf0d68a8fd080",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6af013792f1bf85824803fc5283bf0d68a8fd080"
      }
    ],
    "stats": {
      "total": 27,
      "additions": 15,
      "deletions": 12
    },
    "files": [
      {
        "sha": "5b870c4b6c4a4958b0fcb6d316b98e8d5ceb9175",
        "filename": "src/script/sigcache.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/src/script/sigcache.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/src/script/sigcache.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/sigcache.cpp?ref=89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
        "patch": "@@ -5,13 +5,13 @@\n \n #include <script/sigcache.h>\n \n+#include <cuckoocache.h>\n #include <pubkey.h>\n #include <random.h>\n #include <uint256.h>\n #include <util/system.h>\n \n-#include <cuckoocache.h>\n-#include <boost/thread/shared_mutex.hpp>\n+#include <shared_mutex>\n \n namespace {\n /**\n@@ -27,7 +27,7 @@ class CSignatureCache\n     CSHA256 m_salted_hasher_schnorr;\n     typedef CuckooCache::cache<uint256, SignatureCacheHasher> map_type;\n     map_type setValid;\n-    boost::shared_mutex cs_sigcache;\n+    std::shared_mutex cs_sigcache;\n \n public:\n     CSignatureCache()\n@@ -62,13 +62,13 @@ class CSignatureCache\n     bool\n     Get(const uint256& entry, const bool erase)\n     {\n-        boost::shared_lock<boost::shared_mutex> lock(cs_sigcache);\n+        std::shared_lock<std::shared_mutex> lock(cs_sigcache);\n         return setValid.contains(entry, erase);\n     }\n \n     void Set(const uint256& entry)\n     {\n-        boost::unique_lock<boost::shared_mutex> lock(cs_sigcache);\n+        std::unique_lock<std::shared_mutex> lock(cs_sigcache);\n         setValid.insert(entry);\n     }\n     uint32_t setup_bytes(size_t n)"
      },
      {
        "sha": "f894c0f4b1e62c59a9033fa1db4507296a1ac61c",
        "filename": "src/test/cuckoocache_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 6,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/src/test/cuckoocache_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/src/test/cuckoocache_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/cuckoocache_tests.cpp?ref=89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
        "patch": "@@ -1,12 +1,16 @@\n // Copyright (c) 2012-2020 The Bitcoin Core developers\n // Distributed under the MIT software license, see the accompanying\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n-#include <boost/test/unit_test.hpp>\n+\n #include <cuckoocache.h>\n-#include <deque>\n #include <random.h>\n #include <script/sigcache.h>\n #include <test/util/setup_common.h>\n+\n+#include <boost/test/unit_test.hpp>\n+\n+#include <deque>\n+#include <shared_mutex>\n #include <thread>\n \n /** Test Suite for CuckooCache\n@@ -199,11 +203,11 @@ static void test_cache_erase_parallel(size_t megabytes)\n      * \"future proofed\".\n      */\n     std::vector<uint256> hashes_insert_copy = hashes;\n-    boost::shared_mutex mtx;\n+    std::shared_mutex mtx;\n \n     {\n         /** Grab lock to make sure we release inserts */\n-        boost::unique_lock<boost::shared_mutex> l(mtx);\n+        std::unique_lock<std::shared_mutex> l(mtx);\n         /** Insert the first half */\n         for (uint32_t i = 0; i < (n_insert / 2); ++i)\n             set.insert(hashes_insert_copy[i]);\n@@ -217,7 +221,7 @@ static void test_cache_erase_parallel(size_t megabytes)\n         /** Each thread is emplaced with x copy-by-value\n         */\n         threads.emplace_back([&, x] {\n-            boost::shared_lock<boost::shared_mutex> l(mtx);\n+            std::shared_lock<std::shared_mutex> l(mtx);\n             size_t ntodo = (n_insert/4)/3;\n             size_t start = ntodo*x;\n             size_t end = ntodo*(x+1);\n@@ -232,7 +236,7 @@ static void test_cache_erase_parallel(size_t megabytes)\n     for (std::thread& t : threads)\n         t.join();\n     /** Grab lock to make sure we observe erases */\n-    boost::unique_lock<boost::shared_mutex> l(mtx);\n+    std::unique_lock<std::shared_mutex> l(mtx);\n     /** Insert the second half */\n     for (uint32_t i = (n_insert / 2); i < n_insert; ++i)\n         set.insert(hashes_insert_copy[i]);"
      },
      {
        "sha": "316756e709635f533e736e42500170a523573d2d",
        "filename": "test/lint/lint-includes.sh",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/test/lint/lint-includes.sh",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/89a4f8dad8439eaa9eb7be73ee97ae6a82c14941/test/lint/lint-includes.sh",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/lint/lint-includes.sh?ref=89a4f8dad8439eaa9eb7be73ee97ae6a82c14941",
        "patch": "@@ -69,7 +69,6 @@ EXPECTED_BOOST_INCLUDES=(\n     boost/test/unit_test.hpp\n     boost/thread/condition_variable.hpp\n     boost/thread/mutex.hpp\n-    boost/thread/shared_mutex.hpp\n     boost/thread/thread.hpp\n )\n "
      }
    ]
  }
]