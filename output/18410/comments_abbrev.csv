jnewbery,2020-03-23 15:36:30,These changes were extracted from #18113.,https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-602679330,602679330,
DrahtBot,2020-03-23 18:28:39,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18113 ([WIP] Consensus: Don't allow a coin to be spent and FRESH. by jnewbery)\n* #16910 (wallet: reduce loading time by ",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-602778584,602778584,
laanwj,2020-03-25 15:13:38,"Thanks for improving the documentation here. I think this is a clear improvement.\n\nACK 97298e536d09724952f84837b562e5e714acbf23",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-603897580,603897580,
jonatack,2020-03-26 19:33:30,Concept ACK,https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-604640473,604640473,
MarcoFalke,2020-04-02 13:37:12,"Why is this assigned 0.20.0? This is not a bugfix, and the rename might be controversial, so let's better wait for 0.21.0?",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-607851814,607851814,
michaelfolkson,2020-04-14 20:55:57,"Concept ACK. Definitely confused me during the PR review club.\n\nDid you give any thought to more intuitive names than FRESH and DIRTY @jnewbery? Don't want to open up a bikeshedding Pandora's box but the additional comments proposed by @jonatack suggest the naming isn't optimal.\n\nhttps://bitcoincore.reviews/18113.html#l-142",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-613677002,613677002,
jnewbery,2020-04-15 15:56:34,"> Did you give any thought to more intuitive names than FRESH and DIRTY @jnewbery? Don't want to open up a bikeshedding Pandora's box but the additional comments proposed by @jonatack suggest the naming isn't optimal.\n\nI think that we could potentially rename `FRESH` to something less confusing (`DIRTY` is commonly used terminology for a cache entry that needs to be flushed to the parent. That",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-614124900,614124900,
jnewbery,2020-04-15 15:57:53,I believe I've now addressed all feedback given on this PR up to this point.,https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-614125678,614125678,
jonatack,2020-04-15 22:12:48,"ACK 98bee55 latest documentation changes in `git diff 97298e5 98bee55` look good as well as the improved `CCoinsCacheEntry` Doxygen formatting; reverified all occurrences of `potential_overwrite` were changed to `possible_overwrite`.\n\n> I think that we could potentially rename `FRESH` to something less confusing (`DIRTY` is commonly used terminology for a cache entry that needs to be flushed t",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-614306147,614306147,
jnewbery,2020-04-16 18:56:59,@instagibbs @MarcoFalke can you help get this over the line? :pray: ,https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-614836153,614836153,
instagibbs,2020-04-16 19:00:21,"ACK https://github.com/bitcoin/bitcoin/pull/18410/commits/98bee558700a10afd819cbb685df0b402522ccfa\n\nnot going to hold up a clear improvement",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-614837828,614837828,
michaelfolkson,2020-04-20 13:15:20,"ACK 98bee558700a10afd819cbb685df0b402522ccfa\n\n(ideally with follow up PR renaming FRESH to something more intuitive like NEWCOIN)",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-616545299,616545299,
jnewbery,2020-04-21 18:23:39,"@MarcoFalke - I've reverted the comment change that you and Russ don't like. Your other two review comments are stylistic, so I've not made any changes for those.",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-617333931,617333931,
jonatack,2020-04-21 20:05:45,"Re-ACK 21fa0a4 per `git diff 98bee55 21fa0a4` the only change since my previous review is the following code commenting diff in `src/coins.cpp::L177-179`;  rebuilt/ran unit tests anyway as a sanity check on the unit test changes. \n```diff\n-                // A coin can only be FRESH in the child cache if it doesn't exist\n-                // in any of the ancestor caches. We can therefore mar",https://github.com/bitcoin/bitcoin/pull/18410#issuecomment-617385616,617385616,
MarcoFalke,2020-03-23 15:30:38,"```suggestion\n    CheckWriteCoins(ABSENT, SPENT , ABSENT, NO_ENTRY   , DIRTY|FRESH, NO_ENTRY   );\n```",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r396539404,396539404,src/test/coins_tests.cpp
jnewbery,2020-03-23 15:41:02,oops. Fixed. Thanks Marco,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r396547589,396547589,src/test/coins_tests.cpp
ryanofsky,2020-03-27 21:19:40,"In commit ""[docs] Improve commenting in coins.cpp|h"" (eeeb97b6da16fed5701ff04d3b9a622eb759fa5a)\n\nIt seems like this comment is going into the weeds about when it is safe to set these flags without explaining what the code is trying to do. If I were trying to explain this code I think I'd start off with something like:\n\n""As an optimization, try to set the FRESH flag when the caller has pass",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r399543226,399543226,src/coins.cpp
ryanofsky,2020-03-27 21:38:00,"In commit ""[docs] Improve commenting in coins.cpp|h"" (eeeb97b6da16fed5701ff04d3b9a622eb759fa5a)\n\nI think it's not finding an unspent coin that's a problem, but finding an unspent coin when `possible_overwrite=false` that's a problem. logic_error(""Found unexpected coin in cache with possible_overwrite=false"") might make it clearer the error's more of an unexpected state than a failed attempt to",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r399550011,399550011,src/coins.cpp
ryanofsky,2020-03-27 22:10:46,"In commit ""[docs] use consistent naming for possible_overwrite"" (97298e536d09724952f84837b562e5e714acbf23)\n\nNot for here, since it's too much change for a documentation PR, but it might be worth considering replacing this bool possible_overwrite param with an inverted bool fresh param. possible_overwrite=false would change to fresh=true, meaning it is safe for AddCoin to assume any existing co",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r399561161,399561161,src/coins.h
ryanofsky,2020-03-27 22:44:54,"In commit ""[docs] Improve commenting in coins.cpp|h"" (eeeb97b6da16fed5701ff04d3b9a622eb759fa5a)\n\n""A coin can only be FRESH in the child cache if it doesn't exist in any of the ancestor caches"" is too broad a statement, not generally true. You can layer caches arbitrarily and a fresh flag in a child doesn't tell you about the state of the coin in every ancestor cache. It only directly tells you",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r399571009,399571009,src/coins.cpp
instagibbs,2020-04-01 16:30:23,`s/which exists/which exists unspent/` ?,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r401748979,401748979,src/coins.h
instagibbs,2020-04-01 16:32:01,"Remove the parenthetical here? List the two conditions since they're both authoritative. \n\nSomething like ""Either the parent cache does not have this coin, or it has it in a spent state""",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r401750071,401750071,src/coins.h
instagibbs,2020-04-01 16:33:24,"Can we define `this coin` in the comments here?\n\nIdentifying ""this coin"" versus ""changes"" to ""this coin"". I have some guesses but would have to actually read the underlying code to figure it out.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r401750981,401750981,src/coins.h
jonatack,2020-04-14 19:41:20,s/flused/flushed/,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408388960,408388960,src/coins.h
jonatack,2020-04-14 19:46:01,"a few suggestions:\n```diff\n  * - FRESH or not FRESH\n  *\n+ * Despite what the naming may suggest, FRESH and DIRTY are independent flags\n+ * and not mutually exclusive states.\n+ *\n  * Out of these 2^3 = 8 states, only some combinations are valid:\n- * - unspent, FRESH, DIRTY (eg a new coin created in the cache)\n- * - unspent, not FRESH, DIRTY (eg a coin is changed in the cache durin",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408391497,408391497,src/coins.h
jonatack,2020-04-14 19:50:35,"suggestion:\n```diff\n     enum Flags {\n-        //! This cache entry is potentially different from the version in the parent cache.\n-        //! Failing to mark a coin as DIRTY when it is potentially different from the\n-        //! parent view will cause a consensus failure, since the coin's state won't get\n-        //! written to the parent when the cache is flushed.\n+        //! DIR",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408393941,408393941,src/coins.h
jonatack,2020-04-14 20:03:50,"nit: can remove the redundant ""with the"" (already present in the preceding line).",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408401343,408401343,src/test/coins_tests.cpp
jnewbery,2020-04-15 15:13:38,"Thanks for the suggestion. I find my version easier to parse (although I'm biased, of course). The second sentence in your version is: \n\n""In [previous sentence] case, [thing can happen] as long as [condition] (from [cause]) that [subcondition]""\n\nwhich I find to be a lot to arrange in my head at once. In my version, I've tried to keep the sentence structures simple like ""IF [thing] THEN [th",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408921456,408921456,src/coins.cpp
jnewbery,2020-04-15 15:31:12,"I don't think this is necessary. Assert messages are for developers, who'll be able to easily see that this assert is in the `!possible_overwrite` branch. I'll add a parenthesis `(when possible_overwrite is false)` to make this clear though.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408935022,408935022,src/coins.cpp
jnewbery,2020-04-15 15:37:20,I agree that this is too much for this PR. Additional documentation around `possible_overwrite` or whatever you decide to change it to would be very welcome!,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408939709,408939709,src/coins.h
jnewbery,2020-04-15 15:42:44,"> In this case, we only indirectly know the state of the grandparent coin due to this happening under the itUs == cacheCoins.end() branch.\n\nI don't understand this statement. `itUs == cacheCoins.end()` simply tells us that the coin doesn't exist in the parent cache's `CCoinsMap` structure. It doesn't tell us anything about the grandparent cache.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408943523,408943523,src/coins.cpp
jnewbery,2020-04-15 15:43:14,fixed,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408943846,408943846,src/coins.h
jnewbery,2020-04-15 15:46:38,"> Despite what the naming may suggest, FRESH and DIRTY are independent flags and not mutually exclusive states.\n\nI think this is already quite explicit from the rest of the comment. Let's keep any further discussion for FRESH/DIRTY naming for a future PR.\n\nI've taken the other suggestions.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408946291,408946291,src/coins.h
jnewbery,2020-04-15 15:52:24,Thanks. I've taken some of these suggested changes.,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408950461,408950461,src/coins.h
jnewbery,2020-04-15 15:53:07,done,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408951002,408951002,src/test/coins_tests.cpp
jnewbery,2020-04-15 15:53:50,Done,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408951552,408951552,src/coins.h
jnewbery,2020-04-15 15:55:04,"> Remove the parenthetical here?\n\nDone\n\n> Can we define this coin in the comments here?\n\nThis coin is the `CCoinsCacheEntry` that the flag is applied to.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408952520,408952520,src/coins.h
instagibbs,2020-04-15 15:58:22,"In other words, IIRC, ""This coin"" means ""If the underlying OutPoint is the same"", rather than other details like flags.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408954811,408954811,src/coins.h
ryanofsky,2020-04-15 16:41:04,"> > In this case, we only indirectly know the state of the grandparent coin due to this happening under the itUs == cacheCoins.end() branch.\n\nIf entry has fresh flag and there is no parent entry (`itUs == cacheCoins.end()`) then the coin must be spent in the grandparent and therefore it's safe to re-apply the fresh flag\n\n> It doesn't tell us anything about the grandparent cache.\n\nOf co",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r408982739,408982739,src/coins.cpp
jnewbery,2020-04-15 17:21:44,"> If entry has fresh flag and there is no parent entry (itUs == cacheCoins.end()) then the coin must be spent in the grandparent\n\nI still don't understand this. Can you explain the logic?\n\n(I still believe that no ancestor cache can contain the coin due to the way we build the cache hierarchy, but I don't understand how you reason about just the grandparent cache)",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r409008074,409008074,src/coins.cpp
ryanofsky,2020-04-15 17:38:41,"I don't see why we're going back and forth on one sentence in a code review comment I made explaining why I thought your code comment was making an unstated assumption. If you don't like my suggestion (which does not mention itUs), feel free to ignore!\n\nMy logic is just that in order for a cache entry to wind up with the fresh flag, the coin in its parent view (whether it's a cache or not, whe",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r409018298,409018298,src/coins.cpp
jnewbery,2020-04-15 17:41:02,"Sorry, I understand what you're saying now. The caches are indexed by `COutPoint`, so if I say ""this coin exists in the parent cache"", I mean ""there is an entry in the parent cache with a COutPoint that matches this coin's COutPoint"". It seems overly verbose to put that in the comment.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r409019659,409019659,src/coins.h
jonatack,2020-04-15 22:34:12,"Maybe: ""A coin can only be FRESH in the child cache if it doesn't exist (e.g. was spent or never existed) in any of the ancestor caches"".",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r409173281,409173281,src/coins.cpp
jonatack,2020-04-15 22:40:56,"or: ""A coin can only be FRESH in the child cache if it doesn't exist (e.g. was spent or never existed) in the parent view, nor in any of the ancestor caches due to the way we build the cache hierarchy.""",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r409175920,409175920,src/coins.cpp
MarcoFalke,2020-04-20 12:09:40,"in commit be549b3c04584e41b00f20a1c7be8a0b137ccff7:\n\nI don't think inline comments that translate the c++ source code into English are helpful. Instead of repeating the code, they should clarify its intent and provide motivation and background information that is not available from just reading the code. If there is nothing to clarify, no inline comment should be made.\n\nDoxygen comments on",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r411325456,411325456,src/coins.cpp
MarcoFalke,2020-04-20 12:36:50,"in commit be549b3c04584e41b00f20a1c7be8a0b137ccff7:\n\nAll inline comments are notes. Without loss of information, this comment can be pruned.\n\n```suggestion\n                // It isn't safe to mark the coin as FRESH in the parent\n```",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r411341767,411341767,src/coins.cpp
jnewbery,2020-04-20 14:18:57,"> I don't see why we're going back and forth on one sentence in a code review comment I made explaining why I thought your code comment was making an unstated assumption. \n\nBecause I'm trying to understand your logic and if there's a gap in my understanding. And if not, whether the comment is needlessly confusing.\n\n> in order for a cache entry to wind up with the fresh flag, the coin in it",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r411416527,411416527,src/coins.cpp
MarcoFalke,2020-04-20 14:36:07,"Why are you removing the wording ""flushed from the parent's cache""? Is it a requirement to flush the child before the parent? If yes, this comment was incorrect, if no, this comment should not be deleted.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r411430128,411430128,src/coins.cpp
jnewbery,2020-04-21 18:21:49,"I agree, although in this case, I was simply cleaning up a comment that already existed (using otherwise to continue a sentence over two comments is a bad idea because when the code changes comments like this often lose their meaning.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r412388468,412388468,src/coins.cpp
jnewbery,2020-04-21 18:22:22,I agree. Could probably be improved further.,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r412388817,412388817,src/coins.cpp
jnewbery,2020-04-21 18:22:51,"This comment change seems to be controversial (see https://github.com/bitcoin/bitcoin/pull/18410#discussion_r399571009), so I've reverted it.",https://github.com/bitcoin/bitcoin/pull/18410#discussion_r412389139,412389139,src/coins.cpp
MarcoFalke,2020-04-21 18:27:46,Potentially relevant context: https://github.com/bitcoin/bitcoin/pull/5863#issuecomment-86568450,https://github.com/bitcoin/bitcoin/pull/18410#discussion_r412392377,412392377,src/coins.cpp
