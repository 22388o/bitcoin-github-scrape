[
  {
    "sha": "fb434159d18e8077ae2d31e1a54c2f8248a6366a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjQzNDE1OWQxOGU4MDc3YWUyZDMxZTFhNTRjMmY4MjQ4YTYzNjZh",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-05-24T13:18:42Z"
      },
      "committer": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2019-05-25T21:23:11Z"
      },
      "message": "Remove global symbols: Avoid using the global namespace if possible\n\nRename CCriticalSection to RecursiveMutex (both are AnnotatedMixin<std::recursive_mutex>)\n\n```\n$ git grep -E '(typedef|using).*(CCriticalSection|RecursiveMutex)'\nsrc/sync.h:using RecursiveMutex = AnnotatedMixin<std::recursive_mutex>;\nsrc/sync.h:typedef AnnotatedMixin<std::recursive_mutex> CCriticalSection;\n```",
      "tree": {
        "sha": "cb027f5229c756832058bc7ca74475cb6a3a7e9d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/cb027f5229c756832058bc7ca74475cb6a3a7e9d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb434159d18e8077ae2d31e1a54c2f8248a6366a",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb434159d18e8077ae2d31e1a54c2f8248a6366a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb434159d18e8077ae2d31e1a54c2f8248a6366a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb434159d18e8077ae2d31e1a54c2f8248a6366a/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63b9efa73d6bec280241fe0fa06abf7e5b4dde8d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63b9efa73d6bec280241fe0fa06abf7e5b4dde8d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63b9efa73d6bec280241fe0fa06abf7e5b4dde8d"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "d17667223b95f9c5b9ed644d0c6f392862b9e632",
        "filename": "src/httpserver.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/httpserver.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/httpserver.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/httpserver.cpp?ref=fb434159d18e8077ae2d31e1a54c2f8248a6366a",
        "patch": "@@ -139,15 +139,15 @@ struct HTTPPathHandler\n //! libevent event loop\n static struct event_base* eventBase = nullptr;\n //! HTTP server\n-struct evhttp* eventHTTP = nullptr;\n+static struct evhttp* eventHTTP = nullptr;\n //! List of subnets to allow RPC connections from\n static std::vector<CSubNet> rpc_allow_subnets;\n //! Work queue for handling longer requests off the event loop thread\n static WorkQueue<HTTPClosure>* workQueue = nullptr;\n //! Handlers for (sub)paths\n-std::vector<HTTPPathHandler> pathHandlers;\n+static std::vector<HTTPPathHandler> pathHandlers;\n //! Bound listening sockets\n-std::vector<evhttp_bound_socket *> boundSockets;\n+static std::vector<evhttp_bound_socket *> boundSockets;\n \n /** Check if a network address is allowed to access the HTTP server */\n static bool ClientAllowed(const CNetAddr& netaddr)\n@@ -420,7 +420,7 @@ bool UpdateHTTPServerLogging(bool enable) {\n #endif\n }\n \n-std::thread threadHTTP;\n+static std::thread threadHTTP;\n static std::vector<std::thread> g_thread_http_workers;\n \n void StartHTTPServer()"
      },
      {
        "sha": "2bb270647a7e9ec791aee11d7cd50d3fe03d58e4",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=fb434159d18e8077ae2d31e1a54c2f8248a6366a",
        "patch": "@@ -74,7 +74,7 @@\n #include <zmq/zmqrpc.h>\n #endif\n \n-bool fFeeEstimatesInitialized = false;\n+static bool fFeeEstimatesInitialized = false;\n static const bool DEFAULT_PROXYRANDOMIZE = true;\n static const bool DEFAULT_REST_ENABLE = false;\n static const bool DEFAULT_STOPAFTERBLOCKIMPORT = false;"
      },
      {
        "sha": "8ac9ee09dbce79138f83332e59ef70911f128517",
        "filename": "src/warnings.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/warnings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb434159d18e8077ae2d31e1a54c2f8248a6366a/src/warnings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/warnings.cpp?ref=fb434159d18e8077ae2d31e1a54c2f8248a6366a",
        "patch": "@@ -8,10 +8,10 @@\n #include <util/system.h>\n #include <warnings.h>\n \n-CCriticalSection cs_warnings;\n-std::string strMiscWarning GUARDED_BY(cs_warnings);\n-bool fLargeWorkForkFound GUARDED_BY(cs_warnings) = false;\n-bool fLargeWorkInvalidChainFound GUARDED_BY(cs_warnings) = false;\n+static RecursiveMutex cs_warnings;\n+static std::string strMiscWarning GUARDED_BY(cs_warnings);\n+static bool fLargeWorkForkFound GUARDED_BY(cs_warnings) = false;\n+static bool fLargeWorkInvalidChainFound GUARDED_BY(cs_warnings) = false;\n \n void SetMiscWarning(const std::string& strWarning)\n {"
      }
    ]
  }
]