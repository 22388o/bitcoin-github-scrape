promag,2019-03-20T18:22:15Z,"Concept ACK, change looks good.",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-474969952,474969952,
MarcoFalke,2019-03-20T21:21:55Z,utACK b112097f8e5f96e96db47e2eef9870d6f0431677. Also checked that the binary is 9kB smaller.,https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-475033576,475033576,
Empact,2019-03-21T08:14:22Z,utACK https://github.com/bitcoin/bitcoin/pull/15622/commits/b112097f8e5f96e96db47e2eef9870d6f0431677,https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-475142248,475142248,
practicalswift,2019-03-22T09:39:56Z,"Now removing redundant `static`:s in unnamed namespaces as requested by @promag and @Empact.\n\nPlease re-review :-)",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-475553974,475553974,
promag,2019-03-22T14:50:31Z,utACK 9638da7.,https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-475650445,475650445,
lucayepa,2019-03-23T23:52:12Z,"I think we can add some language on this policy in doc/developer-notes.md. It will help new developers. I agree on a zero-globals policy, enforced with singletons, or with a ""state"" class that is a container of all the globals, or with a dedicated namespace. This way, every time a new global has to be added (rarely), we can see a clear change in a single place. In my mind this policy should not be",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-475914875,475914875,
practicalswift,2019-03-27T20:28:57Z,@lucayepa I would like to restrict the scope of this PR to these specific code changes which have already been (ut)ACK:ed.,https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-477334743,477334743,
Empact,2019-04-03T05:28:02Z,utACK https://github.com/bitcoin/bitcoin/pull/15622/commits/9638da76386ba1e6f610f26a5bc9b88825087bdc,https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-479345317,479345317,
sipa,2019-04-16T20:35:18Z,"It's a bit confusing to call this""Remove globals""; a global inside a namespace is still a global.",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-483832942,483832942,
practicalswift,2019-04-16T20:46:05Z,@sipa I've now clarified that this refers to global (external) **symbols** :-),https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-483836512,483836512,
practicalswift,2019-05-07T16:59:50Z,"utACK:s from @Empact and @promag, one stale utACK from @MarcoFalke and zero NACK:s\n\n@MarcoFalke, are we ready to move forward with this one to get a slightly less polluted global namespace? :-)",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-490164105,490164105,
ajtowns,2019-05-22T06:36:20Z,"I would have thought it would be better to write these as `static ...` than `namespace { \n ... \n }` -- you can grep for the former relatively easily, but not really the latter, and it seems more consistent with the current style... It gives a +9-9 diff which seems better than +17-9...\n\nEither way, I don't see the point of dropping `static` just because it's redundant; that seems like needles",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-494671961,494671961,
practicalswift,2019-05-24T13:21:11Z,"@ajtowns I've now reverted to the original version of the PR which is in accordance with your suggestions. Please re-review :-)\n\n@promag @MarcoFalke @Empact Would you mind re-reviewing? :-)",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-495625068,495625068,
DrahtBot,2019-05-24T18:14:00Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#16084](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/16084.html) (scripted-diff: Complete the move from CCrit",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-495738646,495738646,
MarcoFalke,2019-05-25T14:36:50Z,"Please squash the second commit, no need to have a separate commit for a single line stylistic fixup",https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-495923129,495923129,
practicalswift,2019-05-25T21:24:13Z,@MarcoFalke Done! Please re-review :-),https://github.com/bitcoin/bitcoin/pull/15622#issuecomment-495949659,495949659,
MarcoFalke,2019-03-19T13:36:24Z,Why can't you wrap everything above into a namespace? Also should not change the indentation. I'd suggest to use clang-format,https://github.com/bitcoin/bitcoin/pull/15622#discussion_r266888287,266888287,src/httpserver.cpp
practicalswift,2019-03-19T15:16:40Z,"Good point! Fixed!\n\nWith this change `HTTPPathHandler`, `WorkQueue` and `HTTPWorkItem` are no longer global.\n\nPlease re-review!",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r266942922,266942922,src/httpserver.cpp
promag,2019-03-21T15:02:01Z,I think you could drop `static`?,https://github.com/bitcoin/bitcoin/pull/15622#discussion_r267800972,267800972,src/init.cpp
practicalswift,2019-03-21T15:05:20Z,"Yes, absolutely but in order to make reviewing super trivial I didn't want to change any existing lines. Let me know if that decision is blocking an utACK from you and I'll consider reconsidering :-)",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r267802687,267802687,src/init.cpp
promag,2019-03-21T15:06:44Z,I don't think it'd make this non-trivial. I vote to remove static where possible inside anonymous namespace. Wait until others weight in.,https://github.com/bitcoin/bitcoin/pull/15622#discussion_r267803331,267803331,src/init.cpp
Empact,2019-03-22T09:29:04Z,"With or without the declaration seems they'll have internal linkage (via unnamed namespace) and static storage duration (via namespace scope).\n\nMildly in favor of removal on the grounds that a distinction without a difference in this case can be misleading.\n\n> `static` When used in a declaration of an object, it specifies static storage duration. When used in a declaration at namespace sco",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r268091919,268091919,src/init.cpp
MarcoFalke,2019-04-16T20:29:41Z,"Why is this changed? What is the difference between `static const(expr) int` and `const int` in a namespace?\n\nWe don't change code for stylistic reasons.",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r275978850,275978850,src/init.cpp
MarcoFalke,2019-04-16T20:31:44Z,"Also, I cant see a reason to not have literals in the global namespace",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r275979547,275979547,src/init.cpp
sipa,2019-04-16T20:32:39Z,static inside a anonymous namespace is redundant.,https://github.com/bitcoin/bitcoin/pull/15622#discussion_r275979909,275979909,src/init.cpp
practicalswift,2019-04-16T20:48:13Z,"Please see also https://github.com/bitcoin/bitcoin/pull/15622#discussion_r267802687\n\nLet me know if you find any reason to revert to the original version.",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r275985916,275985916,src/init.cpp
practicalswift,2019-04-16T21:05:48Z,"> Also, I cant see a reason to not have literals in the global namespace\n\nIf we wanted to share say `DUMP_BANS_INTERVAL` across more than one translation unit the way to do it is via inclusion of a it via say `init.h`, no?",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r275992398,275992398,src/init.cpp
MarcoFalke,2019-04-16T21:40:56Z,">  static inside a anonymous namespace is redundant.\n\nftfy: anonymous namespace is redundant when the constexpr is already static",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r276004147,276004147,src/init.cpp
MarcoFalke,2019-05-24T13:36:17Z,"style nit:\n\n```suggestion\nstatic RecursiveMutex cs_warnings;\n```",https://github.com/bitcoin/bitcoin/pull/15622#discussion_r287362216,287362216,src/warnings.cpp
practicalswift,2019-05-24T13:49:25Z,Done!,https://github.com/bitcoin/bitcoin/pull/15622#discussion_r287367675,287367675,src/warnings.cpp
