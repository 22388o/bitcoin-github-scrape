[
  {
    "sha": "03da4c7781fe52cac48530ca292af4d794ae28e2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2RhNGM3NzgxZmU1MmNhYzQ4NTMwY2EyOTJhZjRkNzk0YWUyOGUy",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2019-12-02T20:35:27Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-05-06T09:39:07Z"
      },
      "message": "build: make linker checks more robust\n\nCheck for a flag to turn linker warnings into errors. When flags are passed to\nlinkers via the compiler driver using a -Wl,-foo flag, linker warnings may be\nswallowed rather than bubbling up.\n\nCo-authored-by: fanquake <fanquake@gmail.com>",
      "tree": {
        "sha": "58f2345333974a8c06a3e67a657a550701de5a56",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/58f2345333974a8c06a3e67a657a550701de5a56"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03da4c7781fe52cac48530ca292af4d794ae28e2",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6yhbsACgkQLuufXMCV\nJsGygg/+OPvFS/uj74ptkkaiwRON9SQbRONHmWTiw8HgTfjnmeuuAsQeqJGkP9K1\nvHMjdXaEnWbIVKa0NzG/HYvz1WtFYJzCd1w3utioiOGtU/8laIDDkRIJ8lBHICgG\nU8MbPV9etDy227EgNzJI2bX+7pnuxxfWYm6V7Ax5/y8+y1r5XP/h8i0f7yVKMwdD\nA0f6sBghqb7GgKTbdyVKNDwAdOAfmr7mp0xTlPK69PI8+ayx4DKWIQGuR49m+sCS\nmEbEg27ffinsxqbvfVS5JfAe0dAh/ZA3Bd372m1miSD4PLUsdACLx7AOfQ8du6It\nkVOv70Uv9uSMd5O46QSJCBkL4piVawF4VBSODgaFx/OmB98ItLtbD55ZOKl2ysyo\nL1vOthlgrm1l+QBr2gGB9LBIZ2KeJ5sfDkOjNlDMXfydEnj24cX+qfLS7P7kHG/v\nExQDEM4OPNh+qQ0xrOIoOcAN3jfxpWDziQOLJrS7j8OzO6WfHn10DM325t0sRB2m\nqv4LXbHAMM4MLHb5eJTaYmt8rgn5+qST1cOnFvf7I4tYCA72llr1y25aRBxC11VC\n3QNyJENFrz2v13duqcxJSbH+ZSQrlInGoki0VQxArtb7Oc69YMQv1ruy1TK0Rrjt\n5ABSOoBLvYlHPtCvk2dyjIqet+a332AIO0vpk42NN37HEbIO8F4=\n=IuUZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 58f2345333974a8c06a3e67a657a550701de5a56\nparent 551dc7f664666cdc8cb6e6cab5522d70980778e8\nauthor Cory Fields <cory-nospam-@coryfields.com> 1575318927 -0500\ncommitter fanquake <fanquake@gmail.com> 1588757947 +0800\n\nbuild: make linker checks more robust\n\nCheck for a flag to turn linker warnings into errors. When flags are passed to\nlinkers via the compiler driver using a -Wl,-foo flag, linker warnings may be\nswallowed rather than bubbling up.\n\nCo-authored-by: fanquake <fanquake@gmail.com>\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03da4c7781fe52cac48530ca292af4d794ae28e2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03da4c7781fe52cac48530ca292af4d794ae28e2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03da4c7781fe52cac48530ca292af4d794ae28e2/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "551dc7f664666cdc8cb6e6cab5522d70980778e8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/551dc7f664666cdc8cb6e6cab5522d70980778e8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/551dc7f664666cdc8cb6e6cab5522d70980778e8"
      }
    ],
    "stats": {
      "total": 48,
      "additions": 35,
      "deletions": 13
    },
    "files": [
      {
        "sha": "a8b30b07dab91b7e17516ac1e3ddf982bea6f1dd",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 35,
        "deletions": 13,
        "changes": 48,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03da4c7781fe52cac48530ca292af4d794ae28e2/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03da4c7781fe52cac48530ca292af4d794ae28e2/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=03da4c7781fe52cac48530ca292af4d794ae28e2",
        "patch": "@@ -283,8 +283,30 @@ AC_ARG_ENABLE([werror],\n     [enable_werror=no])\n \n AC_LANG_PUSH([C++])\n+\n+dnl Check for a flag to turn compiler warnings into errors. This is helpful for checks which may\n+dnl appear to succeed because by default they merely emit warnings when they fail.\n+dnl\n+dnl Note that this is not necessarily a check to see if -Werror is supported, but rather to see if\n+dnl a compile with -Werror can succeed. This is important because the compiler may already be\n+dnl warning about something unrelated, for example about some path issue. If that is the case,\n+dnl -Werror cannot be used because all of those warnings would be turned into errors.\n AX_CHECK_COMPILE_FLAG([-Werror],[CXXFLAG_WERROR=\"-Werror\"],[CXXFLAG_WERROR=\"\"])\n \n+dnl Check for a flag to turn linker warnings into errors. When flags are passed to linkers via the\n+dnl compiler driver using a -Wl,-foo flag, linker warnings may be swallowed rather than bubbling up.\n+dnl See note above, the same applies here as well.\n+dnl\n+dnl LDFLAG_WERROR Should only be used when testing -Wl,*\n+case $host in\n+ *darwin*)\n+    AX_CHECK_LINK_FLAG([-Wl,-fatal_warnings],[LDFLAG_WERROR=\"-Wl,-fatal_warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+  *)\n+    AX_CHECK_LINK_FLAG([-Wl,--fatal-warnings],[LDFLAG_WERROR=\"-Wl,--fatal-warnings\"],[LDFLAG_WERROR=\"\"])\n+    ;;\n+esac\n+\n if test \"x$enable_debug\" = xyes; then\n   dnl Clear default -g -O2 flags\n   if test \"x$CXXFLAGS_overridden\" = xno; then\n@@ -611,7 +633,7 @@ case $host in\n        esac\n      fi\n \n-     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"])\n+     AX_CHECK_LINK_FLAG([[-Wl,-headerpad_max_install_names]], [LDFLAGS=\"$LDFLAGS -Wl,-headerpad_max_install_names\"],, [[$LDFLAG_WERROR]])\n      CPPFLAGS=\"$CPPFLAGS -DMAC_OSX -DOBJC_OLD_DISPATCH_PROTOTYPES=0\"\n      OBJCXXFLAGS=\"$CXXFLAGS\"\n      ;;\n@@ -707,8 +729,8 @@ if test x$use_glibc_compat != xno; then\n     [ fdelt_type=\"long int\"])\n   AC_MSG_RESULT($fdelt_type)\n   AC_DEFINE_UNQUOTED(FDELT_TYPE, $fdelt_type,[parameter and return value type for __fdelt_chk])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=__divmoddi4]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=__divmoddi4\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--wrap=log2f]], [COMPAT_LDFLAGS=\"$COMPAT_LDFLAGS -Wl,--wrap=log2f\"],, [[$LDFLAG_WERROR]])\n else\n   AC_SEARCH_LIBS([clock_gettime],[rt])\n fi\n@@ -756,11 +778,11 @@ if test x$use_hardening != xno; then\n     ])\n   fi\n \n-  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,--dynamicbase]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--dynamicbase\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--nxcompat]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--nxcompat\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,--high-entropy-va]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,--high-entropy-va\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,relro]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,relro\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-z,now]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-z,now\"],, [[$LDFLAG_WERROR]])\n   AX_CHECK_LINK_FLAG([[-fPIE -pie]], [PIE_FLAGS=\"-fPIE\"; HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -pie\"],, [[$CXXFLAG_WERROR]])\n \n   case $host in\n@@ -774,14 +796,14 @@ dnl These flags are specific to ld64, and may cause issues with other linkers.\n dnl For example: GNU ld will intepret -dead_strip as -de and then try and use\n dnl \"ad_strip\" as the symbol for the entry point.\n if test x$TARGET_OS = xdarwin; then\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"])\n-  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-dead_strip_dylibs]], [LDFLAGS=\"$LDFLAGS -Wl,-dead_strip_dylibs\"],, [[$LDFLAG_WERROR]])\n+  AX_CHECK_LINK_FLAG([[-Wl,-bind_at_load]], [HARDENED_LDFLAGS=\"$HARDENED_LDFLAGS -Wl,-bind_at_load\"],, [[$LDFLAG_WERROR]])\n fi\n \n if test x$enable_determinism = xyes; then\n   if test x$TARGET_OS = xwindows; then\n-    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"])\n+    AX_CHECK_LINK_FLAG([[-Wl,--no-insert-timestamp]], [LDFLAGS=\"$LDFLAGS -Wl,--no-insert-timestamp\"],, [[$LDFLAG_WERROR]])\n   fi\n fi\n \n@@ -1213,7 +1235,7 @@ fi\n \n if test x$use_reduce_exports = xyes; then\n     CXXFLAGS=\"$CXXFLAGS $RE_CXXFLAGS\"\n-    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"])\n+    AX_CHECK_LINK_FLAG([[-Wl,--exclude-libs,ALL]], [RELDFLAGS=\"-Wl,--exclude-libs,ALL\"],, [[$LDFLAG_WERROR]])\n fi\n \n if test x$use_tests = xyes; then"
      }
    ]
  }
]