[
  {
    "sha": "5d4999951ee32e333b511245862628e80f83b703",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZDQ5OTk5NTFlZTMyZTMzM2I1MTEyNDU4NjI2MjhlODBmODNiNzAz",
    "commit": {
      "author": {
        "name": "DesWurstes",
        "email": "DesWurstes@users.noreply.github.com",
        "date": "2018-12-31T10:50:06Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-30T10:02:03Z"
      },
      "message": "prevector: Avoid unnamed struct, which is a GNU extension",
      "tree": {
        "sha": "a291bca4e3379b9465ed047876bea7953551507d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a291bca4e3379b9465ed047876bea7953551507d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5d4999951ee32e333b511245862628e80f83b703",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6qohsACgkQLuufXMCV\nJsH0oA/8D5cRVokUO76BT6tYhOEOuKfyorsGyrvhysyvq8Qje2z3diYIUOYTH5BK\nC7KgXTrROu+o/iocK2Vkf0l9kqjkEkJk/p+bfR4L1dPh/4SXSjgnAxoPgMdYwPXD\nkCHywhW9l/rfizVDIzxKF5tpd41nP63lgE6E32Cq0CUqRVQyniCk/6l7lMw2rRYc\nhenzbSMveVWViT6MFKprRoQiCheqjSI+8WBdU6OP5TNkD8tKwGH/it6YGmywRX3C\n61cTjxX7wlYZtvl/jQTwanqAjR1qcsBB5qBntJZVlGTCky33UP/fxsvo0Q3G96/6\nhkD2iiDI6C49WqU2BvnMy9+n+A3bABQ2bM42sTCLlW7pUztXyCl4kCnXUYz5MYCD\nqAKqlttakdmyrU6qpDfjCwIMaYZUGRVf4nj/RoYmbzl7E7jFMoOOYyOaZAIVMyVy\nXa1lFtLexzkCQE1xNT7c6Sj8AlRhVAd8mFEc6bx2c5P/hvWadWyHryaqQ/pLX1Qp\nng0Jbn6DfrlsnsTVViU1DskoZAQfIIsARs7S4rLfZA4jjKtuvN0EyyeKagXO3fnk\n8n5izUyELzvFONZJU1h/3GfWA1T44G0KePPh+rVDZdVyn1yVp//KPawk1MS3GCR1\nbxf6CP7d+k0wtqXrDo5if/VOL7WrufRzdWRgnJVjJO3gLetPxbM=\n=vpwD\n-----END PGP SIGNATURE-----",
        "payload": "tree a291bca4e3379b9465ed047876bea7953551507d\nparent afed2e98b0e3a059adf0b1f88ce2551e3b09733c\nauthor DesWurstes <DesWurstes@users.noreply.github.com> 1546253406 +0300\ncommitter fanquake <fanquake@gmail.com> 1588240923 +0800\n\nprevector: Avoid unnamed struct, which is a GNU extension\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d4999951ee32e333b511245862628e80f83b703",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5d4999951ee32e333b511245862628e80f83b703",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d4999951ee32e333b511245862628e80f83b703/comments",
    "author": {
      "login": "DesWurstes",
      "id": 23437045,
      "node_id": "MDQ6VXNlcjIzNDM3MDQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23437045?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DesWurstes",
      "html_url": "https://github.com/DesWurstes",
      "followers_url": "https://api.github.com/users/DesWurstes/followers",
      "following_url": "https://api.github.com/users/DesWurstes/following{/other_user}",
      "gists_url": "https://api.github.com/users/DesWurstes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DesWurstes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DesWurstes/subscriptions",
      "organizations_url": "https://api.github.com/users/DesWurstes/orgs",
      "repos_url": "https://api.github.com/users/DesWurstes/repos",
      "events_url": "https://api.github.com/users/DesWurstes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DesWurstes/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "afed2e98b0e3a059adf0b1f88ce2551e3b09733c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/afed2e98b0e3a059adf0b1f88ce2551e3b09733c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/afed2e98b0e3a059adf0b1f88ce2551e3b09733c"
      }
    ],
    "stats": {
      "total": 24,
      "additions": 12,
      "deletions": 12
    },
    "files": [
      {
        "sha": "aa20efaaa7b64c204670f7fb43b291d39fe19a82",
        "filename": "src/prevector.h",
        "status": "modified",
        "additions": 12,
        "deletions": 12,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5d4999951ee32e333b511245862628e80f83b703/src/prevector.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5d4999951ee32e333b511245862628e80f83b703/src/prevector.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/prevector.h?ref=5d4999951ee32e333b511245862628e80f83b703",
        "patch": "@@ -152,7 +152,7 @@ class prevector {\n         struct {\n             char* indirect;\n             size_type capacity;\n-        };\n+        } indirect_contents;\n     };\n #pragma pack(pop)\n     alignas(char*) direct_or_indirect _union = {};\n@@ -163,8 +163,8 @@ class prevector {\n \n     T* direct_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.direct) + pos; }\n     const T* direct_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.direct) + pos; }\n-    T* indirect_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.indirect) + pos; }\n-    const T* indirect_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.indirect) + pos; }\n+    T* indirect_ptr(difference_type pos) { return reinterpret_cast<T*>(_union.indirect_contents.indirect) + pos; }\n+    const T* indirect_ptr(difference_type pos) const { return reinterpret_cast<const T*>(_union.indirect_contents.indirect) + pos; }\n     bool is_direct() const { return _size <= N; }\n \n     void change_capacity(size_type new_capacity) {\n@@ -182,17 +182,17 @@ class prevector {\n                 /* FIXME: Because malloc/realloc here won't call new_handler if allocation fails, assert\n                     success. These should instead use an allocator or new/delete so that handlers\n                     are called as necessary, but performance would be slightly degraded by doing so. */\n-                _union.indirect = static_cast<char*>(realloc(_union.indirect, ((size_t)sizeof(T)) * new_capacity));\n-                assert(_union.indirect);\n-                _union.capacity = new_capacity;\n+                _union.indirect_contents.indirect = static_cast<char*>(realloc(_union.indirect_contents.indirect, ((size_t)sizeof(T)) * new_capacity));\n+                assert(_union.indirect_contents.indirect);\n+                _union.indirect_contents.capacity = new_capacity;\n             } else {\n                 char* new_indirect = static_cast<char*>(malloc(((size_t)sizeof(T)) * new_capacity));\n                 assert(new_indirect);\n                 T* src = direct_ptr(0);\n                 T* dst = reinterpret_cast<T*>(new_indirect);\n                 memcpy(dst, src, size() * sizeof(T));\n-                _union.indirect = new_indirect;\n-                _union.capacity = new_capacity;\n+                _union.indirect_contents.indirect = new_indirect;\n+                _union.indirect_contents.capacity = new_capacity;\n                 _size += N + 1;\n             }\n         }\n@@ -301,7 +301,7 @@ class prevector {\n         if (is_direct()) {\n             return N;\n         } else {\n-            return _union.capacity;\n+            return _union.indirect_contents.capacity;\n         }\n     }\n \n@@ -468,8 +468,8 @@ class prevector {\n             clear();\n         }\n         if (!is_direct()) {\n-            free(_union.indirect);\n-            _union.indirect = nullptr;\n+            free(_union.indirect_contents.indirect);\n+            _union.indirect_contents.indirect = nullptr;\n         }\n     }\n \n@@ -521,7 +521,7 @@ class prevector {\n         if (is_direct()) {\n             return 0;\n         } else {\n-            return ((size_t)(sizeof(T))) * _union.capacity;\n+            return ((size_t)(sizeof(T))) * _union.indirect_contents.capacity;\n         }\n     }\n "
      }
    ]
  },
  {
    "sha": "49f6178c3e5e3ad54a419da9d8523207da17fc64",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OWY2MTc4YzNlNWUzYWQ1NGE0MTlkYTlkODUyMzIwN2RhMTdmYzY0",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-02-07T16:24:51Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-30T10:02:04Z"
      },
      "message": "Drop unused LOG_TIME_MICROS helper",
      "tree": {
        "sha": "4b11d3c3b02665b2ce4e04b7a52b9057d31ff55c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b11d3c3b02665b2ce4e04b7a52b9057d31ff55c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/49f6178c3e5e3ad54a419da9d8523207da17fc64",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6qohwACgkQLuufXMCV\nJsF+KBAAmq1TuqklpumvDe30RicEt4N3ggW8FRx4xhrNIcPoaG1rdLYD/gl+FGfM\n4HVlAg35C0w9Lnv7/hK6eQaqbHLOF117MvEePjSsreLA9I+tfbyXTLLh86szY9rE\nhe/v1zMJjCY9c0JN5vOArle4MUum324+Nhh0oRD4dWygoMqMLjV43c5+WWL+S23d\n6CaEVLpkbRKWOW7A8H8P32wXASL2fjM6WNr26IlXTsbigMmDT5VwtChVdIoZ6C0c\nRBVb1f2aoueatc2jjhgHjzbu3OikMsUyFNpS18UgKARK0G+V3B9j5BW00skVyKEE\nK9DdpNz4F1JotFedstaeeK8hMDzOPnIasLt/k9POECquUeW9UIfXgAVTfdKC105K\n0v0b96WsFFekSf8yValEYY/roWLnpWybDrphfBh3BSTPa+8AMhjUzA93MF8QxXrw\nDbVWUgG8h2Q9qJ3NuGrr0YnPhUGNoAIfjskoKyonOwCL6X0+yrkERP5GAJL4T8Ai\n6XjBSS9OWpBuRGntfkzZRNlczWJEPaGg6H5ZjzHjUe+fVlq87V6W5o5Z6R93qa0Z\nC4+XNbpkPYV9v/z24P2mUz99Zi9pnK7+8dPZDKixsT3bq4GhS2k7fWBfOUpGxLRB\nNm84E/oBymrk2TDkYEN/RFrWEHp43gUfHCwUjUzbaOkef/K+UNM=\n=jJBB\n-----END PGP SIGNATURE-----",
        "payload": "tree 4b11d3c3b02665b2ce4e04b7a52b9057d31ff55c\nparent 5d4999951ee32e333b511245862628e80f83b703\nauthor Ben Woosley <ben.woosley@gmail.com> 1581092691 +0000\ncommitter fanquake <fanquake@gmail.com> 1588240924 +0800\n\nDrop unused LOG_TIME_MICROS helper\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f6178c3e5e3ad54a419da9d8523207da17fc64",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/49f6178c3e5e3ad54a419da9d8523207da17fc64",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f6178c3e5e3ad54a419da9d8523207da17fc64/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5d4999951ee32e333b511245862628e80f83b703",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5d4999951ee32e333b511245862628e80f83b703",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5d4999951ee32e333b511245862628e80f83b703"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 0,
      "deletions": 2
    },
    "files": [
      {
        "sha": "7094098802822d43b2e5032e8bc77325fa21f10c",
        "filename": "src/logging/timer.h",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/49f6178c3e5e3ad54a419da9d8523207da17fc64/src/logging/timer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/49f6178c3e5e3ad54a419da9d8523207da17fc64/src/logging/timer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging/timer.h?ref=49f6178c3e5e3ad54a419da9d8523207da17fc64",
        "patch": "@@ -93,8 +93,6 @@ class Timer\n } // namespace BCLog\n \n \n-#define LOG_TIME_MICROS(end_msg, ...) \\\n-    BCLog::Timer<std::chrono::microseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n #define LOG_TIME_MILLIS(end_msg, ...) \\\n     BCLog::Timer<std::chrono::milliseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n #define LOG_TIME_SECONDS(end_msg, ...) \\"
      }
    ]
  },
  {
    "sha": "3a0fd7726b8b916de6cce33bb67f48990575f923",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYTBmZDc3MjZiOGI5MTZkZTZjY2UzM2JiNjdmNDg5OTA1NzVmOTIz",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-02-07T16:29:07Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-30T10:02:04Z"
      },
      "message": "Remove use of non-standard zero variadic macros\n\nThese are a gnu extension warned against by: gnu-zero-variadic-macro-arguments",
      "tree": {
        "sha": "c6190675f2d12ddd9fc753163d60e78638e2c5c7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c6190675f2d12ddd9fc753163d60e78638e2c5c7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3a0fd7726b8b916de6cce33bb67f48990575f923",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6qohwACgkQLuufXMCV\nJsFHzw//S6qaEqacj9/VsD8+XhUaTjHWDrr/1ZLATAd3KTsESEoc4dNR1WapgC5F\nqbaYD5Y3C5ytR93uNjOcuzj4cP6O02bgzGsIJO44hxSn2hxM64P/DwHjhQD4hKe6\nm03Oj8LXjOIx4yS0HOoXf2oEa9fk7beacTnDVj9HDyx+M8SwpxyYYri76pwNdjWx\nhh7mMGVEpCq475eLmjV1G3CEAwF5SAooq2KF0rd78vhtXCUL9xoS64sDyekTNfK6\nFbNWOHJ6astsYGStXz+U41icJhbBJ3k1qs02d6/E5ykHLqmdAr/A9AxcaVwpI89H\nHbHk0L21hFPe0C+YsinQTJ8UNnU904qV3PIt8dbLZ4w3VJ0LpuoacJ+1vOPnK3zn\npAkpwJFAY44a18ZxGc2DT1DwiQJHVxdmBz8lUU7+Zyw3i/Hni0llaEahU/Z+ZvDS\nyVMD1KDF0e7Pty1BFJ6L+1qnhEd6YI899Zl7NqYiaHQ563+wpTsPgkYevIK5eFjA\n1BqGWttbufq/JUKvGDXitgzGh4LDDEGmvBpLvJ7cezY7XgtWBRaQakwYTNgpQGRJ\nRnp77tRBIyFqLi9T1s0RVcpMRane5erX0tS3A7QPnxilTB/qpY8kTLBV6zSRrUDk\nlmbJu19GWeqS0LXfJ7Ev/zImtXyhZMN4A0vjq2MFfknMRzkd0fQ=\n=1m4X\n-----END PGP SIGNATURE-----",
        "payload": "tree c6190675f2d12ddd9fc753163d60e78638e2c5c7\nparent 49f6178c3e5e3ad54a419da9d8523207da17fc64\nauthor Ben Woosley <ben.woosley@gmail.com> 1581092947 +0000\ncommitter fanquake <fanquake@gmail.com> 1588240924 +0800\n\nRemove use of non-standard zero variadic macros\n\nThese are a gnu extension warned against by: gnu-zero-variadic-macro-arguments\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0fd7726b8b916de6cce33bb67f48990575f923",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3a0fd7726b8b916de6cce33bb67f48990575f923",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0fd7726b8b916de6cce33bb67f48990575f923/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "49f6178c3e5e3ad54a419da9d8523207da17fc64",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/49f6178c3e5e3ad54a419da9d8523207da17fc64",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/49f6178c3e5e3ad54a419da9d8523207da17fc64"
      }
    ],
    "stats": {
      "total": 18,
      "additions": 9,
      "deletions": 9
    },
    "files": [
      {
        "sha": "159920e3972052087a6d894b72880d469529080b",
        "filename": "src/logging/timer.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a0fd7726b8b916de6cce33bb67f48990575f923/src/logging/timer.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a0fd7726b8b916de6cce33bb67f48990575f923/src/logging/timer.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/logging/timer.h?ref=3a0fd7726b8b916de6cce33bb67f48990575f923",
        "patch": "@@ -93,10 +93,10 @@ class Timer\n } // namespace BCLog\n \n \n-#define LOG_TIME_MILLIS(end_msg, ...) \\\n-    BCLog::Timer<std::chrono::milliseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n-#define LOG_TIME_SECONDS(end_msg, ...) \\\n-    BCLog::Timer<std::chrono::seconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, ## __VA_ARGS__)\n+#define LOG_TIME_MILLIS_WITH_CATEGORY(end_msg, log_category) \\\n+    BCLog::Timer<std::chrono::milliseconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg, log_category)\n+#define LOG_TIME_SECONDS(end_msg) \\\n+    BCLog::Timer<std::chrono::seconds> PASTE2(logging_timer, __COUNTER__)(__func__, end_msg)\n \n \n #endif // BITCOIN_LOGGING_TIMER_H"
      },
      {
        "sha": "86326366374af54c4c736086e0dd0ff447c8a463",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3a0fd7726b8b916de6cce33bb67f48990575f923/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3a0fd7726b8b916de6cce33bb67f48990575f923/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3a0fd7726b8b916de6cce33bb67f48990575f923",
        "patch": "@@ -2279,11 +2279,11 @@ bool CChainState::FlushStateToDisk(\n         LOCK(cs_LastBlockFile);\n         if (fPruneMode && (fCheckForPruning || nManualPruneHeight > 0) && !fReindex) {\n             if (nManualPruneHeight > 0) {\n-                LOG_TIME_MILLIS(\"find files to prune (manual)\", BCLog::BENCH);\n+                LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune (manual)\", BCLog::BENCH);\n \n                 FindFilesToPruneManual(setFilesToPrune, nManualPruneHeight);\n             } else {\n-                LOG_TIME_MILLIS(\"find files to prune\", BCLog::BENCH);\n+                LOG_TIME_MILLIS_WITH_CATEGORY(\"find files to prune\", BCLog::BENCH);\n \n                 FindFilesToPrune(setFilesToPrune, chainparams.PruneAfterHeight());\n                 fCheckForPruning = false;\n@@ -2321,15 +2321,15 @@ bool CChainState::FlushStateToDisk(\n                 return AbortNode(state, \"Disk space is too low!\", _(\"Error: Disk space is too low!\").translated, CClientUIInterface::MSG_NOPREFIX);\n             }\n             {\n-                LOG_TIME_MILLIS(\"write block and undo data to disk\", BCLog::BENCH);\n+                LOG_TIME_MILLIS_WITH_CATEGORY(\"write block and undo data to disk\", BCLog::BENCH);\n \n                 // First make sure all block and undo data is flushed to disk.\n                 FlushBlockFile();\n             }\n \n             // Then update all block file information (which may refer to block and undo files).\n             {\n-                LOG_TIME_MILLIS(\"write block index to disk\", BCLog::BENCH);\n+                LOG_TIME_MILLIS_WITH_CATEGORY(\"write block index to disk\", BCLog::BENCH);\n \n                 std::vector<std::pair<int, const CBlockFileInfo*> > vFiles;\n                 vFiles.reserve(setDirtyFileInfo.size());\n@@ -2349,7 +2349,7 @@ bool CChainState::FlushStateToDisk(\n             }\n             // Finally remove any pruned files\n             if (fFlushForPrune) {\n-                LOG_TIME_MILLIS(\"unlink pruned files\", BCLog::BENCH);\n+                LOG_TIME_MILLIS_WITH_CATEGORY(\"unlink pruned files\", BCLog::BENCH);\n \n                 UnlinkPrunedFiles(setFilesToPrune);\n             }"
      }
    ]
  },
  {
    "sha": "0ae8f18dfe143051fec6ae10ea7df10142e3ff2f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYWU4ZjE4ZGZlMTQzMDUxZmVjNmFlMTBlYTdkZjEwMTQyZTNmZjJm",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-02-06T10:38:45Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2020-04-30T10:02:04Z"
      },
      "message": "build: add -Wgnu to compile flags\n\nWhen compiling with Clang, this will warn when GNU extensions are\nused.\n\nInfo: https://clang.llvm.org/docs/DiagnosticsReference.html#wgnu",
      "tree": {
        "sha": "ff235aba45d66e9b0ec22d4110167c6dbe7d3a19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ff235aba45d66e9b0ec22d4110167c6dbe7d3a19"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAl6qohwACgkQLuufXMCV\nJsGDjw//QfUZfhO/wr1+QqceVIRrlkZngAP9kPCSZANFwUOBtIWEkITj5KPcWbX7\n9JC1yRsTjoR9PccVGSMYsFokrH/w9Zs4Ek+O5E/BNW0/t7doRVycmJpIeuzCKvV6\nZxrlp8/zynTf7a0JOwPKrwiTzKEDZAtymIpYA5nddJgfnaR9fkJMUlxiLKSF4anv\nj9Ib99Y+uH4c+HgE+NT6ALpNnNIO0zxyhfYl8M64B0gYcopBsNTEdoIcY+oGkO22\n0qYWl+erHolHuVPWHWmqP9+DJreEU2O/xnmPZEL3+xJizxYgwxvUAIdRCX6feBZ/\nVRqG8ivF4bjnc1iL6SHA36DsfeVaHOoESv1y5kmaefJd1augvkRPxYkTlUmH5kNb\nBEaymtH3xY6HFVGt39okAdWP/vn1+WK0/JzafE1C8KBCIuXEXeJBhDyJH2ypN5WQ\nBCuN6P8NT9nqG2mgeCsdBzBtCCaGhd4srVx8KHWFyjzBm5viMJIiK6u1j7YZgFk5\n4F71vkjVGj6te0GPZcs/6my5t5/3G0aWeL6rvnNVv2tVbyaX/qrQdWs3QwO8llGL\nn3NTYHSxcejTHSZ5JCI2Il6Fyxf2ud0CFilyUCZjTVWdIVe3zA/gFekFpJcbOWev\nqG4Vx9mNXzxn7frNAPQKTPJ50B3tyFuyQvOiCSPiip9OEUCBLfw=\n=v3PA\n-----END PGP SIGNATURE-----",
        "payload": "tree ff235aba45d66e9b0ec22d4110167c6dbe7d3a19\nparent 3a0fd7726b8b916de6cce33bb67f48990575f923\nauthor fanquake <fanquake@gmail.com> 1580985525 +0800\ncommitter fanquake <fanquake@gmail.com> 1588240924 +0800\n\nbuild: add -Wgnu to compile flags\n\nWhen compiling with Clang, this will warn when GNU extensions are\nused.\n\nInfo: https://clang.llvm.org/docs/DiagnosticsReference.html#wgnu\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3a0fd7726b8b916de6cce33bb67f48990575f923",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3a0fd7726b8b916de6cce33bb67f48990575f923",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3a0fd7726b8b916de6cce33bb67f48990575f923"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "6046b05611fbc756594ee90c4394be919c59f77c",
        "filename": "configure.ac",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f/configure.ac",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0ae8f18dfe143051fec6ae10ea7df10142e3ff2f/configure.ac",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/configure.ac?ref=0ae8f18dfe143051fec6ae10ea7df10142e3ff2f",
        "patch": "@@ -349,6 +349,7 @@ fi\n if test \"x$CXXFLAGS_overridden\" = \"xno\"; then\n   AX_CHECK_COMPILE_FLAG([-Wall],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wall\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wextra],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wextra\"],,[[$CXXFLAG_WERROR]])\n+  AX_CHECK_COMPILE_FLAG([-Wgnu],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wgnu\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wformat],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wformat\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wvla],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wvla\"],,[[$CXXFLAG_WERROR]])\n   AX_CHECK_COMPILE_FLAG([-Wswitch],[WARN_CXXFLAGS=\"$WARN_CXXFLAGS -Wswitch\"],,[[$CXXFLAG_WERROR]])"
      }
    ]
  }
]