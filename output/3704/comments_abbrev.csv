BitcoinPullTester,2014-02-18T17:45:39Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ca4cf5cff6fb60c9769b62acce2e3a8fcd0e7aae for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/3704#issuecomment-35411689,35411689,
gavinandresen,2014-02-24T19:39:21Z,"Merging, because I keep tripping myself up testing other patches without this.\n\nRE: locks held by caller: indeed, recursive mutexes mean if callers hold the wallet lock, all will be OK.\n",https://github.com/bitcoin/bitcoin/pull/3704#issuecomment-35926353,35926353,
laanwj,2014-02-19T08:15:59Z,I've never known the specific reason why some methods in CWallet acquire the lock and others such as address book manipulation do not (and assume the caller already holds it). But it's always been that way.\n,https://github.com/bitcoin/bitcoin/pull/3704#discussion_r9857190,9857190,src/wallet.cpp
gavinandresen,2014-02-19T18:05:36Z,"Ideally cs_wallet and mapWallet would be private members, and all methods would acquire the lock themselves. But ideally we'd completely rewrite the wallet with deterministic key support, multisig/off-device-signing support, etc.\n",https://github.com/bitcoin/bitcoin/pull/3704#discussion_r9875518,9875518,src/wallet.cpp
laanwj,2014-02-20T06:56:25Z,"I'm not speaking about ideally, just about the way things are implemented now :) Will it have effect in any of the caller sites that the locking behavior of SetAddressBook changed? After all the caller sites (if they're correct) already acquire the locks. I recently fixed some UI functions that forgot to acquire the wallet lock (28352af). I _suppose_ this is not an issue due to the use of recursiv",https://github.com/bitcoin/bitcoin/pull/3704#discussion_r9897231,9897231,src/wallet.cpp
