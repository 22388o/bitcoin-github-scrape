[
  {
    "sha": "099d4b0b65b7dceb14dc4ec5231a60996dff4c69",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOTlkNGIwYjY1YjdkY2ViMTRkYzRlYzUyMzFhNjA5OTZkZmY0YzY5",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-07-08T00:09:55Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2016-07-08T00:13:08Z"
      },
      "message": "gitian: use a wrapped gcc/g++ to avoid the need for a system change\n\nC_INCLUDE_PATH and CPLUS_INCLUDE_PATH work globally as though -isystem was used\nfor each invocation.\n\nSince that changes the build results, force a rebuild of x86 depends by adding\nthe value to $HOST_ID_SALT.",
      "tree": {
        "sha": "a912623ca61340554240ff5cbba064d1d82e51d5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a912623ca61340554240ff5cbba064d1d82e51d5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/099d4b0b65b7dceb14dc4ec5231a60996dff4c69",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/099d4b0b65b7dceb14dc4ec5231a60996dff4c69",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/099d4b0b65b7dceb14dc4ec5231a60996dff4c69",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/099d4b0b65b7dceb14dc4ec5231a60996dff4c69/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "91abb77970f47b1f6166e564bc695ed30c75bb63",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/91abb77970f47b1f6166e564bc695ed30c75bb63",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/91abb77970f47b1f6166e564bc695ed30c75bb63"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 34,
      "deletions": 6
    },
    "files": [
      {
        "sha": "6f43119ba24e686d5daff18b4fed36948d6bfd99",
        "filename": "contrib/gitian-descriptors/gitian-linux.yml",
        "status": "modified",
        "additions": 34,
        "deletions": 6,
        "changes": 40,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/099d4b0b65b7dceb14dc4ec5231a60996dff4c69/contrib/gitian-descriptors/gitian-linux.yml",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/099d4b0b65b7dceb14dc4ec5231a60996dff4c69/contrib/gitian-descriptors/gitian-linux.yml",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/gitian-descriptors/gitian-linux.yml?ref=099d4b0b65b7dceb14dc4ec5231a60996dff4c69",
        "patch": "@@ -33,12 +33,6 @@ remotes:\n files: []\n script: |\n \n-  #unlock sudo\n-  echo \"ubuntu\" | sudo -S true\n-\n-  sudo mkdir -p /usr/include/i386-linux-gnu/\n-  sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/i386-linux-gnu/asm\n-\n   WRAP_DIR=$HOME/wrapped\n   HOSTS=\"i686-pc-linux-gnu x86_64-linux-gnu arm-linux-gnueabihf aarch64-linux-gnu\"\n   CONFIGFLAGS=\"--enable-glibc-back-compat --enable-reduce-exports --disable-bench --disable-gui-tests\"\n@@ -90,11 +84,45 @@ script: |\n   create_per-host_faketime_wrappers \"2000-01-01 12:00:00\"\n   export PATH=${WRAP_DIR}:${PATH}\n \n+  EXTRA_INCLUDES_BASE=$WRAP_DIR/extra_includes\n+  mkdir -p $EXTRA_INCLUDES_BASE\n+\n+  # x86 needs /usr/include/i386-linux-gnu/asm pointed to /usr/include/x86_64-linux-gnu/asm,\n+  # but we can't write there. Instead, create a link here and force it to be included in the\n+  # search paths by wrapping gcc/g++.\n+\n+  mkdir -p $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\n+  rm -f $WRAP_DIR/extra_includes/i686-pc-linux-gnu/asm\n+  ln -s /usr/include/x86_64-linux-gnu/asm $EXTRA_INCLUDES_BASE/i686-pc-linux-gnu/asm\n+\n+  for prog in gcc g++; do\n+  rm -f ${WRAP_DIR}/${prog}\n+  cat << EOF > ${WRAP_DIR}/${prog}\n+  #!/bin/bash\n+  REAL=\"`which -a ${prog} | grep -v ${WRAP_DIR}/${prog} | head -1`\"\n+  for var in \"\\$@\"\n+  do\n+    if [ \"\\$var\" = \"-m32\" ]; then\n+      export C_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      export CPLUS_INCLUDE_PATH=\"$EXTRA_INCLUDES_BASE/i686-pc-linux-gnu\"\n+      break\n+    fi\n+  done\n+  \\$REAL \\$@\n+  EOF\n+  chmod +x ${WRAP_DIR}/${prog}\n+  done\n+\n   cd bitcoin\n   BASEPREFIX=`pwd`/depends\n   # Build dependencies for each host\n   for i in $HOSTS; do\n+    EXTRA_INCLUDES=\"$EXTRA_INCLUDES_BASE/$i\"\n+    if [ -d \"$EXTRA_INCLUDES\" ]; then\n+      export HOST_ID_SALT=\"$EXTRA_INCLUDES\"\n+    fi\n     make ${MAKEOPTS} -C ${BASEPREFIX} HOST=\"${i}\"\n+    unset HOST_ID_SALT\n   done\n \n   # Faketime for binaries"
      }
    ]
  }
]