petertodd,2013-08-08T14:27:18Z,"@SergioDemianLerner +1\n\n> ""Old clients that receive non-canonically-encoded transactions or blocks deserialize them into CTransaction/CBlock structures in memory, and then re-serialize them before relaying them to peers.""\n\nWhat do you mean by ""old"" here?\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-22327044,22327044,
gavinandresen,2013-08-08T20:54:37Z,"@petertodd : for ""block"" messages, old means ""previous versions of the reference implementation.""  For ""tx"" messages, old means ""versions that have commit 'Simplify storage of orphan transactions'"".\n\nRejecting non-canonically-encoded ""tx"" messages should have no ill effects-- well, beyond creating Yet Another Way to craft 0-confirmation transactions that are accepted by un-upgraded nodes and rej",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-22354879,22354879,
sipa,2013-08-15T21:51:04Z,"Strange that pull tester succeeds - IIRC there was a test that used an incorrectly-encoded vtx size in a block, to push it over the 1 MB limit?\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-22733448,22733448,
jgarzik,2013-08-25T02:42:56Z,ACK\n,https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23220783,23220783,
sipa,2013-08-25T16:07:52Z,"ACK. In a later version we probably want to make it a DoSable offence to use these non-canonical encodings, but right now that would cause network fork risk for pre-0.8.3 nodes.\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23230355,23230355,
petertodd,2013-08-25T16:57:27Z,"ACK\n\nFWIW if anyone wants to see it in action, here's block 100 with the compact int for the length of the transaction list changed to non-canonical format:\n\n```\n0100000095194b8567fe2e8bbda931afd01a7acd399b9325cb54683e64129bcd00000000660802c98f18fd34fd16d61c63cf447568370124ac5f3be626c2e1c3c9f0052d19a76949ffff001d33f3c25dfd01000100000001000000000000000000000000000000000000000000000000000000000",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23231179,23231179,
petertodd,2013-08-25T16:58:32Z,"@sipa With the pull-tester I suspect what happened was it just expected the block to fail, so this patch just makes it fail for a different reason.\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23231197,23231197,
gavinandresen,2013-08-25T23:55:57Z,"@sip @petertodd : Sipa is right, this should have made the blockchain tester fail at block b64:\n\n```\n        // Check that a block which is (when properly encoded) <= MAX_BLOCK_SIZE is accepted\n        // Even when it is encoded with varints that make its encoded size actually > MAX_BLOCK_SIZE\n        // -> b39 (11) -> b42 (12) -> b43 (13) -> b53 (14) -> b55 (15) -> b57 (16) -> b60 (17) -> b6",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23238187,23238187,
gavinandresen,2013-08-27T00:52:12Z,"There is a bug in the blockchain tester code; running under the debugger, I'm getting:\n\n```\n02:47:47 10 BitcoindComparisonTool.<init>: Block ""b63"" completed processing\n... I had a conditional breakpoint set to trip with messages > 900,000 bytes, and\non b64 I get:\n(gdb) p nMessageSize\n$6 = 999999\n```\n\n@TheBlueMatt : I'll need help figuring out how to fix and then recompile the .jar.\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23306364,23306364,
TheBlueMatt,2013-08-29T01:50:52Z,@gavinandresen My usual method is to import bitcoinj into eclipse and use the export menu from there. It would be easier if it worked in IntelliJ but I have yet to get IntelliJ's jar export to work.\n,https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23461936,23461936,
TheBlueMatt,2013-09-05T16:49:16Z,"@gavinandresen oh, Read the next comment, the signature size is non-deterministic, so try running it again and see if you get it over 1m (I believe you've got a 1/3 shot IIRC).\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23883126,23883126,
BitcoinPullTester,2013-09-07T12:20:14Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/8dc206a1e2715be83912e039465a049b708b94c1 for binaries and test log.\nThis test script verifies pulls every time they are updated. It, however, dies sometimes and fails to test properly.  If you are waiting on a test, please check timestamps to verify that the test.log is moving at http://jenkins.bluematt.me/pull-tester/cu",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-23993267,23993267,
sipa,2013-09-29T14:36:16Z,"This still needs some work to understand the pulltester output, I guess?\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-25321366,25321366,
gavinandresen,2013-09-30T22:13:09Z,"@sipa : I still think there is a bug in pull-tester. I'm torn on whether or not that bug should be fixed before this change goes in, because accepting this pull would just mean removing that pull-tester test (since the purpose of this pull is for the network to reject the thing pull-tester is testing).\n",https://github.com/bitcoin/bitcoin/pull/2884#issuecomment-25411020,25411020,
