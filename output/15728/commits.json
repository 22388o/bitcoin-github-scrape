[
  {
    "sha": "7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3YTkwNDZlNDhkMGFhYzM1ZThlNmEzZGQzMTVhYTk4YTIwN2JlYmZl",
    "commit": {
      "author": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-03-26T18:56:40Z"
      },
      "committer": {
        "name": "John Newbery",
        "email": "john@johnnewbery.com",
        "date": "2019-04-10T13:19:55Z"
      },
      "message": "[wallet] Refactor CWalletTx::RelayWalletTransaction()\n\nThis refactors the CWalletTx::RelayWalletTransaction() function to be\nclearer and adds comments. It also makes two minor behavior\nchanges:\n\n- no longer assert if fBroadcastTransactions is false. Just return false\nfrom the function.\n- no longer print the relay message if p2pEnabled is set to false (since\nthe transaction is not actually relayed).",
      "tree": {
        "sha": "8dd5821637fc793f43216f772c226eb3746ce45b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/8dd5821637fc793f43216f772c226eb3746ce45b"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe/comments",
    "author": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8c022e8ac401f98c73e6ca62b502b40fc83c3e1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8c022e8ac401f98c73e6ca62b502b40fc83c3e1f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8c022e8ac401f98c73e6ca62b502b40fc83c3e1f"
      }
    ],
    "stats": {
      "total": 35,
      "additions": 20,
      "deletions": 15
    },
    "files": [
      {
        "sha": "642678b4a73bf49a998662ee9d70ec400cb0efb8",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 19,
        "deletions": 14,
        "changes": 33,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
        "patch": "@@ -1896,20 +1896,25 @@ void CWallet::ReacceptWalletTransactions(interfaces::Chain::Lock& locked_chain)\n \n bool CWalletTx::RelayWalletTransaction(interfaces::Chain::Lock& locked_chain)\n {\n-    assert(pwallet->GetBroadcastTransactions());\n-    if (!IsCoinBase() && !isAbandoned() && GetDepthInMainChain(locked_chain) == 0)\n-    {\n-        CValidationState state;\n-        /* GetDepthInMainChain already catches known conflicts. */\n-        if (InMempool() || AcceptToMemoryPool(locked_chain, state)) {\n-            pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n-            if (pwallet->chain().p2pEnabled()) {\n-                pwallet->chain().relayTransaction(GetHash());\n-                return true;\n-            }\n-        }\n-    }\n-    return false;\n+    // Can't relay if wallet is not broadcasting\n+    if (!pwallet->GetBroadcastTransactions()) return false;\n+    // Don't relay coinbase transactions outside blocks\n+    if (IsCoinBase()) return false;\n+    // Don't relay abandoned transactions\n+    if (isAbandoned()) return false;\n+    // Don't relay conflicted or already confirmed transactions\n+    if (GetDepthInMainChain(locked_chain) != 0) return false;\n+    // Don't relay transactions that aren't accepted to the mempool\n+    CValidationState unused_state;\n+    if (!InMempool() && !AcceptToMemoryPool(locked_chain, unused_state)) return false;\n+    // Don't try to relay if the node is not connected to the p2p network\n+    if (!pwallet->chain().p2pEnabled()) return false;\n+\n+    // Try to relay the transaction\n+    pwallet->WalletLogPrintf(\"Relaying wtx %s\\n\", GetHash().ToString());\n+    pwallet->chain().relayTransaction(GetHash());\n+\n+    return true;\n }\n \n std::set<uint256> CWalletTx::GetConflicts() const"
      },
      {
        "sha": "ee34c8bfe787d0fcf0e0e1acb4370c90b8f714b7",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7a9046e48d0aac35e8e6a3dd315aa98a207bebfe/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=7a9046e48d0aac35e8e6a3dd315aa98a207bebfe",
        "patch": "@@ -535,7 +535,7 @@ class CWalletTx : public CMerkleTx\n \n     int64_t GetTxTime() const;\n \n-    // RelayWalletTransaction may only be called if fBroadcastTransactions!\n+    // Pass this transaction to the node to relay to its peers\n     bool RelayWalletTransaction(interfaces::Chain::Lock& locked_chain);\n \n     /** Pass this transaction to the mempool. Fails if absolute fee exceeds absurd fee. */"
      }
    ]
  }
]