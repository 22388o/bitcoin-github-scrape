laanwj,2016-11-30T08:41:53Z,"Concept ACK. Though not very happy to introduce platform-specific voodoo - we only just got rid of thread priority manipulation. But it may be worth the hassle, I don't know.\n\nCan we quantify whether this works or not somehow?\n",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-263815151,263815151,
gmaxwell,2016-11-30T08:50:50Z,"This will also delay other processing, in particular block relay-- at least until the handling is made more concurrent-- no?  Not a reason to not do it, but maybe a reason to not do it by default for everyone. \n\nI second the need to quantify this-- I could imagine it making for a big usability improvement. ... or not mattering at all. If the former, I want it... if the latter...\n",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-263816941,263816941,
luke-jr,2016-11-30T09:32:53Z,"Whenever I restart my node lately, I find myself eventually manually `ionice`ing the entire process as it slows down other things monitoring it in `iotop`. I can't be sure it's sending out old blocks, but I can't imagine what else it'd be spending so much time reading... :/\n\nAdded Mac and Windows support for completeness.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-263825780,263825780,
fanquake,2016-12-01T00:18:20Z,"Travis failure:\n```\n'../../src/'`utilioprio.cpp\nIn file included from ../../src/utilioprio.cpp:9:0:\n../../src/utilioprio.h: In destructor ‘ioprio_idler::~ioprio_idler()’:\n../../src/utilioprio.h:42:51: error: ‘LogPrintf’ was not declared in this scope\n             LogPrintf(""failed to restore ioprio\n"");\n```",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-264039629,264039629,
luke-jr,2016-12-01T08:51:20Z,"Looks like to make the Windows part work, we need to bump _WIN32_WINNT to 0x0600 which means it will only run on Vista or newer. AFAIK this is okay(?), but I'm going to leave it for a separate PR...",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-264115497,264115497,
rebroad,2016-12-19T04:35:40Z,I like this (concept ACK) although I wonder what the impact is on the p2p network as a whole if everyone ran this.,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-267880247,267880247,
martinschwarz,2017-03-11T19:57:41Z,"> Looks like to make the Windows part work, we need to bump _WIN32_WINNT to 0x0600 which means it will only run on Vista or newer. \n\nThere are win32 and win64 builds. Can't this just be enabled on the win64 build only?",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-285895748,285895748,
laanwj,2017-03-13T13:55:12Z,"> Looks like to make the Windows part work, we need to bump _WIN32_WINNT to 0x0600 which means it will only run on Vista or newer. AFAIK this is okay(?), but I'm going to leave it for a separate PR...\n\nIsn't Vista the version after Windows XP? As we dropped support for Windows XP in 0.13, it seems that requiring Vista for 0.15 is fine.\n\n> There are win32 and win64 builds. Can't this just b",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-286113420,286113420,
luke-jr,2017-08-21T05:06:48Z,Rebased...,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-323647322,323647322,
TheBlueMatt,2017-08-21T15:31:16Z,"Hmm, I dont think this is really the best idea as long as our message processing is still single-threaded. Really we need to refactor stuff so that block reading is async and the network processing can continue for other peers while we're serving blocks for peers in IBD, otherwise we may block receiving a new block longer than required.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-323776002,323776002,
luke-jr,2017-08-21T16:04:52Z,"That's somewhat independent from this issue. If users need to shut off their node to use their computer, the delay for processing a new block will be even longer.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-323785647,323785647,
ryanofsky,2017-10-12T17:47:24Z,"@TheBlueMatt @luke-jr, maybe a compromise would be to make this behavior configurable, and perhaps to default to dropping priority if user is running bitcoin-qt on a desktop.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-336213963,336213963,
TheBlueMatt,2017-11-10T21:54:10Z,"Another approach which might be simpler would be to have the validation.h-exposed versions of ReadBlockFromDisk drop io priority so that net_processing will use low priority when answering remote-node queries but connecting blocks will not. With 0.15 I/O when doing initial sync is somewhat better, so this may also be less of an issue now unless the user is running with -peerbloomfilters.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-343597415,343597415,
luke-jr,2017-11-11T06:28:30Z,"@TheBlueMatt That's exactly what this already does... priority is only dropped when serving peers, not when connecting blocks.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-343644487,343644487,
TheBlueMatt,2017-11-11T22:57:20Z,"@luke-jr I was referring to the possibility of not exposing a priority flag in validation.h's API - that seems a bit overkill IMO, as evidenced by the fact that there are now two ReadBlockFromDisk calls in net_processing which dont get the low-priority flag :p. Though that would also result in RPC ReadBlockFromDisk calls getting de-prioritized.\n\nMore importantly, I'm curious how much we need t",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-343700032,343700032,
luke-jr,2017-11-11T23:23:57Z,"Before writing this, I generally ionice'd the entire bitcoind process to maintain system usability.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-343701483,343701483,
TheBlueMatt,2017-11-16T20:59:37Z,Concept ACK. You need to mark the other ReadBlockFromDisks in net_processing low-priority as well.,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-345060590,345060590,
sipa,2018-03-06T17:11:05Z,"Concept ACK, but needs rebase.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-370855254,370855254,
luke-jr,2018-03-06T19:22:34Z,Rebased and added the additional deprioritisations requested by @TheBlueMatt ,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-370896945,370896945,
laanwj,2018-03-06T22:45:57Z,utACK 91ccbbb87,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-370956568,370956568,
eklitzke,2018-03-20T21:57:50Z,"I considered making this change in #12618 and there's a comment about it there. This is much more dangerous than a CPU scheduler change (like the one I just linked for two reasons).\n\nOn Linux the I/O scheduling stuff is very primitive, and `IOPRIO_CLASS_IDLE` is quite a strong policy. From the man page:\n```\n       IOPRIO_CLASS_IDLE (3)\n              This is the idle scheduling class.  Pr",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-374771283,374771283,
laanwj,2018-09-10T16:59:48Z,"This has been open since 2016 and it's still uncertain whether it's a good idea to merge. Closing,f or now.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-419985304,419985304,
luke-jr,2018-09-10T21:18:26Z,"There are plenty of ACKs here, plenty of testing, and only speculation on why there could (in very improbable circumstances) be a problem.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-420064540,420064540,
laanwj,2018-09-11T17:32:21Z,reopened on request,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-420355716,420355716,
DrahtBot,2018-12-12T19:23:33Z,"<!--5fd3d806e98f4a0ca80977bb178665a0-->There hasn't been much activity lately and the patch still needs rebase, so I am closing this for now. Please let me know when you want to continue working on this, so the pull request can be re-opened.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-446711761,446711761,
luke-jr,2019-10-14T23:34:18Z,Rebased,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-541973866,541973866,
DrahtBot,2019-11-20T13:01:20Z,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#22932](https://github.com/bitcoin/bitcoin/pull/22932) (consensus: require CBlockIndex::GetBlockPos() to hold mutex cs_ma",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-555993764,555993764,
rebroad,2020-04-23T08:47:15Z,"> This will also delay other processing, in particular block relay-- at least until the handling is made more concurrent-- no? Not a reason to not do it, but maybe a reason to not do it by default for everyone.\n\nI'd have thought it's possible to make the io lowered only for historical block serving and not for the most recent blocks.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-618268851,618268851,
rebroad,2020-04-24T02:12:54Z,"I've been testing this under WSL and Windows 10 but I can't discern any difference to the build without these changes. According to Process Explorer, all the threads are have I/O Priority of normal. \n![image](https://user-images.githubusercontent.com/1530283/80167866-12236980-8614-11ea-9ab6-c58da1d1339f.png)\n\nIs there any particular way that this ought to be tested?",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-618762894,618762894,
luke-jr,2020-04-24T03:09:29Z,"On Linux, which is the only OS this PR supports...",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-618777066,618777066,
luke-jr,2020-08-20T14:04:25Z,Rebased again,https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-677686439,677686439,
ryanofsky,2020-08-24T22:58:45Z,"re: https://github.com/bitcoin/bitcoin/pull/9245#pullrequestreview-306688566\n\n> Conditional concept and code review ACK [e127695](https://github.com/bitcoin/bitcoin/commit/e1276957ed2c42cfe028a0b2a725767d10c1f5ca) if Evan's comments [#9245 (comment)](https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-374771283) are addressed. Only change since last review is dropping windows support.\n",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-679407764,679407764,
luke-jr,2020-08-25T00:59:05Z,"The issue is impacting performance of the rest of the system, whether GUI or daemon is irrelevant.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-679440964,679440964,
luke-jr,2020-09-11T18:02:32Z,"@ryanofsky IMO it doesn't make sense to continue giving real-world users a bad experience, because of some theoretical issue nobody has ever observed.",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-691236436,691236436,
rebroad,2021-03-19T20:51:11Z,"I still think #9599 made sense (to do IBD in a separate thread, with low I/O priority) so that a node can still usefully serve other nodes during IBD (which it seems to fail at without some additional concurrency).",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-803122751,803122751,
DrahtBot,2021-09-16T16:03:37Z,"<!--cf906140f33d8803c4a75a2196329ecb-->\n🐙 This pull request conflicts with the target branch and [needs rebase](https://github.com/bitcoin/bitcoin/blob/master/CONTRIBUTING.md#rebasing-changes).\n\n<sub>Want to unsubscribe from rebase notifications on this pull request? Just convert this pull request to a ""draft"".</sub>",https://github.com/bitcoin/bitcoin/pull/9245#issuecomment-921033024,921033024,
laanwj,2016-11-30T08:39:41Z,Please move this to a new include file `util_ioprio.h`.,https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90188370,90188370,src/util.h
ryanofsky,2016-11-30T15:03:48Z,"Maybe change this to `((void)false)` to prevent a compiler warning:\n\n```\nmain.cpp:1673:12: warning: statement has no effect [-Wunused-value]\n     ioprio_set_file_idle(filein.Get());\n```",https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90249552,90249552,src/utilioprio.h
ryanofsky,2016-11-30T15:06:05Z,It doesn't seem like it should be necessary to declare these if the `ioprio_idler` class isn't around to call them.,https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90250018,90250018,src/utilioprio.h
ryanofsky,2016-11-30T15:29:26Z,"Needs `#include ""config/bitcoin-config.h""` to prevent link errors.",https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90255335,90255335,src/utilioprio.cpp
ryanofsky,2016-11-30T15:30:36Z,"Should add `#include ""config/bitcoin-config.h""`",https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90255640,90255640,src/utilioprio.h
luke-jr,2016-11-30T21:30:19Z,"We can simplify some of the other stuff (move the logic into the class itself) if low-level access is undesired, but for now it's too early to know if these won't be needed IMO.",https://github.com/bitcoin/bitcoin/pull/9245#discussion_r90332495,90332495,src/utilioprio.h
