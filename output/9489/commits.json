[
  {
    "sha": "32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMmIyYjY1OTQyYmVkMWI1ZTZmNGI4ZWMzMDExMGY3MWI3ZWEyMWIy",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-01-08T04:05:14Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2017-01-08T04:16:37Z"
      },
      "message": "Make FindLatestBefore use GetMedianTimePast instead of GetBlockTime.\n\nImportmulti uses FindLatestBefore to find the height to rescan from,\n FindLatestBefore is using the block time.  This results in a couple\n issues:\n\nOne issue is that miners are able to put times in the past on blocks:\n You could make an address at time T, send to it at T+1 and\n have that confirmed in a block with a timestamp T-1.\n\nA bigger issue is that FindLatestBefore uses std::lower_bound which\n bisects to find the location, which requires that the iterator be\n ordered with respect to the comparison function. Block times are\n not ordered!  I don't know what lower_bound is permitted to do when\n your data is not sufficiently ordered, but it's probably not good.\n (I could construct a plausible implementation which would infinite\n  loop.)\n\nInstead, we change to use GetMedianTimePast. Block times are ordered\n with respect to the mediantimepast. MTP advances with the consent\n of multiple miners so it is more likely to be sufficient for our\n purpose, and it is offset back a bit so it is more conservative.\n\nThe result might rescan a couple extra blocks, but that is no big\n deal.  If the mediantime calculation is ever a performance concern\n we could cache it in the future.",
      "tree": {
        "sha": "7f4b40d95f3a03fb9f1cdcd72139884a9b7f49b5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7f4b40d95f3a03fb9f1cdcd72139884a9b7f49b5"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "25720fc394e27a951bcad26095fb5a711bfacb8f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25720fc394e27a951bcad26095fb5a711bfacb8f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/25720fc394e27a951bcad26095fb5a711bfacb8f"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "94ff265c4f9b25edc2e827d935c307696585726f",
        "filename": "src/chain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2/src/chain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2/src/chain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chain.cpp?ref=32b2b65942bed1b5e6f4b8ec30110f71b7ea21b2",
        "patch": "@@ -64,7 +64,7 @@ const CBlockIndex *CChain::FindFork(const CBlockIndex *pindex) const {\n CBlockIndex* CChain::FindLatestBefore(int64_t nTime) const\n {\n     std::vector<CBlockIndex*>::const_iterator lower = std::lower_bound(vChain.begin(), vChain.end(), nTime,\n-        [](CBlockIndex* pBlock, const int64_t& time) -> bool { return pBlock->GetBlockTime() < time; });\n+        [](CBlockIndex* pBlock, const int64_t& time) -> bool { return pBlock->GetMedianTimePast() < time; });\n     return (lower == vChain.end() ? NULL : *lower);\n }\n "
      }
    ]
  }
]