jgarzik,2012-08-02T21:37:51Z,Accepting non-standard transactions has already been NAK'd.  Putting this into a new pull req doesn't change that.\n,https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7468988,7468988,
luke-jr,2012-08-03T00:55:13Z,"This has not already been NAK'd. Please reopen so I don't need to keep resubmitting, and consider reading the change to review (this doesn't accept any old non-standard transactions, only ones you make yourself).\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7472787,7472787,
BitcoinPullTester,2012-08-08T13:52:26Z,"The following is an automatic comment from the Bitcoin Pull Tester.\nIf you believe it is in error, please contact jenkins@bluematt.me\n\nThis pull passed automatic sanity-tests!\nThis means it merges cleanly onto current master, builds and unit-tests pass\nYou can find the test log and build output at http://jenkins.bluematt.me/pull-tester/ed6b70809b01da9bd01e9c4f81d1b9df8ac74662\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7584062,7584062,
SergioDemianLerner,2012-08-13T16:50:44Z,"This change is partially, if not totally, flawed. \nThis change gives a tool for an attacker to increase considerably the attack surface!\n\nAny user can send a peer a transaction that returns IsMine() == true or IsFromMe() == true if he knows who the peer is (the peer's public key).\n\nCreating transactions that return IsFromMe()=true the attacker can bypass penny flooding prevention and IsStanda",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7697975,7697975,
luke-jr,2012-08-13T17:04:55Z,"An attacker can't create transactions that return IsFromMe()==true unless they have already compromised your wallet.\n\nNo anti-DoS rule should ever be made based on relaying valid transactions, though perhaps concern should be given to potentially filling the victim's memory/wallet with spam.\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7698436,7698436,
SergioDemianLerner,2012-08-13T17:57:37Z,"Why the attacker can't create transactions that return IsFromMe()==true ?\n\nThe code IsFromMe(Tx) calls (GetDebit(tx) > 0) that calls GetDebit() from each txin, that finds the previous transaction and calls IsMine(prevout) which only checks that the recipient address is a specific key (only works for standard transaction templates). It does NOT check the signatures, just the template.\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7700479,7700479,
SergioDemianLerner,2012-08-13T18:02:13Z,Some time ago there was a discussion on https://bitcointalk.org/index.php?topic=91915.0 about the purpose of IsStandard() check and its benefits\n,https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7700723,7700723,
luke-jr,2012-08-13T18:06:38Z,"If the signatures don't match, the transaction is invalid and won't even get this far.\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7700979,7700979,
SergioDemianLerner,2012-08-13T18:40:13Z,"TRUE but you can create a VALID tx that sends 0 BTC to the victim and use the REMAINING previns/txouts to do nasty things.\nI can't find any way to attack now, but I don't like the idea of allowing the attacker to skip a check only by adding a few bytes to the transaction that sends 0 BTC to an specific address.\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7702822,7702822,
sipa,2012-08-13T18:42:12Z,"I think @luke-jr is right here, though I haven't looked closely enough to be sure, so thanks for raising the point.\n\nAnyway, this does raise another point: maybe IsFromMe() transactions should not be retransmitted unless they are really created by this instance (and not received from the network).\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7702928,7702928,
luke-jr,2012-08-13T18:42:26Z,"If that really works, it's a bug (in the existing code).\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7702939,7702939,
SergioDemianLerner,2012-08-13T18:43:01Z,Nevertheless IsFromMe()=true is just enough of a problem.\n,https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7702959,7702959,
SergioDemianLerner,2012-08-13T18:44:52Z,"If you want your client to allow a ""fast track"" for your transactions, then you can add some hidden message to the script of the transaction. The hidden message must be a MAC (Message Authentication Code) of your transaction using a secret key. Then you can check very fast that you're the sender of a transaction\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7703030,7703030,
sipa,2012-08-13T18:54:41Z,"No need for something that complex. Wallet transactions already have a fFromMe field which can easily be used to track whether it is not only ""from me"", but also ""created by this instance"".\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7703497,7703497,
luke-jr,2012-08-13T18:57:37Z,@sipa That sounds like a good idea. How does it work with raw transactions (which are likely the common use case for this)?\n,https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7703714,7703714,
SergioDemianLerner,2012-08-13T18:59:04Z,"Great!\n\n(but maybe the luke-jr runs multiple instances in different computers, so fFromMe is not available)\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7703811,7703811,
gmaxwell,2012-08-13T19:42:55Z,"If sendrawtransaction can be made to cause fFromMe to be set then it even covers the multiple instance case, so long as you do the work to trigger it from each instance. (Arguably better than the wallet duplication required to make input sniffing work)\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7705570,7705570,
SergioDemianLerner,2012-08-14T13:42:01Z,"I found two new attacks that breaks pseudonimity and allows a node to discover the peer's public address. With this information in hand (IP and Bitcoin pub address), a hacker may get the real identity and track the users payments.\n\na) Wait to see if the peer relays a non-standard transaction, it it does, then the public key must be the one of the txins or txouts.\n\nb) \n1) Send money to 60 diff",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7725993,7725993,
luke-jr,2012-08-14T16:58:58Z,"@SergioDemianLerner ""A"" is not a real risk, since relaying the non-standard transaction is the only way to actually use it (so the only way to avoid this risk is to not use non-standard transactions at all). ""B"" seems like it could have some serious privacy implications, though - do you think it would work better if the client secretly held onto the transaction and only relayed it again later?\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7732345,7732345,
SergioDemianLerner,2012-08-14T17:34:53Z,"""A"" could be achieved by sending the transaction directly to the miners (I don't know how to achieve that) . Then only the miners will know who send it.\n\nYour idea to hide the transaction is interesting...The node should act exactly as if the transaction had been rejected. Also there should be no timing differences between rejecting and hiding. \n\nThe only problem I see is that if the attacker ",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7733493,7733493,
luke-jr,2012-08-24T02:35:59Z,"After thinking about it more, this gains from this seem not worth the risks at this time.\n",https://github.com/bitcoin/bitcoin/pull/1648#issuecomment-7990631,7990631,
