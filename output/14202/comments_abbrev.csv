MarcoFalke,2018-09-12T03:15:55Z,"Concept ACK.\nThough, wouldn't it be easier to record these metrics outside of Bitcoin Core? I.e. in the ""middle"" between the rpc endpoint and rpc consumer. The outside approach seems more flexible to me, since it could collect the metrics per-call or overall or per day ...",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420498219,420498219,
etscrivner,2018-09-12T03:39:09Z,"@MarcoFalke Thank you for the quick feedback!\n\nSo, in the configuration I have in mind here we have a set of nodes sitting behind a load-balancer. The desire is to gather info about request volume and latency from the nodes themselves as part of a health check, and to potentially use this information to scale the cluster up or down. Nodes themselves are ephemeral and the entire cluster may be ",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420501555,420501555,
etscrivner,2018-09-12T03:41:07Z,"As an aside, I think a better name for this is probably `getrpctotals` or something similar. Could possibly be merged with `getnettotals` as well.",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420501801,420501801,
DrahtBot,2018-09-12T06:45:54Z,"<!--e57a25ab6845829454e8d69fc972939a-->Note to reviewers: This pull request conflicts with the following ones:\n\n* #13152 ([rpc] Add getnodeaddresses RPC command by chris-belcher)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420531523,420531523,
etscrivner,2018-09-12T12:46:28Z,@promag This works and could be a much lower maintenance burden. I assume you mean using `boost::signals2` to create request start/end signals or possibly pushing zeromq notifications? Any recommendations on approach would be appreciated,https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420634868,420634868,
promag,2018-09-12T20:27:18Z,"> I assume you mean using boost::signals2 to create request start/end signals or possibly pushing zeromq notifications?\n\n@etscrivner actually I was thinking in something simpler. If we log `req_id rpc_method start_time ...` and `req_id rpc_method stop_time ...` or just `rpc_method duration ...` then those metrics could be extracted externally, even in realtime. Or am I missing something?",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420785768,420785768,
PierreRochard,2018-09-13T01:42:28Z,Concept ACK,https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420854657,420854657,
laanwj,2018-09-13T08:30:48Z,"> Though, wouldn't it be easier to record these metrics outside of Bitcoin Core? I.e. in the ""middle"" between the rpc endpoint and rpc consumer. The outside approach seems more flexible to me, since it could collect the metrics per-call or overall or per day ...\n\nAgree that these current statistics are easy enough to collect from the outside. Though I suppose there are some things that are not",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-420927288,420927288,
etscrivner,2018-09-14T15:49:13Z,"@laanwj Thank you for the review.\n\nI've begun looking into the usage of static trace probes that would allow for these measurements to happen. You make a very good point about the potential for this to create an ""inner platform effect"". Based on what you and @promag have said, it seems like that is a more flexible approach here.",https://github.com/bitcoin/bitcoin/pull/14202#issuecomment-421401256,421401256,
promag,2018-09-12T07:12:00Z,Needs locking?,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r216918866,216918866,src/httpserver.cpp
etscrivner,2018-09-12T12:46:38Z,Thanks!,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217014729,217014729,src/httpserver.cpp
promag,2018-09-12T21:19:00Z,Remove assert and use reference instead of pointer?,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217192913,217192913,src/httpserver.cpp
promag,2018-09-12T21:20:59Z,An alternative is to return a copy of `g_rpcserverstats`.,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217193450,217193450,src/httpserver.cpp
promag,2018-09-12T21:24:18Z,This doesn't account sending the reply which I think it should.,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217194444,217194444,src/httpserver.cpp
promag,2018-09-12T21:25:00Z,nit `RPCServerStats rpc_server_stats`.,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217194692,217194692,src/rpc/net.cpp
promag,2018-09-12T21:25:27Z,Remove?,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217194832,217194832,test/functional/rpc_net.py
promag,2018-09-12T21:26:59Z,Is this relevant?,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217195244,217195244,src/rpc/net.cpp
etscrivner,2018-09-14T15:16:43Z,I think this is probably the right approach here given that it is a fairly lightweight data structure.,https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217748121,217748121,src/httpserver.cpp
etscrivner,2018-09-14T15:17:12Z,"If the uptime is recorded in micros, then I think you are right that this becomes redundant.",https://github.com/bitcoin/bitcoin/pull/14202#discussion_r217748280,217748280,src/rpc/net.cpp
