[
  {
    "sha": "fafa0cb29a9c82c7840d5c4093d8183038cb445f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWZhMGNiMjlhOWM4MmM3ODQwZDVjNDA5M2Q4MTgzMDM4Y2I0NDVm",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-12-16T20:40:29Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-21T20:07:31Z"
      },
      "message": "doc: Remove duplicate doxygen comment",
      "tree": {
        "sha": "bb0f8c62697d2f2fd82f69cc1262ed64b44ef4c2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bb0f8c62697d2f2fd82f69cc1262ed64b44ef4c2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fafa0cb29a9c82c7840d5c4093d8183038cb445f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUgYqQwAzRrb7+fgdYEQazwspbdZHDsa155xvdAhDS0EK0cRawcjHV7CS9tyXGKm\n6KTNUp54grzHKWGR44/5Muzoj9NXpdO7vnQxCKKIZ824etgERvSnmAPGA4uxkcun\nXm2m9einxKvuuF/4oBTmJaw0L/lxirEbYOEuatyOl+KNZuE39XlhJsrUPdIZVVCh\nwRn1XdGGHkWzVa8hAgsaSWjYvu+WYzy4Zjc6seGD6nz147EyVpqUkHb9q3A53tFT\niOdRvhQ+6twkOkuG/TyBVorw5P75PJrr5pQ2OtTgc+2cK2xkNq93TESar2luOWWR\njdJADJtxQCY1LlLjTorgbsPYjFw8n4b8rtPh7yKO28zBn1hQokwUWzsPMbaSau0e\now83+BwiL/ojcsvoiAtUSs6zw8h4TgPz6j4qP6Wix/40DnGcyT0EsypXyOHh/0/e\n+9O8RVBYE8ezcNApPuhEG4xz5Wkj4zggHcqruCq2vYurfmsNjVADyuPa8jK0+ysl\nhPJmYn1k\n=d03I\n-----END PGP SIGNATURE-----",
        "payload": "tree bb0f8c62697d2f2fd82f69cc1262ed64b44ef4c2\nparent 631df3ee87ec93e1fc748715671cdb5cff7308e6\nauthor MarcoFalke <falke.marco@gmail.com> 1576528829 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1579637251 -0500\n\ndoc: Remove duplicate doxygen comment\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafa0cb29a9c82c7840d5c4093d8183038cb445f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fafa0cb29a9c82c7840d5c4093d8183038cb445f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafa0cb29a9c82c7840d5c4093d8183038cb445f/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "631df3ee87ec93e1fc748715671cdb5cff7308e6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/631df3ee87ec93e1fc748715671cdb5cff7308e6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/631df3ee87ec93e1fc748715671cdb5cff7308e6"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "5baae375dc3be8f582274603eb09e764f5020c5b",
        "filename": "src/node/coinstats.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fafa0cb29a9c82c7840d5c4093d8183038cb445f/src/node/coinstats.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fafa0cb29a9c82c7840d5c4093d8183038cb445f/src/node/coinstats.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/node/coinstats.cpp?ref=fafa0cb29a9c82c7840d5c4093d8183038cb445f",
        "patch": "@@ -32,8 +32,7 @@ static void ApplyStats(CCoinsStats &stats, CHashWriter& ss, const uint256& hash,\n     ss << VARINT(0u);\n }\n \n-//! Calculate statistics about the unspent transaction output set\n-bool GetUTXOStats(CCoinsView *view, CCoinsStats &stats)\n+bool GetUTXOStats(CCoinsView* view, CCoinsStats& stats)\n {\n     stats = CCoinsStats();\n     std::unique_ptr<CCoinsViewCursor> pcursor(view->Cursor());"
      }
    ]
  },
  {
    "sha": "fa153a9a98416ed014da370cdafbdf70901738be",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTE1M2E5YTk4NDE2ZWQwMTRkYTM3MGNkYWZiZGY3MDkwMTczOGJl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T18:22:48Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-21T20:08:57Z"
      },
      "message": "test: Enable leak detection for fuzzers\n\nThis has been disabled in 16f0a186dcee563bb1000e1ffc51da87e7623bc6 for\nno given reason.",
      "tree": {
        "sha": "f2d06f7aafffd9ca4a98e96926b1f2249fb68cab",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f2d06f7aafffd9ca4a98e96926b1f2249fb68cab"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa153a9a98416ed014da370cdafbdf70901738be",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiRIQv+Nh+GYUpnGI1jTdcjt7txzmI6k2RHTSL5A/VQq/vzVZghbZbwOwTYNJoY\np6poCHFLqrgN7iWfCx490DZqAQsP1fDvJdglYdNq5SKd5TxjasvOR3b1pEz94g5e\ndwH7xmv6gB6+Yy3z4cHYqQgSddnnpwykVJfhF/cF6evKkAMmrGXI5f/rirCF3Ku+\nshHhK9rUjFSi3GuPNnOdhxeQ+PqqEfqKkccaGPt8cqdU+zfeYHP5X4XixEK/hGRL\nbDcwwKttpbXDlixWmIq6bgyL/npULroL8nEoxRy3NBrtC3+r7+DHUPLZfHiWQD+A\nlXMCZIqRw6oRpJwuyMaujZx0/Xo/OXkGdAk+tjbnoAFHwsQnTM+d5+HYD+2eXhUk\nlKyGqPQPw0eYS36bfYUbAi/4myYY0D3LLOhW7N/weacbFMt6uiOm+5at4kxfO7b6\nDHOUXXKJAjzM6PoJP9Fttd83j0MC+94hDFd8xEXOQ6lSM1xAOGZYDPwM6imjLZxj\nhCOqhJ6M\n=sO21\n-----END PGP SIGNATURE-----",
        "payload": "tree f2d06f7aafffd9ca4a98e96926b1f2249fb68cab\nparent fafa0cb29a9c82c7840d5c4093d8183038cb445f\nauthor MarcoFalke <falke.marco@gmail.com> 1578075768 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1579637337 -0500\n\ntest: Enable leak detection for fuzzers\n\nThis has been disabled in 16f0a186dcee563bb1000e1ffc51da87e7623bc6 for\nno given reason.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa153a9a98416ed014da370cdafbdf70901738be",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa153a9a98416ed014da370cdafbdf70901738be",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa153a9a98416ed014da370cdafbdf70901738be/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fafa0cb29a9c82c7840d5c4093d8183038cb445f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fafa0cb29a9c82c7840d5c4093d8183038cb445f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fafa0cb29a9c82c7840d5c4093d8183038cb445f"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 0,
      "deletions": 1
    },
    "files": [
      {
        "sha": "c6b31e05a3ae4d061af7825061972c636f7cdb33",
        "filename": "test/fuzz/test_runner.py",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa153a9a98416ed014da370cdafbdf70901738be/test/fuzz/test_runner.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa153a9a98416ed014da370cdafbdf70901738be/test/fuzz/test_runner.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/fuzz/test_runner.py?ref=fa153a9a98416ed014da370cdafbdf70901738be",
        "patch": "@@ -138,7 +138,6 @@ def run_once(*, corpus, test_list, build_dir, export_coverage):\n         args = [\n             os.path.join(build_dir, 'src', 'test', 'fuzz', t),\n             '-runs=1',\n-            '-detect_leaks=0',\n             corpus_path,\n         ]\n         logging.debug('Run {} with args {}'.format(t, args))"
      }
    ]
  },
  {
    "sha": "fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYWI5NzRjNWFjYjljZTNkZDRlMWE3OWEwYzE5M2ZmY2ExZWExNjYz",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-03T19:10:51Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-21T20:09:08Z"
      },
      "message": "test: Add util to mine invalid blocks\n\nWith the current utils it is only possible to mine valid blocks. This\ncommit adds new util methods to mine invalid blocks.",
      "tree": {
        "sha": "96cbe4df2ee21b9ceec497563dbef10fb200de2d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/96cbe4df2ee21b9ceec497563dbef10fb200de2d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjQ9wwAiiZSUvoMIo8XKoUNauqLChsGZUXemkX4DOwBPm+JBwl71cuquwkCR8XY\nmrzOVKdimJWJyOko2wpwsxMDqLAXOpTw3V2pJW806KlydaChyhzwN++KLMHFJTpH\nOsJfPk1oJ3ZDWep/jo4YbBipHFdmXC8qnOHvnZQX9o+V1RF93xdyGMduFytmTdvO\noBVYzSn5R6w4t7YA34zIcDGMN7a4XeKkjtzMM70GGz5DNMjIX7Mnp0dR4ySCkx1T\nv4ewWJrqHiqJZXe/0EAFZIwReqnZXWZNC20Fv2dnhaiTaJ/Q+TtnTpOfqKmVP04N\njR/6fsXtsB3a9N4JK/4f02iw9FAtzkCCyTf6Fg96YCop+SHUoigIcDsncHm6JtmL\n6TeEzisQnXSDgLy3lqnCyQxer2mRDUM9vRUnKIdgpY9Vge2ZPvoYK/UjXkWG1FNx\npMugzz/1ipEcTy+wtiSMSj8Wy0lXqoU7T8cWRlgp8K8E8Q8ybORlNbFNH8xoI3sC\nJSAmx08H\n=cVG9\n-----END PGP SIGNATURE-----",
        "payload": "tree 96cbe4df2ee21b9ceec497563dbef10fb200de2d\nparent fa153a9a98416ed014da370cdafbdf70901738be\nauthor MarcoFalke <falke.marco@gmail.com> 1578078651 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1579637348 -0500\n\ntest: Add util to mine invalid blocks\n\nWith the current utils it is only possible to mine valid blocks. This\ncommit adds new util methods to mine invalid blocks.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fa153a9a98416ed014da370cdafbdf70901738be",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa153a9a98416ed014da370cdafbdf70901738be",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fa153a9a98416ed014da370cdafbdf70901738be"
      }
    ],
    "stats": {
      "total": 70,
      "additions": 62,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0e4df6106e6171abdba56e90f5756c89481ef5bf",
        "filename": "src/test/util/mining.cpp",
        "status": "modified",
        "additions": 51,
        "deletions": 5,
        "changes": 56,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663/src/test/util/mining.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663/src/test/util/mining.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.cpp?ref=fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
        "patch": "@@ -6,14 +6,17 @@\n \n #include <chainparams.h>\n #include <consensus/merkle.h>\n+#include <consensus/validation.h>\n #include <key_io.h>\n #include <miner.h>\n #include <node/context.h>\n #include <pow.h>\n+#include <primitives/transaction.h>\n #include <script/standard.h>\n #include <validation.h>\n+#include <validationinterface.h>\n \n-CTxIn generatetoaddress(const NodeContext& node, const std::string& address)\n+COutPoint generatetoaddress(const NodeContext& node, const std::string& address)\n {\n     const auto dest = DecodeDestination(address);\n     assert(IsValidDestination(dest));\n@@ -22,19 +25,62 @@ CTxIn generatetoaddress(const NodeContext& node, const std::string& address)\n     return MineBlock(node, coinbase_script);\n }\n \n-CTxIn MineBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n+void ReGenerateCommitments(CBlock& block)\n+{\n+    CMutableTransaction tx{*block.vtx.at(0)};\n+    tx.vout.erase(tx.vout.begin() + GetWitnessCommitmentIndex(block));\n+    block.vtx.at(0) = MakeTransactionRef(tx);\n+\n+    GenerateCoinbaseCommitment(block, WITH_LOCK(cs_main, return LookupBlockIndex(block.hashPrevBlock)), Params().GetConsensus());\n+\n+    block.hashMerkleRoot = BlockMerkleRoot(block);\n+}\n+\n+COutPoint MineBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)\n {\n     auto block = PrepareBlock(node, coinbase_scriptPubKey);\n+    auto valid = MineBlock(block);\n+    assert(!valid.IsNull());\n+    return valid;\n+}\n \n+struct BlockValidationStateCatcher : public CValidationInterface {\n+    const uint256 m_hash;\n+    Optional<BlockValidationState> m_state;\n+\n+    BlockValidationStateCatcher(const uint256& hash)\n+        : m_hash{hash},\n+          m_state{} {}\n+\n+protected:\n+    void BlockChecked(const CBlock& block, const BlockValidationState& state) override\n+    {\n+        if (block.GetHash() != m_hash) return;\n+        m_state = state;\n+    }\n+};\n+\n+COutPoint MineBlock(std::shared_ptr<CBlock>& block)\n+{\n     while (!CheckProofOfWork(block->GetHash(), block->nBits, Params().GetConsensus())) {\n         ++block->nNonce;\n         assert(block->nNonce);\n     }\n \n-    bool processed{ProcessNewBlock(Params(), block, true, nullptr)};\n-    assert(processed);\n+    const auto old_height = WITH_LOCK(cs_main, return ChainActive().Height());\n+    bool new_block;\n+    BlockValidationStateCatcher bvsc{block->GetHash()};\n+    RegisterValidationInterface(&bvsc);\n+    const bool processed{ProcessNewBlock(Params(), block, /* fForceProcessing */ true, /* fNewBlock */ &new_block)};\n+    const bool duplicate{!new_block && processed};\n+    assert(!duplicate);\n+    UnregisterValidationInterface(&bvsc);\n+    SyncWithValidationInterfaceQueue();\n+    const bool was_valid{bvsc.m_state && bvsc.m_state->IsValid()};\n+    assert(old_height + was_valid == WITH_LOCK(cs_main, return ChainActive().Height()));\n \n-    return CTxIn{block->vtx[0]->GetHash(), 0};\n+    if (was_valid) return {block->vtx[0]->GetHash(), 0};\n+    return {};\n }\n \n std::shared_ptr<CBlock> PrepareBlock(const NodeContext& node, const CScript& coinbase_scriptPubKey)"
      },
      {
        "sha": "707d4d110e6ff53bb766d049a31c1872e0af9800",
        "filename": "src/test/util/mining.h",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663/src/test/util/mining.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663/src/test/util/mining.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/mining.h?ref=fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
        "patch": "@@ -9,17 +9,25 @@\n #include <string>\n \n class CBlock;\n+class COutPoint;\n class CScript;\n-class CTxIn;\n struct NodeContext;\n \n+void ReGenerateCommitments(CBlock& block);\n+\n /** Returns the generated coin */\n-CTxIn MineBlock(const NodeContext&, const CScript& coinbase_scriptPubKey);\n+COutPoint MineBlock(const NodeContext&, const CScript& coinbase_scriptPubKey);\n+\n+/**\n+ * Returns the generated coin (or Null if the block was invalid).\n+ * It is recommended to call ReGenerateCommitments before mining the block to avoid merkle tree mismatches.\n+ **/\n+COutPoint MineBlock(std::shared_ptr<CBlock>& block);\n \n /** Prepare a block to be mined */\n std::shared_ptr<CBlock> PrepareBlock(const NodeContext&, const CScript& coinbase_scriptPubKey);\n \n /** RPC-like helper function, returns the generated coin */\n-CTxIn generatetoaddress(const NodeContext&, const std::string& address);\n+COutPoint generatetoaddress(const NodeContext&, const std::string& address);\n \n #endif // BITCOIN_TEST_UTIL_MINING_H"
      }
    ]
  },
  {
    "sha": "fa9e1357e5f441fbe74cb885a666dd58ec793d52",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTllMTM1N2U1ZjQ0MWZiZTc0Y2I4ODVhNjY2ZGQ1OGVjNzkzZDUy",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2019-08-24T11:37:09Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-01-21T20:29:02Z"
      },
      "message": "fuzz: BIP 42, BIP 30, CVE-2018-17144",
      "tree": {
        "sha": "6bf197b22f1936fefcb2ec8cb0299fb80b480fb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6bf197b22f1936fefcb2ec8cb0299fb80b480fb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa9e1357e5f441fbe74cb885a666dd58ec793d52",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUiaYgwArRHleWl/TqGJ8Icq4OZhcShJai/vp2JW7dgiJ+huWVMd7vvEIIv9AvIs\nnwEutyph41I0TmT7lK/TUElWPCOZS3rKu2CrXcB+vf4MbJnxeMUDhLNhhjzuRzbs\nlZrvMDAnTV924jkDqjyLLVieR7nYZv3tkqs30r1QvgecYlVTZeFbt6p+EelzbYbT\n+wb7oT5xkxWvhEL8gXPJ43cKyQ0OHtgPOBFpPZEN4fwNuA9OAWF16J5KxJ3USlPk\nbUF+UxydUxbGeflAsNTDU2dDubgRZofC7ssPY9dtyhsi5OvB1t4yLjjTRMpmkkil\n12Xbj6dxf0Qr4St7AZ/TlkHYVnTGXuyaTs0tYk8c+jklTVs3TDZZJ4FV//vCzoyk\nZyQl5gdLD9aMhlDCypr8Ndo+nmlCyzwc2OYU+mZhtyKZ8p0pG7ce1pWpG6pa2sW/\nUIZdrmp19qN9y1YFvJXmQ1xbjLh8/NMyN14qCHwvVqzPJdOyy3zuSHGRcOiJA/72\n33k88LuC\n=Dt8s\n-----END PGP SIGNATURE-----",
        "payload": "tree 6bf197b22f1936fefcb2ec8cb0299fb80b480fb2\nparent fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663\nauthor MarcoFalke <falke.marco@gmail.com> 1566646629 -0400\ncommitter MarcoFalke <falke.marco@gmail.com> 1579638542 -0500\n\nfuzz: BIP 42, BIP 30, CVE-2018-17144\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9e1357e5f441fbe74cb885a666dd58ec793d52",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa9e1357e5f441fbe74cb885a666dd58ec793d52",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa9e1357e5f441fbe74cb885a666dd58ec793d52/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fab974c5acb9ce3dd4e1a79a0c193ffca1ea1663"
      }
    ],
    "stats": {
      "total": 169,
      "additions": 167,
      "deletions": 2
    },
    "files": [
      {
        "sha": "47db2ce138a5bfd8c8ec009a4b608f946bd5db48",
        "filename": "src/Makefile.test.include",
        "status": "modified",
        "additions": 8,
        "deletions": 1,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/Makefile.test.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/Makefile.test.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.test.include?ref=fa9e1357e5f441fbe74cb885a666dd58ec793d52",
        "patch": "@@ -60,7 +60,8 @@ FUZZ_TARGETS = \\\n   test/fuzz/tx_in_deserialize \\\n   test/fuzz/tx_out \\\n   test/fuzz/txoutcompressor_deserialize \\\n-  test/fuzz/txundo_deserialize\n+  test/fuzz/txundo_deserialize \\\n+  test/fuzz/utxo_total_supply\n \n if ENABLE_FUZZ\n noinst_PROGRAMS += $(FUZZ_TARGETS:=)\n@@ -373,6 +374,12 @@ test_fuzz_eval_script_LDADD = $(FUZZ_SUITE_LD_COMMON)\n test_fuzz_eval_script_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n test_fuzz_eval_script_SOURCES = $(FUZZ_SUITE) test/fuzz/eval_script.cpp\n \n+test_fuzz_utxo_total_supply_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES)\n+test_fuzz_utxo_total_supply_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n+test_fuzz_utxo_total_supply_LDADD = $(FUZZ_SUITE_LD_COMMON)\n+test_fuzz_utxo_total_supply_LDFLAGS = $(RELDFLAGS) $(AM_LDFLAGS) $(LIBTOOL_APP_LDFLAGS)\n+test_fuzz_utxo_total_supply_SOURCES = $(FUZZ_SUITE) test/fuzz/utxo_total_supply.cpp\n+\n test_fuzz_fee_rate_deserialize_CPPFLAGS = $(AM_CPPFLAGS) $(BITCOIN_INCLUDES) -DFEE_RATE_DESERIALIZE=1\n test_fuzz_fee_rate_deserialize_CXXFLAGS = $(AM_CXXFLAGS) $(PIE_FLAGS)\n test_fuzz_fee_rate_deserialize_LDADD = $(FUZZ_SUITE_LD_COMMON)"
      },
      {
        "sha": "5890bfa9a33dabb6c3cc9040da7b6284c0b15ddf",
        "filename": "src/bench/block_assemble.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/bench/block_assemble.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/bench/block_assemble.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/block_assemble.cpp?ref=fa9e1357e5f441fbe74cb885a666dd58ec793d52",
        "patch": "@@ -30,7 +30,7 @@ static void AssembleBlock(benchmark::State& state)\n     std::array<CTransactionRef, NUM_BLOCKS - COINBASE_MATURITY + 1> txs;\n     for (size_t b{0}; b < NUM_BLOCKS; ++b) {\n         CMutableTransaction tx;\n-        tx.vin.push_back(MineBlock(g_testing_setup->m_node, SCRIPT_PUB));\n+        tx.vin.push_back(CTxIn{MineBlock(g_testing_setup->m_node, SCRIPT_PUB)});\n         tx.vin.back().scriptWitness = witness;\n         tx.vout.emplace_back(1337, SCRIPT_PUB);\n         if (NUM_BLOCKS - b >= COINBASE_MATURITY)"
      },
      {
        "sha": "981d18b9e9a78f8df2795fd8ec63ddbee6524d7e",
        "filename": "src/test/fuzz/utxo_total_supply.cpp",
        "status": "added",
        "additions": 158,
        "deletions": 0,
        "changes": 158,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/test/fuzz/utxo_total_supply.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa9e1357e5f441fbe74cb885a666dd58ec793d52/src/test/fuzz/utxo_total_supply.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/fuzz/utxo_total_supply.cpp?ref=fa9e1357e5f441fbe74cb885a666dd58ec793d52",
        "patch": "@@ -0,0 +1,158 @@\n+// Copyright (c) 2020 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <chainparams.h>\n+#include <consensus/consensus.h>\n+#include <consensus/merkle.h>\n+#include <node/coinstats.h>\n+#include <script/interpreter.h>\n+#include <streams.h>\n+#include <test/fuzz/FuzzedDataProvider.h>\n+#include <test/fuzz/fuzz.h>\n+#include <test/util/mining.h>\n+#include <test/util/setup_common.h>\n+#include <validation.h>\n+#include <version.h>\n+\n+enum class Action : uint8_t {\n+    CREATE_INPUT, //!< Append an input-output pair to the last tx in the current block\n+    CREATE_TX,    //!< Append a tx to the list of txs in the current block\n+    CREATE_BLOCK, //!< Append the current block to the active chain\n+};\n+\n+\n+void test_one_input(const std::vector<uint8_t>& buffer)\n+{\n+    /** The testing setup that creates a chainstate and other globals */\n+    TestingSetup test_setup{CBaseChainParams::REGTEST};\n+    FuzzedDataProvider fuzzed_data_provider(buffer.data(), buffer.size());\n+\n+    const auto PrepareNextBlock = [&]() {\n+        // Use OP_FALSE to avoid BIP30 check from hitting early\n+        auto block = PrepareBlock(test_setup.m_node, /* coinbase_scriptPubKey */ OP_FALSE);\n+        // Replace OP_FALSE with OP_TRUE\n+        {\n+            CMutableTransaction tx{*block->vtx.back()};\n+            tx.vout.at(0).scriptPubKey = OP_TRUE;\n+            block->vtx.back() = MakeTransactionRef(tx);\n+        }\n+        return block;\n+    };\n+\n+    /** The block template this fuzzer is working on */\n+    auto current_block = PrepareNextBlock();\n+    /** Append-only set of tx outpoints, entries are not removed when spent */\n+    std::vector<std::pair<COutPoint, CTxOut>> txos;\n+    /** The utxo stats at the chain tip */\n+    CCoinsStats utxo_stats;\n+    /** The total amount of coins in the utxo set */\n+    CAmount circulation{0};\n+\n+\n+    // Store the tx out in the txo map\n+    const auto StoreLastTxo = [&]() {\n+        // get last tx\n+        const CTransaction& tx = *current_block->vtx.back();\n+        // get last out\n+        const uint32_t i = tx.vout.size() - 1;\n+        // store it\n+        txos.emplace_back(COutPoint{tx.GetHash(), i}, tx.vout.at(i));\n+        if (current_block->vtx.size() == 1 && tx.vout.at(i).scriptPubKey[0] == OP_RETURN) {\n+            // also store coinbase\n+            const uint32_t i = tx.vout.size() - 2;\n+            txos.emplace_back(COutPoint{tx.GetHash(), i}, tx.vout.at(i));\n+        }\n+    };\n+    const auto AppendRandomTxo = [&](CMutableTransaction& tx) {\n+        const auto& txo = txos.at(fuzzed_data_provider.ConsumeIntegralInRange<size_t>(0, txos.size() - 1));\n+        tx.vin.emplace_back(txo.first);\n+        tx.vout.emplace_back(txo.second.nValue, txo.second.scriptPubKey); // \"Forward\" coin with no fee\n+    };\n+    const auto UpdateUtxoStats = [&]() {\n+        LOCK(cs_main);\n+        ::ChainstateActive().ForceFlushStateToDisk();\n+        assert(GetUTXOStats(&ChainstateActive().CoinsDB(), utxo_stats));\n+        // Check that miner can't print more money than they are allowed to\n+        assert(circulation == utxo_stats.nTotalAmount);\n+    };\n+\n+\n+    // Update internal state to chain tip\n+    StoreLastTxo();\n+    UpdateUtxoStats();\n+    assert(ChainActive().Height() == 0);\n+    // Get at which height we duplicate the coinbase\n+    // Assuming that the fuzzer will mine relatively short chains (less than 200 blocks), we want the duplicate coinbase to be not too high.\n+    // Up to 2000 seems reasonable.\n+    int64_t duplicate_coinbase_height = fuzzed_data_provider.ConsumeIntegralInRange(0, 20 * COINBASE_MATURITY);\n+    // Always pad with OP_0 at the end to avoid bad-cb-length error\n+    const CScript duplicate_coinbase_script = CScript() << duplicate_coinbase_height << OP_0;\n+    // Mine the first block with this duplicate\n+    current_block = PrepareNextBlock();\n+    StoreLastTxo();\n+\n+    {\n+        // Create duplicate (CScript should match exact format as in CreateNewBlock)\n+        CMutableTransaction tx{*current_block->vtx.front()};\n+        tx.vin.at(0).scriptSig = duplicate_coinbase_script;\n+\n+        // Mine block and create next block template\n+        current_block->vtx.front() = MakeTransactionRef(tx);\n+    }\n+    current_block->hashMerkleRoot = BlockMerkleRoot(*current_block);\n+    assert(!MineBlock(current_block).IsNull());\n+    circulation += GetBlockSubsidy(ChainActive().Height(), Params().GetConsensus());\n+\n+    assert(ChainActive().Height() == 1);\n+    UpdateUtxoStats();\n+    current_block = PrepareNextBlock();\n+    StoreLastTxo();\n+\n+    while (fuzzed_data_provider.remaining_bytes()) {\n+        const auto action = static_cast<Action>(fuzzed_data_provider.ConsumeIntegralInRange(0, 2));\n+        switch (action) {\n+        case Action::CREATE_INPUT: {\n+            CMutableTransaction tx{*current_block->vtx.back()};\n+            AppendRandomTxo(tx);\n+            current_block->vtx.back() = MakeTransactionRef(tx);\n+            StoreLastTxo();\n+            break;\n+        }\n+        case Action::CREATE_TX: {\n+            CMutableTransaction tx{};\n+            AppendRandomTxo(tx);\n+            current_block->vtx.push_back(MakeTransactionRef(tx));\n+            StoreLastTxo();\n+            break;\n+        }\n+        case Action::CREATE_BLOCK: {\n+            ReGenerateCommitments(*current_block);\n+            const bool was_valid = !MineBlock(current_block).IsNull();\n+\n+            const auto prev_utxo_stats = utxo_stats;\n+            if (was_valid) {\n+                circulation += GetBlockSubsidy(ChainActive().Height(), Params().GetConsensus());\n+\n+                if (duplicate_coinbase_height == ChainActive().Height()) {\n+                    // we mined the duplicate coinbase\n+                    assert(current_block->vtx.at(0)->vin.at(0).scriptSig == duplicate_coinbase_script);\n+                }\n+            }\n+\n+            UpdateUtxoStats();\n+\n+            if (!was_valid) {\n+                // utxo stats must not change\n+                assert(prev_utxo_stats.hashSerialized == utxo_stats.hashSerialized);\n+            }\n+\n+            current_block = PrepareNextBlock();\n+            StoreLastTxo();\n+            break;\n+        }\n+        default:\n+            assert(false);\n+        }\n+    }\n+}"
      }
    ]
  }
]