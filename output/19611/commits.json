[
  {
    "sha": "f6b83acf70b6884d594a66bae977483f0593d013",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmNmI4M2FjZjcwYjY4ODRkNTk0YTY2YmFlOTc3NDgzZjA1OTNkMDEz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T15:31:50Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T15:26:53Z"
      },
      "message": "p2p, refactoring: add CInv block message helper methods",
      "tree": {
        "sha": "5cf9b88f21d91845a4214d41507f7ef31814c9a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5cf9b88f21d91845a4214d41507f7ef31814c9a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/f6b83acf70b6884d594a66bae977483f0593d013",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8pfj4ACgkQT1chs9Dj\nkh1P1w/9E07Xb+P16ewBiXm3Hj3vN+Y0veSRUP2KZ9jG2pSLdApQo+OzkXxqwXEe\n35Frvud5cwV6PFwCKD2F340c0Z2wu3jwf0rGfBMr39m+9OExCjmYxiQmJUruS+uS\nuPow2UqjIoQuSc6gShoQCQxxMrxnL3lLKhTO22rsr8KFKvFMfuJWyVNRPF+5VElQ\nfIS/DZWKbVRgBrW6tKn0gAY19Gq9WmZQnLKixY26+up/tk1i+uX0CiWQmVJem/PV\nOIU53fURWAJT4uLMG+J2OfkW5DfJq9blMaZdYSvKIhXgUTNdzTpH1BP83BeJ2ZF1\njMfdSb9LHaIgXCamG+MV1PKM8O/an5kI+7OKOtww6jaN++XBXDoEEugJflsy/Y0t\nGBNq0NPyIT4jJPRs4etipMMkk27iyG0ZNzi8kIliC8M7+Hqr1lCKPAfSkAetTAhU\nFv9hTJzItokTzox0cvDRfxpnT/4ygJGX3elUTdZezVSLnHWGHEKBO5c8cebmceUE\n1DYY4Ny5NJ0ICbG2Ov8ippSZzs3JtVzqe0srxmGL+m/JS20JF0Q4IfsWNOU61VqN\nVzGr1D8FhrjL4Eo587XAvL+EsafQF1i0izG2XzGcXosRcIalvjHTbHQy6JHuUi5c\nEUOeID9YEs7R5NkZJNO8mK+F66jedgXKQ9CJC+VcZEK6Za4vBG0=\n=s9Uy\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIOqhjOrRNp+2/1EZiu63iyvElQ8fRMq4wGbC+kOiPS0hCP/wEAdzl218MaJt\n5f72CES2O7kI8QRfKX4/8AioUE4d5rhRJQCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEBLrEulBCUb8AT2GOB3wFaMI\n8QRfKX4/8AixCJGmBrbSTwCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5kYXIu\nY2F0YWxsYXh5LmNvbfAQ5g+VNyoq2RipAv3GUeCWPAjxBF8pfkDwCPzQxQ9XBtQ5\nAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFt\ncHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 5cf9b88f21d91845a4214d41507f7ef31814c9a0\nparent 0f16212c5931b30f430014caa485de53f9a14920\nauthor Jon Atack <jon@atack.com> 1595863910 +0200\ncommitter Jon Atack <jon@atack.com> 1596554813 +0200\n\np2p, refactoring: add CInv block message helper methods\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6b83acf70b6884d594a66bae977483f0593d013",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b83acf70b6884d594a66bae977483f0593d013",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6b83acf70b6884d594a66bae977483f0593d013/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0f16212c5931b30f430014caa485de53f9a14920",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0f16212c5931b30f430014caa485de53f9a14920",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0f16212c5931b30f430014caa485de53f9a14920"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 11,
      "deletions": 3
    },
    "files": [
      {
        "sha": "4e55909ee435e63e8cf123d5397be0261dece9f4",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 11,
        "deletions": 3,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/f6b83acf70b6884d594a66bae977483f0593d013/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/f6b83acf70b6884d594a66bae977483f0593d013/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=f6b83acf70b6884d594a66bae977483f0593d013",
        "patch": "@@ -412,12 +412,20 @@ class CInv\n     std::string ToString() const;\n \n     // Single-message helper methods\n-    bool IsMsgTx()        const { return type == MSG_TX; }\n-    bool IsMsgWtx()       const { return type == MSG_WTX; }\n+    bool IsUndefined() const { return type == UNDEFINED; }\n+    bool IsMsgTx() const { return type == MSG_TX; }\n+    bool IsMsgBlk() const { return type == MSG_BLOCK; }\n+    bool IsMsgWtx() const { return type == MSG_WTX; }\n+    bool IsMsgFilteredBlk() const { return type == MSG_FILTERED_BLOCK; }\n+    bool IsMsgCmpctBlk() const { return type == MSG_CMPCT_BLOCK; }\n+    bool IsMsgWitnessBlk() const { return type == MSG_WITNESS_BLOCK; }\n     bool IsMsgWitnessTx() const { return type == MSG_WITNESS_TX; }\n+    bool IsMsgFilteredWitnessBlk() const { return type == MSG_FILTERED_WITNESS_BLOCK; }\n \n     // Combined-message helper methods\n-    bool IsGenTxMsg()     const { return type == MSG_TX || type == MSG_WTX || type == MSG_WITNESS_TX; }\n+    bool IsGenTxMsg() const { return type == MSG_TX || type == MSG_WTX || type == MSG_WITNESS_TX; }\n+    bool IsMsgBlkOrMsgWitnessBlk() const { return type == MSG_BLOCK || type == MSG_WITNESS_BLOCK; }\n+    bool IsGenBlkMsg() const { return type == MSG_BLOCK || type == MSG_FILTERED_BLOCK || type == MSG_CMPCT_BLOCK || type == MSG_WITNESS_BLOCK; }\n \n     int type;\n     uint256 hash;"
      }
    ]
  },
  {
    "sha": "e21c3cef50bac5ae7db740b43204733e4e665c31",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMjFjM2NlZjUwYmFjNWFlN2RiNzQwYjQzMjA0NzMzZTRlNjY1YzMx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T18:39:57Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T16:02:18Z"
      },
      "message": "p2p, refactoring: use CInv block helpers in net_processing.cpp",
      "tree": {
        "sha": "df8822e764abb0b3a673f3764861bcb179fa2067",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/df8822e764abb0b3a673f3764861bcb179fa2067"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e21c3cef50bac5ae7db740b43204733e4e665c31",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8phooACgkQT1chs9Dj\nkh11ew//Xa9iS6pc/a3McW+c8EPeOa22kl2F1tFlj5tsY3Vd/R/fWZrfrFOMm05W\nRroBeAmGdcXfsp+cOLpWilIbvowbtmo9fKnygZoamOOmk/aR6RtCIElLZDBGP35s\n8VVLsCl4mvSkF4T13RtNC/g/9KPL1lIjmSPsi/STTeEI21nKuhErHtSNPlLnIil6\nXghJl0e1D+s8xYDZiX/kbmSUdfqQMbcGmY35BbIV2HzPoVGnOa6eDYKRu67MjrMI\nDPvs4iYhWm7uvmcb7B2GVYj2mK64etROWkaxdeVQeRlCjLx6v+rcN5zK9SVi2XYU\nvhMIsrYOaI1Ckj7l0pfBMUxH4Qddlbt/1Ow6QRs6EC0bj5VbUsub9h8+Xv63nEiz\nV47s5YZ1miqJ62yvGysOYWCJlprd9zhrUswnSechA06Zjslh2N5f7gaWouMAu2yD\nFIp3GfW7SQc+c+HqoUKvkjrXR/jJS+4077x2jGqoZ4Y4P5ud4ac9NRgrlBzmWQy+\ne3TkxnYSV5sNuqrDC7ceyFfwaR0QySIOMuZgmnyrpW7DBYnIstgWhX4s4jPCOZWy\nJn/AFA69mXuPv6vpzjBEm4IEOPWC10tE02m1U2DuOW1Lnp93D06kmWDfiGAKNL8s\nntrJVm1OdM+U6b5PpOm0K/6l5Gm7P0CQDb0HiPro6iBd22FuRXY=\n=1ImG\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIO61d5aS91kPMGLMTVZkwCk4G4LptIaK3dI7Yv0ehL6jCP/wEAjGOcRgZI2/\nY7TdRNnVYSkI8QRfKYaM8AibRJ0mT/CCEwCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQGDUesSSEWjbXAl4j\nbLEZSwjxBF8phozwCPvp9Mt5ExA/AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMu\nY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQT/T1oZyTCVz8ENAh4l2JBgjx\nBF8phozwCBa5X4f/DEBSAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5j\nYXRhbGxheHkuY29t8BDMMnJ5pNjBpS7oO0m8TbCSCPEEXymGjPAITq9qQ0mgIaIA\ng9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJuaXR5d2FsbC5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree df8822e764abb0b3a673f3764861bcb179fa2067\nparent f6b83acf70b6884d594a66bae977483f0593d013\nauthor Jon Atack <jon@atack.com> 1595875197 +0200\ncommitter Jon Atack <jon@atack.com> 1596556938 +0200\n\np2p, refactoring: use CInv block helpers in net_processing.cpp\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e21c3cef50bac5ae7db740b43204733e4e665c31",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e21c3cef50bac5ae7db740b43204733e4e665c31",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e21c3cef50bac5ae7db740b43204733e4e665c31/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6b83acf70b6884d594a66bae977483f0593d013",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6b83acf70b6884d594a66bae977483f0593d013",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6b83acf70b6884d594a66bae977483f0593d013"
      }
    ],
    "stats": {
      "total": 77,
      "additions": 32,
      "deletions": 45
    },
    "files": [
      {
        "sha": "58887bc57b089d9d53a8d12462b2d18cb861fff8",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 32,
        "deletions": 45,
        "changes": 77,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e21c3cef50bac5ae7db740b43204733e4e665c31/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e21c3cef50bac5ae7db740b43204733e4e665c31/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=e21c3cef50bac5ae7db740b43204733e4e665c31",
        "patch": "@@ -1422,45 +1422,35 @@ void PeerLogicValidation::BlockChecked(const CBlock& block, const BlockValidatio\n \n bool static AlreadyHave(const CInv& inv, const CTxMemPool& mempool) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n-    switch (inv.type)\n-    {\n-    case MSG_TX:\n-    case MSG_WITNESS_TX:\n-    case MSG_WTX:\n+    if (inv.IsGenTxMsg()) {\n+        assert(recentRejects);\n+        if (::ChainActive().Tip()->GetBlockHash() != hashRecentRejectsChainTip) {\n+            // If the chain tip has changed previously rejected transactions\n+            // might be now valid, e.g. due to a nLockTime'd tx becoming valid,\n+            // or a double-spend. Reset the rejects filter and give those\n+            // txs a second chance.\n+            hashRecentRejectsChainTip = ::ChainActive().Tip()->GetBlockHash();\n+            recentRejects->reset();\n+        }\n         {\n-            assert(recentRejects);\n-            if (::ChainActive().Tip()->GetBlockHash() != hashRecentRejectsChainTip)\n-            {\n-                // If the chain tip has changed previously rejected transactions\n-                // might be now valid, e.g. due to a nLockTime'd tx becoming valid,\n-                // or a double-spend. Reset the rejects filter and give those\n-                // txs a second chance.\n-                hashRecentRejectsChainTip = ::ChainActive().Tip()->GetBlockHash();\n-                recentRejects->reset();\n-            }\n-\n-            {\n-                LOCK(g_cs_orphans);\n-                if (!inv.IsMsgWtx() && mapOrphanTransactions.count(inv.hash)) {\n-                    return true;\n-                } else if (inv.IsMsgWtx() && g_orphans_by_wtxid.count(inv.hash)) {\n-                    return true;\n-                }\n-            }\n-\n-            {\n-                LOCK(g_cs_recent_confirmed_transactions);\n-                if (g_recent_confirmed_transactions->contains(inv.hash)) return true;\n+            LOCK(g_cs_orphans);\n+            if (!inv.IsMsgWtx() && mapOrphanTransactions.count(inv.hash)) {\n+                return true;\n+            } else if (inv.IsMsgWtx() && g_orphans_by_wtxid.count(inv.hash)) {\n+                return true;\n             }\n-\n-            return recentRejects->contains(inv.hash) || mempool.exists(ToGenTxid(inv));\n         }\n-    case MSG_BLOCK:\n-    case MSG_WITNESS_BLOCK:\n+        {\n+            LOCK(g_cs_recent_confirmed_transactions);\n+            if (g_recent_confirmed_transactions->contains(inv.hash)) return true;\n+        }\n+        return recentRejects->contains(inv.hash) || mempool.exists(ToGenTxid(inv));\n+    } else if (inv.IsMsgBlkOrMsgWitnessBlk()) {\n         return LookupBlockIndex(inv.hash) != nullptr;\n+    } else {\n+        // Don't know what it is, just say we already got one\n+        return true;\n     }\n-    // Don't know what it is, just say we already got one\n-    return true;\n }\n \n void RelayTransaction(const uint256& txid, const uint256& wtxid, const CConnman& connman)\n@@ -1562,7 +1552,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n     // disconnect node in case we have reached the outbound limit for serving historical blocks\n     if (send &&\n         connman.OutboundTargetReached(true) &&\n-        (((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.type == MSG_FILTERED_BLOCK) &&\n+        (((pindexBestHeader != nullptr) && (pindexBestHeader->GetBlockTime() - pindex->GetBlockTime() > HISTORICAL_BLOCK_AGE)) || inv.IsMsgFilteredBlk()) &&\n         !pfrom.HasPermission(PF_DOWNLOAD) // nodes with the download permission may exceed target\n     ) {\n         LogPrint(BCLog::NET, \"historical block serving limit reached, disconnect peer=%d\\n\", pfrom.GetId());\n@@ -1588,7 +1578,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n         std::shared_ptr<const CBlock> pblock;\n         if (a_recent_block && a_recent_block->GetHash() == pindex->GetBlockHash()) {\n             pblock = a_recent_block;\n-        } else if (inv.type == MSG_WITNESS_BLOCK) {\n+        } else if (inv.IsMsgWitnessBlk()) {\n             // Fast-path: in this case it is possible to serve the block directly from disk,\n             // as the network format matches the format on disk\n             std::vector<uint8_t> block_data;\n@@ -1605,12 +1595,11 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n             pblock = pblockRead;\n         }\n         if (pblock) {\n-            if (inv.type == MSG_BLOCK)\n+            if (inv.IsMsgBlk()) {\n                 connman.PushMessage(&pfrom, msgMaker.Make(SERIALIZE_TRANSACTION_NO_WITNESS, NetMsgType::BLOCK, *pblock));\n-            else if (inv.type == MSG_WITNESS_BLOCK)\n+            } else if (inv.IsMsgWitnessBlk()) {\n                 connman.PushMessage(&pfrom, msgMaker.Make(NetMsgType::BLOCK, *pblock));\n-            else if (inv.type == MSG_FILTERED_BLOCK)\n-            {\n+            } else if (inv.IsMsgFilteredBlk()) {\n                 bool sendMerkleBlock = false;\n                 CMerkleBlock merkleBlock;\n                 if (pfrom.m_tx_relay != nullptr) {\n@@ -1634,9 +1623,7 @@ void static ProcessGetBlockData(CNode& pfrom, const CChainParams& chainparams, c\n                 }\n                 // else\n                     // no response\n-            }\n-            else if (inv.type == MSG_CMPCT_BLOCK)\n-            {\n+            } else if (inv.IsMsgCmpctBlk()) {\n                 // If a peer is asking for old blocks, we're almost guaranteed\n                 // they won't have a useful mempool to match against a compact block,\n                 // and we don't feel like constructing the object for them, so\n@@ -1753,7 +1740,7 @@ void static ProcessGetData(CNode& pfrom, const CChainParams& chainparams, CConnm\n     // expensive to process.\n     if (it != pfrom.vRecvGetData.end() && !pfrom.fPauseSend) {\n         const CInv &inv = *it++;\n-        if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK || inv.type == MSG_CMPCT_BLOCK || inv.type == MSG_WITNESS_BLOCK) {\n+        if (inv.IsGenBlkMsg()) {\n             ProcessGetBlockData(pfrom, chainparams, inv, connman);\n         }\n         // else: If the first item on the queue is an unknown type, we erase it\n@@ -2663,7 +2650,7 @@ void ProcessMessage(\n                 inv.type |= nFetchFlags;\n             }\n \n-            if (inv.type == MSG_BLOCK) {\n+            if (inv.IsMsgBlk()) {\n                 UpdateBlockAvailability(pfrom.GetId(), inv.hash);\n                 if (!fAlreadyHave && !fImporting && !fReindex && !mapBlocksInFlight.count(inv.hash)) {\n                     // Headers-first is the primary method of announcement on"
      }
    ]
  },
  {
    "sha": "953f6990a5414f768e7bfe605288ecb65a2f7a6d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5NTNmNjk5MGE1NDE0Zjc2OGU3YmZlNjA1Mjg4ZWNiNjVhMmY3YTZk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-28T08:47:07Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T16:02:21Z"
      },
      "message": "p2p, refactoring: change CInv::type from int to uint32_t",
      "tree": {
        "sha": "0304da4f22fa1f59d3457284a4098f27831d433f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0304da4f22fa1f59d3457284a4098f27831d433f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/953f6990a5414f768e7bfe605288ecb65a2f7a6d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8pho0ACgkQT1chs9Dj\nkh3gig//fg4MNwH1Fs3/gY9zMWDIyFCIIVeMa5mVuT9tVO+nyxU/FQdhrbujoJ1B\noZIUnUCFga8k8LK9kkXvFhN0Clu6D61yYQ/wohbnUDz6E/52VonKwcfKBsKfwNB7\naStts7dXixMnYg1tK34JtsVEdiHvUD9p80V/ZhZ2tR+rmqfvBFK2p1Eg1uYRr301\nrqFc+yXbaheSjp8IopuOCF/eEepfHu3cChrq1dJmskoFR1PuvQ9Br9hJ9mYmiJ49\nGl1OWAbe1KcuXxeP1CWetSO35C/Lu5daEIPPqOl6M95k68BQzbTkYztkZgTTe2VP\n0cC+OccWsPokp9kiJWs3J90bIUdf2BRwWvj/WZLXI6oh/CGsFaecOwnQelbW80Fn\nKkcruGNApV/cpIG0ZRFGg4lVfbsAS7O/bCcrDELKzEAvJfhFg7Yn6b8jhqX+B8Wd\nZ9423vEMPm1nRjef5mBq9QhD6HBjgou7tS9Pzyb9Fxf0ry2gWcaUjID5Hp/pRpeN\n2VcR2MKEzwQkQgVxeN7bveEuwO3ip4OLHeWFR4TRrFEKU6yDa+gTvNNV0uiLymhl\naLXV+bISz0WSlNOnyNVxC8lBpiiFPWxQE6+OBgQITDbsBdUblLQQWe6j5U79zGkd\nRQOAWt2fPiy0uPYoJVgOGhgniQcahpnwCf/lJ62mC8u7BG0HG3g=\n=Bdb2\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIAIA96B+XNXTeHizTRbmi6fycK36/aFvx4RMiX9ZyrYNCP/wEGRwDjldaqkJ\nOy0EdVoQsQAI8QRfKYaO8AhmDg3JPywtbQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEKYlMdz8tZtt4OmLkbWzy8EI8CA0OyTv\nRuQ+fe65gpIm6Al/Cv30T2e+1sPw790+6TdXKgjxBF8pho7wCOYbY7OsIBOrAIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BC/8VU+jN0Bnco/8lrLFpGeCPEgmL2NltSFW0/Vd2l1alg+LENp27cf\nX2CFgkRkkvE1a4EI8QRfKYaO8Ahb9d8LHcOELgCD3+MNLvkMjiwraHR0cHM6Ly9i\nb2IuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ/AQ7EOjdXTtzoxNdc6K\nAyeTnAjwICcWHY/nwEzfFzrpA36pFGzK3t3Hsw23VpKKGS0FVAcnCPEEXymGjvAI\nBSyggmKy98EAg9/jDS75DI4pKGh0dHBzOi8vZmlubmV5LmNhbGVuZGFyLmV0ZXJu\naXR5d2FsbC5jb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0304da4f22fa1f59d3457284a4098f27831d433f\nparent e21c3cef50bac5ae7db740b43204733e4e665c31\nauthor Jon Atack <jon@atack.com> 1595926027 +0200\ncommitter Jon Atack <jon@atack.com> 1596556941 +0200\n\np2p, refactoring: change CInv::type from int to uint32_t\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/953f6990a5414f768e7bfe605288ecb65a2f7a6d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/953f6990a5414f768e7bfe605288ecb65a2f7a6d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/953f6990a5414f768e7bfe605288ecb65a2f7a6d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e21c3cef50bac5ae7db740b43204733e4e665c31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e21c3cef50bac5ae7db740b43204733e4e665c31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e21c3cef50bac5ae7db740b43204733e4e665c31"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "13871afbdc112a9ee38b619b719119bf43db4a1f",
        "filename": "src/protocol.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/953f6990a5414f768e7bfe605288ecb65a2f7a6d/src/protocol.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/953f6990a5414f768e7bfe605288ecb65a2f7a6d/src/protocol.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.cpp?ref=953f6990a5414f768e7bfe605288ecb65a2f7a6d",
        "patch": "@@ -163,7 +163,7 @@ CInv::CInv()\n     hash.SetNull();\n }\n \n-CInv::CInv(int typeIn, const uint256& hashIn) : type(typeIn), hash(hashIn) {}\n+CInv::CInv(uint32_t typeIn, const uint256& hashIn) : type(typeIn), hash(hashIn) {}\n \n bool operator<(const CInv& a, const CInv& b)\n {"
      },
      {
        "sha": "6ddfbcefc3927b1f7e2db3b07308235cc24d00f7",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/953f6990a5414f768e7bfe605288ecb65a2f7a6d/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/953f6990a5414f768e7bfe605288ecb65a2f7a6d/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=953f6990a5414f768e7bfe605288ecb65a2f7a6d",
        "patch": "@@ -247,7 +247,7 @@ extern const char* CFCHECKPT;\n  * txid.\n  * @since protocol version 70016 as described by BIP 339.\n  */\n-extern const char *WTXIDRELAY;\n+extern const char* WTXIDRELAY;\n }; // namespace NetMsgType\n \n /* Get a vector of all valid message types (see above) */\n@@ -402,7 +402,7 @@ class CInv\n {\n public:\n     CInv();\n-    CInv(int typeIn, const uint256& hashIn);\n+    CInv(uint32_t typeIn, const uint256& hashIn);\n \n     SERIALIZE_METHODS(CInv, obj) { READWRITE(obj.type, obj.hash); }\n \n@@ -427,7 +427,7 @@ class CInv\n     bool IsMsgBlkOrMsgWitnessBlk() const { return type == MSG_BLOCK || type == MSG_WITNESS_BLOCK; }\n     bool IsGenBlkMsg() const { return type == MSG_BLOCK || type == MSG_FILTERED_BLOCK || type == MSG_CMPCT_BLOCK || type == MSG_WITNESS_BLOCK; }\n \n-    int type;\n+    uint32_t type;\n     uint256 hash;\n };\n "
      }
    ]
  },
  {
    "sha": "0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowYjU4NDJjNWQzMDYwYTNiNWU4ZDU1YjhmOTM3NmFjMGVlYWZkNTI0",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-07-27T20:02:20Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T16:02:23Z"
      },
      "message": "p2p, refactoring: make CInv::type private",
      "tree": {
        "sha": "e7327813385063ad20896fe62c36756c58733f24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e7327813385063ad20896fe62c36756c58733f24"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8pho8ACgkQT1chs9Dj\nkh1juxAAhHQ7q8Pbno/u7U/sNM5oWsxe6WgxvO5e5QS3il5BDw9md7GvThnPZUGb\n6vkSgnxHQDRAtqbS07rpFRul7ZsugsspU2xRZF4YTUeaGtrXlax+n/wMHFf1hfFh\nZ6X5pQAEEJZ5S6O59Mt+KRRZuyeMqL9dEWCA74M68LZ2+cEeShxGVpCdHQ8xnDTN\ntIKlbCVR19Jkxern3dv5PLVBFbC5I2hJfSuFW1jk9E7NQjahPjAcaScmADBBlB2X\nV9p50rFdy5P35+rkk/9+RFLmdme/IDizcWHjl8Jg5bwG4jh0vlgrO6SJlfcxydzt\n8l5pCEhUSX5HpjPOzQKEbAkcrz6zq5Ft8pKv5nGspTbNEBQGlr1nTGYUnP7uCNN3\nkwOjc2IXEyFOa8p19si7+Q+jjRKAbC6egHCSuU3gy+J9mZgiOmB4DHIedX+kay5S\nMv33dzY431tqLwqDcmgAYeOGb9blSNZjZO94hEYy40MUpWyiAXG4CifANtK9xQMc\nNAolmnvyKOguTraIrq26LeCDR6pZZIXeQNOK+uaCeKBemMgWQVuXYrDHmqubqYtK\nMMyY0cKeD9Vq05cEncC/OlS2lgekWbdFPEr0GMMKpzxAlPuqn77+7kCiVwyDOqD7\nKg0VDM/NQ0R3mQjM20ufzuXM5/OAOVsMLHvU9FZJVbCX0P1HxAs=\n=az0b\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIDyHkRLS3KLGzVH/+yCSAEff9UKTaAGDLHWpLSYxivkGCP/wEBwnJ718DCRa\nfp6y7iH31FwI8CBMmN0Q6PEngohZZSce/XGZOdsJa+kS+7QO+kgxAe9vkAjxBF8p\nhpHwCF17VALQav2cAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn//AQOdwfNjaVwaZgPrOFtlQt1QjwIJxL1kRACrcz\nMvd95FL+U/OJLcKk9f5+pR5Io/hu8mxHCPEEXymGkfAI9FStpblbpKMAg9/jDS75\nDI4uLWh0dHBzOi8vYWxpY2UuYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9y\nZ//wEEjPP/91YR88Y2wc5N0wyKEI8QRfKYaQ8AiHfWCygj6hFwCD3+MNLvkMjiko\naHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQx6uVmguo\nb6n1EchCQHLMbwjxBF8phpDwCOFcLtN3AcXjAIPf4w0u+QyOIyJodHRwczovL2J0\nYy5jYWxlbmRhci5jYXRhbGxheHkuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e7327813385063ad20896fe62c36756c58733f24\nparent 953f6990a5414f768e7bfe605288ecb65a2f7a6d\nauthor Jon Atack <jon@atack.com> 1595880140 +0200\ncommitter Jon Atack <jon@atack.com> 1596556943 +0200\n\np2p, refactoring: make CInv::type private\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "953f6990a5414f768e7bfe605288ecb65a2f7a6d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/953f6990a5414f768e7bfe605288ecb65a2f7a6d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/953f6990a5414f768e7bfe605288ecb65a2f7a6d"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "aa012f4fb4b1965e77ca391074b3ede2173446f7",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 5,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
        "patch": "@@ -2647,7 +2647,7 @@ void ProcessMessage(\n             LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n \n             if (inv.IsMsgTx()) {\n-                inv.type |= nFetchFlags;\n+                inv.SetTypeBitwiseOr(nFetchFlags);\n             }\n \n             if (inv.IsMsgBlk()) {\n@@ -2802,10 +2802,9 @@ void ProcessMessage(\n             // expensive disk reads, because it will require the peer to\n             // actually receive all the data read from disk over the network.\n             LogPrint(BCLog::NET, \"Peer %d sent us a getblocktxn for a block > %i deep\\n\", pfrom.GetId(), MAX_BLOCKTXN_DEPTH);\n-            CInv inv;\n-            inv.type = State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK;\n-            inv.hash = req.blockhash;\n-            pfrom.vRecvGetData.push_back(inv);\n+\n+            uint32_t inv_type{State(pfrom.GetId())->fWantsCmpctWitness ? MSG_WITNESS_BLOCK : MSG_BLOCK};\n+            pfrom.vRecvGetData.emplace_back(inv_type, req.blockhash);\n             // The message processing loop will go around again (without pausing) and we'll respond then (without cs_main)\n             return;\n         }"
      },
      {
        "sha": "6e031304b8f543a2a339427cabfe256c4ad2d0ef",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
        "patch": "@@ -400,6 +400,8 @@ enum GetDataMsg : uint32_t {\n /** inv message data */\n class CInv\n {\n+private:\n+    uint32_t type;\n public:\n     CInv();\n     CInv(uint32_t typeIn, const uint256& hashIn);\n@@ -427,8 +429,8 @@ class CInv\n     bool IsMsgBlkOrMsgWitnessBlk() const { return type == MSG_BLOCK || type == MSG_WITNESS_BLOCK; }\n     bool IsGenBlkMsg() const { return type == MSG_BLOCK || type == MSG_FILTERED_BLOCK || type == MSG_CMPCT_BLOCK || type == MSG_WITNESS_BLOCK; }\n \n-    uint32_t type;\n     uint256 hash;\n+    void SetTypeBitwiseOr(uint32_t flags) { type |= flags; }\n };\n \n /** Convert a TX/WITNESS_TX/WTX CInv to a GenTxid. */"
      }
    ]
  },
  {
    "sha": "3cc943b87f5a0d736c754bde6506b72bf763e14e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozY2M5NDNiODdmNWEwZDczNmM3NTRiZGU2NTA2YjcyYmY3NjNlMTRl",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T14:41:32Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T16:02:25Z"
      },
      "message": "p2p: remove unused nFetchFlags from NetMsgType::TX processing",
      "tree": {
        "sha": "4058ed05d3749797fff9d4c071e3e6a557152d46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4058ed05d3749797fff9d4c071e3e6a557152d46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3cc943b87f5a0d736c754bde6506b72bf763e14e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8phpIACgkQT1chs9Dj\nkh2COA//Y9AZr1LE8v/YLpZFNtJptJ3QWrNjMvWKepGzj9nnT2ap0qG6KvOl9lag\nBiduqMJMTuxEZ+/l00QPEmTp9hDuMUsnUuXcFl0MvS52mLTXoXq+h8dQ+F3pnU5n\nbJY99XvllrbXoQF1aG4Lg5tRN4mwPdZqmkfBD3OyqPb6wJppzyWiPEUrnb67pB4P\nwGrE6VcKr3iCFvWJUyzI4sp/5BmMSHgScC9EkDrBKKXIYAUPY40AkmAsVQfH78F5\neNT1gUYmW0sqlR+6arE85bYhSKxaCEBZnFkWL74zzWqZmi0tnndqEbX2jrh6pKhe\nG5kzSwbby2Xo/8Jnhz7CmSZc+v3ouLUnrjZU/UL3wImgkCnifC1LZQoH6NWbNqeY\n3cMM6m2nvyKSRO04n9liF+iSsYQjyCBnrhSVUzG0QWYoSJJ2Mp/7dljIt3D5H5O9\nwbQt7YTupTUQsWJrMn4ofRfxxuejIPg7Ij1FdoYyigh7qyEkM3WdzpnTBgfEl2v5\nsbZHG2MND5zW2APiUvQD+PSNdqetTsL8oz5B1lEIpGoIyMWSAHVczLKLU4+khXEQ\ny71soaigGslvuwEmXvHEiGEw1jH1GU9EjVUfi6UpTWnkdk9EWRGAHTqf2HKLAidX\nXjhFuc8BlwFidMaftdYNDCTnf8f9Ev/g5S5s5rbhfH6FuBve1h0=\n=/sZ/\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIN61yVLGafTzcCXn93IMU1lEyPBfX6gJOAzLqdeWnhpbCP/wEDbJ/tpULODJ\nLCt7zjARNLsI8QRfKYaT8AhZMpmUzHUaJwCD3+MNLvkMjikoaHR0cHM6Ly9maW5u\nZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbf/wEDiSbj7JFs94DC159nGi96gI\n8QRfKYaT8AjqovYSJbJRJwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQmXBMF3OTH2AKa1zUYt9guQjxBF8p\nhpPwCHV/P9RXZT91AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BDs4Ncv85ZuGLKrRJhuI4HZCPEEXymGk/AIsouQ\nK+L+mK8Ag9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 4058ed05d3749797fff9d4c071e3e6a557152d46\nparent 0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524\nauthor Jon Atack <jon@atack.com> 1596552092 +0200\ncommitter Jon Atack <jon@atack.com> 1596556945 +0200\n\np2p: remove unused nFetchFlags from NetMsgType::TX processing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cc943b87f5a0d736c754bde6506b72bf763e14e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3cc943b87f5a0d736c754bde6506b72bf763e14e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cc943b87f5a0d736c754bde6506b72bf763e14e/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/0b5842c5d3060a3b5e8d55b8f9376ac0eeafd524"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 1,
      "deletions": 2
    },
    "files": [
      {
        "sha": "338a10be3d145a3cbfddfa5f5e8720969cbecf60",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 2,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3cc943b87f5a0d736c754bde6506b72bf763e14e/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3cc943b87f5a0d736c754bde6506b72bf763e14e/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=3cc943b87f5a0d736c754bde6506b72bf763e14e",
        "patch": "@@ -2972,7 +2972,6 @@ void ProcessMessage(\n                 }\n             }\n             if (!fRejectedParents) {\n-                uint32_t nFetchFlags = GetFetchFlags(pfrom);\n                 const auto current_time = GetTime<std::chrono::microseconds>();\n \n                 for (const CTxIn& txin : tx.vin) {\n@@ -2981,7 +2980,7 @@ void ProcessMessage(\n                     // wtxidrelay peers.\n                     // Eventually we should replace this with an improved\n                     // protocol for getting all unconfirmed parents.\n-                    CInv _inv(MSG_TX | nFetchFlags, txin.prevout.hash);\n+                    CInv _inv(MSG_TX, txin.prevout.hash);\n                     pfrom.AddKnownTx(txin.prevout.hash);\n                     if (!AlreadyHave(_inv, mempool)) RequestTx(State(pfrom.GetId()), ToGenTxid(_inv), current_time);\n                 }"
      }
    ]
  },
  {
    "sha": "83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4M2RlOTJlOGQ4ZmI3MmU2Y2M0OTVhNDlkYjllY2YwZjA3N2VhYzMz",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-03T15:11:29Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-08-04T16:02:28Z"
      },
      "message": "p2p: remove unused nFetchFlags from NetMsgType::INV processing",
      "tree": {
        "sha": "bffcc0cd9de0aef980a3793995e8c94298a23fb7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bffcc0cd9de0aef980a3793995e8c94298a23fb7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl8phpQACgkQT1chs9Dj\nkh2BBA//SCIWcFSRKkEWNdRPmcrTCFB8soBV5Ew7ek6gifVCN7Tho1E4pf9VwzTA\n9lPBp8A8+AQhQeQlOHTMt04o6lnsg9wWfeGg+J7v6KPQ+R3e8fsKTo6hiPTOu+4t\ntyQoOhMQx8IDXy71nNzH2GgSJRtB0BSh5ShqYxrjMVsQ17d/yIsCBtAAZU9OlHMx\nkHd9/axCB8E/BlRmT8NDJFJvIMPV2O+K8vp1V/X0/YtIi7WA6HemL50gJ4UHDJXf\nP0WtamfhSYjkLNqrKV2bfFUaLpYiYOGN8gueMS8aMvhjQEkEkTsKcyyblEzQcDeu\nGL2Sc2hH3KPb2V5eI5pPpuQ68aHKvrp1GU6+RpXYwINOW0NH/eraGV/Fn3851kKU\n2ffyJhClD3DbOb6JDAzPHvLeguhqxxfx1zG0o8P1DJr3+zm+Rm9k/N1dBVuJD3XO\ngSXMZUviqpn3I/KKs9WIZdBg3UcG9d5Q5Jq5CNOLYgXjpRLqkdX1+WN7mVltpold\nYF0fi3s3syXPMqIO79+OWXJ2X+ffMxWgPEBZ+zxo5LLKiAbJudu4vkpmd0dcl9GB\ny6Ac2VXGOkTXAPCb7E8gP5QGImUHFoL96HeNa6g4r+gOymSqFxeYsNlYcFbpENvT\nVwGHi7fp3veeuaNGUPcvxW7MkKslvx0Sjggi4bFKC1sXSgJYI2g=\n=k+UZ\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIA+AAVn4w2m95xDcDLsAiVHbYc9esm6311EgPM6DIzl3CP/wECbIWRyx0f0l\nUbQgoCVOOQsI8QRfKYaV8Ai/GPoHLu44XACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEHUEPgW3MjbhHACuFY1QcJkI8CDlt0Le\nRL4mazVNPD1M1an1UqUW6yw9pXzEB4vKzunbYAjxBF8phpXwCAaXNltvGfo4AIPf\n4w0u+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1w\ncy5vcmf/8BB/9KB7DQgJDZ0v1lXIVWNUCPAgOUYQcIaLZBCohsJBhH5UqNtbjdMk\nsqTuezp+jkBH/+wI8QRfKYaV8AgardPzKzQuTQCD3+MNLvkMjikoaHR0cHM6Ly9m\naW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3YWxsLmNvbfAQh6Are+7aQWdrh7SS+PzE\nnwjxBF8phpXwCGr6+mAl02pqAIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2Fs\nZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree bffcc0cd9de0aef980a3793995e8c94298a23fb7\nparent 3cc943b87f5a0d736c754bde6506b72bf763e14e\nauthor Jon Atack <jon@atack.com> 1596467489 +0200\ncommitter Jon Atack <jon@atack.com> 1596556948 +0200\n\np2p: remove unused nFetchFlags from NetMsgType::INV processing\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/83de92e8d8fb72e6cc495a49db9ecf0f077eac33/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3cc943b87f5a0d736c754bde6506b72bf763e14e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3cc943b87f5a0d736c754bde6506b72bf763e14e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3cc943b87f5a0d736c754bde6506b72bf763e14e"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 1,
      "deletions": 8
    },
    "files": [
      {
        "sha": "d6f3c00a475be18f7f11db6619e4fa50875e164b",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 7,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83de92e8d8fb72e6cc495a49db9ecf0f077eac33/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83de92e8d8fb72e6cc495a49db9ecf0f077eac33/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
        "patch": "@@ -2625,14 +2625,12 @@ void ProcessMessage(\n \n         LOCK(cs_main);\n \n-        uint32_t nFetchFlags = GetFetchFlags(pfrom);\n         const auto current_time = GetTime<std::chrono::microseconds>();\n         uint256* best_block{nullptr};\n \n         for (CInv &inv : vInv)\n         {\n-            if (interruptMsgProc)\n-                return;\n+            if (interruptMsgProc) return;\n \n             // Ignore INVs that don't match wtxidrelay setting.\n             // Note that orphan parent fetching always uses MSG_TX GETDATAs regardless of the wtxidrelay setting.\n@@ -2646,10 +2644,6 @@ void ProcessMessage(\n             bool fAlreadyHave = AlreadyHave(inv, mempool);\n             LogPrint(BCLog::NET, \"got inv: %s  %s peer=%d\\n\", inv.ToString(), fAlreadyHave ? \"have\" : \"new\", pfrom.GetId());\n \n-            if (inv.IsMsgTx()) {\n-                inv.SetTypeBitwiseOr(nFetchFlags);\n-            }\n-\n             if (inv.IsMsgBlk()) {\n                 UpdateBlockAvailability(pfrom.GetId(), inv.hash);\n                 if (!fAlreadyHave && !fImporting && !fReindex && !mapBlocksInFlight.count(inv.hash)) {"
      },
      {
        "sha": "7117b6979db5a2e296cbe455cbf25dd19f035828",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/83de92e8d8fb72e6cc495a49db9ecf0f077eac33/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/83de92e8d8fb72e6cc495a49db9ecf0f077eac33/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=83de92e8d8fb72e6cc495a49db9ecf0f077eac33",
        "patch": "@@ -430,7 +430,6 @@ class CInv\n     bool IsGenBlkMsg() const { return type == MSG_BLOCK || type == MSG_FILTERED_BLOCK || type == MSG_CMPCT_BLOCK || type == MSG_WITNESS_BLOCK; }\n \n     uint256 hash;\n-    void SetTypeBitwiseOr(uint32_t flags) { type |= flags; }\n };\n \n /** Convert a TX/WITNESS_TX/WTX CInv to a GenTxid. */"
      }
    ]
  }
]