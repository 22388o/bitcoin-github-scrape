gavinandresen,2012-06-18T13:45:55Z,How should this be tested?\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-6396180,6396180,
sipa,2012-06-18T13:56:36Z,"I suppose you could temporarily add an immature_amount to the gettransaction() RPC, and immature_balance to getinfo(), and mine a few blocks on testnet.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-6396448,6396448,
Diapolo,2012-06-20T13:19:26Z,"I ""only"" verified this patch with Bitcoin-Qt on testnet, I'm not sure how to test this with bitcoind, as I can't compile it. Help would be appreciated, as this testing is blocking a merge.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-6453571,6453571,
BitcoinPullTester,2012-08-09T23:41:53Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/ed1afd67c1d3f485a9ba3850ba2751e50d897f53 for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-7630368,7630368,
luke-jr,2012-08-12T18:56:34Z,@Diapolo Those builds from @BitcoinPullTester should help you out\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-7678676,7678676,
Diapolo,2012-08-13T20:44:01Z,@luke-jr How does this help? You mean using the Qt version from jenkins and using it on testnet?\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-7707366,7707366,
luke-jr,2012-08-13T22:34:11Z,@Diapolo I was thinking http://jenkins.bluematt.me/pull-tester/ed1afd67c1d3f485a9ba3850ba2751e50d897f53/bitcoin/src/bitcoind.exe\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-7710496,7710496,
Diapolo,2012-08-25T08:33:38Z,"Guys, I setup bitcoind and can use it to pass RPC commands, but I simply don't know how you want me to test the function there, as `GetImmatureBalance()` seems to be only used by Qt?\n\nI could for sure add `obj.push_back(Pair(""walletversion"", pwalletMain->GetImmatureBalance()));` to RPC `getinfo`, but as I can't compile bitcoind I would rely on @BitcoinPullTester to create a bitcoind.exe for me a",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-8021383,8021383,
sipa,2012-08-25T11:38:30Z,"GetImmatureBalance looks correct from reading it, and it's only used within the Qt code. I'm sure we can use it in RPC code as well, but let's do that later.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-8022491,8022491,
Diapolo,2012-08-26T00:18:46Z,"@sipa I didn't want to push or create a usage scenario for RPC, I just wanted to say I dunno how to further test this code :). As I said in Qt it does the job and asked if it will get accepted that way or what I can do now.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-8028840,8028840,
sipa,2012-08-26T00:19:29Z,ACK on the changes to core; I didn't test the UI changes.\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-8028844,8028844,
BitcoinPullTester,2012-08-26T13:07:12Z,"Automatic sanity-testing: PASSED, see http://jenkins.bluematt.me/pull-tester/dfdd4dac8291b55fd96feea3b4545a0a5389e86b for binaries and test log.\n",https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-8032963,8032963,
Diapolo,2012-11-13T06:58:21Z,Rebased!\n,https://github.com/bitcoin/bitcoin/pull/1479#issuecomment-10317418,10317418,
laanwj,2012-11-13T07:10:53Z,"Why change this to a pointer instead of a reference (&)? IMO `&(*it).second;` is slightly more ugly code, and in C++ it's generally advised to use references instead of pointers where possible (for type safety etc).\n",https://github.com/bitcoin/bitcoin/pull/1479#discussion_r2106618,2106618,src/wallet.cpp
laanwj,2012-11-13T07:17:19Z,"ACK\n(I wonder why this implementation is in the .h, not the .cpp, but I suppose you simply followed the example of GetAvailableCredit) \n",https://github.com/bitcoin/bitcoin/pull/1479#discussion_r2106649,2106649,src/wallet.h
Diapolo,2012-11-13T07:21:51Z,"Indeed, I just used what was there. Sometimes I have not that wide view/knowlegde you have in the area of coding :).\n",https://github.com/bitcoin/bitcoin/pull/1479#discussion_r2106671,2106671,src/wallet.h
Diapolo,2012-11-13T07:23:10Z,"Same as below, I wanted this to be similar to the other functions, perhaps it would be a good idea to update all these to be more C++ style then? But I'm not sure if core devs would ACK such a change on that code-part?\n",https://github.com/bitcoin/bitcoin/pull/1479#discussion_r2106684,2106684,src/wallet.cpp
laanwj,2012-11-13T07:31:06Z,"Satoshi is a very bad person to learn C++ style from :poodle: If you want an example of well-structured, readable C++ I can recommend reading source from LLVM.\nAnd I'm not sure either, it doesn't warrant changing all the functions I guess... maybe just leave it like this then.\n",https://github.com/bitcoin/bitcoin/pull/1479#discussion_r2106752,2106752,src/wallet.cpp
