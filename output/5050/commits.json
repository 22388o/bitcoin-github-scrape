[
  {
    "sha": "772ab0ea98b31020095eaf9baa6a6504957507af",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3NzJhYjBlYTk4YjMxMDIwMDk1ZWFmOWJhYTZhNjUwNDk1NzUwN2Fm",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-10-06T11:23:27Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2014-10-06T11:27:13Z"
      },
      "message": "contrib: use batched JSON-RPC in linarize-hashes\n\nBatch up to 10000 requests for a ~30x speedup.",
      "tree": {
        "sha": "ccabcb4708390fd800b407259be968ad831c902d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ccabcb4708390fd800b407259be968ad831c902d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/772ab0ea98b31020095eaf9baa6a6504957507af",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/772ab0ea98b31020095eaf9baa6a6504957507af",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/772ab0ea98b31020095eaf9baa6a6504957507af",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/772ab0ea98b31020095eaf9baa6a6504957507af/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35ee2dac6736e23be3fdd584ba0e321e54ff8f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ee2dac6736e23be3fdd584ba0e321e54ff8f61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35ee2dac6736e23be3fdd584ba0e321e54ff8f61"
      }
    ],
    "stats": {
      "total": 71,
      "additions": 39,
      "deletions": 32
    },
    "files": [
      {
        "sha": "dc7f6540499620738fff5bcd510970d2f400a54c",
        "filename": "contrib/linearize/linearize-hashes.py",
        "status": "modified",
        "additions": 39,
        "deletions": 32,
        "changes": 71,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/772ab0ea98b31020095eaf9baa6a6504957507af/contrib/linearize/linearize-hashes.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/772ab0ea98b31020095eaf9baa6a6504957507af/contrib/linearize/linearize-hashes.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/linearize/linearize-hashes.py?ref=772ab0ea98b31020095eaf9baa6a6504957507af",
        "patch": "@@ -2,11 +2,12 @@\n #\n # linearize-hashes.py:  List blocks in a linear, no-fork version of the chain.\n #\n-# Copyright (c) 2013 The Bitcoin developers\n+# Copyright (c) 2013-2014 The Bitcoin developers\n # Distributed under the MIT/X11 software license, see the accompanying\n # file COPYING or http://www.opensource.org/licenses/mit-license.php.\n #\n \n+from __future__ import print_function\n import json\n import struct\n import re\n@@ -17,59 +18,65 @@\n settings = {}\n \n class BitcoinRPC:\n-\tOBJID = 1\n-\n \tdef __init__(self, host, port, username, password):\n \t\tauthpair = \"%s:%s\" % (username, password)\n \t\tself.authhdr = \"Basic %s\" % (base64.b64encode(authpair))\n \t\tself.conn = httplib.HTTPConnection(host, port, False, 30)\n-\tdef rpc(self, method, params=None):\n-\t\tself.OBJID += 1\n-\t\tobj = { 'version' : '1.1',\n-\t\t\t'method' : method,\n-\t\t\t'id' : self.OBJID }\n-\t\tif params is None:\n-\t\t\tobj['params'] = []\n-\t\telse:\n-\t\t\tobj['params'] = params\n+\n+\tdef execute(self, obj):\n \t\tself.conn.request('POST', '/', json.dumps(obj),\n \t\t\t{ 'Authorization' : self.authhdr,\n \t\t\t  'Content-type' : 'application/json' })\n \n \t\tresp = self.conn.getresponse()\n \t\tif resp is None:\n-\t\t\tprint \"JSON-RPC: no response\"\n+\t\t\tprint(\"JSON-RPC: no response\", file=sys.stderr)\n \t\t\treturn None\n \n \t\tbody = resp.read()\n \t\tresp_obj = json.loads(body)\n-\t\tif resp_obj is None:\n-\t\t\tprint \"JSON-RPC: cannot JSON-decode body\"\n-\t\t\treturn None\n-\t\tif 'error' in resp_obj and resp_obj['error'] != None:\n-\t\t\treturn resp_obj['error']\n-\t\tif 'result' not in resp_obj:\n-\t\t\tprint \"JSON-RPC: no result in object\"\n-\t\t\treturn None\n+\t\treturn resp_obj\n \n-\t\treturn resp_obj['result']\n-\tdef getblock(self, hash, verbose=True):\n-\t\treturn self.rpc('getblock', [hash, verbose])\n-\tdef getblockhash(self, index):\n-\t\treturn self.rpc('getblockhash', [index])\n+\t@staticmethod\n+\tdef build_request(idx, method, params):\n+\t\tobj = { 'version' : '1.1',\n+\t\t\t'method' : method,\n+\t\t\t'id' : idx }\n+\t\tif params is None:\n+\t\t\tobj['params'] = []\n+\t\telse:\n+\t\t\tobj['params'] = params\n+\t\treturn obj\n+\n+\t@staticmethod\n+\tdef response_is_error(resp_obj):\n+\t\treturn 'error' in resp_obj and resp_obj['error'] is not None\n \n-def get_block_hashes(settings):\n+def get_block_hashes(settings, max_blocks_per_call=10000):\n \trpc = BitcoinRPC(settings['host'], settings['port'],\n \t\t\t settings['rpcuser'], settings['rpcpassword'])\n \n-\tfor height in xrange(settings['min_height'], settings['max_height']+1):\n-\t\thash = rpc.getblockhash(height)\n+\theight = settings['min_height']\n+\twhile height < settings['max_height']+1:\n+\t\tnum_blocks = min(settings['max_height']+1-height, max_blocks_per_call)\n+\t\tbatch = []\n+\t\tfor x in range(num_blocks):\n+\t\t\tbatch.append(rpc.build_request(x, 'getblockhash', [height + x]))\n+\n+\t\treply = rpc.execute(batch)\n+\n+\t\tfor x,resp_obj in enumerate(reply):\n+\t\t\tif rpc.response_is_error(resp_obj):\n+\t\t\t\tprint('JSON-RPC: error at height', height+x, ': ', resp_obj['error'], file=sys.stderr)\n+\t\t\t\texit(1)\n+\t\t\tassert(resp_obj['id'] == x) # assume replies are in-sequence\n+\t\t\tprint(resp_obj['result'])\n \n-\t\tprint(hash)\n+\t\theight += num_blocks\n \n if __name__ == '__main__':\n \tif len(sys.argv) != 2:\n-\t\tprint \"Usage: linearize-hashes.py CONFIG-FILE\"\n+\t\tprint(\"Usage: linearize-hashes.py CONFIG-FILE\")\n \t\tsys.exit(1)\n \n \tf = open(sys.argv[1])\n@@ -95,7 +102,7 @@ def get_block_hashes(settings):\n \tif 'max_height' not in settings:\n \t\tsettings['max_height'] = 313000\n \tif 'rpcuser' not in settings or 'rpcpassword' not in settings:\n-\t\tprint \"Missing username and/or password in cfg file\"\n+\t\tprint(\"Missing username and/or password in cfg file\", file=stderr)\n \t\tsys.exit(1)\n \n \tsettings['port'] = int(settings['port'])"
      }
    ]
  }
]