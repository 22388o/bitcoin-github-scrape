dcousens,2015-12-29T01:35:30Z,utACK\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167691046,167691046,
pstratem,2015-12-29T01:43:59Z,NACK accounts are deprecated\n\nperformance improvements for code which will be removed isn't worth it\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167692511,167692511,
dcousens,2015-12-29T01:44:56Z,@pstratem is there a concrete list of deprecations somewhere?\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167692566,167692566,
pstratem,2015-12-29T01:51:14Z,@dcousens https://github.com/bitcoin/bitcoin/pull/5575\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167694170,167694170,
dcousens,2015-12-29T02:35:44Z,Why do they still exist if they were deprecated prior to `0.11`?\nShouldn't they be removed for `0.12`?\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167702990,167702990,
dooglus,2015-12-29T03:25:26Z,"Luke [wrote](https://github.com/bitcoin/bitcoin/issues/3816#issuecomment-61816826) ""merchants and exchanges [...] shouldn't be using Bitcoin Core's wallet implementation at all right now"" to which sipa [responded](https://github.com/bitcoin/bitcoin/issues/3816#issuecomment-61817110) ""whether they should or not, I'm pretty sure that several do, and we don't want them to stop upgrading their softwar",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167710198,167710198,
dcousens,2015-12-29T03:33:57Z,"@laanwj this is obviously up to you,  but IMHO we should NACK this if it is _actually_ deprecated, then promptly remove all of the accounting features entirely (for `0.13`, or even `0.12` if possible, may be too late now though).\n\nIf its staying around for a few more versions, then, IMHO, we should maintain it (aka, ACK).\n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-167710627,167710627,
laanwj,2016-01-04T08:39:47Z,"No problem with using bitcoin core's wallet implementation, but indeed, the accounts mechanism is going to be removed at some point.\n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-168611865,168611865,
laanwj,2016-01-04T08:41:39Z,In any case that's not a reason for not merging this - this doesn't actually extend the API (which would be problematic) but purports make the current implementation more efficient. If this is code review correct and tested there's no reason not to merge it.\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-168612094,168612094,
pstratem,2016-01-05T19:10:12Z,@laanwj if anything we should be making these rpc calls slow in the hope that people notice they're deprecated\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-169100269,169100269,
luke-jr,2016-01-15T20:55:57Z,"Note that one reason accounts are not removed yet, is _because_ we have no alternative to getaccountaddress yet... and it's likely this code will get reused in implementing whatever replaces it. So concept ACK.\n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-172090356,172090356,
luke-jr,2016-01-15T20:59:54Z,"Also utACK, with mentioned nit.\n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-172091124,172091124,
jonasschnelli,2016-01-20T13:07:31Z,"utACK.\nI agree that we should not extend the account API, but – as long as it's not removed – we should maintain it and should therefore accept optimizations. \n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-173198142,173198142,
luke-jr,2016-01-30T00:33:17Z,"Perhaps of interest: BFGMiner uses getaccountaddress, and it adds a 1-2 second delay after finding a block, before it switches to mining the next one... Not sure the optimisations here are sufficient, but we definitely should improve this.\n",https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-177031224,177031224,
pstratem,2016-01-30T00:38:45Z,@luke-jr er... why?\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-177032022,177032022,
luke-jr,2016-01-30T00:51:08Z,Gets a non-reused address without filling the wallet with keys that invalidate backups.\n,https://github.com/bitcoin/bitcoin/pull/7262#issuecomment-177034140,177034140,
luke-jr,2016-01-15T20:59:17Z,"Flattening the wtx variable doesn't actually optimise anything, and makes it slightly harder to follow. I'd prefer to not change this aspect.\n",https://github.com/bitcoin/bitcoin/pull/7262#discussion_r49904396,49904396,src/wallet/rpcwallet.cpp
