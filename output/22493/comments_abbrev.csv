jonatack,2021-07-19 16:30:57,ACK aaaa9c6019790a1a21a7b4ef01693ac9390ae6d0 per `git diff fa74025 aaaa9c6`,https://github.com/bitcoin/bitcoin/pull/22493#issuecomment-882688860,882688860,
DrahtBot,2021-07-19 19:09:44,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #22508 by apoelstra\n* #21129 by vasild\n\nIf you consider this pull request important, please also help to review the con",https://github.com/bitcoin/bitcoin/pull/22493#issuecomment-882790239,882790239,
MarcoFalke,2021-07-20 07:04:32,@vasild I am seeing there is a conflict. Do you have a preference which one should be merged first?,https://github.com/bitcoin/bitcoin/pull/22493#issuecomment-883147831,883147831,
MarcoFalke,2021-07-22 14:54:50,"Ok, merging the one with the nicer commit-hash first :sweat_smile: ",https://github.com/bitcoin/bitcoin/pull/22493#issuecomment-884978610,884978610,
vasild,2021-07-19 11:48:24,"I think that `addr_man` is not in a usable state if an exception is thrown (i.e. it is in an undefined state). Below we call its methods and expect they would work. Maybe:\n```suggestion\n        try {\n            ds >> addr_man;\n        } catch (const std::ios_base::failure&) {\n            addr_man.Clear();\n        }\n```",https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672227277,672227277,src/test/fuzz/addrman.cpp
MarcoFalke,2021-07-19 12:19:21,Good catch. Fixed.,https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672246486,672246486,src/test/fuzz/addrman.cpp
MarcoFalke,2021-07-19 13:21:30,"I guess asmap should be set first, since it is used in deserialize?",https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672291354,672291354,src/test/fuzz/addrman.cpp
jonatack,2021-07-19 14:29:26,"True, this works for me.\n```diff\n@@ -38,6 +38,12 @@ FUZZ_TARGET_INIT(addrman, initialize_addrman)\n     SetMockTime(ConsumeTime(fuzzed_data_provider));\n     CAddrManDeterministic addr_man;\n     addr_man.MakeDeterministic(ConsumeUInt256(fuzzed_data_provider));\n+    if (fuzzed_data_provider.ConsumeBool()) {\n+        addr_man.m_asmap = ConsumeRandomLengthBitVector(fuzzed_data_provider);",https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672350474,672350474,src/test/fuzz/addrman.cpp
vasild,2021-07-19 16:10:37,yes,https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672438344,672438344,src/test/fuzz/addrman.cpp
MarcoFalke,2021-07-19 16:27:48,Done,https://github.com/bitcoin/bitcoin/pull/22493#discussion_r672451280,672451280,src/test/fuzz/addrman.cpp
