[
  {
    "sha": "501e6ab4e778d8f4e95fdc807eeb8644df16203b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MDFlNmFiNGU3NzhkOGY0ZTk1ZmRjODA3ZWViODY0NGRmMTYyMDNi",
    "commit": {
      "author": {
        "name": "Calvin Kim",
        "email": "calvin@kcalvinalvin.info",
        "date": "2020-05-30T12:52:47Z"
      },
      "committer": {
        "name": "Calvin Kim",
        "email": "calvin@kcalvinalvin.info",
        "date": "2020-06-07T08:50:22Z"
      },
      "message": "doc: Add documentation for 'checklevel' argument in 'verifychain' RPC call",
      "tree": {
        "sha": "d62143ee1b4c872af37d43e9f435523bfafe3b71",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d62143ee1b4c872af37d43e9f435523bfafe3b71"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/501e6ab4e778d8f4e95fdc807eeb8644df16203b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/501e6ab4e778d8f4e95fdc807eeb8644df16203b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/501e6ab4e778d8f4e95fdc807eeb8644df16203b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/501e6ab4e778d8f4e95fdc807eeb8644df16203b/comments",
    "author": {
      "login": "kcalvinalvin",
      "id": 37185887,
      "node_id": "MDQ6VXNlcjM3MTg1ODg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37185887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kcalvinalvin",
      "html_url": "https://github.com/kcalvinalvin",
      "followers_url": "https://api.github.com/users/kcalvinalvin/followers",
      "following_url": "https://api.github.com/users/kcalvinalvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kcalvinalvin/subscriptions",
      "organizations_url": "https://api.github.com/users/kcalvinalvin/orgs",
      "repos_url": "https://api.github.com/users/kcalvinalvin/repos",
      "events_url": "https://api.github.com/users/kcalvinalvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kcalvinalvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "kcalvinalvin",
      "id": 37185887,
      "node_id": "MDQ6VXNlcjM3MTg1ODg3",
      "avatar_url": "https://avatars.githubusercontent.com/u/37185887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kcalvinalvin",
      "html_url": "https://github.com/kcalvinalvin",
      "followers_url": "https://api.github.com/users/kcalvinalvin/followers",
      "following_url": "https://api.github.com/users/kcalvinalvin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kcalvinalvin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kcalvinalvin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kcalvinalvin/subscriptions",
      "organizations_url": "https://api.github.com/users/kcalvinalvin/orgs",
      "repos_url": "https://api.github.com/users/kcalvinalvin/repos",
      "events_url": "https://api.github.com/users/kcalvinalvin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kcalvinalvin/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "76e64525ff38eaedccf8c2b847eccfffb69be27f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/76e64525ff38eaedccf8c2b847eccfffb69be27f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/76e64525ff38eaedccf8c2b847eccfffb69be27f"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 14,
      "deletions": 9
    },
    "files": [
      {
        "sha": "7b5330e31eb1f596a2e4ca7518f4b41b937b9cc7",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 8,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=501e6ab4e778d8f4e95fdc807eeb8644df16203b",
        "patch": "@@ -502,14 +502,7 @@ void SetupServerArgs(NodeContext& node)\n #endif\n \n     gArgs.AddArg(\"-checkblocks=<n>\", strprintf(\"How many blocks to check at startup (default: %u, 0 = all)\", DEFAULT_CHECKBLOCKS), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n-    gArgs.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is: \"\n-        \"level 0 reads the blocks from disk, \"\n-        \"level 1 verifies block validity, \"\n-        \"level 2 verifies undo data, \"\n-        \"level 3 checks disconnection of tip blocks, \"\n-        \"and level 4 tries to reconnect the blocks, \"\n-        \"each level includes the checks of the previous levels \"\n-        \"(0-4, default: %u)\", DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n+    gArgs.AddArg(\"-checklevel=<n>\", strprintf(\"How thorough the block verification of -checkblocks is: %s (0-4, default: %u)\", Join(CHECKLEVEL_DOC, \", \"), DEFAULT_CHECKLEVEL), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkblockindex\", strprintf(\"Do a consistency check for the block tree, chainstate, and other validation data structures occasionally. (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkmempool=<n>\", strprintf(\"Run checks every <n> transactions (default: %u, regtest: %u)\", defaultChainParams->DefaultConsistencyChecks(), regtestChainParams->DefaultConsistencyChecks()), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);\n     gArgs.AddArg(\"-checkpoints\", strprintf(\"Enable rejection of any forks from the known historical chain until block 295000 (default: %u)\", DEFAULT_CHECKPOINTS_ENABLED), ArgsManager::ALLOW_ANY | ArgsManager::DEBUG_ONLY, OptionsCategory::DEBUG_TEST);"
      },
      {
        "sha": "eedb1c3d71a3ac6d343378d6622ac55d6a0209e8",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=501e6ab4e778d8f4e95fdc807eeb8644df16203b",
        "patch": "@@ -1095,7 +1095,8 @@ static UniValue verifychain(const JSONRPCRequest& request)\n             RPCHelpMan{\"verifychain\",\n                 \"\\nVerifies blockchain database.\\n\",\n                 {\n-                    {\"checklevel\", RPCArg::Type::NUM, /* default */ strprintf(\"%d, range=0-4\", DEFAULT_CHECKLEVEL), \"How thorough the block verification is.\"},\n+                    {\"checklevel\", RPCArg::Type::NUM, /* default */ strprintf(\"%d, range=0-4\", DEFAULT_CHECKLEVEL),\n+                        strprintf(\"How thorough the block verification is:\\n - %s\", Join(CHECKLEVEL_DOC, \"\\n- \"))},\n                     {\"nblocks\", RPCArg::Type::NUM, /* default */ strprintf(\"%d, 0=all\", DEFAULT_CHECKBLOCKS), \"The number of blocks to check.\"},\n                 },\n                 RPCResult{"
      },
      {
        "sha": "c8eec1faa9db413d51ef2507c4b7132d53f55ded",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 0,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=501e6ab4e778d8f4e95fdc807eeb8644df16203b",
        "patch": "@@ -77,6 +77,14 @@ static constexpr std::chrono::hours DATABASE_WRITE_INTERVAL{1};\n static constexpr std::chrono::hours DATABASE_FLUSH_INTERVAL{24};\n /** Maximum age of our tip for us to be considered current for fee estimation */\n static constexpr std::chrono::hours MAX_FEE_ESTIMATION_TIP_AGE{3};\n+const std::vector<std::string> CHECKLEVEL_DOC {\n+    \"level 0 reads the blocks from disk\",\n+    \"level 1 verifies block validity\",\n+    \"level 2 verifies undo data\",\n+    \"level 3 checks disconnection of tip blocks\",\n+    \"level 4 tries to reconnect the blocks\",\n+    \"each level includes the checks of the previous levels\",\n+};\n \n bool CBlockIndexWorkComparator::operator()(const CBlockIndex *pa, const CBlockIndex *pb) const {\n     // First sort by most total work, ..."
      },
      {
        "sha": "e403bcb51a94d6c30e5b69ea507c483934593ef2",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/501e6ab4e778d8f4e95fdc807eeb8644df16203b/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=501e6ab4e778d8f4e95fdc807eeb8644df16203b",
        "patch": "@@ -29,6 +29,7 @@\n #include <memory>\n #include <set>\n #include <stdint.h>\n+#include <string>\n #include <utility>\n #include <vector>\n \n@@ -149,6 +150,8 @@ extern bool fHavePruned;\n extern bool fPruneMode;\n /** Number of MiB of block files that we're trying to stay below. */\n extern uint64_t nPruneTarget;\n+/** Documentation for argument 'checklevel'. */\n+extern const std::vector<std::string> CHECKLEVEL_DOC;\n \n /** Open a block file (blk?????.dat) */\n FILE* OpenBlockFile(const FlatFilePos &pos, bool fReadOnly = false);"
      }
    ]
  }
]