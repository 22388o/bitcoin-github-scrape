[
  {
    "sha": "fa2251df5e3471e0d19d5d5c7780d34ee1498cee",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTIyNTFkZjVlMzQ3MWUwZDE5ZDVkNWM3NzgwZDM0ZWUxNDk4Y2Vl",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-06T17:20:14Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2020-04-06T18:19:08Z"
      },
      "message": "test: Use one node to avoid a race due to missing sync in rpc_signrawtransaction",
      "tree": {
        "sha": "faeadcfc9ee5f667660ac678ed88fe1952391ac3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/faeadcfc9ee5f667660ac678ed88fe1952391ac3"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa2251df5e3471e0d19d5d5c7780d34ee1498cee",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEE+rVPoUahrI9sLGYTzit1aX5ppUgFAlwqrYAACgkQzit1aX5p\npUjiKAwAjlRVUfCEFWEhWSzI4jnijwGkaR3lc8sdfPix7ih8d9bnf7m/06Y+OorO\n4NeyrqLwQNH+LwmSXCK/NP5ijME+zBMY5qrfWdQlQubNssttxoSJftEEUHTKMrtq\n81u95J+y+IY2oyvcbPldMcIBIFPrsbwFhmojmqZxWWhXHiJsY5cG4Yo+Xap2vo9V\noND8qYWny/Pkk8WWLJU1kdT/qHO+54rn3vvBauE0pcWxwg6bhVJTq10MvHPmQ2u7\nIv4P1dycpjqVlkazcEkMypOD4GeRoLBSJkf9O1DIuxWysOqCqyiooY+GB8SpUOO7\nNfbGPOXfeoFp2PYbEMe/Si9NYPb7mrqZB2bSQSTjKW3t7rjyuImL6YAsLyQJOQWH\nBQNUN4dzrqSNQUTxcs5AYoWjDELF8/0PBOb+6U5g37uceU+zrjSe98XhZPe0w4kV\nKQql+44/4Xhl+rz3VwG3kXsMl2XDp89pF39zu5QuiD0X8cr1+/vxErqiRjh7JvbV\nx08iDezx\n=5RAv\n-----END PGP SIGNATURE-----",
        "payload": "tree faeadcfc9ee5f667660ac678ed88fe1952391ac3\nparent c0b389b33516fb3eaaad7c30bd11dba768882a7e\nauthor MarcoFalke <falke.marco@gmail.com> 1586193614 +0800\ncommitter MarcoFalke <falke.marco@gmail.com> 1586197148 +0800\n\ntest: Use one node to avoid a race due to missing sync in rpc_signrawtransaction\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2251df5e3471e0d19d5d5c7780d34ee1498cee",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa2251df5e3471e0d19d5d5c7780d34ee1498cee",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa2251df5e3471e0d19d5d5c7780d34ee1498cee/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c0b389b33516fb3eaaad7c30bd11dba768882a7e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c0b389b33516fb3eaaad7c30bd11dba768882a7e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c0b389b33516fb3eaaad7c30bd11dba768882a7e"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "17686f3a78546c71d88f7779cc245e4ea42cdf10",
        "filename": "test/functional/rpc_signrawtransaction.py",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa2251df5e3471e0d19d5d5c7780d34ee1498cee/test/functional/rpc_signrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa2251df5e3471e0d19d5d5c7780d34ee1498cee/test/functional/rpc_signrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_signrawtransaction.py?ref=fa2251df5e3471e0d19d5d5c7780d34ee1498cee",
        "patch": "@@ -169,7 +169,7 @@ def witness_script_test(self):\n         assert 'complete' in spending_tx_signed\n         assert_equal(spending_tx_signed['complete'], True)\n \n-        # Now try with a P2PKH script as the witnessScript\n+        self.log.info('Try with a P2PKH script as the witnessScript')\n         embedded_addr_info = self.nodes[1].getaddressinfo(self.nodes[1].getnewaddress('', 'legacy'))\n         embedded_privkey = self.nodes[1].dumpprivkey(embedded_addr_info['address'])\n         witness_script = embedded_addr_info['scriptPubKey']\n@@ -186,9 +186,9 @@ def witness_script_test(self):\n         # Check the signing completed successfully\n         assert 'complete' in spending_tx_signed\n         assert_equal(spending_tx_signed['complete'], True)\n-        self.nodes[1].sendrawtransaction(spending_tx_signed['hex'])\n+        self.nodes[0].sendrawtransaction(spending_tx_signed['hex'])\n \n-        # Now try with a P2PK script as the witnessScript\n+        self.log.info('Try with a P2PK script as the witnessScript')\n         embedded_addr_info = self.nodes[1].getaddressinfo(self.nodes[1].getnewaddress('', 'legacy'))\n         embedded_privkey = self.nodes[1].dumpprivkey(embedded_addr_info['address'])\n         witness_script = CScript([hex_str_to_bytes(embedded_addr_info['pubkey']), OP_CHECKSIG]).hex()\n@@ -205,7 +205,7 @@ def witness_script_test(self):\n         # Check the signing completed successfully\n         assert 'complete' in spending_tx_signed\n         assert_equal(spending_tx_signed['complete'], True)\n-        self.nodes[1].sendrawtransaction(spending_tx_signed['hex'])\n+        self.nodes[0].sendrawtransaction(spending_tx_signed['hex'])\n \n     def run_test(self):\n         self.successful_signing_test()"
      }
    ]
  }
]