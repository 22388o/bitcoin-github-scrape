[
  {
    "sha": "fa7ecbf9f892352b1528016999090e02a0fdcf40",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYTdlY2JmOWY4OTIzNTJiMTUyODAxNjk5OTA5MGUwMmEwZmRjZjQw",
    "commit": {
      "author": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-23T21:10:50Z"
      },
      "committer": {
        "name": "MarcoFalke",
        "email": "falke.marco@gmail.com",
        "date": "2018-01-24T16:30:44Z"
      },
      "message": "initwallet: Do not translate highly technical addresstype help",
      "tree": {
        "sha": "407a5b6eba73e421b1ab43e4145c32cdb5ecb790",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/407a5b6eba73e421b1ab43e4145c32cdb5ecb790"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fa7ecbf9f892352b1528016999090e02a0fdcf40",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unknown_key",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGcBAABAgAGBQJaaLS0AAoJEM4rdWl+aaVIzz8MAJ6vOgnSgoZOlYgTtiKMtMaO\njkKmMFNLKwhUlWroDbGE42YzY5HGMHJjWSUIaRcDhStFnIlDO5bqQGeCnrk7Mnn/\nzyXLYDKFEm5cpVJQJboCivu9VAXPO+ECzEeje2l7KX9cbRUWd/ih59Pj8slo95iD\nMfv+ZhqJLTjsJo+38sH+XvTAJ3Dnwmry2Y+fiPb7Haf+x2/Q4KgOpCLs8049LEPp\nod1R7cp2WiVTfFMTaH+fcbaSBOL1PR2HWT18O/0xGaCzbUrJ5jJuvALTvbb+3m6R\nlsNYgEqHr6CI0SVdHv7qw0ifzVunPuN5QQlmp0TN7h5Q/Ahx8vgIoe65XFvE54jG\n+ka6/Gt2ZhRjFg1Ry49OyEvazNGxk1A9b+2mE33nPuIS4yCSIqPhpDichki5M2zC\n8DPjqXwgj2jd8q6sESTRDodzA7L97Bjwq5JgPB8K0BbFjvzWAs2scddyXBlxb8ZM\nl6zpBdY0ZIyc/Bl0nVuysPVwZT0J1eHtbc0CkcLd/A==\n=Gu8+\n-----END PGP SIGNATURE-----",
        "payload": "tree 407a5b6eba73e421b1ab43e4145c32cdb5ecb790\nparent 6e3fe936090df3bcfc12f221137a944294838fe1\nauthor MarcoFalke <falke.marco@gmail.com> 1516741850 -0500\ncommitter MarcoFalke <falke.marco@gmail.com> 1516811444 -0500\n\ninitwallet: Do not translate highly technical addresstype help\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7ecbf9f892352b1528016999090e02a0fdcf40",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fa7ecbf9f892352b1528016999090e02a0fdcf40",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fa7ecbf9f892352b1528016999090e02a0fdcf40/comments",
    "author": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "6e3fe936090df3bcfc12f221137a944294838fe1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/6e3fe936090df3bcfc12f221137a944294838fe1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/6e3fe936090df3bcfc12f221137a944294838fe1"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 20,
      "deletions": 49
    },
    "files": [
      {
        "sha": "adf001c9685c608f4d69bfbbb9bc20d2de717b01",
        "filename": "src/qt/bitcoinstrings.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/qt/bitcoinstrings.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/qt/bitcoinstrings.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/bitcoinstrings.cpp?ref=fa7ecbf9f892352b1528016999090e02a0fdcf40",
        "patch": "@@ -251,13 +251,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Warning: We do not appear to fully agree with our peers! You may need to \"\n \"upgrade, or other nodes may need to upgrade.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", \"\n-\"default: \\\"%s\\\")\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n-\"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). \"\n-\"Default is same as -addresstype, except when -addresstype=p2sh-segwit a \"\n-\"native segwit output is used when sending to a native segwit address)\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Whether to save the mempool on shutdown and load on restart (default: %u)\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"\"\n \"Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR \"\n@@ -414,8 +407,6 @@ QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer (bind r\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to bind to %s on this computer. %s is probably already running.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to generate initial keys\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unable to start HTTP server. See debug log for details.\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown address type '%s'\"),\n-QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown change type '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unknown network specified in -onlynet: '%s'\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -benchmark ignored, use -debug=bench.\"),\n QT_TRANSLATE_NOOP(\"bitcoin-core\", \"Unsupported argument -debugnet ignored, use -debug=net.\"),"
      },
      {
        "sha": "2b712b4317d93827327b0388fd54c2b745aab4ac",
        "filename": "src/qt/locale/bitcoin_en.ts",
        "status": "modified",
        "additions": 16,
        "deletions": 36,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/qt/locale/bitcoin_en.ts",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/qt/locale/bitcoin_en.ts",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/locale/bitcoin_en.ts?ref=fa7ecbf9f892352b1528016999090e02a0fdcf40",
        "patch": "@@ -4025,7 +4025,7 @@\n <context>\n     <name>bitcoin-core</name>\n     <message>\n-        <location filename=\"../bitcoinstrings.cpp\" line=\"+358\"/>\n+        <location filename=\"../bitcoinstrings.cpp\" line=\"+351\"/>\n         <source>Options:</source>\n         <translation>Options:</translation>\n     </message>\n@@ -4050,7 +4050,7 @@\n         <translation>Accept command line and JSON-RPC commands</translation>\n     </message>\n     <message>\n-        <location line=\"-216\"/>\n+        <location line=\"-209\"/>\n         <source>Distributed under the MIT software license, see the accompanying file %s or %s</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4075,7 +4075,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+158\"/>\n+        <location line=\"+151\"/>\n         <source>Error: A fatal internal error occurred, see debug.log for details</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4100,7 +4100,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-404\"/>\n+        <location line=\"-397\"/>\n         <source>Bitcoin Core</source>\n         <translation type=\"unfinished\">Bitcoin Core</translation>\n     </message>\n@@ -4265,7 +4265,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+10\"/>\n+        <location line=\"+3\"/>\n         <source>Whether to save the mempool on shutdown and load on restart (default: %u)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4565,7 +4565,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+4\"/>\n         <source>Unsupported argument -benchmark ignored, use -debug=bench.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4625,7 +4625,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-406\"/>\n+        <location line=\"-397\"/>\n         <source>Allow JSON-RPC connections from specified source. Valid for &lt;ip&gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4685,7 +4685,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+71\"/>\n+        <location line=\"+64\"/>\n         <source>Whitelisted peers cannot be DoS banned and their transactions are always relayed, even if they are already in the mempool, useful e.g. for a gateway</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4870,17 +4870,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+2\"/>\n-        <source>Unknown address type &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+1\"/>\n-        <source>Unknown change type &apos;%s&apos;</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+7\"/>\n         <source>Upgrade wallet to latest format on startup</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -4930,22 +4920,22 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"-82\"/>\n+        <location line=\"-80\"/>\n         <source>Password for JSON-RPC connections</source>\n         <translation>Password for JSON-RPC connections</translation>\n     </message>\n     <message>\n-        <location line=\"-270\"/>\n+        <location line=\"-263\"/>\n         <source>Execute command when the best block changes (%s in cmd is replaced by block hash)</source>\n         <translation>Execute command when the best block changes (%s in cmd is replaced by block hash)</translation>\n     </message>\n     <message>\n-        <location line=\"+192\"/>\n+        <location line=\"+185\"/>\n         <source>Allow DNS lookups for -addnode, -seednode and -connect</source>\n         <translation>Allow DNS lookups for -addnode, -seednode and -connect</translation>\n     </message>\n     <message>\n-        <location line=\"-267\"/>\n+        <location line=\"-260\"/>\n         <source>(1 = keep tx meta data e.g. account owner and payment request information, 2 = drop tx meta data)</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -5085,17 +5075,7 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+7\"/>\n-        <source>What type of addresses to use (&quot;legacy&quot;, &quot;p2sh-segwit&quot;, or &quot;bech32&quot;, default: &quot;%s&quot;)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+3\"/>\n-        <source>What type of change to use (&quot;legacy&quot;, &quot;p2sh-segwit&quot;, or &quot;bech32&quot;). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)</source>\n-        <translation type=\"unfinished\"></translation>\n-    </message>\n-    <message>\n-        <location line=\"+6\"/>\n+        <location line=\"+9\"/>\n         <source>Whitelist peers connecting from the given IP address (e.g. 1.2.3.4) or CIDR notated network (e.g. 1.2.3.0/24). Can be specified multiple times.</source>\n         <translation type=\"unfinished\"></translation>\n     </message>\n@@ -5265,12 +5245,12 @@\n         <translation type=\"unfinished\"></translation>\n     </message>\n     <message>\n-        <location line=\"+9\"/>\n+        <location line=\"+7\"/>\n         <source>Unknown network specified in -onlynet: &apos;%s&apos;</source>\n         <translation>Unknown network specified in -onlynet: &apos;%s&apos;</translation>\n     </message>\n     <message>\n-        <location line=\"-87\"/>\n+        <location line=\"-85\"/>\n         <source>Insufficient funds</source>\n         <translation>Insufficient funds</translation>\n     </message>"
      },
      {
        "sha": "ace95204b884100a59eee673a3fd56b0e879fb23",
        "filename": "src/wallet/init.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/wallet/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fa7ecbf9f892352b1528016999090e02a0fdcf40/src/wallet/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/init.cpp?ref=fa7ecbf9f892352b1528016999090e02a0fdcf40",
        "patch": "@@ -16,8 +16,8 @@\n std::string GetWalletHelpString(bool showDebug)\n {\n     std::string strUsage = HelpMessageGroup(_(\"Wallet options:\"));\n-    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(_(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\"), FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n-    strUsage += HelpMessageOpt(\"-changetype\", _(\"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\"));\n+    strUsage += HelpMessageOpt(\"-addresstype\", strprintf(\"What type of addresses to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\", default: \\\"%s\\\")\", FormatOutputType(OUTPUT_TYPE_DEFAULT)));\n+    strUsage += HelpMessageOpt(\"-changetype\", \"What type of change to use (\\\"legacy\\\", \\\"p2sh-segwit\\\", or \\\"bech32\\\"). Default is same as -addresstype, except when -addresstype=p2sh-segwit a native segwit output is used when sending to a native segwit address)\");\n     strUsage += HelpMessageOpt(\"-disablewallet\", _(\"Do not load the wallet and disable wallet RPC calls\"));\n     strUsage += HelpMessageOpt(\"-keypool=<n>\", strprintf(_(\"Set key pool size to <n> (default: %u)\"), DEFAULT_KEYPOOL_SIZE));\n     strUsage += HelpMessageOpt(\"-fallbackfee=<amt>\", strprintf(_(\"A fee rate (in %s/kB) that will be used when fee estimation has insufficient data (default: %s)\"),\n@@ -179,14 +179,14 @@ bool WalletParameterInteraction()\n \n     g_address_type = ParseOutputType(gArgs.GetArg(\"-addresstype\", \"\"));\n     if (g_address_type == OUTPUT_TYPE_NONE) {\n-        return InitError(strprintf(_(\"Unknown address type '%s'\"), gArgs.GetArg(\"-addresstype\", \"\")));\n+        return InitError(strprintf(\"Unknown address type '%s'\", gArgs.GetArg(\"-addresstype\", \"\")));\n     }\n \n     // If changetype is set in config file or parameter, check that it's valid.\n     // Default to OUTPUT_TYPE_NONE if not set.\n     g_change_type = ParseOutputType(gArgs.GetArg(\"-changetype\", \"\"), OUTPUT_TYPE_NONE);\n     if (g_change_type == OUTPUT_TYPE_NONE && !gArgs.GetArg(\"-changetype\", \"\").empty()) {\n-        return InitError(strprintf(_(\"Unknown change type '%s'\"), gArgs.GetArg(\"-changetype\", \"\")));\n+        return InitError(strprintf(\"Unknown change type '%s'\", gArgs.GetArg(\"-changetype\", \"\")));\n     }\n \n     return true;"
      }
    ]
  }
]