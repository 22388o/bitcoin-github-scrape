[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346364122",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346364122",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346364122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM2NDEyMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T14:23:16Z",
    "updated_at": "2017-11-22T14:23:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag `m_last_block_processed` is guarded by `cs_main` according to this comment in `wallet.h`:\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/3c098a8aa0780009c11b66b1a5d488a928629ebf/src/wallet/wallet.h#L732-L734",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346364122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346373900",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346373900",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346373900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM3MzkwMA==",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?u=4a9af998e1a560b3f49c3827f453e1bcbe6a5cfb&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T14:56:42Z",
    "updated_at": "2017-11-22T14:56:42Z",
    "author_association": "MEMBER",
    "body": "IMO it should be guarded by `cs_wallet`, it's a wallet thing. `m_last_block_processed` is changed in:\r\nhttps://github.com/bitcoin/bitcoin/blob/3c098a8aa0780009c11b66b1a5d488a928629ebf/src/wallet/wallet.cpp#L1236-L1237\r\n\r\nAnd as you can see both `cs_main` and `cs_wallet` are held.\r\n\r\nThen, here `cs_wallet` should be locked too:\r\nhttps://github.com/bitcoin/bitcoin/blob/3c098a8aa0780009c11b66b1a5d488a928629ebf/src/wallet/wallet.cpp#L1272-L1284\r\n\r\n`cs_main` is needed because of `chainActive`.\r\n\r\n@TheBlueMatt wdyt?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346373900/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346387695",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346387695",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346387695,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjM4NzY5NQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T15:40:15Z",
    "updated_at": "2017-11-22T15:40:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag Sounds reasonable! I'll update once we get @TheBlueMatt's clarification :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346387695/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346404722",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346404722",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346404722,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQwNDcyMg==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T16:34:57Z",
    "updated_at": "2017-11-22T16:34:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@promag Would replacing the current commit with the following be in line with your suggestion? :-)\r\n\r\n```diff\r\ndiff --git a/src/wallet/wallet.cpp b/src/wallet/wallet.cpp\r\nindex 29eabd1..7aa7293 100644\r\n--- a/src/wallet/wallet.cpp\r\n+++ b/src/wallet/wallet.cpp\r\n@@ -1272,10 +1272,7 @@ void CWallet::BlockUntilSyncedToCurrentChain() {\r\n     {\r\n         // Skip the queue-draining stuff if we know we're caught up with\r\n         // chainActive.Tip()...\r\n-        // We could also take cs_wallet here, and call m_last_block_processed\r\n-        // protected by cs_wallet instead of cs_main, but as long as we need\r\n-        // cs_main here anyway, its easier to just call it cs_main-protected.\r\n-        LOCK(cs_main);\r\n+        LOCK2(cs_main, cs_wallet);\r\n         const CBlockIndex* initialChainTip = chainActive.Tip();\r\n\r\n         if (m_last_block_processed->GetAncestor(initialChainTip->nHeight) == initialChainTip) {\r\n@@ -3970,7 +3970,10 @@ CWallet* CWallet::CreateWalletFromFile(const std::string walletFile) EXCLUSIVE_L\r\n             pindexRescan = FindForkInGlobalIndex(chainActive, locator);\r\n     }\r\n\r\n-    walletInstance->m_last_block_processed = chainActive.Tip();\r\n+    {\r\n+        LOCK(walletInstance->cs_wallet);\r\n+        walletInstance->m_last_block_processed = chainActive.Tip();\r\n+    }\r\n     RegisterValidationInterface(walletInstance);\r\n\r\n     if (chainActive.Tip() && chainActive.Tip() != pindexRescan)\r\ndiff --git a/src/wallet/wallet.h b/src/wallet/wallet.h\r\nindex d6fbf7d..2ac3b71 100644\r\n--- a/src/wallet/wallet.h\r\n+++ b/src/wallet/wallet.h\r\n@@ -731,9 +731,9 @@ private:\r\n      * to have seen all transactions in the chain, but is only used to track\r\n      * live BlockConnected callbacks.\r\n      *\r\n-     * Protected by cs_main (see BlockUntilSyncedToCurrentChain)\r\n+     * Protected by cs_wallet\r\n      */\r\n@@ -798,6 +798,7 @@ public:\r\n             nOrderPosNext = 0;\r\n             nTimeFirstKey = 0;\r\n             nRelockTime = 0;\r\n+            m_last_block_processed = nullptr;\r\n         }\r\n         nMasterKeyMaxID = 0;\r\n         pwalletdbEncryption = nullptr;\r\n```\r\n\r\nLooks good? :-)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346404722/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346450058",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346450058",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346450058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ1MDA1OA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T19:25:02Z",
    "updated_at": "2017-11-22T19:25:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ugh, this is set fine in the place CWallets are created, I agree it should be initialized, but it's not a bug and going back and forth on stuff like this is just a waste of time. Most importantly, this obviously doesn't need a cs_main, is there really some static analyser that wants that there?\n\nOn November 22, 2017 7:40:24 AM PST, practicalswift <notifications@github.com> wrote:\n>@promag Sounds reasonable! I'll update once we get @TheBlueMatt's\n>clarification :-)\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346387695\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346450058/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346464511",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346464511",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346464511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ2NDUxMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T20:27:23Z",
    "updated_at": "2017-11-22T20:29:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TheBlueMatt \r\n\r\nI agree that fixing static analyzer warnings in mature old code is not worth it, but I think the case could be made that we can be more liberal in accepting fixes for static analyzer warnings introduced by brand new code (such as this - merged only days ago). Sounds reasonable?\r\n\r\nI don't have any strong feelings about the initialization fix (beyond the warm fuzzy feeling of seeing the number of static analyzer warnings decrease rather than increase over time), but I feel very strongly about getting the locking requirements annotated correctly :-)\r\n\r\nThat takes us to the important part discussed in this PR:\r\n\r\nThe comment \u2026\r\n\r\nhttps://github.com/bitcoin/bitcoin/blob/3c098a8aa0780009c11b66b1a5d488a928629ebf/src/wallet/wallet.h#L732-L734\r\n\r\n\u2026 suggested that `m_last_block_processed` is guarded by `cs_main`, so a corresponding Clang thread analysis annotation was added (in the annotations PR) \u2026\r\n\r\n```c++\r\nconst CBlockIndex* m_last_block_processed GUARDED_BY(cs_main);\r\n```\r\n\r\n\u2026 and hence the `LOCK(cs_main)` in `SetNull()` (as enforced by Clang's thread safety analysis).\r\n\r\nWhat is the correct locking annotation for `m_last_block_processed` \u2013 is it `GUARDED_BY(cs_main)` rather than `GUARDED_BY(cs_wallet)`?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346464511/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346465314",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346465314",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346465314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ2NTMxNA==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T20:31:05Z",
    "updated_at": "2017-11-22T20:31:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "My point was not that we shouldn't accept simple static analysis fixes, but more that we should keep them simple and avoid review burden by making them as minimal as possible and not going back and forth on them. Static analysis shouldn't complain about variables in a constructor, and adding an extern cs_main in wallet.h just sucks - either move SetNull to the .cpp or move the setting to the constructor (does anything even use SetNull?).\n\nOn November 22, 2017 12:27:33 PM PST, practicalswift <notifications@github.com> wrote:\n>@TheBlueMatt \n>\n>I agree that fixing static analyzer warnings in mature old code is not\n>worth it, but I think the case could be made that we can be more\n>liberal in accepting fixes for static analyzer warnings introduced by\n>brand new code (such as this - merged only days ago). Sounds\n>reasonable?\n>\n>I don't have any strong feelings about the initialization fix (beyond\n>the warm fuzzy feeling of seeing the number of static analyzer warnings\n>decrease rather than increase over time), but I feel very strongly\n>about stating all locking requirements explicitly :-)\n>\n>That takes us to the important part:\n>\n>The comment \u2026\n>\n>https://github.com/bitcoin/bitcoin/blob/3c098a8aa0780009c11b66b1a5d488a928629ebf/src/wallet/wallet.h#L732-L734\n>\n>\u2026 suggested that `m_last_block_processed` is guarded by `cs_main`, so a\n>corresponding Clang thread analysis annotation was added \u2026\n>\n>```c++\n>const CBlockIndex* m_last_block_processed GUARDED_BY(cs_main);\n>```\n>\n>\u2026 and hence the `LOCK(cs_main)` in `SetNull()` (as enforced by Clang's\n>thread safety analysis).\n>\n>What is the correct locking annotation for `m_last_block_processed` \u2013\n>is it `GUARDED_BY(cs_main)` rather than `GUARDED_BY(cs_wallet)`?\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346464511\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346465314/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346466211",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346466211",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346466211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ2NjIxMQ==",
    "user": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?u=5ff13e375b40ea55ecd3c108337dd6a23f68eddf&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T20:35:17Z",
    "updated_at": "2017-11-22T20:36:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@TheBlueMatt I agree that adding an extern `cs_main` in `wallet.h` sucks \u2013 the locking annotation `GUARDED_BY(cs_main)` is obviously incorrect :-)\r\n\r\nIs \u2026\r\n\r\n```\r\nconst CBlockIndex* m_last_block_processed GUARDED_BY(cs_wallet);\r\n```\r\n\r\n\u2026 the correct locking annotation for `m_last_block_processed`?",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346466211/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346467169",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346467169",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/11749",
    "id": 346467169,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0NjQ2NzE2OQ==",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-11-22T20:39:51Z",
    "updated_at": "2017-11-22T20:39:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "I believe that is (currently) correct, though we may be able to change it. I think it's time to think harder about wallet cs_main locking, especially with @ryanosky's work, I believe there's an opportunity to rethink a bunch of it when adding annotations.\n\nEither way, can we avoid ugly patches that result in a bunch of time wasted going back and forth just to fix (incorrect) static analysis warnings?\n\nOn November 22, 2017 12:35:24 PM PST, practicalswift <notifications@github.com> wrote:\n>@TheBlueMatt I agree that adding an extern `cs_main` in `wallet.h`\n>sucks \u2013 the locking annotation is obviously incorrect :-)\n>\n>Is \u2026\n>\n>```\n>const CBlockIndex* m_last_block_processed GUARDED_BY(cs_main);\n>```\n>\n>\u2026 the correct locking annotation for `m_last_block_processed`?\n>\n>-- \n>You are receiving this because you were mentioned.\n>Reply to this email directly or view it on GitHub:\n>https://github.com/bitcoin/bitcoin/pull/11749#issuecomment-346466211\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/346467169/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152576780",
    "pull_request_review_id": 78458404,
    "id": 152576780,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE1MjU3Njc4MA==",
    "diff_hunk": "@@ -803,6 +804,10 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n         nRelockTime = 0;\n         fAbortRescan = false;\n         fScanningWallet = false;\n+        {\n+            LOCK(cs_main);",
    "path": "src/wallet/wallet.h",
    "position": 13,
    "original_position": 13,
    "commit_id": "a256e6a2f1066c9872ec1e7ff9944e68e2308d9c",
    "original_commit_id": "a256e6a2f1066c9872ec1e7ff9944e68e2308d9c",
    "user": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`cs_main`? \ud83d\ude44",
    "created_at": "2017-11-22T14:16:54Z",
    "updated_at": "2017-11-22T14:18:45Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/11749#discussion_r152576780",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11749",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152576780"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/11749#discussion_r152576780"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/11749"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/152576780/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 808,
    "original_line": 808,
    "side": "RIGHT"
  }
]