[
  {
    "sha": "513fc67cd6a7fed3353063011bf204e97051fd6f",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MTNmYzY3Y2Q2YTdmZWQzMzUzMDYzMDExYmYyMDRlOTcwNTFmZDZm",
    "commit": {
      "author": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-08T15:38:56Z"
      },
      "committer": {
        "name": "Gregory Maxwell",
        "email": "greg@xiph.org",
        "date": "2015-01-08T15:49:37Z"
      },
      "message": "Assert inside leveldbwrapper to avoid continuing after failure.\n\nDatabase failure due to faulty hardware could leave users on a fork where\n they are vulnerable to opportunistic attack because they are rejecting\n the longest chain.\n\nIf there is a software fault in the OS or LevelDB that causes many nodes\n to experience database failure at once its also important for overall\n consensus stability that the failing nodes shut down and not continue\n operating.\n\nIn theory, the exceptions in leveldbwrapper should cause shutdowns but\n in practice the software calls into that database from many places, some\n of which throw away all exceptions.\n\nA more organized approach to errors should be used in the long-term,\n but this works for the moment.",
      "tree": {
        "sha": "d1649b1a52844fe3767065fff5106092b9590451",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d1649b1a52844fe3767065fff5106092b9590451"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/513fc67cd6a7fed3353063011bf204e97051fd6f",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513fc67cd6a7fed3353063011bf204e97051fd6f",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/513fc67cd6a7fed3353063011bf204e97051fd6f",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/513fc67cd6a7fed3353063011bf204e97051fd6f/comments",
    "author": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gmaxwell",
      "id": 858454,
      "node_id": "MDQ6VXNlcjg1ODQ1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/858454?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gmaxwell",
      "html_url": "https://github.com/gmaxwell",
      "followers_url": "https://api.github.com/users/gmaxwell/followers",
      "following_url": "https://api.github.com/users/gmaxwell/following{/other_user}",
      "gists_url": "https://api.github.com/users/gmaxwell/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gmaxwell/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gmaxwell/subscriptions",
      "organizations_url": "https://api.github.com/users/gmaxwell/orgs",
      "repos_url": "https://api.github.com/users/gmaxwell/repos",
      "events_url": "https://api.github.com/users/gmaxwell/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gmaxwell/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d0c97bbe70a6876dadedfbf672387371c9c849d1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d0c97bbe70a6876dadedfbf672387371c9c849d1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d0c97bbe70a6876dadedfbf672387371c9c849d1"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "7690023fdda7e06549c94f14f417c5078435cda7",
        "filename": "src/leveldbwrapper.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/513fc67cd6a7fed3353063011bf204e97051fd6f/src/leveldbwrapper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/513fc67cd6a7fed3353063011bf204e97051fd6f/src/leveldbwrapper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/leveldbwrapper.cpp?ref=513fc67cd6a7fed3353063011bf204e97051fd6f",
        "patch": "@@ -18,6 +18,8 @@ void HandleError(const leveldb::Status& status) throw(leveldb_error)\n     if (status.ok())\n         return;\n     LogPrintf(\"%s\\n\", status.ToString());\n+    /* This is not the most elegant approach. But it is important that we reliably shut down if the database begins failing at runtime. */\n+    assert(false && \"Database error. Hardware may be failing. Reindex is likely required.\");\n     if (status.IsCorruption())\n         throw leveldb_error(\"Database corrupted\");\n     if (status.IsIOError())"
      }
    ]
  }
]