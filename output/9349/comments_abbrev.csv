JeremyRubin,2016-12-14T21:16:03Z,"utAck 7ad1126\n\nminor nits:\n- is it necessary to kill the CScript copy constructor in this pull?\n- you have an `#include ""assert.h""` in prevector.h that seems to be unused.",https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267158885,267158885,
sipa,2016-12-14T21:39:54Z,"> is it necessary to kill the CScript copy constructor in this pull?\n\nYes, the presence of a custom copy constructor in CScript prevents the creation of a default move constructor or move assignment operator. I can add those as well, but given that the default copy constructor is perfectly appropriate, it's better to just pick that one, and get all default constructors and assignment operators",https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267164949,267164949,
sipa,2016-12-16T21:04:38Z,"@jonasschnelli Fair enough, there is no explicit test for CScript move, but I think we can rely on the C++ default constructors being correctly implemented in the compiler...",https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267695602,267695602,
theuni,2016-12-16T21:34:40Z,"utACK other than the nits, looks familiar :)",https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267701404,267701404,
gmaxwell,2016-12-17T21:48:06Z,tested ACK.,https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267789061,267789061,
laanwj,2016-12-19T07:48:34Z,"utACK efc0c4c, but see the nit",https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-267901734,267901734,
sipa,2016-12-22T02:29:39Z,Nit fixed.,https://github.com/bitcoin/bitcoin/pull/9349#issuecomment-268702479,268702479,
dcousens,2016-12-14T22:57:35Z,"trivial question, but what are these values representing? ",https://github.com/bitcoin/bitcoin/pull/9349#discussion_r92509665,92509665,src/test/prevector_tests.cpp
gmaxwell,2016-12-16T07:51:32Z,no return statement in function returning non-void.,https://github.com/bitcoin/bitcoin/pull/9349#discussion_r92766225,92766225,src/prevector.h
sipa,2016-12-16T21:03:44Z,Fixed.,https://github.com/bitcoin/bitcoin/pull/9349#discussion_r92885595,92885595,src/prevector.h
sipa,2016-12-16T21:05:24Z,Just things that are tested with certain percentage chance. The numbers here are chosen so that the copy/move/swap never occur at once (but it hardly matters).,https://github.com/bitcoin/bitcoin/pull/9349#discussion_r92885803,92885803,src/test/prevector_tests.cpp
laanwj,2016-12-19T07:45:57Z,"Does assert.h need to be included here? This doesn't seem to add any assertions (ah, I see @jonasschnelli also mentions this).",https://github.com/bitcoin/bitcoin/pull/9349#discussion_r92981521,92981521,src/prevector.h
sipa,2016-12-22T02:29:34Z,"Good point, fixed.",https://github.com/bitcoin/bitcoin/pull/9349#discussion_r93557329,93557329,src/prevector.h
dcousens,2016-12-27T23:39:19Z,"[still trivial] @sipa any reason not to document those percentages?  Or perhaps represent them in a non-bit shifting format?\nI find this to be the case often throughout,  and I'm not the biggest fan of having to spend review time on determining the bit shifts in my head compared to higher level issues.\n\nTrivial,  but,  prolific enough I thought I'd ask.",https://github.com/bitcoin/bitcoin/pull/9349#discussion_r93980796,93980796,src/test/prevector_tests.cpp
