DrahtBot,2020-05-16 08:31:48,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #18788 (wallet: tests: Update more tests to work with descriptor wallets by achow101)\n\nIf you consider this pull request",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629609467,629609467,
jonatack,2020-05-16 09:06:00,"@rajarshimaitra: don't forget to add the prefix ""test: "" to your PR title (see `CONTRIBUTING.md` for more) :bulb: ",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629613717,629613717,
jnewbery,2020-05-16 17:44:51,"I agree with @MarcoFalke. This functionality already exists with `--factor`. Rather than adding redundant code, it'd be better to improve the documentation, both in the help text and https://github.com/bitcoin/bitcoin/blob/master/test/README.md#troubleshooting-and-debugging-test-failures.",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629682228,629682228,
rajarshimaitra,2020-05-16 19:09:54,"> I agree with @MarcoFalke. This functionality already exists with `--factor`. Rather than adding redundant code, it'd be better to improve the documentation, both in the help text and https://github.com/bitcoin/bitcoin/blob/master/test/README.md#troubleshooting-and-debugging-test-failures.\n\nAcknowledged. The factor doc can be improved and the debugging doc can be amended with fixing around th",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629692964,629692964,
jnewbery,2020-05-16 20:05:19,">  is it better to disable timeout by setting a negative factor as @MarcoFalke suggested and amending the doc or people should just use a higher factor?\n\nMy two cents: setting `factor=0` should disable all timeouts.\n\nI also think the `factor` option and variable name should be changed everywhere. The name factor by itself is almost meaningless. Perhaps _timeout_factor_?",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629699317,629699317,
rajarshimaitra,2020-05-17 05:49:07,"> My two cents: setting `factor=0` should disable all timeouts.\n\nThat with added doc should serve the purpose. But It also should handle other areas properly where factor value is being used. If everyone agrees, I can start implementing this.  \n\n> I also think the `factor` option and variable name should be changed everywhere. The name factor by itself is almost meaningless. Perhaps _timeo",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629747316,629747316,
jonatack,2020-05-17 10:55:55,"> My two cents: setting `factor=0` should disable all timeouts.\n> \n> I also think the `factor` option and variable name should be changed everywhere. The name factor by itself is almost meaningless. Perhaps _timeout_factor_?\n\nSGTM",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629778532,629778532,
rajarshimaitra,2020-05-18 04:43:44,"Thanks everyone for all the inputs. I have modified the feature accordingly.\n\n- `--factor` is changed to `--timeout-factor` to better express intent and help doc updated. Internally all `self.options.factor` modified to `self.options.timeout_factor`.\n\n- setting `--timeout-factor 0` will disable RPC timeout for functional tests. Fixed few typos as I was touching these files anyway.\n\n- [",https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-629942474,629942474,
rajarshimaitra,2020-05-18 16:02:18,Addressed @MarcoFalke 's comments. ,https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-630279933,630279933,
MarcoFalke,2020-05-18 16:29:53,ACK 38c3dd9c706e7e84b2a4dbaf1424a3f1c3b694fc and thanks for fixing up all my typos :sweat_smile: ,https://github.com/bitcoin/bitcoin/pull/18986#issuecomment-630296834,630296834,
jonatack,2020-05-16 08:57:57,s/#Diasble/# Disable/,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426134875,426134875,test/functional/test_framework/test_framework.py
jonatack,2020-05-16 09:00:11,"Should it warn, raise, or not be set if `--factor` is passed?",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426135028,426135028,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-16 09:19:28,Done.,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426136271,426136271,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-16 09:20:21,"I added a message in the help text. But yes, it would be a good idea to enforce it. ",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426136338,426136338,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-16 09:47:51,why not make any negative factor map to factor=inf?,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426138277,426138277,test/functional/test_framework/test_framework.py
jonatack,2020-05-16 09:48:26,"I'm thinking either --notimeout should override any --factor setting and output a warning if it does, or halt with an explanation. Depending on which, the helps should be updated. Curious what others think.",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426138317,426138317,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-16 09:49:05,(ofc with proper documentation),https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426138351,426138351,test/functional/test_framework/test_framework.py
jonatack,2020-05-16 09:51:56,i like the simplicity of this,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426138523,426138523,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-16 12:14:24,"That definitely can be done, but I feel it would unnecessarily complicate it for new testers. It won't be readily obvious unless they look it up. \nAlso, I have issues with factor doc, it wasn't clear that it related to rpc_timeout until I look it up. (should it be changed?) \nLastly I feel keeping the --notimeout flag explicit, helps differentiate the purpose of two. ",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426148455,426148455,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-16 12:35:15,"I think it's better to immediately raise an error stating these two should not be set together. \nGenerally, someone wanting to disable timeout will not have a need to set --factor. Catching that would be sufficient.\nBut there can be an edge case where for some reason they need --factor but also want to attach gdb to the process. Right now that's not possible without much deeper refactoring.   ",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426149845,426149845,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-16 12:44:59,">  it wasn't clear that it related to rpc_timeout \n\nthen that sounds like a documentation issue that should be fixed, not worked around",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426150566,426150566,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-16 13:11:12,I hope its clear that the work is not around --factor. I have stated that the similar effect can be achieved by just using a higher factor. The addition only helps to reduce the burden of processing that by testers. There are people who are setting env variables and manually changing the code to get this behaviour. Having a flag only simplifies that issue.    ,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426152471,426152471,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-18 11:18:11,"```suggestion\n            self.options.timeout_factor = 99999\n```\n\nThis should apply to all timeouts, otherwise the tests will crash in `sync_*` calls",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426551998,426551998,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-18 11:18:51,"```suggestion\n        parser.add_argument('--timeout-factor', dest=""timeout_factor"", type=float, default=1.0, help='adjust test timeouts by a factor. Setting it to 0 disables the timeout')\n```\n\nThe previous wording was correct. This is not only about rpc timeouts",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426552292,426552292,test/functional/test_framework/test_framework.py
MarcoFalke,2020-05-18 11:20:41,Why is this needed? The condition should never be True.,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426553234,426553234,test/functional/test_framework/util.py
rajarshimaitra,2020-05-18 15:25:25,"Right, I missed that part. Fixed.",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426708568,426708568,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-18 15:25:39,Reverted. ,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426708741,426708741,test/functional/test_framework/test_framework.py
rajarshimaitra,2020-05-18 15:26:20,This was required because I was setting the factor to 0. After the above changes it's not required anymore. Reverted.  ,https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426709243,426709243,test/functional/test_framework/util.py
jnewbery,2020-05-18 16:58:27,"(for a follow-up PR) this is a really weird interface. The client is saying: 'take these two numbers, multiply them and use that as the timeout'. The client is able to do that multiplication itself! Why does it need to pass in two different values?",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426768706,426768706,test/functional/test_framework/util.py
rajarshimaitra,2020-05-18 17:38:38,"Thanks for the review. The process of making a PR was educational and made me go deeper into stuffs. Couldn't have done without your review club.\n   \nAnd also thanks for the follow-up idea. Yes it does seem redundant. Surely this can be improved. I will look into this. :+1: ",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426790564,426790564,test/functional/test_framework/util.py
rajarshimaitra,2020-05-18 18:39:00,"On an initial look it seems this is fairly trivial. There is no test function that calls `wait_until()` with `timeout_factor`. Either uses default or specifies a specific timeout. The only place `timeout_factor` is used is at node initialization and peer connection logic, which already knows how to handle it. \nSo it seems it just requires changing the `wait_until()` signature.\nLet me know if I",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426821888,426821888,test/functional/test_framework/util.py
MarcoFalke,2020-05-19 00:02:30,"```suggestion\nprocess can return a response. Use `--timeout-factor 0` to disable all rpc timeouts for that particular\n```",https://github.com/bitcoin/bitcoin/pull/18986#discussion_r426955996,426955996,test/README.md
