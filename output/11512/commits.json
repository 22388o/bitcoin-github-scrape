[
  {
    "sha": "fb6f6b1519b0518b8939947043ea34b00bd05c7c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmYjZmNmIxNTE5YjA1MThiODkzOTk0NzA0M2VhMzRiMDBiZDA1Yzdj",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-19T21:35:14Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-12-24T16:47:19Z"
      },
      "message": "bluematt's testnet-seed now supports x9 (and is just a static list)",
      "tree": {
        "sha": "e116e9321ba6e64ebf7df3e305307472fb00e34e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e116e9321ba6e64ebf7df3e305307472fb00e34e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fb6f6b1519b0518b8939947043ea34b00bd05c7c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6f6b1519b0518b8939947043ea34b00bd05c7c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6f6b1519b0518b8939947043ea34b00bd05c7c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6f6b1519b0518b8939947043ea34b00bd05c7c/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5180a86c96bc05d2a731f70f36aae28ab5a3fad4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5180a86c96bc05d2a731f70f36aae28ab5a3fad4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5180a86c96bc05d2a731f70f36aae28ab5a3fad4"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "ad648dc8df30a74f11f5d446e0337fbb0309a04d",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fb6f6b1519b0518b8939947043ea34b00bd05c7c/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fb6f6b1519b0518b8939947043ea34b00bd05c7c/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=fb6f6b1519b0518b8939947043ea34b00bd05c7c",
        "patch": "@@ -232,7 +232,7 @@ class CTestNetParams : public CChainParams {\n         vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\", true);\n         vSeeds.emplace_back(\"seed.tbtc.petertodd.org\", true);\n         vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\", true);\n-        vSeeds.emplace_back(\"testnet-seed.bluematt.me\", false);\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me\", true); // Just a static list of stable node(s), only supports x9\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);"
      }
    ]
  },
  {
    "sha": "51ae7660b81f536fb33fff775c1f4f46829d67a7",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MWFlNzY2MGI4MWY1MzZmYjMzZmZmNzc1YzFmNGY0NjgyOWQ2N2E3",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-19T21:32:33Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-01-19T22:40:05Z"
      },
      "message": "Use GetDesireableServiceFlags in static seeds, document this.\n\n44407100f broke inserting entries into addrman from static seeds\n(as well as dnsseeds which did not support service bits). Static\nseeds were already being filtered by UA for 0.13.1+ (ie\nNODE_WITNESS), so simply changing the default service bits to\ninclude NODE_WITNESS (and updating docs appropriately) is\nsufficient.\n\nFor DNS Seeds, we will later fix by falling back to oneshot if a\nseed does not support filtering.",
      "tree": {
        "sha": "c2337c39998d95e8ce5afc98ebdf209ecfec9500",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c2337c39998d95e8ce5afc98ebdf209ecfec9500"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/51ae7660b81f536fb33fff775c1f4f46829d67a7",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ae7660b81f536fb33fff775c1f4f46829d67a7",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/51ae7660b81f536fb33fff775c1f4f46829d67a7",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ae7660b81f536fb33fff775c1f4f46829d67a7/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fb6f6b1519b0518b8939947043ea34b00bd05c7c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fb6f6b1519b0518b8939947043ea34b00bd05c7c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fb6f6b1519b0518b8939947043ea34b00bd05c7c"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 13,
      "deletions": 3
    },
    "files": [
      {
        "sha": "6dc277f2985aa9b9c06c4ccc583a26a6c0ce1e4f",
        "filename": "contrib/seeds/README.md",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51ae7660b81f536fb33fff775c1f4f46829d67a7/contrib/seeds/README.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51ae7660b81f536fb33fff775c1f4f46829d67a7/contrib/seeds/README.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/seeds/README.md?ref=51ae7660b81f536fb33fff775c1f4f46829d67a7",
        "patch": "@@ -4,7 +4,9 @@ Utility to generate the seeds.txt list that is compiled into the client\n (see [src/chainparamsseeds.h](/src/chainparamsseeds.h) and other utilities in [contrib/seeds](/contrib/seeds)).\n \n Be sure to update `PATTERN_AGENT` in `makeseeds.py` to include the current version,\n-and remove old versions as necessary.\n+and remove old versions as necessary (at a minimum when GetDesireableServiceFlags\n+changes its default return value, as those are the services which seeds are added\n+to addrman with).\n \n The seeds compiled into the release are created from sipa's DNS seed data, like this:\n "
      },
      {
        "sha": "5252128400a71d4a15ea05b490a4da7e61cdf1f0",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51ae7660b81f536fb33fff775c1f4f46829d67a7/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51ae7660b81f536fb33fff775c1f4f46829d67a7/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=51ae7660b81f536fb33fff775c1f4f46829d67a7",
        "patch": "@@ -136,7 +136,7 @@ static std::vector<CAddress> convertSeed6(const std::vector<SeedSpec6> &vSeedsIn\n     for (const auto& seed_in : vSeedsIn) {\n         struct in6_addr ip;\n         memcpy(&ip, seed_in.addr, sizeof(ip));\n-        CAddress addr(CService(ip, seed_in.port), NODE_NETWORK);\n+        CAddress addr(CService(ip, seed_in.port), GetDesirableServiceFlags(NODE_NONE));\n         addr.nTime = GetTime() - GetRand(nOneWeek) - nOneWeek;\n         vSeedsOut.push_back(addr);\n     }"
      },
      {
        "sha": "1de8a165c89f25c941dae5ef2dffa63d1ad2dd78",
        "filename": "src/protocol.h",
        "status": "modified",
        "additions": 9,
        "deletions": 1,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/51ae7660b81f536fb33fff775c1f4f46829d67a7/src/protocol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/51ae7660b81f536fb33fff775c1f4f46829d67a7/src/protocol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/protocol.h?ref=51ae7660b81f536fb33fff775c1f4f46829d67a7",
        "patch": "@@ -291,7 +291,15 @@ enum ServiceFlags : uint64_t {\n  * unless they set NODE_NETWORK_LIMITED and we are out of IBD, in which\n  * case NODE_NETWORK_LIMITED suffices).\n  *\n- * Thus, generally, avoid calling with peerServices == NODE_NONE.\n+ * Thus, generally, avoid calling with peerServices == NODE_NONE, unless\n+ * state-specific flags must absolutely be avoided. When called with\n+ * peerServices == NODE_NONE, the returned desirable service flags are\n+ * guaranteed to not change dependant on state - ie they are suitable for\n+ * use when describing peers which we know to be desirable, but for which\n+ * we do not have a confirmed set of service flags.\n+ *\n+ * If the NODE_NONE return value is changed, contrib/seeds/makeseeds.py\n+ * should be updated appropriately to filter for the same nodes.\n  */\n static ServiceFlags GetDesirableServiceFlags(ServiceFlags services) {\n     return ServiceFlags(NODE_NETWORK | NODE_WITNESS);"
      }
    ]
  },
  {
    "sha": "62e764219b25f5d5a4de855e53f62c43130ec918",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2MmU3NjQyMTliMjVmNWQ1YTRkZTg1NWU1M2Y2MmM0MzEzMGVjOTE4",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2017-10-19T21:32:45Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-01-19T22:41:28Z"
      },
      "message": "Fall back to oneshot for DNS Seeds which don't support filtering.\n\nThis allows us to not have to update the chainparams whenever a\nDNS Seed changes its filtering support, as well fixes a bug\nintroduced in 44407100f where returned nodes will never be\nattempted.",
      "tree": {
        "sha": "6c3737fcfda7f104a23de961b0f636bd4168e2c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6c3737fcfda7f104a23de961b0f636bd4168e2c1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/62e764219b25f5d5a4de855e53f62c43130ec918",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e764219b25f5d5a4de855e53f62c43130ec918",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/62e764219b25f5d5a4de855e53f62c43130ec918",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e764219b25f5d5a4de855e53f62c43130ec918/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "51ae7660b81f536fb33fff775c1f4f46829d67a7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/51ae7660b81f536fb33fff775c1f4f46829d67a7",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/51ae7660b81f536fb33fff775c1f4f46829d67a7"
      }
    ],
    "stats": {
      "total": 56,
      "additions": 21,
      "deletions": 35
    },
    "files": [
      {
        "sha": "eb8531e4b5f9b58cf7ac18f7d2f4bc0ed9703020",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 10,
        "changes": 20,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62e764219b25f5d5a4de855e53f62c43130ec918/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62e764219b25f5d5a4de855e53f62c43130ec918/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=62e764219b25f5d5a4de855e53f62c43130ec918",
        "patch": "@@ -125,12 +125,12 @@ class CMainParams : public CChainParams {\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n         // Note that of those with the service bits flag, most only support a subset of possible options\n-        vSeeds.emplace_back(\"seed.bitcoin.sipa.be\", true); // Pieter Wuille, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"dnsseed.bluematt.me\", true); // Matt Corallo, only supports x9\n-        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\", false); // Luke Dashjr\n-        vSeeds.emplace_back(\"seed.bitcoinstats.com\", true); // Christian Decker, supports x1 - xf\n-        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch\", true); // Jonas Schnelli, only supports x1, x5, x9, and xd\n-        vSeeds.emplace_back(\"seed.btc.petertodd.org\", true); // Peter Todd, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"dnsseed.bluematt.me\"); // Matt Corallo, only supports x9\n+        vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\"); // Luke Dashjr\n+        vSeeds.emplace_back(\"seed.bitcoinstats.com\"); // Christian Decker, supports x1 - xf\n+        vSeeds.emplace_back(\"seed.bitcoin.jonasschnelli.ch\"); // Jonas Schnelli, only supports x1, x5, x9, and xd\n+        vSeeds.emplace_back(\"seed.btc.petertodd.org\"); // Peter Todd, only supports x1, x5, x9, and xd\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,0);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,5);\n@@ -229,10 +229,10 @@ class CTestNetParams : public CChainParams {\n         vFixedSeeds.clear();\n         vSeeds.clear();\n         // nodes with support for servicebits filtering should be at the top\n-        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\", true);\n-        vSeeds.emplace_back(\"seed.tbtc.petertodd.org\", true);\n-        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\", true);\n-        vSeeds.emplace_back(\"testnet-seed.bluematt.me\", true); // Just a static list of stable node(s), only supports x9\n+        vSeeds.emplace_back(\"testnet-seed.bitcoin.jonasschnelli.ch\");\n+        vSeeds.emplace_back(\"seed.tbtc.petertodd.org\");\n+        vSeeds.emplace_back(\"seed.testnet.bitcoin.sprovoost.nl\");\n+        vSeeds.emplace_back(\"testnet-seed.bluematt.me\"); // Just a static list of stable node(s), only supports x9\n \n         base58Prefixes[PUBKEY_ADDRESS] = std::vector<unsigned char>(1,111);\n         base58Prefixes[SCRIPT_ADDRESS] = std::vector<unsigned char>(1,196);"
      },
      {
        "sha": "4b62ca526e5cdf540dc2518f173604c2b0a49484",
        "filename": "src/chainparams.h",
        "status": "modified",
        "additions": 3,
        "deletions": 8,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62e764219b25f5d5a4de855e53f62c43130ec918/src/chainparams.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62e764219b25f5d5a4de855e53f62c43130ec918/src/chainparams.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.h?ref=62e764219b25f5d5a4de855e53f62c43130ec918",
        "patch": "@@ -14,12 +14,6 @@\n #include <memory>\n #include <vector>\n \n-struct CDNSSeedData {\n-    std::string host;\n-    bool supportsServiceBitsFiltering;\n-    CDNSSeedData(const std::string &strHost, bool supportsServiceBitsFilteringIn) : host(strHost), supportsServiceBitsFiltering(supportsServiceBitsFilteringIn) {}\n-};\n-\n struct SeedSpec6 {\n     uint8_t addr[16];\n     uint16_t port;\n@@ -71,7 +65,8 @@ class CChainParams\n     bool MineBlocksOnDemand() const { return fMineBlocksOnDemand; }\n     /** Return the BIP70 network string (main, test or regtest) */\n     std::string NetworkIDString() const { return strNetworkID; }\n-    const std::vector<CDNSSeedData>& DNSSeeds() const { return vSeeds; }\n+    /** Return the list of hostnames to look up for DNS seeds */\n+    const std::vector<std::string>& DNSSeeds() const { return vSeeds; }\n     const std::vector<unsigned char>& Base58Prefix(Base58Type type) const { return base58Prefixes[type]; }\n     const std::string& Bech32HRP() const { return bech32_hrp; }\n     const std::vector<SeedSpec6>& FixedSeeds() const { return vFixedSeeds; }\n@@ -85,7 +80,7 @@ class CChainParams\n     CMessageHeader::MessageStartChars pchMessageStart;\n     int nDefaultPort;\n     uint64_t nPruneAfterHeight;\n-    std::vector<CDNSSeedData> vSeeds;\n+    std::vector<std::string> vSeeds;\n     std::vector<unsigned char> base58Prefixes[MAX_BASE58_TYPES];\n     std::string bech32_hrp;\n     std::string strNetworkID;"
      },
      {
        "sha": "82bae05b395ec47a2d9bec9a1bcadddf4b67343a",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 17,
        "changes": 25,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/62e764219b25f5d5a4de855e53f62c43130ec918/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/62e764219b25f5d5a4de855e53f62c43130ec918/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=62e764219b25f5d5a4de855e53f62c43130ec918",
        "patch": "@@ -1577,19 +1577,6 @@ void MapPort(bool)\n \n \n \n-static std::string GetDNSHost(const CDNSSeedData& data, ServiceFlags* requiredServiceBits)\n-{\n-    //use default host for non-filter-capable seeds or if we use the default service bits (NODE_NETWORK)\n-    if (!data.supportsServiceBitsFiltering || *requiredServiceBits == NODE_NETWORK) {\n-        *requiredServiceBits = NODE_NETWORK;\n-        return data.host;\n-    }\n-\n-    // See chainparams.cpp, most dnsseeds only support one or two possible servicebits hostnames\n-    return strprintf(\"x%x.%s\", *requiredServiceBits, data.host);\n-}\n-\n-\n void CConnman::ThreadDNSAddressSeed()\n {\n     // goal: only query DNS seeds if address need is acute\n@@ -1612,22 +1599,22 @@ void CConnman::ThreadDNSAddressSeed()\n         }\n     }\n \n-    const std::vector<CDNSSeedData> &vSeeds = Params().DNSSeeds();\n+    const std::vector<std::string> &vSeeds = Params().DNSSeeds();\n     int found = 0;\n \n     LogPrintf(\"Loading addresses from DNS seeds (could take a while)\\n\");\n \n-    for (const CDNSSeedData &seed : vSeeds) {\n+    for (const std::string &seed : vSeeds) {\n         if (interruptNet) {\n             return;\n         }\n         if (HaveNameProxy()) {\n-            AddOneShot(seed.host);\n+            AddOneShot(seed);\n         } else {\n             std::vector<CNetAddr> vIPs;\n             std::vector<CAddress> vAdd;\n             ServiceFlags requiredServiceBits = GetDesirableServiceFlags(NODE_NONE);\n-            std::string host = GetDNSHost(seed, &requiredServiceBits);\n+            std::string host = strprintf(\"x%x.%s\", requiredServiceBits, seed);\n             CNetAddr resolveSource;\n             if (!resolveSource.SetInternal(host)) {\n                 continue;\n@@ -1643,6 +1630,10 @@ void CConnman::ThreadDNSAddressSeed()\n                     found++;\n                 }\n                 addrman.Add(vAdd, resolveSource);\n+            } else {\n+                // We now avoid directly using results from DNS Seeds which do not support service bit filtering,\n+                // instead using them as a oneshot to get nodes with our desired service bits.\n+                AddOneShot(seed);\n             }\n         }\n     }"
      }
    ]
  },
  {
    "sha": "2b839abd3e78e28748bbef0708fac74b442e2e36",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjgzOWFiZDNlNzhlMjg3NDhiYmVmMDcwOGZhYzc0YjQ0MmUyZTM2",
    "commit": {
      "author": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-01-17T21:18:27Z"
      },
      "committer": {
        "name": "Matt Corallo",
        "email": "git@bluematt.me",
        "date": "2018-01-19T22:41:28Z"
      },
      "message": "Update chainparams comment for more info on service bits per dnsseed",
      "tree": {
        "sha": "6478243e5c53fce798a0ec7a650bbdda18e57d6c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6478243e5c53fce798a0ec7a650bbdda18e57d6c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b839abd3e78e28748bbef0708fac74b442e2e36",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b839abd3e78e28748bbef0708fac74b442e2e36",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b839abd3e78e28748bbef0708fac74b442e2e36",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b839abd3e78e28748bbef0708fac74b442e2e36/comments",
    "author": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "62e764219b25f5d5a4de855e53f62c43130ec918",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/62e764219b25f5d5a4de855e53f62c43130ec918",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/62e764219b25f5d5a4de855e53f62c43130ec918"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 5,
      "deletions": 1
    },
    "files": [
      {
        "sha": "1264fb9813166737436ffbd0646e290b5b7fd163",
        "filename": "src/chainparams.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 1,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b839abd3e78e28748bbef0708fac74b442e2e36/src/chainparams.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b839abd3e78e28748bbef0708fac74b442e2e36/src/chainparams.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/chainparams.cpp?ref=2b839abd3e78e28748bbef0708fac74b442e2e36",
        "patch": "@@ -124,7 +124,11 @@ class CMainParams : public CChainParams {\n         assert(consensus.hashGenesisBlock == uint256S(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\"));\n         assert(genesis.hashMerkleRoot == uint256S(\"0x4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b\"));\n \n-        // Note that of those with the service bits flag, most only support a subset of possible options\n+        // Note that of those which support the service bits prefix, most only support a subset of\n+        // possible options.\n+        // This is fine at runtime as we'll fall back to using them as a oneshot if they dont support the\n+        // service bits we want, but we should get them updated to support all service bits wanted by any\n+        // release ASAP to avoid it where possible.\n         vSeeds.emplace_back(\"seed.bitcoin.sipa.be\"); // Pieter Wuille, only supports x1, x5, x9, and xd\n         vSeeds.emplace_back(\"dnsseed.bluematt.me\"); // Matt Corallo, only supports x9\n         vSeeds.emplace_back(\"dnsseed.bitcoin.dashjr.org\"); // Luke Dashjr"
      }
    ]
  }
]