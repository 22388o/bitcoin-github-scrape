[
  {
    "sha": "b3d6fc654770e3b4d2f82e8d77e531df9e522982",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiM2Q2ZmM2NTQ3NzBlM2I0ZDJmODJlOGQ3N2U1MzFkZjllNTIyOTgy",
    "commit": {
      "author": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-09-05T16:55:37Z"
      },
      "committer": {
        "name": "Cristian Mircea Messel",
        "email": "mess110@gmail.com",
        "date": "2017-09-05T16:55:37Z"
      },
      "message": "Improve signmessages functional test\n\nThis patch improves branch coverage of the test, making sure a\nmessage can not be verified with the wrong address or signature.",
      "tree": {
        "sha": "4635a6a129160dd517bb2bec9410ee4efaaf0279",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4635a6a129160dd517bb2bec9410ee4efaaf0279"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/b3d6fc654770e3b4d2f82e8d77e531df9e522982",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3d6fc654770e3b4d2f82e8d77e531df9e522982",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/b3d6fc654770e3b4d2f82e8d77e531df9e522982",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3d6fc654770e3b4d2f82e8d77e531df9e522982/comments",
    "author": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "mess110",
      "id": 226170,
      "node_id": "MDQ6VXNlcjIyNjE3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/226170?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mess110",
      "html_url": "https://github.com/mess110",
      "followers_url": "https://api.github.com/users/mess110/followers",
      "following_url": "https://api.github.com/users/mess110/following{/other_user}",
      "gists_url": "https://api.github.com/users/mess110/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mess110/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mess110/subscriptions",
      "organizations_url": "https://api.github.com/users/mess110/orgs",
      "repos_url": "https://api.github.com/users/mess110/repos",
      "events_url": "https://api.github.com/users/mess110/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mess110/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "50fae68d416b4b8ec4ca192923dfd5ae9ea42773",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/50fae68d416b4b8ec4ca192923dfd5ae9ea42773",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/50fae68d416b4b8ec4ca192923dfd5ae9ea42773"
      }
    ],
    "stats": {
      "total": 21,
      "additions": 13,
      "deletions": 8
    },
    "files": [
      {
        "sha": "52ba6a5ad761844cf9b0480a767a6be2e8fcf4a2",
        "filename": "test/functional/signmessages.py",
        "status": "modified",
        "additions": 13,
        "deletions": 8,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/b3d6fc654770e3b4d2f82e8d77e531df9e522982/test/functional/signmessages.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/b3d6fc654770e3b4d2f82e8d77e531df9e522982/test/functional/signmessages.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/signmessages.py?ref=b3d6fc654770e3b4d2f82e8d77e531df9e522982",
        "patch": "@@ -5,6 +5,7 @@\n \"\"\"Test RPC commands for signing and verifying messages.\"\"\"\n \n from test_framework.test_framework import BitcoinTestFramework\n+from test_framework.util import assert_equal\n \n class SignMessagesTest(BitcoinTestFramework):\n     def set_test_params(self):\n@@ -14,20 +15,24 @@ def set_test_params(self):\n     def run_test(self):\n         message = 'This is just a test message'\n \n-        # Test the signing with a privkey\n-        privKey = 'cUeKHd5orzT3mz8P9pxyREHfsWtVfgsfDjiZZBcjUBAaGk1BTj7N'\n+        self.log.info('test signing with priv_key')\n+        priv_key = 'cUeKHd5orzT3mz8P9pxyREHfsWtVfgsfDjiZZBcjUBAaGk1BTj7N'\n         address = 'mpLQjfK79b7CCV4VMJWEWAj5Mpx8Up5zxB'\n-        signature = self.nodes[0].signmessagewithprivkey(privKey, message)\n-\n-        # Verify the message\n+        expected_signature = 'INbVnW4e6PeRmsv2Qgu8NuopvrVjkcxob+sX8OcZG0SALhWybUjzMLPdAsXI46YZGb0KQTRii+wWIQzRpG/U+S0='\n+        signature = self.nodes[0].signmessagewithprivkey(priv_key, message)\n+        assert_equal(expected_signature, signature)\n         assert(self.nodes[0].verifymessage(address, signature, message))\n \n-        # Test the signing with an address with wallet\n+        self.log.info('test signing with an address with wallet')\n         address = self.nodes[0].getnewaddress()\n         signature = self.nodes[0].signmessage(address, message)\n-\n-        # Verify the message\n         assert(self.nodes[0].verifymessage(address, signature, message))\n \n+        self.log.info('test verifying with another address should not work')\n+        other_address = self.nodes[0].getnewaddress()\n+        other_signature = self.nodes[0].signmessage(other_address, message)\n+        assert(not self.nodes[0].verifymessage(other_address, signature, message))\n+        assert(not self.nodes[0].verifymessage(address, other_signature, message))\n+\n if __name__ == '__main__':\n     SignMessagesTest().main()"
      }
    ]
  }
]