[
  {
    "sha": "bd93fc9945bfd4be117990c5d861f61ddd451f96",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpiZDkzZmM5OTQ1YmZkNGJlMTE3OTkwYzVkODYxZjYxZGRkNDUxZjk2",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T21:52:50Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2020-10-29T21:55:13Z"
      },
      "message": "Fix change detection of imported internal descriptors",
      "tree": {
        "sha": "28fb70605d9973e1be108de0d4ee22c26d566df7",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/28fb70605d9973e1be108de0d4ee22c26d566df7"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/bd93fc9945bfd4be117990c5d861f61ddd451f96",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd93fc9945bfd4be117990c5d861f61ddd451f96",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/bd93fc9945bfd4be117990c5d861f61ddd451f96",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/bd93fc9945bfd4be117990c5d861f61ddd451f96/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "42b66a6b814bca130a9ccf0a3f747cf33d628232",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/42b66a6b814bca130a9ccf0a3f747cf33d628232",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/42b66a6b814bca130a9ccf0a3f747cf33d628232"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 16,
      "deletions": 4
    },
    "files": [
      {
        "sha": "17bdc06c78821e82bfae4433c89c6c6d4581acd4",
        "filename": "src/wallet/rpcdump.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/rpcdump.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/rpcdump.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcdump.cpp?ref=bd93fc9945bfd4be117990c5d861f61ddd451f96",
        "patch": "@@ -1559,7 +1559,7 @@ static UniValue ProcessDescriptorImport(CWallet * const pwallet, const UniValue&\n         }\n \n         // Add descriptor to the wallet\n-        auto spk_manager = pwallet->AddWalletDescriptor(w_desc, keys, label);\n+        auto spk_manager = pwallet->AddWalletDescriptor(w_desc, keys, label, internal);\n         if (spk_manager == nullptr) {\n             throw JSONRPCError(RPC_WALLET_ERROR, strprintf(\"Could not add descriptor '%s'\", descriptor));\n         }"
      },
      {
        "sha": "1a30f010277462d38deb8f0de912019c8ce1a2a4",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=bd93fc9945bfd4be117990c5d861f61ddd451f96",
        "patch": "@@ -4510,7 +4510,7 @@ DescriptorScriptPubKeyMan* CWallet::GetDescriptorScriptPubKeyMan(const WalletDes\n     return nullptr;\n }\n \n-ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const FlatSigningProvider& signing_provider, const std::string& label)\n+ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const FlatSigningProvider& signing_provider, const std::string& label, bool internal)\n {\n     if (!IsWalletFlagSet(WALLET_FLAG_DESCRIPTORS)) {\n         WalletLogPrintf(\"Cannot add WalletDescriptor to a non-descriptor wallet\\n\");\n@@ -4567,7 +4567,7 @@ ScriptPubKeyMan* CWallet::AddWalletDescriptor(WalletDescriptor& desc, const Flat\n         }\n \n         CTxDestination dest;\n-        if (ExtractDestination(script_pub_keys.at(0), dest)) {\n+        if (!internal && ExtractDestination(script_pub_keys.at(0), dest)) {\n             SetAddressBook(dest, label, \"receive\");\n         }\n     }"
      },
      {
        "sha": "00e0e3c84d305f8da89d36eee664c3ab2a4c1027",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd93fc9945bfd4be117990c5d861f61ddd451f96/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=bd93fc9945bfd4be117990c5d861f61ddd451f96",
        "patch": "@@ -1280,7 +1280,7 @@ class CWallet final : public WalletStorage, public interfaces::Chain::Notificati\n     DescriptorScriptPubKeyMan* GetDescriptorScriptPubKeyMan(const WalletDescriptor& desc) const;\n \n     //! Add a descriptor to the wallet, return a ScriptPubKeyMan & associated output type\n-    ScriptPubKeyMan* AddWalletDescriptor(WalletDescriptor& desc, const FlatSigningProvider& signing_provider, const std::string& label);\n+    ScriptPubKeyMan* AddWalletDescriptor(WalletDescriptor& desc, const FlatSigningProvider& signing_provider, const std::string& label, bool internal);\n };\n \n /**"
      },
      {
        "sha": "84de4e5397ae9f8ba4bf6b9cabc2c631d8cd86cb",
        "filename": "test/functional/wallet_importdescriptors.py",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/bd93fc9945bfd4be117990c5d861f61ddd451f96/test/functional/wallet_importdescriptors.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/bd93fc9945bfd4be117990c5d861f61ddd451f96/test/functional/wallet_importdescriptors.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_importdescriptors.py?ref=bd93fc9945bfd4be117990c5d861f61ddd451f96",
        "patch": "@@ -15,6 +15,7 @@\n - `test_address()` is called to call getaddressinfo for an address on node1\n   and test the values returned.\"\"\"\n \n+from test_framework.address import key_to_p2pkh\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.descriptors import descsum_create\n from test_framework.util import (\n@@ -105,6 +106,17 @@ def run_test(self):\n                              error_code=-8,\n                              error_message=\"Internal addresses should not have a label\")\n \n+        self.log.info(\"Internal addresses should be detected as such\")\n+        key = get_generate_key()\n+        addr = key_to_p2pkh(key.pubkey)\n+        self.test_importdesc({\"desc\": descsum_create(\"pkh(\" + key.pubkey + \")\"),\n+                              \"timestamp\": \"now\",\n+                              \"internal\": True},\n+                             success=True)\n+        info = w1.getaddressinfo(addr)\n+        assert_equal(info[\"ismine\"], True)\n+        assert_equal(info[\"ischange\"], True)\n+\n         # # Test importing of a P2SH-P2WPKH descriptor\n         key = get_generate_key()\n         self.log.info(\"Should not import a p2sh-p2wpkh descriptor without checksum\")"
      }
    ]
  }
]