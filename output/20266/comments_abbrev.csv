DrahtBot,2020-10-30 01:17:01,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20243 (rpc, wallet: Expose wallet id in getwalletinfo RPC output by hebasto)\n* #20205 (wallet: Properly support a wallet",https://github.com/bitcoin/bitcoin/pull/20266#issuecomment-719112094,719112094,
MarcoFalke,2020-10-30 10:37:20,Is this for 0.21?,https://github.com/bitcoin/bitcoin/pull/20266#issuecomment-719476668,719476668,
achow101,2020-11-01 22:50:56,"> Is this for 0.21?\n\nYes, this is a bug fix.",https://github.com/bitcoin/bitcoin/pull/20266#issuecomment-720164263,720164263,
fanquake,2020-11-06 07:57:11,@S3RK you might be interested in reviewing?,https://github.com/bitcoin/bitcoin/pull/20266#issuecomment-722935611,722935611,
laanwj,2020-11-09 14:13:21,"Code review ACK bd93fc9945bfd4be117990c5d861f61ddd451f96\n",https://github.com/bitcoin/bitcoin/pull/20266#issuecomment-724038364,724038364,
S3RK,2020-11-06 11:45:21,"Is it expected that we will set an empty label even when a label is not specified in request at all?\n\nnit: I think it's more clear to make all the checks in the parent `if` (for range, internal and for label emptiness). This also might help to avoid unnecessary log message above.",https://github.com/bitcoin/bitcoin/pull/20266#discussion_r518700132,518700132,src/wallet/wallet.cpp
achow101,2020-11-06 16:26:45,"> Is it expected that we will set an empty label even when a label is not specified in request at all?\n\nYes.",https://github.com/bitcoin/bitcoin/pull/20266#discussion_r518861730,518861730,src/wallet/wallet.cpp
achow101,2020-11-06 16:41:34,Moved it up.,https://github.com/bitcoin/bitcoin/pull/20266#discussion_r518870905,518870905,src/wallet/wallet.cpp
achow101,2020-11-06 16:46:10,"On second thought, nevermind. Reverted back to previous.\n\nMoving it up will make the boolean logic at the outer if a little more confusing, and I think it's fine (perhaps even good) to be checking that scriptPubKeys were being generated for non-ranged things.",https://github.com/bitcoin/bitcoin/pull/20266#discussion_r518873773,518873773,src/wallet/wallet.cpp
S3RK,2020-11-07 02:13:48,"> On second thought, nevermind. Reverted back to previous.\n>\n> Moving it up will make the boolean logic at the outer if a little more confusing, and I think it's fine (perhaps even good) to be checking that scriptPubKeys were being generated for non-ranged things.\n\nThough the check becomes redundant after #20153 I think I maybe even should drop it in my PR\n\n",https://github.com/bitcoin/bitcoin/pull/20266#discussion_r519082380,519082380,src/wallet/wallet.cpp
