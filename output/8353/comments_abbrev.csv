fanquake,2016-07-18T09:17:51Z,Can you please improve the commit message to be more explicit about what is actually being changed.\n,https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-233281435,233281435,
rodentrabies,2016-07-18T09:28:20Z,"Yep, sorry. Done.\n",https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-233283478,233283478,
dcousens,2016-07-22T02:06:27Z,utACK 3debfbc\n,https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-234436143,234436143,
sipa,2016-07-30T01:59:22Z,"Concept ACK, but the erase trick needs a comment to explain the behaviour.\n",https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-236332954,236332954,
rodentrabies,2016-08-09T00:16:43Z,"Added an explanation for the `map::erase()` usage with an SO link, mentioned above.\n",https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-238416857,238416857,
dcousens,2016-08-09T00:29:20Z,utACK c784086\n,https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-238418777,238418777,
sipa,2016-08-10T05:25:52Z,"utACK. Did you see https://github.com/bitcoin/bitcoin/pull/8353/commits/5e187e70012c247b96783f7fa9bcbd0289504ad5#r71238406 ?\n\nEDIT: nevermind, i was confused by github.\n",https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-238769113,238769113,
rodentrabies,2016-08-10T07:16:20Z,"@sipa note about using `emplace()`? Yes, the last commit in this PR does that.\n",https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-238785110,238785110,
sipa,2016-08-10T08:10:50Z,utACK c78408607536bf030947f69f6dc6e09e07873c84\n,https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-238795801,238795801,
laanwj,2016-08-13T13:55:07Z,utACK c784086\n,https://github.com/bitcoin/bitcoin/pull/8353#issuecomment-239622005,239622005,
theuni,2016-07-18T21:57:52Z,"May as well use emplace here while you're at it:\n\n``` c++\ndeadlineTimers.emplace(name, std::unique_ptr<RPCTimerBase>(timerInterface->NewTimer(func, nSeconds*1000)));\n```\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r71238406,71238406,src/rpc/server.cpp
theuni,2016-07-27T20:29:31Z,"This doesn't look right. Since erase returns the _next_ iterator, I'm not sure what good it would do here. It's also erasing without re-adding.\n\nAs-is, this appears to be modifying a random element.\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r72516873,72516873,src/limitedmap.h
dcousens,2016-07-28T01:13:07Z,"Actually, it doens't erase anything AFAIK.\nNote,  erase works on `[first, last)`.\n\nIt is totally confusing though,  but I assumed for that comment to exist,  this had already been bikeshed as somehow sensible.\n\nExample:\n\n``` c++\n#include <iostream>\n#include <map>\n\nint main ()\n{\n    std::map<char,int> mymap;\n\n    // insert some values\n    mymap['a'] = 10;\n    mymap['b'] = 20;\n    ",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r72551801,72551801,src/limitedmap.h
dcousens,2016-07-28T01:43:58Z,"ping @TheBlueMatt (this was after all, [your TODO](https://github.com/bitcoin/bitcoin/pull/2423))\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r72553920,72553920,src/limitedmap.h
theuni,2016-07-28T02:41:58Z,"Huh, indeed. Neat trick! Thanks for explaining. Is the returned iterator guaranteed to be the same as the inputs? Everything I can find references the return relative to the last item erased, which obviously doesn't apply here.\n\nAssuming it's all well defined, fine by me, though it's much less clear what's happening.\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r72557752,72557752,src/limitedmap.h
laanwj,2016-08-03T09:03:53Z,"I strongly prefer non-tricky code to tricky code, even if documented, to be honest. It increases the scope of making mistakes (due to misunderstanding the code) in later maintenance.\nSo unless this makes a clear performance difference in practical usage I prefer keeping it as-is.\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r73304022,73304022,src/limitedmap.h
rodentrabies,2016-08-03T17:18:50Z,"I currently don't have access to my laptop, so will bench and fix it\naccordingly in a couple of days.\n\nOn Aug 3, 2016 7:25 PM, ""Wladimir J. van der Laan"" notifications@github.com\nwrote:\n\n> In src/limitedmap.h\n> https://github.com/bitcoin/bitcoin/pull/8353#discussion_r73304022:\n> \n> > @@ -66,8 +66,7 @@ class limitedmap\n> >      }\n> >      void update(const_iterator itIn, const mapped_typ",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r73378506,73378506,src/limitedmap.h
dcousens,2016-08-03T21:29:01Z,"@laanwj this trick is explained here: https://stackoverflow.com/questions/765148/how-to-remove-constness-of-const-iterator,  and appears to be pretty common.\n\nThe access is constant time versus the lookup,  so it is an improvement (assuming this is actually a performance bottleneck anyhow).\nI think a SO link and explanation would be more than fine to appropriate its existence.\n",https://github.com/bitcoin/bitcoin/pull/8353#discussion_r73424808,73424808,src/limitedmap.h
