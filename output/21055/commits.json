[
  {
    "sha": "9da106be4db692fa5db7b4de79f9cf7bfef37075",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZGExMDZiZTRkYjY5MmZhNWRiN2I0ZGU3OWY5Y2Y3YmZlZjM3MDc1",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-22T16:46:21Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-22T16:46:37Z"
      },
      "message": "validation: Check chain tip is non-null in CheckFinalTx\n\n...also update comments to remove mention of ::ChainActive()\n\nFrom: https://github.com/bitcoin/bitcoin/pull/20750#discussion_r579400663\n\n> Also, what about passing a const reference instead of a pointer? I\n> know this is only theoretical, but previously if the tip was nullptr,\n> then Height() evaluated to -1, now it evaluates to UB",
      "tree": {
        "sha": "6b2740bfba52c1b4402893c892770fdcce56d109",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6b2740bfba52c1b4402893c892770fdcce56d109"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9da106be4db692fa5db7b4de79f9cf7bfef37075",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da106be4db692fa5db7b4de79f9cf7bfef37075",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9da106be4db692fa5db7b4de79f9cf7bfef37075",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da106be4db692fa5db7b4de79f9cf7bfef37075/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7fca189a2a9a524834d9485c4e391877c00c1971",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7fca189a2a9a524834d9485c4e391877c00c1971",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7fca189a2a9a524834d9485c4e391877c00c1971"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "a57a1cc21165b5ffe711086f342f05f1dce9989a",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9da106be4db692fa5db7b4de79f9cf7bfef37075/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9da106be4db692fa5db7b4de79f9cf7bfef37075/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=9da106be4db692fa5db7b4de79f9cf7bfef37075",
        "patch": "@@ -211,6 +211,7 @@ static FlatFileSeq UndoFileSeq();\n bool CheckFinalTx(const CBlockIndex* active_chain_tip, const CTransaction &tx, int flags)\n {\n     AssertLockHeld(cs_main);\n+    assert(active_chain_tip); // TODO: Make active_chain_tip a reference\n     assert(std::addressof(*::ChainActive().Tip()) == std::addressof(*active_chain_tip));\n \n     // By convention a negative value for flags indicates that the\n@@ -221,12 +222,12 @@ bool CheckFinalTx(const CBlockIndex* active_chain_tip, const CTransaction &tx, i\n     // scheduled, so no flags are set.\n     flags = std::max(flags, 0);\n \n-    // CheckFinalTx() uses ::ChainActive().Height()+1 to evaluate\n+    // CheckFinalTx() uses active_chain_tip.Height()+1 to evaluate\n     // nLockTime because when IsFinalTx() is called within\n     // CBlock::AcceptBlock(), the height of the block *being*\n     // evaluated is what is used. Thus if we want to know if a\n     // transaction can be part of the *next* block, we need to call\n-    // IsFinalTx() with one more than ::ChainActive().Height().\n+    // IsFinalTx() with one more than active_chain_tip.Height().\n     const int nBlockHeight = active_chain_tip->nHeight + 1;\n \n     // BIP113 requires that time-locked transactions have nLockTime set to"
      }
    ]
  },
  {
    "sha": "4927c9e6991b09a36a41aab93a0e05332d899611",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OTI3YzllNjk5MWIwOWEzNmE0MWFhYjkzYTBlMDUzMzJkODk5NjEx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-26T02:29:31Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-22T16:48:39Z"
      },
      "message": "validation: Remove global ::LoadGenesisBlock",
      "tree": {
        "sha": "197ecaa52c0a437969aab1c1ea75201aeaf7eeb2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/197ecaa52c0a437969aab1c1ea75201aeaf7eeb2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4927c9e6991b09a36a41aab93a0e05332d899611",
      "comment_count": 2,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4927c9e6991b09a36a41aab93a0e05332d899611",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4927c9e6991b09a36a41aab93a0e05332d899611",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4927c9e6991b09a36a41aab93a0e05332d899611/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9da106be4db692fa5db7b4de79f9cf7bfef37075",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9da106be4db692fa5db7b4de79f9cf7bfef37075",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9da106be4db692fa5db7b4de79f9cf7bfef37075"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 3,
      "deletions": 8
    },
    "files": [
      {
        "sha": "ea222f393e3639776b6cd9be7f1d95d9d56a3188",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4927c9e6991b09a36a41aab93a0e05332d899611/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4927c9e6991b09a36a41aab93a0e05332d899611/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=4927c9e6991b09a36a41aab93a0e05332d899611",
        "patch": "@@ -717,7 +717,7 @@ static void ThreadImport(ChainstateManager& chainman, std::vector<fs::path> vImp\n         fReindex = false;\n         LogPrintf(\"Reindexing finished\\n\");\n         // To avoid ending up in a situation without genesis block, re-try initializing (no-op if reindexing worked):\n-        LoadGenesisBlock(chainparams);\n+        ::ChainstateActive().LoadGenesisBlock(chainparams);\n     }\n \n     // -loadblock=\n@@ -1630,7 +1630,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                 // If we're not mid-reindex (based on disk + args), add a genesis block on disk\n                 // (otherwise we use the one already on disk).\n                 // This is called again in ThreadImport after the reindex completes.\n-                if (!fReindex && !LoadGenesisBlock(chainparams)) {\n+                if (!fReindex && !::ChainstateActive().LoadGenesisBlock(chainparams)) {\n                     strLoadError = _(\"Error initializing block database\");\n                     break;\n                 }"
      },
      {
        "sha": "46b28190d3b408359f437528925563f5ee589517",
        "filename": "src/test/util/setup_common.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4927c9e6991b09a36a41aab93a0e05332d899611/src/test/util/setup_common.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4927c9e6991b09a36a41aab93a0e05332d899611/src/test/util/setup_common.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/util/setup_common.cpp?ref=4927c9e6991b09a36a41aab93a0e05332d899611",
        "patch": "@@ -179,7 +179,7 @@ TestingSetup::TestingSetup(const std::string& chainName, const std::vector<const\n     assert(!::ChainstateActive().CanFlushToDisk());\n     ::ChainstateActive().InitCoinsCache(1 << 23);\n     assert(::ChainstateActive().CanFlushToDisk());\n-    if (!LoadGenesisBlock(chainparams)) {\n+    if (!::ChainstateActive().LoadGenesisBlock(chainparams)) {\n         throw std::runtime_error(\"LoadGenesisBlock failed.\");\n     }\n "
      },
      {
        "sha": "43b0698f01ca3430803ca107a53312875f811219",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 5,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4927c9e6991b09a36a41aab93a0e05332d899611/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4927c9e6991b09a36a41aab93a0e05332d899611/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4927c9e6991b09a36a41aab93a0e05332d899611",
        "patch": "@@ -4642,11 +4642,6 @@ bool CChainState::LoadGenesisBlock(const CChainParams& chainparams)\n     return true;\n }\n \n-bool LoadGenesisBlock(const CChainParams& chainparams)\n-{\n-    return ::ChainstateActive().LoadGenesisBlock(chainparams);\n-}\n-\n void CChainState::LoadExternalBlockFile(const CChainParams& chainparams, FILE* fileIn, FlatFilePos* dbp)\n {\n     // Map of disk positions for blocks with unknown parent (only used for reindex)"
      }
    ]
  },
  {
    "sha": "a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphM2JhMDhiYTdkZWMwYjAxNmU0MjIzM2NkNGEwNjFiYTFhMGU4NmMx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T19:10:57Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-02-22T16:48:39Z"
      },
      "message": "validation: Remove global ::{{Precious,Invalidate}Block,ResetBlockFailureFlags}",
      "tree": {
        "sha": "ebd813a58a65debbd08bef30f9c2b528853e9338",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebd813a58a65debbd08bef30f9c2b528853e9338"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4927c9e6991b09a36a41aab93a0e05332d899611",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4927c9e6991b09a36a41aab93a0e05332d899611",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4927c9e6991b09a36a41aab93a0e05332d899611"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 9,
      "deletions": 27
    },
    "files": [
      {
        "sha": "bb6c7e32efaba7cb2cd3add09fbe950e45328f71",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
        "patch": "@@ -1562,7 +1562,7 @@ static RPCHelpMan preciousblock()\n     }\n \n     BlockValidationState state;\n-    PreciousBlock(state, Params(), pblockindex);\n+    ::ChainstateActive().PreciousBlock(state, Params(), pblockindex);\n \n     if (!state.IsValid()) {\n         throw JSONRPCError(RPC_DATABASE_ERROR, state.ToString());\n@@ -1598,7 +1598,7 @@ static RPCHelpMan invalidateblock()\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }\n     }\n-    InvalidateBlock(state, Params(), pblockindex);\n+    ::ChainstateActive().InvalidateBlock(state, Params(), pblockindex);\n \n     if (state.IsValid()) {\n         ::ChainstateActive().ActivateBestChain(state, Params());\n@@ -1637,7 +1637,7 @@ static RPCHelpMan reconsiderblock()\n             throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, \"Block not found\");\n         }\n \n-        ResetBlockFailureFlags(pblockindex);\n+        ::ChainstateActive().ResetBlockFailureFlags(pblockindex);\n     }\n \n     BlockValidationState state;"
      },
      {
        "sha": "33efcd91c32589a4097bb08097cb29159541c7db",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 11,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
        "patch": "@@ -2965,9 +2965,6 @@ bool CChainState::PreciousBlock(BlockValidationState& state, const CChainParams&\n \n     return ActivateBestChain(state, params, std::shared_ptr<const CBlock>());\n }\n-bool PreciousBlock(BlockValidationState& state, const CChainParams& params, CBlockIndex *pindex) {\n-    return ::ChainstateActive().PreciousBlock(state, params, pindex);\n-}\n \n bool CChainState::InvalidateBlock(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex)\n {\n@@ -3105,10 +3102,6 @@ bool CChainState::InvalidateBlock(BlockValidationState& state, const CChainParam\n     return true;\n }\n \n-bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex *pindex) {\n-    return ::ChainstateActive().InvalidateBlock(state, chainparams, pindex);\n-}\n-\n void CChainState::ResetBlockFailureFlags(CBlockIndex *pindex) {\n     AssertLockHeld(cs_main);\n \n@@ -3143,10 +3136,6 @@ void CChainState::ResetBlockFailureFlags(CBlockIndex *pindex) {\n     }\n }\n \n-void ResetBlockFailureFlags(CBlockIndex *pindex) {\n-    return ::ChainstateActive().ResetBlockFailureFlags(pindex);\n-}\n-\n CBlockIndex* BlockManager::AddToBlockIndex(const CBlockHeader& block)\n {\n     AssertLockHeld(cs_main);"
      },
      {
        "sha": "73b17c6353e97b079fb12620f4dfc2613d31526a",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 6,
        "deletions": 13,
        "changes": 19,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
        "patch": "@@ -721,8 +721,14 @@ class CChainState\n     bool DisconnectTip(BlockValidationState& state, const CChainParams& chainparams, DisconnectedBlockTransactions* disconnectpool) EXCLUSIVE_LOCKS_REQUIRED(cs_main, m_mempool.cs);\n \n     // Manual block validity manipulation:\n+    /** Mark a block as precious and reorganize.\n+     *\n+     * May not be called in a validationinterface callback.\n+     */\n     bool PreciousBlock(BlockValidationState& state, const CChainParams& params, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\n+    /** Mark a block as invalid. */\n     bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\n+    /** Remove invalidity status from a block and its descendants. */\n     void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n     /** Replay blocks that aren't fully applied to the database. */\n@@ -779,19 +785,6 @@ class CChainState\n     friend ChainstateManager;\n };\n \n-/** Mark a block as precious and reorganize.\n- *\n- * May not be called in a\n- * validationinterface callback.\n- */\n-bool PreciousBlock(BlockValidationState& state, const CChainParams& params, CBlockIndex *pindex) LOCKS_EXCLUDED(cs_main);\n-\n-/** Mark a block as invalid. */\n-bool InvalidateBlock(BlockValidationState& state, const CChainParams& chainparams, CBlockIndex* pindex) LOCKS_EXCLUDED(cs_main);\n-\n-/** Remove invalidity status from a block and its descendants. */\n-void ResetBlockFailureFlags(CBlockIndex* pindex) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n-\n /**\n  * Provides an interface for creating and interacting with one or two\n  * chainstates: an IBD chainstate generated by downloading blocks, and"
      }
    ]
  },
  {
    "sha": "4bada76237d734c1de38d3bd58689caeefd5e8cb",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YmFkYTc2MjM3ZDczNGMxZGUzOGQzYmQ1ODY4OWNhZWVmZDVlOGNi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T19:50:04Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:07Z"
      },
      "message": "validation: Pass in chainstate to UpdateTip",
      "tree": {
        "sha": "e3a27b6c5742ae85580bc7b29a572f2d3016d32d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e3a27b6c5742ae85580bc7b29a572f2d3016d32d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4bada76237d734c1de38d3bd58689caeefd5e8cb",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bada76237d734c1de38d3bd58689caeefd5e8cb",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4bada76237d734c1de38d3bd58689caeefd5e8cb",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bada76237d734c1de38d3bd58689caeefd5e8cb/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a3ba08ba7dec0b016e42233cd4a061ba1a0e86c1"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 7,
      "deletions": 5
    },
    "files": [
      {
        "sha": "f7faa12458c720a04bcccacccac6da7408dbf74c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 5,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4bada76237d734c1de38d3bd58689caeefd5e8cb/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4bada76237d734c1de38d3bd58689caeefd5e8cb/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4bada76237d734c1de38d3bd58689caeefd5e8cb",
        "patch": "@@ -2433,7 +2433,7 @@ static void AppendWarning(bilingual_str& res, const bilingual_str& warn)\n }\n \n /** Check warning conditions and do some notifications on new chain tip set. */\n-static void UpdateTip(CTxMemPool& mempool, const CBlockIndex* pindexNew, const CChainParams& chainParams)\n+static void UpdateTip(CTxMemPool& mempool, const CBlockIndex* pindexNew, const CChainParams& chainParams, CChainState& active_chainstate)\n     EXCLUSIVE_LOCKS_REQUIRED(::cs_main)\n {\n     // New best block\n@@ -2446,7 +2446,8 @@ static void UpdateTip(CTxMemPool& mempool, const CBlockIndex* pindexNew, const C\n     }\n \n     bilingual_str warning_messages;\n-    if (!::ChainstateActive().IsInitialBlockDownload()) {\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n+    if (!active_chainstate.IsInitialBlockDownload()) {\n         const CBlockIndex* pindex = pindexNew;\n         for (int bit = 0; bit < VERSIONBITS_NUM_BITS; bit++) {\n             WarningBitsConditionChecker checker(bit);\n@@ -2461,11 +2462,12 @@ static void UpdateTip(CTxMemPool& mempool, const CBlockIndex* pindexNew, const C\n             }\n         }\n     }\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     LogPrintf(\"%s: new best=%s height=%d version=0x%08x log2_work=%f tx=%lu date='%s' progress=%f cache=%.1fMiB(%utxo)%s\\n\", __func__,\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight, pindexNew->nVersion,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), (unsigned long)pindexNew->nChainTx,\n       FormatISO8601DateTime(pindexNew->GetBlockTime()),\n-      GuessVerificationProgress(chainParams.TxData(), pindexNew), ::ChainstateActive().CoinsTip().DynamicMemoryUsage() * (1.0 / (1<<20)), ::ChainstateActive().CoinsTip().GetCacheSize(),\n+      GuessVerificationProgress(chainParams.TxData(), pindexNew), active_chainstate.CoinsTip().DynamicMemoryUsage() * (1.0 / (1<<20)), active_chainstate.CoinsTip().GetCacheSize(),\n       !warning_messages.empty() ? strprintf(\" warning='%s'\", warning_messages.original) : \"\");\n }\n \n@@ -2521,7 +2523,7 @@ bool CChainState::DisconnectTip(BlockValidationState& state, const CChainParams&\n \n     m_chain.SetTip(pindexDelete->pprev);\n \n-    UpdateTip(m_mempool, pindexDelete->pprev, chainparams);\n+    UpdateTip(m_mempool, pindexDelete->pprev, chainparams, *this);\n     // Let wallets know transactions went from 1-confirmed to\n     // 0-confirmed or conflicted:\n     GetMainSignals().BlockDisconnected(pblock, pindexDelete);\n@@ -2629,7 +2631,7 @@ bool CChainState::ConnectTip(BlockValidationState& state, const CChainParams& ch\n     disconnectpool.removeForBlock(blockConnecting.vtx);\n     // Update m_chain & related variables.\n     m_chain.SetTip(pindexNew);\n-    UpdateTip(m_mempool, pindexNew, chainparams);\n+    UpdateTip(m_mempool, pindexNew, chainparams, *this);\n \n     int64_t nTime6 = GetTimeMicros(); nTimePostConnect += nTime6 - nTime5; nTimeTotal += nTime6 - nTime1;\n     LogPrint(BCLog::BENCH, \"  - Connect postprocess: %.2fms [%.2fs (%.2fms/blk)]\\n\", (nTime6 - nTime5) * MILLI, nTimePostConnect * MICRO, nTimePostConnect * MILLI / nBlocksTotal);"
      }
    ]
  },
  {
    "sha": "63e4c7316a537900f525e221d8042587b443cc3d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo2M2U0YzczMTZhNTM3OTAwZjUyNWUyMjFkODA0MjU4N2I0NDNjYzNk",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T19:59:46Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:07Z"
      },
      "message": "validation: Pass in chainstate to ::PruneBlockFilesManual",
      "tree": {
        "sha": "fd7a4e43848b6126e7860a21dd2f5e877a3cdf46",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fd7a4e43848b6126e7860a21dd2f5e877a3cdf46"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/63e4c7316a537900f525e221d8042587b443cc3d",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63e4c7316a537900f525e221d8042587b443cc3d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/63e4c7316a537900f525e221d8042587b443cc3d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63e4c7316a537900f525e221d8042587b443cc3d/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4bada76237d734c1de38d3bd58689caeefd5e8cb",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4bada76237d734c1de38d3bd58689caeefd5e8cb",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4bada76237d734c1de38d3bd58689caeefd5e8cb"
      }
    ],
    "stats": {
      "total": 9,
      "additions": 5,
      "deletions": 4
    },
    "files": [
      {
        "sha": "568b3d98ac32dc55b46eeb5bb85396781260f289",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63e4c7316a537900f525e221d8042587b443cc3d/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63e4c7316a537900f525e221d8042587b443cc3d/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=63e4c7316a537900f525e221d8042587b443cc3d",
        "patch": "@@ -1015,7 +1015,7 @@ static RPCHelpMan pruneblockchain()\n         height = chainHeight - MIN_BLOCKS_TO_KEEP;\n     }\n \n-    PruneBlockFilesManual(height);\n+    PruneBlockFilesManual(::ChainstateActive(), height);\n     const CBlockIndex* block = ::ChainActive().Tip();\n     CHECK_NONFATAL(block);\n     while (block->pprev && (block->pprev->nStatus & BLOCK_HAVE_DATA)) {"
      },
      {
        "sha": "95fb3f68643fb57e8a040e03cf47af3549bb84da",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 2,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63e4c7316a537900f525e221d8042587b443cc3d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63e4c7316a537900f525e221d8042587b443cc3d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=63e4c7316a537900f525e221d8042587b443cc3d",
        "patch": "@@ -3953,11 +3953,12 @@ void BlockManager::FindFilesToPruneManual(std::set<int>& setFilesToPrune, int nM\n }\n \n /* This function is called from the RPC code for pruneblockchain */\n-void PruneBlockFilesManual(int nManualPruneHeight)\n+void PruneBlockFilesManual(CChainState& active_chainstate, int nManualPruneHeight)\n {\n     BlockValidationState state;\n     const CChainParams& chainparams = Params();\n-    if (!::ChainstateActive().FlushStateToDisk(\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n+    if (!active_chainstate.FlushStateToDisk(\n             chainparams, state, FlushStateMode::NONE, nManualPruneHeight)) {\n         LogPrintf(\"%s: failed to flush state (%s)\\n\", __func__, state.ToString());\n     }"
      },
      {
        "sha": "9855c131e1316508599bf05b1ef299b7cc47c821",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/63e4c7316a537900f525e221d8042587b443cc3d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/63e4c7316a537900f525e221d8042587b443cc3d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=63e4c7316a537900f525e221d8042587b443cc3d",
        "patch": "@@ -183,7 +183,7 @@ uint64_t CalculateCurrentUsage();\n void UnlinkPrunedFiles(const std::set<int>& setFilesToPrune);\n \n /** Prune block files up to a given height */\n-void PruneBlockFilesManual(int nManualPruneHeight);\n+void PruneBlockFilesManual(CChainState& active_chainstate, int nManualPruneHeight);\n \n /**\n * Validation result for a single transaction mempool acceptance."
      }
    ]
  },
  {
    "sha": "31eac50c721dd3b0bd2347e76196bf16913e9be9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWVhYzUwYzcyMWRkM2IwYmQyMzQ3ZTc2MTk2YmYxNjkxM2U5YmU5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T20:16:56Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:07Z"
      },
      "message": "validation: Remove global ::VersionBitsTip{State,SinceHeight,Statistics}\n\nTip: versionbitscache is currently a global so we didn't need to pass it\n     in to any of ::VersionBitsTip*'s callers",
      "tree": {
        "sha": "d9712e82d978f0bfc840c5a837a1d758f3288e66",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d9712e82d978f0bfc840c5a837a1d758f3288e66"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31eac50c721dd3b0bd2347e76196bf16913e9be9",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31eac50c721dd3b0bd2347e76196bf16913e9be9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31eac50c721dd3b0bd2347e76196bf16913e9be9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31eac50c721dd3b0bd2347e76196bf16913e9be9/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "63e4c7316a537900f525e221d8042587b443cc3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/63e4c7316a537900f525e221d8042587b443cc3d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/63e4c7316a537900f525e221d8042587b443cc3d"
      }
    ],
    "stats": {
      "total": 36,
      "additions": 6,
      "deletions": 30
    },
    "files": [
      {
        "sha": "53af1d0bcfcd2cf3ebdccaa1547d652182ea017b",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "patch": "@@ -1232,7 +1232,7 @@ static void BIP9SoftForkDescPushBack(UniValue& softforks, const std::string &nam\n     if (consensusParams.vDeployments[id].nTimeout <= 1230768000) return;\n \n     UniValue bip9(UniValue::VOBJ);\n-    const ThresholdState thresholdState = VersionBitsTipState(consensusParams, id);\n+    const ThresholdState thresholdState = VersionBitsState(::ChainActive().Tip(), consensusParams, id, versionbitscache);\n     switch (thresholdState) {\n     case ThresholdState::DEFINED: bip9.pushKV(\"status\", \"defined\"); break;\n     case ThresholdState::STARTED: bip9.pushKV(\"status\", \"started\"); break;\n@@ -1246,12 +1246,12 @@ static void BIP9SoftForkDescPushBack(UniValue& softforks, const std::string &nam\n     }\n     bip9.pushKV(\"start_time\", consensusParams.vDeployments[id].nStartTime);\n     bip9.pushKV(\"timeout\", consensusParams.vDeployments[id].nTimeout);\n-    int64_t since_height = VersionBitsTipStateSinceHeight(consensusParams, id);\n+    int64_t since_height = VersionBitsStateSinceHeight(::ChainActive().Tip(), consensusParams, id, versionbitscache);\n     bip9.pushKV(\"since\", since_height);\n     if (ThresholdState::STARTED == thresholdState)\n     {\n         UniValue statsUV(UniValue::VOBJ);\n-        BIP9Stats statsStruct = VersionBitsTipStatistics(consensusParams, id);\n+        BIP9Stats statsStruct = VersionBitsStatistics(::ChainActive().Tip(), consensusParams, id);\n         statsUV.pushKV(\"period\", statsStruct.period);\n         statsUV.pushKV(\"threshold\", statsStruct.threshold);\n         statsUV.pushKV(\"elapsed\", statsStruct.elapsed);"
      },
      {
        "sha": "b82767ff2c11e8314d4c9703ea503eb92be60403",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 18,
        "changes": 18,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "patch": "@@ -4997,24 +4997,6 @@ CBlockFileInfo* GetBlockFileInfo(size_t n)\n     return &vinfoBlockFile.at(n);\n }\n \n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);\n-    return VersionBitsState(::ChainActive().Tip(), params, pos, versionbitscache);\n-}\n-\n-BIP9Stats VersionBitsTipStatistics(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);\n-    return VersionBitsStatistics(::ChainActive().Tip(), params, pos);\n-}\n-\n-int VersionBitsTipStateSinceHeight(const Consensus::Params& params, Consensus::DeploymentPos pos)\n-{\n-    LOCK(cs_main);\n-    return VersionBitsStateSinceHeight(::ChainActive().Tip(), params, pos, versionbitscache);\n-}\n-\n static const uint64_t MEMPOOL_DUMP_VERSION = 1;\n \n bool LoadMempool(CTxMemPool& pool, CChainState& active_chainstate)"
      },
      {
        "sha": "91f2de630286d93be02d5b58b69050bb78b7fcb1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 9,
        "changes": 9,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "patch": "@@ -226,15 +226,6 @@ struct MempoolAcceptResult {\n MempoolAcceptResult AcceptToMemoryPool(CChainState& active_chainstate, CTxMemPool& pool, const CTransactionRef& tx,\n                                        bool bypass_limits, bool test_accept=false) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n-/** Get the BIP9 state for a given deployment at the current tip. */\n-ThresholdState VersionBitsTipState(const Consensus::Params& params, Consensus::DeploymentPos pos);\n-\n-/** Get the numerical statistics for the BIP9 state for a given deployment at the current tip. */\n-BIP9Stats VersionBitsTipStatistics(const Consensus::Params& params, Consensus::DeploymentPos pos);\n-\n-/** Get the block height at which the BIP9 deployment switched into the state for the block building on the current tip. */\n-int VersionBitsTipStateSinceHeight(const Consensus::Params& params, Consensus::DeploymentPos pos);\n-\n \n /** Apply the effects of this transaction on the UTXO set represented by view */\n void UpdateCoins(const CTransaction& tx, CCoinsViewCache& inputs, int nHeight);"
      },
      {
        "sha": "6df1db881478d6eeea75bf6a11be96889880c87b",
        "filename": "src/versionbits.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/versionbits.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31eac50c721dd3b0bd2347e76196bf16913e9be9/src/versionbits.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/versionbits.h?ref=31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "patch": "@@ -79,8 +79,11 @@ struct VersionBitsCache\n     void Clear();\n };\n \n+/** Get the BIP9 state for a given deployment at the current tip. */\n ThresholdState VersionBitsState(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache);\n+/** Get the numerical statistics for the BIP9 state for a given deployment at the current tip. */\n BIP9Stats VersionBitsStatistics(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos);\n+/** Get the block height at which the BIP9 deployment switched into the state for the block building on the current tip. */\n int VersionBitsStateSinceHeight(const CBlockIndex* pindexPrev, const Consensus::Params& params, Consensus::DeploymentPos pos, VersionBitsCache& cache);\n uint32_t VersionBitsMask(const Consensus::Params& params, Consensus::DeploymentPos pos);\n "
      }
    ]
  },
  {
    "sha": "2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYmRmMzdmZTE4N2JhNmYwOTBhMGY1Mjk5Yjc0ZDVkODJjZGU0Njk3",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-15T20:30:32Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:07Z"
      },
      "message": "validation: Pass in chainstate to CVerifyDB::VerifyDB",
      "tree": {
        "sha": "a79c01107a74ee56de49d23047e2722c43113710",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/a79c01107a74ee56de49d23047e2722c43113710"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31eac50c721dd3b0bd2347e76196bf16913e9be9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31eac50c721dd3b0bd2347e76196bf16913e9be9"
      }
    ],
    "stats": {
      "total": 37,
      "additions": 19,
      "deletions": 18
    },
    "files": [
      {
        "sha": "d09bb290b9b0a0f43d70a9717dc401727a216e2c",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "patch": "@@ -1741,7 +1741,7 @@ bool AppInitMain(const util::Ref& context, NodeContext& node, interfaces::BlockA\n                         // work when we allow VerifyDB to be parameterized by chainstate.\n                         if (&::ChainstateActive() == chainstate &&\n                             !CVerifyDB().VerifyDB(\n-                                chainparams, &chainstate->CoinsDB(),\n+                                chainparams, *chainstate, &chainstate->CoinsDB(),\n                                 args.GetArg(\"-checklevel\", DEFAULT_CHECKLEVEL),\n                                 args.GetArg(\"-checkblocks\", DEFAULT_CHECKBLOCKS))) {\n                             strLoadError = _(\"Corrupted block database detected\");"
      },
      {
        "sha": "3fdc00452d740478b6639ae207652bf9b3ddd5ea",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "patch": "@@ -1200,7 +1200,7 @@ static RPCHelpMan verifychain()\n \n     LOCK(cs_main);\n \n-    return CVerifyDB().VerifyDB(Params(), &::ChainstateActive().CoinsTip(), check_level, check_depth);\n+    return CVerifyDB().VerifyDB(Params(), ::ChainstateActive(), &::ChainstateActive().CoinsTip(), check_level, check_depth);\n },\n     };\n }"
      },
      {
        "sha": "c0d270a56916d08297d99420afd169ba2704de6c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 15,
        "changes": 31,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "patch": "@@ -4235,15 +4235,16 @@ CVerifyDB::~CVerifyDB()\n     uiInterface.ShowProgress(\"\", 100, false);\n }\n \n-bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n+bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n {\n     LOCK(cs_main);\n-    if (::ChainActive().Tip() == nullptr || ::ChainActive().Tip()->pprev == nullptr)\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n+    if (active_chainstate.m_chain.Tip() == nullptr || active_chainstate.m_chain.Tip()->pprev == nullptr)\n         return true;\n \n     // Verify blocks in the best chain\n-    if (nCheckDepth <= 0 || nCheckDepth > ::ChainActive().Height())\n-        nCheckDepth = ::ChainActive().Height();\n+    if (nCheckDepth <= 0 || nCheckDepth > active_chainstate.m_chain.Height())\n+        nCheckDepth = active_chainstate.m_chain.Height();\n     nCheckLevel = std::max(0, std::min(4, nCheckLevel));\n     LogPrintf(\"Verifying last %i blocks at level %i\\n\", nCheckDepth, nCheckLevel);\n     CCoinsViewCache coins(coinsview);\n@@ -4253,15 +4254,15 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n     BlockValidationState state;\n     int reportDone = 0;\n     LogPrintf(\"[0%%]...\"); /* Continued */\n-    for (pindex = ::ChainActive().Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n-        const int percentageDone = std::max(1, std::min(99, (int)(((double)(::ChainActive().Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n+    for (pindex = active_chainstate.m_chain.Tip(); pindex && pindex->pprev; pindex = pindex->pprev) {\n+        const int percentageDone = std::max(1, std::min(99, (int)(((double)(active_chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * (nCheckLevel >= 4 ? 50 : 100))));\n         if (reportDone < percentageDone/10) {\n             // report every 10% step\n             LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n             reportDone = percentageDone/10;\n         }\n         uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n-        if (pindex->nHeight <= ::ChainActive().Height()-nCheckDepth)\n+        if (pindex->nHeight <= active_chainstate.m_chain.Height()-nCheckDepth)\n             break;\n         if (fPruneMode && !(pindex->nStatus & BLOCK_HAVE_DATA)) {\n             // If pruning, only go back as far as we have data.\n@@ -4286,9 +4287,9 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n             }\n         }\n         // check level 3: check for inconsistencies during memory-only disconnect of tip blocks\n-        if (nCheckLevel >= 3 && (coins.DynamicMemoryUsage() + ::ChainstateActive().CoinsTip().DynamicMemoryUsage()) <= ::ChainstateActive().m_coinstip_cache_size_bytes) {\n+        if (nCheckLevel >= 3 && (coins.DynamicMemoryUsage() + active_chainstate.CoinsTip().DynamicMemoryUsage()) <= active_chainstate.m_coinstip_cache_size_bytes) {\n             assert(coins.GetBestBlock() == pindex->GetBlockHash());\n-            DisconnectResult res = ::ChainstateActive().DisconnectBlock(block, pindex, coins);\n+            DisconnectResult res = active_chainstate.DisconnectBlock(block, pindex, coins);\n             if (res == DISCONNECT_FAILED) {\n                 return error(\"VerifyDB(): *** irrecoverable inconsistency in block data at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n             }\n@@ -4302,26 +4303,26 @@ bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview,\n         if (ShutdownRequested()) return true;\n     }\n     if (pindexFailure)\n-        return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", ::ChainActive().Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n+        return error(\"VerifyDB(): *** coin database inconsistencies found (last %i blocks, %i good transactions before that)\\n\", active_chainstate.m_chain.Height() - pindexFailure->nHeight + 1, nGoodTransactions);\n \n     // store block count as we move pindex at check level >= 4\n-    int block_count = ::ChainActive().Height() - pindex->nHeight;\n+    int block_count = active_chainstate.m_chain.Height() - pindex->nHeight;\n \n     // check level 4: try reconnecting blocks\n     if (nCheckLevel >= 4) {\n-        while (pindex != ::ChainActive().Tip()) {\n-            const int percentageDone = std::max(1, std::min(99, 100 - (int)(((double)(::ChainActive().Height() - pindex->nHeight)) / (double)nCheckDepth * 50)));\n+        while (pindex != active_chainstate.m_chain.Tip()) {\n+            const int percentageDone = std::max(1, std::min(99, 100 - (int)(((double)(active_chainstate.m_chain.Height() - pindex->nHeight)) / (double)nCheckDepth * 50)));\n             if (reportDone < percentageDone/10) {\n                 // report every 10% step\n                 LogPrintf(\"[%d%%]...\", percentageDone); /* Continued */\n                 reportDone = percentageDone/10;\n             }\n             uiInterface.ShowProgress(_(\"Verifying blocks...\").translated, percentageDone, false);\n-            pindex = ::ChainActive().Next(pindex);\n+            pindex = active_chainstate.m_chain.Next(pindex);\n             CBlock block;\n             if (!ReadBlockFromDisk(block, pindex, chainparams.GetConsensus()))\n                 return error(\"VerifyDB(): *** ReadBlockFromDisk failed at %d, hash=%s\", pindex->nHeight, pindex->GetBlockHash().ToString());\n-            if (!::ChainstateActive().ConnectBlock(block, state, pindex, coins, chainparams))\n+            if (!active_chainstate.ConnectBlock(block, state, pindex, coins, chainparams))\n                 return error(\"VerifyDB(): *** found unconnectable block at %d, hash=%s (%s)\", pindex->nHeight, pindex->GetBlockHash().ToString(), state.ToString());\n             if (ShutdownRequested()) return true;\n         }"
      },
      {
        "sha": "e086684a93ad0f4380206a1e5a55253e7b39a45f",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2bdf37fe187ba6f090a0f5299b74d5d82cde4697/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "patch": "@@ -340,7 +340,7 @@ class CVerifyDB {\n public:\n     CVerifyDB();\n     ~CVerifyDB();\n-    bool VerifyDB(const CChainParams& chainparams, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n+    bool VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n };\n \n enum DisconnectResult"
      }
    ]
  },
  {
    "sha": "8b99efbcc08ab41caf657c6d730a27e6a91bc356",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Yjk5ZWZiY2MwOGFiNDFjYWY2NTdjNmQ3MzBhMjdlNmE5MWJjMzU2",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-10-05T19:14:35Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:07Z"
      },
      "message": "validation: Move invalid block handling to CChainState\n\n- InvalidChainFound\n- CheckForkWarningConditions",
      "tree": {
        "sha": "351d2d0930a8b26f016ad8ba066e61cbe922575f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/351d2d0930a8b26f016ad8ba066e61cbe922575f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8b99efbcc08ab41caf657c6d730a27e6a91bc356",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b99efbcc08ab41caf657c6d730a27e6a91bc356",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8b99efbcc08ab41caf657c6d730a27e6a91bc356",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b99efbcc08ab41caf657c6d730a27e6a91bc356/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2bdf37fe187ba6f090a0f5299b74d5d82cde4697",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2bdf37fe187ba6f090a0f5299b74d5d82cde4697"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 13,
      "deletions": 7
    },
    "files": [
      {
        "sha": "771e14a53641a7dba82aa029a4fc2278bd3a4f4c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 7,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b99efbcc08ab41caf657c6d730a27e6a91bc356/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b99efbcc08ab41caf657c6d730a27e6a91bc356/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8b99efbcc08ab41caf657c6d730a27e6a91bc356",
        "patch": "@@ -1363,16 +1363,18 @@ static void AlertNotify(const std::string& strMessage)\n #endif\n }\n \n-static void CheckForkWarningConditions() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void CChainState::CheckForkWarningConditions()\n {\n     AssertLockHeld(cs_main);\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n+\n     // Before we get past initial download, we cannot reliably alert about forks\n     // (we assume we don't get stuck on a fork before finishing our initial sync)\n-    if (::ChainstateActive().IsInitialBlockDownload()) {\n+    if (IsInitialBlockDownload()) {\n         return;\n     }\n \n-    if (pindexBestInvalid && pindexBestInvalid->nChainWork > ::ChainActive().Tip()->nChainWork + (GetBlockProof(*::ChainActive().Tip()) * 6)) {\n+    if (pindexBestInvalid && pindexBestInvalid->nChainWork > m_chain.Tip()->nChainWork + (GetBlockProof(*m_chain.Tip()) * 6)) {\n         LogPrintf(\"%s: Warning: Found invalid chain at least ~6 blocks longer than our best chain.\\nChain state database corruption likely.\\n\", __func__);\n         SetfLargeWorkInvalidChainFound(true);\n     } else {\n@@ -1381,21 +1383,22 @@ static void CheckForkWarningConditions() EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n }\n \n // Called both upon regular invalid block discovery *and* InvalidateBlock\n-void static InvalidChainFound(CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+void CChainState::InvalidChainFound(CBlockIndex* pindexNew)\n {\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n     if (!pindexBestInvalid || pindexNew->nChainWork > pindexBestInvalid->nChainWork)\n         pindexBestInvalid = pindexNew;\n     if (pindexBestHeader != nullptr && pindexBestHeader->GetAncestor(pindexNew->nHeight) == pindexNew) {\n-        pindexBestHeader = ::ChainActive().Tip();\n+        pindexBestHeader = m_chain.Tip();\n     }\n \n     LogPrintf(\"%s: invalid block=%s  height=%d  log2_work=%f  date=%s\\n\", __func__,\n       pindexNew->GetBlockHash().ToString(), pindexNew->nHeight,\n       log(pindexNew->nChainWork.getdouble())/log(2.0), FormatISO8601DateTime(pindexNew->GetBlockTime()));\n-    CBlockIndex *tip = ::ChainActive().Tip();\n+    CBlockIndex *tip = m_chain.Tip();\n     assert (tip);\n     LogPrintf(\"%s:  current best=%s  height=%d  log2_work=%f  date=%s\\n\", __func__,\n-      tip->GetBlockHash().ToString(), ::ChainActive().Height(), log(tip->nChainWork.getdouble())/log(2.0),\n+      tip->GetBlockHash().ToString(), m_chain.Height(), log(tip->nChainWork.getdouble())/log(2.0),\n       FormatISO8601DateTime(tip->GetBlockTime()));\n     CheckForkWarningConditions();\n }"
      },
      {
        "sha": "e7101e7d0ae551ffbf91960e9ab29df208ba9623",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8b99efbcc08ab41caf657c6d730a27e6a91bc356/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8b99efbcc08ab41caf657c6d730a27e6a91bc356/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=8b99efbcc08ab41caf657c6d730a27e6a91bc356",
        "patch": "@@ -773,6 +773,9 @@ class CChainState\n     //! Mark a block as not having block data\n     void EraseBlockData(CBlockIndex* index) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    void CheckForkWarningConditions() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+    void InvalidChainFound(CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n     friend ChainstateManager;\n };\n "
      }
    ]
  },
  {
    "sha": "8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4Y2RiMmY3ZTU4ZGZkOWE2MzFhOGNiYjhmMGVlN2U4YzBjMzA0ZWI0",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-08-26T18:50:08Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:22Z"
      },
      "message": "validation: Move LoadBlockIndexDB to CChainState\n\nCChainState needed cuz setBlockIndexCandidates",
      "tree": {
        "sha": "1be61dc39a846e77fce159e14f3b68cf53e149b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1be61dc39a846e77fce159e14f3b68cf53e149b4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8b99efbcc08ab41caf657c6d730a27e6a91bc356",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8b99efbcc08ab41caf657c6d730a27e6a91bc356",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8b99efbcc08ab41caf657c6d730a27e6a91bc356"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 8,
      "deletions": 5
    },
    "files": [
      {
        "sha": "921468c1ef97050bfa42e65d844025377b3b8541",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 5,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
        "patch": "@@ -4136,11 +4136,12 @@ void BlockManager::Unload() {\n     m_block_index.clear();\n }\n \n-bool static LoadBlockIndexDB(ChainstateManager& chainman, const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n+bool CChainState::LoadBlockIndexDB(const CChainParams& chainparams)\n {\n-    if (!chainman.m_blockman.LoadBlockIndex(\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n+    if (!m_blockman.LoadBlockIndex(\n             chainparams.GetConsensus(), *pblocktree,\n-            ::ChainstateActive().setBlockIndexCandidates)) {\n+            setBlockIndexCandidates)) {\n         return false;\n     }\n \n@@ -4164,7 +4165,7 @@ bool static LoadBlockIndexDB(ChainstateManager& chainman, const CChainParams& ch\n     // Check presence of blk files\n     LogPrintf(\"Checking all blk files are present...\\n\");\n     std::set<int> setBlkDataFiles;\n-    for (const std::pair<const uint256, CBlockIndex*>& item : chainman.BlockIndex()) {\n+    for (const std::pair<const uint256, CBlockIndex*>& item : m_blockman.m_block_index) {\n         CBlockIndex* pindex = item.second;\n         if (pindex->nStatus & BLOCK_HAVE_DATA) {\n             setBlkDataFiles.insert(pindex->nFile);\n@@ -4596,7 +4597,7 @@ bool ChainstateManager::LoadBlockIndex(const CChainParams& chainparams)\n     // Load block index from databases\n     bool needs_init = fReindex;\n     if (!fReindex) {\n-        bool ret = LoadBlockIndexDB(*this, chainparams);\n+        bool ret = ActiveChainstate().LoadBlockIndexDB(chainparams);\n         if (!ret) return false;\n         needs_init = m_blockman.m_block_index.empty();\n     }"
      },
      {
        "sha": "ff6bac4c43cd6f48375e79197bed30b333160b36",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
        "patch": "@@ -776,6 +776,8 @@ class CChainState\n     void CheckForkWarningConditions() EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n     void InvalidChainFound(CBlockIndex* pindexNew) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n+    bool LoadBlockIndexDB(const CChainParams& chainparams) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n+\n     friend ChainstateManager;\n };\n "
      }
    ]
  },
  {
    "sha": "1fb7b2c59505a6b9768789f6caad215a0a22ef16",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxZmI3YjJjNTk1MDVhNmI5NzY4Nzg5ZjZjYWFkMjE1YTBhMjJlZjE2",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-17T19:46:29Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:56:23Z"
      },
      "message": "validation: Use *this in CChainState::InvalidateBlock",
      "tree": {
        "sha": "fa49d900b5119e9ccd6b46e0dddee3a5a5f7a760",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa49d900b5119e9ccd6b46e0dddee3a5a5f7a760"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/1fb7b2c59505a6b9768789f6caad215a0a22ef16",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7b2c59505a6b9768789f6caad215a0a22ef16",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb7b2c59505a6b9768789f6caad215a0a22ef16",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7b2c59505a6b9768789f6caad215a0a22ef16/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8cdb2f7e58dfd9a631a8cbb8f0ee7e8c0c304eb4"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "eb6ce32b06ed23b7b4e648321bce5ecf206bd562",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/1fb7b2c59505a6b9768789f6caad215a0a22ef16/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/1fb7b2c59505a6b9768789f6caad215a0a22ef16/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=1fb7b2c59505a6b9768789f6caad215a0a22ef16",
        "patch": "@@ -3031,7 +3031,8 @@ bool CChainState::InvalidateBlock(BlockValidationState& state, const CChainParam\n         // transactions back to the mempool if disconnecting was successful,\n         // and we're not doing a very deep invalidation (in which case\n         // keeping the mempool up to date is probably futile anyway).\n-        UpdateMempoolForReorg(::ChainstateActive(), m_mempool, disconnectpool, /* fAddToMempool = */ (++disconnected <= 10) && ret);\n+        assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n+        UpdateMempoolForReorg(*this, m_mempool, disconnectpool, /* fAddToMempool = */ (++disconnected <= 10) && ret);\n         if (!ret) return false;\n         assert(invalid_walk_tip->pprev == m_chain.Tip());\n "
      }
    ]
  },
  {
    "sha": "4744efc9bae8b22efb76152a3c045d054c880399",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NzQ0ZWZjOWJhZThiMjJlZmI3NjE1MmEzYzA0NWQwNTRjODgwMzk5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-09T20:05:39Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:49:29Z"
      },
      "message": "validation: Pass in chainstate to CTxMemPool::check\n\nThis is the only instance where validation reaches for something outside\nof it.",
      "tree": {
        "sha": "b3d06bc93b5fbffc378a1991591210dbeebbc273",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b3d06bc93b5fbffc378a1991591210dbeebbc273"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4744efc9bae8b22efb76152a3c045d054c880399",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4744efc9bae8b22efb76152a3c045d054c880399",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4744efc9bae8b22efb76152a3c045d054c880399",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4744efc9bae8b22efb76152a3c045d054c880399/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "1fb7b2c59505a6b9768789f6caad215a0a22ef16",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/1fb7b2c59505a6b9768789f6caad215a0a22ef16",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/1fb7b2c59505a6b9768789f6caad215a0a22ef16"
      }
    ],
    "stats": {
      "total": 19,
      "additions": 11,
      "deletions": 8
    },
    "files": [
      {
        "sha": "429e0b5e89976b7b3313484805907cde32d8f05a",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4744efc9bae8b22efb76152a3c045d054c880399/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4744efc9bae8b22efb76152a3c045d054c880399/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=4744efc9bae8b22efb76152a3c045d054c880399",
        "patch": "@@ -2301,7 +2301,7 @@ void PeerManagerImpl::ProcessOrphanTx(std::set<uint256>& orphan_work_set)\n             break;\n         }\n     }\n-    m_mempool.check(&::ChainstateActive().CoinsTip());\n+    m_mempool.check(m_chainman.ActiveChainstate());\n }\n \n /**\n@@ -3262,7 +3262,7 @@ void PeerManagerImpl::ProcessMessage(CNode& pfrom, const std::string& msg_type,\n         const TxValidationState& state = result.m_state;\n \n         if (result.m_result_type == MempoolAcceptResult::ResultType::VALID) {\n-            m_mempool.check(&::ChainstateActive().CoinsTip());\n+            m_mempool.check(m_chainman.ActiveChainstate());\n             // As this version of the transaction was acceptable, we can forget about any\n             // requests for it.\n             m_txrequest.ForgetTxHash(tx.GetHash());"
      },
      {
        "sha": "05902a55c3e6d927a6adef94bd243250f4bc3319",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 4,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4744efc9bae8b22efb76152a3c045d054c880399/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4744efc9bae8b22efb76152a3c045d054c880399/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=4744efc9bae8b22efb76152a3c045d054c880399",
        "patch": "@@ -619,7 +619,7 @@ static void CheckInputsAndUpdateCoins(const CTransaction& tx, CCoinsViewCache& m\n     UpdateCoins(tx, mempoolDuplicate, std::numeric_limits<int>::max());\n }\n \n-void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n+void CTxMemPool::check(CChainState& active_chainstate) const\n {\n     if (m_check_ratio == 0) return;\n \n@@ -633,8 +633,11 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n     CAmount check_total_fee{0};\n     uint64_t innerUsage = 0;\n \n-    CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(pcoins));\n-    const int64_t spendheight = g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate);\n+    CCoinsViewCache& active_coins_tip = active_chainstate.CoinsTip();\n+    assert(std::addressof(::ChainstateActive().CoinsTip()) == std::addressof(active_coins_tip)); // TODO: REVIEW-ONLY, REMOVE IN FUTURE COMMIT\n+    CCoinsViewCache mempoolDuplicate(const_cast<CCoinsViewCache*>(&active_coins_tip));\n+    const int64_t spendheight = active_chainstate.m_chain.Height() + 1;\n+    assert(g_chainman.m_blockman.GetSpendHeight(mempoolDuplicate) == spendheight); // TODO: REVIEW-ONLY, REMOVE IN FUTURE COMMIT\n \n     std::list<const CTxMemPoolEntry*> waitingOnDependants;\n     for (indexed_transaction_set::const_iterator it = mapTx.begin(); it != mapTx.end(); it++) {\n@@ -655,7 +658,7 @@ void CTxMemPool::check(const CCoinsViewCache *pcoins) const\n                 fDependsWait = true;\n                 setParentCheck.insert(*it2);\n             } else {\n-                assert(pcoins->HaveCoin(txin.prevout));\n+                assert(active_coins_tip.HaveCoin(txin.prevout));\n             }\n             // Check whether its inputs are marked in mapNextTx.\n             auto it3 = mapNextTx.find(txin.prevout);"
      },
      {
        "sha": "001d856e432ff6b5ee0469af93602228443c6da0",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4744efc9bae8b22efb76152a3c045d054c880399/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4744efc9bae8b22efb76152a3c045d054c880399/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=4744efc9bae8b22efb76152a3c045d054c880399",
        "patch": "@@ -604,7 +604,7 @@ class CTxMemPool\n      * all inputs are in the mapNextTx array). If sanity-checking is turned off,\n      * check does nothing.\n      */\n-    void check(const CCoinsViewCache *pcoins) const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n+    void check(CChainState& active_chainstate) const EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     // addUnchecked must updated state for all ancestors of a given transaction,\n     // to track size/count of descendant transactions.  First version of"
      },
      {
        "sha": "8864c7f2488a5234c9fffa46d08d243c4d9fba60",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4744efc9bae8b22efb76152a3c045d054c880399/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4744efc9bae8b22efb76152a3c045d054c880399/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=4744efc9bae8b22efb76152a3c045d054c880399",
        "patch": "@@ -2799,7 +2799,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n         // any disconnected transactions back to the mempool.\n         UpdateMempoolForReorg(::ChainstateActive(), m_mempool, disconnectpool, true);\n     }\n-    m_mempool.check(&CoinsTip());\n+    m_mempool.check(*this);\n \n     CheckForkWarningConditions();\n "
      }
    ]
  },
  {
    "sha": "a9d28bcd8d8f71d089322b1d631390352e31ee2b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphOWQyOGJjZDhkOGY3MWQwODkzMjJiMWQ2MzEzOTAzNTJlMzFlZTJi",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-09-17T19:46:16Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:49:30Z"
      },
      "message": "validation: Use *this in CChainState::ActivateBestChainStep",
      "tree": {
        "sha": "1ddfecffe5c73cc10f25f086f63e3a170009eda4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1ddfecffe5c73cc10f25f086f63e3a170009eda4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a9d28bcd8d8f71d089322b1d631390352e31ee2b",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9d28bcd8d8f71d089322b1d631390352e31ee2b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d28bcd8d8f71d089322b1d631390352e31ee2b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9d28bcd8d8f71d089322b1d631390352e31ee2b/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "4744efc9bae8b22efb76152a3c045d054c880399",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4744efc9bae8b22efb76152a3c045d054c880399",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/4744efc9bae8b22efb76152a3c045d054c880399"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "723def03a35a0d7058aa6c45c2b9c865630d6561",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a9d28bcd8d8f71d089322b1d631390352e31ee2b/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a9d28bcd8d8f71d089322b1d631390352e31ee2b/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=a9d28bcd8d8f71d089322b1d631390352e31ee2b",
        "patch": "@@ -2725,6 +2725,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n {\n     AssertLockHeld(cs_main);\n     AssertLockHeld(m_mempool.cs);\n+    assert(std::addressof(::ChainstateActive()) == std::addressof(*this));\n \n     const CBlockIndex* pindexOldTip = m_chain.Tip();\n     const CBlockIndex* pindexFork = m_chain.FindFork(pindexMostWork);\n@@ -2736,7 +2737,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n         if (!DisconnectTip(state, chainparams, &disconnectpool)) {\n             // This is likely a fatal error, but keep the mempool consistent,\n             // just in case. Only remove from the mempool in this case.\n-            UpdateMempoolForReorg(::ChainstateActive(), m_mempool, disconnectpool, false);\n+            UpdateMempoolForReorg(*this, m_mempool, disconnectpool, false);\n \n             // If we're unable to disconnect a block during normal operation,\n             // then that is a failure of our local system -- we should abort\n@@ -2780,7 +2781,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n                     // A system error occurred (disk space, database error, ...).\n                     // Make the mempool consistent with the current tip, just in case\n                     // any observers try to use it before shutdown.\n-                    UpdateMempoolForReorg(::ChainstateActive(), m_mempool, disconnectpool, false);\n+                    UpdateMempoolForReorg(*this, m_mempool, disconnectpool, false);\n                     return false;\n                 }\n             } else {\n@@ -2797,7 +2798,7 @@ bool CChainState::ActivateBestChainStep(BlockValidationState& state, const CChai\n     if (fBlocksDisconnected) {\n         // If any blocks were disconnected, disconnectpool may be non empty.  Add\n         // any disconnected transactions back to the mempool.\n-        UpdateMempoolForReorg(::ChainstateActive(), m_mempool, disconnectpool, true);\n+        UpdateMempoolForReorg(*this, m_mempool, disconnectpool, true);\n     }\n     m_mempool.check(*this);\n "
      }
    ]
  },
  {
    "sha": "fee73347c0015e4c24595c9708831d76cd6eec8c",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpmZWU3MzM0N2MwMDE1ZTRjMjQ1OTVjOTcwODgzMWQ3NmNkNmVlYzhj",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-10-06T20:08:26Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:49:30Z"
      },
      "message": "validation: Pass in chain to FindBlockPos+SaveBlockToDisk",
      "tree": {
        "sha": "7bd09f76362a122941969139fdb7a1d3636fcb32",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7bd09f76362a122941969139fdb7a1d3636fcb32"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/fee73347c0015e4c24595c9708831d76cd6eec8c",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee73347c0015e4c24595c9708831d76cd6eec8c",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/fee73347c0015e4c24595c9708831d76cd6eec8c",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee73347c0015e4c24595c9708831d76cd6eec8c/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a9d28bcd8d8f71d089322b1d631390352e31ee2b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a9d28bcd8d8f71d089322b1d631390352e31ee2b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a9d28bcd8d8f71d089322b1d631390352e31ee2b"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 7,
      "deletions": 6
    },
    "files": [
      {
        "sha": "dcb88294eafe01eabeb7228f23d629ea12ee8587",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 6,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/fee73347c0015e4c24595c9708831d76cd6eec8c/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/fee73347c0015e4c24595c9708831d76cd6eec8c/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=fee73347c0015e4c24595c9708831d76cd6eec8c",
        "patch": "@@ -3226,7 +3226,7 @@ void CChainState::ReceivedBlockTransactions(const CBlock& block, CBlockIndex* pi\n     }\n }\n \n-static bool FindBlockPos(FlatFilePos &pos, unsigned int nAddSize, unsigned int nHeight, uint64_t nTime, bool fKnown = false)\n+static bool FindBlockPos(FlatFilePos &pos, unsigned int nAddSize, unsigned int nHeight, CChain& active_chain, uint64_t nTime, bool fKnown = false)\n {\n     LOCK(cs_LastBlockFile);\n \n@@ -3241,7 +3241,8 @@ static bool FindBlockPos(FlatFilePos &pos, unsigned int nAddSize, unsigned int n\n             // when the undo file is keeping up with the block file, we want to flush it explicitly\n             // when it is lagging behind (more blocks arrive than are being connected), we let the\n             // undo block write case handle it\n-            finalize_undo = (vinfoBlockFile[nFile].nHeightLast == (unsigned int)ChainActive().Tip()->nHeight);\n+            assert(std::addressof(::ChainActive()) == std::addressof(active_chain));\n+            finalize_undo = (vinfoBlockFile[nFile].nHeightLast == (unsigned int)active_chain.Tip()->nHeight);\n             nFile++;\n             if (vinfoBlockFile.size() <= nFile) {\n                 vinfoBlockFile.resize(nFile + 1);\n@@ -3703,12 +3704,12 @@ bool ChainstateManager::ProcessNewBlockHeaders(const std::vector<CBlockHeader>&\n }\n \n /** Store block on disk. If dbp is non-nullptr, the file is known to already reside on disk */\n-static FlatFilePos SaveBlockToDisk(const CBlock& block, int nHeight, const CChainParams& chainparams, const FlatFilePos* dbp) {\n+static FlatFilePos SaveBlockToDisk(const CBlock& block, int nHeight, CChain& active_chain, const CChainParams& chainparams, const FlatFilePos* dbp) {\n     unsigned int nBlockSize = ::GetSerializeSize(block, CLIENT_VERSION);\n     FlatFilePos blockPos;\n     if (dbp != nullptr)\n         blockPos = *dbp;\n-    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, block.GetBlockTime(), dbp != nullptr)) {\n+    if (!FindBlockPos(blockPos, nBlockSize+8, nHeight, active_chain, block.GetBlockTime(), dbp != nullptr)) {\n         error(\"%s: FindBlockPos failed\", __func__);\n         return FlatFilePos();\n     }\n@@ -3787,7 +3788,7 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n     // Write block to history file\n     if (fNewBlock) *fNewBlock = true;\n     try {\n-        FlatFilePos blockPos = SaveBlockToDisk(block, pindex->nHeight, chainparams, dbp);\n+        FlatFilePos blockPos = SaveBlockToDisk(block, pindex->nHeight, ::ChainActive(), chainparams, dbp);\n         if (blockPos.IsNull()) {\n             state.Error(strprintf(\"%s: Failed to find position to write new block to disk\", __func__));\n             return false;\n@@ -4629,7 +4630,7 @@ bool CChainState::LoadGenesisBlock(const CChainParams& chainparams)\n \n     try {\n         const CBlock& block = chainparams.GenesisBlock();\n-        FlatFilePos blockPos = SaveBlockToDisk(block, 0, chainparams, nullptr);\n+        FlatFilePos blockPos = SaveBlockToDisk(block, 0, ::ChainActive(), chainparams, nullptr);\n         if (blockPos.IsNull())\n             return error(\"%s: writing genesis block to disk failed\", __func__);\n         CBlockIndex *pindex = m_blockman.AddToBlockIndex(block);"
      }
    ]
  },
  {
    "sha": "5e4af773809415b71a10e3120cc44854d61c4c19",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ZTRhZjc3MzgwOTQxNWI3MWExMGUzMTIwY2M0NDg1NGQ2MWM0YzE5",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-10-06T20:13:36Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:49:30Z"
      },
      "message": "validation: Use existing chain member in CChainState::AcceptBlock",
      "tree": {
        "sha": "bfbc1db78f437ee5f96f3e9b6d2c5b50d8c42161",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/bfbc1db78f437ee5f96f3e9b6d2c5b50d8c42161"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5e4af773809415b71a10e3120cc44854d61c4c19",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4af773809415b71a10e3120cc44854d61c4c19",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5e4af773809415b71a10e3120cc44854d61c4c19",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4af773809415b71a10e3120cc44854d61c4c19/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "fee73347c0015e4c24595c9708831d76cd6eec8c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/fee73347c0015e4c24595c9708831d76cd6eec8c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/fee73347c0015e4c24595c9708831d76cd6eec8c"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "b40e1f53b939e3004b9c1f518061e7c8bce9b06c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5e4af773809415b71a10e3120cc44854d61c4c19/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5e4af773809415b71a10e3120cc44854d61c4c19/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5e4af773809415b71a10e3120cc44854d61c4c19",
        "patch": "@@ -3787,8 +3787,9 @@ bool CChainState::AcceptBlock(const std::shared_ptr<const CBlock>& pblock, Block\n \n     // Write block to history file\n     if (fNewBlock) *fNewBlock = true;\n+    assert(std::addressof(::ChainActive()) == std::addressof(m_chain));\n     try {\n-        FlatFilePos blockPos = SaveBlockToDisk(block, pindex->nHeight, ::ChainActive(), chainparams, dbp);\n+        FlatFilePos blockPos = SaveBlockToDisk(block, pindex->nHeight, m_chain, chainparams, dbp);\n         if (blockPos.IsNull()) {\n             state.Error(strprintf(\"%s: Failed to find position to write new block to disk\", __func__));\n             return false;"
      }
    ]
  },
  {
    "sha": "03f75c42e12a272057adccb6f0077e71f971eeef",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowM2Y3NWM0MmUxMmEyNzIwNTdhZGNjYjZmMDA3N2U3MWY5NzFlZWVm",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2020-10-06T20:13:50Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:49:30Z"
      },
      "message": "validation: Use existing chain member in CChainState::LoadGenesisBlock",
      "tree": {
        "sha": "e762312697c3633a1b821a24923e7f5590839e1f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e762312697c3633a1b821a24923e7f5590839e1f"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/03f75c42e12a272057adccb6f0077e71f971eeef",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f75c42e12a272057adccb6f0077e71f971eeef",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/03f75c42e12a272057adccb6f0077e71f971eeef",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f75c42e12a272057adccb6f0077e71f971eeef/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5e4af773809415b71a10e3120cc44854d61c4c19",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5e4af773809415b71a10e3120cc44854d61c4c19",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5e4af773809415b71a10e3120cc44854d61c4c19"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "e1cd97a38ef0d4300fdf09c8e766688d85aa7850",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/03f75c42e12a272057adccb6f0077e71f971eeef/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/03f75c42e12a272057adccb6f0077e71f971eeef/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=03f75c42e12a272057adccb6f0077e71f971eeef",
        "patch": "@@ -4629,9 +4629,10 @@ bool CChainState::LoadGenesisBlock(const CChainParams& chainparams)\n     if (m_blockman.m_block_index.count(chainparams.GenesisBlock().GetHash()))\n         return true;\n \n+    assert(std::addressof(::ChainActive()) == std::addressof(m_chain));\n     try {\n         const CBlock& block = chainparams.GenesisBlock();\n-        FlatFilePos blockPos = SaveBlockToDisk(block, 0, ::ChainActive(), chainparams, nullptr);\n+        FlatFilePos blockPos = SaveBlockToDisk(block, 0, m_chain, chainparams, nullptr);\n         if (blockPos.IsNull())\n             return error(\"%s: writing genesis block to disk failed\", __func__);\n         CBlockIndex *pindex = m_blockman.AddToBlockIndex(block);"
      }
    ]
  },
  {
    "sha": "e11b6496506246882df450586acf735dabedf731",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplMTFiNjQ5NjUwNjI0Njg4MmRmNDUwNTg2YWNmNzM1ZGFiZWRmNzMx",
    "commit": {
      "author": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-01T22:06:51Z"
      },
      "committer": {
        "name": "Carl Dong",
        "email": "contact@carldong.me",
        "date": "2021-03-03T19:56:26Z"
      },
      "message": "validation: CVerifyDB::VerifyDB: Use locking annotation\n\n...instead of recursively locking unconditionally",
      "tree": {
        "sha": "e5d503e5cd488b1d33c53f0227ed625d89709485",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e5d503e5cd488b1d33c53f0227ed625d89709485"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e11b6496506246882df450586acf735dabedf731",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11b6496506246882df450586acf735dabedf731",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e11b6496506246882df450586acf735dabedf731",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e11b6496506246882df450586acf735dabedf731/comments",
    "author": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "dongcarl",
      "id": 3445290,
      "node_id": "MDQ6VXNlcjM0NDUyOTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3445290?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dongcarl",
      "html_url": "https://github.com/dongcarl",
      "followers_url": "https://api.github.com/users/dongcarl/followers",
      "following_url": "https://api.github.com/users/dongcarl/following{/other_user}",
      "gists_url": "https://api.github.com/users/dongcarl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dongcarl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dongcarl/subscriptions",
      "organizations_url": "https://api.github.com/users/dongcarl/orgs",
      "repos_url": "https://api.github.com/users/dongcarl/repos",
      "events_url": "https://api.github.com/users/dongcarl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dongcarl/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "03f75c42e12a272057adccb6f0077e71f971eeef",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/03f75c42e12a272057adccb6f0077e71f971eeef",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/03f75c42e12a272057adccb6f0077e71f971eeef"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 3,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e7439a2a1aea5f24d7c7a1db48bf27cab26dae4d",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e11b6496506246882df450586acf735dabedf731/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e11b6496506246882df450586acf735dabedf731/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=e11b6496506246882df450586acf735dabedf731",
        "patch": "@@ -4245,7 +4245,8 @@ CVerifyDB::~CVerifyDB()\n \n bool CVerifyDB::VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth)\n {\n-    LOCK(cs_main);\n+    AssertLockHeld(cs_main);\n+\n     assert(std::addressof(::ChainstateActive()) == std::addressof(active_chainstate));\n     if (active_chainstate.m_chain.Tip() == nullptr || active_chainstate.m_chain.Tip()->pprev == nullptr)\n         return true;"
      },
      {
        "sha": "74f8541934e5065b3ff99e82634a239615bd11dc",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e11b6496506246882df450586acf735dabedf731/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e11b6496506246882df450586acf735dabedf731/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=e11b6496506246882df450586acf735dabedf731",
        "patch": "@@ -340,7 +340,7 @@ class CVerifyDB {\n public:\n     CVerifyDB();\n     ~CVerifyDB();\n-    bool VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth);\n+    bool VerifyDB(const CChainParams& chainparams, CChainState& active_chainstate, CCoinsView *coinsview, int nCheckLevel, int nCheckDepth) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n };\n \n enum DisconnectResult"
      }
    ]
  }
]