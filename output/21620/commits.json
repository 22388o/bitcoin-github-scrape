[
  {
    "sha": "361dd79c27cb5760ad68fdacf346cc26b8f588c3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNjFkZDc5YzI3Y2I1NzYwYWQ2OGZkYWNmMzQ2Y2MyNmI4ZjU4OGMz",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T15:39:46Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:46Z"
      },
      "message": "validation: unannotate g_chainman from needing cs_main\n\nIn preparation for removing `cs_main` requirements for\nChainstateActive()/ActiveChainstate(), relax lock requirements for\ng_chainman.\n\nI have verified that all usages of `g_chainman` that are concurrency-sensitive\nare usages of its members (e.g. `m_blockman`), which are already annotated. The\nreferences to `g_chainman.m_active_chainstate` will be protected by use of\n`std::atomic` in later commits.\n\nHere are all non-`BlockManager`-related usages:\n\n```\n% rg --pcre2 --trim 'g_chainman(?!.m_blockman)'\n\nsrc/net_processing.cpp\n1271:assert(std::addressof(g_chainman) == std::addressof(m_chainman));\n\nsrc/validation.h\n994:extern ChainstateManager g_chainman;\n\nsrc/init.cpp\n1423:node.chainman = &g_chainman;\n\ndoc/release-notes/release-notes-0.21.0.md\n577:- #19927 Reduce direct `g_chainman` usage (dongcarl)\n\nsrc/validation.cpp\n105:ChainstateManager g_chainman;\n109:assert(g_chainman.m_active_chainstate);\n110:return *g_chainman.m_active_chainstate;\n174:assert(std::addressof(g_chainman.BlockIndex()) == std::addressof(m_block_index));\n\nsrc/node/interfaces.cpp\n479:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n489:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n502:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n514:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n516:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n525:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n527:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n\nsrc/test/util/setup_common.cpp\n143:m_node.chainman = &::g_chainman;\n\nsrc/qt/test/apptests.cpp\n89:UnloadBlockIndex(/* mempool */ nullptr, g_chainman);\n90:g_chainman.Reset();\n```",
      "tree": {
        "sha": "0bc74eaf9e8bb6e3b0491ad4fcda1019e9a2ccd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0bc74eaf9e8bb6e3b0491ad4fcda1019e9a2ccd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/361dd79c27cb5760ad68fdacf346cc26b8f588c3",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBIACgkQepNdrbLE\nTwVqrw//ReUMUyE/ljiDlfqGT8Lat7S17auKREZk7gB4GMyvN5WfZycHepf1x6Jn\nDMGLyOfsxG3fUmgwlzCQg/ir+fFnysA2PYJUebcFhWqx5HuZFoTADSonaHHa3DHX\nMSfOIrd8TRrMuo1LnKzyq0oc9aaoX6UMtOGO9YcddVTP9v2OoVTlT6q9D7HZjv6p\nZzQCD+OoCpuXSUPVfl17xJQykF3JNcvIyu+rUBt45/hUkeV65R4AeFbh9IVxYFXH\nIbYUsrcFI1wJSymGbnyK+KXsDv+2MhKADSsTLe7G8w8+QsvTII1+Zqghk4F+12yo\nU/faM8CdFIWNjJ7lSMli67HtIYYL7SsVZ1H/cY37TjdfPmOiZ8VOZL+NrJ2OkLws\nIIBX9VUxbdk5P+MP48Ndq+vvy2pysPwnQuWj8HFXLOcNFT8yllErZ+Ce2QcYBY9x\nqYVXMZvB1DrHoik52RAqCoRWXvmeJlzrJGl03D+x9wyBlpVthYx/bNfgaMPVFMKy\nNta88gDKyQRv/7Pkl15dKKC6TJV2anQY86tb5dremVAzHPzryY3CNFgduyW37DTB\nRBko6PJBWLFToUBN8x7g4knIiXQHBRwqMJJSZpnj6EVExT05vow2ab1Mt6WmszKO\nHJ5/vIOAMGMaoSzUyjlwnoBkJrYoIQucnSwVRVP+x3FpRLNktIQ=\n=5CTk\n-----END PGP SIGNATURE-----",
        "payload": "tree 0bc74eaf9e8bb6e3b0491ad4fcda1019e9a2ccd4\nparent 9be7fe4849310884294669b019dd8300f69bc334\nauthor James O'Beirne <james.obeirne@pm.me> 1617723586 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737746 -0400\n\nvalidation: unannotate g_chainman from needing cs_main\n\nIn preparation for removing `cs_main` requirements for\nChainstateActive()/ActiveChainstate(), relax lock requirements for\ng_chainman.\n\nI have verified that all usages of `g_chainman` that are concurrency-sensitive\nare usages of its members (e.g. `m_blockman`), which are already annotated. The\nreferences to `g_chainman.m_active_chainstate` will be protected by use of\n`std::atomic` in later commits.\n\nHere are all non-`BlockManager`-related usages:\n\n```\n% rg --pcre2 --trim 'g_chainman(?!.m_blockman)'\n\nsrc/net_processing.cpp\n1271:assert(std::addressof(g_chainman) == std::addressof(m_chainman));\n\nsrc/validation.h\n994:extern ChainstateManager g_chainman;\n\nsrc/init.cpp\n1423:node.chainman = &g_chainman;\n\ndoc/release-notes/release-notes-0.21.0.md\n577:- #19927 Reduce direct `g_chainman` usage (dongcarl)\n\nsrc/validation.cpp\n105:ChainstateManager g_chainman;\n109:assert(g_chainman.m_active_chainstate);\n110:return *g_chainman.m_active_chainstate;\n174:assert(std::addressof(g_chainman.BlockIndex()) == std::addressof(m_block_index));\n\nsrc/node/interfaces.cpp\n479:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n489:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n502:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n514:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n516:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n525:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n527:assert(std::addressof(g_chainman) == std::addressof(*m_node.chainman));\n\nsrc/test/util/setup_common.cpp\n143:m_node.chainman = &::g_chainman;\n\nsrc/qt/test/apptests.cpp\n89:UnloadBlockIndex(/* mempool */ nullptr, g_chainman);\n90:g_chainman.Reset();\n```\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/361dd79c27cb5760ad68fdacf346cc26b8f588c3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/361dd79c27cb5760ad68fdacf346cc26b8f588c3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/361dd79c27cb5760ad68fdacf346cc26b8f588c3/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9be7fe4849310884294669b019dd8300f69bc334",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9be7fe4849310884294669b019dd8300f69bc334",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9be7fe4849310884294669b019dd8300f69bc334"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 1,
      "deletions": 1
    },
    "files": [
      {
        "sha": "d212fa2aead710697ff4ca352734b6ea831fe867",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/361dd79c27cb5760ad68fdacf346cc26b8f588c3/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/361dd79c27cb5760ad68fdacf346cc26b8f588c3/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=361dd79c27cb5760ad68fdacf346cc26b8f588c3",
        "patch": "@@ -991,7 +991,7 @@ class ChainstateManager\n };\n \n /** DEPRECATED! Please use node.chainman instead. May only be used in validation.cpp internally */\n-extern ChainstateManager g_chainman GUARDED_BY(::cs_main);\n+extern ChainstateManager g_chainman;\n \n /** Please prefer the identical ChainstateManager::ActiveChainstate */\n CChainState& ChainstateActive();"
      }
    ]
  },
  {
    "sha": "3d949629c5838f31e2a0386c92eebdcf2bca4b20",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZDk0OTYyOWM1ODM4ZjMxZTJhMDM4NmM5MmVlYmRjZjJiY2E0YjIw",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T16:03:08Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:49Z"
      },
      "message": "validation: make ChainstateManager.m_active_chainstate atomic\n\nThis will allow us to not have to worry about repurposing cs_main as\na mutex for setting this state, and will subsequently allow us to\nremove additional `cs_main` acquisitions and annotations in subsequent\ncommits.",
      "tree": {
        "sha": "f7854aecb734c871ee576e67bca9a582a4874d89",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/f7854aecb734c871ee576e67bca9a582a4874d89"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3d949629c5838f31e2a0386c92eebdcf2bca4b20",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBUACgkQepNdrbLE\nTwWzYhAAota0LP9SBtkWRdOP1D2uP4TEG74/A8si3pB68KGTRL3VYl3WTeFf72rA\n14AVo3g1PoqCqgBXCX0BcN5yRbdPxKv7Iq6Kl0PvSCWfli6Szc3TL0bLC2XIxFW2\nzLT32Wo4nD1+UAkOy2svbX5Rg1FNmh1r97jjSqYmyjrHhC4vHC5oiV22xdKyOTJ4\nctd5Z+e13e9+Odr9EB1PUHG9D+HNSTtvA3nOP8JTrIXWULrdSqwIpmwRSXCDuSzC\nngH9dYPNXUJU31R8tuVnbtwxcBGWOTcw/KRUB43UaigTOAbL2ujXrN+6skAfquaj\nlEd65QbfY5LkEfbzSg/SjTfe+eMxhGRw8y9RqiNKlDkYKQQPgoHRyU6wRsH7h36D\ncYuek9qOtpEHQH4MHiZNFnkXkfaLgVjlxpvc3vd+KouL8fzhT/+7zQKbrTqtExJd\n1uyLnbD9+R0XipDSUhR6+xxMg9qE/GmU1E8LDWP9TC2PxT9zQI/bmIRt47O5gcmM\niOtAm/MrqIPPtRL5E1H3Gy68/NxzKK+WmYSRHAStozI/GazTyEAriESSMyNFu0hV\nVzLGhmzL5+6FpoZiXEWIfUU9F27PWzQNfzXTZY1VGfXPdHnsYNbUNq/a0p/0qhuj\nRBzKNdIoRKIVqxwt4fUXW3g4vfGvh78hhGIFjSiM82q6UO8TKx8=\n=TfTW\n-----END PGP SIGNATURE-----",
        "payload": "tree f7854aecb734c871ee576e67bca9a582a4874d89\nparent 361dd79c27cb5760ad68fdacf346cc26b8f588c3\nauthor James O'Beirne <james.obeirne@pm.me> 1617724988 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737749 -0400\n\nvalidation: make ChainstateManager.m_active_chainstate atomic\n\nThis will allow us to not have to worry about repurposing cs_main as\na mutex for setting this state, and will subsequently allow us to\nremove additional `cs_main` acquisitions and annotations in subsequent\ncommits.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d949629c5838f31e2a0386c92eebdcf2bca4b20",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3d949629c5838f31e2a0386c92eebdcf2bca4b20",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d949629c5838f31e2a0386c92eebdcf2bca4b20/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "361dd79c27cb5760ad68fdacf346cc26b8f588c3",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/361dd79c27cb5760ad68fdacf346cc26b8f588c3",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/361dd79c27cb5760ad68fdacf346cc26b8f588c3"
      }
    ],
    "stats": {
      "total": 23,
      "additions": 12,
      "deletions": 11
    },
    "files": [
      {
        "sha": "21d8cc015179bfaae6121ec31e0a6982fd067bbf",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 10,
        "changes": 21,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d949629c5838f31e2a0386c92eebdcf2bca4b20/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d949629c5838f31e2a0386c92eebdcf2bca4b20/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=3d949629c5838f31e2a0386c92eebdcf2bca4b20",
        "patch": "@@ -5182,10 +5182,10 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n \n std::optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n     LOCK(::cs_main);\n-    if (m_active_chainstate != nullptr &&\n-            !m_active_chainstate->m_from_snapshot_blockhash.IsNull()) {\n+    CChainState* active_cs = m_active_chainstate.load();\n+    if (active_cs != nullptr && !active_cs->m_from_snapshot_blockhash.IsNull()) {\n         // If a snapshot chainstate exists, it will always be our active.\n-        return m_active_chainstate->m_from_snapshot_blockhash;\n+        return active_cs->m_from_snapshot_blockhash;\n     }\n     return std::nullopt;\n }\n@@ -5218,9 +5218,9 @@ CChainState& ChainstateManager::InitializeChainstate(CTxMemPool& mempool, const\n     to_modify.reset(new CChainState(mempool, m_blockman, snapshot_blockhash));\n \n     // Snapshot chainstates and initial IBD chaintates always become active.\n-    if (is_snapshot || (!is_snapshot && !m_active_chainstate)) {\n+    if (is_snapshot || (!is_snapshot && !m_active_chainstate.load())) {\n         LogPrintf(\"Switching active chainstate to %s\\n\", to_modify->ToString());\n-        m_active_chainstate = to_modify.get();\n+        m_active_chainstate.store(to_modify.get());\n     } else {\n         throw std::logic_error(\"unexpected chainstate activation\");\n     }\n@@ -5311,7 +5311,7 @@ bool ChainstateManager::ActivateSnapshot(\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip(::Params());\n         assert(chaintip_loaded);\n \n-        m_active_chainstate = m_snapshot_chainstate.get();\n+        m_active_chainstate.store(m_snapshot_chainstate.get());\n \n         LogPrintf(\"[snapshot] successfully activated snapshot %s\\n\", base_blockhash.ToString());\n         LogPrintf(\"[snapshot] (%.2f MB)\\n\",\n@@ -5520,14 +5520,15 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n CChainState& ChainstateManager::ActiveChainstate() const\n {\n     LOCK(::cs_main);\n-    assert(m_active_chainstate);\n-    return *m_active_chainstate;\n+    CChainState* active_cs = m_active_chainstate.load();\n+    assert(active_cs);\n+    return *active_cs;\n }\n \n bool ChainstateManager::IsSnapshotActive() const\n {\n     LOCK(::cs_main);\n-    return m_snapshot_chainstate && m_active_chainstate == m_snapshot_chainstate.get();\n+    return m_snapshot_chainstate && m_active_chainstate.load() == m_snapshot_chainstate.get();\n }\n \n CChainState& ChainstateManager::ValidatedChainstate() const\n@@ -5561,7 +5562,7 @@ void ChainstateManager::Reset()\n     LOCK(::cs_main);\n     m_ibd_chainstate.reset();\n     m_snapshot_chainstate.reset();\n-    m_active_chainstate = nullptr;\n+    m_active_chainstate.store(nullptr);\n     m_snapshot_validated = false;\n }\n "
      },
      {
        "sha": "779d8de921c665b6570b1aa826a002a55c986a96",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3d949629c5838f31e2a0386c92eebdcf2bca4b20/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3d949629c5838f31e2a0386c92eebdcf2bca4b20/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=3d949629c5838f31e2a0386c92eebdcf2bca4b20",
        "patch": "@@ -852,7 +852,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    CChainState* m_active_chainstate GUARDED_BY(::cs_main) {nullptr};\n+    std::atomic<CChainState*> m_active_chainstate GUARDED_BY(::cs_main) {nullptr};\n \n     //! If true, the assumed-valid chainstate has been fully validated\n     //! by the background validation chainstate."
      }
    ]
  },
  {
    "sha": "09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowOWM5MjRkM2JlYjU2YTZiNjRkODg1NWIxODE4YjZlNzNjNDBlYzBk",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T16:04:43Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:51Z"
      },
      "message": "validation: remove cs_main requirement from m_active_chainstate\n\nAtomicity of this data no longer requires explicit locking.",
      "tree": {
        "sha": "7ea53e3fd58e813da07c89a7a820dad6203a8547",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7ea53e3fd58e813da07c89a7a820dad6203a8547"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBcACgkQepNdrbLE\nTwXiaRAAjk8LXElpG11iIrfEBYOrXPVshMQV7S8GfV2uEzq1zIp7VVBTOmaMhQ0E\n4HjoSfJDTtUjEGS4EE9sBnWtitqUqoVo3vApbE2y3hgjbYP0CwT1tycT5LpLwc8A\n4qsWOT1MCAnoxyLA5TyKzDdGnhIZISCJlrb5dB0T832cOkuXQSQnbymD0Hlsh6F4\nNiNvCHk/hU8fRxgrPQFpIKZODw8PytDDb06Qvf47wmesQqBKJNMTat4HgKwJWFUr\nGpSQIgzrNbg5Vz1tR2wu+0VA65rMQAg3Zjp7xg9esdLDwmMLuoxkBeP6W8yJ2u5Y\nQIURXfnNhYU+Plw6/cO7nLyeyqUUc6U73dGHv0YyKiIQSZs0smjDDemlT/trvxBL\nKPBcfEOL+q2uueRty2na0gxTR9qAY7ah76bNG5oAbBJkTgSGtagAGjKuNpaf/+kf\nQbtYL5COQu/1vaZeDEqkaNlT9e4yQ8fJM/ghX7HyvZQ7SwxIjpNVcd2rg2aY7vKz\nxyEcWkOJYuD4k6hNlZDSpGFI9DVDpsj45KsGYpEaMJ7VWWdN8E3h5A2NNdpQSn/S\nKUiOaEIibdN3N2xO4RnQND9UcIAI/C5uI4vfxiQh8kbnrduj0a/rPPQBGuLHmsPY\nbiV1aAV3bOgbN18//xq/LysmVAgKMwWIXdGuhBeaUGxNfNTed6U=\n=pD6U\n-----END PGP SIGNATURE-----",
        "payload": "tree 7ea53e3fd58e813da07c89a7a820dad6203a8547\nparent 3d949629c5838f31e2a0386c92eebdcf2bca4b20\nauthor James O'Beirne <james.obeirne@pm.me> 1617725083 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737751 -0400\n\nvalidation: remove cs_main requirement from m_active_chainstate\n\nAtomicity of this data no longer requires explicit locking.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c924d3beb56a6b64d8855b1818b6e73c40ec0d/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3d949629c5838f31e2a0386c92eebdcf2bca4b20",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3d949629c5838f31e2a0386c92eebdcf2bca4b20",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3d949629c5838f31e2a0386c92eebdcf2bca4b20"
      }
    ],
    "stats": {
      "total": 5,
      "additions": 1,
      "deletions": 4
    },
    "files": [
      {
        "sha": "adbc914bae0c54a5d28bcb437fed9ec6c60c2f9f",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 3,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c924d3beb56a6b64d8855b1818b6e73c40ec0d/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c924d3beb56a6b64d8855b1818b6e73c40ec0d/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
        "patch": "@@ -106,7 +106,6 @@ ChainstateManager g_chainman;\n \n CChainState& ChainstateActive()\n {\n-    LOCK(::cs_main);\n     assert(g_chainman.m_active_chainstate);\n     return *g_chainman.m_active_chainstate;\n }\n@@ -5181,7 +5180,6 @@ double GuessVerificationProgress(const ChainTxData& data, const CBlockIndex *pin\n }\n \n std::optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n-    LOCK(::cs_main);\n     CChainState* active_cs = m_active_chainstate.load();\n     if (active_cs != nullptr && !active_cs->m_from_snapshot_blockhash.IsNull()) {\n         // If a snapshot chainstate exists, it will always be our active.\n@@ -5519,7 +5517,6 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n \n CChainState& ChainstateManager::ActiveChainstate() const\n {\n-    LOCK(::cs_main);\n     CChainState* active_cs = m_active_chainstate.load();\n     assert(active_cs);\n     return *active_cs;"
      },
      {
        "sha": "166fcab221cf87debef87520232b92de9447c1d1",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/09c924d3beb56a6b64d8855b1818b6e73c40ec0d/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/09c924d3beb56a6b64d8855b1818b6e73c40ec0d/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
        "patch": "@@ -852,7 +852,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    std::atomic<CChainState*> m_active_chainstate GUARDED_BY(::cs_main) {nullptr};\n+    std::atomic<CChainState*> m_active_chainstate {nullptr};\n \n     //! If true, the assumed-valid chainstate has been fully validated\n     //! by the background validation chainstate."
      }
    ]
  },
  {
    "sha": "5b8587f0bf5076d6651ec67d4a941034b5287429",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1Yjg1ODdmMGJmNTA3NmQ2NjUxZWM2N2Q0YTk0MTAzNGI1Mjg3NDI5",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T18:33:29Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:52Z"
      },
      "message": "validation: introduce ChainstateManager.m_cs_chainstates\n\nTo avoid (confusingly) repurposing cs_main to manage internal\nChainstateManager chainstate references, introduce a specific lock for this\npurpose.\n\nIt's a RecursiveMutex (and not a Mutex) to facilitate acquiring the lock\nin MaybeRebalanceCaches, since we'd otherwise have to give the lock public\nclass visibility (to allow callers to lock it).",
      "tree": {
        "sha": "b74f7d4fa35f349b0e1fabeacb427dc4717c9869",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b74f7d4fa35f349b0e1fabeacb427dc4717c9869"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/5b8587f0bf5076d6651ec67d4a941034b5287429",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBgACgkQepNdrbLE\nTwXuvg/+P23wto0xJhzQvmTAXz1Qs6BzL8kDA1kbG/L3+K6oGyoEdY/4xckhuupA\nb/4wfxV0IjNQbvQiVHnHF8KG7TLFY9McfeZvS2kpSHUThFkM2K1owM0eh04+peYf\nMpSXg+q066J8wltQ9VVV4rzv7y4AlmIa9GZb5lOIT81WvxfJb6OHxJJZ6oP+jGHZ\nVa9oG47M4zU/77IEriMY65cmFdEE8+PUclf59hlkOo0dJDlmU/3r9KXhaslVwDSe\nU/PdKJpaWNXkzKwdEbBSDVSvYSHkeL8jS+IKlx1u5Wb/qvFa1grNP0eMqXKB040A\nxpYaQJW+IWIpoVKmBgN1s5+oE1LpfareVzkuzCmDFpMvnLXEDkftOkvrmzJCmMd6\nbDvHGf2FIT6Cv3GFizSCDlzWnPmKusNhncvjruPuIkYqAE7efNrIyLTUj8Di9RUc\nhW8TjoiucbcXAPnGWW712/GKZUUdjdQhqtKa5z5i4XOCehxCvE1vgYnJb43JS21M\nQgzceCMReqGubBFSvj14TNNJd/qH50Omg54dKM3Ehz5Gf/HDKsOK1Vsu6D6+LIzw\npnC79cSn6lgmrQlqKnciOxtbNkol+H8gofJGSCXcqLe/pIX9S6NCNiKktPs4olTs\nXT5/wRK4yKSJxgzWCnJptCjcJTfZF9K49wO3VCH5Mr6Yo16S+RI=\n=tTta\n-----END PGP SIGNATURE-----",
        "payload": "tree b74f7d4fa35f349b0e1fabeacb427dc4717c9869\nparent 09c924d3beb56a6b64d8855b1818b6e73c40ec0d\nauthor James O'Beirne <james.obeirne@pm.me> 1617734009 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737752 -0400\n\nvalidation: introduce ChainstateManager.m_cs_chainstates\n\nTo avoid (confusingly) repurposing cs_main to manage internal\nChainstateManager chainstate references, introduce a specific lock for this\npurpose.\n\nIt's a RecursiveMutex (and not a Mutex) to facilitate acquiring the lock\nin MaybeRebalanceCaches, since we'd otherwise have to give the lock public\nclass visibility (to allow callers to lock it).\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8587f0bf5076d6651ec67d4a941034b5287429",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8587f0bf5076d6651ec67d4a941034b5287429",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8587f0bf5076d6651ec67d4a941034b5287429/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/09c924d3beb56a6b64d8855b1818b6e73c40ec0d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/09c924d3beb56a6b64d8855b1818b6e73c40ec0d"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 17,
      "deletions": 8
    },
    "files": [
      {
        "sha": "deb876dd264083bd7cc9797bddfae962abb4686c",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 6,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b8587f0bf5076d6651ec67d4a941034b5287429/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b8587f0bf5076d6651ec67d4a941034b5287429/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=5b8587f0bf5076d6651ec67d4a941034b5287429",
        "patch": "@@ -5190,7 +5190,7 @@ std::optional<uint256> ChainstateManager::SnapshotBlockhash() const {\n \n std::vector<CChainState*> ChainstateManager::GetAll()\n {\n-    LOCK(::cs_main);\n+    LOCK(m_cs_chainstates);\n     std::vector<CChainState*> out;\n \n     if (!IsSnapshotValidated() && m_ibd_chainstate) {\n@@ -5206,6 +5206,7 @@ std::vector<CChainState*> ChainstateManager::GetAll()\n \n CChainState& ChainstateManager::InitializeChainstate(CTxMemPool& mempool, const uint256& snapshot_blockhash)\n {\n+    LOCK(m_cs_chainstates);\n     bool is_snapshot = !snapshot_blockhash.IsNull();\n     std::unique_ptr<CChainState>& to_modify =\n         is_snapshot ? m_snapshot_chainstate : m_ibd_chainstate;\n@@ -5303,9 +5304,10 @@ bool ChainstateManager::ActivateSnapshot(\n     }\n \n     {\n-        LOCK(::cs_main);\n+        LOCK2(::cs_main, m_cs_chainstates);\n         assert(!m_snapshot_chainstate);\n         m_snapshot_chainstate.swap(snapshot_chainstate);\n+\n         const bool chaintip_loaded = m_snapshot_chainstate->LoadChainTip(::Params());\n         assert(chaintip_loaded);\n \n@@ -5524,13 +5526,13 @@ CChainState& ChainstateManager::ActiveChainstate() const\n \n bool ChainstateManager::IsSnapshotActive() const\n {\n-    LOCK(::cs_main);\n+    LOCK(m_cs_chainstates);\n     return m_snapshot_chainstate && m_active_chainstate.load() == m_snapshot_chainstate.get();\n }\n \n CChainState& ChainstateManager::ValidatedChainstate() const\n {\n-    LOCK(::cs_main);\n+    LOCK(m_cs_chainstates);\n     if (m_snapshot_chainstate && IsSnapshotValidated()) {\n         return *m_snapshot_chainstate.get();\n     }\n@@ -5540,7 +5542,7 @@ CChainState& ChainstateManager::ValidatedChainstate() const\n \n bool ChainstateManager::IsBackgroundIBD(CChainState* chainstate) const\n {\n-    LOCK(::cs_main);\n+    LOCK(m_cs_chainstates);\n     return (m_snapshot_chainstate && chainstate == m_ibd_chainstate.get());\n }\n \n@@ -5556,7 +5558,7 @@ void ChainstateManager::Unload()\n \n void ChainstateManager::Reset()\n {\n-    LOCK(::cs_main);\n+    LOCK2(::cs_main, m_cs_chainstates);\n     m_ibd_chainstate.reset();\n     m_snapshot_chainstate.reset();\n     m_active_chainstate.store(nullptr);\n@@ -5565,6 +5567,7 @@ void ChainstateManager::Reset()\n \n void ChainstateManager::MaybeRebalanceCaches()\n {\n+    LOCK(m_cs_chainstates);\n     if (m_ibd_chainstate && !m_snapshot_chainstate) {\n         LogPrintf(\"[snapshot] allocating all cache to the IBD chainstate\\n\");\n         // Allocate everything to the IBD chainstate."
      },
      {
        "sha": "27cde76db15920c541c34d49729fb7d9391d16ba",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/5b8587f0bf5076d6651ec67d4a941034b5287429/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/5b8587f0bf5076d6651ec67d4a941034b5287429/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=5b8587f0bf5076d6651ec67d4a941034b5287429",
        "patch": "@@ -815,6 +815,12 @@ class CChainState\n class ChainstateManager\n {\n private:\n+    //! Serializes access to the references of all chainstates being\n+    //! managed by this object (m_ibd_chainstate, m_snapshot_chainstate).\n+    //! Note that this does not manage m_active_chainstate, which is has\n+    //! no need for a mutex due to its use of std::atomic.\n+    mutable RecursiveMutex m_cs_chainstates;\n+\n     //! The chainstate used under normal operation (i.e. \"regular\" IBD) or, if\n     //! a snapshot is in use, for background validation.\n     //!\n@@ -830,7 +836,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(::cs_main);\n+    std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(m_cs_chainstates);\n \n     //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n     //! non-null, it is always our active chainstate.\n@@ -841,7 +847,7 @@ class ChainstateManager\n     //! This is especially important when, e.g., calling ActivateBestChain()\n     //! on all chainstates because we are not able to hold ::cs_main going into\n     //! that call.\n-    std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(::cs_main);\n+    std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(m_cs_chainstates);\n \n     //! Points to either the ibd or snapshot chainstate; indicates our\n     //! most-work chain."
      }
    ]
  },
  {
    "sha": "98480e293b60cfba20ae69c5dada487439aa3952",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ODQ4MGUyOTNiNjBjZmJhMjBhZTY5YzVkYWRhNDg3NDM5YWEzOTUy",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T18:36:31Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:54Z"
      },
      "message": "doc: fix outdated ChainstateManager doc",
      "tree": {
        "sha": "fa4ce0f5dd812e985eb74ca55cb1fd6f2aaa1579",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/fa4ce0f5dd812e985eb74ca55cb1fd6f2aaa1579"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/98480e293b60cfba20ae69c5dada487439aa3952",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBoACgkQepNdrbLE\nTwUQnA/+NrCsrUWx9mEZaOLXVwT6HRDVT9/efqH9X3+O4AnKN5bM6+m2BwZ0zyze\n83x/O2SYEH5ngs4yQ0+LJW/tzKuYvgjljSs1ucSoACBC6x54B5uCyDB4+Ul5bmF1\nD8MupXGHs+hJj6OZuHHcItRIOoVU0C0ssO1BKu0+6d/I5ymGqP8gyqgD9JPegGZG\n3K+edKXexFLe+vtIRYx0fdYULMLJIzjAvQGPprpOQe2MYBx5TmaBBvxSyDJZRb3o\nlKpoTY9UqdAudq/vc3sozY6vcCjg0Sml1yDXURJ8qBhx24oNLf30GddfDSEtZD/p\nzlwCXKCr5eXyRytwiAQCwO9EZo7gIEWG/bhvBZEmfZ2tozcHKoJ5AswO0oYm9XsZ\neo33tTOEQWG6Aw2l9iWR7XIndwJgtwAbfztqoFoqCN3CnN02UxOECuJHyRxj39Xh\nPmSorW/b+u86rwLD0aLB6dDoxH1nUORP18POzvpqLWlsuNFftBpw1zOQU1mBaS+G\nQl/n3R9xM1R2InKEBYifrEi1o68G4SbAhcSXOGgElP16G26TsM9FtTZVGrht80Yc\nZEhYz+Q917HcRhUgpmFYgEO4AR/qKqaLsvxGPCxuLHhsjBC8JQNjshMwk+Cu4lYd\n75SRd3sb/vCjbkriU2CJt2umLUOQlNp7eJtxPZ3Ka2rnQD6IIgU=\n=eAlw\n-----END PGP SIGNATURE-----",
        "payload": "tree fa4ce0f5dd812e985eb74ca55cb1fd6f2aaa1579\nparent 5b8587f0bf5076d6651ec67d4a941034b5287429\nauthor James O'Beirne <james.obeirne@pm.me> 1617734191 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737754 -0400\n\ndoc: fix outdated ChainstateManager doc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98480e293b60cfba20ae69c5dada487439aa3952",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/98480e293b60cfba20ae69c5dada487439aa3952",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98480e293b60cfba20ae69c5dada487439aa3952/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5b8587f0bf5076d6651ec67d4a941034b5287429",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5b8587f0bf5076d6651ec67d4a941034b5287429",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5b8587f0bf5076d6651ec67d4a941034b5287429"
      }
    ],
    "stats": {
      "total": 15,
      "additions": 0,
      "deletions": 15
    },
    "files": [
      {
        "sha": "c1362a37a475dec39d596daada62f8ac0d78705e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 0,
        "deletions": 15,
        "changes": 15,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/98480e293b60cfba20ae69c5dada487439aa3952/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/98480e293b60cfba20ae69c5dada487439aa3952/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=98480e293b60cfba20ae69c5dada487439aa3952",
        "patch": "@@ -832,32 +832,17 @@ class ChainstateManager\n     //!\n     //! Once this pointer is set to a corresponding chainstate, it will not\n     //! be reset until init.cpp:Shutdown().\n-    //!\n-    //! This is especially important when, e.g., calling ActivateBestChain()\n-    //! on all chainstates because we are not able to hold ::cs_main going into\n-    //! that call.\n     std::unique_ptr<CChainState> m_ibd_chainstate GUARDED_BY(m_cs_chainstates);\n \n     //! A chainstate initialized on the basis of a UTXO snapshot. If this is\n     //! non-null, it is always our active chainstate.\n     //!\n     //! Once this pointer is set to a corresponding chainstate, it will not\n     //! be reset until init.cpp:Shutdown().\n-    //!\n-    //! This is especially important when, e.g., calling ActivateBestChain()\n-    //! on all chainstates because we are not able to hold ::cs_main going into\n-    //! that call.\n     std::unique_ptr<CChainState> m_snapshot_chainstate GUARDED_BY(m_cs_chainstates);\n \n     //! Points to either the ibd or snapshot chainstate; indicates our\n     //! most-work chain.\n-    //!\n-    //! Once this pointer is set to a corresponding chainstate, it will not\n-    //! be reset until init.cpp:Shutdown().\n-    //!\n-    //! This is especially important when, e.g., calling ActivateBestChain()\n-    //! on all chainstates because we are not able to hold ::cs_main going into\n-    //! that call.\n     std::atomic<CChainState*> m_active_chainstate {nullptr};\n \n     //! If true, the assumed-valid chainstate has been fully validated"
      }
    ]
  },
  {
    "sha": "7ef10328fc835a38c3bac0b43a4c442fd01070e1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo3ZWYxMDMyOGZjODM1YTM4YzNiYWMwYjQzYTRjNDQyZmQwMTA3MGUx",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T18:38:49Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:55Z"
      },
      "message": "doc: note about InitializeChainstate() cs_main use",
      "tree": {
        "sha": "36fc41a09cde71822d2463d218b1767f5896a57d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/36fc41a09cde71822d2463d218b1767f5896a57d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/7ef10328fc835a38c3bac0b43a4c442fd01070e1",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuBsACgkQepNdrbLE\nTwV7NA//RxwiLzzS3OUdq6Tx5jUC1imrcA9fSUAB6Ea4NazO2FlHScaZgcXRxqxP\n0W6Ay5ajVbUYmzRlYH9uW4y+WcLG35Ku4I6dlzCPW0n/k2/7WksPdmUILqkIkv4b\n7L+nHhLhP3BLtagcLkybdN1Kj0KhqyJ4PS3TYIbZvVx8n1kViuaQAEwGtpU53k2q\nufNfasMOYFf1ojct6GoPhC0m2+TCQ/jTTDABWfIhHUmVf3jS3ylFIckuL3RQFBAZ\nqcSHpfYbJZpyvoEdlSt5bZ3JCg/rCiKVZL2d/KmfNRZhmOBPiSJudApzXjIVhm7l\nL2mDCZTlh2k011I9CF/2dFGlmtx80Vuhwx0fTFNfpyq0gaE4SKXTlxgIrIgF9DNM\njHYlhIqNySjx4G6ZmjMU883aNGFfBXjD1aZL83B6CSJNnMCBybqukoTKxnh9DNlv\nbjzRHAcV0Cayu8Dsyb3Qrgtru+9t4DYDWlcGLqDv11hiSrlI+lIZKVOpw3ct45rm\nOjcVHPtssHIzKowfrug31n/24bEl7DLi58aGqCKmnPsoQkEI5O264fAx66Rwu5MP\nhc4wY+zWm2qQaJUpRyWxkJ9tpcFJ77VayuROV/f0CkQZvSog+gMog2V+ARsYgU7p\nh3rk28Bb1Bn1m5rS57aCtKehe3G9/mZZjcmqDxjAPY8HnSH+6s0=\n=oyBo\n-----END PGP SIGNATURE-----",
        "payload": "tree 36fc41a09cde71822d2463d218b1767f5896a57d\nparent 98480e293b60cfba20ae69c5dada487439aa3952\nauthor James O'Beirne <james.obeirne@pm.me> 1617734329 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737755 -0400\n\ndoc: note about InitializeChainstate() cs_main use\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ef10328fc835a38c3bac0b43a4c442fd01070e1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/7ef10328fc835a38c3bac0b43a4c442fd01070e1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ef10328fc835a38c3bac0b43a4c442fd01070e1/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "98480e293b60cfba20ae69c5dada487439aa3952",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/98480e293b60cfba20ae69c5dada487439aa3952",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/98480e293b60cfba20ae69c5dada487439aa3952"
      }
    ],
    "stats": {
      "total": 2,
      "additions": 2,
      "deletions": 0
    },
    "files": [
      {
        "sha": "8aa7f47a262a57fb5baa1b9318a26e2808c4d79e",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 0,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/7ef10328fc835a38c3bac0b43a4c442fd01070e1/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/7ef10328fc835a38c3bac0b43a4c442fd01070e1/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=7ef10328fc835a38c3bac0b43a4c442fd01070e1",
        "patch": "@@ -875,6 +875,8 @@ class ChainstateManager\n     //! Instantiate a new chainstate and assign it based upon whether it is\n     //! from a snapshot.\n     //!\n+    //! cs_main only required for access to m_blockman.\n+    //!\n     //! @param[in] mempool              The mempool to pass to the chainstate\n     //                                  constructor\n     //! @param[in] snapshot_blockhash   If given, signify that this chainstate"
      }
    ]
  },
  {
    "sha": "8257e9ab7592a7fe459089f021053c7740004817",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4MjU3ZTlhYjc1OTJhN2ZlNDU5MDg5ZjAyMTA1M2M3NzQwMDA0ODE3",
    "commit": {
      "author": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T18:52:37Z"
      },
      "committer": {
        "name": "James O'Beirne",
        "email": "james.obeirne@pm.me",
        "date": "2021-04-06T19:35:57Z"
      },
      "message": "validation: annotate m_chain with cs_main\n\nWhich in turn requires `PruneIndexBlockCandidates()` to be annotated;\nluckily no locking changes are needed there.",
      "tree": {
        "sha": "3f3645bf55b2d900ec7bd8dcfd6893cd6f80eb67",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3f3645bf55b2d900ec7bd8dcfd6893cd6f80eb67"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8257e9ab7592a7fe459089f021053c7740004817",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEGNRVI1NPYuZCSIrGepNdrbLETwUFAmBsuB0ACgkQepNdrbLE\nTwXz2BAAmcu42+g/LWREkrtzPIAEDoC+fwIpE8nlvvQMaUteK8FS86tSTYVEONAC\nAG0jOuemXsmu9Y+WSEMyiDCBr+Fs1/dSnmsEpRHubjVZxdZqtCGgHvI7LllMmRq2\nOSAnP12XPDXqxJ+eBU9mSBwvSXZbufQvNGhobhPrypEFwMn9QthGZHMv004eUAgU\n3zXhUwnFaGsSBjgfqFYnh81nkhBy/p/0LgF0WNMA9l84CChkxiZe4tr/efVU/Gas\n2qqZcA7viPvTs3thgBfzIFk1xbyNON0cXyrlfk1zogTwO9u4cVph71bBMt+y7cGN\nTzZzGAHuxqmNzKEh+8/AtiJpWfSYaHKHMj13ep43foc1CljKdPM1Kpe0JWvXq0m0\n13E5FChcRD1UXst7rdzNHIif0QtaMt0anrnYXynWdMZ0R45m9pzzrCSrcRJE0lbB\nbwbx8TKqC3lQKnBf1lLjM1ntH+qR1WpryVjDAHIVOfTy3FEEiFuHPO9XGEsBZ1X7\nrC4WrBLhEMrfUiXtTr/hMog9oEbpGt7DFFhmyoMRQyCIPHeaU/mLp0HtWTsae9f0\njbK3KkfTA4mxqRMXGCCFVUOw716up/rljgUEWeQUAIjiTFAg6hloR/AuvEr9XGPD\nSpIxuyLsj6HBTShDyQ+VUjSmU1/+GorIFF5fe7dQyHGPOLQ/IHA=\n=F4xZ\n-----END PGP SIGNATURE-----",
        "payload": "tree 3f3645bf55b2d900ec7bd8dcfd6893cd6f80eb67\nparent 7ef10328fc835a38c3bac0b43a4c442fd01070e1\nauthor James O'Beirne <james.obeirne@pm.me> 1617735157 -0400\ncommitter James O'Beirne <james.obeirne@pm.me> 1617737757 -0400\n\nvalidation: annotate m_chain with cs_main\n\nWhich in turn requires `PruneIndexBlockCandidates()` to be annotated;\nluckily no locking changes are needed there.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8257e9ab7592a7fe459089f021053c7740004817",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8257e9ab7592a7fe459089f021053c7740004817",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8257e9ab7592a7fe459089f021053c7740004817/comments",
    "author": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jamesob",
      "id": 73197,
      "node_id": "MDQ6VXNlcjczMTk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/73197?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jamesob",
      "html_url": "https://github.com/jamesob",
      "followers_url": "https://api.github.com/users/jamesob/followers",
      "following_url": "https://api.github.com/users/jamesob/following{/other_user}",
      "gists_url": "https://api.github.com/users/jamesob/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jamesob/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jamesob/subscriptions",
      "organizations_url": "https://api.github.com/users/jamesob/orgs",
      "repos_url": "https://api.github.com/users/jamesob/repos",
      "events_url": "https://api.github.com/users/jamesob/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jamesob/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "7ef10328fc835a38c3bac0b43a4c442fd01070e1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/7ef10328fc835a38c3bac0b43a4c442fd01070e1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/7ef10328fc835a38c3bac0b43a4c442fd01070e1"
      }
    ],
    "stats": {
      "total": 60,
      "additions": 34,
      "deletions": 26
    },
    "files": [
      {
        "sha": "cfa0b5d75e97e647ae6cd8a507b36ee6fe3a0f14",
        "filename": "src/test/validation_chainstatemanager_tests.cpp",
        "status": "modified",
        "additions": 30,
        "deletions": 22,
        "changes": 52,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8257e9ab7592a7fe459089f021053c7740004817/src/test/validation_chainstatemanager_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8257e9ab7592a7fe459089f021053c7740004817/src/test/validation_chainstatemanager_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/validation_chainstatemanager_tests.cpp?ref=8257e9ab7592a7fe459089f021053c7740004817",
        "patch": "@@ -49,14 +49,19 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     auto all = manager.GetAll();\n     BOOST_CHECK_EQUAL_COLLECTIONS(all.begin(), all.end(), chainstates.begin(), chainstates.end());\n \n-    auto& active_chain = manager.ActiveChain();\n-    BOOST_CHECK_EQUAL(&active_chain, &c1.m_chain);\n+    CBlockIndex* exp_tip;\n+    {\n+        LOCK(::cs_main);\n \n-    BOOST_CHECK_EQUAL(manager.ActiveHeight(), -1);\n+        auto& active_chain = manager.ActiveChain();\n+        BOOST_CHECK_EQUAL(&active_chain, &c1.m_chain);\n \n-    auto active_tip = manager.ActiveTip();\n-    auto exp_tip = c1.m_chain.Tip();\n-    BOOST_CHECK_EQUAL(active_tip, exp_tip);\n+        BOOST_CHECK_EQUAL(manager.ActiveHeight(), -1);\n+\n+        auto active_tip = manager.ActiveTip();\n+        exp_tip = c1.m_chain.Tip();\n+        BOOST_CHECK_EQUAL(active_tip, exp_tip);\n+    }\n \n     auto& validated_cs = manager.ValidatedChainstate();\n     BOOST_CHECK_EQUAL(&validated_cs, &c1);\n@@ -87,28 +92,31 @@ BOOST_AUTO_TEST_CASE(chainstatemanager)\n     auto all2 = manager.GetAll();\n     BOOST_CHECK_EQUAL_COLLECTIONS(all2.begin(), all2.end(), chainstates.begin(), chainstates.end());\n \n-    auto& active_chain2 = manager.ActiveChain();\n-    BOOST_CHECK_EQUAL(&active_chain2, &c2.m_chain);\n+    {\n+        LOCK(::cs_main);\n+        auto& active_chain2 = manager.ActiveChain();\n+        BOOST_CHECK_EQUAL(&active_chain2, &c2.m_chain);\n \n-    BOOST_CHECK_EQUAL(manager.ActiveHeight(), 0);\n+        BOOST_CHECK_EQUAL(manager.ActiveHeight(), 0);\n \n-    auto active_tip2 = manager.ActiveTip();\n-    auto exp_tip2 = c2.m_chain.Tip();\n-    BOOST_CHECK_EQUAL(active_tip2, exp_tip2);\n+        auto active_tip2 = manager.ActiveTip();\n+        auto exp_tip2 = c2.m_chain.Tip();\n+        BOOST_CHECK_EQUAL(active_tip2, exp_tip2);\n \n-    // Ensure that these pointers actually correspond to different\n-    // CCoinsViewCache instances.\n-    BOOST_CHECK(exp_tip != exp_tip2);\n+        // Ensure that these pointers actually correspond to different\n+        // CCoinsViewCache instances.\n+        BOOST_CHECK(exp_tip != exp_tip2);\n \n-    auto& validated_cs2 = manager.ValidatedChainstate();\n-    BOOST_CHECK_EQUAL(&validated_cs2, &c1);\n+        auto& validated_cs2 = manager.ValidatedChainstate();\n+        BOOST_CHECK_EQUAL(&validated_cs2, &c1);\n \n-    auto& validated_chain = manager.ValidatedChain();\n-    BOOST_CHECK_EQUAL(&validated_chain, &c1.m_chain);\n+        auto& validated_chain = manager.ValidatedChain();\n+        BOOST_CHECK_EQUAL(&validated_chain, &c1.m_chain);\n \n-    auto validated_tip = manager.ValidatedTip();\n-    exp_tip = c1.m_chain.Tip();\n-    BOOST_CHECK_EQUAL(validated_tip, exp_tip);\n+        auto validated_tip = manager.ValidatedTip();\n+        exp_tip = c1.m_chain.Tip();\n+        BOOST_CHECK_EQUAL(validated_tip, exp_tip);\n+    }\n \n     // Let scheduler events finish running to avoid accessing memory that is going to be unloaded\n     SyncWithValidationInterfaceQueue();"
      },
      {
        "sha": "73b19494cc6f0412ebb6e8c55510a2c9d64932c4",
        "filename": "src/validation.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8257e9ab7592a7fe459089f021053c7740004817/src/validation.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8257e9ab7592a7fe459089f021053c7740004817/src/validation.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.cpp?ref=8257e9ab7592a7fe459089f021053c7740004817",
        "patch": "@@ -5479,11 +5479,11 @@ bool ChainstateManager::PopulateAndValidateSnapshot(\n         return false;\n     }\n \n-    snapshot_chainstate.m_chain.SetTip(snapshot_start_block);\n-\n     // The remainder of this function requires modifying data protected by cs_main.\n     LOCK(::cs_main);\n \n+    snapshot_chainstate.m_chain.SetTip(snapshot_start_block);\n+\n     // Fake various pieces of CBlockIndex state:\n     //\n     //   - nChainTx: so that we accurately report IBD-to-tip progress"
      },
      {
        "sha": "a8b90ec883bb3a96ee9610bcf5e399cf6165f89b",
        "filename": "src/validation.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8257e9ab7592a7fe459089f021053c7740004817/src/validation.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8257e9ab7592a7fe459089f021053c7740004817/src/validation.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/validation.h?ref=8257e9ab7592a7fe459089f021053c7740004817",
        "patch": "@@ -601,7 +601,7 @@ class CChainState\n \n     //! The current chain of blockheaders we consult and build on.\n     //! @see CChain, CBlockIndex.\n-    CChain m_chain;\n+    CChain m_chain GUARDED_BY(::cs_main);\n \n     /**\n      * The blockhash which is the base of the snapshot this chainstate was created from.\n@@ -725,7 +725,7 @@ class CChainState\n     /** Ensures we have a genesis block in the block tree, possibly writing one to disk. */\n     bool LoadGenesisBlock(const CChainParams& chainparams);\n \n-    void PruneBlockIndexCandidates();\n+    void PruneBlockIndexCandidates() EXCLUSIVE_LOCKS_REQUIRED(::cs_main);\n \n     void UnloadBlockIndex();\n "
      }
    ]
  }
]