[
  {
    "sha": "3b970d804b152382de6008439b08461ec3f2ca1b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozYjk3MGQ4MDRiMTUyMzgyZGU2MDA4NDM5YjA4NDYxZWMzZjJjYTFi",
    "commit": {
      "author": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-09-12T22:13:43Z"
      },
      "committer": {
        "name": "Fabian Jahr",
        "email": "fjahr@protonmail.com",
        "date": "2020-09-21T22:58:00Z"
      },
      "message": "cli: Parse hash value",
      "tree": {
        "sha": "4b6c5d4f4e266fe15ec8a7fc411e16901056be24",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/4b6c5d4f4e266fe15ec8a7fc411e16901056be24"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3b970d804b152382de6008439b08461ec3f2ca1b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQJJBAABCgAzFiEEtFq20ghhrCHSdrgm8T0enYkHmM0FAl9pL/oVHGZqYWhyQHBy\nb3Rvbm1haWwuY29tAAoJEPE9Hp2JB5jN2gIP/jQQybEY0nW9QE1G1MREsl3Xl9tf\nl2OLcMfuUQjIJqE2jgcq1kU1B4v/OidJ8ElSLFmCH3fGp48pXC4pcrxNCuaCGcEP\nsla4+V2d3eSm4N2IiifFrpot7uWHwyliFRrEnXJakJD2JhPoYekZ9ZD/nJNbH/6s\nAEqEFm7L/7TvqRMWx612qfTv3ZoAoXfQzOtoYtVPmxDcnhhgcwQtDornfu80oC9C\nXK9BqchkJqgGS9vxztYAhy0NdNS6rS5z0GDkwb9YhL4D8yBD7U3VWpR0UBcNabFL\nO84fr9C3XOxnJmcQMNRseea7AjKNO9FJi1J3uWCCFl1Z4QIdzrznH7BGloy+LVEX\nRKXY2XAfBVeffsRs4dgXxGFUL/n7jjq2kqNPpKVlAwJ7PEojVhBD8yk6dZwNi9Ra\nJ67u6C+8bWX+n9LBeGY1dlJUI380Jrs8oq/Q69Ebb3jhw373HWrp3dJro9MjR+3+\nJzLL68CY17UCHsd0Wr1+i3IbgndcaLhYyD1yBcyOEnc5D3Yf9IJzf+4+XuMAFGxr\npSfWcwen2wCPKJmK9V+B/G8tUTUgS2Vo8xh9oxPUu+OaLBi6XTW+fNPFoKMTXGd3\nFZMiXoc0udkpfA2WKSc6DZQeQvJ6+snYsxrDe7qw0JRL73FHwkIAbHXLe3nXyTBd\niJ4jckQG9P+9lfrh\n=ig8v\n-----END PGP SIGNATURE-----",
        "payload": "tree 4b6c5d4f4e266fe15ec8a7fc411e16901056be24\nparent a47e5964861dfb98d61719c9852e12fd6da84c31\nauthor Fabian Jahr <fjahr@protonmail.com> 1599948823 +0200\ncommitter Fabian Jahr <fjahr@protonmail.com> 1600729080 +0200\n\ncli: Parse hash value\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b970d804b152382de6008439b08461ec3f2ca1b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3b970d804b152382de6008439b08461ec3f2ca1b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3b970d804b152382de6008439b08461ec3f2ca1b/comments",
    "author": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fjahr",
      "id": 1322187,
      "node_id": "MDQ6VXNlcjEzMjIxODc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1322187?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fjahr",
      "html_url": "https://github.com/fjahr",
      "followers_url": "https://api.github.com/users/fjahr/followers",
      "following_url": "https://api.github.com/users/fjahr/following{/other_user}",
      "gists_url": "https://api.github.com/users/fjahr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fjahr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fjahr/subscriptions",
      "organizations_url": "https://api.github.com/users/fjahr/orgs",
      "repos_url": "https://api.github.com/users/fjahr/repos",
      "events_url": "https://api.github.com/users/fjahr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fjahr/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "a47e5964861dfb98d61719c9852e12fd6da84c31",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a47e5964861dfb98d61719c9852e12fd6da84c31",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/a47e5964861dfb98d61719c9852e12fd6da84c31"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "e557f7d1dfa60b66740a418876d5c3114fc1a0b2",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 9,
        "deletions": 2,
        "changes": 11,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3b970d804b152382de6008439b08461ec3f2ca1b/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3b970d804b152382de6008439b08461ec3f2ca1b/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=3b970d804b152382de6008439b08461ec3f2ca1b",
        "patch": "@@ -4,6 +4,7 @@\n // file COPYING or http://www.opensource.org/licenses/mit-license.php.\n \n #include <rpc/client.h>\n+#include <util/strencodings.h>\n #include <util/system.h>\n \n #include <set>\n@@ -214,8 +215,14 @@ CRPCConvertTable::CRPCConvertTable()\n \n static CRPCConvertTable rpcCvtTable;\n \n+// Identify hash values that are part of a hash_or_height parameter\n+static bool IsHashVal(const std::string& str) {\n+    return (str.length() == 64) && IsHex(str);\n+}\n+\n /** Non-RFC4627 JSON parser, accepts internal values (such as numbers, true, false, null)\n  * as well as objects and arrays.\n+ *\n  */\n UniValue ParseNonRFCJSONValue(const std::string& strVal)\n {\n@@ -233,7 +240,7 @@ UniValue RPCConvertValues(const std::string &strMethod, const std::vector<std::s\n     for (unsigned int idx = 0; idx < strParams.size(); idx++) {\n         const std::string& strVal = strParams[idx];\n \n-        if (!rpcCvtTable.convert(strMethod, idx)) {\n+        if (!rpcCvtTable.convert(strMethod, idx) || IsHashVal(strVal)) {\n             // insert string value directly\n             params.push_back(strVal);\n         } else {\n@@ -258,7 +265,7 @@ UniValue RPCConvertNamedValues(const std::string &strMethod, const std::vector<s\n         std::string name = s.substr(0, pos);\n         std::string value = s.substr(pos+1);\n \n-        if (!rpcCvtTable.convert(strMethod, name)) {\n+        if (!rpcCvtTable.convert(strMethod, name) || IsHashVal(value)) {\n             // insert string value directly\n             params.pushKV(name, value);\n         } else {"
      }
    ]
  }
]