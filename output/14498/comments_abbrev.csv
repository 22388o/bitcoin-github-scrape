NicolasDorier,2018-10-17T04:47:28Z,Concept ACK I needed that long ago.,https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-430488232,430488232,
sipa,2018-10-17T07:03:18Z,"NACK, transactions don't have from addresses in the model our wallet exposes.\n\nIt may make sense to have a separate simpler transaction watcher, which is similar to the wallet, but doesn't have all the accounting logic. However, for our current wallet, I believe this is feature creep and confusing.",https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-430513379,430513379,
rodentrabies,2018-10-17T08:13:45Z,"Fair point on feature creep:) I opened this more as a continuation of discussion in #10599 than as a new feature to merge, so please close the PR if there are no strong arguments for this.\n\nBy a separate simpler transaction watcher you mean a part of core or an external tool?",https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-430533065,430533065,
DrahtBot,2018-10-20T09:54:21Z,"<!--e57a25ab6845829454e8d69fc972939a-->Reviewers, this pull request conflicts with the following ones:\n\n* #14437 (Refactor: Start to separate wallet from node by ryanofsky)\n* #11634 (wallet: Add missing cs_wallet/cs_KeyStore locks to wallet by practicalswift)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one tha",https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-431566477,431566477,
DrahtBot,2018-10-24T09:40:03Z,<!--cf906140f33d8803c4a75a2196329ecb-->Needs rebase,https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-432587640,432587640,
promag,2018-11-04T18:18:22Z,@mrwhythat agree in closing?,https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-435692904,435692904,
rodentrabies,2018-11-04T18:44:43Z,"@promag, yup, closing.",https://github.com/bitcoin/bitcoin/pull/14498#issuecomment-435694942,435694942,
promag,2018-10-17T15:28:19Z,Are you sure about this?,https://github.com/bitcoin/bitcoin/pull/14498#discussion_r225981161,225981161,src/wallet/rpcwallet.cpp
rodentrabies,2018-10-17T17:24:39Z,"Well, after @sipa's comment I'm not sure about this PR in general, but I adapted some tests from `rpc_listreceivedby.py` and it seems to be working. I may be missing something deep here though.",https://github.com/bitcoin/bitcoin/pull/14498#discussion_r226023665,226023665,src/wallet/rpcwallet.cpp
promag,2018-10-18T00:26:01Z,There are no tests here. Anyway `CWallet::GetWalletTx` only returns wallet transactions and so this would fail when `wtx` in an incoming transaction.,https://github.com/bitcoin/bitcoin/pull/14498#discussion_r226136385,226136385,src/wallet/rpcwallet.cpp
rodentrabies,2018-10-18T11:38:29Z,"I assumed there's no need for tests since this got a NACK.\n\nI was going to check it with tests, but if I undersand it correctly, since we're interested only in wallet transactions, checking if result of `GetWalletTx` is non-`nullptr`would be enough? \n```suggestion\n                const CWalletTx* iwtx = pwallet->GetWalletTx(prevout.hash);\n                if (!iwtx) continue;\n          ",https://github.com/bitcoin/bitcoin/pull/14498#discussion_r226270456,226270456,src/wallet/rpcwallet.cpp
promag,2018-10-18T11:48:57Z,I think that is correct.,https://github.com/bitcoin/bitcoin/pull/14498#discussion_r226273015,226273015,src/wallet/rpcwallet.cpp
promag,2018-10-18T11:55:41Z,"This can be avoided when `has_filtered_address`:\n\nabove before the loop:\n```cpp\nconst isminefilter is_mine_filtered_address = has_filtered_address ? IsMine(*pwallet, filtered_address) : ISMINE_NO;\n```\nand here:\n```cpp\nisminefilter mine = has_filtered_address ? is_mine_filtered_address : IsMine(*pwallet, address);\n```",https://github.com/bitcoin/bitcoin/pull/14498#discussion_r226274784,226274784,src/wallet/rpcwallet.cpp
