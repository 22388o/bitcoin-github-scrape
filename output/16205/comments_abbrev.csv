laanwj,2019-06-13 13:47:31,"Nice. Concept ACK.\nWasn't aware we had so many uses of `fprintf`.\nWe should probably change the linter to prevent it from being used again.",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501710116,501710116,
laanwj,2019-06-13 13:51:55,"This might do it:\n```diff\ndiff --git a/test/lint/lint-locale-dependence.sh b/test/lint/lint-locale-dependence.sh\nindex 2b6c78c2c841b7cab90ce11b831ea1051118029e..b0c5ce39b1aba1c52b9b23c7451ac46d33cc6c67 100755\n--- a/test/lint/lint-locale-dependence.sh\n+++ b/test/lint/lint-locale-dependence.sh\n@@ -8,7 +8,6 @@ KNOWN_VIOLATIONS=(\n     ""src/dbwrapper.cpp:.*vsnprintf""\n     ""src/httprpc.c",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501711865,501711865,
practicalswift,2019-06-13 14:43:36,Concept ACK,https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501733821,501733821,
DrahtBot,2019-06-13 14:49:58,"<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* [#15936](https://drahtbot.github.io/bitcoin_core_issue_redirect/r/15936.html) (WIP: Unify bitcoin-qt and bitcoind persiste",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501736549,501736549,
jamesob,2019-06-13 15:32:03,"Concept ACK, will test in a bit.",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501754374,501754374,
promag,2019-06-13 21:43:31,ACK fa8f195195945ce6258199af0461e3fbfbc1236d. Ideally this should be rebased before merge.,https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501890037,501890037,
practicalswift,2019-06-13 21:51:57,utACK fa8f195195945ce6258199af0461e3fbfbc1236d,https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-501892334,501892334,
practicalswift,2019-06-14 08:03:58,"When reviewing please note that `tfm::format` in contrast to `fprintf` may throw (`tinyformat::format_error`). That is not necessarily a problem obviously, but it is worth to have in mind when analysing the change in possible code paths from this change.",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-502011515,502011515,
Empact,2019-06-14 13:10:44,ACK https://github.com/bitcoin/bitcoin/pull/16205/commits/fa8f195195945ce6258199af0461e3fbfbc1236d,https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-502103502,502103502,
laanwj,2019-06-15 13:12:04,"> When reviewing please note that tfm::format in contrast to fprintf may throw (tinyformat::format_error). That is not necessarily a problem obviously, but it is worth to have in mind when analysing the change in possible code paths from this change.\n\nAnother thing to be careful of is to not use `stderr` and `std::cerr` in a mixed way due to potential buffering issues. So it's essential to do ",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-502365785,502365785,
kallewoof,2019-06-17 13:52:51,Post-merge utACK,https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-502691408,502691408,
MarcoFalke,2019-06-18 13:18:28,"Looks like this accidentally fixed multiple test failures with the cross-compiled windows binaries:\n\n* `feature_config_args`:\n\n```\nTraceback (most recent call last):\n  File ""C:\Users\travis\build\MarcoFalke\btc_nightly\bitcoin\test\functional\test_framework\test_framework.py"", line 193, in main\n    self.run_test()\n  File ""C:\Users\travis\build\MarcoFalke\btc_nightly\bitcoin\/test/f",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-503131367,503131367,
MarcoFalke,2019-06-18 13:24:21,"I am going to backport this, since it turned out to be a bugfix",https://github.com/bitcoin/bitcoin/pull/16205#issuecomment-503133694,503133694,
Empact,2019-06-14 13:01:19,"nit: a few of these could drop formatting altogether, via `<<`",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r293797186,293797186,src/bitcoin-tx.cpp
MarcoFalke,2019-06-14 14:07:04,"I believe tfm uses `<<` under the hood, so it shouldn't matter.",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r293823124,293823124,src/bitcoin-tx.cpp
Empact,2019-06-14 14:20:48,"Yeah, the output should be the same, just would remove a layer of indirection.",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r293828926,293828926,src/bitcoin-tx.cpp
laanwj,2019-06-15 13:10:14,"that's just a matter of style; it seems most of the developers of this code base prefer %X formatting to the various `<<` incantations (hence the use of `tinyformat` in the first place), so consistently using `tfm::format` seems good to me",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r294046501,294046501,src/bitcoin-tx.cpp
jonatack,2019-06-16 21:27:09,"IIUC this change is only required due to the `test/lint/lint-format-strings.sh` linter change in fa8f195195945ce6258199af0461e3fbfbc1236d of this PR.\n\nE.g. if the above line is not changed then `./test/lint/lint-format-strings.sh` will raise\n```bash\nsrc/sync.cpp: Expected 0 argument(s) after format string but found 4 argument(s): tfm::format( ""%s %s:%s%s (in thread %s)"", mutexName, sourceF",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r294101008,294101008,src/sync.cpp
Empact,2019-06-16 21:51:41,Fair enough. Just a nit.,https://github.com/bitcoin/bitcoin/pull/16205#discussion_r294101794,294101794,src/bitcoin-tx.cpp
MarcoFalke,2019-06-17 11:10:32,"Correct, but I didn't rewrite the commits to preserve the acks.",https://github.com/bitcoin/bitcoin/pull/16205#discussion_r294247196,294247196,src/sync.cpp
