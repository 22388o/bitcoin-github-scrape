jonasschnelli,2016-09-22T08:08:59Z,"For the multiwallet support, each wallet RPC call could do something like `CWallet *pwallet = CWallets::getWalletFromRequest(request)` instead of accessing `pwalletMain`.\n",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-248838367,248838367,
laanwj,2016-09-22T12:24:15Z,"Concept ACK, the code churn is a bit unfortunate but passing a context structure into RPC methods had to be done at some point...\n(and it's better to face this once than hacking in something like a thread local pointer...)\n",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-248888714,248888714,
jonasschnelli,2016-09-22T12:35:13Z,"Yes. It's larger then I initially though. But once we did the ""large"" migration to a structure/object-passing we will be flexible for further changes.\nMost changed lines are just a `params.` to `request.params.` which should be easy to verify/review.\n",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-248891197,248891197,
laanwj,2016-09-25T09:46:55Z,"This reminds me, I should have called that class `JSONRPCRequest` not `JSONRequest`. It's a JSON-RPC server not a JSON server.\n\nIf you agree I think it would make sense to rename it as a first commit (it only appears in 5 places) before it becomes an argument to every RPC call.\n\nEdit: GAH, `JSONRPCRequest` is already a function name in `protocol.h`. This could explain why I made the decision t",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-249412566,249412566,
laanwj,2016-09-29T16:53:34Z,"@jonasschnelli I'd suggest the following to get rid of the current `JSONRPCRequest`: https://github.com/laanwj/bitcoin/commit/ae6db2a5ff781ffa876f7d424438901d68529a8b, then rename the actual request object.\n",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-250525852,250525852,
jonasschnelli,2016-10-19T12:46:38Z,"Rebased and added https://github.com/laanwj/bitcoin/commit/ae6db2a5ff781ffa876f7d424438901d68529a8b as first commit, renamed `JSONRequest` to `JSONRPCRequest`.\n",https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-254801797,254801797,
laanwj,2016-10-19T13:16:20Z,utACK e7156ad\n,https://github.com/bitcoin/bitcoin/pull/8788#issuecomment-254809034,254809034,
MarcoFalke,2016-09-22T22:52:34Z,nit: You can put something like\n\n``` cpp\nUniValue params = request.params;\n```\n\nin the first line of the method to make the diff smaller and less verbose?\n,https://github.com/bitcoin/bitcoin/pull/8788#discussion_r80153601,80153601,src/rpc/blockchain.cpp
jonasschnelli,2016-09-23T07:50:53Z,"I have considered this. But if we would have done this from the beginning, wouldn't it be without the extra `UniValue params` delegation?\nI think this PRs solution is cleaner.\n\nWe have to do this once and therefore probably accept a larger diff.\n",https://github.com/bitcoin/bitcoin/pull/8788#discussion_r80196402,80196402,src/rpc/blockchain.cpp
laanwj,2016-09-25T09:40:54Z,"No strong opinion on this. Indeed, doing `const UniValue &params = request.params;` at the beginning of each function would reduce diff, on the other hand, I don't think prefixing `request.` everywhere is bad. It even makes the code a little bit more readable. ""What params? The request params"".\nI'm fine with keeping it like this\n",https://github.com/bitcoin/bitcoin/pull/8788#discussion_r80378039,80378039,src/rpc/blockchain.cpp
laanwj,2016-10-19T13:22:26Z,"This is kind of ugly, but it already was ugly, as we're not supposed to call into RPC from the REST interface (or use any RPC stuff at all from REST). At some point these functions should be moved to a shared compilation unit.\nOut of scope for this pull ofcourse.\n",https://github.com/bitcoin/bitcoin/pull/8788#discussion_r84067887,84067887,src/rest.cpp
