achow101,2020-10-20 18:39:24,"BDB should have a uuid record too. It can just be the same as the BDB generated id for compatibility, but a unique wallet id should not be at the db level. Adding a uuid record to BDB wallets also means migrating from BDB to SQLite won't change the id.",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713060027,713060027,
luke-jr,2020-10-20 18:42:20,"@achow101 Migration code just needs to be aware of how BDB stores the unique id. In any case, not related to this PR.",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713061660,713061660,
achow101,2020-10-20 18:50:08,"> @achow101 Migration code just needs to be aware of how BDB stores the unique id. In any case, not related to this PR.\n\nDisagree. The access to this ID should not be db specific. This id should not be dependent on the underlying database. Furthermore, migration via `createfromdump` (from #19137) won't add the id as it is a strict record-for-record move.\n\nI think the only db specific thing",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713067855,713067855,
ryanofsky,2020-10-20 18:52:33,"Weak concept NACK. When there's a choice between (1) less code for greater usability and more use-cases and (2) more code for less usability and fewer use-cases, I try to choose (1)\n\nI don't see why it should be a problem to make two copies of a wallet and use it for different things. I don't think we should warn when someone does that. I don't think prune locks should use UUIDs. I think they ",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713069277,713069277,
luke-jr,2020-10-20 18:52:50,">The access to this ID should not be db specific.\n\nDebatable, but it currently is as a matter of fact. And again, unrelated to the issue addressed in this PR. \n\n>Furthermore, migration via createfromdump (from #19137) won't add the id as it is a strict record-for-record move.\n\nSounds like a bug in createfromdump...",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713069435,713069435,
luke-jr,2020-10-20 18:58:07,"> I don't see why it should be a problem to make two copies of a wallet and use it for different things.\n\nWhat did you have in mind? This is always broken behaviour, and has never been supported...\n\n>I don't think prune locks should use UUIDs. I think they should use wallet names so the locks are more understandable and easily managed by users.\n\nWallet names are not unique and can be c",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713072183,713072183,
luke-jr,2020-10-20 19:17:44,Fixed bug due to key being `const char[5]` instead of `std::string`,https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713082744,713082744,
ryanofsky,2020-10-20 19:19:21,"> What did you have in mind?\n\nJust basic file management. Maybe I want to make a bunch of wallets with the same password and import different keys into them. Maybe I want some wallets with the same keys. Maybe I want to set up a few wallets together on one machine and them copy them to different machines, and sometimes use them on the same machine again. Nothing impossible to work around, but ",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713083707,713083707,
luke-jr,2020-10-20 19:21:23,">It works fine, and I'm not saying go out of the way to add support. I'm saying don't go out of the way to remove support.\n\nThis doesn't remove support for anything at all.\n\n>It's exhausting to discuss things like this with you Luke! We both understand they are unique at any point in time when they are loaded, and not unique at different points in time if they are unloaded and moved.\n\n",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713084806,713084806,
achow101,2020-10-20 20:09:51,"Approach NACK\n\nIf we are going to have a wallet id, then support it properly. This means have it in CWallet, have a way to fetch it from CWallet, have the record in `walletdb.cpp` and writers for it in `WalletBatch`.\n\nFurthermore, this PR is a massive layer violation. While I accept that we will have a layer violation here because of BDB (although I would prefer we don't use the BDB id as ",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-713110154,713110154,
luke-jr,2020-10-22 12:37:15,Closing in favour of #20205,https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-714464088,714464088,
ryanofsky,2020-10-26 13:34:55,"> > It's exhausting to discuss things like this with you Luke! We both understand they are unique at any point in time when they are loaded, and not unique at different points in time if they are unloaded and moved.\n> \n> But it's the latter case the UUID is needed to address.\n\nDefinitely not, at best they can be a partial solution and maybe help with a type of rename detection. There shoul",https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-716549329,716549329,
fatso83,2020-11-04 09:19:03,@Platinumwrist Why are you spamming all these repos with pseudo-reviews? I went through a few of your recent contributions and it is just spamming open source repos. To seem active on the contributions panel? Stop it.,https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-721612992,721612992,
Platinumwrist,2020-11-05 08:22:09,@fatso83 yea i hear you not my intention I get it kool,https://github.com/bitcoin/bitcoin/pull/20204#issuecomment-722221350,722221350,
jonasschnelli,2020-10-20 18:39:35,This is actually not a rfc4122 UUID. It's just 256 random bits. Probably doesn't matter though.,https://github.com/bitcoin/bitcoin/pull/20204#discussion_r508754651,508754651,src/wallet/sqlite.cpp
