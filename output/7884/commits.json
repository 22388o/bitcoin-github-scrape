[
  {
    "sha": "9d213d2b392ff3ddf46628597677d8c41ba2240e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo5ZDIxM2QyYjM5MmZmM2RkZjQ2NjI4NTk3Njc3ZDhjNDFiYTIyNDBl",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2016-02-03T21:15:18Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2016-04-18T19:38:33Z"
      },
      "message": "Unit test for CScript::FindAndDelete",
      "tree": {
        "sha": "98b1f049fe3d96784618190a1c82eada1ad8b596",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/98b1f049fe3d96784618190a1c82eada1ad8b596"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/9d213d2b392ff3ddf46628597677d8c41ba2240e",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlcVN7sACgkQdYgkL74406jq5ACfTa0srl7ciE4xI3+DaMW/v2T3\nldcAoJ3zM3b3uxmTKUW6AEPllpuBm7x1\n=s91B\n-----END PGP SIGNATURE-----",
        "payload": "tree 98b1f049fe3d96784618190a1c82eada1ad8b596\nparent d28995018003db699b0b528f5e97e9002c3feeb9\nauthor Gavin Andresen <gavinandresen@gmail.com> 1454534118 -0500\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1461008313 -0400\n\nUnit test for CScript::FindAndDelete\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d213d2b392ff3ddf46628597677d8c41ba2240e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/9d213d2b392ff3ddf46628597677d8c41ba2240e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d213d2b392ff3ddf46628597677d8c41ba2240e/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d28995018003db699b0b528f5e97e9002c3feeb9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d28995018003db699b0b528f5e97e9002c3feeb9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d28995018003db699b0b528f5e97e9002c3feeb9"
      }
    ],
    "stats": {
      "total": 117,
      "additions": 117,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5e9711a4a7e2670d17c3131be2d2cb134d2b858e",
        "filename": "src/test/script_tests.cpp",
        "status": "modified",
        "additions": 117,
        "deletions": 0,
        "changes": 117,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/9d213d2b392ff3ddf46628597677d8c41ba2240e/src/test/script_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/9d213d2b392ff3ddf46628597677d8c41ba2240e/src/test/script_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/script_tests.cpp?ref=9d213d2b392ff3ddf46628597677d8c41ba2240e",
        "patch": "@@ -1051,4 +1051,121 @@ BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n     BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n }\n \n+static CScript\n+ScriptFromHex(const char* hex)\n+{\n+    std::vector<unsigned char> data = ParseHex(hex);\n+    return CScript(data.begin(), data.end());\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(script_FindAndDelete)\n+{\n+    // Exercise the FindAndDelete functionality\n+    CScript s;\n+    CScript d;\n+    CScript expect;\n+\n+    s = CScript() << OP_1 << OP_2;\n+    d = CScript(); // delete nothing should be a no-op\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_1 << OP_2 << OP_3;\n+    d = CScript() << OP_2;\n+    expect = CScript() << OP_1 << OP_3;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_3 << OP_1 << OP_3 << OP_3 << OP_4 << OP_3;\n+    d = CScript() << OP_3;\n+    expect = CScript() << OP_1 << OP_4;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 4);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff03\"); // PUSH 0x02ff03 onto stack\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\"); // PUSH 0x2ff03 PUSH 0x2ff03\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"02\");\n+    expect = s; // FindAndDelete matches entire opcodes\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"ff\");\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    // This is an odd edge case: strip of the push-three-bytes\n+    // prefix, leaving 02ff03 which is push-two-bytes:\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"03\");\n+    expect = CScript() << ParseHex(\"ff03\") << ParseHex(\"ff03\");\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK(s == expect);\n+\n+    // Byte sequence that spans multiple opcodes:\n+    s = ScriptFromHex(\"02feed5169\"); // PUSH(0xfeed) OP_1 OP_VERIFY\n+    d = ScriptFromHex(\"feed51\");\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0); // doesn't match 'inside' opcodes\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"02feed5169\"); // PUSH(0xfeed) OP_1 OP_VERIFY\n+    d = ScriptFromHex(\"02feed51\");\n+    expect = ScriptFromHex(\"69\");\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"516902feed5169\");\n+    d = ScriptFromHex(\"feed51\");\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"516902feed5169\");\n+    d = ScriptFromHex(\"02feed51\");\n+    expect = ScriptFromHex(\"516969\");\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_0 << OP_0 << OP_1 << OP_1;\n+    d = CScript() << OP_0 << OP_1;\n+    expect = CScript() << OP_0 << OP_1; // FindAndDelete is single-pass\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_0 << OP_0 << OP_1 << OP_0 << OP_1 << OP_1;\n+    d = CScript() << OP_0 << OP_1;\n+    expect = CScript() << OP_0 << OP_1; // FindAndDelete is single-pass\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK(s == expect);\n+\n+    // Another weird edge case:\n+    // End with invalid push (not enough data)...\n+    s = ScriptFromHex(\"0003feed\");\n+    d = ScriptFromHex(\"03feed\"); // ... can remove the invalid push\n+    expect = ScriptFromHex(\"00\");\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0003feed\");\n+    d = ScriptFromHex(\"00\");\n+    expect = ScriptFromHex(\"03feed\");\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+}\n+\n BOOST_AUTO_TEST_SUITE_END()"
      }
    ]
  },
  {
    "sha": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphYWU1M2YyMGRjZGEyMmM5NzgxNDRhNzlmYzVhZWRjZDNiMTQzNDZi",
    "commit": {
      "author": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2016-02-03T20:52:02Z"
      },
      "committer": {
        "name": "Gavin Andresen",
        "email": "gavinandresen@gmail.com",
        "date": "2016-04-18T19:38:35Z"
      },
      "message": "Optimize CScript::FindAndDelete\n\nCScript::FindAndDelete, called by the CHECKSIG Script opcodes, could\nend up moving the bytes of the Script multiple times if there were\nmultiple matches for the Find.\n\nThis commit tweaks the algorithm so it never moves bytes in the Script\nmore than once per call to FindAndDelete.",
      "tree": {
        "sha": "ebb442fb1c0ae1307ff7adf4c1e85bf5dc14170c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/ebb442fb1c0ae1307ff7adf4c1e85bf5dc14170c"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/aae53f20dcda22c978144a79fc5aedcd3b14346b",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niEYEABECAAYFAlcVN7sACgkQdYgkL74406ikZgCeKFL0hbv7QYDaooiSdG0JkIGV\nGAEAnRL5NcBnPijMH8evz2uTAP8fTqzj\n=iNVq\n-----END PGP SIGNATURE-----",
        "payload": "tree ebb442fb1c0ae1307ff7adf4c1e85bf5dc14170c\nparent 9d213d2b392ff3ddf46628597677d8c41ba2240e\nauthor Gavin Andresen <gavinandresen@gmail.com> 1454532722 -0500\ncommitter Gavin Andresen <gavinandresen@gmail.com> 1461008315 -0400\n\nOptimize CScript::FindAndDelete\n\nCScript::FindAndDelete, called by the CHECKSIG Script opcodes, could\nend up moving the bytes of the Script multiple times if there were\nmultiple matches for the Find.\n\nThis commit tweaks the algorithm so it never moves bytes in the Script\nmore than once per call to FindAndDelete.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/aae53f20dcda22c978144a79fc5aedcd3b14346b/comments",
    "author": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "9d213d2b392ff3ddf46628597677d8c41ba2240e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/9d213d2b392ff3ddf46628597677d8c41ba2240e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/9d213d2b392ff3ddf46628597677d8c41ba2240e"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 16,
      "deletions": 1
    },
    "files": [
      {
        "sha": "fec0f7760bc32c4c2dcc6a125fa77c7cdfa799d7",
        "filename": "src/script/script.h",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/aae53f20dcda22c978144a79fc5aedcd3b14346b/src/script/script.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/aae53f20dcda22c978144a79fc5aedcd3b14346b/src/script/script.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/script.h?ref=aae53f20dcda22c978144a79fc5aedcd3b14346b",
        "patch": "@@ -9,6 +9,7 @@\n #include \"crypto/common.h\"\n #include \"prevector.h\"\n \n+#include <algorithm>\n #include <assert.h>\n #include <climits>\n #include <limits>\n@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;\n+                else copied = std::copy(copied+nShift, pc, copied);\n+                pc += b.size();\n+                nShift += b.size();\n                 ++nFound;\n             }\n         }\n         while (GetOp(pc, opcode));\n+\n+        if (nShift > 0)\n+        {\n+            if (copied+nShift != end())\n+                copied = std::copy(copied+nShift, end(), copied);\n+            erase(copied, end());\n+        }\n+\n         return nFound;\n     }\n     int Find(opcodetype op) const"
      }
    ]
  }
]