sipa,2016-04-16T09:30:19Z,"Concept ACK on the improvement, but there are maybe a few more edge cases to test:\n- Removing a byte sequence that spans multiple opcodes\n- Trying to remove a sequence that only occurs in the middle of opcodes (which doesn't work)\n- Trying to remove ""OP_0 OP_1"" from ""OP_0 OP_0 OP_1 OP_1"" leaves ""OP_0 OP_1"" (because we don't go backward after a replacement)\n",https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-210780778,210780778,
gavinandresen,2016-04-18T19:42:48Z,"Added unit tests as suggested by @sipa.\nFixed to be compatible with invalid CScripts that end with partial PUSHDATA's (and added unit tests) as suggested by @kazcw \n\nAnd saved a couple of lines of code (and probably made faster, but copying is never done in normal operation with reasonable transactions) by switching to using std::copy instead of an explicit loop.\n\nThanks for the code reviews!",https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-211546344,211546344,
sipa,2016-05-17T08:01:02Z,Superseded by #7907.\n,https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-219646683,219646683,
kazcw,2016-04-15T22:42:39Z,A test for !nShift here would prevent copying everything upto the first match to itself\n,https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951103,59951103,src/script/script.h
kazcw,2016-04-15T22:44:34Z,"I think this changes the result of FindAndDelete for invalid CScripts that end in a pushdata without enough data. Replacing ""pc"" with ""end()"" would keep the original behavior in this case.\n",https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951261,59951261,src/script/script.h
TheBlueMatt,2016-04-19T00:58:12Z,I'd prefer to not have tests that check that FindAndDelete do exactly what we currently do when called against invalid scripts when we dont require that in any callers.\n,https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60159788,60159788,src/test/script_tests.cpp
dcousens,2016-04-21T02:27:37Z,Isn't `nShift` always `== 0` at the beginning?   Why bother initializing `copied` above?\n,https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60518620,60518620,src/script/script.h
gavinandresen,2016-04-21T11:14:38Z,Why initialize copied instead of just eliminating the if/else and always copying? Because std::copy behavior is undefined if the first and last arguments point to the same element.\n,https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60563526,60563526,src/script/script.h
kazcw,2016-04-21T16:03:23Z,Why would that be? The Standard's definition of `std::copy` doesn't seem to say anything that would prohibit an empty range.\n,https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60608682,60608682,src/script/script.h
gavinandresen,2016-04-21T16:30:36Z,"The standard says:\n\n""result shall not be in the range [first,last)."" \n",https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60613472,60613472,src/script/script.h
kazcw,2016-04-21T17:21:07Z,"`last` is not in the range `[first,last)`\n",https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60620906,60620906,src/script/script.h
gavinandresen,2016-04-25T15:03:20Z,"RE: behavior with invalid Scripts: I don't care one way or the other; seems safer to behave exactly the same, since this is consensus-critical code.\n",https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60928403,60928403,src/test/script_tests.cpp
gavinandresen,2016-04-25T15:14:21Z,"@kazcw :  The first time a match is found, copied will be begin(). nShift will be zero, and pc will be pointing into the array somewhere.\n\nIf we removed copied = pc and just did:\n   copied = std::copy(copied+nShift, pc, copied);\n\n... then first is copied, last is pc, and result is copied.\ncopied IS in the range [copied, pc)\n",https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60930596,60930596,src/script/script.h
