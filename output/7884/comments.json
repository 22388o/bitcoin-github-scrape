[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210780778",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-210780778",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7884",
    "id": 210780778,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMDc4MDc3OA==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-16T09:30:19Z",
    "updated_at": "2016-04-16T09:30:19Z",
    "author_association": "MEMBER",
    "body": "Concept ACK on the improvement, but there are maybe a few more edge cases to test:\n- Removing a byte sequence that spans multiple opcodes\n- Trying to remove a sequence that only occurs in the middle of opcodes (which doesn't work)\n- Trying to remove \"OP_0 OP_1\" from \"OP_0 OP_0 OP_1 OP_1\" leaves \"OP_0 OP_1\" (because we don't go backward after a replacement)\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/210780778/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211546344",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-211546344",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7884",
    "id": 211546344,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTU0NjM0NA==",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?u=db313a954a318b81f5283d34908397d1ea3aeba3&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T19:42:48Z",
    "updated_at": "2016-04-18T19:42:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Added unit tests as suggested by @sipa.\nFixed to be compatible with invalid CScripts that end with partial PUSHDATA's (and added unit tests) as suggested by @kazcw \n\nAnd saved a couple of lines of code (and probably made faster, but copying is never done in normal operation with reasonable transactions) by switching to using std::copy instead of an explicit loop.\n\nThanks for the code reviews!\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/211546344/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/219646683",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#issuecomment-219646683",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/7884",
    "id": 219646683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTY0NjY4Mw==",
    "user": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?u=7999a16349f0df0fb273fffa18e5a955c9d3f11c&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-17T08:01:02Z",
    "updated_at": "2016-05-17T08:01:02Z",
    "author_association": "MEMBER",
    "body": "Superseded by #7907.\n",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/219646683/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951103",
    "pull_request_review_id": null,
    "id": 59951103,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTUxMTAz",
    "diff_hunk": "@@ -571,16 +571,34 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                while (copied != pc-nShift) {",
    "path": "src/script/script.h",
    "position": null,
    "original_position": 13,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "ad1fa51e8da43d60a8fa3bb4e45be01d6f6f43c3",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "A test for !nShift here would prevent copying everything upto the first match to itself\n",
    "created_at": "2016-04-15T22:42:39Z",
    "updated_at": "2016-04-18T19:38:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951103",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951103"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951103"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951103/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 582,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951261",
    "pull_request_review_id": null,
    "id": 59951261,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTUxMjYx",
    "diff_hunk": "@@ -571,16 +571,34 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                while (copied != pc-nShift) {\n+                    *copied = *(copied+nShift);\n+                    ++copied;\n+                }\n+                pc += b.size();\n+                nShift += b.size();\n                 ++nFound;\n             }\n         }\n         while (GetOp(pc, opcode));\n+\n+        if (nShift > 0)\n+        {\n+            while (copied != pc-nShift) {",
    "path": "src/script/script.h",
    "position": null,
    "original_position": 26,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "ad1fa51e8da43d60a8fa3bb4e45be01d6f6f43c3",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think this changes the result of FindAndDelete for invalid CScripts that end in a pushdata without enough data. Replacing \"pc\" with \"end()\" would keep the original behavior in this case.\n",
    "created_at": "2016-04-15T22:44:34Z",
    "updated_at": "2016-04-18T19:38:53Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951261",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951261"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r59951261"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/59951261/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": null,
    "original_line": 595,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60159788",
    "pull_request_review_id": null,
    "id": 60159788,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTU5Nzg4",
    "diff_hunk": "@@ -1051,4 +1051,121 @@ BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n     BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n }\n \n+static CScript\n+ScriptFromHex(const char* hex)\n+{\n+    std::vector<unsigned char> data = ParseHex(hex);\n+    return CScript(data.begin(), data.end());\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(script_FindAndDelete)\n+{\n+    // Exercise the FindAndDelete functionality\n+    CScript s;\n+    CScript d;\n+    CScript expect;\n+\n+    s = CScript() << OP_1 << OP_2;\n+    d = CScript(); // delete nothing should be a no-op\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_1 << OP_2 << OP_3;\n+    d = CScript() << OP_2;\n+    expect = CScript() << OP_1 << OP_3;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_3 << OP_1 << OP_3 << OP_3 << OP_4 << OP_3;\n+    d = CScript() << OP_3;\n+    expect = CScript() << OP_1 << OP_4;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 4);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff03\"); // PUSH 0x02ff03 onto stack\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\"); // PUSH 0x2ff03 PUSH 0x2ff03\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"02\");\n+    expect = s; // FindAndDelete matches entire opcodes\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"ff\");\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    // This is an odd edge case: strip of the push-three-bytes\n+    // prefix, leaving 02ff03 which is push-two-bytes:\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"03\");",
    "path": "src/test/script_tests.cpp",
    "position": 64,
    "original_position": 64,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "TheBlueMatt",
      "id": 649246,
      "node_id": "MDQ6VXNlcjY0OTI0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/649246?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/TheBlueMatt",
      "html_url": "https://github.com/TheBlueMatt",
      "followers_url": "https://api.github.com/users/TheBlueMatt/followers",
      "following_url": "https://api.github.com/users/TheBlueMatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/TheBlueMatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/TheBlueMatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/TheBlueMatt/subscriptions",
      "organizations_url": "https://api.github.com/users/TheBlueMatt/orgs",
      "repos_url": "https://api.github.com/users/TheBlueMatt/repos",
      "events_url": "https://api.github.com/users/TheBlueMatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/TheBlueMatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I'd prefer to not have tests that check that FindAndDelete do exactly what we currently do when called against invalid scripts when we dont require that in any callers.\n",
    "created_at": "2016-04-19T00:58:12Z",
    "updated_at": "2016-04-19T00:58:12Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60159788",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60159788"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60159788"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60159788/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1114,
    "original_line": 1114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60518620",
    "pull_request_review_id": null,
    "id": 60518620,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTE4NjIw",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "dcousens",
      "id": 413395,
      "node_id": "MDQ6VXNlcjQxMzM5NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413395?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dcousens",
      "html_url": "https://github.com/dcousens",
      "followers_url": "https://api.github.com/users/dcousens/followers",
      "following_url": "https://api.github.com/users/dcousens/following{/other_user}",
      "gists_url": "https://api.github.com/users/dcousens/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dcousens/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dcousens/subscriptions",
      "organizations_url": "https://api.github.com/users/dcousens/orgs",
      "repos_url": "https://api.github.com/users/dcousens/repos",
      "events_url": "https://api.github.com/users/dcousens/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dcousens/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Isn't `nShift` always `== 0` at the beginning?   Why bother initializing `copied` above?\n",
    "created_at": "2016-04-21T02:27:37Z",
    "updated_at": "2016-04-21T02:27:37Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60518620",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60518620"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60518620"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60518620/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60563526",
    "pull_request_review_id": null,
    "id": 60563526,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTYzNTI2",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why initialize copied instead of just eliminating the if/else and always copying? Because std::copy behavior is undefined if the first and last arguments point to the same element.\n",
    "created_at": "2016-04-21T11:14:38Z",
    "updated_at": "2016-04-21T11:14:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60563526",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60563526"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60563526"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60563526/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60608682",
    "pull_request_review_id": null,
    "id": 60608682,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjA4Njgy",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Why would that be? The Standard's definition of `std::copy` doesn't seem to say anything that would prohibit an empty range.\n",
    "created_at": "2016-04-21T16:03:23Z",
    "updated_at": "2016-04-21T16:03:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60608682",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60608682"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60608682"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60608682/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60613472",
    "pull_request_review_id": null,
    "id": 60613472,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjEzNDcy",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "The standard says:\n\n\"result shall not be in the range [first,last).\" \n",
    "created_at": "2016-04-21T16:30:36Z",
    "updated_at": "2016-04-21T16:30:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60613472",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60613472"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60613472"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60613472/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60620906",
    "pull_request_review_id": null,
    "id": 60620906,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNjIwOTA2",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "kazcw",
      "id": 1047859,
      "node_id": "MDQ6VXNlcjEwNDc4NTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1047859?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kazcw",
      "html_url": "https://github.com/kazcw",
      "followers_url": "https://api.github.com/users/kazcw/followers",
      "following_url": "https://api.github.com/users/kazcw/following{/other_user}",
      "gists_url": "https://api.github.com/users/kazcw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kazcw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kazcw/subscriptions",
      "organizations_url": "https://api.github.com/users/kazcw/orgs",
      "repos_url": "https://api.github.com/users/kazcw/repos",
      "events_url": "https://api.github.com/users/kazcw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kazcw/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "`last` is not in the range `[first,last)`\n",
    "created_at": "2016-04-21T17:21:07Z",
    "updated_at": "2016-04-21T17:21:07Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60620906",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60620906"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60620906"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60620906/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60928403",
    "pull_request_review_id": null,
    "id": 60928403,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTI4NDAz",
    "diff_hunk": "@@ -1051,4 +1051,121 @@ BOOST_AUTO_TEST_CASE(script_GetScriptAsm)\n     BOOST_CHECK_EQUAL(derSig + \"83 \" + pubKey, ScriptToAsmStr(CScript() << ToByteVector(ParseHex(derSig + \"83\")) << vchPubKey));\n }\n \n+static CScript\n+ScriptFromHex(const char* hex)\n+{\n+    std::vector<unsigned char> data = ParseHex(hex);\n+    return CScript(data.begin(), data.end());\n+}\n+\n+\n+BOOST_AUTO_TEST_CASE(script_FindAndDelete)\n+{\n+    // Exercise the FindAndDelete functionality\n+    CScript s;\n+    CScript d;\n+    CScript expect;\n+\n+    s = CScript() << OP_1 << OP_2;\n+    d = CScript(); // delete nothing should be a no-op\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_1 << OP_2 << OP_3;\n+    d = CScript() << OP_2;\n+    expect = CScript() << OP_1 << OP_3;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = CScript() << OP_3 << OP_1 << OP_3 << OP_3 << OP_4 << OP_3;\n+    d = CScript() << OP_3;\n+    expect = CScript() << OP_1 << OP_4;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 4);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff03\"); // PUSH 0x02ff03 onto stack\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 1);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\"); // PUSH 0x2ff03 PUSH 0x2ff03\n+    d = ScriptFromHex(\"0302ff03\");\n+    expect = CScript();\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 2);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"02\");\n+    expect = s; // FindAndDelete matches entire opcodes\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"ff\");\n+    expect = s;\n+    BOOST_CHECK_EQUAL(s.FindAndDelete(d), 0);\n+    BOOST_CHECK(s == expect);\n+\n+    // This is an odd edge case: strip of the push-three-bytes\n+    // prefix, leaving 02ff03 which is push-two-bytes:\n+    s = ScriptFromHex(\"0302ff030302ff03\");\n+    d = ScriptFromHex(\"03\");",
    "path": "src/test/script_tests.cpp",
    "position": 64,
    "original_position": 64,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "RE: behavior with invalid Scripts: I don't care one way or the other; seems safer to behave exactly the same, since this is consensus-critical code.\n",
    "created_at": "2016-04-25T15:03:20Z",
    "updated_at": "2016-04-25T15:03:20Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60928403",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60928403"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60928403"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60928403/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 1114,
    "original_line": 1114,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60930596",
    "pull_request_review_id": null,
    "id": 60930596,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwOTMwNTk2",
    "diff_hunk": "@@ -571,16 +572,30 @@ class CScript : public CScriptBase\n         if (b.empty())\n             return nFound;\n         iterator pc = begin();\n+        iterator copied = begin();\n+        size_t nShift = 0;\n         opcodetype opcode;\n         do\n         {\n             while (end() - pc >= (long)b.size() && memcmp(&pc[0], &b[0], b.size()) == 0)\n             {\n-                pc = erase(pc, pc + b.size());\n+                // Lazy copy-in-place if there is a match:\n+                if (nShift == 0) copied = pc;",
    "path": "src/script/script.h",
    "position": 21,
    "original_position": 21,
    "commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "original_commit_id": "aae53f20dcda22c978144a79fc5aedcd3b14346b",
    "user": {
      "login": "gavinandresen",
      "id": 331997,
      "node_id": "MDQ6VXNlcjMzMTk5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/331997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gavinandresen",
      "html_url": "https://github.com/gavinandresen",
      "followers_url": "https://api.github.com/users/gavinandresen/followers",
      "following_url": "https://api.github.com/users/gavinandresen/following{/other_user}",
      "gists_url": "https://api.github.com/users/gavinandresen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gavinandresen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gavinandresen/subscriptions",
      "organizations_url": "https://api.github.com/users/gavinandresen/orgs",
      "repos_url": "https://api.github.com/users/gavinandresen/repos",
      "events_url": "https://api.github.com/users/gavinandresen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gavinandresen/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "@kazcw :  The first time a match is found, copied will be begin(). nShift will be zero, and pc will be pointing into the array somewhere.\n\nIf we removed copied = pc and just did:\n   copied = std::copy(copied+nShift, pc, copied);\n\n... then first is copied, last is pc, and result is copied.\ncopied IS in the range [copied, pc)\n",
    "created_at": "2016-04-25T15:14:21Z",
    "updated_at": "2016-04-25T15:14:36Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60930596",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60930596"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/7884#discussion_r60930596"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/7884"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/60930596/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 583,
    "original_line": 583,
    "side": "RIGHT"
  }
]