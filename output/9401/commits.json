[
  {
    "sha": "0513c707aa1e356bc4da609bf0263cc684b0d6e3",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzowNTEzYzcwN2FhMWUzNTZiYzRkYTYwOWJmMDI2M2NjNjg0YjBkNmUz",
    "commit": {
      "author": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-12-21T13:45:59Z"
      },
      "committer": {
        "name": "Gregory Sanders",
        "email": "gsanders87@gmail.com",
        "date": "2016-12-21T14:39:45Z"
      },
      "message": "Make rpcauth help message clearer, add example in example .conf",
      "tree": {
        "sha": "68be7494f76793c80691b780c5d0d20f10a22dfa",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/68be7494f76793c80691b780c5d0d20f10a22dfa"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/0513c707aa1e356bc4da609bf0263cc684b0d6e3",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0513c707aa1e356bc4da609bf0263cc684b0d6e3",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/0513c707aa1e356bc4da609bf0263cc684b0d6e3",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/0513c707aa1e356bc4da609bf0263cc684b0d6e3/comments",
    "author": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "instagibbs",
      "id": 5767891,
      "node_id": "MDQ6VXNlcjU3Njc4OTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5767891?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/instagibbs",
      "html_url": "https://github.com/instagibbs",
      "followers_url": "https://api.github.com/users/instagibbs/followers",
      "following_url": "https://api.github.com/users/instagibbs/following{/other_user}",
      "gists_url": "https://api.github.com/users/instagibbs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/instagibbs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/instagibbs/subscriptions",
      "organizations_url": "https://api.github.com/users/instagibbs/orgs",
      "repos_url": "https://api.github.com/users/instagibbs/repos",
      "events_url": "https://api.github.com/users/instagibbs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/instagibbs/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "5a70572049d0e8a2e9228e7acf0e07d61996c33c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/5a70572049d0e8a2e9228e7acf0e07d61996c33c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/5a70572049d0e8a2e9228e7acf0e07d61996c33c"
      }
    ],
    "stats": {
      "total": 25,
      "additions": 23,
      "deletions": 2
    },
    "files": [
      {
        "sha": "afbc7882e01a490698e10fc2ab6361124dce5b68",
        "filename": "contrib/debian/examples/bitcoin.conf",
        "status": "modified",
        "additions": 22,
        "deletions": 1,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0513c707aa1e356bc4da609bf0263cc684b0d6e3/contrib/debian/examples/bitcoin.conf",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0513c707aa1e356bc4da609bf0263cc684b0d6e3/contrib/debian/examples/bitcoin.conf",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/contrib/debian/examples/bitcoin.conf?ref=0513c707aa1e356bc4da609bf0263cc684b0d6e3",
        "patch": "@@ -67,9 +67,30 @@\n # This option can be specified multiple times (default: bind to all interfaces)\n #rpcbind=<addr>\n \n-# You must set rpcuser and rpcpassword to secure the JSON-RPC api\n+# If no rpcpassword is set, rpc cookie auth is sought. The default `-rpccookiefile` name\n+# is .cookie and found in the `-datadir` being used for bitcoind. This option is typically used\n+# when the server and client are run as the same user.\n+#\n+# If not, you must set rpcuser and rpcpassword to secure the JSON-RPC api. The first\n+# method(DEPRECATED) is to set this pair for the server and client:\n #rpcuser=Ulysseys\n #rpcpassword=YourSuperGreatPasswordNumber_DO_NOT_USE_THIS_OR_YOU_WILL_GET_ROBBED_385593\n+#\n+# The second method `rpcauth` can be added to server startup argument. It is set at intialization time\n+# using the output from the script in share/rpcuser/rpcuser.py after providing a username:\n+#\n+# ./share/rpcuser/rpcuser.py alice\n+# String to be appended to bitcoin.conf:\n+# rpcauth=alice:f7efda5c189b999524f151318c0c86$d5b51b3beffbc02b724e5d095828e0bc8b2456e9ac8757ae3211a5d9b16a22ae\n+# Your password:\n+# DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# On client-side, you add the normal user/password pair to send commands:\n+#rpcuser=alice\n+#rpcpassword=DONT_USE_THIS_YOU_WILL_GET_ROBBED_8ak1gI25KFTvjovL3gAM967mies3E=\n+#\n+# You can even add multiple entries of these to the server conf file, and client can use any of them:\n+# rpcauth=bob:b2dd077cb54591a2f3139e69a897ac$4e71f08d48b4347cf8eff3815c0e25ae2e9a4340474079f55705f40574f4ec99\n \n # How many seconds bitcoin will wait for a complete RPC HTTP request.\n # after the HTTP connection is established. "
      },
      {
        "sha": "659b83e474fb49b60f151b743db773efaa581f78",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/0513c707aa1e356bc4da609bf0263cc684b0d6e3/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/0513c707aa1e356bc4da609bf0263cc684b0d6e3/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=0513c707aa1e356bc4da609bf0263cc684b0d6e3",
        "patch": "@@ -484,7 +484,7 @@ std::string HelpMessage(HelpMessageMode mode)\n     strUsage += HelpMessageOpt(\"-rpccookiefile=<loc>\", _(\"Location of the auth cookie (default: data dir)\"));\n     strUsage += HelpMessageOpt(\"-rpcuser=<user>\", _(\"Username for JSON-RPC connections\"));\n     strUsage += HelpMessageOpt(\"-rpcpassword=<pw>\", _(\"Password for JSON-RPC connections\"));\n-    strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. This option can be specified multiple times\"));\n+    strUsage += HelpMessageOpt(\"-rpcauth=<userpw>\", _(\"Username and hashed password for JSON-RPC connections. The field <userpw> comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is included in share/rpcuser. The client then connects normally using the rpcuser=<USERNAME>/rpcpassword=<PASSWORD> pair of arguments. This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcport=<port>\", strprintf(_(\"Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)\"), BaseParams(CBaseChainParams::MAIN).RPCPort(), BaseParams(CBaseChainParams::TESTNET).RPCPort()));\n     strUsage += HelpMessageOpt(\"-rpcallowip=<ip>\", _(\"Allow JSON-RPC connections from specified source. Valid for <ip> are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times\"));\n     strUsage += HelpMessageOpt(\"-rpcthreads=<n>\", strprintf(_(\"Set the number of threads to service RPC calls (default: %d)\"), DEFAULT_HTTP_THREADS));"
      }
    ]
  }
]