[
  {
    "sha": "346c9eefa333fe15c917254af8ce97291102c79d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozNDZjOWVlZmEzMzNmZTE1YzkxNzI1NGFmOGNlOTcyOTExMDJjNzlk",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2019-05-29T05:32:42Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2021-09-10T03:59:51Z"
      },
      "message": "Move Merge() to FlatSigningProvider::Merge()\n\nCurrently descriptor expansion unnecessarily copies the signing provider\ndata once per expansion. Avoid this work by making it a member of the\nclass and doing the merge in-place.\n\nAnd add a benchmark for descriptor expansion to characterize the change.",
      "tree": {
        "sha": "09c777d6565632ae793e881c569491363c8e87d4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/09c777d6565632ae793e881c569491363c8e87d4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/346c9eefa333fe15c917254af8ce97291102c79d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+XLHXoy4Dim7e8hvTYykuhgECQYFAmE62DgACgkQTYykuhgE\nCQYFXg/9Ehglq/0/Zm9ml5DisEzPZHXgEKDQofcG99RjZ9pzpPMjjTfsGixqGX1b\n5oRuyMpX6w+RSfphmYPu3D437cV95FI65mGrWIlVkI+t9+IIvGT32l2wsrHWEGQ4\n6Si95wOBr5CTuLcgKb5+swmD9W2xrY0U0EluqHfy8t6ghe0R06f6GMSt1pm5RkmO\nb/un1GvGtdsZfETO5g+WGIo7JLqYwHprfgBNHnhsD/1hhg8vkNSkHriwC5arCCLA\nfs162Hj0wF8mTRkLPGFbm2IySJkehFpDo/5biwcO0exXeBZQxegvNotj6RU76Bcd\nUKLXbLucsMq1JqfX1AwJCXUet+Jkzq2COz97M2RqWPZAS22PTFWVvqKUMgZN2eTd\nYKgu1iFR4xNXwnpa90HcIGgh5dtp6cvYW9CsnrshYAudoO2PSQIsEmYYvWtooTsE\nf5Pemre717XAaG7L31ku+BPmAUH9nupT12K+Oqd0lkMvxU9yKdolMGKOjZnAgs9/\ne1uQ6bFFoWAXpcNRtHHGoVB3jLG10l8ubJy2XG1xxtCaNNTU+bEUaJRw8RmWHNLa\nvXteNkjrbBPWsiSBHa5OcNTRJ2FvKiygG56p4O2UlM+B4TMWMSV2V+mQu/DRKdBQ\nr/jZLGOYNJbHTTSOtaR7l0nMcEjHkZ7MQphraq3Fe/RmfvguQ00=\n=K3jm\n-----END PGP SIGNATURE-----",
        "payload": "tree 09c777d6565632ae793e881c569491363c8e87d4\nparent d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4\nauthor Ben Woosley <ben.woosley@gmail.com> 1559107962 -0400\ncommitter Ben Woosley <ben.woosley@gmail.com> 1631246391 -0700\n\nMove Merge() to FlatSigningProvider::Merge()\n\nCurrently descriptor expansion unnecessarily copies the signing provider\ndata once per expansion. Avoid this work by making it a member of the\nclass and doing the merge in-place.\n\nAnd add a benchmark for descriptor expansion to characterize the change.\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/346c9eefa333fe15c917254af8ce97291102c79d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/346c9eefa333fe15c917254af8ce97291102c79d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/346c9eefa333fe15c917254af8ce97291102c79d/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2dd1697cee9d6d0f13f9cb351bce84eaa4a72b4"
      }
    ],
    "stats": {
      "total": 74,
      "additions": 51,
      "deletions": 23
    },
    "files": [
      {
        "sha": "a16bc709899746d0d1797adb0d53538941cde1b7",
        "filename": "src/Makefile.bench.include",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/Makefile.bench.include",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/Makefile.bench.include",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/Makefile.bench.include?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -21,6 +21,7 @@ bench_bench_bitcoin_SOURCES = \\\n   bench/checkqueue.cpp \\\n   bench/data.h \\\n   bench/data.cpp \\\n+  bench/descriptors.cpp \\\n   bench/duplicate_inputs.cpp \\\n   bench/examples.cpp \\\n   bench/rollingbloom.cpp \\"
      },
      {
        "sha": "5c868a8573806d75b662de76976195795763fe1e",
        "filename": "src/bench/descriptors.cpp",
        "status": "added",
        "additions": 30,
        "deletions": 0,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/bench/descriptors.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/bench/descriptors.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/bench/descriptors.cpp?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -0,0 +1,30 @@\n+// Copyright (c) 2019 The Bitcoin Core developers\n+// Distributed under the MIT software license, see the accompanying\n+// file COPYING or http://www.opensource.org/licenses/mit-license.php.\n+\n+#include <bench/bench.h>\n+#include <key.h>\n+#include <script/descriptor.h>\n+#include <script/standard.h>\n+\n+#include <string>\n+#include <utility>\n+\n+static void ExpandDescriptor(benchmark::Bench& bench)\n+{\n+    const auto desc_str = \"sh(wsh(multi(16,03669b8afcec803a0d323e9a17f3ea8e68e8abe5a278020a929adbec52421adbd0,0260b2003c386519fc9eadf2b5cf124dd8eea4c4e68d5e154050a9346ea98ce600,0362a74e399c39ed5593852a30147f2959b56bb827dfa3e60e464b02ccf87dc5e8,0261345b53de74a4d721ef877c255429961b7e43714171ac06168d7e08c542a8b8,02da72e8b46901a65d4374fe6315538d8f368557dda3a1dcf9ea903f3afe7314c8,0318c82dd0b53fd3a932d16e0ba9e278fcc937c582d5781be626ff16e201f72286,0297ccef1ef99f9d73dec9ad37476ddb232f1238aff877af19e72ba04493361009,02e502cfd5c3f972fe9a3e2a18827820638f96b6f347e54d63deb839011fd5765d,03e687710f0e3ebe81c1037074da939d409c0025f17eb86adb9427d28f0f7ae0e9,02c04d3a5274952acdbc76987f3184b346a483d43be40874624b29e3692c1df5af,02ed06e0f418b5b43a7ec01d1d7d27290fa15f75771cb69b642a51471c29c84acd,036d46073cbb9ffee90473f3da429abc8de7f8751199da44485682a989a4bebb24,02f5d1ff7c9029a80a4e36b9a5497027ef7f3e73384a4a94fbfe7c4e9164eec8bc,02e41deffd1b7cce11cde209a781adcffdabd1b91c0ba0375857a2bfd9302419f3,02d76625f7956a7fc505ab02556c23ee72d832f1bac391bcd2d3abce5710a13d06,0399eb0a5487515802dc14544cf10b3666623762fbed2ec38a3975716e2c29c232)))\";\n+    const std::pair<int64_t, int64_t> range = {0, 1000};\n+    FlatSigningProvider provider;\n+    std::string error;\n+    auto desc = Parse(desc_str, provider, error);\n+\n+    bench.run([&] {\n+        for (int i = range.first; i <= range.second; ++i) {\n+            std::vector<CScript> scripts;\n+            bool success = desc->Expand(i, provider, scripts, provider);\n+            assert(success);\n+        }\n+    });\n+}\n+\n+BENCHMARK(ExpandDescriptor);"
      },
      {
        "sha": "afeaf6e8e2e7cc2c9c2bc91787bc970ad36aa7ef",
        "filename": "src/script/descriptor.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/script/descriptor.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/script/descriptor.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/descriptor.cpp?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -622,7 +622,7 @@ class DescriptorImpl : public Descriptor\n             assert(outscripts.size() == 1);\n             subscripts.emplace_back(std::move(outscripts[0]));\n         }\n-        out = Merge(std::move(out), std::move(subprovider));\n+        out.Merge(subprovider);\n \n         std::vector<CPubKey> pubkeys;\n         pubkeys.reserve(entries.size());"
      },
      {
        "sha": "ee633b751c53a8eca1ec1b66eb7f33d069f01d3b",
        "filename": "src/script/signingprovider.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 15,
        "changes": 23,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/script/signingprovider.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/script/signingprovider.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/signingprovider.cpp?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -64,22 +64,15 @@ bool FlatSigningProvider::GetTaprootSpendData(const XOnlyPubKey& output_key, Tap\n     return LookupHelper(tr_spenddata, output_key, spenddata);\n }\n \n-FlatSigningProvider Merge(const FlatSigningProvider& a, const FlatSigningProvider& b)\n-{\n-    FlatSigningProvider ret;\n-    ret.scripts = a.scripts;\n-    ret.scripts.insert(b.scripts.begin(), b.scripts.end());\n-    ret.pubkeys = a.pubkeys;\n-    ret.pubkeys.insert(b.pubkeys.begin(), b.pubkeys.end());\n-    ret.keys = a.keys;\n-    ret.keys.insert(b.keys.begin(), b.keys.end());\n-    ret.origins = a.origins;\n-    ret.origins.insert(b.origins.begin(), b.origins.end());\n-    ret.tr_spenddata = a.tr_spenddata;\n-    for (const auto& [output_key, spenddata] : b.tr_spenddata) {\n-        ret.tr_spenddata[output_key].Merge(spenddata);\n+void FlatSigningProvider::Merge(const FlatSigningProvider& other)\n+{\n+    scripts.insert(other.scripts.begin(), other.scripts.end());\n+    pubkeys.insert(other.pubkeys.begin(), other.pubkeys.end());\n+    keys.insert(other.keys.begin(), other.keys.end());\n+    origins.insert(other.origins.begin(), other.origins.end());\n+    for (const auto& [output_key, spenddata] : other.tr_spenddata) {\n+        tr_spenddata[output_key].Merge(spenddata);\n     }\n-    return ret;\n }\n \n void FillableSigningProvider::ImplicitlyLearnRelatedKeyScripts(const CPubKey& pubkey)"
      },
      {
        "sha": "8aa08b20c9de36e92c12c103ce5cf4fa94a22f8d",
        "filename": "src/script/signingprovider.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/script/signingprovider.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/script/signingprovider.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/script/signingprovider.h?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -83,9 +83,9 @@ struct FlatSigningProvider final : public SigningProvider\n     bool GetKeyOrigin(const CKeyID& keyid, KeyOriginInfo& info) const override;\n     bool GetKey(const CKeyID& keyid, CKey& key) const override;\n     bool GetTaprootSpendData(const XOnlyPubKey& output_key, TaprootSpendData& spenddata) const override;\n-};\n \n-FlatSigningProvider Merge(const FlatSigningProvider& a, const FlatSigningProvider& b);\n+    void Merge(const FlatSigningProvider& other);\n+};\n \n /** Fillable signing provider that keeps keys in an address->secret map */\n class FillableSigningProvider : public SigningProvider"
      },
      {
        "sha": "66aeaefeb04cd1b9455a179cb0dc70935c3a8e10",
        "filename": "src/test/descriptor_tests.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/test/descriptor_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/test/descriptor_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/descriptor_tests.cpp?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -234,13 +234,17 @@ void DoCheck(const std::string& prv, const std::string& pub, const std::string&\n             // For each of the produced scripts, verify solvability, and when possible, try to sign a transaction spending it.\n             for (size_t n = 0; n < spks.size(); ++n) {\n                 BOOST_CHECK_EQUAL(ref[n], HexStr(spks[n]));\n-                BOOST_CHECK_EQUAL(IsSolvable(Merge(key_provider, script_provider), spks[n]), (flags & UNSOLVABLE) == 0);\n+                FlatSigningProvider solve_provider{key_provider};\n+                solve_provider.Merge(script_provider);\n+                BOOST_CHECK_EQUAL(IsSolvable(solve_provider, spks[n]), (flags & UNSOLVABLE) == 0);\n \n                 if (flags & SIGNABLE) {\n                     CMutableTransaction spend;\n                     spend.vin.resize(1);\n                     spend.vout.resize(1);\n-                    BOOST_CHECK_MESSAGE(SignSignature(Merge(keys_priv, script_provider), spks[n], spend, 0, 1, SIGHASH_ALL), prv);\n+                    FlatSigningProvider sign_provider{keys_priv};\n+                    sign_provider.Merge(script_provider);\n+                    BOOST_CHECK_MESSAGE(SignSignature(sign_provider, spks[n], spend, 0, 1, SIGHASH_ALL), prv);\n                 }\n \n                 /* Infer a descriptor from the generated script, and verify its solvability and that it roundtrips. */"
      },
      {
        "sha": "faa464beb75f52216e2194d69ef27e0301b801b3",
        "filename": "src/wallet/scriptpubkeyman.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/346c9eefa333fe15c917254af8ce97291102c79d/src/wallet/scriptpubkeyman.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/346c9eefa333fe15c917254af8ce97291102c79d/src/wallet/scriptpubkeyman.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/scriptpubkeyman.cpp?ref=346c9eefa333fe15c917254af8ce97291102c79d",
        "patch": "@@ -2054,7 +2054,7 @@ bool DescriptorScriptPubKeyMan::SignTransaction(CMutableTransaction& tx, const s\n         if (!coin_keys) {\n             continue;\n         }\n-        *keys = Merge(*keys, *coin_keys);\n+        keys->Merge(*coin_keys);\n     }\n \n     return ::SignTransaction(tx, keys.get(), coins, sighash, input_errors);\n@@ -2115,15 +2115,15 @@ TransactionError DescriptorScriptPubKeyMan::FillPSBT(PartiallySignedTransaction&\n         std::unique_ptr<FlatSigningProvider> keys = std::make_unique<FlatSigningProvider>();\n         std::unique_ptr<FlatSigningProvider> script_keys = GetSigningProvider(script, sign);\n         if (script_keys) {\n-            *keys = Merge(*keys, *script_keys);\n+            keys->Merge(*script_keys);\n         } else {\n             // Maybe there are pubkeys listed that we can sign for\n             script_keys = std::make_unique<FlatSigningProvider>();\n             for (const auto& pk_pair : input.hd_keypaths) {\n                 const CPubKey& pubkey = pk_pair.first;\n                 std::unique_ptr<FlatSigningProvider> pk_keys = GetSigningProvider(pubkey);\n                 if (pk_keys) {\n-                    *keys = Merge(*keys, *pk_keys);\n+                    keys->Merge(*pk_keys);\n                 }\n             }\n         }"
      }
    ]
  }
]