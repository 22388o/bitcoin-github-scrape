[
  {
    "sha": "8e594ef09325c083d20e3665fbafd9fe7306ff5a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo4ZTU5NGVmMDkzMjVjMDgzZDIwZTM2NjVmYmFmZDlmZTczMDZmZjVh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-05-31T14:55:56Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-09-01T14:08:03Z"
      },
      "message": "rpc: document bools in send()",
      "tree": {
        "sha": "979330e2799af6a516e613552d172e6eb19f5451",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/979330e2799af6a516e613552d172e6eb19f5451"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/8e594ef09325c083d20e3665fbafd9fe7306ff5a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmEviUMACgkQV/+b28ww\nEAnx2Q//YwHPOV/insWj4j3HI/nOQpvdAGjyyZxv/olTX4XdqynrIbGMViC4tY4D\nHi2f06LDDYHlPf0nCAIHeu8TAodlWlSgGHeG11wSRxY9tMwzrJLyxq/YuGU43Pda\npF1dv1g1pu5vxZGM2iVy7jnk+KeVXevGgTGzFkT1+fF/lFxxrZcslnFNdBDOk0GI\nsccAhKJzoqxcvjIMGEc9r8zsBI9rSVLhakEQqwdF1lAIvPj0RBb6DZT/ch+GWTob\nlGM+gegvkWOccOOvUgyBZb+o8STP3s5JDMs8WjYMDcAGcvj4ANnUlNajlJO7Q9vM\nRG8swXGllfsQS91ajSClNEPLqH/v96lSkxwX8SB6B4M3bqF8HM8/vryqTJxZ7i+G\n1FzM6RCImDE1t9ALmEJP60Nkrf4PSUn606ti0IN0CZAnDOIdA4OWeL3g9Bw8qwL9\nS8ONao2jagzx62B7rxFuRzftVoBq7hgp5rGg9ejGpCqBRFtamxdDkgqIYJX/J1gv\n5C4KoMZoZAA+xKMtDQDncJ/pqbHZK3t4GiBvggBgeRkNOQeJ+1/gS4gbO/uEqmGc\n3GBKcy1n1wzccyNwRs+XqRHHrIATW4V6yZCNUbG8nKRUtCks+VA1RepYE+LfpN9P\n6FGqiJPCP1bnN0uTzjVLhPjk2xVIaxm+xXP1tvHJSGeJLA+QKKE=\n=Yyes\n-----END PGP SIGNATURE-----",
        "payload": "tree 979330e2799af6a516e613552d172e6eb19f5451\nparent b3a2b8c29fda5d924726d3087535bd34af7012b6\nauthor Sjors Provoost <sjors@sprovoost.nl> 1622472956 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1630505283 +0200\n\nrpc: document bools in send()\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e594ef09325c083d20e3665fbafd9fe7306ff5a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/8e594ef09325c083d20e3665fbafd9fe7306ff5a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e594ef09325c083d20e3665fbafd9fe7306ff5a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "b3a2b8c29fda5d924726d3087535bd34af7012b6",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/b3a2b8c29fda5d924726d3087535bd34af7012b6",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/b3a2b8c29fda5d924726d3087535bd34af7012b6"
      }
    ],
    "stats": {
      "total": 6,
      "additions": 3,
      "deletions": 3
    },
    "files": [
      {
        "sha": "e81c5b9a8c6b815eb2ab4cc62753ccd90cb9d388",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 3,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/8e594ef09325c083d20e3665fbafd9fe7306ff5a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/8e594ef09325c083d20e3665fbafd9fe7306ff5a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=8e594ef09325c083d20e3665fbafd9fe7306ff5a",
        "patch": "@@ -4265,10 +4265,10 @@ static RPCHelpMan send()\n             PartiallySignedTransaction psbtx(rawTx);\n \n             // First fill transaction with our data without signing,\n-            // so external signers are not asked sign more than once.\n+            // so external signers are not asked to sign more than once.\n             bool complete;\n-            pwallet->FillPSBT(psbtx, complete, SIGHASH_DEFAULT, false, true);\n-            const TransactionError err = pwallet->FillPSBT(psbtx, complete, SIGHASH_DEFAULT, true, false);\n+            pwallet->FillPSBT(psbtx, complete, SIGHASH_DEFAULT, /* sign */ false, /* bip32derivs */ true);\n+            const TransactionError err = pwallet->FillPSBT(psbtx, complete, SIGHASH_DEFAULT, /* sign */ true, /* bip32derivs */ false);\n             if (err != TransactionError::OK) {\n                 throw JSONRPCTransactionError(err);\n             }"
      }
    ]
  },
  {
    "sha": "25aa986a53c5a2d8796e05fbe5094d3d037e188a",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyNWFhOTg2YTUzYzVhMmQ4Nzk2ZTA1ZmJlNTA5NGQzZDAzN2UxODhh",
    "commit": {
      "author": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-04-02T18:37:20Z"
      },
      "committer": {
        "name": "Sjors Provoost",
        "email": "sjors@sprovoost.nl",
        "date": "2021-09-01T14:59:01Z"
      },
      "message": "rpc: bumpfee signer support",
      "tree": {
        "sha": "2c49a06908b4fbfe370e7b30ecf2f4097d628e36",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/2c49a06908b4fbfe370e7b30ecf2f4097d628e36"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/25aa986a53c5a2d8796e05fbe5094d3d037e188a",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7ZvfetalXiMuhFJCV/+b28wwEAkFAmEvlTYACgkQV/+b28ww\nEAkRqg/+LhnCaFnipcmwI5mzuBiaUVco0yThxALsLc8BXHiymc7J4dNte6SoqWx7\nDjvp930WNID+8oz18ny7N46DrQeWbCmjpkViPqC470/Io6QFHU8ehtEKr++PggYc\nCc6GTbEXHg2NNdj8PVIIjmXXf5ib8Ko2dVyGQiJvsKKD8sNKX5meLzfupnS+63hZ\nuEu9yDjCBmnx7mG5FrcdwjKZ15yg5iklQQfV6gLNt/xewS+WW41y0jZI5iHT66T2\n+CqTnjEDXe2b8Lk7zij7RNEoUZTuoi9xDbWMdTVdhP9sUWAAI2JmsV8mFPqXrl4K\nvcZ9+mhwiHplfvR87IoapcZ9vJQzjC87GXrkIUkmk0UVIVGUS/wDe82EXoTUQmgY\nmXmxjDTKltggzNsGYEHTTehSx2fHKiy0RhYlAOWSriHjQJPFf835gXiEa86eCoEP\nguwuJF1M/zLoRRywEtpw2NLynVfrdSUqu3s1/rLu8cT+wKMb9upw4PMWFO5yXk/i\nd+5sf/42jXKJQIR6/oLRQgamVwAG2jkNdZLmlhDkgUiny93V/z72sa56WJdamydH\n/N+QUF6oUVfv2eeMx9Yy9z9nG4fLCeahzZ6si8wFWjsjmii4MtdnGYNcjS78W12Z\nMypvXxYVnEFDDHixUXSEMDg9ps7D6UUvGhJOh8H/hf7J0jUeY/s=\n=9Eur\n-----END PGP SIGNATURE-----",
        "payload": "tree 2c49a06908b4fbfe370e7b30ecf2f4097d628e36\nparent 8e594ef09325c083d20e3665fbafd9fe7306ff5a\nauthor Sjors Provoost <sjors@sprovoost.nl> 1617388640 +0200\ncommitter Sjors Provoost <sjors@sprovoost.nl> 1630508341 +0200\n\nrpc: bumpfee signer support\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25aa986a53c5a2d8796e05fbe5094d3d037e188a",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/25aa986a53c5a2d8796e05fbe5094d3d037e188a",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/25aa986a53c5a2d8796e05fbe5094d3d037e188a/comments",
    "author": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Sjors",
      "id": 10217,
      "node_id": "MDQ6VXNlcjEwMjE3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sjors",
      "html_url": "https://github.com/Sjors",
      "followers_url": "https://api.github.com/users/Sjors/followers",
      "following_url": "https://api.github.com/users/Sjors/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sjors/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sjors/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sjors/subscriptions",
      "organizations_url": "https://api.github.com/users/Sjors/orgs",
      "repos_url": "https://api.github.com/users/Sjors/repos",
      "events_url": "https://api.github.com/users/Sjors/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sjors/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "8e594ef09325c083d20e3665fbafd9fe7306ff5a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/8e594ef09325c083d20e3665fbafd9fe7306ff5a",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/8e594ef09325c083d20e3665fbafd9fe7306ff5a"
      }
    ],
    "stats": {
      "total": 50,
      "additions": 44,
      "deletions": 6
    },
    "files": [
      {
        "sha": "b679535af8f998276f8caa972e2cd07f41d5e2bb",
        "filename": "src/qt/walletmodel.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/qt/walletmodel.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/qt/walletmodel.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/qt/walletmodel.cpp?ref=25aa986a53c5a2d8796e05fbe5094d3d037e188a",
        "patch": "@@ -480,7 +480,7 @@ bool WalletModel::bumpFee(uint256 hash, uint256& new_hash)\n         return false;\n     }\n \n-    const bool create_psbt = m_wallet->privateKeysDisabled();\n+    const bool create_psbt = m_wallet->privateKeysDisabled() && !m_wallet->hasExternalSigner();\n \n     // allow a user based fee verification\n     QString questionString = create_psbt ? tr(\"Do you want to draft a transaction with fee increase?\") : tr(\"Do you want to increase the fee?\");"
      },
      {
        "sha": "9982f66c5e89557793161323e3b41b664e1d83e8",
        "filename": "src/wallet/feebumper.cpp",
        "status": "modified",
        "additions": 16,
        "deletions": 1,
        "changes": 17,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/wallet/feebumper.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/wallet/feebumper.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/feebumper.cpp?ref=25aa986a53c5a2d8796e05fbe5094d3d037e188a",
        "patch": "@@ -242,7 +242,22 @@ Result CreateRateBumpTransaction(CWallet& wallet, const uint256& txid, const CCo\n \n bool SignTransaction(CWallet& wallet, CMutableTransaction& mtx) {\n     LOCK(wallet.cs_wallet);\n-    return wallet.SignTransaction(mtx);\n+\n+    if (wallet.IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+        // Make a blank psbt\n+        PartiallySignedTransaction psbtx(mtx);\n+\n+        // First fill transaction with our data without signing,\n+        // so external signers are not asked to sign more than once.\n+        bool complete;\n+        wallet.FillPSBT(psbtx, complete, SIGHASH_ALL, false /* sign */, true /* bip32derivs */);\n+        const TransactionError err = wallet.FillPSBT(psbtx, complete, SIGHASH_ALL, true /* sign */, false  /* bip32derivs */);\n+        if (err != TransactionError::OK) return false;\n+        complete = FinalizeAndExtractPSBT(psbtx, mtx);\n+        return complete;\n+    } else {\n+        return wallet.SignTransaction(mtx);\n+    }\n }\n \n Result CommitTransaction(CWallet& wallet, const uint256& txid, CMutableTransaction&& mtx, std::vector<bilingual_str>& errors, uint256& bumped_txid)"
      },
      {
        "sha": "0e00b286ff0f7b90a228668672998dbaada236db",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 3,
        "changes": 7,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25aa986a53c5a2d8796e05fbe5094d3d037e188a/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=25aa986a53c5a2d8796e05fbe5094d3d037e188a",
        "patch": "@@ -3539,7 +3539,7 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n     std::shared_ptr<CWallet> const pwallet = GetWalletForJSONRPCRequest(request);\n     if (!pwallet) return NullUniValue;\n \n-    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !want_psbt) {\n+    if (pwallet->IsWalletFlagSet(WALLET_FLAG_DISABLE_PRIVATE_KEYS) && !pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER) && !want_psbt) {\n         throw JSONRPCError(RPC_WALLET_ERROR, \"bumpfee is not available with wallets that have private keys disabled. Use psbtbumpfee instead.\");\n     }\n \n@@ -3617,14 +3617,15 @@ static RPCHelpMan bumpfee_helper(std::string method_name)\n     // For psbtbumpfee, return the base64-encoded unsigned PSBT of the new transaction.\n     if (!want_psbt) {\n         if (!feebumper::SignTransaction(*pwallet, mtx)) {\n+            if (pwallet->IsWalletFlagSet(WALLET_FLAG_EXTERNAL_SIGNER)) {\n+                throw JSONRPCError(RPC_WALLET_ERROR, \"Transaction incomplete. Try psbtbumpfee instead.\");\n+            }\n             throw JSONRPCError(RPC_WALLET_ERROR, \"Can't sign transaction.\");\n         }\n-\n         uint256 txid;\n         if (feebumper::CommitTransaction(*pwallet, hash, std::move(mtx), errors, txid) != feebumper::Result::OK) {\n             throw JSONRPCError(RPC_WALLET_ERROR, errors[0].original);\n         }\n-\n         result.pushKV(\"txid\", txid.GetHex());\n     } else {\n         PartiallySignedTransaction psbtx(mtx);"
      },
      {
        "sha": "c5d604b7c45d9ff3d4ff0cd621f9d37d8f239a2c",
        "filename": "test/functional/wallet_signer.py",
        "status": "modified",
        "additions": 23,
        "deletions": 1,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/25aa986a53c5a2d8796e05fbe5094d3d037e188a/test/functional/wallet_signer.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/25aa986a53c5a2d8796e05fbe5094d3d037e188a/test/functional/wallet_signer.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_signer.py?ref=25aa986a53c5a2d8796e05fbe5094d3d037e188a",
        "patch": "@@ -13,6 +13,7 @@\n from test_framework.test_framework import BitcoinTestFramework\n from test_framework.util import (\n     assert_equal,\n+    assert_greater_than,\n     assert_raises_rpc_error,\n )\n \n@@ -134,7 +135,7 @@ def run_test(self):\n         assert_equal(result[1], {'success': True})\n         assert_equal(mock_wallet.getwalletinfo()[\"txcount\"], 1)\n         dest = self.nodes[0].getnewaddress(address_type='bech32')\n-        mock_psbt = mock_wallet.walletcreatefundedpsbt([], {dest:0.5}, 0, {}, True)['psbt']\n+        mock_psbt = mock_wallet.walletcreatefundedpsbt([], {dest:0.5}, 0, {'replaceable': True}, True)['psbt']\n         mock_psbt_signed = mock_wallet.walletprocesspsbt(psbt=mock_psbt, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n         mock_psbt_final = mock_wallet.finalizepsbt(mock_psbt_signed[\"psbt\"])\n         mock_tx = mock_psbt_final[\"hex\"]\n@@ -174,10 +175,31 @@ def run_test(self):\n \n         self.log.info('Test send using hww1')\n \n+        # Don't broadcast transaction yet so the RPC returns the raw hex\n         res = hww.send(outputs={dest:0.5},options={\"add_to_wallet\": False})\n         assert(res[\"complete\"])\n         assert_equal(res[\"hex\"], mock_tx)\n \n+        # Broadcast transaction so we can bump the fee\n+        hww.sendrawtransaction(res[\"hex\"])\n+\n+        self.log.info('Prepare fee bumped mock PSBT')\n+\n+        # Now that the transaction is broadcast, bump fee in mock wallet:\n+        orig_tx_id = res[\"txid\"]\n+        mock_psbt_bumped = mock_wallet.psbtbumpfee(orig_tx_id)[\"psbt\"]\n+        mock_psbt_bumped_signed = mock_wallet.walletprocesspsbt(psbt=mock_psbt_bumped, sign=True, sighashtype=\"ALL\", bip32derivs=True)\n+\n+        with open(os.path.join(self.nodes[1].cwd, \"mock_psbt\"), \"w\", encoding=\"utf8\") as f:\n+            f.write(mock_psbt_bumped_signed[\"psbt\"])\n+\n+        self.log.info('Test bumpfee using hww1')\n+\n+        # Bump fee\n+        res = hww.bumpfee(orig_tx_id)\n+        assert_greater_than(res[\"fee\"], res[\"origfee\"])\n+        assert_equal(res[\"errors\"], [])\n+\n         # # Handle error thrown by script\n         # self.set_mock_result(self.nodes[4], \"2\")\n         # assert_raises_rpc_error(-1, 'Unable to parse JSON',"
      }
    ]
  }
]