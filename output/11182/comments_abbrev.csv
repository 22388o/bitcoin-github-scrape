jnewbery,2017-08-29T15:08:38Z,"@jimpo - thanks for the review. I'm glad you like the new framework. My aim was to make test-writing easier and quicker for contributors, so I appreciate the feedback.\n\nI think I've addressed your review comments.",https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-325694720,325694720,
jnewbery,2017-09-01T17:01:58Z,rebased,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-326633134,326633134,
jnewbery,2017-09-14T14:53:11Z,rebased,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-329507649,329507649,
jnewbery,2017-09-20T13:49:46Z,rebased,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-330857445,330857445,
mess110,2017-09-21T21:12:15Z,"## p2p vs p2ps\n\nI am not 100% sure about the `p2p` and `p2ps` magic. What would somebody expect in a case where two p2p connections are made, we disconnect the first peer and call `send_message`?\n\nWhen we disconnect a peer should the `p2p` variable be updated? Maybe `p2p` should be a method which returns the first connection in the `p2ps` array.\n\nImo the behavior is not really predicta",https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-331283336,331283336,
jnewbery,2017-09-22T14:45:26Z,"Thanks for the review @mess110 . Responses:\n\n**p2p vs p2ps**: You're right that this is syntactic sugar, but I think being able to use `node.p2p` in place of `node.p2ps[0]` is useful. Most tests that use the p2p interface will only have a single p2p connection to the node, so writing `node.p2ps[0]` many times is redundant and distracts from the intent of the test. However, your feedback has co",https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-331467540,331467540,
mess110,2017-09-24T19:07:50Z,ACK https://github.com/bitcoin/bitcoin/pull/11182/commits/0cb3474b664fc04a23640614e2e8b0deae6c2d50,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-331732032,331732032,
TheBlueMatt,2017-10-18T17:36:05Z,utACK 0cb3474b664fc04a23640614e2e8b0deae6c2d50,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-337668657,337668657,
jnewbery,2017-10-20T14:00:58Z,"Thanks for the review @ryanofsky . I think I've addressed all your comments.\n\nPrevious branch: https://github.com/jnewbery/bitcoin/tree/pr11182.2\nRebased on master: https://github.com/jnewbery/bitcoin/tree/pr11182.3\nComments addressed: https://github.com/jnewbery/bitcoin/tree/pr11182.4\n\n> Growth of TestNode class seems less good, because now it's bigger, more coupled to other parts of ",https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-338215228,338215228,
jnewbery,2017-10-23T13:32:40Z,rebased,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-338659758,338659758,
MarcoFalke,2017-11-01T14:00:42Z,Sorry for letting this sit in rebase hell. You might want to wait until #11389 is merged and then ping me after rebase.,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-341114135,341114135,
jnewbery,2017-11-08T14:41:27Z,rebased on master now that #11389 is merged,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-342837449,342837449,
MarcoFalke,2017-11-08T18:01:10Z,utACK 32ae82f5c3d51a66ad4deb84819809b890664245,https://github.com/bitcoin/bitcoin/pull/11182#issuecomment-342902274,342902274,
jimpo,2017-08-28T19:14:56Z,"`self.nodes[2].p2p.block_receive_map`, right?",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135608494,135608494,test/functional/example_test.py
jimpo,2017-08-28T19:19:41Z,Where is `add_p2p_connections` defined? Is it virtual?,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135609557,135609557,test/functional/test_framework/test_node.py
jimpo,2017-08-28T19:23:04Z,It seems very common to refer to `self.nodes[i].p2p`. Maybe this method should return the new connection so the client code can assign to a local variable.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135610294,135610294,test/functional/test_framework/test_node.py
jnewbery,2017-08-28T22:03:20Z,yes. Thank you!,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135647278,135647278,test/functional/example_test.py
jnewbery,2017-08-28T22:03:36Z,Good idea. I'll add that,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135647329,135647329,test/functional/test_framework/test_node.py
jnewbery,2017-08-28T22:04:45Z,"oops. This is vestigial. I previously had an `add_p2p_connections()`, but it turned out to not be very useful. I'll fix this up. Thanks for pointing this out.",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r135647541,135647541,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:13:14Z,Probably should drop != to be pythonic and consistent with previous assert.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145731251,145731251,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:20:05Z,"This change seems to be unrelated, so maybe revert or move to another commit.\n\nAlso, it would be better `return getattr(self.rpc, name)` here to avoid making assumptions about python rpc class (like that it even has a \_\_getattr__ method), and so any exceptions thrown will be properly reported.",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145733426,145733426,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:24:52Z,Probably better to do `del self.p2ps[:]` to make sure connections are freed if there are other references to the list. Also would make it clearer that p2ps is an existing member.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145734889,145734889,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:30:39Z,"Seem to be missing net argument. Maybe just take **kwargs here to simplify this function, avoid the need to update it if NodeConn gets new options, and avoid repeating default values for services and send_version options that might get out of sync.",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145736593,145736593,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:33:00Z,Maybe add comment saying why it isn't an error for connection to be none. Saying e.g. when this condition is expected.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145737496,145737496,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:34:06Z,Probably should write `del self.p2ps[index]` since not using the return value.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145737845,145737845,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:36:06Z,Don't see NodeConnCB being used here. NODE_NETWORK import could also go away if using **kwargs as suggested below.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145738456,145738456,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:37:49Z,"Maybe call it `send_p2p_message` to be clearer and consistent with `add_p2p_connection`. This class has a lot of functionality already so it would be nice if all the new p2p attributes mentioned p2p.\n\nAnother alternative would be to drop this since `node.send_p2p_message()` hardly seems better than `node.p2p.send_message()`",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145738978,145738978,test/functional/test_framework/test_node.py
ryanofsky,2017-10-19T15:45:22Z,Weird spacing,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r145741411,145741411,test/functional/assumevalid.py
promag,2017-10-30T15:54:28Z,self.p2p.send_message and remove assert above?,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r147747540,147747540,test/functional/test_framework/test_node.py
promag,2017-10-30T15:58:55Z,And why not remove this function? It doesn't save a lot.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r147748935,147748935,test/functional/test_framework/test_node.py
ryanofsky,2017-11-03T17:35:50Z,"In commit ""[tests] Add p2p connection to TestNode""\n\nsend_message function is now send_p2p_message and these lines are changing in the next commit. I would move all these example_test.py changes out of here and into the next ""use TestNode p2p connection in tests"" commit because they would fit better there and avoid being a distraction from the more substantive changes here.",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148848225,148848225,test/functional/example_test.py
ryanofsky,2017-11-03T17:47:20Z,"In commit ""[tests] Add p2p connection to TestNode""\n\nThis is now send_p2p_message. But I agree with Jo√£o that this should be dropped. `node.send_p2p_message()` is not any more convenient than `node.p2p.send_message()`, and now tests can wind up with a confusing mix of the two calls. It's also weird that we would arbitrarily provide a wrapper for this one single NodeConnCB method, but not any of",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148851171,148851171,test/functional/test_framework/test_node.py
ryanofsky,2017-11-03T17:48:15Z,"In commit ""[tests] Add p2p connection to TestNode""\n\nDead code, should delete",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148851396,148851396,test/functional/test_framework/test_node.py
ryanofsky,2017-11-03T18:20:02Z,"In commit ""[tests] Add p2p connection to TestNode""\n\nShould drop `p2p_conn_type` and just take `p2p_conn` as an argument.\n\nHere there is two much coupling in the other direction (Tests<->TestNode rather than TestNode<->MiniNode), and the control flow is unnecessarily convoluted. Test calls add_p2p_connection, add_p2p_connection calls back into test using p2p_conn_type callback to construct ",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148859555,148859555,test/functional/test_framework/test_node.py
ryanofsky,2017-11-03T18:32:01Z,"In commit ""[tests] fix TestNode.\_\_getattr\_\_() method""\n\nNeed to change args/kwargs to name in this commit (it is done in a later commit but broken here).",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148862392,148862392,test/functional/test_framework/test_node.py
ryanofsky,2017-11-03T19:05:55Z,"In commit ""[tests] Add p2p connection to TestNode""\n\nThis is an internal implementation detail of NodeConnCB and you should add a NodeConnCB.disconnect() method to take care of it. This disconnect_p2p method can then be removed and tests call `node.p2p.disconnect()` instead of `node.disconnect_p2p()`.\n\nIf for some tests need to clear the `p2ps` array (I don't see any that do) they should ju",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r148870138,148870138,test/functional/test_framework/test_node.py
jnewbery,2017-11-06T18:28:15Z,"ok, I've removed the `send_p2p_message()` method",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149162022,149162022,test/functional/test_framework/test_node.py
jnewbery,2017-11-06T18:28:23Z,done,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149162048,149162048,test/functional/test_framework/test_node.py
jnewbery,2017-11-06T18:33:18Z,"I've left the changes to example_test.py in the first commit, since I think it's good to demonstrate the usage of the new functionality in the same commit as the functionality being added.\n\nHowever, I have changed these calls to be `node.p2p.send_message()` as suggested below.",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149163323,149163323,test/functional/example_test.py
jnewbery,2017-11-06T18:33:25Z,done,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149163350,149163350,test/functional/test_framework/test_node.py
jnewbery,2017-11-06T19:42:42Z,"yes, I agree this is better. Changed",https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149182081,149182081,test/functional/test_framework/test_node.py
jnewbery,2017-11-06T20:54:21Z,I like this as it is. TestNode is responsible for appending new `NodeConnCB`s to the `self.p2ps` array. I think it should also be responsible for removing them.,https://github.com/bitcoin/bitcoin/pull/11182#discussion_r149200254,149200254,test/functional/test_framework/test_node.py
