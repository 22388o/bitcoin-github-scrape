[
  {
    "sha": "e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzplNjlhNzk3OTkwMWQxZGY4ZjBkOTBmY2Q0ZTFhMjFlYjFmZDM4NjAy",
    "commit": {
      "author": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-14T18:39:50Z"
      },
      "committer": {
        "name": "R E Broadley",
        "email": "rebroad+github@gmail.com",
        "date": "2012-05-29T19:11:37Z"
      },
      "message": "Show the timestamp for the block.\n\nwrap lines",
      "tree": {
        "sha": "d576e0ad79d5f222fed90eac439569958624cbec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d576e0ad79d5f222fed90eac439569958624cbec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602/comments",
    "author": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "rebroad",
      "id": 1530283,
      "node_id": "MDQ6VXNlcjE1MzAyODM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1530283?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rebroad",
      "html_url": "https://github.com/rebroad",
      "followers_url": "https://api.github.com/users/rebroad/followers",
      "following_url": "https://api.github.com/users/rebroad/following{/other_user}",
      "gists_url": "https://api.github.com/users/rebroad/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rebroad/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rebroad/subscriptions",
      "organizations_url": "https://api.github.com/users/rebroad/orgs",
      "repos_url": "https://api.github.com/users/rebroad/repos",
      "events_url": "https://api.github.com/users/rebroad/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rebroad/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/f6521b66f7d4e7c3d55e0fd1d006fd6311afc18f"
      }
    ],
    "stats": {
      "total": 17,
      "additions": 13,
      "deletions": 4
    },
    "files": [
      {
        "sha": "2928eff0063db8613fe4f12934eb67bc2dee9362",
        "filename": "src/db.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602/src/db.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602/src/db.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/db.cpp?ref=e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
        "patch": "@@ -570,7 +570,9 @@ bool CTxDB::LoadBlockIndex()\n     pindexBest = mapBlockIndex[hashBestChain];\n     nBestHeight = pindexBest->nHeight;\n     bnBestChainWork = pindexBest->bnChainWork;\n-    printf(\"LoadBlockIndex(): hashBestChain=%s  height=%d\\n\", hashBestChain.ToString().substr(0,20).c_str(), nBestHeight);\n+    printf(\"LoadBlockIndex(): hashBestChain=%s  height=%d  date=%s\\n\",\n+      hashBestChain.ToString().substr(0,20).c_str(), nBestHeight,\n+      DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n     // Load bnBestInvalidWork, OK if it doesn't exist\n     ReadBestInvalidWork(bnBestInvalidWork);"
      },
      {
        "sha": "8de01c1a6ca375c730bf1bff515631455c85328c",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 3,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/e69a7979901d1df8f0d90fcd4e1a21eb1fd38602/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=e69a7979901d1df8f0d90fcd4e1a21eb1fd38602",
        "patch": "@@ -962,8 +962,13 @@ void static InvalidChainFound(CBlockIndex* pindexNew)\n         CTxDB().WriteBestInvalidWork(bnBestInvalidWork);\n         uiInterface.NotifyBlocksChanged();\n     }\n-    printf(\"InvalidChainFound: invalid block=%s  height=%d  work=%s\\n\", pindexNew->GetBlockHash().ToString().substr(0,20).c_str(), pindexNew->nHeight, pindexNew->bnChainWork.ToString().c_str());\n-    printf(\"InvalidChainFound:  current best=%s  height=%d  work=%s\\n\", hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, bnBestChainWork.ToString().c_str());\n+    printf(\"InvalidChainFound: invalid block=%s  height=%d  work=%s  date=%s\\n\",\n+      pindexNew->GetBlockHash().ToString().substr(0,20).c_str(), pindexNew->nHeight,\n+      pindexNew->bnChainWork.ToString().c_str(), DateTimeStrFormat(\"%x %H:%M:%S\",\n+      pindexNew->GetBlockTime()).c_str());\n+    printf(\"InvalidChainFound:  current best=%s  height=%d  work=%s  date=%s\\n\",\n+      hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, bnBestChainWork.ToString().c_str(),\n+      DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n     if (pindexBest && bnBestInvalidWork > bnBestChainWork + pindexBest->GetBlockWork() * 6)\n         printf(\"InvalidChainFound: WARNING: Displayed transactions may not be correct!  You may need to upgrade, or other nodes may need to upgrade.\\n\");\n }\n@@ -1606,7 +1611,9 @@ bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n     bnBestChainWork = pindexNew->bnChainWork;\n     nTimeBestReceived = GetTime();\n     nTransactionsUpdated++;\n-    printf(\"SetBestChain: new best=%s  height=%d  work=%s\\n\", hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, bnBestChainWork.ToString().c_str());\n+    printf(\"SetBestChain: new best=%s  height=%d  work=%s  date=%s\\n\",\n+      hashBestChain.ToString().substr(0,20).c_str(), nBestHeight, bnBestChainWork.ToString().c_str(),\n+      DateTimeStrFormat(\"%x %H:%M:%S\", pindexBest->GetBlockTime()).c_str());\n \n     std::string strCmd = GetArg(\"-blocknotify\", \"\");\n "
      }
    ]
  }
]