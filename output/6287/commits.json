[
  {
    "sha": "cd27bba060d91995da706bc03cd2ef39b79b49b1",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZDI3YmJhMDYwZDkxOTk1ZGE3MDZiYzAzY2QyZWYzOWI3OWI0OWIx",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T07:46:36Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T07:59:26Z"
      },
      "message": "locking: teach Clang's -Wthread-safety to cope with our scoped lock macros\n\nThis allows us to use function/variable/class attributes to specify locking\nrequisites, allowing problems to be detected during static analysis.\n\nThis works perfectly with newer Clang versions (tested with 3.3-3.7). For older\nversions (tested 3.2), it compiles fine but spews lots of false-positives.",
      "tree": {
        "sha": "b8d476c4404a36394492bf64542892cd5d28642a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/b8d476c4404a36394492bf64542892cd5d28642a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/cd27bba060d91995da706bc03cd2ef39b79b49b1",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd27bba060d91995da706bc03cd2ef39b79b49b1",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/cd27bba060d91995da706bc03cd2ef39b79b49b1",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd27bba060d91995da706bc03cd2ef39b79b49b1/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c1fb0e1075f626ea23d832b07b2070e0638f4215",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c1fb0e1075f626ea23d832b07b2070e0638f4215",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c1fb0e1075f626ea23d832b07b2070e0638f4215"
      }
    ],
    "stats": {
      "total": 8,
      "additions": 4,
      "deletions": 4
    },
    "files": [
      {
        "sha": "705647e4a55c70f9a7fa059486d2f9a49d3fdaf5",
        "filename": "src/sync.h",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/cd27bba060d91995da706bc03cd2ef39b79b49b1/src/sync.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/cd27bba060d91995da706bc03cd2ef39b79b49b1/src/sync.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/sync.h?ref=cd27bba060d91995da706bc03cd2ef39b79b49b1",
        "patch": "@@ -101,7 +101,7 @@ void PrintLockContention(const char* pszName, const char* pszFile, int nLine);\n \n /** Wrapper around boost::unique_lock<Mutex> */\n template <typename Mutex>\n-class CMutexLock\n+class SCOPED_LOCKABLE CMutexLock\n {\n private:\n     boost::unique_lock<Mutex> lock;\n@@ -129,15 +129,15 @@ class CMutexLock\n     }\n \n public:\n-    CMutexLock(Mutex& mutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) : lock(mutexIn, boost::defer_lock)\n+    CMutexLock(Mutex& mutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) EXCLUSIVE_LOCK_FUNCTION(mutexIn) : lock(mutexIn, boost::defer_lock)\n     {\n         if (fTry)\n             TryEnter(pszName, pszFile, nLine);\n         else\n             Enter(pszName, pszFile, nLine);\n     }\n \n-    CMutexLock(Mutex* pmutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false)\n+    CMutexLock(Mutex* pmutexIn, const char* pszName, const char* pszFile, int nLine, bool fTry = false) EXCLUSIVE_LOCK_FUNCTION(pmutexIn)\n     {\n         if (!pmutexIn) return;\n \n@@ -148,7 +148,7 @@ class CMutexLock\n             Enter(pszName, pszFile, nLine);\n     }\n \n-    ~CMutexLock()\n+    ~CMutexLock() UNLOCK_FUNCTION()\n     {\n         if (lock.owns_lock())\n             LeaveCritical();"
      }
    ]
  },
  {
    "sha": "2b890dd424b32320be6fc0333e67e2d7c9616065",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyYjg5MGRkNDI0YjMyMzIwYmU2ZmMwMzMzZTY3ZTJkN2M5NjE2MDY1",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T08:02:25Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T08:04:02Z"
      },
      "message": "locking: fix a few small issues uncovered by -Wthread-safety\n\n- rpcwallet: No need to lock twice here\n- openssl: Clang doesn't understand selective lock/unlock here. Ignore it.\n- CNode: Fix a legitimate (though very unlikely) locking bug.",
      "tree": {
        "sha": "c20253faf3dd5346a8c4b2686144fb59edb2bac2",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c20253faf3dd5346a8c4b2686144fb59edb2bac2"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2b890dd424b32320be6fc0333e67e2d7c9616065",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b890dd424b32320be6fc0333e67e2d7c9616065",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2b890dd424b32320be6fc0333e67e2d7c9616065",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b890dd424b32320be6fc0333e67e2d7c9616065/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cd27bba060d91995da706bc03cd2ef39b79b49b1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cd27bba060d91995da706bc03cd2ef39b79b49b1",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cd27bba060d91995da706bc03cd2ef39b79b49b1"
      }
    ],
    "stats": {
      "total": 7,
      "additions": 4,
      "deletions": 3
    },
    "files": [
      {
        "sha": "adf89554d6cca814cb6f03a6b10af7561378cce0",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 1,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b890dd424b32320be6fc0333e67e2d7c9616065/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b890dd424b32320be6fc0333e67e2d7c9616065/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=2b890dd424b32320be6fc0333e67e2d7c9616065",
        "patch": "@@ -2032,8 +2032,10 @@ void CNode::EndMessage() UNLOCK_FUNCTION(cs_vSend)\n         Fuzz(GetArg(\"-fuzzmessagestest\", 10));\n \n     if (ssSend.size() == 0)\n+    {\n+        LEAVE_CRITICAL_SECTION(cs_vSend);\n         return;\n-\n+    }\n     // Set the size\n     unsigned int nSize = ssSend.size() - CMessageHeader::HEADER_SIZE;\n     WriteLE32((uint8_t*)&ssSend[CMessageHeader::MESSAGE_SIZE_OFFSET], nSize);"
      },
      {
        "sha": "1097878b2966ec97d75f30dabc1a93bb5f24d800",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b890dd424b32320be6fc0333e67e2d7c9616065/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b890dd424b32320be6fc0333e67e2d7c9616065/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=2b890dd424b32320be6fc0333e67e2d7c9616065",
        "patch": "@@ -113,7 +113,7 @@ CTranslationInterface translationInterface;\n \n /** Init OpenSSL library multithreading support */\n static CCriticalSection** ppmutexOpenSSL;\n-void locking_callback(int mode, int i, const char* file, int line)\n+void locking_callback(int mode, int i, const char* file, int line) NO_THREAD_SAFETY_ANALYSIS\n {\n     if (mode & CRYPTO_LOCK) {\n         ENTER_CRITICAL_SECTION(*ppmutexOpenSSL[i]);"
      },
      {
        "sha": "b32f1f6b07aa30ad5333b67274407749dd93d722",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 1,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2b890dd424b32320be6fc0333e67e2d7c9616065/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2b890dd424b32320be6fc0333e67e2d7c9616065/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=2b890dd424b32320be6fc0333e67e2d7c9616065",
        "patch": "@@ -476,7 +476,6 @@ UniValue listaddressgroupings(const UniValue& params, bool fHelp)\n             addressInfo.push_back(CBitcoinAddress(address).ToString());\n             addressInfo.push_back(ValueFromAmount(balances[address]));\n             {\n-                LOCK(pwalletMain->cs_wallet);\n                 if (pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get()) != pwalletMain->mapAddressBook.end())\n                     addressInfo.push_back(pwalletMain->mapAddressBook.find(CBitcoinAddress(address).Get())->second.name);\n             }"
      }
    ]
  },
  {
    "sha": "a794284e61988a226ea39327449be9906a1b5abd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphNzk0Mjg0ZTYxOTg4YTIyNmVhMzkzMjc0NDliZTk5MDZhMWI1YWJk",
    "commit": {
      "author": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T08:08:26Z"
      },
      "committer": {
        "name": "Cory Fields",
        "email": "cory-nospam-@coryfields.com",
        "date": "2015-06-16T08:10:21Z"
      },
      "message": "locking: add a quick example of GUARDED_BY\n\nThis was chosen not because it's necessarily helpful, but because its locking\nassumptions were already correct.",
      "tree": {
        "sha": "c90ff375a862c2a8a628c5e7a7ebcaf7548228fc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c90ff375a862c2a8a628c5e7a7ebcaf7548228fc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/a794284e61988a226ea39327449be9906a1b5abd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a794284e61988a226ea39327449be9906a1b5abd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/a794284e61988a226ea39327449be9906a1b5abd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/a794284e61988a226ea39327449be9906a1b5abd/comments",
    "author": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "theuni",
      "id": 417043,
      "node_id": "MDQ6VXNlcjQxNzA0Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/417043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/theuni",
      "html_url": "https://github.com/theuni",
      "followers_url": "https://api.github.com/users/theuni/followers",
      "following_url": "https://api.github.com/users/theuni/following{/other_user}",
      "gists_url": "https://api.github.com/users/theuni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/theuni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/theuni/subscriptions",
      "organizations_url": "https://api.github.com/users/theuni/orgs",
      "repos_url": "https://api.github.com/users/theuni/repos",
      "events_url": "https://api.github.com/users/theuni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/theuni/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "2b890dd424b32320be6fc0333e67e2d7c9616065",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2b890dd424b32320be6fc0333e67e2d7c9616065",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/2b890dd424b32320be6fc0333e67e2d7c9616065"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 7,
      "deletions": 7
    },
    "files": [
      {
        "sha": "f198edffe26f28629bd514c6d65ae1585229610d",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 7,
        "deletions": 7,
        "changes": 14,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/a794284e61988a226ea39327449be9906a1b5abd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/a794284e61988a226ea39327449be9906a1b5abd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=a794284e61988a226ea39327449be9906a1b5abd",
        "patch": "@@ -72,9 +72,9 @@ struct COrphanTx {\n     CTransaction tx;\n     NodeId fromPeer;\n };\n-map<uint256, COrphanTx> mapOrphanTransactions;\n-map<uint256, set<uint256> > mapOrphanTransactionsByPrev;\n-void EraseOrphansFor(NodeId peer);\n+map<uint256, COrphanTx> mapOrphanTransactions GUARDED_BY(cs_main);;\n+map<uint256, set<uint256> > mapOrphanTransactionsByPrev GUARDED_BY(cs_main);;\n+void EraseOrphansFor(NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main);\n \n /**\n  * Returns true if there are nRequired or more blocks of minVersion or above\n@@ -523,7 +523,7 @@ CBlockTreeDB *pblocktree = NULL;\n // mapOrphanTransactions\n //\n \n-bool AddOrphanTx(const CTransaction& tx, NodeId peer)\n+bool AddOrphanTx(const CTransaction& tx, NodeId peer) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     uint256 hash = tx.GetHash();\n     if (mapOrphanTransactions.count(hash))\n@@ -553,7 +553,7 @@ bool AddOrphanTx(const CTransaction& tx, NodeId peer)\n     return true;\n }\n \n-void static EraseOrphanTx(uint256 hash)\n+void static EraseOrphanTx(uint256 hash) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     map<uint256, COrphanTx>::iterator it = mapOrphanTransactions.find(hash);\n     if (it == mapOrphanTransactions.end())\n@@ -587,7 +587,7 @@ void EraseOrphansFor(NodeId peer)\n }\n \n \n-unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans)\n+unsigned int LimitOrphanTxSize(unsigned int nMaxOrphans) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     unsigned int nEvicted = 0;\n     while (mapOrphanTransactions.size() > nMaxOrphans)\n@@ -3783,7 +3783,7 @@ std::string GetWarnings(const std::string& strFor)\n //\n \n \n-bool static AlreadyHave(const CInv& inv)\n+bool static AlreadyHave(const CInv& inv) EXCLUSIVE_LOCKS_REQUIRED(cs_main)\n {\n     switch (inv.type)\n     {"
      }
    ]
  }
]