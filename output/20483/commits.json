[
  {
    "sha": "530cd92b126e407a30ab10063b858bfb54b848e9",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzBjZDkyYjEyNmU0MDdhMzBhYjEwMDYzYjg1OGJmYjU0Yjg0OGU5",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T19:37:19Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T19:42:46Z"
      },
      "message": "test: update mempool_limit.py from feeRate to fee_rate",
      "tree": {
        "sha": "477cbadd479c94b28a15661d03a05ddaf340a32a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/477cbadd479c94b28a15661d03a05ddaf340a32a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/530cd92b126e407a30ab10063b858bfb54b848e9",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+9YjYACgkQT1chs9Dj\nkh1MFg/8DEXhtGUh00Z1PY3cKBb+r+ABZszfcFBQwAngqXMcHU27mbKYg7v1F6Ml\n1aGWpqrhEUgrNjMx3E+bDnIyv6Oe5YHsbXx+gCo4TSIAVU9SlGLJrZk64Jw4K7pt\n8kOVzmAWFAeWyZV03fJqU5Jeo7gYJvFjllgNGDkSWOAsklo/gtDyYZPBGFzOIMyl\nPtmUiRro5GN/bRZeRYosaeu6rH9Jckcku1qOUMxRtHI4DkbcnPbrdRuA2wgxrPib\nkzbwKO36t28KrsyY6hgvxhLyxH7AroueztpF51rZUSsIIG5oXeKTxrDknQVnYVS7\nxUfUN4tVFx26eUNvzDPCbm16aO/LirjiSSL6RKLhq1wHhPixRdNfobLZ/SqNQMQs\n9dDCfQp2aDAnVoEFFmBGMKjBVyutVAIt2FEJ1VAUdI9sXR8Mq4E79YoOH/HxoD76\nyNVXhU8I+et9EME/H/2YxlB5+Xj900BmcstVI09fLssAZSy2sJSHa8iKrzX7DUzp\nhEdPy+MEiwi/zIKJJ5wYqug19DxU6OTBMYSH42TBE91olZY7V70nC5/8Pkoagq9C\n3eEYerf9abDkkqhUUX45db1OU1PYMNKsGu4A4YzCXev/SNj5rES34JbFujh/IY7E\nG2jeD4uHWLixG0fw9Oh9d4OLsRoHB1VlwJUv8h2gHvBdp2jY+Xk=\n=1usU\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwICed7zj9IbEzkZHd9g4KMvn3lj2Eump0DYNBy4OcTxAuCP/wEELPrj3Wl1lR\n92muyGQyhEoI8QRfvWI48AjKTMU6pRCFcgCD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEEancgK6buIrM/h1+r81F94I8QRfvWI8\n8AhzTsd+nsYLYACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRl\ncm5pdHl3YWxsLmNvbf/wEMH3i5j0RhJwAkNfvLSMWr0I8QRfvWI48AjIFNJ3YdZ8\nwwCD3+MNLvkMji4taHR0cHM6Ly9hbGljZS5idGMuY2FsZW5kYXIub3BlbnRpbWVz\ndGFtcHMub3Jn8BDkt9guafro8IscyoFhypATCPEEX71iOPAIEftb1OnJTXcAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 477cbadd479c94b28a15661d03a05ddaf340a32a\nparent 31c9987976af8ac5ad40091256ac41a2ccb078cd\nauthor Jon Atack <jon@atack.com> 1606246639 +0100\ncommitter Jon Atack <jon@atack.com> 1606246966 +0100\n\ntest: update mempool_limit.py from feeRate to fee_rate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/530cd92b126e407a30ab10063b858bfb54b848e9",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/530cd92b126e407a30ab10063b858bfb54b848e9",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/530cd92b126e407a30ab10063b858bfb54b848e9/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31c9987976af8ac5ad40091256ac41a2ccb078cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31c9987976af8ac5ad40091256ac41a2ccb078cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31c9987976af8ac5ad40091256ac41a2ccb078cd"
      }
    ],
    "stats": {
      "total": 3,
      "additions": 2,
      "deletions": 1
    },
    "files": [
      {
        "sha": "f7447eee80547eda393f793e755f56b4ec29c024",
        "filename": "test/functional/mempool_limit.py",
        "status": "modified",
        "additions": 2,
        "deletions": 1,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/530cd92b126e407a30ab10063b858bfb54b848e9/test/functional/mempool_limit.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/530cd92b126e407a30ab10063b858bfb54b848e9/test/functional/mempool_limit.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/mempool_limit.py?ref=530cd92b126e407a30ab10063b858bfb54b848e9",
        "patch": "@@ -66,7 +66,8 @@ def run_test(self):\n         outputs = {self.nodes[0].getnewaddress() : 0.0001}\n         tx = self.nodes[0].createrawtransaction(inputs, outputs)\n         # specifically fund this tx with a fee < mempoolminfee, >= than minrelaytxfee\n-        txF = self.nodes[0].fundrawtransaction(tx, {'feeRate': relayfee})\n+        relayfee_sat_vb = relayfee * Decimal(1e8 / 1e3)  # convert from BTC/kvB to sat/vB\n+        txF = self.nodes[0].fundrawtransaction(tx, {\"fee_rate\": relayfee_sat_vb})\n         txFS = self.nodes[0].signrawtransactionwithwallet(txF['hex'])\n         assert_raises_rpc_error(-26, \"mempool min fee not met\", self.nodes[0].sendrawtransaction, txFS['hex'])\n "
      }
    ]
  },
  {
    "sha": "564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1NjRmMmY5NWQyY2U2OWM5MmU4MTQ1ZDUwZDBmY2JhMGMyYzU3MjBk",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T19:37:44Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T19:42:49Z"
      },
      "message": "test: update wallet_keypool.py from feeRate to fee_rate",
      "tree": {
        "sha": "0b573e24079a3f3e037eaae11569c72e0a347354",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/0b573e24079a3f3e037eaae11569c72e0a347354"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+9YjkACgkQT1chs9Dj\nkh1p+A/9FIME9yh09+5JOHOA+rEcoiDwrBj/O5W3afLtXeSCE45ZhJ+CKUjJKjgG\n7xuzO5fx2RE4H0vDRG7dDjHgnoCwr4DoASKEAtnJUbFLlbVNpPRvfu6dYywSftc3\nKN7+vdOXoAYoNcgd7e7XOJe/gokJzATt60JrhUsYhDpYYPgRGX67AKE0CUzygtq6\nIa/86W4ECwwesTDV/7Yk+73gAi5nC9Ot9CHuIux8Kw9Mn9uF6+Q6P2y9Kl6Ar5C+\nk51S7ITw4i4G01/dwJqhna/5vIPxayHxKwiEpvinFxHd1UTCuOla5uVAJZbVbMTv\nVx8/FP7o0NrgE1J8tMiOOHgQxlgEdnLdUTLKwRhfbEp++TBbevVLJrJKqrr9oAlK\n9jrZ83GhJyThS7zuuIEP3xe0E4rH+8nkqobfswYA0grBaXURLwQ1dpmKjrUAG2Aj\n8SyA4MS//rOXVGaVOsKO25OAHOLs+r9gjxba0f/k9f5J/eBPqyBsrWdneEXFrUq0\n32PAJDVacw7SIVP4J63AP4nwRPIIBG7y1zZlk1XfK4pBF+IWvM8EjJWXsvRPyxcJ\n16WljP0HwMDuVzRctUBmqArdtYEJwwckeWHBqEDsjV0huSrTimmJZXe9pWuN7Zch\nuw7iArEbKLnnt/9Sww0wR/ZVfi6897GsTIKq/OsfnSVxF+QkRSM=\n=IWY5\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIO41pVae3NIsEbYj1T5AKiAEk4lR3UJt6pTOr6IJR0SwCP/wEFPTQUPa68CK\n5oydzvCMWUkI8QRfvWI78Aikh5HIr+fhQQCD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQlpAUFmW6agikF8HH\nFBqBtQjxBF+9Yj7wCNDpVqP4uTeyAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQyYYsTtTuGlOEX4JxaV2OCAjxBF+9\nYjvwCMbOd7izBRdrAIPf4w0u+QyOIyJodHRwczovL2J0Yy5jYWxlbmRhci5jYXRh\nbGxheHkuY29t8BDbV5+yAbg2niH6bE9Qug0VCPEEX71iOvAIsl2VLRuIA2wAg9/j\nDS75DI4sK2h0dHBzOi8vYm9iLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 0b573e24079a3f3e037eaae11569c72e0a347354\nparent 530cd92b126e407a30ab10063b858bfb54b848e9\nauthor Jon Atack <jon@atack.com> 1606246664 +0100\ncommitter Jon Atack <jon@atack.com> 1606246969 +0100\n\ntest: update wallet_keypool.py from feeRate to fee_rate\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "530cd92b126e407a30ab10063b858bfb54b848e9",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/530cd92b126e407a30ab10063b858bfb54b848e9",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/530cd92b126e407a30ab10063b858bfb54b848e9"
      }
    ],
    "stats": {
      "total": 16,
      "additions": 8,
      "deletions": 8
    },
    "files": [
      {
        "sha": "d0a795f6b680e0b0e46bc08bdb97dd3dfbd0331d",
        "filename": "test/functional/wallet_keypool.py",
        "status": "modified",
        "additions": 8,
        "deletions": 8,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d/test/functional/wallet_keypool.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d/test/functional/wallet_keypool.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_keypool.py?ref=564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
        "patch": "@@ -159,32 +159,32 @@ def run_test(self):\n         nodes[0].generate(1)\n         destination = addr.pop()\n \n-        # Using a fee rate (10 sat / byte) well above the minimum relay rate\n+        # Using a fee rate (10 sat/vB) well above the minimum relay rate\n         # creating a 5,000 sat transaction with change should not be possible\n-        assert_raises_rpc_error(-4, \"Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.\", w2.walletcreatefundedpsbt, inputs=[], outputs=[{addr.pop(): 0.00005000}], options={\"subtractFeeFromOutputs\": [0], \"feeRate\": 0.00010})\n+        assert_raises_rpc_error(-4, \"Transaction needs a change address, but we can't generate it. Please call keypoolrefill first.\", w2.walletcreatefundedpsbt, inputs=[], outputs=[{addr.pop(): 0.00005000}], options={\"subtractFeeFromOutputs\": [0], \"fee_rate\": 10})\n \n         # creating a 10,000 sat transaction without change, with a manual input, should still be possible\n-        res = w2.walletcreatefundedpsbt(inputs=w2.listunspent(), outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"feeRate\": 0.00010})\n+        res = w2.walletcreatefundedpsbt(inputs=w2.listunspent(), outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"fee_rate\": 10})\n         assert_equal(\"psbt\" in res, True)\n \n         # creating a 10,000 sat transaction without change should still be possible\n-        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"feeRate\": 0.00010})\n+        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"fee_rate\": 10})\n         assert_equal(\"psbt\" in res, True)\n         # should work without subtractFeeFromOutputs if the exact fee is subtracted from the amount\n-        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00008900}], options={\"feeRate\": 0.00010})\n+        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00008900}], options={\"fee_rate\": 10})\n         assert_equal(\"psbt\" in res, True)\n \n         # dust change should be removed\n-        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00008800}], options={\"feeRate\": 0.00010})\n+        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00008800}], options={\"fee_rate\": 10})\n         assert_equal(\"psbt\" in res, True)\n \n         # create a transaction without change at the maximum fee rate, such that the output is still spendable:\n-        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"feeRate\": 0.0008824})\n+        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"fee_rate\": 88.24})\n         assert_equal(\"psbt\" in res, True)\n         assert_equal(res[\"fee\"], Decimal(\"0.00009706\"))\n \n         # creating a 10,000 sat transaction with a manual change address should be possible\n-        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"feeRate\": 0.00010, \"changeAddress\": addr.pop()})\n+        res = w2.walletcreatefundedpsbt(inputs=[], outputs=[{destination: 0.00010000}], options={\"subtractFeeFromOutputs\": [0], \"fee_rate\": 10, \"changeAddress\": addr.pop()})\n         assert_equal(\"psbt\" in res, True)\n \n "
      }
    ]
  },
  {
    "sha": "c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjMzhkNzg0ZWU0ZmYwYmE2NjFlOTlkNWQ3YTE2NDM4YjM2ZDA4NGJj",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T18:40:00Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T21:43:47Z"
      },
      "message": "wallet: deprecate feeRate in fundrawtxn and walletcreatefundedpsbt",
      "tree": {
        "sha": "3b94b4cbf73b8f72c33ef7828e4e603864f8da2e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/3b94b4cbf73b8f72c33ef7828e4e603864f8da2e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+9fqIACgkQT1chs9Dj\nkh3J9w//ThLLSIn45MuG3kzxC+R+Qe/aUG534deD0WtWeBNGVA6hsue5aOFKnSmb\npJNSbWrfZ1qFGtf22sY2fI1ky6NvRkVIyHhRsy0o0YW/5BCz9A5ykyFnwKBpBUEG\njJOllFEITDop0B+pIlTi82VqF2O2q1Qbthm/+9K0M7h3gqD0dfw9vcFWTYpdr/dX\nMcHTCQM4P2Eh8d6mShKinC+BAWiwLjYqjzDN77qGsHW+BzIqO9m96FKaLKmnHqjt\naZ8049Qn/GMUyFsX/1Y2hX4+we1axaVYNNxKmUcWr2QRv6N/EeXVSVpmpWUpqho9\nOwf8K64n4xZGISngl/ZFIZ+64oiYixjhNyTQdk2r21wulDSc7InVnX0FunSJb66d\n5G16k4SgKvH5v1XPIr0uRSPiPG8U+yOuFyeG047BNBTvuQANMFBW6I3nF1pvyTwR\nrSqPuiyNFzjG4DlKCovmavoTSDtZkm6KAhofh/h/f+ot4wQVAz4tDo6HSjMprhVl\nCqaMZ9IYQuyfGmDbDgl5jsW+2WxjqwljiFHzETdoNtnwMQW4Tx1apeW6O5AzNZKA\n2ewxabyS3jG3JNUBjMpWWbb9i5wZrPWmrLPVxAI5Ffi2jK2T5tEGLH1KQmBocQwo\nWPt/hvJsRB7XVEWB/ribOHxdE7IH3op1Qz8lFeIDG53xKGbQqlY=\n=N9FA\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwID1p1UL32277mfco0pAIjmZs1YuaGzmtb4m2dUQAE8UhCP/wEAh9BQvkMCVN\np8bN3FxikgsI8QRfvX6j8AgMyB38Iq0UAACD3+MNLvkMjiMiaHR0cHM6Ly9idGMu\nY2FsZW5kYXIuY2F0YWxsYXh5LmNvbf/wEIDg0L316W2yR26bMyboBgMI8QRfvX6j\n8Aghg5rVnD0xCgCD3+MNLvkMjiwraHR0cHM6Ly9ib2IuYnRjLmNhbGVuZGFyLm9w\nZW50aW1lc3RhbXBzLm9yZ//wELKbbNHAg3iorCkRdqegxqoI8QRfvX6n8AiqzDd/\nUP31LACD3+MNLvkMjikoaHR0cHM6Ly9maW5uZXkuY2FsZW5kYXIuZXRlcm5pdHl3\nYWxsLmNvbfAQxYVEyF9ceRHoLzTry9prSAjxBF+9fqTwCG65XvuCH85cAIPf4w0u\n+QyOLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5v\ncmc=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 3b94b4cbf73b8f72c33ef7828e4e603864f8da2e\nparent 564f2f95d2ce69c92e8145d50d0fcba0c2c5720d\nauthor Jon Atack <jon@atack.com> 1606243200 +0100\ncommitter Jon Atack <jon@atack.com> 1606254227 +0100\n\nwallet: deprecate feeRate in fundrawtxn and walletcreatefundedpsbt\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/564f2f95d2ce69c92e8145d50d0fcba0c2c5720d"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "2e89e91a575f654b2f59b056d0051907519a2eab",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 8,
        "deletions": 2,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "patch": "@@ -3140,6 +3140,10 @@ void FundTransaction(CWallet* const pwallet, CMutableTransaction& tx, CAmount& f\n         }\n \n         if (options.exists(\"feeRate\")) {\n+            if (!pwallet->chain().rpcEnableDeprecated(\"feeRate\")) {\n+                // feeRate is deprecated in v0.21 for removal in v0.22\n+                throw JSONRPCError(RPC_METHOD_DEPRECATED, \"The feeRate (BTC/kvB) option is deprecated and will be removed in 0.22. Use fee_rate (sat/vB) instead or restart bitcoind with -deprecatedrpc=feeRate.\");\n+            }\n             if (options.exists(\"fee_rate\")) {\n                 throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both fee_rate (\" + CURRENCY_ATOM + \"/vB) and feeRate (\" + CURRENCY_UNIT + \"/kvB)\");\n             }\n@@ -3217,7 +3221,8 @@ static RPCHelpMan fundrawtransaction()\n                                                           \"e.g. with 'importpubkey' or 'importmulti' with the 'pubkeys' or 'desc' field.\"},\n                             {\"lockUnspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n                             {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_ATOM + \"/vB.\"},\n-                            {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_UNIT + \"/kvB.\"},\n+                            {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_UNIT + \"/kvB.\\n\"\n+                                                          \"DEPRECATED, available only if config option -deprecatedrpc=feeRate is passed. Replaced by fee_rate.\"},\n                             {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"The integers.\\n\"\n                                                           \"The fee will be equally deducted from the amount of each specified output.\\n\"\n                                                           \"Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\"\n@@ -4380,7 +4385,8 @@ static RPCHelpMan walletcreatefundedpsbt()\n                             {\"includeWatching\", RPCArg::Type::BOOL, /* default */ \"true for watch-only wallets, otherwise false\", \"Also select inputs which are watch only\"},\n                             {\"lockUnspents\", RPCArg::Type::BOOL, /* default */ \"false\", \"Lock selected unspent outputs\"},\n                             {\"fee_rate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_ATOM + \"/vB.\"},\n-                            {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_UNIT + \"/kvB.\"},\n+                            {\"feeRate\", RPCArg::Type::AMOUNT, /* default */ \"not set, fall back to wallet fee estimation\", \"Specify a fee rate in \" + CURRENCY_UNIT + \"/kvB.\\n\"\n+                                                          \"DEPRECATED, available only if config option -deprecatedrpc=feeRate is passed. Replaced by fee_rate.\"},\n                             {\"subtractFeeFromOutputs\", RPCArg::Type::ARR, /* default */ \"empty array\", \"The outputs to subtract the fee from.\\n\"\n                                                           \"The fee will be equally deducted from the amount of each specified output.\\n\"\n                                                           \"Those recipients will receive less bitcoins than you enter in their corresponding amount field.\\n\""
      },
      {
        "sha": "fc0a2f1d3cf6d9a0bb4661591bed35bd5ec41ae7",
        "filename": "test/functional/rpc_fundrawtransaction.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/rpc_fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/rpc_fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_fundrawtransaction.py?ref=c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "patch": "@@ -31,7 +31,7 @@ def set_test_params(self):\n         self.setup_clean_chain = True\n         # This test isn't testing tx relay. Set whitelist on the peers for\n         # instant tx relay.\n-        self.extra_args = [['-whitelist=noban@127.0.0.1']] * self.num_nodes\n+        self.extra_args = [['-whitelist=noban@127.0.0.1', '-deprecatedrpc=feeRate']] * self.num_nodes\n \n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()"
      },
      {
        "sha": "09ce8b07bcdf364c5989901619116e38a6bcd342",
        "filename": "test/functional/rpc_psbt.py",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/rpc_psbt.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/rpc_psbt.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_psbt.py?ref=c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "patch": "@@ -28,7 +28,7 @@ def set_test_params(self):\n         self.num_nodes = 3\n         self.extra_args = [\n             [\"-walletrbf=1\"],\n-            [\"-walletrbf=0\", \"-changetype=legacy\"],\n+            [\"-walletrbf=0\", \"-changetype=legacy\", \"-deprecatedrpc=feeRate\"],\n             []\n         ]\n         self.supports_cli = False"
      },
      {
        "sha": "78d408fd463c8bfc73f7e70e570939d0f2dc05fb",
        "filename": "test/functional/wallet_basic.py",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/wallet_basic.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/wallet_basic.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_basic.py?ref=c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "patch": "@@ -23,6 +23,7 @@ def set_test_params(self):\n         self.num_nodes = 4\n         self.extra_args = [[\n             \"-acceptnonstdtxn=1\",\n+            \"-deprecatedrpc=feeRate\",\n         ]] * self.num_nodes\n         self.setup_clean_chain = True\n         self.supports_cli = False"
      },
      {
        "sha": "d5c65dd8a165a3539fdc6c8253fc1d9ed03b4e7d",
        "filename": "test/functional/wallet_send.py",
        "status": "modified",
        "additions": 1,
        "deletions": 4,
        "changes": 5,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/wallet_send.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c38d784ee4ff0ba661e99d5d7a16438b36d084bc/test/functional/wallet_send.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/wallet_send.py?ref=c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "patch": "@@ -20,10 +20,7 @@ class WalletSendTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         # whitelist all peers to speed up tx relay / mempool sync\n-        self.extra_args = [\n-            [\"-whitelist=127.0.0.1\",\"-walletrbf=1\"],\n-            [\"-whitelist=127.0.0.1\",\"-walletrbf=1\"],\n-        ]\n+        self.extra_args = [[\"-whitelist=noban@127.0.0.1\", \"-walletrbf=1\", \"-deprecatedrpc=feeRate\"]] * self.num_nodes\n         getcontext().prec = 8 # Satoshi precision for Decimal\n \n     def skip_test_if_missing_module(self):"
      }
    ]
  },
  {
    "sha": "dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpkY2Q2ZDdhNWJlOTA5MmE4ZTRhN2Q3YjUwOWFiODAwMGUzYTc3ODgx",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T20:27:50Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2020-11-24T21:44:07Z"
      },
      "message": "test: add feeRate tests to rpc_deprecate.py\n\nbest reviewed with -w",
      "tree": {
        "sha": "e330847fdb549ea56f43b729c529e667c8fe6bcf",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e330847fdb549ea56f43b729c529e667c8fe6bcf"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAl+9frkACgkQT1chs9Dj\nkh1qGxAAxkyFsH3L7jf4UzAoe+0Gsfu90yJwdRgXmIySPQKZIAgxPFHsfiKT79K2\nGw84PxjAmPbUHW8cFihLZ2jKdl+widdstOh515QeTW5RLhaVwRTuRrybKNmxr69R\n+gpUriC2gho+l9o6aluDxMLHmNyXcZtPjoHRwoDy9AUzdcQBJ341eOOG6Lryg453\nsYDw8vLLjcYooZoe3arSmkDgysHxTB9d93KjDUP+sIMDG1YWV+6RPccuspM4K3Ny\nJnbw2fa7TnTW9PImnH/NlL9chjytWNauA1hP4DLE9YCnzeWjJZgbun8Z6JvvEx7F\nDkLCT7RjOGjkbpyEyulbJdtXfKwJUnvesXhmZBtePPvlOhxu2oyg57OsMVLeaKWI\nz37U94yVmXfK44wX8+D1jph1JZM4oN4gniXWLcuI43NV1Xb+736uh9mfIgCdB9n3\n1bB0yQE3JZJ+0KSJWVN++/AROeoXf9dVqwN/RDjigX5H7vNIDoINHhOTcSWERTWP\nB2Gx+9Wmqkf4P/PWGyaCIiI2CMvkhJiys0/47a9NqRL348IU2abrLIGo0WBL1Qc1\nezEwkxIaTPfuZTm65pbbuqQYIIifIk/6OmrrXLlh5y5mftsnukouOjeE4W8n5Z9i\no6iOTUlAHLEYO/FlOVOQ+CZqWxjdR3+Oqbs/kts7GgGEjIrZvyQ=\n=B7ux\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIE/mvN9nspIUIXd3dgnwHOERvFx70tRJSOsJd6UiUgYhCP/wEBBlaxfr4I5y\nJqzgTSXdzOYI8QRfvX678Aju6JkNGOsvaACD3+MNLvkMji4taHR0cHM6Ly9hbGlj\nZS5idGMuY2FsZW5kYXIub3BlbnRpbWVzdGFtcHMub3Jn//AQOyRNMm3bLkGoPGoO\ndCF7NQjxBF+9fr7wCCoXfK29TMyaAIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t//AQh7tltnJyHCLvD6DFyM0CSwjxBF+9\nfrrwCCrVTfuJEV12AIPf4w0u+QyOLCtodHRwczovL2JvYi5idGMuY2FsZW5kYXIu\nb3BlbnRpbWVzdGFtcHMub3Jn8BCv3qtzPaqRcV6tfXVJo+nSCPEEX71+uvAIJVot\nAgRlZfAAg9/jDS75DI4jImh0dHBzOi8vYnRjLmNhbGVuZGFyLmNhdGFsbGF4eS5j\nb20=\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree e330847fdb549ea56f43b729c529e667c8fe6bcf\nparent c38d784ee4ff0ba661e99d5d7a16438b36d084bc\nauthor Jon Atack <jon@atack.com> 1606249670 +0100\ncommitter Jon Atack <jon@atack.com> 1606254247 +0100\n\ntest: add feeRate tests to rpc_deprecate.py\n\nbest reviewed with -w\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c38d784ee4ff0ba661e99d5d7a16438b36d084bc",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c38d784ee4ff0ba661e99d5d7a16438b36d084bc"
      }
    ],
    "stats": {
      "total": 76,
      "additions": 48,
      "deletions": 28
    },
    "files": [
      {
        "sha": "994b90d981bf9156f82003ef7f69fefe91ef5df6",
        "filename": "test/functional/rpc_deprecated.py",
        "status": "modified",
        "additions": 48,
        "deletions": 28,
        "changes": 76,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881/test/functional/rpc_deprecated.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881/test/functional/rpc_deprecated.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/rpc_deprecated.py?ref=dcd6d7a5be9092a8e4a7d7b509ab8000e3a77881",
        "patch": "@@ -10,7 +10,7 @@ class DeprecatedRpcTest(BitcoinTestFramework):\n     def set_test_params(self):\n         self.num_nodes = 2\n         self.setup_clean_chain = True\n-        self.extra_args = [[], ['-deprecatedrpc=bumpfee']]\n+        self.extra_args = [['-deprecatedrpc=feeRate'], ['-deprecatedrpc=bumpfee']]\n \n     def run_test(self):\n         # This test should be used to verify correct behaviour of deprecated\n@@ -25,36 +25,56 @@ def run_test(self):\n         # self.nodes[1].generate(1)\n \n         if self.is_wallet_compiled():\n-            self.log.info(\"Test bumpfee RPC\")\n             self.nodes[0].generate(101)\n-            self.nodes[0].createwallet(wallet_name='nopriv', disable_private_keys=True)\n-            noprivs0 = self.nodes[0].get_wallet_rpc('nopriv')\n-            w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n-            self.nodes[1].createwallet(wallet_name='nopriv', disable_private_keys=True)\n-            noprivs1 = self.nodes[1].get_wallet_rpc('nopriv')\n-\n-            address = w0.getnewaddress()\n-            desc = w0.getaddressinfo(address)['desc']\n-            change_addr = w0.getrawchangeaddress()\n-            change_desc = w0.getaddressinfo(change_addr)['desc']\n-            txid = w0.sendtoaddress(address=address, amount=10)\n-            vout = find_vout_for_address(w0, txid, address)\n-            self.nodes[0].generate(1)\n-            rawtx = w0.createrawtransaction([{'txid': txid, 'vout': vout}], {w0.getnewaddress(): 5}, 0, True)\n-            rawtx = w0.fundrawtransaction(rawtx, {'changeAddress': change_addr})\n-            signed_tx = w0.signrawtransactionwithwallet(rawtx['hex'])['hex']\n-\n-            noprivs0.importmulti([{'desc': desc, 'timestamp': 0}, {'desc': change_desc, 'timestamp': 0, 'internal': True}])\n-            noprivs1.importmulti([{'desc': desc, 'timestamp': 0}, {'desc': change_desc, 'timestamp': 0, 'internal': True}])\n-\n-            txid = w0.sendrawtransaction(signed_tx)\n-            self.sync_all()\n-\n-            assert_raises_rpc_error(-32, 'Using bumpfee with wallets that have private keys disabled is deprecated. Use psbtbumpfee instead or restart bitcoind with -deprecatedrpc=bumpfee. This functionality will be removed in 0.22', noprivs0.bumpfee, txid)\n-            bumped_psbt = noprivs1.bumpfee(txid)\n-            assert 'psbt' in bumped_psbt\n+            self.test_feeRate_deprecation()\n+            self.test_bumpfee_privkey_deprecation()\n         else:\n             self.log.info(\"No tested deprecated RPC methods\")\n \n+    def test_feeRate_deprecation(self):\n+        self.log.info(\"Test feeRate deprecation in RPCs fundrawtransaction and walletcreatefundedpsbt\")\n+        inputs = []\n+        outputs = {self.nodes[0].getnewaddress() : 1}\n+        rawtx = self.nodes[1].createrawtransaction(inputs, outputs)\n+\n+        # Node 0 with -deprecatedrpc=feeRate can still use deprecated feeRate option.\n+        self.nodes[0].fundrawtransaction(rawtx, {\"feeRate\": 0.0001})\n+        self.nodes[0].walletcreatefundedpsbt(inputs, outputs, 0, {\"feeRate\": 0.0001})\n+\n+        # Node 1 cannot use deprecated feeRate option.\n+        msg = \"The feeRate (BTC/kvB) option is deprecated and will be removed in 0.22. Use fee_rate (sat/vB) instead or restart bitcoind with -deprecatedrpc=feeRate.\"\n+        assert_raises_rpc_error(-32, msg, self.nodes[1].fundrawtransaction, rawtx, {\"feeRate\": 0.0001})\n+        assert_raises_rpc_error(-32, msg, self.nodes[1].walletcreatefundedpsbt, inputs, outputs, 0, {\"feeRate\": 0.1})\n+\n+    def test_bumpfee_privkey_deprecation(self):\n+        self.log.info(\"Test bumpfee RPC\")\n+        self.nodes[0].createwallet(wallet_name='nopriv', disable_private_keys=True)\n+        noprivs0 = self.nodes[0].get_wallet_rpc('nopriv')\n+        w0 = self.nodes[0].get_wallet_rpc(self.default_wallet_name)\n+        self.nodes[1].createwallet(wallet_name='nopriv', disable_private_keys=True)\n+        noprivs1 = self.nodes[1].get_wallet_rpc('nopriv')\n+\n+        address = w0.getnewaddress()\n+        desc = w0.getaddressinfo(address)['desc']\n+        change_addr = w0.getrawchangeaddress()\n+        change_desc = w0.getaddressinfo(change_addr)['desc']\n+        txid = w0.sendtoaddress(address=address, amount=10)\n+        vout = find_vout_for_address(w0, txid, address)\n+        self.nodes[0].generate(1)\n+        rawtx = w0.createrawtransaction([{'txid': txid, 'vout': vout}], {w0.getnewaddress(): 5}, 0, True)\n+        rawtx = w0.fundrawtransaction(rawtx, {'changeAddress': change_addr})\n+        signed_tx = w0.signrawtransactionwithwallet(rawtx['hex'])['hex']\n+\n+        noprivs0.importmulti([{'desc': desc, 'timestamp': 0}, {'desc': change_desc, 'timestamp': 0, 'internal': True}])\n+        noprivs1.importmulti([{'desc': desc, 'timestamp': 0}, {'desc': change_desc, 'timestamp': 0, 'internal': True}])\n+\n+        txid = w0.sendrawtransaction(signed_tx)\n+        self.sync_all()\n+\n+        assert_raises_rpc_error(-32, 'Using bumpfee with wallets that have private keys disabled is deprecated. Use psbtbumpfee instead or restart bitcoind with -deprecatedrpc=bumpfee. This functionality will be removed in 0.22', noprivs0.bumpfee, txid)\n+        bumped_psbt = noprivs1.bumpfee(txid)\n+        assert 'psbt' in bumped_psbt\n+\n+\n if __name__ == '__main__':\n     DeprecatedRpcTest().main()"
      }
    ]
  }
]