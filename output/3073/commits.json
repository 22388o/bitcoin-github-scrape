[
  {
    "sha": "23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoyM2UwZDQ1Yjc5ZjE4ODVhMzE4ZjllZWQ2YTdjNWNlYjZlNDQ5MjA2",
    "commit": {
      "author": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-09T12:47:06Z"
      },
      "committer": {
        "name": "Wladimir J. van der Laan",
        "email": "laanwj@gmail.com",
        "date": "2013-10-09T13:01:00Z"
      },
      "message": "util: remove DataDir caching",
      "tree": {
        "sha": "05e0553f792ea6b5ec40d56e08b40bf93d41d415",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/05e0553f792ea6b5ec40d56e08b40bf93d41d415"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/23e0d45b79f1885a318f9eed6a7c5ceb6e449206/comments",
    "author": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "laanwj",
      "id": 126646,
      "node_id": "MDQ6VXNlcjEyNjY0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/126646?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/laanwj",
      "html_url": "https://github.com/laanwj",
      "followers_url": "https://api.github.com/users/laanwj/followers",
      "following_url": "https://api.github.com/users/laanwj/following{/other_user}",
      "gists_url": "https://api.github.com/users/laanwj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/laanwj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/laanwj/subscriptions",
      "organizations_url": "https://api.github.com/users/laanwj/orgs",
      "repos_url": "https://api.github.com/users/laanwj/repos",
      "events_url": "https://api.github.com/users/laanwj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/laanwj/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "26002aa444d4ee4986d623e0ad45cca02e803bc5",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/26002aa444d4ee4986d623e0ad45cca02e803bc5",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/26002aa444d4ee4986d623e0ad45cca02e803bc5"
      }
    ],
    "stats": {
      "total": 32,
      "additions": 4,
      "deletions": 28
    },
    "files": [
      {
        "sha": "bc53d9cd5cc7501341f59ad3918503abeedafec2",
        "filename": "src/util.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 27,
        "changes": 30,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23e0d45b79f1885a318f9eed6a7c5ceb6e449206/src/util.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23e0d45b79f1885a318f9eed6a7c5ceb6e449206/src/util.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.cpp?ref=23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
        "patch": "@@ -1033,34 +1033,18 @@ boost::filesystem::path GetDefaultDataDir()\n         pathRet = fs::path(pszHome);\n #ifdef MAC_OSX\n     // Mac\n-    pathRet /= \"Library/Application Support\";\n-    fs::create_directory(pathRet);\n-    return pathRet / \"Bitcoin\";\n+    return pathRet / \"Library/Application Support/Bitcoin\";\n #else\n     // Unix\n     return pathRet / \".bitcoin\";\n #endif\n #endif\n }\n \n-static boost::filesystem::path pathCached[CChainParams::MAX_NETWORK_TYPES+1];\n-static CCriticalSection csPathCached;\n-\n-const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n+const boost::filesystem::path GetDataDir(bool fNetSpecific)\n {\n     namespace fs = boost::filesystem;\n-\n-    LOCK(csPathCached);\n-\n-    int nNet = CChainParams::MAX_NETWORK_TYPES;\n-    if (fNetSpecific) nNet = Params().NetworkID();\n-\n-    fs::path &path = pathCached[nNet];\n-\n-    // This can be called during exceptions by LogPrintf(), so we cache the\n-    // value so we don't have to do memory allocations after that.\n-    if (!path.empty())\n-        return path;\n+    fs::path path;\n \n     if (mapArgs.count(\"-datadir\")) {\n         path = fs::system_complete(mapArgs[\"-datadir\"]);\n@@ -1079,12 +1063,6 @@ const boost::filesystem::path &GetDataDir(bool fNetSpecific)\n     return path;\n }\n \n-void ClearDatadirCache()\n-{\n-    std::fill(&pathCached[0], &pathCached[CChainParams::MAX_NETWORK_TYPES+1],\n-              boost::filesystem::path());\n-}\n-\n boost::filesystem::path GetConfigFile()\n {\n     boost::filesystem::path pathConfigFile(GetArg(\"-conf\", \"bitcoin.conf\"));\n@@ -1114,8 +1092,6 @@ void ReadConfigFile(map<string, string>& mapSettingsRet,\n         }\n         mapMultiSettingsRet[strKey].push_back(it->value[0]);\n     }\n-    // If datadir is changed in .conf file:\n-    ClearDatadirCache();\n }\n \n boost::filesystem::path GetPidFile()"
      },
      {
        "sha": "bc43d5f414b2a2373cecae4fd25aa4bb3dfaedd9",
        "filename": "src/util.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/23e0d45b79f1885a318f9eed6a7c5ceb6e449206/src/util.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/23e0d45b79f1885a318f9eed6a7c5ceb6e449206/src/util.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util.h?ref=23e0d45b79f1885a318f9eed6a7c5ceb6e449206",
        "patch": "@@ -204,7 +204,7 @@ int RaiseFileDescriptorLimit(int nMinFD);\n void AllocateFileRange(FILE *file, unsigned int offset, unsigned int length);\n bool RenameOver(boost::filesystem::path src, boost::filesystem::path dest);\n boost::filesystem::path GetDefaultDataDir();\n-const boost::filesystem::path &GetDataDir(bool fNetSpecific = true);\n+const boost::filesystem::path GetDataDir(bool fNetSpecific = true);\n boost::filesystem::path GetConfigFile();\n boost::filesystem::path GetPidFile();\n #ifndef WIN32"
      }
    ]
  }
]