MarcoFalke,2019-03-05T17:23:52Z,"Have you hit this issue in the wild? If so, mind to include a traceback?",https://github.com/bitcoin/bitcoin/pull/15538#issuecomment-469772261,469772261,
promag,2019-03-06T12:11:27Z,"utACK after @MarcoFalke https://github.com/bitcoin/bitcoin/pull/15538#discussion_r262600574.\n\nIIRC it was already suggested bump fee could add an input to support the increased fee - which could result in a change output. Is there something wrong with this approach?",https://github.com/bitcoin/bitcoin/pull/15538#issuecomment-470084820,470084820,
ryanofsky,2019-03-06T12:18:39Z,"> IIRC it was already suggested bump fee could add an input to support the increased fee - which could result in a change output. Is there something wrong with this approach?\n\nIt's a good approach, but this PR is making a simple 3 line change to fix an invalid assumption made by a python test. Changing bumpfee to add inputs would be adding a new feature and would be a pretty indirect way of fi",https://github.com/bitcoin/bitcoin/pull/15538#issuecomment-470086701,470086701,
instagibbs,2019-03-06T12:27:12Z,"It's a feature I've wanted to do for a while but it required significant\nrefactoring to do it the Right Way previously. Hoping someone in the\nresidency can tackle it maybe.\n\nOn Wed, Mar 6, 2019, 7:20 AM Russell Yanofsky <notifications@github.com>\nwrote:\n\n> IIRC it was already suggested bump fee could add an input to support the\n> increased fee - which could result in a change output. Is th",https://github.com/bitcoin/bitcoin/pull/15538#issuecomment-470088962,470088962,
promag,2019-03-06T12:27:28Z,"@ryanofsky sure, not saying otherwise!",https://github.com/bitcoin/bitcoin/pull/15538#issuecomment-470089043,470089043,
ryanofsky,2019-03-05T16:49:57Z,"This is pretty different from the other tests, and it took me a minute to figure out how it worked.\n\nWould add comment that `spend_one_input` can't be used here because it doesn't create metadata, so getbalance check and generate call are needed to create a transaction with metadata that is guaranteed to have a change output.",https://github.com/bitcoin/bitcoin/pull/15538#discussion_r262585215,262585215,test/functional/wallet_bumpfee.py
MarcoFalke,2019-03-05T17:24:50Z,I'd prefer to use the `assert_bla` helpers. Otherwise this is extremely difficult to debug in case of a failure.,https://github.com/bitcoin/bitcoin/pull/15538#discussion_r262600574,262600574,test/functional/wallet_bumpfee.py
ryanofsky,2019-03-06T12:28:17Z,"re: https://github.com/bitcoin/bitcoin/pull/15538#discussion_r262600574\n\n> I'd prefer to use the assert_bla helpers. Otherwise this is extremely difficult to debug in case of a failure.\n\nThis is making an assertion about the test environment, and if it fails it probably means there is a bug in the test setup, not a bug in bitcoin. So I thought plain assert was reasonable here. Could go eit",https://github.com/bitcoin/bitcoin/pull/15538#discussion_r262919135,262919135,test/functional/wallet_bumpfee.py
