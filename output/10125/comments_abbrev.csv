TheBlueMatt,2017-03-30T19:09:28Z,Made the wait still wake up every 200ms to address the sigTERM issue.,https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290514141,290514141,
jonasschnelli,2017-03-30T19:17:43Z,The QT part would require something like this (though incomplete): https://github.com/jonasschnelli/bitcoin/commit/4ed60ffcbb6e95703d6f0bf96d5f0d54e24b2fa7,https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290516235,290516235,
TheBlueMatt,2017-03-30T19:18:28Z,@jonasschnelli is there a way to do that without adding a new thread? Some kind of signal in addition to the current polling method?,https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290516435,290516435,
laanwj,2017-03-31T12:31:12Z,"Yes, you could use a signal on the uiInterface that sends a Qt signal, similar to how the other signals for ClientModel work.\n",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290699373,290699373,
jonasschnelli,2017-03-31T13:01:35Z,"> Yes, you could use a signal on the uiInterface that sends a Qt signal, similar to how the other signals for ClientModel work.\n\nYes. That would be much better. I'll write a commit soon.",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290705678,290705678,
laanwj,2017-03-31T13:10:41Z,"> Yes. That would be much better. I'll write a commit soon.\n\nGreat!\n~~I guess the uiInterface signal could be called in WaitForShutdown after the wait loop exits. This means we don't need to do any polling of fRequestShutdown ourselves in the GUI anymore. Much cleaner indeed.~~\nnever mind: we don't use WaitForShutdown when the GUI runs. Need to keep the polling for the same reason WaitForS",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290707722,290707722,
TheBlueMatt,2017-03-31T17:22:47Z,"Honestly I have no idea why travis is failing here. If you remove the cv notify_all() it works fine, the second you add it back travis hangs and I cannot reproduce the issue locally.",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290774893,290774893,
jnewbery,2017-03-31T20:23:59Z,"I did a run of travis with the create_cache.py script commented out (so the test_runner script just launches the test cases immediately) and the tests seem to fail intermittently. Travis logs here: https://travis-ci.org/jnewbery/bitcoin/builds/217310887\n\nFailure is:\n\n```\nraceback (most recent call last):\n  File ""/home/travis/build/jnewbery/bitcoin/build/bitcoin-x86_64-unknown-linux-gnu",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290820402,290820402,
jonasschnelli,2017-03-31T21:22:08Z,Maybe this Qt approach makes more sense: https://github.com/jonasschnelli/bitcoin/commit/d356512c054da926fac5a8a3f5c23721e41eaf9d,https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290833418,290833418,
TheBlueMatt,2017-04-01T05:21:58Z,"@jonasschnelli cool, thanks. Sadly, in the signal handlers we can't call such a function, so we need to have both polling and a notification. I'll look into that later today.\n\nOn March 31, 2017 11:22:12 PM GMT+02:00, Jonas Schnelli <notifications@github.com> wrote:\n>Maybe this Qt approach makes more sense:\n>https://github.com/jonasschnelli/bitcoin/commit/d356512c054da926fac5a8a3f5c23721e41eaf9",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290896427,290896427,
jonasschnelli,2017-04-01T05:46:24Z,"@TheBlueMatt: if you want to execute the function in the main GUI thread, add another Qt signal and use Q_EMIT (emit it from the uiInterface Signal listener).",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-290897590,290897590,
TheBlueMatt,2017-04-11T22:38:49Z,"Closing. I spent some time debugging further but dont think its a huge deal to sleep 200ms and it looks annoying to fix, at best. Someone else is welcome to pick this up if they feel so inclined.",https://github.com/bitcoin/bitcoin/pull/10125#issuecomment-293420837,293420837,
JeremyRubin,2017-03-30T18:25:24Z,Should this get mirrored to HandleSIGTERM?,https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109001244,109001244,src/init.cpp
JeremyRubin,2017-03-30T18:28:55Z,"not really worth doing, but you could also wrap this in an initial `if (!ShutdownRequested()` so as not to take the lock.",https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109002157,109002157,src/init.cpp
laanwj,2017-03-30T18:48:08Z,Are you sure this is allowed in signal handlers? From what I remember that is the reason for the circuitous polling. If not we need a special path for signals and one for the rest (like AbortNode).,https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109006972,109006972,src/init.cpp
ryanofsky,2017-03-31T14:15:30Z,Should acquire the lock before setting fRequestShutdown?,https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109169292,109169292,src/init.cpp
TheBlueMatt,2017-03-31T17:24:34Z,"Could, doesnt matter though because fRequestShutdown is atomic.",https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109209609,109209609,src/init.cpp
theuni,2017-03-31T19:24:15Z,Use a CThreadInterrupt here instead? This is exactly what it's meant to be used for :),https://github.com/bitcoin/bitcoin/pull/10125#discussion_r109233245,109233245,src/init.cpp
