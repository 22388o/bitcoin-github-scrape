[
  {
    "sha": "c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjNDY5ZWNmMjJlOGFiNTVhY2YyY2Y4ZmM2ZmNmMzQ0MTViNTQxZjc2",
    "commit": {
      "author": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-07-02T02:26:47Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-07-08T13:27:12Z"
      },
      "message": "net: Remove unused interrupt from SendMessages",
      "tree": {
        "sha": "da5d7ebdb294fce04a8834a4ac90f3dcf4552d3d",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/da5d7ebdb294fce04a8834a4ac90f3dcf4552d3d"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAltCETATHGZhbnF1YWtl\nQGdtYWlsLmNvbQAKCRAu659cwJUmwbHZD/0Xey/bzC2MZm6A5A9hFrs0ofRjGQzX\nZcUUWDKe74ie+xJvZSXCQCjazfgUepbwafooHI/BZojoj77Z9QzfsR5UrLov/zkl\nmgKh3aB5sYlgBNNGiwgKvW4Dr7Mc+iakWTrwMwJQv3+vDGm+6Dk2Hfw88+cSOO5c\nQaIzLRAfZkBOUSPora4D+0xDnKh2XFqg5TbVJb//WpfVf8SzDXCEL2J53WlnjQoc\njIt3jSXR7SpPFZu9TB5w6lxOZYFoj4pSCeEnhaS3b+ZZ5+hym6H82dRM7q+Pd7WC\nTXSKGHym3asY8sm2rgQiePlxinLuKm8bZTRV1p7JUheLDItngOMuqj4Y4MVuVG45\naNNC3oLUXAK8vWn9PzXeJ7ugICojPSAvUHc+ugsqYrGKTheiJWvhESsgsRdfLeJw\nYNAKHJndVwQuxxqz/tsbyu8aP8ceLyHMypUVEfgpWN087PRJ+Um+wOpaC/GOf28c\n97iZI9Et9z4ghnFAkYz3dTPE3RYJ1nQPb0ldhWA9GWGGDLYldHTThUvCssO0DAd2\nsVGQKIMyQGpxndELeYgeHqRd2IKYi2rHmpOWOAsZ+XzukQrTOR59dHs/UPA+Rjml\nq1Qd4ZRFGxC9OjUwVA6N1foFUpE28G7Irb7EyoizaAX7hPvs75FP7VeEUdRG/BAE\nzj/UQPTWRL5F7g==\n=nrMj\n-----END PGP SIGNATURE-----",
        "payload": "tree da5d7ebdb294fce04a8834a4ac90f3dcf4552d3d\nparent 88a15ebc8d317a6fd4851adb344ff944d497284c\nauthor fanquake <fanquake@gmail.com> 1530498407 +0800\ncommitter fanquake <fanquake@gmail.com> 1531056432 +0800\n\nnet: Remove unused interrupt from SendMessages\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/comments",
    "author": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "88a15ebc8d317a6fd4851adb344ff944d497284c",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/88a15ebc8d317a6fd4851adb344ff944d497284c",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/88a15ebc8d317a6fd4851adb344ff944d497284c"
      }
    ],
    "stats": {
      "total": 40,
      "additions": 20,
      "deletions": 20
    },
    "files": [
      {
        "sha": "b24ceb67d6adc9c774e720e415b27265f189c2e2",
        "filename": "src/net.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.cpp?ref=c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "patch": "@@ -2042,7 +2042,7 @@ void CConnman::ThreadMessageHandler()\n             // Send messages\n             {\n                 LOCK(pnode->cs_sendProcessing);\n-                m_msgproc->SendMessages(pnode, flagInterruptMsgProc);\n+                m_msgproc->SendMessages(pnode);\n             }\n \n             if (flagInterruptMsgProc)"
      },
      {
        "sha": "697aa37a584119fee7a997ae2fee465b599ff8ce",
        "filename": "src/net.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net.h?ref=c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "patch": "@@ -466,7 +466,7 @@ class NetEventsInterface\n {\n public:\n     virtual bool ProcessMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n-    virtual bool SendMessages(CNode* pnode, std::atomic<bool>& interrupt) = 0;\n+    virtual bool SendMessages(CNode* pnode) = 0;\n     virtual void InitializeNode(CNode* pnode) = 0;\n     virtual void FinalizeNode(NodeId id, bool& update_connection_time) = 0;\n "
      },
      {
        "sha": "cdf5d655bca09aa5cc0fdf1c2935eee79f7c3bb3",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "patch": "@@ -3218,7 +3218,7 @@ class CompareInvMempoolOrder\n     }\n };\n \n-bool PeerLogicValidation::SendMessages(CNode* pto, std::atomic<bool>& interruptMsgProc)\n+bool PeerLogicValidation::SendMessages(CNode* pto)\n {\n     const Consensus::Params& consensusParams = Params().GetConsensus();\n     {"
      },
      {
        "sha": "0d97b316eb339793b2f8acd85e8058e70f11c30b",
        "filename": "src/net_processing.h",
        "status": "modified",
        "additions": 7,
        "deletions": 3,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net_processing.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/net_processing.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.h?ref=c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "patch": "@@ -68,16 +68,20 @@ class PeerLogicValidation final : public CValidationInterface, public NetEventsI\n     void InitializeNode(CNode* pnode) override;\n     /** Handle removal of a peer by updating various state and removing it from mapNodeState */\n     void FinalizeNode(NodeId nodeid, bool& fUpdateConnectionTime) override;\n-    /** Process protocol messages received from a given node */\n+    /**\n+    * Process protocol messages received from a given node\n+    *\n+    * @param[in]   pfrom           The node which we have received messages from.\n+    * @param[in]   interrupt       Interrupt condition for processing threads\n+    */\n     bool ProcessMessages(CNode* pfrom, std::atomic<bool>& interrupt) override;\n     /**\n     * Send queued protocol messages to be sent to a give node.\n     *\n     * @param[in]   pto             The node which we are sending messages to.\n-    * @param[in]   interrupt       Interrupt condition for processing threads\n     * @return                      True if there is more work to be done\n     */\n-    bool SendMessages(CNode* pto, std::atomic<bool>& interrupt) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n+    bool SendMessages(CNode* pto) override EXCLUSIVE_LOCKS_REQUIRED(pto->cs_sendProcessing);\n \n     /** Consider evicting an outbound peer based on the amount of time they've been behind our tip */\n     void ConsiderEviction(CNode *pto, int64_t time_in_seconds);"
      },
      {
        "sha": "cc871726fdf81dce770e313127671393564ddd34",
        "filename": "src/test/denialofservice_tests.cpp",
        "status": "modified",
        "additions": 10,
        "deletions": 14,
        "changes": 24,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/test/denialofservice_tests.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76/src/test/denialofservice_tests.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/test/denialofservice_tests.cpp?ref=c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "patch": "@@ -54,7 +54,6 @@ BOOST_FIXTURE_TEST_SUITE(denialofservice_tests, TestingSetup)\n // work.\n BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n {\n-    std::atomic<bool> interruptDummy(false);\n \n     // Mock an outbound peer\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n@@ -75,7 +74,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n     // Test starts here\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy); // should result in getheaders\n+        peerLogic->SendMessages(&dummyNode1); // should result in getheaders\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_vSend);\n@@ -88,7 +87,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n     SetMockTime(nStartTime+21*60);\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy); // should result in getheaders\n+        peerLogic->SendMessages(&dummyNode1); // should result in getheaders\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_vSend);\n@@ -98,7 +97,7 @@ BOOST_AUTO_TEST_CASE(outbound_slow_chain_eviction)\n     SetMockTime(nStartTime+24*60);\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy); // should result in disconnect\n+        peerLogic->SendMessages(&dummyNode1); // should result in disconnect\n     }\n     BOOST_CHECK(dummyNode1.fDisconnect == true);\n     SetMockTime(0);\n@@ -192,7 +191,6 @@ BOOST_AUTO_TEST_CASE(stale_tip_peer_management)\n \n BOOST_AUTO_TEST_CASE(DoS_banning)\n {\n-    std::atomic<bool> interruptDummy(false);\n \n     connman->ClearBanned();\n     CAddress addr1(ip(0xa0b0c001), NODE_NONE);\n@@ -207,7 +205,7 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode1);\n     }\n     BOOST_CHECK(connman->IsBanned(addr1));\n     BOOST_CHECK(!connman->IsBanned(ip(0xa0b0c001|0x0000ff00))); // Different IP, not banned\n@@ -224,7 +222,7 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n     }\n     {\n         LOCK2(cs_main, dummyNode2.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode2, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode2);\n     }\n     BOOST_CHECK(!connman->IsBanned(addr2)); // 2 not banned yet...\n     BOOST_CHECK(connman->IsBanned(addr1));  // ... but 1 still should be\n@@ -234,7 +232,7 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n     }\n     {\n         LOCK2(cs_main, dummyNode2.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode2, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode2);\n     }\n     BOOST_CHECK(connman->IsBanned(addr2));\n \n@@ -245,7 +243,6 @@ BOOST_AUTO_TEST_CASE(DoS_banning)\n \n BOOST_AUTO_TEST_CASE(DoS_banscore)\n {\n-    std::atomic<bool> interruptDummy(false);\n \n     connman->ClearBanned();\n     gArgs.ForceSetArg(\"-banscore\", \"111\"); // because 11 is my favorite number\n@@ -261,7 +258,7 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode1);\n     }\n     BOOST_CHECK(!connman->IsBanned(addr1));\n     {\n@@ -270,7 +267,7 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode1);\n     }\n     BOOST_CHECK(!connman->IsBanned(addr1));\n     {\n@@ -279,7 +276,7 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n     }\n     {\n         LOCK2(cs_main, dummyNode1.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode1, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode1);\n     }\n     BOOST_CHECK(connman->IsBanned(addr1));\n     gArgs.ForceSetArg(\"-banscore\", std::to_string(DEFAULT_BANSCORE_THRESHOLD));\n@@ -290,7 +287,6 @@ BOOST_AUTO_TEST_CASE(DoS_banscore)\n \n BOOST_AUTO_TEST_CASE(DoS_bantime)\n {\n-    std::atomic<bool> interruptDummy(false);\n \n     connman->ClearBanned();\n     int64_t nStartTime = GetTime();\n@@ -309,7 +305,7 @@ BOOST_AUTO_TEST_CASE(DoS_bantime)\n     }\n     {\n         LOCK2(cs_main, dummyNode.cs_sendProcessing);\n-        peerLogic->SendMessages(&dummyNode, interruptDummy);\n+        peerLogic->SendMessages(&dummyNode);\n     }\n     BOOST_CHECK(connman->IsBanned(addr));\n "
      }
    ]
  },
  {
    "sha": "4b6ab02122d225818f6c6a4b4ef343d2c90e6d55",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0YjZhYjAyMTIyZDIyNTgxOGY2YzZhNGI0ZWYzNDNkMmM5MGU2ZDU1",
    "commit": {
      "author": {
        "name": "practicalswift",
        "email": "practicalswift@users.noreply.github.com",
        "date": "2018-06-27T21:26:35Z"
      },
      "committer": {
        "name": "fanquake",
        "email": "fanquake@gmail.com",
        "date": "2018-07-08T13:27:12Z"
      },
      "message": "Remove unused argument to ProcessGetBlockData(...)",
      "tree": {
        "sha": "1edbe93b508027272d86dfda7f6568d872f2463e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/1edbe93b508027272d86dfda7f6568d872f2463e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJHBAABCAAxFiEEz7FuIclQ9n+pXlWPLuufXMCVJsEFAltCETATHGZhbnF1YWtl\nQGdtYWlsLmNvbQAKCRAu659cwJUmwcy8D/4mkIeyEhDSGtl2lQMB8wopYFruf8oe\nceDbMEHkVv84fjafpRxr9WfqZ6XHiJJB9vki9m4mR6BoTFkqEAbYnBhGrETpOj+4\nTXreWMiOb0AIPq66Cd8etHHcQdvT59DAREABrp54MaxzUUnedZPH9muLig1C0lOE\nE1doAOie8NojH+YF2gDTJL4vLb2x5OSaKTLjsseIePnYerNfeNPROCjB5dk2S9bW\n2Fjm1HE2O5uSmBiT81ThEuPbT+pV7eU1w8pXiPJ0Mr29LpwtMcy8rnq6Pr5BuTI+\nTFocwDMzOIa06O60m3fuAwUv7uq9QLWN0oshceBbqXclDxNCEjc1F9IyGRfRu/5f\nDbaCoMx/TFX+FIzB7bQAyxFzYlI4948fCauDN+EUM2FNts+6HsYsLVpZWMigwhFH\nCBCYf6nMPEhARLs1TASFAB/ZLmyAX7UqH8b+k93vkpdC0/EGQDDcLj3BcLc+N/G8\n0Xas47RnBQeOtRjZEzEH/puu6UXxfFx9E5PHBMI6aRVhY8xFOowL5e/K9N96xbPV\njnf4DPQM4Yv+wtPRg8Xyh7pnU+ay6819kskxwMbROD0D+hBxY3WpiiGH6t4ZB1JF\ncfLuHkLtTHf89wCg7O3lFGPTVjjWWmqm8sowErtL3nqzH62qjhM9nTwANo6XbIkZ\n65MIYeFxSWdkUQ==\n=3j5l\n-----END PGP SIGNATURE-----",
        "payload": "tree 1edbe93b508027272d86dfda7f6568d872f2463e\nparent c469ecf22e8ab55acf2cf8fc6fcf34415b541f76\nauthor practicalswift <practicalswift@users.noreply.github.com> 1530134795 +0200\ncommitter fanquake <fanquake@gmail.com> 1531056432 +0800\n\nRemove unused argument to ProcessGetBlockData(...)\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55/comments",
    "author": {
      "login": "practicalswift",
      "id": 7826565,
      "node_id": "MDQ6VXNlcjc4MjY1NjU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7826565?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/practicalswift",
      "html_url": "https://github.com/practicalswift",
      "followers_url": "https://api.github.com/users/practicalswift/followers",
      "following_url": "https://api.github.com/users/practicalswift/following{/other_user}",
      "gists_url": "https://api.github.com/users/practicalswift/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/practicalswift/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/practicalswift/subscriptions",
      "organizations_url": "https://api.github.com/users/practicalswift/orgs",
      "repos_url": "https://api.github.com/users/practicalswift/repos",
      "events_url": "https://api.github.com/users/practicalswift/events{/privacy}",
      "received_events_url": "https://api.github.com/users/practicalswift/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "fanquake",
      "id": 863730,
      "node_id": "MDQ6VXNlcjg2MzczMA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/863730?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fanquake",
      "html_url": "https://github.com/fanquake",
      "followers_url": "https://api.github.com/users/fanquake/followers",
      "following_url": "https://api.github.com/users/fanquake/following{/other_user}",
      "gists_url": "https://api.github.com/users/fanquake/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fanquake/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fanquake/subscriptions",
      "organizations_url": "https://api.github.com/users/fanquake/orgs",
      "repos_url": "https://api.github.com/users/fanquake/repos",
      "events_url": "https://api.github.com/users/fanquake/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fanquake/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c469ecf22e8ab55acf2cf8fc6fcf34415b541f76"
      }
    ],
    "stats": {
      "total": 4,
      "additions": 2,
      "deletions": 2
    },
    "files": [
      {
        "sha": "458e9c2e9f5c21bb4bebc000a5fa7c333bd89fc5",
        "filename": "src/net_processing.cpp",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55/src/net_processing.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/4b6ab02122d225818f6c6a4b4ef343d2c90e6d55/src/net_processing.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/net_processing.cpp?ref=4b6ab02122d225818f6c6a4b4ef343d2c90e6d55",
        "patch": "@@ -1070,7 +1070,7 @@ static void RelayAddress(const CAddress& addr, bool fReachable, CConnman* connma\n     connman->ForEachNodeThen(std::move(sortfunc), std::move(pushfunc));\n }\n \n-void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, const CInv& inv, CConnman* connman, const std::atomic<bool>& interruptMsgProc)\n+void static ProcessGetBlockData(CNode* pfrom, const CChainParams& chainparams, const CInv& inv, CConnman* connman)\n {\n     bool send = false;\n     std::shared_ptr<const CBlock> a_recent_block;\n@@ -1274,7 +1274,7 @@ void static ProcessGetData(CNode* pfrom, const CChainParams& chainparams, CConnm\n         const CInv &inv = *it;\n         if (inv.type == MSG_BLOCK || inv.type == MSG_FILTERED_BLOCK || inv.type == MSG_CMPCT_BLOCK || inv.type == MSG_WITNESS_BLOCK) {\n             it++;\n-            ProcessGetBlockData(pfrom, chainparams, inv, connman, interruptMsgProc);\n+            ProcessGetBlockData(pfrom, chainparams, inv, connman);\n         }\n     }\n "
      }
    ]
  }
]