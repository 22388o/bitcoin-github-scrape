sipa,2020-06-24 02:08:58,Ping @theuni.,https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648538999,648538999,
laanwj,2020-06-24 12:50:06,"ACK 402980d7d0299769e147688250235339908523c7\nIt might aid discoverability to refer to this list of pitfalls in `developer-notes.md`.",https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648799528,648799528,
jb55,2020-06-24 14:27:17,ACK 402980d7d0299769e147688250235339908523c7,https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648854853,648854853,
practicalswift,2020-06-24 14:55:40,"ACK modulo adding a reference in `developer-notes.md` to ease discoverability as suggested by @laanwj :)\n\nPrediction: We'll need a similar life-time issue warning in the developer notes once we get the sharp edges of `std::string_view` to play with :)",https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-648872233,648872233,
theuni,2020-06-25 22:01:56,"Related: I've pushed a branch here which adds the lifetimebound annotation: https://github.com/theuni/bitcoin/commits/lifetimebound\n\nThe changes are actually very simple, but the commit messages are verbose and reflect my (hopefully correct?) understanding of what's going on.\n\n@sipa Would you like me to PR that separately for discussion? Or (if you actually want them) do you want to pull t",https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649839833,649839833,
sipa,2020-06-25 22:10:02,@theuni That looks great; I think you should PR it separately (as master stands to benefit from it independent of any other Span-related changes).,https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649842936,649842936,
MarcoFalke,2020-06-25 23:56:55,ACK 402980d7d0299769e147688250235339908523c7,https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-649874237,649874237,
sipa,2020-06-26 20:50:24,"Addressed all comments, I believe.",https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-650394756,650394756,
laanwj,2020-06-29 13:18:17,ACK fab57e2b9bc4577fcfcd9fbddbc35d96046c5d88,https://github.com/bitcoin/bitcoin/pull/19367#issuecomment-651114979,651114979,
jnewbery,2020-06-24 15:01:19,s/accept as Span/accept a Span/,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r444961222,444961222,src/span.h
theuni,2020-06-24 16:36:09,"Turns out clang actually has a newish attribute to detect this!\nhttps://reviews.llvm.org/rL338464\n\nI can confirm that this case is detected with clang-10 and the following change to span.h:\n```diff\n-    constexpr Span(V&& v) noexcept : m_data(v.data()), m_size(v.size()) {}\n+    constexpr Span(V&& v __attribute__((lifetimebound))) noexcept : m_data(v.data()), m_size(v.size()) {}\n```\",https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445025361,445025361,src/span.h
amitiuttarwar,2020-06-24 16:43:22,in cases *where* a function..,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445029671,445029671,src/span.h
sipa,2020-06-24 16:47:41,"@theuni Interesting!\n\nI expect that there is one particular false positive: when you're converting a temporary *Span* to a compatible one. We could introduce a separate constructor for that, which then doesn't get the attribute. On the other hand, perhaps that interferes with useful detection too.",https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445032414,445032414,src/span.h
theuni,2020-06-24 17:53:10,"@sipa Yes, that seems to be the bulk of them.\n\n~I can't figure out why this _isn't_ UB (from ParseScript()):~\n```c++\n    if (Func(""pkh"", expr)) {\n        auto pubkey = ParsePubkey(key_exp_index, expr, ctx != ParseScriptContext::P2WSH, out, error);\n```\n~Remember that ```Func()``` takes a ```std::string```, not a c string. So in the example above, presumably ```expr``` ends up pointing",https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445069891,445069891,src/span.h
theuni,2020-06-24 18:58:51,"> We could introduce a separate constructor for that, which then doesn't get the attribute. On the other hand, perhaps that interferes with useful detection too.\n\nIndeed giving Span a (default) move ctor causes all current ```lifetimebound``` false-positives to go away, but still warns when intentionally inserting your UB example.",https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445105927,445105927,src/span.h
ysangkok,2020-06-25 15:39:19,reference should be plural or have article,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r445652881,445652881,src/span.h
sipa,2020-06-26 20:50:33,Done.,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446403829,446403829,src/span.h
sipa,2020-06-26 20:51:13,Fixed.,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404098,446404098,src/span.h
sipa,2020-06-26 20:51:47,Discussion on this moved to #19387.,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404286,446404286,src/span.h
sipa,2020-06-26 20:51:58,Fixed.,https://github.com/bitcoin/bitcoin/pull/19367#discussion_r446404341,446404341,src/span.h
