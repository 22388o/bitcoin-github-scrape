sipa,2017-06-04T18:42:25Z,"@theuni These RPCs were added in #8680, and never used (only `waitforblockatheight` was ever used). Is there a plan or expectation that they'll ever be needed?",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306058707,306058707,
NicolasDorier,2017-06-05T07:11:30Z,"I did not know it existed, but I think it is very useful, I would use it if I am sure it stays.\n\nEasier to use than configuring blocknotify or ZMQ.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306119698,306119698,
laanwj,2017-06-05T13:50:06Z,"Would be nice to have a test for them, if we keep them.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306192156,306192156,
theuni,2017-06-05T15:28:19Z,"@sipa If ever used, I figured it'd only be to make some python tests less cumbersome.\n\n@jnewbery Do you have any use for these? Otherwise, I'd be fine with removing.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306218298,306218298,
jnewbery,2017-06-05T15:52:59Z,"> @jnewbery Do you have any use for these? Otherwise, I'd be fine with removing.\n\nNot currently, although they may be useful for some tests. On the other hand, it's just as easy to call `getbestblockhash` or `getblock` in a loop until the desired block has been accepted.\n\nI have no issue with these being removed or staying (as long as they remain hidden and not part of the public API).",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306225271,306225271,
MarcoFalke,2017-06-05T17:10:18Z,"I am ok with removing or keeping and adding tests. Though, it seems the functionality is redundant:\n\n* waitfornewblock() ---> waitforblockheight(current_height + 1)\n* waitforblock(hash) ---> waitforblockheight(hash_height) && getblockhash(hash_height) == hash",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306246154,306246154,
MarcoFalke,2017-06-05T17:10:32Z,utACK 5fc1253bb8b95d34880e565cb2aa193caab06d71,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306246224,306246224,
theuni,2017-06-05T17:23:56Z,@MarcoFalke They're intended to be atomic operations as we were dealing with some test race issues a while back. They're indeed redundant if atomicity isn't needed.,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306249859,306249859,
NicolasDorier,2017-06-06T01:23:30Z,"well, I think they are useful. Instead of polling for new block I would definitively use that. I just did not know it existed.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306354880,306354880,
sipa,2017-06-06T07:02:40Z,utACK b69194916c5fc8ebdaebb04e3cc6c4aab37e1c49,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-306400094,306400094,
achow101,2017-08-15T21:56:50Z,rebased,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-322601087,322601087,
promag,2017-08-16T07:27:06Z,"utACK b691949.\n\nIMO blocking or long pool RPC/REST calls should be avoided. ",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-322689056,322689056,
NicolasDorier,2017-08-17T02:43:15Z,"I think this should not be removed, but documented. Right now the only way to get block notification is to connect to to the P2P layer or use ZeroMQ. Both requires additional configuration. (also, I have never managed to make ZeroMQ notifications works with a .NET Client)\nI end up connecting to my node by P2P to get new blocks.\n\nI would have known that such RPC method existed, I would have d",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-322953717,322953717,
luke-jr,2017-08-17T02:48:37Z,@NicolasDorier FYI there is also `blocknotify`,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-322954432,322954432,
NicolasDorier,2017-08-17T04:25:24Z,"Same problem as ZeroMQ. It requires additional configuration on the bitcoin node, but it is even worse, because you need additional plumbing code so the `blocknotify` program can notify the program interested by the event (by pipe, other queueing mechanism, or HTTP callback which add a dependency to curl, which is not easy to install on all environments).... It add one more layer to the problem th",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-322965540,322965540,
jnewbery,2017-08-17T14:42:28Z,"@NicolasDorier - Be careful about using these RPCs in product code. They were introduced as test tools only and there is no guarantee that they will work as you expect. For example, I just managed to break bitcoind's RPC server by running 4 `waitfornewblock` requests in parallel. Any request after that fails, and I don't think there's any way to cancel the `waitfornewblock` requests.\n\nThere ar",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-323094194,323094194,
promag,2017-08-17T15:10:33Z,"Agree with @jnewbery. You can have a small utility to listen zmq messages and forward in the most suitable transport for your .NET app.\n\nAnd I think doing that to some kind of queue would benefit both parts, specially if the queue has means to easily notify your app.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-323102114,323102114,
NicolasDorier,2017-08-18T07:54:15Z,"@jnewbery I know there is a maximum number of concurrent requests, this can be notified to the user when it happens.\n\n@promag I enumerated the problems of using ZMQ above. This just make it harder to build stuff on top of Core by making it require more configuration and dependency.\nIt is easier to connect to the P2P layer and listen for new block than it is to setup ZMQ, and listening throug",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-323286070,323286070,
promag,2017-08-18T08:05:27Z,"> making it require more configuration\n\n@NicolasDorier IMO thatÂ´s fine. Even if there was websocket support, it should have/require configuration before it could be used. You also configure RPC right?\n\n> and dependency.\n\nI agree that there should be pure HTTP notifications but for the moment adding some zmq client to the playground doesn't seem like a real issue.\n\nAnother option is",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-323288297,323288297,
NicolasDorier,2017-08-18T09:03:04Z,"@promag no I do not configure RPC. If bitcoin is running with default parameters, I can connect to it through the wellknown port and wellknown cookiefile.\n\nI do not use either blocknotify and ZMQ because it makes my users config stuff and add dependencies. This requires me to document and to know how to install those dependencies on the plateforms I support (as well as testing them).\n\nAt o",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-323300581,323300581,
achow101,2017-09-19T02:11:29Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-330407678,330407678,
NicolasDorier,2018-01-10T16:09:59Z,"If https://github.com/bitcoin/bitcoin/pull/7949 would be merged, I would see no problem removing this rpc method.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-356649968,356649968,
laanwj,2018-03-07T18:54:46Z,"Needs rebase, if still relevant. (seems to have been dorment for a long time)",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-371244684,371244684,
NicolasDorier,2018-03-07T19:12:30Z,"Seems like nobody is using it, and on my side I am not at ease using something that might disappear tomorrow, so feel free to delete it.\n\nBut I still think it is a shame, this is the most useful RPC call ever! :(",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-371250615,371250615,
achow101,2018-03-07T19:17:15Z,Rebased,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-371252084,371252084,
MarcoFalke,2018-03-08T02:11:41Z,"utACK c26ffdb5adcbab58ab12509d22123b96ae2ae4a8, but I'd prefer if we removed all of their kind.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-371354366,371354366,
nopara73,2018-03-08T11:52:45Z,"NACK.\n\n`waitfor...` RPC calls are very useful. They should be documented rather than removed. If they ruin some coding best practices, then remove it, otherwise don't.\n\nImagine a wallet daemon that gives you p2pkh only through RPC, it gives you p2wpkh only through ZMQ and it gives you p2wpkh over p2sh only through websockets. Sure that works, but you must have 3 different communication cha",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-371465883,371465883,
laanwj,2018-08-31T10:56:40Z,"As both @NicolasDorier and @nopara73 are apparently using these calls (or would if they aren't goin to be removed) and think they are useful, I don't think they should be removed, then.\nClosing.\n",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-417629148,417629148,
nopara73,2018-08-31T13:29:31Z,"Personally we were using but removed them, due to this change, so it's fine by me. Although I'd still not be happy if the user space breaks (like ever.) But that's more an API design philosophical question.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-417664284,417664284,
jnewbery,2018-08-31T14:18:51Z,"> Although I'd still not be happy if the user space breaks (like ever.)\n\nThese RPC methods were introduced as hidden calls for testing only. They shouldn't be used in production systems. They should either be removed (since they're unused in testing now), or made unhidden and fully supported. I'd vote for removing them.",https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-417678718,417678718,
MarcoFalke,2018-08-31T14:44:01Z,Marked up for grabs for someone to address my feedback: https://github.com/bitcoin/bitcoin/pull/10519#discussion_r173045365,https://github.com/bitcoin/bitcoin/pull/10519#issuecomment-417686181,417686181,
MarcoFalke,2018-03-08T02:10:34Z,Might want to rebase on (or wait for merge of) #12643 and remove this one as well?,https://github.com/bitcoin/bitcoin/pull/10519#discussion_r173045365,173045365,src/rpc/blockchain.cpp
