[
  {
    "sha": "adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzphZGYzMGY5NmJmMmNmOGNjNDNlYmI3M2RhMmVkYjUxMGYwOWFjMzEz",
    "commit": {
      "author": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2017-06-03T16:35:21Z"
      },
      "committer": {
        "name": "Andrew Chow",
        "email": "achow101-github@achow101.com",
        "date": "2018-03-08T21:35:14Z"
      },
      "message": "Remove waitforblock and waitfornewblock RPCs\n\nRemoved because these RPCs are for tests only and are unused",
      "tree": {
        "sha": "6965638392a8cc5f61c39fb088a267bcde71d807",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6965638392a8cc5f61c39fb088a267bcde71d807"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/adf30f96bf2cf8cc43ebb73da2edb510f09ac313/comments",
    "author": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "achow101",
      "id": 3782274,
      "node_id": "MDQ6VXNlcjM3ODIyNzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3782274?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/achow101",
      "html_url": "https://github.com/achow101",
      "followers_url": "https://api.github.com/users/achow101/followers",
      "following_url": "https://api.github.com/users/achow101/following{/other_user}",
      "gists_url": "https://api.github.com/users/achow101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/achow101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/achow101/subscriptions",
      "organizations_url": "https://api.github.com/users/achow101/orgs",
      "repos_url": "https://api.github.com/users/achow101/repos",
      "events_url": "https://api.github.com/users/achow101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/achow101/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "29fad97c320c892ab6a480c81e2078ec22ab354b",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/29fad97c320c892ab6a480c81e2078ec22ab354b",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/29fad97c320c892ab6a480c81e2078ec22ab354b"
      }
    ],
    "stats": {
      "total": 84,
      "additions": 0,
      "deletions": 84
    },
    "files": [
      {
        "sha": "f3c778572274bd9b505845aef8ab3b65f39d8288",
        "filename": "src/rpc/blockchain.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 82,
        "changes": 82,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adf30f96bf2cf8cc43ebb73da2edb510f09ac313/src/rpc/blockchain.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adf30f96bf2cf8cc43ebb73da2edb510f09ac313/src/rpc/blockchain.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/blockchain.cpp?ref=adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
        "patch": "@@ -202,86 +202,6 @@ void RPCNotifyBlockChange(bool ibd, const CBlockIndex * pindex)\n     cond_blockchange.notify_all();\n }\n \n-UniValue waitfornewblock(const JSONRPCRequest& request)\n-{\n-    if (request.fHelp || request.params.size() > 1)\n-        throw std::runtime_error(\n-            \"waitfornewblock (timeout)\\n\"\n-            \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n-            \"\\nReturns the current block on timeout or exit.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. timeout (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{                           (json object)\\n\"\n-            \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n-            \"  \\\"height\\\" : {     (int) Block height\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"waitfornewblock\", \"1000\")\n-            + HelpExampleRpc(\"waitfornewblock\", \"1000\")\n-        );\n-    int timeout = 0;\n-    if (!request.params[0].isNull())\n-        timeout = request.params[0].get_int();\n-\n-    CUpdatedBlock block;\n-    {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n-        block = latestblock;\n-        if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n-        else\n-            cond_blockchange.wait(lock, [&block]{return latestblock.height != block.height || latestblock.hash != block.hash || !IsRPCRunning(); });\n-        block = latestblock;\n-    }\n-    UniValue ret(UniValue::VOBJ);\n-    ret.pushKV(\"hash\", block.hash.GetHex());\n-    ret.pushKV(\"height\", block.height);\n-    return ret;\n-}\n-\n-UniValue waitforblock(const JSONRPCRequest& request)\n-{\n-    if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n-        throw std::runtime_error(\n-            \"waitforblock <blockhash> (timeout)\\n\"\n-            \"\\nWaits for a specific new block and returns useful info about it.\\n\"\n-            \"\\nReturns the current block on timeout or exit.\\n\"\n-            \"\\nArguments:\\n\"\n-            \"1. \\\"blockhash\\\" (required, string) Block hash to wait for.\\n\"\n-            \"2. timeout       (int, optional, default=0) Time in milliseconds to wait for a response. 0 indicates no timeout.\\n\"\n-            \"\\nResult:\\n\"\n-            \"{                           (json object)\\n\"\n-            \"  \\\"hash\\\" : {       (string) The blockhash\\n\"\n-            \"  \\\"height\\\" : {     (int) Block height\\n\"\n-            \"}\\n\"\n-            \"\\nExamples:\\n\"\n-            + HelpExampleCli(\"waitforblock\", \"\\\"0000000000079f8ef3d2c688c244eb7a4570b24c9ed7b4a8c619eb02596f8862\\\", 1000\")\n-            + HelpExampleRpc(\"waitforblock\", \"\\\"0000000000079f8ef3d2c688c244eb7a4570b24c9ed7b4a8c619eb02596f8862\\\", 1000\")\n-        );\n-    int timeout = 0;\n-\n-    uint256 hash = uint256S(request.params[0].get_str());\n-\n-    if (!request.params[1].isNull())\n-        timeout = request.params[1].get_int();\n-\n-    CUpdatedBlock block;\n-    {\n-        std::unique_lock<std::mutex> lock(cs_blockchange);\n-        if(timeout)\n-            cond_blockchange.wait_for(lock, std::chrono::milliseconds(timeout), [&hash]{return latestblock.hash == hash || !IsRPCRunning();});\n-        else\n-            cond_blockchange.wait(lock, [&hash]{return latestblock.hash == hash || !IsRPCRunning(); });\n-        block = latestblock;\n-    }\n-\n-    UniValue ret(UniValue::VOBJ);\n-    ret.pushKV(\"hash\", block.hash.GetHex());\n-    ret.pushKV(\"height\", block.height);\n-    return ret;\n-}\n-\n UniValue waitforblockheight(const JSONRPCRequest& request)\n {\n     if (request.fHelp || request.params.size() < 1 || request.params.size() > 2)\n@@ -1649,8 +1569,6 @@ static const CRPCCommand commands[] =\n     /* Not shown in help */\n     { \"hidden\",             \"invalidateblock\",        &invalidateblock,        {\"blockhash\"} },\n     { \"hidden\",             \"reconsiderblock\",        &reconsiderblock,        {\"blockhash\"} },\n-    { \"hidden\",             \"waitfornewblock\",        &waitfornewblock,        {\"timeout\"} },\n-    { \"hidden\",             \"waitforblock\",           &waitforblock,           {\"blockhash\",\"timeout\"} },\n     { \"hidden\",             \"waitforblockheight\",     &waitforblockheight,     {\"height\",\"timeout\"} },\n     { \"hidden\",             \"syncwithvalidationinterfacequeue\", &syncwithvalidationinterfacequeue, {} },\n };"
      },
      {
        "sha": "59d7ff72cc2b261de185965ad1fec81eb2f7db73",
        "filename": "src/rpc/client.cpp",
        "status": "modified",
        "additions": 0,
        "deletions": 2,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/adf30f96bf2cf8cc43ebb73da2edb510f09ac313/src/rpc/client.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/adf30f96bf2cf8cc43ebb73da2edb510f09ac313/src/rpc/client.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/rpc/client.cpp?ref=adf30f96bf2cf8cc43ebb73da2edb510f09ac313",
        "patch": "@@ -52,8 +52,6 @@ static const CRPCConvertParam vRPCConvertParams[] =\n     { \"getblockhash\", 0, \"height\" },\n     { \"waitforblockheight\", 0, \"height\" },\n     { \"waitforblockheight\", 1, \"timeout\" },\n-    { \"waitforblock\", 1, \"timeout\" },\n-    { \"waitfornewblock\", 0, \"timeout\" },\n     { \"move\", 2, \"amount\" },\n     { \"move\", 3, \"minconf\" },\n     { \"sendfrom\", 2, \"amount\" },"
      }
    ]
  }
]