[
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703719928",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#issuecomment-703719928",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20083",
    "id": 703719928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMzcxOTkyOA==",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?u=71263a00d1269c7f0ed6660aa0c15c894df78a88&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-05T15:49:36Z",
    "updated_at": "2020-10-05T15:49:36Z",
    "author_association": "MEMBER",
    "body": "Can you add a motivation to the PR description please? :)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/703719928/reactions",
      "total_count": 4,
      "+1": 4,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747193122",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#issuecomment-747193122",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20083",
    "id": 747193122,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzE5MzEyMg==",
    "user": {
      "login": "DrahtBot",
      "id": 39886733,
      "node_id": "MDQ6VXNlcjM5ODg2NzMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39886733?u=3c1e73d828cf5a5850dfc25c8397c1cf751db5ac&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DrahtBot",
      "html_url": "https://github.com/DrahtBot",
      "followers_url": "https://api.github.com/users/DrahtBot/followers",
      "following_url": "https://api.github.com/users/DrahtBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/DrahtBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DrahtBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DrahtBot/subscriptions",
      "organizations_url": "https://api.github.com/users/DrahtBot/orgs",
      "repos_url": "https://api.github.com/users/DrahtBot/repos",
      "events_url": "https://api.github.com/users/DrahtBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DrahtBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T04:13:24Z",
    "updated_at": "2020-12-17T04:13:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "<!--e57a25ab6845829454e8d69fc972939a-->\n\nThe following sections might be updated with supplementary metadata relevant to reviewers and maintainers.\n\n<!--174a7506f384e20aa4161008e828411d-->\n### Conflicts\nReviewers, this pull request conflicts with the following ones:\n\n* #20676 (Replace m_tx_relay/nullptr checks in net_processing.cpp by sdaftuar)\n\nIf you consider this pull request important, please also help to review the conflicting pull requests. Ideally, start with the one that should be merged first.",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747193122/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747360630",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#issuecomment-747360630",
    "issue_url": "https://api.github.com/repos/bitcoin/bitcoin/issues/20083",
    "id": 747360630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NzM2MDYzMA==",
    "user": {
      "login": "MarcoFalke",
      "id": 6399679,
      "node_id": "MDQ6VXNlcjYzOTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6399679?u=0691974eedcc2ab5366cc1080fb1c030e87244c2&v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/MarcoFalke",
      "html_url": "https://github.com/MarcoFalke",
      "followers_url": "https://api.github.com/users/MarcoFalke/followers",
      "following_url": "https://api.github.com/users/MarcoFalke/following{/other_user}",
      "gists_url": "https://api.github.com/users/MarcoFalke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/MarcoFalke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/MarcoFalke/subscriptions",
      "organizations_url": "https://api.github.com/users/MarcoFalke/orgs",
      "repos_url": "https://api.github.com/users/MarcoFalke/repos",
      "events_url": "https://api.github.com/users/MarcoFalke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/MarcoFalke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-17T10:43:32Z",
    "updated_at": "2020-12-17T10:43:32Z",
    "author_association": "MEMBER",
    "body": "Sorry, this was opened accidentally (not ready yet)",
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/issues/comments/747360630/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499687795",
    "pull_request_review_id": 502176873,
    "id": 499687795,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTY4Nzc5NQ==",
    "diff_hunk": "@@ -3709,20 +3709,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         // Nodes must NEVER send a data item > 520 bytes (the max size for a script data object,\n         // and thus, the maximum size any matched object can have) in a filteradd message\n-        bool bad = false;\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            bad = true;\n+            pfrom.fDisconnect = true;\n         } else if (pfrom.m_tx_relay != nullptr) {\n             LOCK(pfrom.m_tx_relay->cs_filter);\n             if (pfrom.m_tx_relay->pfilter) {\n                 pfrom.m_tx_relay->pfilter->insert(vData);\n             } else {\n-                bad = true;\n+                pfrom.fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "fa79ba766396fc30cba10cd5a988388218734060",
    "user": {
      "login": "Xekyo",
      "id": 4060799,
      "node_id": "MDQ6VXNlcjQwNjA3OTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4060799?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Xekyo",
      "html_url": "https://github.com/Xekyo",
      "followers_url": "https://api.github.com/users/Xekyo/followers",
      "following_url": "https://api.github.com/users/Xekyo/following{/other_user}",
      "gists_url": "https://api.github.com/users/Xekyo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Xekyo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Xekyo/subscriptions",
      "organizations_url": "https://api.github.com/users/Xekyo/orgs",
      "repos_url": "https://api.github.com/users/Xekyo/repos",
      "events_url": "https://api.github.com/users/Xekyo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Xekyo/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "This behavior seems to have previously triggered log messages `too-large bloom filter` or  `bad filteradd message`. I see that in other instances of `pfrom.fDisconect` it seems to be often preceded by log messages, e.g. `LogPrintf(\"Disconnecting outbound peer %d -- headers chain has insufficient work\\n\", pfrom.GetId());`.\r\n\r\nShould there be a log message here for the disconnect as well?",
    "created_at": "2020-10-05T15:32:16Z",
    "updated_at": "2020-10-05T15:50:18Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r499687795",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "CONTRIBUTOR",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499687795"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r499687795"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/499687795/reactions",
      "total_count": 1,
      "+1": 1,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3719,
    "original_line": 3719,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544907981",
    "pull_request_review_id": 554383618,
    "id": 544907981,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwNzk4MQ==",
    "diff_hunk": "@@ -3709,20 +3709,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         // Nodes must NEVER send a data item > 520 bytes (the max size for a script data object,\n         // and thus, the maximum size any matched object can have) in a filteradd message\n-        bool bad = false;\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            bad = true;\n+            pfrom.fDisconnect = true;\n         } else if (pfrom.m_tx_relay != nullptr) {\n             LOCK(pfrom.m_tx_relay->cs_filter);\n             if (pfrom.m_tx_relay->pfilter) {\n                 pfrom.m_tx_relay->pfilter->insert(vData);\n             } else {\n-                bad = true;\n+                pfrom.fDisconnect = true;",
    "path": "src/net_processing.cpp",
    "position": 23,
    "original_position": 23,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "fa79ba766396fc30cba10cd5a988388218734060",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I think it's a good idea to log to the NET category whenever net_processing disconnects a peer.\r\n\r\nPerhaps we should make this into a function `CConnman::DisconnectPeer(CNode& peer, std::string msg)` and require a log message.",
    "created_at": "2020-12-17T08:42:53Z",
    "updated_at": "2020-12-17T10:42:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544907981",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544907981"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544907981"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544907981/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3719,
    "original_line": 3719,
    "side": "RIGHT",
    "in_reply_to_id": 499687795
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544909388",
    "pull_request_review_id": 554383618,
    "id": 544909388,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkwOTM4OA==",
    "diff_hunk": "@@ -3709,20 +3709,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         // Nodes must NEVER send a data item > 520 bytes (the max size for a script data object,\n         // and thus, the maximum size any matched object can have) in a filteradd message\n-        bool bad = false;\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            bad = true;\n+            pfrom.fDisconnect = true;\n         } else if (pfrom.m_tx_relay != nullptr) {",
    "path": "src/net_processing.cpp",
    "position": 17,
    "original_position": 17,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Should we also disconnect if `pfrom.m_tx_relay == nullptr`? That means this is a block-relay-only connection that we opened and the peer has asked us to load a bloom filter. Disconnecting seems like the polite thing to do.\r\n\r\nMaybe out of scope for this PR.",
    "created_at": "2020-12-17T08:45:07Z",
    "updated_at": "2020-12-17T10:42:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544909388",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544909388"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544909388"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544909388/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3714,
    "original_line": 3714,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911141",
    "pull_request_review_id": 554383618,
    "id": 544911141,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxMTE0MQ==",
    "diff_hunk": "@@ -91,32 +91,33 @@ def set_test_params(self):\n     def skip_test_if_missing_module(self):\n         self.skip_if_no_wallet()\n \n-    def test_size_limits(self, filter_peer):\n+    def test_size_limits(self):\n+        filter_peer = self.nodes[0].add_p2p_connection(P2PBloomFilter())\n         self.log.info('Check that too large filter is rejected')\n-        with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE+1)))\n+        with self.nodes[0].assert_debug_log(['disconnecting peer']):\n+            filter_peer = self.send_and_wait_for_disconnect(filter_peer, msg_filterload(data=b'\\xbb' * (MAX_BLOOM_FILTER_SIZE + 1)))\n \n         self.log.info('Check that max size filter is accepted')\n-        with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb'*(MAX_BLOOM_FILTER_SIZE)))\n+        with self.nodes[0].assert_debug_log([], unexpected_msgs=['disconnecting peer']):\n+            filter_peer.send_and_ping(msg_filterload(data=b'\\xbb' * (MAX_BLOOM_FILTER_SIZE)))\n         filter_peer.send_and_ping(msg_filterclear())\n \n         self.log.info('Check that filter with too many hash functions is rejected')\n-        with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS+1))\n+        with self.nodes[0].assert_debug_log(['disconnecting peer']):\n+            filter_peer = self.send_and_wait_for_disconnect(filter_peer, msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS + 1))\n \n         self.log.info('Check that filter with max hash functions is accepted')\n-        with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n+        with self.nodes[0].assert_debug_log([], unexpected_msgs=['disconnecting peer']):\n             filter_peer.send_and_ping(msg_filterload(data=b'\\xaa', nHashFuncs=MAX_BLOOM_HASH_FUNCS))\n         # Don't send filterclear until next two filteradd checks are done\n \n         self.log.info('Check that max size data element to add to the filter is accepted')\n-        with self.nodes[0].assert_debug_log([], unexpected_msgs=['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE)))\n+        with self.nodes[0].assert_debug_log([], unexpected_msgs=['disconnecting peer']):\n+            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc' * (MAX_SCRIPT_ELEMENT_SIZE)))\n \n         self.log.info('Check that too large data element to add to the filter is rejected')\n-        with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filteradd(data=b'\\xcc'*(MAX_SCRIPT_ELEMENT_SIZE+1)))\n+        with self.nodes[0].assert_debug_log(['disconnecting peer']):\n+            filter_peer = self.send_and_wait_for_disconnect(filter_peer, msg_filteradd(data=b'\\xcc' * (MAX_SCRIPT_ELEMENT_SIZE + 1)))\n \n         filter_peer.send_and_ping(msg_filterclear())",
    "path": "test/functional/p2p_filter.py",
    "position": 44,
    "original_position": 44,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe not required now that the connection gets reset in the previous test?",
    "created_at": "2020-12-17T08:47:55Z",
    "updated_at": "2020-12-17T10:42:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544911141",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911141"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544911141"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911141/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 122,
    "original_line": 122,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911955",
    "pull_request_review_id": 554383618,
    "id": 544911955,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxMTk1NQ==",
    "diff_hunk": "@@ -197,21 +198,25 @@ def test_filter(self, filter_peer):\n             assert not filter_peer.tx_received\n \n         self.log.info('Check that sending \"filteradd\" if no filter is set is treated as misbehavior')",
    "path": "test/functional/p2p_filter.py",
    "position": 49,
    "original_position": 49,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Maybe change the word misbehavior here to avoid ambiguity with the function in net_processing.",
    "created_at": "2020-12-17T08:49:15Z",
    "updated_at": "2020-12-17T10:42:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544911955",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911955"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544911955"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544911955/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 200,
    "original_line": 200,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544912515",
    "pull_request_review_id": 554383618,
    "id": 544912515,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDkxMjUxNQ==",
    "diff_hunk": "@@ -197,21 +198,25 @@ def test_filter(self, filter_peer):\n             assert not filter_peer.tx_received\n \n         self.log.info('Check that sending \"filteradd\" if no filter is set is treated as misbehavior')\n-        with self.nodes[0].assert_debug_log(['Misbehaving']):\n-            filter_peer.send_and_ping(msg_filteradd(data=b'letsmisbehave'))\n+        with self.nodes[0].assert_debug_log(['disconnecting peer']):\n+            filter_peer = self.send_and_wait_for_disconnect(filter_peer, msg_filteradd(data=b'letsmisbehave'))\n \n         self.log.info(\"Check that division-by-zero remote crash bug [CVE-2013-5700] is fixed\")\n         filter_peer.send_and_ping(msg_filterload(data=b'', nHashFuncs=1))\n         filter_peer.send_and_ping(msg_filteradd(data=b'letstrytocrashthisnode'))\n         self.nodes[0].disconnect_p2ps()\n \n+    def send_and_wait_for_disconnect(self, filter_peer, msg):",
    "path": "test/functional/p2p_filter.py",
    "position": 60,
    "original_position": 60,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "I like this function, and think it could be generally useful in other tests, but the name is slightly confusing for me, since it doesn't indicate that we'll also reconnect.",
    "created_at": "2020-12-17T08:50:06Z",
    "updated_at": "2020-12-17T10:42:42Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544912515",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544912515"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r544912515"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/544912515/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 209,
    "original_line": 209,
    "side": "RIGHT"
  },
  {
    "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545021081",
    "pull_request_review_id": 554519692,
    "id": 545021081,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAyMTA4MQ==",
    "diff_hunk": "@@ -3709,20 +3709,16 @@ void PeerManager::ProcessMessage(CNode& pfrom, const std::string& msg_type, CDat\n \n         // Nodes must NEVER send a data item > 520 bytes (the max size for a script data object,\n         // and thus, the maximum size any matched object can have) in a filteradd message\n-        bool bad = false;\n         if (vData.size() > MAX_SCRIPT_ELEMENT_SIZE) {\n-            bad = true;\n+            pfrom.fDisconnect = true;\n         } else if (pfrom.m_tx_relay != nullptr) {",
    "path": "src/net_processing.cpp",
    "position": 17,
    "original_position": 17,
    "commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "original_commit_id": "faf3044029363148b155e4747a2dcb3dc55dbd32",
    "user": {
      "login": "jnewbery",
      "id": 1063656,
      "node_id": "MDQ6VXNlcjEwNjM2NTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1063656?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnewbery",
      "html_url": "https://github.com/jnewbery",
      "followers_url": "https://api.github.com/users/jnewbery/followers",
      "following_url": "https://api.github.com/users/jnewbery/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnewbery/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnewbery/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnewbery/subscriptions",
      "organizations_url": "https://api.github.com/users/jnewbery/orgs",
      "repos_url": "https://api.github.com/users/jnewbery/repos",
      "events_url": "https://api.github.com/users/jnewbery/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnewbery/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "Actually this is impossible, since we'll never advertise `NODE_BLOOM` for outbound peers.",
    "created_at": "2020-12-17T11:34:38Z",
    "updated_at": "2020-12-17T11:34:38Z",
    "html_url": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r545021081",
    "pull_request_url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083",
    "author_association": "MEMBER",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545021081"
      },
      "html": {
        "href": "https://github.com/bitcoin/bitcoin/pull/20083#discussion_r545021081"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/bitcoin/bitcoin/pulls/20083"
      }
    },
    "reactions": {
      "url": "https://api.github.com/repos/bitcoin/bitcoin/pulls/comments/545021081/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "start_line": null,
    "original_start_line": null,
    "start_side": null,
    "line": 3714,
    "original_line": 3714,
    "side": "RIGHT",
    "in_reply_to_id": 544909388
  }
]