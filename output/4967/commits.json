[
  {
    "sha": "459a2d25e0c91d1650974900a902285bedb85f39",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0NTlhMmQyNWUwYzkxZDE2NTA5NzQ5MDBhOTAyMjg1YmVkYjg1ZjM5",
    "commit": {
      "author": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-23T15:54:12Z"
      },
      "committer": {
        "name": "ENikS",
        "email": "evgeni@eniks.com",
        "date": "2014-09-23T15:54:12Z"
      },
      "message": "Avoiding referencing elements of an empty vector",
      "tree": {
        "sha": "11fd99d63476788bc5bedf0b508bd1c126c81df0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/11fd99d63476788bc5bedf0b508bd1c126c81df0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/459a2d25e0c91d1650974900a902285bedb85f39",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459a2d25e0c91d1650974900a902285bedb85f39",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/459a2d25e0c91d1650974900a902285bedb85f39",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/459a2d25e0c91d1650974900a902285bedb85f39/comments",
    "author": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "ENikS",
      "id": 1750155,
      "node_id": "MDQ6VXNlcjE3NTAxNTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1750155?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ENikS",
      "html_url": "https://github.com/ENikS",
      "followers_url": "https://api.github.com/users/ENikS/followers",
      "following_url": "https://api.github.com/users/ENikS/following{/other_user}",
      "gists_url": "https://api.github.com/users/ENikS/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ENikS/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ENikS/subscriptions",
      "organizations_url": "https://api.github.com/users/ENikS/orgs",
      "repos_url": "https://api.github.com/users/ENikS/repos",
      "events_url": "https://api.github.com/users/ENikS/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ENikS/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "35ee2dac6736e23be3fdd584ba0e321e54ff8f61",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/35ee2dac6736e23be3fdd584ba0e321e54ff8f61",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/35ee2dac6736e23be3fdd584ba0e321e54ff8f61"
      }
    ],
    "stats": {
      "total": 69,
      "additions": 36,
      "deletions": 33
    },
    "files": [
      {
        "sha": "218607a6fdfc9af9947ea5791edb9ffcf1c7e2c3",
        "filename": "src/hash.cpp",
        "status": "modified",
        "additions": 36,
        "deletions": 33,
        "changes": 69,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/459a2d25e0c91d1650974900a902285bedb85f39/src/hash.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/459a2d25e0c91d1650974900a902285bedb85f39/src/hash.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/hash.cpp?ref=459a2d25e0c91d1650974900a902285bedb85f39",
        "patch": "@@ -9,45 +9,48 @@ unsigned int MurmurHash3(unsigned int nHashSeed, const std::vector<unsigned char\n {\n     // The following is MurmurHash3 (x86_32), see http://code.google.com/p/smhasher/source/browse/trunk/MurmurHash3.cpp\n     uint32_t h1 = nHashSeed;\n-    const uint32_t c1 = 0xcc9e2d51;\n-    const uint32_t c2 = 0x1b873593;\n+    if (vDataToHash.size() > 0)\n+    {\n+        const uint32_t c1 = 0xcc9e2d51;\n+        const uint32_t c2 = 0x1b873593;\n \n-    const int nblocks = vDataToHash.size() / 4;\n+        const int nblocks = vDataToHash.size() / 4;\n \n-    //----------\n-    // body\n-    const uint32_t* blocks = (const uint32_t*)(&vDataToHash[0] + nblocks * 4);\n+        //----------\n+        // body\n+        const uint32_t* blocks = (const uint32_t*)(&vDataToHash[0] + nblocks * 4);\n \n-    for (int i = -nblocks; i; i++) {\n-        uint32_t k1 = blocks[i];\n+        for (int i = -nblocks; i; i++) {\n+            uint32_t k1 = blocks[i];\n \n-        k1 *= c1;\n-        k1 = ROTL32(k1, 15);\n-        k1 *= c2;\n+            k1 *= c1;\n+            k1 = ROTL32(k1, 15);\n+            k1 *= c2;\n \n-        h1 ^= k1;\n-        h1 = ROTL32(h1, 13);\n-        h1 = h1 * 5 + 0xe6546b64;\n-    }\n+            h1 ^= k1;\n+            h1 = ROTL32(h1, 13);\n+            h1 = h1 * 5 + 0xe6546b64;\n+        }\n \n-    //----------\n-    // tail\n-    const uint8_t* tail = (const uint8_t*)(&vDataToHash[0] + nblocks * 4);\n-\n-    uint32_t k1 = 0;\n-\n-    switch (vDataToHash.size() & 3) {\n-    case 3:\n-        k1 ^= tail[2] << 16;\n-    case 2:\n-        k1 ^= tail[1] << 8;\n-    case 1:\n-        k1 ^= tail[0];\n-        k1 *= c1;\n-        k1 = ROTL32(k1, 15);\n-        k1 *= c2;\n-        h1 ^= k1;\n-    };\n+        //----------\n+        // tail\n+        const uint8_t* tail = (const uint8_t*)(&vDataToHash[0] + nblocks * 4);\n+\n+        uint32_t k1 = 0;\n+\n+        switch (vDataToHash.size() & 3) {\n+        case 3:\n+            k1 ^= tail[2] << 16;\n+        case 2:\n+            k1 ^= tail[1] << 8;\n+        case 1:\n+            k1 ^= tail[0];\n+            k1 *= c1;\n+            k1 = ROTL32(k1, 15);\n+            k1 *= c2;\n+            h1 ^= k1;\n+        };\n+    }\n \n     //----------\n     // finalization"
      }
    ]
  }
]