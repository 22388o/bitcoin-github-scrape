[
  {
    "sha": "31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozMWRiZDVhZjQ4NjNkNzNjMzIxNTM1NWVjNWNmODViZGUyZGRjNWQ4",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-15T16:10:13Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-24T15:52:05Z"
      },
      "message": "[wallet] Add change type to CCoinControl",
      "tree": {
        "sha": "c016eae3dcae0487243260c97342651d2a90a4a0",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/c016eae3dcae0487243260c97342651d2a90a4a0"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "95941396fff81f60d75fc8cca70716b26efe820e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/95941396fff81f60d75fc8cca70716b26efe820e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/95941396fff81f60d75fc8cca70716b26efe820e"
      }
    ],
    "stats": {
      "total": 14,
      "additions": 9,
      "deletions": 5
    },
    "files": [
      {
        "sha": "458e770e03596c38c5b1b920839562c458b12998",
        "filename": "src/wallet/coincontrol.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/coincontrol.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/coincontrol.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coincontrol.h?ref=31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
        "patch": "@@ -16,7 +16,10 @@\n class CCoinControl\n {\n public:\n+    //! Custom change destination, if not set an address is generated\n     CTxDestination destChange;\n+    //! Custom change type, ignored if destChange is set, defaults to g_change_type\n+    OutputType change_type;\n     //! If false, allows unselected inputs, but requires all selected inputs be used\n     bool fAllowOtherInputs;\n     //! Includes watch only addresses which match the ISMINE_WATCH_SOLVABLE criteria\n@@ -40,6 +43,7 @@ class CCoinControl\n     void SetNull()\n     {\n         destChange = CNoDestination();\n+        change_type = g_change_type;\n         fAllowOtherInputs = false;\n         fAllowWatchOnly = false;\n         setSelected.clear();"
      },
      {
        "sha": "07a23ce249bedddc0b27b464c73d0cbfe664b17b",
        "filename": "src/wallet/wallet.cpp",
        "status": "modified",
        "additions": 4,
        "deletions": 4,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/wallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/wallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.cpp?ref=31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
        "patch": "@@ -2674,11 +2674,11 @@ bool CWallet::FundTransaction(CMutableTransaction& tx, CAmount& nFeeRet, int& nC\n     return true;\n }\n \n-OutputType CWallet::TransactionChangeType(const std::vector<CRecipient>& vecSend)\n+OutputType CWallet::TransactionChangeType(OutputType change_type, const std::vector<CRecipient>& vecSend)\n {\n     // If -changetype is specified, always use that change type.\n-    if (g_change_type != OUTPUT_TYPE_NONE) {\n-        return g_change_type;\n+    if (change_type != OUTPUT_TYPE_NONE) {\n+        return change_type;\n     }\n \n     // if g_address_type is legacy, use legacy address as change (even\n@@ -2797,7 +2797,7 @@ bool CWallet::CreateTransaction(const std::vector<CRecipient>& vecSend, CWalletT\n                     return false;\n                 }\n \n-                const OutputType change_type = TransactionChangeType(vecSend);\n+                const OutputType change_type = TransactionChangeType(coin_control.change_type, vecSend);\n \n                 LearnRelatedScripts(vchPubKey, change_type);\n                 scriptChange = GetScriptForDestination(GetDestinationForKey(vchPubKey, change_type));"
      },
      {
        "sha": "a4684c2935d2d41d4374112be6e7930106f8e3ca",
        "filename": "src/wallet/wallet.h",
        "status": "modified",
        "additions": 1,
        "deletions": 1,
        "changes": 2,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/wallet.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8/src/wallet/wallet.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/wallet.h?ref=31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
        "patch": "@@ -965,7 +965,7 @@ class CWallet final : public CCryptoKeyStore, public CValidationInterface\n     CAmount GetLegacyBalance(const isminefilter& filter, int minDepth, const std::string* account) const;\n     CAmount GetAvailableBalance(const CCoinControl* coinControl = nullptr) const;\n \n-    OutputType TransactionChangeType(const std::vector<CRecipient>& vecSend);\n+    OutputType TransactionChangeType(OutputType change_type, const std::vector<CRecipient>& vecSend);\n \n     /**\n      * Insert additional inputs into the transaction by"
      }
    ]
  },
  {
    "sha": "536ddeb173fafbfb7418a34fb5b49a425442d603",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1MzZkZGViMTczZmFmYmZiNzQxOGEzNGZiNWI0OWE0MjU0NDJkNjAz",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-16T00:20:17Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-24T16:00:50Z"
      },
      "message": "[rpc] Add change_type option to fundrawtransaction",
      "tree": {
        "sha": "e39fd3da314458c23119bec2665997a388f2ebd4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/e39fd3da314458c23119bec2665997a388f2ebd4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/536ddeb173fafbfb7418a34fb5b49a425442d603",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536ddeb173fafbfb7418a34fb5b49a425442d603",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/536ddeb173fafbfb7418a34fb5b49a425442d603",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536ddeb173fafbfb7418a34fb5b49a425442d603/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/31dbd5af4863d73c3215355ec5cf85bde2ddc5d8"
      }
    ],
    "stats": {
      "total": 12,
      "additions": 12,
      "deletions": 0
    },
    "files": [
      {
        "sha": "ae4525751d8a22293138ff1db19349f16662be40",
        "filename": "src/wallet/rpcwallet.cpp",
        "status": "modified",
        "additions": 12,
        "deletions": 0,
        "changes": 12,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/536ddeb173fafbfb7418a34fb5b49a425442d603/src/wallet/rpcwallet.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/536ddeb173fafbfb7418a34fb5b49a425442d603/src/wallet/rpcwallet.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/rpcwallet.cpp?ref=536ddeb173fafbfb7418a34fb5b49a425442d603",
        "patch": "@@ -3057,6 +3057,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n                             \"   {\\n\"\n                             \"     \\\"changeAddress\\\"          (string, optional, default pool address) The bitcoin address to receive the change\\n\"\n                             \"     \\\"changePosition\\\"         (numeric, optional, default random) The index of the change output\\n\"\n+                            \"     \\\"change_type\\\"            (string, optional) The output type to use. Only valid if changeAddress is not specified. Options are \\\"legacy\\\", \\\"p2sh-segwit\\\", and \\\"bech32\\\". Default is set by -changetype.\\n\"\n                             \"     \\\"includeWatching\\\"        (boolean, optional, default false) Also select inputs which are watch only\\n\"\n                             \"     \\\"lockUnspents\\\"           (boolean, optional, default false) Lock selected unspent outputs\\n\"\n                             \"     \\\"feeRate\\\"                (numeric, optional, default not set: makes wallet determine the fee) Set a specific fee rate in \" + CURRENCY_UNIT + \"/kB\\n\"\n@@ -3122,6 +3123,7 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n             {\n                 {\"changeAddress\", UniValueType(UniValue::VSTR)},\n                 {\"changePosition\", UniValueType(UniValue::VNUM)},\n+                {\"change_type\", UniValueType(UniValue::VSTR)},\n                 {\"includeWatching\", UniValueType(UniValue::VBOOL)},\n                 {\"lockUnspents\", UniValueType(UniValue::VBOOL)},\n                 {\"reserveChangeKey\", UniValueType(UniValue::VBOOL)}, // DEPRECATED (and ignored), should be removed in 0.16 or so.\n@@ -3146,6 +3148,16 @@ UniValue fundrawtransaction(const JSONRPCRequest& request)\n         if (options.exists(\"changePosition\"))\n             changePosition = options[\"changePosition\"].get_int();\n \n+        if (options.exists(\"change_type\")) {\n+            if (options.exists(\"changeAddress\")) {\n+                throw JSONRPCError(RPC_INVALID_PARAMETER, \"Cannot specify both changeAddress and address_type options\");\n+            }\n+            coinControl.change_type = ParseOutputType(options[\"change_type\"].get_str(), coinControl.change_type);\n+            if (coinControl.change_type == OUTPUT_TYPE_NONE) {\n+                throw JSONRPCError(RPC_INVALID_ADDRESS_OR_KEY, strprintf(\"Unknown change type '%s'\", options[\"change_type\"].get_str()));\n+            }\n+        }\n+\n         if (options.exists(\"includeWatching\"))\n             coinControl.fAllowWatchOnly = options[\"includeWatching\"].get_bool();\n "
      }
    ]
  },
  {
    "sha": "16f6f59dcf0dc8868927d6565c2bbfa40a74ba81",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzoxNmY2ZjU5ZGNmMGRjODg2ODkyN2Q2NTY1YzJiYmZhNDBhNzRiYTgx",
    "commit": {
      "author": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-24T15:28:15Z"
      },
      "committer": {
        "name": "Jo\u00e3o Barbosa",
        "email": "joao.paulo.barbosa@gmail.com",
        "date": "2018-01-24T16:00:50Z"
      },
      "message": "[qa] Test fundrawtransaction with change_type option",
      "tree": {
        "sha": "42703f17dfa229db870f85eca5224c1ae3489eb1",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/42703f17dfa229db870f85eca5224c1ae3489eb1"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81/comments",
    "author": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "promag",
      "id": 3534524,
      "node_id": "MDQ6VXNlcjM1MzQ1MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3534524?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/promag",
      "html_url": "https://github.com/promag",
      "followers_url": "https://api.github.com/users/promag/followers",
      "following_url": "https://api.github.com/users/promag/following{/other_user}",
      "gists_url": "https://api.github.com/users/promag/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/promag/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/promag/subscriptions",
      "organizations_url": "https://api.github.com/users/promag/orgs",
      "repos_url": "https://api.github.com/users/promag/repos",
      "events_url": "https://api.github.com/users/promag/events{/privacy}",
      "received_events_url": "https://api.github.com/users/promag/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "536ddeb173fafbfb7418a34fb5b49a425442d603",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/536ddeb173fafbfb7418a34fb5b49a425442d603",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/536ddeb173fafbfb7418a34fb5b49a425442d603"
      }
    ],
    "stats": {
      "total": 13,
      "additions": 13,
      "deletions": 0
    },
    "files": [
      {
        "sha": "5f7a0586e0f85c992aa716d4810c98cc6fde8e5c",
        "filename": "test/functional/fundrawtransaction.py",
        "status": "modified",
        "additions": 13,
        "deletions": 0,
        "changes": 13,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81/test/functional/fundrawtransaction.py",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/16f6f59dcf0dc8868927d6565c2bbfa40a74ba81/test/functional/fundrawtransaction.py",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/test/functional/fundrawtransaction.py?ref=16f6f59dcf0dc8868927d6565c2bbfa40a74ba81",
        "patch": "@@ -212,6 +212,19 @@ def run_test(self):\n         out = dec_tx['vout'][0]\n         assert_equal(change, out['scriptPubKey']['addresses'][0])\n \n+        #########################################################\n+        # test a fundrawtransaction with a provided change type #\n+        #########################################################\n+        utx = get_unspent(self.nodes[2].listunspent(), 5)\n+\n+        inputs  = [ {'txid' : utx['txid'], 'vout' : utx['vout']} ]\n+        outputs = { self.nodes[0].getnewaddress() : Decimal(4.0) }\n+        rawtx   = self.nodes[2].createrawtransaction(inputs, outputs)\n+        assert_raises_rpc_error(-1, \"JSON value is not a string as expected\", self.nodes[2].fundrawtransaction, rawtx, {'change_type': None})\n+        assert_raises_rpc_error(-5, \"Unknown change type\", self.nodes[2].fundrawtransaction, rawtx, {'change_type': ''})\n+        rawtx = self.nodes[2].fundrawtransaction(rawtx, {'change_type': 'bech32'})\n+        tx  = self.nodes[2].decoderawtransaction(rawtx['hex'])\n+        assert_equal('witness_v0_keyhash', tx['vout'][rawtx['changepos']]['scriptPubKey']['type'])\n \n         #########################################################################\n         # test a fundrawtransaction with a VIN smaller than the required amount #"
      }
    ]
  }
]