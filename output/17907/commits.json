[
  {
    "sha": "498cdbb42616bc1e6c44492c907678b4dce41870",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo0OThjZGJiNDI2MTZiYzFlNmM0NDQ5MmM5MDc2NzhiNGRjZTQxODcw",
    "commit": {
      "author": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-11T00:32:12Z"
      },
      "committer": {
        "name": "Ben Woosley",
        "email": "ben.woosley@gmail.com",
        "date": "2020-01-11T00:32:40Z"
      },
      "message": "Fix improper Doxygen inline comments\n\nThe proper syntax is \"//!<\"\nhttp://www.doxygen.nl/manual/docblocks.html#memberdoc",
      "tree": {
        "sha": "5c7ae841cc26d8fb0a4e750708aab345700844ec",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/5c7ae841cc26d8fb0a4e750708aab345700844ec"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/498cdbb42616bc1e6c44492c907678b4dce41870",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\nComment: GPGTools - https://gpgtools.org\n\niQEcBAABCgAGBQJeGRfFAAoJEG7l83hfeLNFUpwIAKgb+XjxetG0E8F7lH1yXjNy\nuHwdFik2BaFhpg88r3UvO06N5nT0KN2cId2ISV0zbBjzI1a43aW6sk8B4MUQqjmv\n9qNCl+myicbFicXKuaMajwEIR4J4gNUCL2Xe2uadkCPZVh1+wgqIgqWHpOfPh3WB\navIl3XYSfrJCs/ElMoSB63GTGu2rnZJe8xy4Cmhk5agmOtlP8MJZwwPrMgXyNR/u\nd5od518od68riT+8KpjWSVEADJtQHSuxtKbiNuSMaLve5pGM6iLHWJIz7hVhuC6p\nY/c2bU92GVlzvSOr/GXK13mKgBBSpxwX3oDhBkYnBxcYqOYZzpgxC0tUjPc7H8E=\n=zj4m\n-----END PGP SIGNATURE-----",
        "payload": "tree 5c7ae841cc26d8fb0a4e750708aab345700844ec\nparent e7f84503571c171a7e6728cd2d77dd4103bd7a6f\nauthor Ben Woosley <ben.woosley@gmail.com> 1578702732 -0800\ncommitter Ben Woosley <ben.woosley@gmail.com> 1578702760 -0800\n\nFix improper Doxygen inline comments\n\nThe proper syntax is \"//!<\"\nhttp://www.doxygen.nl/manual/docblocks.html#memberdoc\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/498cdbb42616bc1e6c44492c907678b4dce41870",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/498cdbb42616bc1e6c44492c907678b4dce41870",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/498cdbb42616bc1e6c44492c907678b4dce41870/comments",
    "author": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Empact",
      "id": 5470,
      "node_id": "MDQ6VXNlcjU0NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5470?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Empact",
      "html_url": "https://github.com/Empact",
      "followers_url": "https://api.github.com/users/Empact/followers",
      "following_url": "https://api.github.com/users/Empact/following{/other_user}",
      "gists_url": "https://api.github.com/users/Empact/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Empact/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Empact/subscriptions",
      "organizations_url": "https://api.github.com/users/Empact/orgs",
      "repos_url": "https://api.github.com/users/Empact/repos",
      "events_url": "https://api.github.com/users/Empact/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Empact/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "e7f84503571c171a7e6728cd2d77dd4103bd7a6f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/e7f84503571c171a7e6728cd2d77dd4103bd7a6f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/e7f84503571c171a7e6728cd2d77dd4103bd7a6f"
      }
    ],
    "stats": {
      "total": 10,
      "additions": 5,
      "deletions": 5
    },
    "files": [
      {
        "sha": "8d092ece8f11cadd801d6f8277462692fa09b323",
        "filename": "src/util/settings.h",
        "status": "modified",
        "additions": 5,
        "deletions": 5,
        "changes": 10,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/498cdbb42616bc1e6c44492c907678b4dce41870/src/util/settings.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/498cdbb42616bc1e6c44492c907678b4dce41870/src/util/settings.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/util/settings.h?ref=498cdbb42616bc1e6c44492c907678b4dce41870",
        "patch": "@@ -71,11 +71,11 @@ struct SettingsSpan {\n     explicit SettingsSpan(const SettingsValue& value) noexcept : SettingsSpan(&value, 1) {}\n     explicit SettingsSpan(const SettingsValue* data, size_t size) noexcept : data(data), size(size) {}\n     explicit SettingsSpan(const std::vector<SettingsValue>& vec) noexcept;\n-    const SettingsValue* begin() const; //<! Pointer to first non-negated value.\n-    const SettingsValue* end() const;   //<! Pointer to end of values.\n-    bool empty() const;                 //<! True if there are any non-negated values.\n-    bool last_negated() const;          //<! True if the last value is negated.\n-    size_t negated() const;             //<! Number of negated values.\n+    const SettingsValue* begin() const; //!< Pointer to first non-negated value.\n+    const SettingsValue* end() const;   //!< Pointer to end of values.\n+    bool empty() const;                 //!< True if there are any non-negated values.\n+    bool last_negated() const;          //!< True if the last value is negated.\n+    size_t negated() const;             //!< Number of negated values.\n \n     const SettingsValue* data = nullptr;\n     size_t size = 0;"
      }
    ]
  }
]