fanquake,2016-08-03T04:53:31Z,We'll need to add `mempool.dat` to doc/files.md\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237138396,237138396,
dcousens,2016-08-03T06:43:56Z,Why not behind a command line flag?\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237155942,237155942,
laanwj,2016-08-03T06:55:45Z,"Concept ACK. \n\n> Why not behind a command line flag?\n\nAgreed. It can be enabled by default.\nBut people may want to disable this functionality, the per-10 minute dump could interfere with benchmarks and such for example.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237157818,237157818,
paveljanik,2016-08-03T07:30:19Z,"Concept ACK\n\n```\n000000e0  7a 8e 6e 84 83 ab c4 ca  20 fb 9b 88 ac 00 00 00  |z.n..... .......|\n000000f0  00 00 00 00 00 0f 6a 0d  48 61 6c 6c 6f 55 62 69  |......j.HalloUbi|\n00000100  72 63 68 74 21 00 00 00  00 0d 9a a1 57 00 00 00  |rcht!.......W...|\n```\n\nAs we dump raw txes from the mempool, this will conflict with current status of ""antivirus-compliant"" storage and dumping `mempool.da",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237163938,237163938,
paveljanik,2016-08-03T07:30:37Z,"2016-08-03 07:29:00 Dumped mempool: 1.9e-05s to copy, 0.005925s to dump\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237164001,237164001,
laanwj,2016-08-03T08:35:28Z,"> As we dump raw txes from the mempool, this will conflict with current status of ""antivirus-compliant"" storage and dumping mempool.dat can stop the bitcoind from running, ie. new DoS vector.\n\nA fair point. Though a missing, or corrupted mempool.dat should never cause bitcoind to stop running. At most this will lose the mempool contents (at next start) due to the file being quarantined.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237177243,237177243,
dcousens,2016-08-03T08:44:48Z,More XOR?\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237179183,237179183,
pstratem,2016-08-03T08:57:04Z,Indeed this probably should be XOR'd with a random key.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237181848,237181848,
paveljanik,2016-08-03T10:05:36Z,> At most this will lose the mempool contents due to the file being quarantined.\n\nAV can be configured to stop `bitcoind` with a dialog: “This app is writing a virus to your disk. OK | Error”. This is outside of `bitcoind`…\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237197059,237197059,
jonasschnelli,2016-08-03T14:16:10Z,"Concept ACK and the code size is surprisingly small!\n\nThe only thing that I miss (not directly related to this PR) is an opportunity to keep a history of some major mempool data (feerate, size, tx rate, etc.). Another option would be keeping ~24*6 dumps per day that would could be stored in file-diff-deltas to allow generating any types of statistics.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237249305,237249305,
morcos,2016-08-03T16:23:01Z,"I don't really see a huge benefit in doing this.  It seems like unless you are immediately restarting, you'll be wasting a lot of time trying to load already confirmed transactions or low fee spam.  That said I don't object to making it a command line argument, but I would suggest it default to off.\n\nWhat's the rationale for running it every 10 minutes?  You can copy it from one running node to ",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237288245,237288245,
paveljanik,2016-08-03T16:45:27Z,"I think it should be off by default. And when it is, we can even skip XORing it, I think as it is expert level feature anyway.\n\nOr the other way: create a RPC to dump mempool and that's all. But this way we loose the save-on-restart feature which is nice (which can be worked around by `dumpmempool` and restart).\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237294249,237294249,
sipa,2016-08-03T17:36:38Z,"@morcos The reason for dumping every 10 minutes is so that prioritization data is not lost in case of a crash.\n\nBut perhaps we should have separate files for that. prioritization.dat which is continuously dumped (maybe only after mapDeltas changed?), and mempool.dat which is only saved at shutdown?\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237309685,237309685,
MarcoFalke,2016-08-03T17:44:47Z,> wasting a lot of time trying to load already confirmed transactions or low fee spam\n\nCould it help to save the current block height to the mempool.dat and then discard mempool.dat on start when current height > 3 + height when mempool was saved?\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237312227,237312227,
jgarzik,2016-08-03T19:20:49Z,"This has split into two threads, really:\n1) mempool persistence across restarts\n2) persisting prio deltas across restarts & crashes\n2.1) side note - other state such as wallet locked coins (lockunspent) should be persisted also\n\nPersisting bits of state like prio deltas is useful, and seems applicable to a continuous-log or database solution, that can be restored at startup.\n\nAs for mempool",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237343082,237343082,
dcousens,2016-08-03T21:36:28Z,"> mempool restore seems likely to be a little used, expert-only feature.\n\nSomewhat agreed,  and as a regular 'power' user of bitcoind,  I personally already have my own RPC calls equivalent to `dumpmempool` for this.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237382261,237382261,
gmaxwell,2016-08-04T01:32:48Z,"@jgarzik  This is functionality directly requested by miners, the absence of it creates an operational burden because nodes then end up making small blocks after being restarted.\n\n>  persisting prio deltas across restarts & crashes\n\nThis isn't useful without the transactions themselves-- peers will not re-relay transactions they previously sent. So you could save priorities, but all of them wo",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237425522,237425522,
petertodd,2016-08-04T02:25:28Z,"Concept ACK, and a very useful feature!\n\nThough I'd suggest making it off by default for now so that nodes that don't need this don't have the risk of a bug creating a restart loop - less risk if we start in a clean state by default.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237434755,237434755,
pstratem,2016-08-04T02:58:40Z,@petertodd With the exception of the priority deltas the transactions are going through normal mempool accept logic.\n\nI can't see this causing a restart loop unless there's a bug in the priority handling logic or a remotely exploitable DoS issue anyways.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237439295,237439295,
dcousens,2016-08-04T03:00:34Z,"> I can't see this causing a restart loop unless there's a bug in the priority handling logic or a remotely exploitable DoS issue anyways.\n\nWhich may only be trigger-able under particular circumstance,  of which may be captured in the current mempool state?\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237439517,237439517,
petertodd,2016-08-04T03:12:37Z,"@pstratem Hmm, that's a good point. Also, as long as we're only saving the mempool in a normal, user-triggered, shutdown all transactions in the saved mempool should be fine.\n\nI'll take back my objection.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237441004,237441004,
luke-jr,2016-08-04T03:13:55Z,"> It seems like unless you are immediately restarting, you'll be wasting a lot of time trying to load already confirmed transactions or low fee spam.\n\nEloipool does a save/restore state when it restarts, and one thing it does is write a timestamp early on in the dump. This way, when loading from the dump, it can see if the data is irrelevant and ignore the file. Perhaps that would make sense her",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237441154,237441154,
jgarzik,2016-08-04T04:03:16Z,"@gmaxwell Those concerns seem to be met by remote mempool download also, which @morcos suggested elsewhere in the thread -- and indeed was one original purpose of BIP 35 mempool message -- maintaining miner's mempools and not losing lucrative miner fees due to restart.  \n\nRemote download over LAN is also potentially faster, something Google noticed when seeing increased performance through remot",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237446846,237446846,
gmaxwell,2016-08-04T04:55:46Z,"> Those concerns seem to be met by remote mempool download also, which @morcos suggested elsewhere in the thread -- and indeed was one original purpose of BIP 35 mempool message -- maintaining miner's mempools and not losing lucrative miner fees due to restart. \n\nPreservation of the mempool is a prerequisite for mempool sync. Otherwise you'd have 150 MB of transfer (burning resources of remote n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237452555,237452555,
petertodd,2016-08-04T05:05:57Z,"Notable how remote mempool load on startup could be increase the effects of a DoS attack due to all the extra bandwidth wasted as nodes restart after crashing; it'd be especially harmful if a remote crash exploit could be found if people ever setup nodes to restart automatically.\n\nOn 3 August 2016 21:56:34 GMT-07:00, Gregory Maxwell notifications@github.com wrote:\n\n> > Those concerns seem to b",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237453698,237453698,
sipa,2016-08-04T05:28:35Z,"- Make it off by default: seems reasonable; not every node has a requirement to have a well-calibrated mempool immediately at startup. It does help for BIP152 block relay, but many nodes also likely won't restart sufficiently fast to benefit.\n- XORing a key: sigh, ok\n- Checking how old the mempool is: height won't work, as at the time you restart, you won't have learned about blocks that have be",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237456221,237456221,
gmaxwell,2016-08-04T05:35:59Z,"@sipa Could be off for now-- though sad to lose the BIP152 improvement but as you say I guess most users aren't going up and down that often and I suppose it could be defaulted on after mempool sync. Though I have a little concern that defaulting off would be another point of divergence between what virtually every developer runs and most users run.\n\n> only for prioritized transactions,\n\nAnd t",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237457091,237457091,
sipa,2016-08-04T05:37:42Z,"Idea: instead of not loading the mempool file when it's too old, just skip loading entries that have expired by the time we load them. That has the same effect, and is a pure optimization.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237457307,237457307,
gmaxwell,2016-08-04T05:38:05Z,sipa: sounds fine to me.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237457358,237457358,
jgarzik,2016-08-04T05:42:10Z,"> > Remote download over LAN is also potentially faster, something Google\n> \n> In Google datacenters not on our P2P network\n\nThe P2P network is not a LAN.  It was not suggested that miners download the mempool over a WAN.  The referenced, driving use case is miners who requested this feature, with almost everyone else defaulting this feature 'off'   In that context for that user subset, LAN en",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237457855,237457855,
jonasschnelli,2016-08-04T05:42:11Z,"> XORing a key: sigh, ok\n\nI think this could be done in a follow up PR.\n\n> [...] Those concerns seem to be met by remote mempool download also, which @morcos suggested elsewhere in the thread -- and indeed was one original purpose of BIP 35 mempool message -- maintaining miner's mempools and not losing lucrative miner fees due to restart.\n\nIMO BIP35's mempool command is a fingerprinting and ",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237457857,237457857,
sipa,2016-08-04T05:44:44Z,"> Furthermore, miners will inevitably want the fastest solution to node restart\n\nThis PR does not slow down startup. The mempool file is loaded in the background, while the node is already running. Dumping takes a second on my VPS with pretty slow I/O.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237458166,237458166,
MarcoFalke,2016-08-04T09:30:53Z,"> Idea: instead of not loading the mempool file when it's too old, just skip loading entries that have expired by the time we load them. That has the same effect, and is a pure optimization.\n\nAssuming that skipping entries is extremely cheap, I no longer see a benefit in turning the feature off by default.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237502096,237502096,
sipa,2016-08-04T09:34:25Z,"The benefit of turning it off by default is still slightly faster shutdown\n(~1s in my own benchmarks on a slow system with large mempool), and lower\ndisk usage (150 Mbyte by default is not much, but may matter for a pruning\nnode).\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237502972,237502972,
btcdrak,2016-08-04T18:26:20Z,I feel very strongly this feature must be on by default. Not only is it extremely useful with practically no cost; it will have an impact in reducing overall p2p bandwidth consumption. There are a few hundred of nodes that regularly power on and off throughout the day. You could make the flush interval configurable but I don't think that is necessary.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237640559,237640559,
dcousens,2016-08-04T19:44:45Z,">  it will have an impact in reducing overall p2p bandwidth consumption\n\nFor the power cycles you refer to,  [on average] how much of the mempool stays relevant? (no doubt also dependent on maxmempool)\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237662111,237662111,
gmaxwell,2016-08-04T19:59:07Z,Btcdrak showed me some graphs showing that nodes often go on and off throughout the day. \n\nIMO the main benefit to turning it off is eliminating 2mbit/sec worth of extra writing that might reduce the life time of low end flash devices from the periodic writes. Perhaps only disable the periodic writes by default? \n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237665865,237665865,
dcousens,2016-08-04T20:31:02Z,"@gmaxwell certainly even [statoshi inv messages](https://statoshi.info/dashboard/db/p2p-messages?panelId=9&fullscreen) can show you there exists a 12 hourly periodical cycle for a large number of bitcoin P2P nodes.   But arguing that some proportion of that could be ""smoothed"" by this feature I think might be a stretch.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237674121,237674121,
gmaxwell,2016-08-05T00:01:40Z,"@dcousens For BIP152 I observed that the obvious damage to the hitrate took about 12 hours to go away. so I'd imagine that benefits for bandwidth for preserving the mempool last that long. In theory they could last arbitrarily deep, though we can't do compact block fetches of blocks far from the tip currently. (Right now it's limited to ten blocks back from the tip IIRC).\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-237721299,237721299,
rebroad,2016-09-01T07:27:30Z,"I had been testing this for the last week or so, but I've had to remove it from my branch as it was causing strange behaviour - i.e. I couldn't close the main GUI window, and although nodes were still being connected to, no blocks were being downloaded. bisect on both times this happened identified it to be the merge with this branch.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-243998133,243998133,
gmaxwell,2016-09-09T21:45:29Z,Needs rebase.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-246049444,246049444,
gmaxwell,2016-10-18T03:21:04Z,"0.14 is calling and it wants this functionality, trolls be damned.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254396337,254396337,
morcos,2016-10-18T03:46:08Z,I'd really prefer if the every 10 minute scheduled dump was removed.\nI think useful features are:\n1. dump on clean shutdown\n2. dump on rpc request\n3. saving of prioritized transactions either via using 2 manually or a separate mechanism in the event of a crash\n\nThe idea of not being able to get any of those benefits without having to write 100MB+ every 10 minutes kind of bothers me...\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254399191,254399191,
gmaxwell,2016-10-18T03:51:27Z,If there is an rpc request and you want 10 minute snapshots you just one while true; do bitcoin-cli snap ; sleep 600 ; done  away from it.\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254399826,254399826,
btcdrak,2016-10-18T07:05:58Z,"ACK on regular sync, system requirements are very low and the benefits are high. Worrying about a ~300MB file write every 10 minutes seems like micro optimisation to me. Would concerns go away if it was every 20 mins instead?\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254424416,254424416,
laanwj,2016-10-18T21:10:53Z,"I agree with @morcos. I'd also prefer not to do the automatic periodic writing, but just on shutdown, and when prompted through RPC. Bitcoind generates enough I/O as it is :( Could enable this only when there is prioritization data to save in the first place?\n\nIf it is to be enabled by default, at the least there needs to be an option to disable it, e.g. for when benchmarking/measuring.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254640482,254640482,
sipa,2016-10-18T21:21:42Z,"Ok, I'll remove the automatic dumping.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-254643110,254643110,
gmaxwell,2016-10-31T01:48:43Z,@sipa ping\n,https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-257197661,257197661,
sipa,2016-10-31T07:04:30Z,"Rebased with the following changes:\n- Several nits addressed (missing lock, add version constant, no big screamy errors on failure).\n- Periodic dump is gone; it only happens at shutdown now.\n- Expired entries are skipped on load (making a load of a week-old mempool.dat instantaneous).\n\nXORed dump is not implemented, this can be done later. As the regular dump seemed controversial, I've remove",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-257226360,257226360,
paveljanik,2016-11-01T08:35:21Z,"ACK https://github.com/bitcoin/bitcoin/pull/8448/commits/582068aa907127c12db53fbd65667dc7810d42b0\n\nXOR dumping nit can be ignored now, because we are dumping mempool on shutdown only.\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-257513951,257513951,
morcos,2016-11-11T14:55:21Z,"@sipa sorry for commenting on this late, but could we have made it a bit more efficient by storing mapDeltas before the transactions, so then we don't have to do 2 loops of prioritiseTransaction?  not sure if its worth it to change now....  \n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-259973972,259973972,
paveljanik,2016-11-11T20:24:09Z,"@morcos This is not in released version, so I think if there is a benefit, we can still change it. And of course, we can safely ignore this file every time...\n",https://github.com/bitcoin/bitcoin/pull/8448#issuecomment-260047540,260047540,
laanwj,2016-08-03T06:58:29Z,`.string().c_str()`\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289150,73289150,src/main.cpp
laanwj,2016-08-03T06:59:40Z,"I don't think missing this file should be an error. I remember users being confused by errors about other files missing (peers.dat), which are simply generated by the application anyhow.\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289274,73289274,src/main.cpp
laanwj,2016-08-03T07:00:59Z,Please use a constant `MEMPOOL_DUMP_VERSION` or so\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289367,73289367,src/main.cpp
sipa,2016-08-03T07:02:42Z,Good point.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289502,73289502,src/main.cpp
sipa,2016-08-03T07:02:48Z,Seems to work fine?\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289509,73289509,src/main.cpp
paveljanik,2016-08-03T07:06:24Z,"Nono, travis failed because of this (https://travis-ci.org/bitcoin/bitcoin/jobs/149377465#L2149).\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73289794,73289794,src/main.cpp
dcousens,2016-08-03T07:57:53Z,"~~IIRC the `fopen` parameters are `restrict` (or often are in the impl),  and assumed to be there for the lifetime of the file pointer... I don't think this temporary holds those variants and might cause UB?~~\n\n~~I could be wrong.~~\n**edit**: that may only be in the C standard, not C++\n\nI suspect it is completely irrelevant,  seeing how prevalent this pattern is throughout the code.\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73295279,73295279,src/main.cpp
jonasschnelli,2016-08-04T15:59:30Z,Seems to require holding `cs_main`.\n`AcceptToMemoryPoolWorker` has a `AssertLockHeld(cs_main);`\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r73550951,73550951,src/main.cpp
luke-jr,2016-10-04T21:12:53Z,IMO should do this after shutting down external interfaces (ZMQ).\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81855123,81855123,src/init.cpp
luke-jr,2016-10-04T21:13:55Z,"If we're going to dereference scheduler unconditionally, it should be passed as a reference rather than a pointer.\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81855313,81855313,src/init.cpp
luke-jr,2016-10-04T21:16:19Z,What is the reasoning for using the reorg'd-out block timestamp as the accept time? Seems like it might defeat the purpose of resurrecting it in the first place?\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81855782,81855782,src/main.cpp
luke-jr,2016-10-04T21:20:53Z,Maybe the mempoolentry should just support serialisation?\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81856635,81856635,src/main.cpp
luke-jr,2016-10-04T21:24:28Z,"This is missing priority deltas, which are currently _only_ stored in mempool.mapDeltas (not on individual entries).\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81857315,81857315,src/main.cpp
luke-jr,2016-10-04T21:26:42Z,This might silently coerce boolean values intended for fOverrideMempoolLimit into nTime in merging code. Better to just put nTime at the end (or before an object that won't coerce to/from it).\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r81857689,81857689,src/main.h
sipa,2016-10-31T06:26:42Z,"restrict means the argument is assumed not to alias any other parameter, I think?\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85690242,85690242,src/main.cpp
sipa,2016-10-31T06:35:04Z,"That would be ugly. It's an internal data structure with various indexes associated to it. It's not the mempool entry that is stored - if it were, we wouldn't need ATMP to load it back.\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85690655,85690655,src/main.cpp
sipa,2016-10-31T06:46:55Z,Good point.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691288,85691288,src/main.cpp
sipa,2016-10-31T06:47:03Z,I don't care.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691293,85691293,src/main.cpp
sipa,2016-10-31T06:47:30Z,I'm dropping the scheduler in a rebase.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691321,85691321,src/init.cpp
sipa,2016-10-31T06:47:39Z,Why?\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691327,85691327,src/init.cpp
sipa,2016-10-31T06:47:55Z,Will do.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691340,85691340,src/main.cpp
sipa,2016-10-31T06:48:20Z,"Good point, will fix.\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691362,85691362,src/main.cpp
sipa,2016-10-31T06:48:49Z,Good point. I'll ad a temporary separate wrapper function for now.\n,https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85691389,85691389,src/main.h
paveljanik,2016-11-01T08:33:04Z,"This results in\n\n```\n2016-11-01 08:30:08 Dumped mempool: 1.9e-05s to copy, 0.006452s to dump\n```\n\nhere on testnet. What about using ms instead?\n",https://github.com/bitcoin/bitcoin/pull/8448#discussion_r85890340,85890340,src/main.cpp
