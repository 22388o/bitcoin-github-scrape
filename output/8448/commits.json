[
  {
    "sha": "c3efb586223c0459cdb47913375c2df805be925e",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjM2VmYjU4NjIyM2MwNDU5Y2RiNDc5MTMzNzVjMmRmODA1YmU5MjVl",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-07-31T18:53:17Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T06:12:09Z"
      },
      "message": "Add feedelta to TxMempoolInfo",
      "tree": {
        "sha": "7da677b8eafc769cde40cae86ac71474c82d5adc",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/7da677b8eafc769cde40cae86ac71474c82d5adc"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/c3efb586223c0459cdb47913375c2df805be925e",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3efb586223c0459cdb47913375c2df805be925e",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/c3efb586223c0459cdb47913375c2df805be925e",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3efb586223c0459cdb47913375c2df805be925e/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "d2143dc937e3fc93fd35def25a9c0461f26ccd4f",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/d2143dc937e3fc93fd35def25a9c0461f26ccd4f",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/d2143dc937e3fc93fd35def25a9c0461f26ccd4f"
      }
    ],
    "stats": {
      "total": 11,
      "additions": 9,
      "deletions": 2
    },
    "files": [
      {
        "sha": "313d33507f32914bbfa2e89866b97414e6f7c9ec",
        "filename": "src/txmempool.cpp",
        "status": "modified",
        "additions": 6,
        "deletions": 2,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3efb586223c0459cdb47913375c2df805be925e/src/txmempool.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3efb586223c0459cdb47913375c2df805be925e/src/txmempool.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.cpp?ref=c3efb586223c0459cdb47913375c2df805be925e",
        "patch": "@@ -833,6 +833,10 @@ void CTxMemPool::queryHashes(vector<uint256>& vtxid)\n     }\n }\n \n+static TxMempoolInfo GetInfo(CTxMemPool::indexed_transaction_set::const_iterator it) {\n+    return TxMempoolInfo{it->GetSharedTx(), it->GetTime(), CFeeRate(it->GetFee(), it->GetTxSize()), it->GetModifiedFee() - it->GetFee()};\n+}\n+\n std::vector<TxMempoolInfo> CTxMemPool::infoAll() const\n {\n     LOCK(cs);\n@@ -841,7 +845,7 @@ std::vector<TxMempoolInfo> CTxMemPool::infoAll() const\n     std::vector<TxMempoolInfo> ret;\n     ret.reserve(mapTx.size());\n     for (auto it : iters) {\n-        ret.push_back(TxMempoolInfo{it->GetSharedTx(), it->GetTime(), CFeeRate(it->GetFee(), it->GetTxSize())});\n+        ret.push_back(GetInfo(it));\n     }\n \n     return ret;\n@@ -862,7 +866,7 @@ TxMempoolInfo CTxMemPool::info(const uint256& hash) const\n     indexed_transaction_set::const_iterator i = mapTx.find(hash);\n     if (i == mapTx.end())\n         return TxMempoolInfo();\n-    return TxMempoolInfo{i->GetSharedTx(), i->GetTime(), CFeeRate(i->GetFee(), i->GetTxSize())};\n+    return GetInfo(i);\n }\n \n CFeeRate CTxMemPool::estimateFee(int nBlocks) const"
      },
      {
        "sha": "9b0ca4655ec3fa557540abdbe2fdb9414892ee33",
        "filename": "src/txmempool.h",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/c3efb586223c0459cdb47913375c2df805be925e/src/txmempool.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/c3efb586223c0459cdb47913375c2df805be925e/src/txmempool.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/txmempool.h?ref=c3efb586223c0459cdb47913375c2df805be925e",
        "patch": "@@ -329,6 +329,9 @@ struct TxMempoolInfo\n \n     /** Feerate of the transaction. */\n     CFeeRate feeRate;\n+\n+    /** The fee delta. */\n+    int64_t nFeeDelta;\n };\n \n /**"
      }
    ]
  },
  {
    "sha": "ced7c949e8648b727c05adccdc2a977f129ca2cd",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzpjZWQ3Yzk0OWU4NjQ4YjcyN2MwNWFkY2NkYzJhOTc3ZjEyOWNhMmNk",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T06:24:41Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T06:24:41Z"
      },
      "message": "Add AcceptToMemoryPoolWithTime function",
      "tree": {
        "sha": "d6c2131d358cdbc678015c5e9fce70ef944dfa1a",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/d6c2131d358cdbc678015c5e9fce70ef944dfa1a"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/ced7c949e8648b727c05adccdc2a977f129ca2cd",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced7c949e8648b727c05adccdc2a977f129ca2cd",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/ced7c949e8648b727c05adccdc2a977f129ca2cd",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced7c949e8648b727c05adccdc2a977f129ca2cd/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "c3efb586223c0459cdb47913375c2df805be925e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/c3efb586223c0459cdb47913375c2df805be925e",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/c3efb586223c0459cdb47913375c2df805be925e"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 15,
      "deletions": 5
    },
    "files": [
      {
        "sha": "ccf7efcf0da5dcf37eb061b95e69ae642362b7f8",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 11,
        "deletions": 5,
        "changes": 16,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ced7c949e8648b727c05adccdc2a977f129ca2cd/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ced7c949e8648b727c05adccdc2a977f129ca2cd/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=ced7c949e8648b727c05adccdc2a977f129ca2cd",
        "patch": "@@ -1135,7 +1135,7 @@ std::string FormatStateMessage(const CValidationState &state)\n }\n \n bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const CTransaction& tx, bool fLimitFree,\n-                              bool* pfMissingInputs, bool fOverrideMempoolLimit, const CAmount& nAbsurdFee,\n+                              bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit, const CAmount& nAbsurdFee,\n                               std::vector<uint256>& vHashTxnToUncache)\n {\n     const uint256 hash = tx.GetHash();\n@@ -1308,7 +1308,7 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n             }\n         }\n \n-        CTxMemPoolEntry entry(tx, nFees, GetTime(), dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue, fSpendsCoinbase, nSigOpsCost, lp);\n+        CTxMemPoolEntry entry(tx, nFees, nAcceptTime, dPriority, chainActive.Height(), pool.HasNoInputsOf(tx), inChainInputValue, fSpendsCoinbase, nSigOpsCost, lp);\n         unsigned int nSize = entry.GetTxSize();\n \n         // Check that the transaction doesn't have an excessive number of\n@@ -1572,18 +1572,24 @@ bool AcceptToMemoryPoolWorker(CTxMemPool& pool, CValidationState& state, const C\n     return true;\n }\n \n-bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n-                        bool* pfMissingInputs, bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n+bool AcceptToMemoryPoolWithTime(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n+                        bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n {\n     std::vector<uint256> vHashTxToUncache;\n-    bool res = AcceptToMemoryPoolWorker(pool, state, tx, fLimitFree, pfMissingInputs, fOverrideMempoolLimit, nAbsurdFee, vHashTxToUncache);\n+    bool res = AcceptToMemoryPoolWorker(pool, state, tx, fLimitFree, pfMissingInputs, nAcceptTime, fOverrideMempoolLimit, nAbsurdFee, vHashTxToUncache);\n     if (!res) {\n         BOOST_FOREACH(const uint256& hashTx, vHashTxToUncache)\n             pcoinsTip->Uncache(hashTx);\n     }\n     return res;\n }\n \n+bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n+                        bool* pfMissingInputs, bool fOverrideMempoolLimit, const CAmount nAbsurdFee)\n+{\n+    return AcceptToMemoryPoolWithTime(pool, state, tx, fLimitFree, pfMissingInputs, GetTime(), fOverrideMempoolLimit, nAbsurdFee);\n+}\n+\n /** Return transaction in txOut, and if it was found inside a block, its hash is placed in hashBlock */\n bool GetTransaction(const uint256 &hash, CTransaction &txOut, const Consensus::Params& consensusParams, uint256 &hashBlock, bool fAllowSlow)\n {"
      },
      {
        "sha": "5a3af52fed02d716c2b1db256e0e1ccf76b88388",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 4,
        "deletions": 0,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/ced7c949e8648b727c05adccdc2a977f129ca2cd/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/ced7c949e8648b727c05adccdc2a977f129ca2cd/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=ced7c949e8648b727c05adccdc2a977f129ca2cd",
        "patch": "@@ -291,6 +291,10 @@ void PruneAndFlush();\n bool AcceptToMemoryPool(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n                         bool* pfMissingInputs, bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n \n+/** (try to) add transaction to memory pool with a specified acceptance time **/\n+bool AcceptToMemoryPoolWithTime(CTxMemPool& pool, CValidationState &state, const CTransaction &tx, bool fLimitFree,\n+                        bool* pfMissingInputs, int64_t nAcceptTime, bool fOverrideMempoolLimit=false, const CAmount nAbsurdFee=0);\n+\n /** Convert CValidationState to a human-readable message for logging */\n std::string FormatStateMessage(const CValidationState &state);\n "
      }
    ]
  },
  {
    "sha": "3f78562df5e86a2a0a21812047fc3a7db8cee988",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzozZjc4NTYyZGY1ZTg2YTJhMGEyMTgxMjA0N2ZjM2E3ZGI4Y2VlOTg4",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T06:53:38Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T07:10:36Z"
      },
      "message": "Add DumpMempool and LoadMempool",
      "tree": {
        "sha": "44ef06335547c3314542061669a18ebe7bef29c4",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/44ef06335547c3314542061669a18ebe7bef29c4"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/3f78562df5e86a2a0a21812047fc3a7db8cee988",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f78562df5e86a2a0a21812047fc3a7db8cee988",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/3f78562df5e86a2a0a21812047fc3a7db8cee988",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f78562df5e86a2a0a21812047fc3a7db8cee988/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "ced7c949e8648b727c05adccdc2a977f129ca2cd",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/ced7c949e8648b727c05adccdc2a977f129ca2cd",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/ced7c949e8648b727c05adccdc2a977f129ca2cd"
      }
    ],
    "stats": {
      "total": 122,
      "additions": 122,
      "deletions": 0
    },
    "files": [
      {
        "sha": "efaf821f4feb5df164626186120d021aed673d41",
        "filename": "src/init.cpp",
        "status": "modified",
        "additions": 3,
        "deletions": 0,
        "changes": 3,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/init.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/init.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/init.cpp?ref=3f78562df5e86a2a0a21812047fc3a7db8cee988",
        "patch": "@@ -207,6 +207,7 @@ void Shutdown()\n \n     StopTorControl();\n     UnregisterNodeSignals(GetNodeSignals());\n+    DumpMempool();\n \n     if (fFeeEstimatesInitialized)\n     {\n@@ -659,6 +660,8 @@ void ThreadImport(std::vector<boost::filesystem::path> vImportFiles)\n         LogPrintf(\"Stopping after block import\\n\");\n         StartShutdown();\n     }\n+\n+    LoadMempool();\n }\n \n /** Sanity checks"
      },
      {
        "sha": "11abc0d175879d528cc03ab484318461ad0cf81f",
        "filename": "src/main.cpp",
        "status": "modified",
        "additions": 113,
        "deletions": 0,
        "changes": 113,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/main.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/main.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.cpp?ref=3f78562df5e86a2a0a21812047fc3a7db8cee988",
        "patch": "@@ -6935,6 +6935,119 @@ int VersionBitsTipStateSinceHeight(const Consensus::Params& params, Consensus::D\n     return VersionBitsStateSinceHeight(chainActive.Tip(), params, pos, versionbitscache);\n }\n \n+static const uint64_t MEMPOOL_DUMP_VERSION = 1;\n+\n+bool LoadMempool(void)\n+{\n+    int64_t nExpiryTimeout = GetArg(\"-mempoolexpiry\", DEFAULT_MEMPOOL_EXPIRY) * 60 * 60;\n+    FILE* filestr = fopen((GetDataDir() / \"mempool.dat\").string().c_str(), \"r\");\n+    CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n+    if (file.IsNull()) {\n+        LogPrintf(\"Failed to open mempool file from disk. Continuing anyway.\\n\");\n+        return false;\n+    }\n+\n+    int64_t count = 0;\n+    int64_t skipped = 0;\n+    int64_t failed = 0;\n+    int64_t nNow = GetTime();\n+\n+    try {\n+        uint64_t version;\n+        file >> version;\n+        if (version != MEMPOOL_DUMP_VERSION) {\n+            return false;\n+        }\n+        uint64_t num;\n+        file >> num;\n+        double prioritydummy = 0;\n+        while (num--) {\n+            CTransaction tx;\n+            int64_t nTime;\n+            int64_t nFeeDelta;\n+            file >> tx;\n+            file >> nTime;\n+            file >> nFeeDelta;\n+\n+            CAmount amountdelta = nFeeDelta;\n+            if (amountdelta) {\n+                mempool.PrioritiseTransaction(tx.GetHash(), tx.GetHash().ToString(), prioritydummy, amountdelta);\n+            }\n+            CValidationState state;\n+            if (nTime + nExpiryTimeout > nNow) {\n+                LOCK(cs_main);\n+                AcceptToMemoryPoolWithTime(mempool, state, tx, true, NULL, nTime);\n+                if (state.IsValid()) {\n+                    ++count;\n+                } else {\n+                    ++failed;\n+                }\n+            } else {\n+                ++skipped;\n+            }\n+        }\n+        std::map<uint256, CAmount> mapDeltas;\n+        file >> mapDeltas;\n+\n+        for (const auto& i : mapDeltas) {\n+            mempool.PrioritiseTransaction(i.first, i.first.ToString(), prioritydummy, i.second);\n+        }\n+    } catch (const std::exception& e) {\n+        LogPrintf(\"Failed to deserialize mempool data on disk: %s. Continuing anyway.\\n\", e.what());\n+        return false;\n+    }\n+\n+    LogPrintf(\"Imported mempool transactions from disk: %i successes, %i failed, %i expired\\n\", count, failed, skipped);\n+    return true;\n+}\n+\n+void DumpMempool(void)\n+{\n+    int64_t start = GetTimeMicros();\n+\n+    std::map<uint256, CAmount> mapDeltas;\n+    std::vector<TxMempoolInfo> vinfo;\n+\n+    {\n+        LOCK(mempool.cs);\n+        for (const auto &i : mempool.mapDeltas) {\n+            mapDeltas[i.first] = i.second.first;\n+        }\n+        vinfo = mempool.infoAll();\n+    }\n+\n+    int64_t mid = GetTimeMicros();\n+\n+    try {\n+        FILE* filestr = fopen((GetDataDir() / \"mempool.dat.new\").string().c_str(), \"w\");\n+        if (!filestr) {\n+            return;\n+        }\n+\n+        CAutoFile file(filestr, SER_DISK, CLIENT_VERSION);\n+\n+        uint64_t version = MEMPOOL_DUMP_VERSION;\n+        file << version;\n+\n+        file << (uint64_t)vinfo.size();\n+        for (const auto& i : vinfo) {\n+            file << *(i.tx);\n+            file << (int64_t)i.nTime;\n+            file << (int64_t)i.nFeeDelta;\n+            mapDeltas.erase(i.tx->GetHash());\n+        }\n+\n+        file << mapDeltas;\n+        FileCommit(file.Get());\n+        file.fclose();\n+        RenameOver(GetDataDir() / \"mempool.dat.new\", GetDataDir() / \"mempool.dat\");\n+        int64_t last = GetTimeMicros();\n+        LogPrintf(\"Dumped mempool: %gs to copy, %gs to dump\\n\", (mid-start)*0.000001, (last-mid)*0.000001);\n+    } catch (const std::exception& e) {\n+        LogPrintf(\"Failed to dump mempool: %s. Continuing anyway.\\n\", e.what());\n+    }\n+}\n+\n class CMainCleanup\n {\n public:"
      },
      {
        "sha": "4c6af9514206c89af50d19bb590afa2ba21f6009",
        "filename": "src/main.h",
        "status": "modified",
        "additions": 6,
        "deletions": 0,
        "changes": 6,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/main.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/3f78562df5e86a2a0a21812047fc3a7db8cee988/src/main.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/main.h?ref=3f78562df5e86a2a0a21812047fc3a7db8cee988",
        "patch": "@@ -533,6 +533,12 @@ static const unsigned int REJECT_ALREADY_KNOWN = 0x101;\n /** Transaction conflicts with a transaction already known */\n static const unsigned int REJECT_CONFLICT = 0x102;\n \n+/** Dump the mempool to disk. */\n+void DumpMempool();\n+\n+/** Load the mempool from disk. */\n+bool LoadMempool();\n+\n // The following things handle network-processing logic\n // (and should be moved to a separate file)\n "
      }
    ]
  },
  {
    "sha": "582068aa907127c12db53fbd65667dc7810d42b0",
    "node_id": "MDY6Q29tbWl0MTE4MTkyNzo1ODIwNjhhYTkwNzEyN2MxMmRiNTNmYmQ2NTY2N2RjNzgxMGQ0MmIw",
    "commit": {
      "author": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T07:07:56Z"
      },
      "committer": {
        "name": "Pieter Wuille",
        "email": "pieter.wuille@gmail.com",
        "date": "2016-10-31T07:10:36Z"
      },
      "message": "Add mempool.dat to doc/files.md",
      "tree": {
        "sha": "32676261289e4de25d21b83f63ae75c57be79786",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/32676261289e4de25d21b83f63ae75c57be79786"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/582068aa907127c12db53fbd65667dc7810d42b0",
      "comment_count": 0,
      "verification": {
        "verified": false,
        "reason": "unsigned",
        "signature": null,
        "payload": null
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/582068aa907127c12db53fbd65667dc7810d42b0",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/582068aa907127c12db53fbd65667dc7810d42b0",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/582068aa907127c12db53fbd65667dc7810d42b0/comments",
    "author": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "sipa",
      "id": 548488,
      "node_id": "MDQ6VXNlcjU0ODQ4OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/548488?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sipa",
      "html_url": "https://github.com/sipa",
      "followers_url": "https://api.github.com/users/sipa/followers",
      "following_url": "https://api.github.com/users/sipa/following{/other_user}",
      "gists_url": "https://api.github.com/users/sipa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sipa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sipa/subscriptions",
      "organizations_url": "https://api.github.com/users/sipa/orgs",
      "repos_url": "https://api.github.com/users/sipa/repos",
      "events_url": "https://api.github.com/users/sipa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sipa/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "3f78562df5e86a2a0a21812047fc3a7db8cee988",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/3f78562df5e86a2a0a21812047fc3a7db8cee988",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/3f78562df5e86a2a0a21812047fc3a7db8cee988"
      }
    ],
    "stats": {
      "total": 1,
      "additions": 1,
      "deletions": 0
    },
    "files": [
      {
        "sha": "928977143be3b3e470593884b63d4e086bcb315d",
        "filename": "doc/files.md",
        "status": "modified",
        "additions": 1,
        "deletions": 0,
        "changes": 1,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/582068aa907127c12db53fbd65667dc7810d42b0/doc/files.md",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/582068aa907127c12db53fbd65667dc7810d42b0/doc/files.md",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/doc/files.md?ref=582068aa907127c12db53fbd65667dc7810d42b0",
        "patch": "@@ -10,6 +10,7 @@\n * db.log: wallet database log file\n * debug.log: contains debug information and general logging generated by bitcoind or bitcoin-qt\n * fee_estimates.dat: stores statistics used to estimate minimum transaction fees and priorities required for confirmation; since 0.10.0\n+* mempool.dat: dump of the mempool's transactions; since 0.14.0.\n * peers.dat: peer IP address database (custom format); since 0.7.0\n * wallet.dat: personal wallet (BDB) with keys and transactions\n * .cookie: session RPC authentication cookie (written at start when cookie authentication is used, deleted on shutdown): since 0.12.0"
      }
    ]
  }
]