[
  {
    "sha": "2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
    "node_id": "C_kwDOABII59oAKDJlNGE2Y2QzYzhlYjhmYWZkOTQwODE0ZjVmMTFhMThhNTMwNjAxODU",
    "commit": {
      "author": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-23T13:49:18Z"
      },
      "committer": {
        "name": "Jon Atack",
        "email": "jon@atack.com",
        "date": "2021-09-23T14:42:31Z"
      },
      "message": "Pass CFeeRate and CTxMemPool in-params by reference to const\n\nand add missing feerate and txmempool headers",
      "tree": {
        "sha": "6e5a8e998fca6f6a7d84cf2a3e6df218308fc62e",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/git/trees/6e5a8e998fca6f6a7d84cf2a3e6df218308fc62e"
      },
      "url": "https://api.github.com/repos/bitcoin/bitcoin/git/commits/2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
      "comment_count": 0,
      "verification": {
        "verified": true,
        "reason": "valid",
        "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEd6u7+MhX7zEv6RP5T1chs9Djkh0FAmFMknkACgkQT1chs9Dj\nkh2ZZQ//QT8N17Karn/vFAOT22uw+IeXldrpP90eyomEkOIN8ClJEq7+FRUTpmMS\ndZSih2r8fxMGGpZ50/c5tpIn0mQ1KmU1EW4xuW5FGkkt2lb6ImMY3e4iU/eONMBW\nlpX3qNBbC7xIHHtQ5w5beCE6WJyDw0FVu3iuX9t/RVjRizRE04k8RylBQx0EcK0x\nRHIPotlcwlHdLU2gK8tDZuJJUZdhUBXq7GFoljUNoIYGAyJvB1hNZy3IXlI6OSO+\ne7RrxBSHMCkhU+iIn7PvBYSGGl5FX2Ss+jzegFpvZZkXrETNQ0yF5SIuYh2npBEA\nKEq4QEjQjqW41dQlv5LL8IAual0RexHzKuORO3ByK3EXFKjUac1jKJzLje7JjwV/\nfGyuthX0/nBkCh+kn041kjvl0LWKABp1lzcM5fJCQ61MnqnI+3nQEblkbxzrXQfz\n8VHmBqOze6nIwytx2a2FopEIeMWGL3AZmBAhQ96gaephZ0S60G7wv/VpmB90jzT4\nQjWPhS+l5g9WwxS3jD9v4M1ToPNHla8hyPo7LwQPpbiagtq4uhi2ts8AKKtfevdC\ndddgJfaj76C8zjC8ZV1OEDF5AGkBDshHKVZd81kt0zAibx46kmjCpgFYr+jmCPKx\nhZh0hilkSL+Z2slRKWQtYddhOmPnLp09pNA9Pn7mw09xzVUlMwM=\n=3hfK\n-----END PGP SIGNATURE-----\n-----BEGIN OPENTIMESTAMPS GIT TIMESTAMP-----\n\nAQHwIJDjKASFTwhcJVyli0iA7PKe6w/9Xv0uuHOehIdtGu9ECP/wEApdNkmcQGrO\nL9EZ9dafUvcI8QRhTJJ68AiFzp1asZ8FiwCD3+MNLvkMjiwraHR0cHM6Ly9ib2Iu\nYnRjLmNhbGVuZGFyLm9wZW50aW1lc3RhbXBzLm9yZ//wEG/hsI4lJ3fyIbb9p1c5\nzPQI8QRhTJJ68AiitI9iWUY8XQCD3+MNLvkMjiMiaHR0cHM6Ly9idGMuY2FsZW5k\nYXIuY2F0YWxsYXh5LmNvbf/wEJizb4PoE1c6s1VH21qfB38I8CAc/K24wlpev2sn\nlvF/2UNpnOWLNlZv5QULUigz73Z68wjxBGFMknvwCMbzMFKaqbPnAIPf4w0u+QyO\nLi1odHRwczovL2FsaWNlLmJ0Yy5jYWxlbmRhci5vcGVudGltZXN0YW1wcy5vcmfw\nEMh0vgcoXIXBqGPxc8/CeuwI8SDp4FZKlNoq4eaoBlkZN6ElrPv1BA4xEFZBFTFf\nfgvSXAjxBGFMknrwCO0JhmvBU9y5AIPf4w0u+QyOKShodHRwczovL2Zpbm5leS5j\nYWxlbmRhci5ldGVybml0eXdhbGwuY29t\n-----END OPENTIMESTAMPS GIT TIMESTAMP-----",
        "payload": "tree 6e5a8e998fca6f6a7d84cf2a3e6df218308fc62e\nparent cdce149050c9e2db9276972d3512e0db0abd06af\nauthor Jon Atack <jon@atack.com> 1632404958 +0200\ncommitter Jon Atack <jon@atack.com> 1632408151 +0200\n\nPass CFeeRate and CTxMemPool in-params by reference to const\n\nand add missing feerate and txmempool headers\n"
      }
    },
    "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
    "html_url": "https://github.com/bitcoin/bitcoin/commit/2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
    "comments_url": "https://api.github.com/repos/bitcoin/bitcoin/commits/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/comments",
    "author": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "jonatack",
      "id": 2415484,
      "node_id": "MDQ6VXNlcjI0MTU0ODQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2415484?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jonatack",
      "html_url": "https://github.com/jonatack",
      "followers_url": "https://api.github.com/users/jonatack/followers",
      "following_url": "https://api.github.com/users/jonatack/following{/other_user}",
      "gists_url": "https://api.github.com/users/jonatack/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jonatack/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jonatack/subscriptions",
      "organizations_url": "https://api.github.com/users/jonatack/orgs",
      "repos_url": "https://api.github.com/users/jonatack/repos",
      "events_url": "https://api.github.com/users/jonatack/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jonatack/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "cdce149050c9e2db9276972d3512e0db0abd06af",
        "url": "https://api.github.com/repos/bitcoin/bitcoin/commits/cdce149050c9e2db9276972d3512e0db0abd06af",
        "html_url": "https://github.com/bitcoin/bitcoin/commit/cdce149050c9e2db9276972d3512e0db0abd06af"
      }
    ],
    "stats": {
      "total": 20,
      "additions": 12,
      "deletions": 8
    },
    "files": [
      {
        "sha": "0d1e4c2a28d29a1f53966935ee8e82f78377b2f1",
        "filename": "src/policy/rbf.cpp",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/policy/rbf.cpp",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/policy/rbf.cpp",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.cpp?ref=2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
        "patch": "@@ -4,8 +4,10 @@\n \n #include <policy/rbf.h>\n \n+#include <policy/feerate.h>\n #include <policy/settings.h>\n #include <tinyformat.h>\n+#include <txmempool.h>\n #include <util/moneystr.h>\n #include <util/rbf.h>\n \n@@ -48,7 +50,7 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx)\n }\n \n std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx,\n-                                                  CTxMemPool& pool,\n+                                                  const CTxMemPool& pool,\n                                                   const CTxMemPool::setEntries& iters_conflicting,\n                                                   CTxMemPool::setEntries& all_conflicts)\n {\n@@ -123,7 +125,7 @@ std::optional<std::string> EntriesAndTxidsDisjoint(const CTxMemPool::setEntries&\n }\n \n std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& iters_conflicting,\n-                                                 CFeeRate replacement_feerate,\n+                                                 const CFeeRate& replacement_feerate,\n                                                  const uint256& txid)\n {\n     for (const auto& mi : iters_conflicting) {\n@@ -151,7 +153,7 @@ std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& i\n std::optional<std::string> PaysForRBF(CAmount original_fees,\n                                       CAmount replacement_fees,\n                                       size_t replacement_vsize,\n-                                      CFeeRate relay_fee,\n+                                      const CFeeRate& relay_fee,\n                                       const uint256& txid)\n {\n     // BIP125 Rule #3: The replacement fees must be greater than or equal to fees of the"
      },
      {
        "sha": "470b5b63f73abf55c4cd4538f80447116e0d148f",
        "filename": "src/policy/rbf.h",
        "status": "modified",
        "additions": 5,
        "deletions": 3,
        "changes": 8,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/policy/rbf.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/policy/rbf.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/policy/rbf.h?ref=2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
        "patch": "@@ -5,6 +5,7 @@\n #ifndef BITCOIN_POLICY_RBF_H\n #define BITCOIN_POLICY_RBF_H\n \n+#include <policy/feerate.h>\n #include <primitives/transaction.h>\n #include <txmempool.h>\n #include <uint256.h>\n@@ -50,7 +51,7 @@ RBFTransactionState IsRBFOptInEmptyMempool(const CTransaction& tx);\n  *                                  the start; any existing mempool entries will remain in the set.\n  * @returns an error message if Rule #5 is broken, otherwise a std::nullopt.\n  */\n-std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx, CTxMemPool& pool,\n+std::optional<std::string> GetEntriesForConflicts(const CTransaction& tx, const CTxMemPool& pool,\n                                                   const CTxMemPool::setEntries& iters_conflicting,\n                                                   CTxMemPool::setEntries& all_conflicts)\n     EXCLUSIVE_LOCKS_REQUIRED(pool.cs);\n@@ -81,7 +82,8 @@ std::optional<std::string> EntriesAndTxidsDisjoint(const CTxMemPool::setEntries&\n  * @returns error message if fees insufficient, otherwise std::nullopt.\n  */\n std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& iters_conflicting,\n-                                                 CFeeRate replacement_feerate, const uint256& txid);\n+                                                 const CFeeRate& replacement_feerate,\n+                                                 const uint256& txid);\n \n /** Enforce BIP125 Rule #3 \"The replacement transaction pays an absolute fee of at least the sum\n  * paid by the original transactions.\" Enforce BIP125 Rule #4 \"The replacement transaction must also\n@@ -96,7 +98,7 @@ std::optional<std::string> PaysMoreThanConflicts(const CTxMemPool::setEntries& i\n std::optional<std::string> PaysForRBF(CAmount original_fees,\n                                       CAmount replacement_fees,\n                                       size_t replacement_vsize,\n-                                      CFeeRate relay_fee,\n+                                      const CFeeRate& relay_fee,\n                                       const uint256& txid);\n \n #endif // BITCOIN_POLICY_RBF_H"
      },
      {
        "sha": "9fd363a8346cb4eb50486c367befa05af66de804",
        "filename": "src/wallet/coinselection.h",
        "status": "modified",
        "additions": 2,
        "deletions": 2,
        "changes": 4,
        "blob_url": "https://github.com/bitcoin/bitcoin/blob/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/wallet/coinselection.h",
        "raw_url": "https://github.com/bitcoin/bitcoin/raw/2e4a6cd3c8eb8fafd940814f5f11a18a53060185/src/wallet/coinselection.h",
        "contents_url": "https://api.github.com/repos/bitcoin/bitcoin/contents/src/wallet/coinselection.h?ref=2e4a6cd3c8eb8fafd940814f5f11a18a53060185",
        "patch": "@@ -85,8 +85,8 @@ struct CoinSelectionParams\n      * reuse. Dust outputs are not eligible to be added to output groups and thus not considered. */\n     bool m_avoid_partial_spends = false;\n \n-    CoinSelectionParams(size_t change_output_size, size_t change_spend_size, CFeeRate effective_feerate,\n-                        CFeeRate long_term_feerate, CFeeRate discard_feerate, size_t tx_noinputs_size, bool avoid_partial) :\n+    CoinSelectionParams(size_t change_output_size, size_t change_spend_size, const CFeeRate& effective_feerate,\n+                        const CFeeRate& long_term_feerate, const CFeeRate& discard_feerate, size_t tx_noinputs_size, bool avoid_partial) :\n         change_output_size(change_output_size),\n         change_spend_size(change_spend_size),\n         m_effective_feerate(effective_feerate),"
      }
    ]
  }
]